### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  id: LinqDataSourceInsertEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  langs:
  - csharp
  name: LinqDataSourceInsertEventArgs
  nameWithType: LinqDataSourceInsertEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Inserting&quot;> </xref> eventos."
  remarks: "O objecto de LinqDataSourceInsertEventArgs é transmitido a qualquer processador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>eventos.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> O <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>propriedade contém os dados que serão inseridos.</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>       Pode utilizar o objeto de LinqDataSourceInsertEventArgs para examinar os dados antes da operação insert é executada na origem de dados. Pode, em seguida, validar os dados, examine os erros de validação da classe de dados ou alterar um valor antes da atualização. Também pode cancelar a operação insert.       Se o objeto que representa a origem de dados emite uma exceção de validação antes de dados, a <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>propriedade contém uma instância de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>classe.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException> </xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> Pode obter todas as exceções de validação através de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>propriedade.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Se é emitida sem exceção de validação, o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A>propriedade contém `null`.</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> Se a processar as exceções de validação e não pretender que a exceção de ser novamente emitida, defina o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_258_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_258_1.vb)]  \n  \n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceInsertEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message + \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Inserting(object sender,   \n        LinqDataSourceInsertEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: 'public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: LinqDataSourceInsertEventArgs(Object)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&quot;> </xref> classe."
  syntax:
    content: public LinqDataSourceInsertEventArgs (object newObject);
    parameters:
    - id: newObject
      type: System.Object
      description: "Um objeto que contém os dados para inserir."
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&quot;> </xref> classe e especifica a exceção fornecida."
  syntax:
    content: public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "A exceção que ocorreram quando os dados de inserção estavam a ser validados."
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceInsertEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Obtém a exceção foi acionada enquanto os dados estavam a ser validados antes da operação insert."
  remarks: "Se é emitida uma exceção de validação antes da operação insert é executada, a exceção é armazenada na propriedade exceção. Um processador para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>eventos, pode obter a exceção através da propriedade de exceção.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting>"
  example:
  - "The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceInsertEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message + \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Inserting(object sender,   \n        LinqDataSourceInsertEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "A exceção, se tiver ocorrido um erro; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se a exceção foi processada e que este não deve ser emitida novamente."
  remarks: "Pode criar processadores de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>eventos para examinar as exceções de validação que ocorreram antes da operação insert.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Se a lidar com a exceção e não pretender que ele ser emitida novamente, defina a propriedade de ExceptionHandled como `true`. Se definir a propriedade ExceptionHandled `true`, a exceção será propagada para o processador de eventos seguinte na pilha de chamadas."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceInsertEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message + \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Inserting(object sender,   \n        LinqDataSourceInsertEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a exceção foi processada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  id: NewObject
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: NewObject
  nameWithType: LinqDataSourceInsertEventArgs.NewObject
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Obtém o objeto que contém os dados para inserir."
  remarks: "A propriedade NewObject contém os dados que irão ser inseridos na origem de dados. Criar um processador para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>eventos e obter a propriedade NewObject para validar os dados, alterar os dados, ou cancele a operação de inserção, antes de é executada a operação de dados.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting>       A propriedade NewObject devolve um objeto do tipo <xref:System.Object>.</xref:System.Object> Pode converter este objeto para o tipo de classe que representa os dados."
  example:
  - "The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The object from the NewObject property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_170_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_170_1.vb)]"
  syntax:
    content: public object NewObject { get; }
    return:
      type: System.Object
      description: "Um objeto que contém os dados para inserir."
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: LinqDataSourceInsertEventArgs(Object)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceInsertEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: NewObject
  nameWithType: LinqDataSourceInsertEventArgs.NewObject
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: LinqDataSourceInsertEventArgs
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceInsertEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: NewObject
  nameWithType: LinqDataSourceInsertEventArgs.NewObject
