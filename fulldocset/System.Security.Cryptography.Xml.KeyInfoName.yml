### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.KeyInfoName
  id: KeyInfoName
  children:
  - System.Security.Cryptography.Xml.KeyInfoName.#ctor
  - System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)
  - System.Security.Cryptography.Xml.KeyInfoName.GetXml
  - System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.KeyInfoName.Value
  langs:
  - csharp
  name: KeyInfoName
  nameWithType: KeyInfoName
  fullName: System.Security.Cryptography.Xml.KeyInfoName
  type: Class
  summary: "Representa um <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> subelemento de uma XMLDSIG ou XML encriptação <xref uid=&quot;langword_csharp_&lt;KeyInfo&gt;&quot; name=&quot;&lt;KeyInfo&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "O `<KeyName>` elemento contém um identificador de cadeia que a entidade validar ou desencriptar um documento XML utiliza para identificar a chave correspondente.  Por exemplo, se receber um documento XML encriptado ou assinado com um `<KeyName>` o valor do elemento de &quot;AsymmetricKey1&quot;, utilizará uma chave que é e o remetente tem com o nome &quot;AsymmetricKey1&quot; para desencriptar ou verifique se o documento.  Ambos os intervenientes têm de aceitar num mapeamento de nome da chave antecedência.  Tenha em atenção que a chave real não está imbedded no documento XML.       Para obter mais informações sobre o `<KeyName>` elemento, consulte a secção 4.4.1 a especificação de XMLDSIG está disponível a partir de Consortium World Wide Web (W3C) em www.w3.org/TR/xmldsig-core/, ou consulte a especificação de encriptação de XML, que está disponível a partir de W3C em www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example uses the KeyInfoName object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/t-system.security.crypto_38_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/t-system.security.crypto_38_1.cpp)]  \n  \n The following code example uses the KeyInfoName object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/t-system.security.crypto_38_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/t-system.security.crypto_38_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_2.vb)]  \n  \n The following code example uses the KeyInfoName object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_38_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/t-system.security.crypto_38_3.cpp)]  \n  \n The following code example uses the KeyInfoName object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_4.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/t-system.security.crypto_38_4.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/t-system.security.crypto_38_4.cpp)]"
  syntax:
    content: 'public class KeyInfoName : System.Security.Cryptography.Xml.KeyInfoClause'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.KeyInfoClause
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: KeyInfoName()
  nameWithType: KeyInfoName.KeyInfoName()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_113_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_113_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_113_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_113_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_2.vb)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_113_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/m-system.security.crypto_113_3.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_4.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/m-system.security.crypto_113_4.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/m-system.security.crypto_113_4.cpp)]"
  syntax:
    content: public KeyInfoName ();
    parameters: []
  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: KeyInfoName(String)
  nameWithType: KeyInfoName.KeyInfoName(String)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> classe ao especificar o identificador de cadeia que é o valor da <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "O `keyName` parâmetro pode conter qualquer cadeia, a interpretação da cadeia é específica para a aplicação. Espaço em branco é significativo no valor de cadeia.       O `keyName` parâmetro especifica o valor do <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A>propriedade.</xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A>"
  syntax:
    content: public KeyInfoName (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "O identificador de cadeia que é o valor da <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: GetXml()
  nameWithType: KeyInfoName.GetXml()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Devolve uma representação XML do <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> objeto."
  remarks: "O <xref:System.Xml.XmlElement>objecto devolvido por este método é adequado para utilização como um subelemento de uma XMLDSIG ou XML encriptação `<KeyInfo>` elemento.</xref:System.Xml.XmlElement>"
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "Uma representação XML do <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.KeyInfoName.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: KeyInfoName.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Analisa a entrada <xref href=&quot;System.Xml.XmlElement&quot;> </xref> de objeto e configura o estado interno do <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> objeto para corresponder."
  remarks: "O método LoadXml é normalmente utilizado para processar um `<KeyName>` subelemento de um `<KeyInfo>` elemento."
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "O <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto que especifica o estado do <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.Value
  id: Value
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: Value
  nameWithType: KeyInfoName.Value
  fullName: System.Security.Cryptography.Xml.KeyInfoName.Value
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o identificador de cadeia contido um <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "A propriedade Value pode conter qualquer cadeia; a interpretação da cadeia é específica para a aplicação. Espaço em branco é significativo no valor de cadeia."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_73_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_73_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_73_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_73_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_2.vb)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_73_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/p-system.security.crypto_73_3.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_4.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/p-system.security.crypto_73_4.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/p-system.security.crypto_73_4.cpp)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "O identificador de cadeia que é o valor da <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Security.Cryptography.Xml.KeyInfoName.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.KeyInfoClause
  isExternal: false
  name: System.Security.Cryptography.Xml.KeyInfoClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: KeyInfoName()
  nameWithType: KeyInfoName.KeyInfoName()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName()
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: KeyInfoName(String)
  nameWithType: KeyInfoName.KeyInfoName(String)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: GetXml()
  nameWithType: KeyInfoName.GetXml()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: KeyInfoName.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.KeyInfoName.Value
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: Value
  nameWithType: KeyInfoName.Value
  fullName: System.Security.Cryptography.Xml.KeyInfoName.Value
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: KeyInfoName
  nameWithType: KeyInfoName.KeyInfoName
- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: GetXml
  nameWithType: KeyInfoName.GetXml
- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: LoadXml
  nameWithType: KeyInfoName.LoadXml
- uid: System.Security.Cryptography.Xml.KeyInfoName.Value*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: Value
  nameWithType: KeyInfoName.Value
