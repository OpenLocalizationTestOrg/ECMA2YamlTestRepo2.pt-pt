### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.TransactionFlowAttribute
  id: TransactionFlowAttribute
  children:
  - System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  - System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  - System.ServiceModel.TransactionFlowAttribute.Transactions
  langs:
  - csharp
  name: TransactionFlowAttribute
  nameWithType: TransactionFlowAttribute
  fullName: System.ServiceModel.TransactionFlowAttribute
  type: Class
  summary: "Specifies whether a service operation accepts incoming transactions from a client."
  remarks: "The TransactionFlowAttribute is an attribute used declaratively to associate a specific transaction flow policy with a service operation. The <xref:System.ServiceModel.TransactionFlowOption> property of this attribute specifies whether the respective operation accepts a transaction flowed from the client, or if the operation requires the client to always flow a transaction. The TransactionFlowAttribute can also be used as an operation behavior to programmatically associate a transaction flow policy with a specific operation. In this case, it should be added to the `Behaviors` collection on the operation’s description.      > [!NOTE] >  The `OperationContract` for each method that uses the TransactionFlowAttribute must provide a fully-qualified `Action` string. A value of &quot;*&quot; is not supported."
  example:
  - "The following code example shows the use of this enumeration together with the <xref:System.ServiceModel.TransactionFlowOption> class at the operation level.  \n  \n```  \nusing System;  \nusing System.ServiceModel;  \nusing System.Transactions;  \n  \nnamespace Microsoft.WCF.Documentation  \n{  \n  [ServiceContract(  \n    Namespace=\"http://microsoft.wcf.documentation\",   \n    SessionMode=SessionMode.Required  \n  )]  \n  public interface IBehaviorService  \n  {  \n    [OperationContract]  \n    [TransactionFlow(TransactionFlowOption.Mandatory)]  \n    string TxWork(string message);  \n  }  \n  \n  // Note: To use the TransactionIsolationLevel property, you   \n  // must add a reference to the System.Transactions.dll assembly.  \n  /* The following service implementation:  \n   *   -- Processes messages on one thread at a time  \n   *   -- Creates one service object per session  \n   *   -- Releases the service object when the transaction commits  \n   */  \n  [ServiceBehavior(  \n    ConcurrencyMode=ConcurrencyMode.Single,  \n    InstanceContextMode=InstanceContextMode.PerSession,  \n    ReleaseServiceInstanceOnTransactionComplete=true  \n  )]  \n  public class BehaviorService : IBehaviorService, IDisposable  \n  {  \n    Guid myID;  \n  \n    public BehaviorService()  \n    {  \n      myID = Guid.NewGuid();  \n      Console.WriteLine(  \n        \"Object \"  \n        + myID.ToString()  \n        + \" created.\");  \n    }  \n  \n    /*  \n    / * The following operation-level behaviors are specified:  \n    / * Always executes under a transaction scope.  \n    / * The transaction scope is completed when the operation  \n    / * terminates without an unhandled exception.  \n    /*  \n    [OperationBehavior(  \n      TransactionAutoComplete = true,  \n      TransactionScopeRequired = true  \n    )]  \n    public string TxWork(string message)  \n    {  \n      // Do some transactable work.  \n      Console.WriteLine(\"TxWork called with: \" + message);  \n      // Display transaction information.  \n  \n      TransactionInformation info = Transaction.Current.TransactionInformation;  \n      Console.WriteLine(\"The distributed tx ID: {0}.\", info.DistributedIdentifier);  \n      Console.WriteLine(\"The tx status: {0}.\", info.Status);  \n      return String.Format(\"Hello. This was object {0}.\",myID.ToString()) ;  \n    }  \n  \n    public void Dispose()  \n    {  \n      Console.WriteLine(  \n        \"Service \"  \n        + myID.ToString()  \n        + \" is being recycled.\"  \n      );  \n    }  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class TransactionFlowAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IOperationBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)
  id: '#ctor(System.ServiceModel.TransactionFlowOption)'
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: TransactionFlowAttribute(TransactionFlowOption)
  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
  fullName: System.ServiceModel.TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.TransactionFlowAttribute&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example shows the use of this enumeration together with the <xref:System.ServiceModel.TransactionFlowOption> class at the operation level.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]"
  syntax:
    content: public TransactionFlowAttribute (System.ServiceModel.TransactionFlowOption transactions);
    parameters:
    - id: transactions
      type: System.ServiceModel.TransactionFlowOption
      description: "A <xref href=&quot;System.ServiceModel.TransactionFlowOption&quot;></xref>."
  overload: System.ServiceModel.TransactionFlowAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Adds extra parameters (settings) to the binding context to support this operation’s behavior. This method cannot be inherited."
  remarks: "This method provides a binding context with the extra parameters (settings) to support the required behavior for this operation. It is called internally by the infrastructure when a service is created."
  syntax:
    content: void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "The operation description for which the attribute adds extra functionality."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "The collection of parameter objects on the binding context."
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Attaches the attribute functionality to the <xref uid=&quot;langword_csharp_ProxyOperation&quot; name=&quot;ProxyOperation&quot; href=&quot;&quot;></xref> object for the method that the attribute marks. This method cannot be inherited."
  remarks: "This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service proxy is created."
  syntax:
    content: void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "The operation to which the attribute attaches functionality."
    - id: proxy
      type: System.ServiceModel.Dispatcher.ClientOperation
      description: "The <xref:System.ServiceModel.Dispatcher.ClientOperation> object that represents the current operation."
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Attaches the attribute functionality to the <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for the method that the attribute marks. This method cannot be inherited."
  remarks: "This method allows you to view, modify, or add custom extensions to the client runtime across all messages, or for a specific operation. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created."
  syntax:
    content: void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "The description for this operation."
    - id: dispatch
      type: System.ServiceModel.Dispatcher.DispatchOperation
      description: "The <xref:System.ServiceModel.Dispatcher.DispatchOperation> object for this operation."
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  id: System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  isEii: true
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Verifies that the operation can support this behavior. This method cannot be inherited."
  remarks: "This method verifies whether the operation description is sufficient to support the transaction flow behavior. Note that in the case of the <xref:System.ServiceModel.TransactionFlowAttribute>, the implementation of this method is empty. This method is called internally by the infrastructure when a service is created."
  syntax:
    content: void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "The operation to validate."
  overload: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.TransactionFlowAttribute.Transactions
  id: Transactions
  parent: System.ServiceModel.TransactionFlowAttribute
  langs:
  - csharp
  name: Transactions
  nameWithType: TransactionFlowAttribute.Transactions
  fullName: System.ServiceModel.TransactionFlowAttribute.Transactions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets a value that indicates whether the incoming transaction is supported."
  syntax:
    content: public System.ServiceModel.TransactionFlowOption Transactions { get; }
    return:
      type: System.ServiceModel.TransactionFlowOption
      description: "A <xref href=&quot;System.ServiceModel.TransactionFlowOption&quot;></xref> that indicates whether the incoming transaction is supported."
  overload: System.ServiceModel.TransactionFlowAttribute.Transactions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: TransactionFlowAttribute(TransactionFlowOption)
  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
  fullName: System.ServiceModel.TransactionFlowAttribute.TransactionFlowAttribute(TransactionFlowOption)
- uid: System.ServiceModel.TransactionFlowOption
  parent: System.ServiceModel
  isExternal: false
  name: TransactionFlowOption
  nameWithType: TransactionFlowOption
  fullName: System.ServiceModel.TransactionFlowOption
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
- uid: System.ServiceModel.Description.OperationDescription
  parent: System.ServiceModel.Description
  isExternal: true
  name: OperationDescription
  nameWithType: OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
- uid: System.ServiceModel.Dispatcher.ClientOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: ClientOperation
  nameWithType: ClientOperation
  fullName: System.ServiceModel.Dispatcher.ClientOperation
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
- uid: System.ServiceModel.Dispatcher.DispatchOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: DispatchOperation
  nameWithType: DispatchOperation
  fullName: System.ServiceModel.Dispatcher.DispatchOperation
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
- uid: System.ServiceModel.TransactionFlowAttribute.Transactions
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: Transactions
  nameWithType: TransactionFlowAttribute.Transactions
  fullName: System.ServiceModel.TransactionFlowAttribute.Transactions
- uid: System.ServiceModel.TransactionFlowAttribute.#ctor*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: TransactionFlowAttribute
  nameWithType: TransactionFlowAttribute.TransactionFlowAttribute
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate
  nameWithType: TransactionFlowAttribute.System.ServiceModel.Description.IOperationBehavior.Validate
- uid: System.ServiceModel.TransactionFlowAttribute.Transactions*
  parent: System.ServiceModel.TransactionFlowAttribute
  isExternal: false
  name: Transactions
  nameWithType: TransactionFlowAttribute.Transactions
