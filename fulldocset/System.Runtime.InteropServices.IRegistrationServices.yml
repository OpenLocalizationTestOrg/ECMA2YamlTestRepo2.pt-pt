### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.IRegistrationServices
  id: IRegistrationServices
  children:
  - System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid
  - System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)
  - System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  - System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  - System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)
  - System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)
  - System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  langs:
  - csharp
  name: IRegistrationServices
  nameWithType: IRegistrationServices
  fullName: System.Runtime.InteropServices.IRegistrationServices
  type: Interface
  summary: "Provides a set of services for registering and unregistering managed assemblies for use from COM."
  remarks: "Registration is needed when the objects within an assembly are being used by COM clients."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("CCBD682C-73A5-4568-B8B0-C7007E11ABA2")]

      public interface IRegistrationServices
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid
  id: GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: GetManagedCategoryGuid()
  nameWithType: IRegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Returns the GUID of the COM category that contains the managed classes."
  syntax:
    content: public Guid GetManagedCategoryGuid ();
    parameters: []
    return:
      type: System.Guid
      description: "To be added."
  overload: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)
  id: GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: GetProgIdForType(Type)
  nameWithType: IRegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retrieves the COM ProgID for a specified type."
  syntax:
    content: public string GetProgIdForType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type whose ProgID is being requested."
    return:
      type: System.String
      description: "To be added."
  overload: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  id: GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retrieves a list of classes in an assembly that would be registered by a call to &lt;xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A&gt;."
  syntax:
    content: public Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "The assembly to search for classes."
    return:
      type: System.Type[]
      description: "To be added."
  overload: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  id: RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Registers the classes in a managed assembly to enable creation from COM."
  remarks: "`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly. This method also calls any registration functions found in the assembly.       Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly."
  syntax:
    content: public bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "The assembly to be registered."
    - id: flags
      type: System.Runtime.InteropServices.AssemblyRegistrationFlags
      description: "An  value indicating any special settings needed when registering `assembly`."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    assembly is ."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The full name of assembly is .       -or-       A method marked with  is not .       -or-       There is more than one method marked with  at a given level of the hierarchy.       -or-       The signature of the method marked with  is not valid."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  id: RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: IRegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(Type,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Registers the specified type with COM using the specified GUID."
  remarks: "This method is equivalent to calling `CoRegisterClassObject` in COM."
  syntax:
    content: public void RegisterTypeForComClients (Type type, ref Guid g);
    parameters:
    - id: type
      type: System.Type
      description: "The type to be registered for use from COM."
    - id: g
      type: System.Guid
      description: "GUID used to register the specified type."
  overload: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)
  id: TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: TypeRepresentsComType(Type)
  nameWithType: IRegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Determines whether the specified type is a COM type."
  syntax:
    content: public bool TypeRepresentsComType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type to determine if it is a COM type."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)
  id: TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: TypeRequiresRegistration(Type)
  nameWithType: IRegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Determines whether the specified type requires registration."
  syntax:
    content: public bool TypeRequiresRegistration (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type to check for COM registration requirements."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  id: UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.IRegistrationServices
  langs:
  - csharp
  name: UnregisterAssembly(Assembly)
  nameWithType: IRegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Unregisters the classes in a managed assembly."
  remarks: '`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>. This method also calls any unregistration functions found in the assembly.'
  syntax:
    content: public bool UnregisterAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "The assembly to be unregistered."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    assembly is ."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The full name of assembly is .       -or-       A method marked with  is not .       -or-       There is more than one method marked with  at a given level of the hierarchy.       -or-       The signature of the method marked with  is not valid."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: GetManagedCategoryGuid()
  nameWithType: IRegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid()
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: GetProgIdForType(Type)
  nameWithType: IRegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.AssemblyRegistrationFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: AssemblyRegistrationFlags
  nameWithType: AssemblyRegistrationFlags
  fullName: System.Runtime.InteropServices.AssemblyRegistrationFlags
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: IRegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(Type,Guid)
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: TypeRepresentsComType(Type)
  nameWithType: IRegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(Type)
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: TypeRequiresRegistration(Type)
  nameWithType: IRegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(Type)
- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: UnregisterAssembly(Assembly)
  nameWithType: IRegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(Assembly)
- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: GetManagedCategoryGuid
  nameWithType: IRegistrationServices.GetManagedCategoryGuid
- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: GetProgIdForType
  nameWithType: IRegistrationServices.GetProgIdForType
- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: GetRegistrableTypesInAssembly
  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: RegisterAssembly
  nameWithType: IRegistrationServices.RegisterAssembly
- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: RegisterTypeForComClients
  nameWithType: IRegistrationServices.RegisterTypeForComClients
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: TypeRepresentsComType
  nameWithType: IRegistrationServices.TypeRepresentsComType
- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: TypeRequiresRegistration
  nameWithType: IRegistrationServices.TypeRequiresRegistration
- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly*
  parent: System.Runtime.InteropServices.IRegistrationServices
  isExternal: false
  name: UnregisterAssembly
  nameWithType: IRegistrationServices.UnregisterAssembly
