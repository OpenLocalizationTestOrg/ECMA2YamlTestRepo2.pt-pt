### YamlMime:ManagedReference
items:
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  id: QueryActivatableWorkflowsCommand
  children:
  - System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.#ctor
  - System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
  - System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.Validate(System.Runtime.DurableInstancing.InstanceView)
  langs:
  - csharp
  name: QueryActivatableWorkflowsCommand
  nameWithType: QueryActivatableWorkflowsCommand
  fullName: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  type: Class
  summary: "Represents the command that a generic host executes against an instance store to retrieve activation parameters. The generic host uses these activation parameters to create a workflow host, which in turn loads a runnable service instance."
  remarks: "An instance is *activatable*, if it is not in the suspended state or the completed state and satisfies the following conditions:      -   The instance is *runnable*. An instance in the persistence database is considered as runnable if it satisfies the following conditions:          -   The instance is unlocked and has a pending timer that has expired.          -   The instance is unlocked and its status is **Executing**.          -   The instance has an expired lock on it.      -   There is no workflow host capable of loading the instance is running on the local computer.       An instance store should periodically search for activatable workflow instances that belong to a workflow host that uses the store. It should raise the <xref:System.Activities.DurableInstancing.HasActivatableWorkflowEvent> when it finds an activatable instance in the persistence store. If the instance store does not find an activatable instance in the persistence store, it should continue to monitor the persistence store for any activatable instances.       After raising the HasActivatableWorkflowEvent, the instance store should stop monitoring the persistence store for activatable instances until it receives and executes the QueryActivatableWorkflowsCommand. The monitoring continues only if the command execution does not return any activatable workflow instances.       When a generic host receives this event, it executes the QueryActivatableWorkflowsCommand against the instance store to obtain activation parameters required to create a workflow host. The generic host uses these activation parameters to create a workflow host, which in turn loads and runs the service instance. The activation parameters for the WAS activation type are: Site Name, Application Path (relative to the site), and Service Path (relative to the application). An instance store could return multiple sets of these three activation parameters.       A generic host is a host that has an XName parameter named **ActivationType**, which should be set to a value supported by the instance store. Currently, the SQL Workflow Instance Store supports generic hosts with ActivationType parameter set to value: **WAS**. If the ActivationType is not set at all, the SQL Workflow Instance Store treats the host as a generic host.      > [!NOTE] >  The Workflow Management Service that ships with the code named “Dublin” (Application Server Extensions for .NET 4.0) is a generic host that has the activation type set to **WAS**."
  syntax:
    content: 'public sealed class QueryActivatableWorkflowsCommand : System.Runtime.DurableInstancing.InstancePersistenceCommand'
  inheritance:
  - System.Object
  - System.Runtime.DurableInstancing.InstancePersistenceCommand
  implements: []
  inheritedMembers:
  - System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock
  - System.Runtime.DurableInstancing.InstancePersistenceCommand.Name
  platform:
  - net462
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.#ctor
  id: '#ctor'
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  langs:
  - csharp
  name: QueryActivatableWorkflowsCommand()
  nameWithType: QueryActivatableWorkflowsCommand.QueryActivatableWorkflowsCommand()
  fullName: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.QueryActivatableWorkflowsCommand()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.DurableInstancing
  summary: "Initializes an instance of the <xref href=&quot;System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand&quot;></xref> class."
  syntax:
    content: public QueryActivatableWorkflowsCommand ();
    parameters: []
  overload: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
  id: IsTransactionEnlistmentOptional
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  langs:
  - csharp
  name: IsTransactionEnlistmentOptional
  nameWithType: QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
  fullName: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.DurableInstancing
  syntax:
    content: protected override bool IsTransactionEnlistmentOptional { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.Validate(System.Runtime.DurableInstancing.InstanceView)
  id: Validate(System.Runtime.DurableInstancing.InstanceView)
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  langs:
  - csharp
  name: Validate(InstanceView)
  nameWithType: QueryActivatableWorkflowsCommand.Validate(InstanceView)
  fullName: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.Validate(InstanceView)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DurableInstancing
  syntax:
    content: protected override void Validate (System.Runtime.DurableInstancing.InstanceView view);
    parameters:
    - id: view
      type: System.Runtime.DurableInstancing.InstanceView
      description: "To be added."
  overload: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  isExternal: false
  name: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.#ctor
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  isExternal: false
  name: QueryActivatableWorkflowsCommand()
  nameWithType: QueryActivatableWorkflowsCommand.QueryActivatableWorkflowsCommand()
  fullName: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.QueryActivatableWorkflowsCommand()
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  isExternal: false
  name: IsTransactionEnlistmentOptional
  nameWithType: QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
  fullName: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.Validate(System.Runtime.DurableInstancing.InstanceView)
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  isExternal: false
  name: Validate(InstanceView)
  nameWithType: QueryActivatableWorkflowsCommand.Validate(InstanceView)
  fullName: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.Validate(InstanceView)
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.#ctor*
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  isExternal: false
  name: QueryActivatableWorkflowsCommand
  nameWithType: QueryActivatableWorkflowsCommand.QueryActivatableWorkflowsCommand
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional*
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  isExternal: false
  name: IsTransactionEnlistmentOptional
  nameWithType: QueryActivatableWorkflowsCommand.IsTransactionEnlistmentOptional
- uid: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand.Validate*
  parent: System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand
  isExternal: false
  name: Validate
  nameWithType: QueryActivatableWorkflowsCommand.Validate
