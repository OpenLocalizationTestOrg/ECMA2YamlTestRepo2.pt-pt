### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine
  id: StripLine
  children:
  - System.Windows.Forms.DataVisualization.Charting.StripLine.#ctor
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle
  - System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth
  - System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose(System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.StripLine.Font
  - System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor
  - System.Windows.Forms.DataVisualization.Charting.StripLine.Interval
  - System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset
  - System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType
  - System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType
  - System.Windows.Forms.DataVisualization.Charting.StripLine.Name
  - System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth
  - System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType
  - System.Windows.Forms.DataVisualization.Charting.StripLine.Text
  - System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment
  - System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment
  - System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation
  - System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip
  langs:
  - csharp
  name: StripLine
  nameWithType: StripLine
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine
  type: Class
  summary: "Represents the strip lines on a chart."
  remarks: "Strip lines, or strips, are horizontal or vertical ranges that shade the background of a chart in regular or custom intervals. You can use strip lines to:      -   Improve readability for looking up individual values on the chart.      -   Separate data points when reading the chart.      -   Highlight dates that occur at regular intervals, for example, to identify weekend data points.      -   Highlight a specific key range of data.      -   Add a threshold line at a specific constant value.       A single StripLine object can either be drawn once, or repeatedly, for a given interval. This action is controlled by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property. When a value of zero is assigned to the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property, one strip line will be drawn. When a non-zero value is assigned to the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property, a strip line will be drawn repeatedly at each given interval. The location where a strip line is drawn is also affected by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType%2A> properties of the strip line.       Strip lines are always associated with an <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object. They can be added at both design time and run time.       To add a horizontal or vertical line to display a threshold, set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property to a value of 0.0. This will result in a line being drawn. You can use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> properties for the color, width and style of the line. No chart background properties (`Back*`) are used when the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to 0.0.       Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Text%2A> property of the strip line to associate text with a strip line. The placement and orientation of this text can be controlled by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment%2A> property.       When multiple strip lines are defined for the same axis, it is possible that the strip lines will overlap. The Z-order of StripLine objects is determined by their order of occurrence in the <xref:System.Windows.Forms.DataVisualization.Charting.StripLinesCollection> object. This means that the first occurrence is drawn first; the second occurrence is drawn second, and so on.       Strip lines are not supported for the following chart types: Pie, Doughnut, Funnel, Pyramid, Kagi, ThreeLineBreak, PointAndFigure, Polar and Radar."
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("IntervalOffset")]

      public class StripLine : System.Windows.Forms.DataVisualization.Charting.ChartElement
  inheritance:
  - System.Object
  - System.Windows.Forms.DataVisualization.Charting.ChartElement
  implements: []
  inheritedMembers:
  - System.Windows.Forms.DataVisualization.Charting.ChartElement.Dispose
  - System.Windows.Forms.DataVisualization.Charting.ChartElement.Equals(System.Object)
  - System.Windows.Forms.DataVisualization.Charting.ChartElement.GetHashCode
  - System.Windows.Forms.DataVisualization.Charting.ChartElement.Tag
  - System.Windows.Forms.DataVisualization.Charting.ChartElement.ToString
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: StripLine()
  nameWithType: StripLine.StripLine()
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.StripLine()
  type: Constructor
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.StripLine&quot;></xref> class."
  syntax:
    content: public StripLine ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor
  id: BackColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackColor
  nameWithType: StripLine.BackColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the background color of the strip line."
  remarks: "You can set this property to any valid ARGB (alpha, red, green, blue) value.       To set a gradient for the strip line, set the BackColor and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> properties.       If you set this color to &quot;transparent&quot;—in other words, set the alpha value to 0—no color will be assigned to the background of the element. As a result, the background will be transparent.       If the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to 0.0, a line will be drawn and the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A> property will determine the color of the line, not this property."
  syntax:
    content: public System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> structure. The default color is <xref:System.Drawing.Color.White*>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle
  id: BackGradientStyle
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackGradientStyle
  nameWithType: StripLine.BackGradientStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the gradient style of the strip line."
  remarks: "The BackGradientStyle property determines whether a chart element will display a gradient, as well as the orientation of the gradient, if used.       To use gradient colors:      -   Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> property to set the primary color.      -   Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> property to set the secondary color.      -   Set this BackGradientStyle property of the chart element to the desired gradient style.       This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.GradientStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.GradientStyle&quot;></xref> enumeration. The default value is <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.GradientStyle&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle
  id: BackHatchStyle
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackHatchStyle
  nameWithType: StripLine.BackHatchStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the hatching style of the strip line."
  remarks: "The hatch pattern consists of a solid background color and lines drawn over the background. The two colors used in the hatch style are set by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> properties. This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle&quot;></xref> enumeration. The default value is <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage
  id: BackImage
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackImage
  nameWithType: StripLine.BackImage
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the background image of the strip line."
  remarks: "The BackImage property defines a path to a background image for many chart elements, and is an absolute or relative URL.       To position this image, use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> properties.       You can also specify that one color will be displayed by the image as &quot;transparent&quot; by setting the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor%2A> property.       An image can be any valid graphics file supported by .NET Framework, including icons.       This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.       Background images take precedence over other background properties, such as gradient colors."
  syntax:
    content: public string BackImage { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value that represents an image file&quot;s URL. The default is an empty string."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment
  id: BackImageAlignment
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackImageAlignment
  nameWithType: StripLine.BackImageAlignment
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the background image alignment."
  remarks: "This property determines the alignment of the background image for strip lines; it is only applied when the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>.       For more information about available alignments, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle> enumeration topic."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle&quot;></xref> enumeration value. The default value is <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor
  id: BackImageTransparentColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackImageTransparentColor
  nameWithType: StripLine.BackImageTransparentColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets a color which will be replaced with a transparent color when the background image is drawn."
  remarks: "This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0."
  syntax:
    content: public System.Drawing.Color BackImageTransparentColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> value that will be displayed as transparent."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode
  id: BackImageWrapMode
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackImageWrapMode
  nameWithType: StripLine.BackImageWrapMode
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the drawing mode of the background image of the strip line."
  remarks: "This property determines how the image is displayed; that is, tiled, scaled, and so forth.       If an image is scaled, it will be stretched to fit within the bounding strip line. If the image is tiled, it is repeatedly drawn, starting from the top-left corner.       For more information concerning the available wrapping modes, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> enumeration topic.       If the BackImageWrapMode property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>, the location where the image is drawn will be determined by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment%2A> property setting.       This property is not applicable if <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> is set to a value of 0.0."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode&quot;></xref> integer enumeration. The default is <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor
  id: BackSecondaryColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BackSecondaryColor
  nameWithType: StripLine.BackSecondaryColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the secondary color of the strip line background."
  remarks: "This property determines the secondary background color of many chart objects, and is used when gradient colors are being applied.       You can set background secondary color to any valid ARGB (alpha, red, green, blue) value.       If hatching is used, the BackSecondaryColor property determines the color of the hatching lines.       To use gradient colors for the background of a chart element:      -   Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> property to set the primary color.      -   Use this BackSecondaryColor property to set the secondary color.      -   Set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle%2A> property to the desired gradient style.       This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0."
  syntax:
    content: public System.Drawing.Color BackSecondaryColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> value used for the secondary color of a background with hatching or gradient fill. The default color is <xref href=&quot;System.Drawing.Color&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor
  id: BorderColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BorderColor
  nameWithType: StripLine.BorderColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the border color of a strip line."
  remarks: "You can set this property to any valid ARGB (alpha, red, green, blue) value.       If the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property of a <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> object is set to 0.0, a line will be drawn, and it is this property and not the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> property setting that will determine the color of the line."
  syntax:
    content: public System.Drawing.Color BorderColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> value. The default color is <xref href=&quot;System.Drawing.Color&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle
  id: BorderDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BorderDashStyle
  nameWithType: StripLine.BorderDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the border style of the strip line."
  remarks: "This property specifies the line style used for a border. The line can be solid, dotted or some variation of solid and dotted."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartDashStyle&quot;></xref> enumeration value that determines the border style of the strip line."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth
  id: BorderWidth
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: BorderWidth
  nameWithType: StripLine.BorderWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the border width of the strip line."
  remarks: "This property is measured in pixels."
  syntax:
    content: public int BorderWidth { get; set; }
    return:
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_integer&quot; name=&quot;integer&quot; href=&quot;&quot;></xref> value that determines the width of the strip line&quot;s border, in pixels."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: StripLine.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.StripLine&quot;></xref> and optionally releases the managed resources."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Font
  id: Font
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: Font
  nameWithType: StripLine.Font
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Font
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the font used for the strip line text."
  syntax:
    content: public System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> value that represents the font of the strip line text."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: ForeColor
  nameWithType: StripLine.ForeColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the color of the strip line text."
  remarks: "You can specify any valid ARGB color for this property. This property is only applicable when a text value is specified for the strip line."
  syntax:
    content: public System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> value that represents the text color of a strip line. The default value is <xref:System.Drawing.Color.Black*>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Interval
  id: Interval
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: Interval
  nameWithType: StripLine.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Interval
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the interval for a strip line, and determines if the strip line is drawn once or repeatedly."
  remarks: "When you set the Interval property to a value of zero, one strip line will be displayed, with a width specified by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property. When you set Interval to a value of other than zero, multiple strip lines will be shown. The unit that is used for the Interval property is defined by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType%2A> property."
  syntax:
    content: public double Interval { get; set; }
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;></xref> value that represents the interval between strip lines. The default value is zero."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.Interval*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset
  id: IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: IntervalOffset
  nameWithType: StripLine.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the offset of grid lines, tick marks, strip lines and axis labels."
  remarks: "The interval offset of minor tick marks and grid lines is never affected by the value of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object.       The IntervalOffset property setting defines the units of measurement of the offset.       The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> can be a negative value.       The default value is `Auto` (`0`)."
  syntax:
    content: public double IntervalOffset { get; set; }
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;></xref> value that represents the interval offset."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType
  id: IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: IntervalOffsetType
  nameWithType: StripLine.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the interval offset type of the strip line."
  remarks: "By default, this property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>; the actual value of this property is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType%2A> property."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;></xref> enumeration value that indicates the interval type. The default value is <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType
  id: IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: IntervalType
  nameWithType: StripLine.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the interval type of a <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.StripLine&quot;></xref> object."
  remarks: "Interval types can be set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>, in which case the type depends on: the X-value or Y-value types of the plotted <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objects—depending on which axis the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> objects belong to—and the axis scale.       The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property determines how often a strip or line is drawn."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;></xref> enumeration value that indicates the interval type. The default value is <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Name
  id: Name
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: Name
  nameWithType: StripLine.Name
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Name
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets the name of the strip line."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value that represents the name of the strip line."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth
  id: StripWidth
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: StripWidth
  nameWithType: StripLine.StripWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the width of a strip line."
  remarks: "This property cannot be set to a value less than zero, otherwise an exception will be raised.       A setting of 0.0 will result in a line being drawn; this line will use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> property settings for its color, width and style. None of the `Back*` properties in this class are utilized when the value of StripWidth is 0.0.       If you set the StripWidth property to a value greater than zero, a strip will be created. The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> properties only apply to the border of the strip; all of the `Back*` properties are then used for the background properties of the strip.       If the value of the StripWidth property is greater than 0.0, the units are determined by the relevant axis scale."
  syntax:
    content: public double StripWidth { get; set; }
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;></xref> value that determines whether a strip or a line is drawn. The default value is 0.0."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType
  id: StripWidthType
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: StripWidthType
  nameWithType: StripLine.StripWidthType
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the unit of measurement for the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth*> property."
  remarks: "This property determines the units used for the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property. For example, to set a strip line to represent &quot;one week&quot;, you could set this property to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType> and set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property to one (1.0).       You can change the value of this property from <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType> to a <xref:System.DateTime> value when the relevant axis scale uses a <xref:System.DateTime> value."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType StripWidthType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;></xref> enumeration value that indicates the width type. The default value is <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;></xref>."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Text
  id: Text
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: Text
  nameWithType: StripLine.Text
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Text
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the text of the strip line."
  remarks: "Use this property to add text to a strip line."
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value that represents the text of a strip line."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment
  id: TextAlignment
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: TextAlignment
  nameWithType: StripLine.TextAlignment
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the text alignment of the strip line."
  syntax:
    content: public System.Drawing.StringAlignment TextAlignment { get; set; }
    return:
      type: System.Drawing.StringAlignment
      description: "A <xref href=&quot;System.Drawing.StringAlignment&quot;></xref> value that represents the alignment of the strip line text."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment
  id: TextLineAlignment
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: TextLineAlignment
  nameWithType: StripLine.TextLineAlignment
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the text line alignment of the strip line."
  syntax:
    content: public System.Drawing.StringAlignment TextLineAlignment { get; set; }
    return:
      type: System.Drawing.StringAlignment
      description: "A <xref href=&quot;System.Drawing.StringAlignment&quot;></xref> value that represents the alignment of the text line."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation
  id: TextOrientation
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: TextOrientation
  nameWithType: StripLine.TextOrientation
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the text orientation."
  remarks: "When this property is set to a value of <xref:System.Windows.Forms.DataVisualization.Charting.TextOrientation>, the text is oriented based on the chart type. For all X-Y chart types other than Bar, X-axis strip line text is oriented horizontally from left to right on the bottom of the strip line. For Bar charts, X-axis strip line text is oriented vertically from top to bottom to the right of the strip line."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.TextOrientation TextOrientation { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.TextOrientation
      description: "A TextOrientation value that represents the alignment of the text orientation."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip
  id: ToolTip
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  langs:
  - csharp
  name: ToolTip
  nameWithType: StripLine.ToolTip
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "Gets or sets the tooltip of a strip line."
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value that represents the tooltip of the strip line."
  overload: System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.DataVisualization.Charting.ChartElement
  isExternal: false
  name: System.Windows.Forms.DataVisualization.Charting.ChartElement
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.#ctor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: StripLine()
  nameWithType: StripLine.StripLine()
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.StripLine()
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackColor
  nameWithType: StripLine.BackColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackGradientStyle
  nameWithType: StripLine.BackGradientStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle
- uid: System.Windows.Forms.DataVisualization.Charting.GradientStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: GradientStyle
  nameWithType: GradientStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.GradientStyle
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackHatchStyle
  nameWithType: StripLine.BackHatchStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle
- uid: System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartHatchStyle
  nameWithType: ChartHatchStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImage
  nameWithType: StripLine.BackImage
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImageAlignment
  nameWithType: StripLine.BackImageAlignment
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment
- uid: System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartImageAlignmentStyle
  nameWithType: ChartImageAlignmentStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImageTransparentColor
  nameWithType: StripLine.BackImageTransparentColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImageWrapMode
  nameWithType: StripLine.BackImageWrapMode
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode
- uid: System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartImageWrapMode
  nameWithType: ChartImageWrapMode
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackSecondaryColor
  nameWithType: StripLine.BackSecondaryColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BorderColor
  nameWithType: StripLine.BorderColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BorderDashStyle
  nameWithType: StripLine.BorderDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartDashStyle
  nameWithType: ChartDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BorderWidth
  nameWithType: StripLine.BorderWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: StripLine.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Font
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Font
  nameWithType: StripLine.Font
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Font
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: ForeColor
  nameWithType: StripLine.ForeColor
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Interval
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Interval
  nameWithType: StripLine.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Interval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: IntervalOffset
  nameWithType: StripLine.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: IntervalOffsetType
  nameWithType: StripLine.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: DateTimeIntervalType
  nameWithType: DateTimeIntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: IntervalType
  nameWithType: StripLine.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Name
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Name
  nameWithType: StripLine.Name
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Name
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: StripWidth
  nameWithType: StripLine.StripWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: StripWidthType
  nameWithType: StripLine.StripWidthType
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Text
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Text
  nameWithType: StripLine.Text
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.Text
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: TextAlignment
  nameWithType: StripLine.TextAlignment
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment
- uid: System.Drawing.StringAlignment
  parent: System.Drawing
  isExternal: false
  name: StringAlignment
  nameWithType: StringAlignment
  fullName: System.Drawing.StringAlignment
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: TextLineAlignment
  nameWithType: StripLine.TextLineAlignment
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: TextOrientation
  nameWithType: StripLine.TextOrientation
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation
- uid: System.Windows.Forms.DataVisualization.Charting.TextOrientation
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: TextOrientation
  nameWithType: TextOrientation
  fullName: System.Windows.Forms.DataVisualization.Charting.TextOrientation
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: ToolTip
  nameWithType: StripLine.ToolTip
  fullName: System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.#ctor*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: StripLine
  nameWithType: StripLine.StripLine
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackColor
  nameWithType: StripLine.BackColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackGradientStyle
  nameWithType: StripLine.BackGradientStyle
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackHatchStyle
  nameWithType: StripLine.BackHatchStyle
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImage
  nameWithType: StripLine.BackImage
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImageAlignment
  nameWithType: StripLine.BackImageAlignment
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImageTransparentColor
  nameWithType: StripLine.BackImageTransparentColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackImageWrapMode
  nameWithType: StripLine.BackImageWrapMode
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BackSecondaryColor
  nameWithType: StripLine.BackSecondaryColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BorderColor
  nameWithType: StripLine.BorderColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BorderDashStyle
  nameWithType: StripLine.BorderDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: BorderWidth
  nameWithType: StripLine.BorderWidth
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Dispose
  nameWithType: StripLine.Dispose
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Font*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Font
  nameWithType: StripLine.Font
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: ForeColor
  nameWithType: StripLine.ForeColor
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Interval*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Interval
  nameWithType: StripLine.Interval
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: IntervalOffset
  nameWithType: StripLine.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: IntervalOffsetType
  nameWithType: StripLine.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: IntervalType
  nameWithType: StripLine.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Name*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Name
  nameWithType: StripLine.Name
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: StripWidth
  nameWithType: StripLine.StripWidth
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: StripWidthType
  nameWithType: StripLine.StripWidthType
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.Text*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: Text
  nameWithType: StripLine.Text
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: TextAlignment
  nameWithType: StripLine.TextAlignment
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: TextLineAlignment
  nameWithType: StripLine.TextLineAlignment
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: TextOrientation
  nameWithType: StripLine.TextOrientation
- uid: System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip*
  parent: System.Windows.Forms.DataVisualization.Charting.StripLine
  isExternal: false
  name: ToolTip
  nameWithType: StripLine.ToolTip
