### YamlMime:ManagedReference
items:
- uid: System.Transactions.SubordinateTransaction
  id: SubordinateTransaction
  children:
  - System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)
  langs:
  - csharp
  name: SubordinateTransaction
  nameWithType: SubordinateTransaction
  fullName: System.Transactions.SubordinateTransaction
  type: Class
  summary: "Represents a non-rooted transaction that can be delegated. This class cannot be inherited."
  remarks: "This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated."
  syntax:
    content: 'public sealed class SubordinateTransaction : System.Transactions.Transaction'
  inheritance:
  - System.Object
  - System.Transactions.Transaction
  implements: []
  inheritedMembers:
  - System.Transactions.Transaction.Clone
  - System.Transactions.Transaction.Current
  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)
  - System.Transactions.Transaction.Dispose
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)
  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.Equals(System.Object)
  - System.Transactions.Transaction.GetHashCode
  - System.Transactions.Transaction.GetPromotedToken
  - System.Transactions.Transaction.IsolationLevel
  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)
  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)
  - System.Transactions.Transaction.PromoterType
  - System.Transactions.Transaction.Rollback
  - System.Transactions.Transaction.Rollback(System.Exception)
  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)
  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Transactions.Transaction.TransactionCompleted
  - System.Transactions.Transaction.TransactionInformation
  platform:
  - net462
- uid: System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)
  id: '#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)'
  parent: System.Transactions.SubordinateTransaction
  langs:
  - csharp
  name: SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)
  nameWithType: SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)
  fullName: System.Transactions.SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Initializes a new instance of the <xref href=&quot;System.Transactions.SubordinateTransaction&quot;></xref> class."
  remarks: >-
    > [!NOTE]

    >  Only one <xref:System.Transactions.SubordinateTransaction> can be created for a given <xref:System.Transactions.ISimpleTransactionSuperior>.
  syntax:
    content: public SubordinateTransaction (System.Transactions.IsolationLevel isoLevel, System.Transactions.ISimpleTransactionSuperior superior);
    parameters:
    - id: isoLevel
      type: System.Transactions.IsolationLevel
      description: "The isolation level of the transaction"
    - id: superior
      type: System.Transactions.ISimpleTransactionSuperior
      description: "A <xref href=&quot;System.Transactions.ISimpleTransactionSuperior&quot;></xref>"
  overload: System.Transactions.SubordinateTransaction.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.Transaction
  isExternal: false
  name: System.Transactions.Transaction
- uid: System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)
  parent: System.Transactions.SubordinateTransaction
  isExternal: false
  name: SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)
  nameWithType: SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)
  fullName: System.Transactions.SubordinateTransaction.SubordinateTransaction(IsolationLevel,ISimpleTransactionSuperior)
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Transactions.ISimpleTransactionSuperior
  parent: System.Transactions
  isExternal: false
  name: ISimpleTransactionSuperior
  nameWithType: ISimpleTransactionSuperior
  fullName: System.Transactions.ISimpleTransactionSuperior
- uid: System.Transactions.SubordinateTransaction.#ctor*
  parent: System.Transactions.SubordinateTransaction
  isExternal: false
  name: SubordinateTransaction
  nameWithType: SubordinateTransaction.SubordinateTransaction
