### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  id: SdlChannelSink
  children:
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  langs:
  - csharp
  name: SdlChannelSink
  nameWithType: SdlChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  type: Class
  summary: "Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server."
  remarks: "The SdlChannelSink is used to create WSDL in situations where the URL ends with the string &quot;?wsdl&quot;.       The following table shows the channel configuration properties that can be specified for this channel sink. The first two properties combine to control the WSDL publication of objects published by the application domain. If `false` is specified for the first property, no WSDL is returned, regardless of the second property. (The default is `true`.) Otherwise, the second controls whether the global metadata object URI is permitted to respond. (The default is `false`.)      |Property|Description|   |--------------|-----------------|   |`metadataEnabled`|A Boolean value that specifies whether to honor requests that end in &quot;?wsdl&quot; if this sink is in the channel sink chain. The default setting is `true`. If `false`, the sink throws an exception in all cases where metadata is requested for any object in the application domain.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|   |`remoteApplicationMetadataEnabled`|A Boolean value that specifies whether to honor requests for the object URI &quot;RemoteApplicationMetadata?wsdl&quot;, which returns WSDL that describes all objects that are published by the application domain. If `false`, then any request to &quot;RemoteApplicationMetadata.rem&quot; throws an exception. All other &quot;?wsdl&quot; requests for particular object URIs are honored. If `true`, the global metadata request is honored. The default setting is `false`.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|"
  syntax:
    content: 'public class SdlChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IServerChannelSink
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  id: '#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)'
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: SdlChannelSink(IChannelReceiver,IServerChannelSink)
  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.MetadataServices.SdlChannelSink&quot;></xref> class."
  syntax:
    content: public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);
    parameters:
    - id: receiver
      type: System.Runtime.Remoting.Channels.IChannelReceiver
      description: "Indicates the channel that will receive the messages serialized by the new instance of <xref href=&quot;System.Runtime.Remoting.MetadataServices.SdlChannelSink&quot;></xref>."
    - id: nextSink
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "The next sink in the sink chain."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Requests processing from the current sink of the response from a method call that was sent asynchronously."
  syntax:
    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "A stack of sinks that lead back to the server transport sink."
    - id: state
      type: System.Object
      description: "Information associated with the current sink, generated on the request side, and needed on the response side."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "The response message."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "The headers to add to the return message heading to the client."
    - id: stream
      type: System.IO.Stream
      description: "The stream heading back to the transport sink."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Returns the <xref:System.IO.Stream> onto which the provided response message is to be serialized."
  remarks: "The current method is called when a response stream needs to be created."
  syntax:
    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "A stack of sinks that lead back to the server transport sink."
    - id: state
      type: System.Object
      description: "Information associated with the current sink, generated on the request side, and needed on the response side."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "The response message to serialize."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "The headers to put in the response stream to the client."
    return:
      type: System.IO.Stream
      description: "The <xref:System.IO.Stream> onto which the provided response message is to be serialized."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  id: NextChannelSink
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Gets the next <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;></xref> in the sink chain."
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "The next <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;></xref> in the sink chain."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Requests message processing from the current sink."
  remarks: "The proxy&quot;s job is to convert a method call that is invoked on it into a message object. The Message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.       When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.       After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.       When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink. The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called."
  syntax:
    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack
      description: "A stack of channel sinks that called the current sink."
    - id: requestMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "The message that contains the request."
    - id: requestHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "The headers that are retrieved from the incoming message from the client."
    - id: requestStream
      type: System.IO.Stream
      description: "The stream that needs to be processed and passed on to the deserialization sink."
    - id: responseMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "When this method returns, contains a <xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;></xref> that holds the response message. This parameter is passed uninitialized."
    - id: responseHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "When this method returns, contains a <xref href=&quot;System.Runtime.Remoting.Channels.ITransportHeaders&quot;></xref> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized."
    - id: responseStream
      type: System.IO.Stream
      description: "When this method returns, contains a <xref:System.IO.Stream> that is heading to the transport sink. This parameter is passed uninitialized."
    return:
      type: System.Runtime.Remoting.Channels.ServerProcessing
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ServerProcessing&quot;></xref> status value that provides information about how the message was processed."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  id: Properties
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: Properties
  nameWithType: SdlChannelSink.Properties
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "Gets a <xref:System.Collections.IDictionary> of properties for the current channel sink."
  remarks: >-
    > [!NOTE]

    >  For more information, see [&#91;\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).
  syntax:
    content: public System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary> of properties for the current channel sink."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: SdlChannelSink(IChannelReceiver,IServerChannelSink)
  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
- uid: System.Runtime.Remoting.Channels.IChannelReceiver
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannelReceiver
  nameWithType: IChannelReceiver
  fullName: System.Runtime.Remoting.Channels.IChannelReceiver
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerResponseChannelSinkStack
  nameWithType: IServerResponseChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Channels.ITransportHeaders
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ITransportHeaders
  nameWithType: ITransportHeaders
  fullName: System.Runtime.Remoting.Channels.ITransportHeaders
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.ServerProcessing
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ServerProcessing
  nameWithType: ServerProcessing
  fullName: System.Runtime.Remoting.Channels.ServerProcessing
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkStack
  nameWithType: IServerChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: Properties
  nameWithType: SdlChannelSink.Properties
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: SdlChannelSink
  nameWithType: SdlChannelSink.SdlChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: AsyncProcessResponse
  nameWithType: SdlChannelSink.AsyncProcessResponse
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: GetResponseStream
  nameWithType: SdlChannelSink.GetResponseStream
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: ProcessMessage
  nameWithType: SdlChannelSink.ProcessMessage
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: Properties
  nameWithType: SdlChannelSink.Properties
