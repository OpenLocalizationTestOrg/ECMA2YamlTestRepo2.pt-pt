### YamlMime:ManagedReference
items:
- uid: System.Xaml.IAttachedPropertyStore
  id: IAttachedPropertyStore
  children:
  - System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  - System.Xaml.IAttachedPropertyStore.PropertyCount
  - System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)
  - System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)
  - System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)
  langs:
  - csharp
  name: IAttachedPropertyStore
  nameWithType: IAttachedPropertyStore
  fullName: System.Xaml.IAttachedPropertyStore
  type: Interface
  summary: "Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with <xref href=&quot;System.Xaml.AttachablePropertyServices&quot;></xref>."
  remarks: "An attachable member is typically implemented and used as an attachable property. The term &quot;attachable member&quot; provides for the possibility that a technology also defines a system for attachable events. As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage. An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use."
  syntax:
    content: public interface IAttachedPropertyStore
  implements: []
  platform:
  - net462
- uid: System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  id: CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.IAttachedPropertyStore
  langs:
  - csharp
  name: CopyPropertiesTo(KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: IAttachedPropertyStore.CopyPropertiesTo(KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Copies all attachable member/value pairs from this attachable member store into a destination array."
  syntax:
    content: public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,object>[] array, int index);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
      description: "The destination array. The array is a generic array, should be passed undimensioned, and should have components of <xref href=&quot;System.Xaml.AttachableMemberIdentifier&quot;></xref> and <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The source index where copying should begin."
  overload: System.Xaml.IAttachedPropertyStore.CopyPropertiesTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAttachedPropertyStore.PropertyCount
  id: PropertyCount
  parent: System.Xaml.IAttachedPropertyStore
  langs:
  - csharp
  name: PropertyCount
  nameWithType: IAttachedPropertyStore.PropertyCount
  fullName: System.Xaml.IAttachedPropertyStore.PropertyCount
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Gets the count of the attachable member entries in this attachable member store."
  syntax:
    content: public int PropertyCount { get; }
    return:
      type: System.Int32
      description: "The integer count of entries in the store."
  overload: System.Xaml.IAttachedPropertyStore.PropertyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)
  id: RemoveProperty(System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.IAttachedPropertyStore
  langs:
  - csharp
  name: RemoveProperty(AttachableMemberIdentifier)
  nameWithType: IAttachedPropertyStore.RemoveProperty(AttachableMemberIdentifier)
  fullName: System.Xaml.IAttachedPropertyStore.RemoveProperty(AttachableMemberIdentifier)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Removes the entry for the specified attachable member from this attachable member store."
  syntax:
    content: public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);
    parameters:
    - id: attachableMemberIdentifier
      type: System.Xaml.AttachableMemberIdentifier
      description: "The XAML type system identifier for the attachable member entry to remove."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if an attachable member entry for <code>attachableMemberIdentifier</code> was found in the store and removed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.IAttachedPropertyStore.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)
  id: SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.IAttachedPropertyStore
  langs:
  - csharp
  name: SetProperty(AttachableMemberIdentifier,Object)
  nameWithType: IAttachedPropertyStore.SetProperty(AttachableMemberIdentifier,Object)
  fullName: System.Xaml.IAttachedPropertyStore.SetProperty(AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Sets a value for the specified attachable member in the specified store."
  remarks: "An implementation should not throw an exception if the specific attachable member already exists. If a member already exists, the implementation should overwrite any existing value with `value`."
  syntax:
    content: public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);
    parameters:
    - id: attachableMemberIdentifier
      type: System.Xaml.AttachableMemberIdentifier
      description: "The XAML type system identifier for the attachable member entry to set."
    - id: value
      type: System.Object
      description: "The value to set."
  overload: System.Xaml.IAttachedPropertyStore.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)
  id: TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.IAttachedPropertyStore
  langs:
  - csharp
  name: TryGetProperty(AttachableMemberIdentifier,Object)
  nameWithType: IAttachedPropertyStore.TryGetProperty(AttachableMemberIdentifier,Object)
  fullName: System.Xaml.IAttachedPropertyStore.TryGetProperty(AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Attempts to get a value for the specified attachable member in the specified store."
  remarks: "An implementation should not throw an exception if the specific attachable member is not located in the store."
  syntax:
    content: public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);
    parameters:
    - id: attachableMemberIdentifier
      type: System.Xaml.AttachableMemberIdentifier
      description: "The XAML type system identifier for the attachable member entry to get."
    - id: value
      type: System.Object
      description: "Out parameter. When this method returns, contains the destination object for the value if `attachableMemberIdentifier` exists in the store and has a value."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if an attachable member entry for <code>attachableMemberIdentifier</code> was found in the store and a value was posted to <code>value</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.IAttachedPropertyStore.TryGetProperty*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: CopyPropertiesTo(KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: IAttachedPropertyStore.CopyPropertiesTo(KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<AttachableMemberIdentifier,Object>
  nameWithType: KeyValuePair<AttachableMemberIdentifier,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.AttachableMemberIdentifier
    name: AttachableMemberIdentifier
    nameWithType: AttachableMemberIdentifier
    fullName: AttachableMemberIdentifier
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.IAttachedPropertyStore.PropertyCount
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: PropertyCount
  nameWithType: IAttachedPropertyStore.PropertyCount
  fullName: System.Xaml.IAttachedPropertyStore.PropertyCount
- uid: System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: RemoveProperty(AttachableMemberIdentifier)
  nameWithType: IAttachedPropertyStore.RemoveProperty(AttachableMemberIdentifier)
  fullName: System.Xaml.IAttachedPropertyStore.RemoveProperty(AttachableMemberIdentifier)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.AttachableMemberIdentifier
  parent: System.Xaml
  isExternal: false
  name: AttachableMemberIdentifier
  nameWithType: AttachableMemberIdentifier
  fullName: System.Xaml.AttachableMemberIdentifier
- uid: System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: SetProperty(AttachableMemberIdentifier,Object)
  nameWithType: IAttachedPropertyStore.SetProperty(AttachableMemberIdentifier,Object)
  fullName: System.Xaml.IAttachedPropertyStore.SetProperty(AttachableMemberIdentifier,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: TryGetProperty(AttachableMemberIdentifier,Object)
  nameWithType: IAttachedPropertyStore.TryGetProperty(AttachableMemberIdentifier,Object)
  fullName: System.Xaml.IAttachedPropertyStore.TryGetProperty(AttachableMemberIdentifier,Object)
- uid: System.Xaml.IAttachedPropertyStore.CopyPropertiesTo*
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: CopyPropertiesTo
  nameWithType: IAttachedPropertyStore.CopyPropertiesTo
- uid: System.Xaml.IAttachedPropertyStore.PropertyCount*
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: PropertyCount
  nameWithType: IAttachedPropertyStore.PropertyCount
- uid: System.Xaml.IAttachedPropertyStore.RemoveProperty*
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: RemoveProperty
  nameWithType: IAttachedPropertyStore.RemoveProperty
- uid: System.Xaml.IAttachedPropertyStore.SetProperty*
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: SetProperty
  nameWithType: IAttachedPropertyStore.SetProperty
- uid: System.Xaml.IAttachedPropertyStore.TryGetProperty*
  parent: System.Xaml.IAttachedPropertyStore
  isExternal: false
  name: TryGetProperty
  nameWithType: IAttachedPropertyStore.TryGetProperty
