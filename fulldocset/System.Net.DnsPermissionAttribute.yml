### YamlMime:ManagedReference
items:
- uid: System.Net.DnsPermissionAttribute
  id: DnsPermissionAttribute
  children:
  - System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Net.DnsPermissionAttribute.CreatePermission
  langs:
  - csharp
  name: DnsPermissionAttribute
  nameWithType: DnsPermissionAttribute
  fullName: System.Net.DnsPermissionAttribute
  type: Class
  summary: "Specifies permission to request information from Domain Name Servers."
  remarks: "The security information declared by DnsPermissionAttribute is stored in the metadata of the attribute target, which is the class to which the DnsPermissionAttribute is applied. The system then accesses this information at run time. The <xref:System.Security.Permissions.SecurityAction> that is passed to the constructor determines the allowable DNS targets.       These security attributes are used only for [Declarative Security](http://msdn.microsoft.com/en-us/97e21efd-6e89-4115-90d5-ad239513dad8). For [Imperative Security](http://msdn.microsoft.com/en-us/15aab1e1-6b7d-41ad-b102-c1ed7bedea27), use the corresponding <xref:System.Net.DnsPermission> class.       Security access is either fully restricted or fully unrestricted. Set the <xref:System.Security.Permissions.PermissionState> property to `true` to grant access, or `false` for no access. Set this property as a named parameter.       For more information about using attributes, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md)."
  example:
  - "The following example uses DnsPermissionAttribute to apply declarative security to a custom class.  \n  \n [!code-cs[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/CSharp/t-system.net.dnspermissi_1.cs)]\n [!code-cpp[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/CPP/t-system.net.dnspermissi_1.cpp)]\n [!code-vb[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/VisualBasic/t-system.net.dnspermissi_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class DnsPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Net.DnsPermissionAttribute
  langs:
  - csharp
  name: DnsPermissionAttribute(SecurityAction)
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  fullName: System.Net.DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.DnsPermissionAttribute&quot;></see> class with the specified <see cref=&quot;T:System.Security.Permissions.SecurityAction&quot;></see> value."
  remarks: "The <xref:System.Security.Permissions.SecurityAction> value that is passed to this constructor specifies the allowable <xref:System.Net.DnsPermissionAttribute> targets."
  example:
  - "The following example uses <xref:System.Net.DnsPermissionAttribute> to apply declarative security to a custom class.  \n  \n [!code-cs[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/CSharp/7a2591f2-0b5e-4482-b768-_1.cs)]\n [!code-cpp[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/CPP/7a2591f2-0b5e-4482-b768-_1.cpp)]\n [!code-vb[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/VisualBasic/7a2591f2-0b5e-4482-b768-_1.vb)]"
  syntax:
    content: public DnsPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "One of the  values."
  overload: System.Net.DnsPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The action parameter is not a valid ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.DnsPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Net.DnsPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: DnsPermissionAttribute.CreatePermission()
  fullName: System.Net.DnsPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Creates and returns a new instance of the <see cref=&quot;T:System.Net.DnsPermission&quot;></see> class."
  remarks: "The `CreatePermission` method is called by the security system, not by application code.       The security information described by <xref:System.Net.DnsPermissionAttribute> is stored in the metadata of the attribute target, which is the class to which <xref:System.Net.DnsPermissionAttribute> is applied. The system then accesses the information at run time and calls CreatePermission. The system uses the returned <xref:System.Security.IPermission> to enforce the specified security requirements."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "To be added."
  overload: System.Net.DnsPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: DnsPermissionAttribute(SecurityAction)
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  fullName: System.Net.DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Net.DnsPermissionAttribute.CreatePermission
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: DnsPermissionAttribute.CreatePermission()
  fullName: System.Net.DnsPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.DnsPermissionAttribute.#ctor*
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: DnsPermissionAttribute
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute
- uid: System.Net.DnsPermissionAttribute.CreatePermission*
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: DnsPermissionAttribute.CreatePermission
