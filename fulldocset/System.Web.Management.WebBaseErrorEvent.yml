### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebBaseErrorEvent
  id: WebBaseErrorEvent
  children:
  - System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)
  - System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)
  - System.Web.Management.WebBaseErrorEvent.ErrorException
  - System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebBaseErrorEvent
  nameWithType: WebBaseErrorEvent
  fullName: System.Web.Management.WebBaseErrorEvent
  type: Class
  summary: "Serves as the base class for all the health-monitoring error events."
  remarks: "ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       The WebBaseErrorEvent class is the base class for the health-monitoring events that represent error conditions. ASP.NET uses WebBaseErrorEvent and its derived types to indicate error conditions during the lifetime of a Web application.      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the WebBaseErrorEvent class, see the example provided in this topic."
  example:
  - "The following code example has two parts. The first is an excerpt of a configuration file that enables ASP.NET health monitoring to use an event derived from the WebBaseErrorEvent class. The second shows how to derive from the WebBaseErrorEvent class to create the custom event.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n  <providers>  \n    <!-- Define the custom provider that   \n         processes custom Web request events. -->  \n    <add name=\"SampleWebEventProvider\"   \n      type=\"SamplesAspNet.SampleEventProvider,  \n      webeventprovider,Version=1.0.1573.18094,   \n      Culture=neutral, PublicKeyToken=b5a57a9a9d487cf4,   \n      processorArchitecture=MSIL\"/>  \n  </providers>  \n  \n  <eventMappings>  \n  \n    <!--  Define the event source that issues custom events.   -->  \n    <add  name=\"SampleWebBaseErrorEvent\"      \n      type=\"SamplesAspNet.SampleWebBaseErrorEvent,  \n      webbaseerrorevent,Version=1.0.1573.21549, Culture=neutral,     \n      PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL\"/>  \n  </eventMappings>  \n  \n  <rules>  \n    <!-- Associate custom event with related   \n      custom provider -->  \n    <add   \n       name=\"Custom Web Base Errors\"  \n       eventName=\"SampleWebBaseErrorEvent\"   \n       provider=\"SampleWebEventProvider\"   \n       profile=\"Custom\"/>    \n  </rules>  \n  \n</healthMonitoring>  \n```  \n  \n The following code shows how to derive from the WebBaseErrorEvent class to create a custom event.  \n  \n [!code-cs[System.Web.Management.WebErrorEvent#1](~/add/codesnippet/csharp/t-system.web.management._23_1.cs)]\n [!code-vb[System.Web.Management.WebErrorEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._23_1.vb)]"
  syntax:
    content: 'public class WebBaseErrorEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)
  id: '#ctor(System.String,System.Object,System.Int32,System.Exception)'
  parent: System.Web.Management.WebBaseErrorEvent
  langs:
  - csharp
  name: WebBaseErrorEvent(String,Object,Int32,Exception)
  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Exception)
  fullName: System.Web.Management.WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Management.WebBaseErrorEvent&quot;></xref> class."
  remarks: "This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class."
  example:
  - "The following code example shows how to call this constructor from a constructor for the `SampleWebBaseErrorEvent` class, a class that derives from the <xref:System.Web.Management.WebBaseErrorEvent> class.  \n  \n [!code-cs[System.Web.Management.WebBaseErrorEvent#2](~/add/codesnippet/csharp/490f1ed0-2b88-4f74-b1da-_1.cs)]\n [!code-vb[System.Web.Management.WebBaseErrorEvent#2](~/add/codesnippet/visualbasic/490f1ed0-2b88-4f74-b1da-_1.vb)]"
  syntax:
    content: protected WebBaseErrorEvent (string message, object eventSource, int eventCode, Exception e);
    parameters:
    - id: message
      type: System.String
      description: "The event description."
    - id: eventSource
      type: System.Object
      description: "The object that is the source of the event."
    - id: eventCode
      type: System.Int32
      description: "The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;></xref>."
    - id: e
      type: System.Exception
      description: "The <xref:System.Exception> associated with the error."
  overload: System.Web.Management.WebBaseErrorEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)'
  parent: System.Web.Management.WebBaseErrorEvent
  langs:
  - csharp
  name: WebBaseErrorEvent(String,Object,Int32,Int32,Exception)
  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Int32,Exception)
  fullName: System.Web.Management.WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Management.WebBaseErrorEvent&quot;></xref> class."
  remarks: "This constructor is used internally by the ASP.NET health-monitoring system. You can call this constructor when implementing your own event type that inherits from this class."
  example:
  - "The following code example shows how to call this constructor from a constructor for the `SampleWebBaseErrorEvent` class, a class that derives from the <xref:System.Web.Management.WebBaseErrorEvent> class.  \n  \n [!code-cs[System.Web.Management.WebBaseErrorEvent#3](~/add/codesnippet/csharp/d926271b-b6dc-48d8-931e-_1.cs)]\n [!code-vb[System.Web.Management.WebBaseErrorEvent#3](~/add/codesnippet/visualbasic/d926271b-b6dc-48d8-931e-_1.vb)]"
  syntax:
    content: protected WebBaseErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception e);
    parameters:
    - id: message
      type: System.String
      description: "The event description."
    - id: eventSource
      type: System.Object
      description: "The object that is the source of the event."
    - id: eventCode
      type: System.Int32
      description: "The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;></xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "The detailed identifier for the event."
    - id: e
      type: System.Exception
      description: "The <xref:System.Exception> associated with the error."
  overload: System.Web.Management.WebBaseErrorEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebBaseErrorEvent.ErrorException
  id: ErrorException
  parent: System.Web.Management.WebBaseErrorEvent
  langs:
  - csharp
  name: ErrorException
  nameWithType: WebBaseErrorEvent.ErrorException
  fullName: System.Web.Management.WebBaseErrorEvent.ErrorException
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Gets the <xref:System.Exception> associated with the error."
  remarks: "If you implement a custom <xref:System.Web.Management.WebBaseErrorEvent>, you must ensure that your custom error event handles this exception."
  syntax:
    content: public Exception ErrorException { get; }
    return:
      type: System.Exception
      description: "The <xref:System.Exception> associated with the error."
  overload: System.Web.Management.WebBaseErrorEvent.ErrorException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebBaseErrorEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebBaseErrorEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Increments the event-error performance-related counters."
  remarks: "This method increments the following performance counters:      -   Infrastructure Error Events Raised. This is a global counter that tracks the error events raised.      -   Error Events Raised. This is an application-specific counter that tracks the number of error events raised since the application started.       This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>, which increments the Events Raised counter. This counter tracks the total number of events raised.       To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** in the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) in the IIS documentation on MSDN."
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)
  parent: System.Web.Management.WebBaseErrorEvent
  isExternal: false
  name: WebBaseErrorEvent(String,Object,Int32,Exception)
  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Exception)
  fullName: System.Web.Management.WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Exception)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)
  parent: System.Web.Management.WebBaseErrorEvent
  isExternal: false
  name: WebBaseErrorEvent(String,Object,Int32,Int32,Exception)
  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Int32,Exception)
  fullName: System.Web.Management.WebBaseErrorEvent.WebBaseErrorEvent(String,Object,Int32,Int32,Exception)
- uid: System.Web.Management.WebBaseErrorEvent.ErrorException
  parent: System.Web.Management.WebBaseErrorEvent
  isExternal: false
  name: ErrorException
  nameWithType: WebBaseErrorEvent.ErrorException
  fullName: System.Web.Management.WebBaseErrorEvent.ErrorException
- uid: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters
  parent: System.Web.Management.WebBaseErrorEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebBaseErrorEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebBaseErrorEvent.#ctor*
  parent: System.Web.Management.WebBaseErrorEvent
  isExternal: false
  name: WebBaseErrorEvent
  nameWithType: WebBaseErrorEvent.WebBaseErrorEvent
- uid: System.Web.Management.WebBaseErrorEvent.ErrorException*
  parent: System.Web.Management.WebBaseErrorEvent
  isExternal: false
  name: ErrorException
  nameWithType: WebBaseErrorEvent.ErrorException
- uid: System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebBaseErrorEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebBaseErrorEvent.IncrementPerfCounters
