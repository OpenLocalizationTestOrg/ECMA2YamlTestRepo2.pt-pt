### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  id: ReceiveAndSendReplyFactory
  children:
  - System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.#ctor
  - System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.Create(System.Windows.DependencyObject)
  langs:
  - csharp
  name: ReceiveAndSendReplyFactory
  nameWithType: ReceiveAndSendReplyFactory
  fullName: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  type: Class
  summary: "Cria uma instância do configurado <xref href=&quot;System.ServiceModel.Activities.Receive&quot;> </xref> e <xref href=&quot;System.ServiceModel.Activities.SendReply&quot;> </xref> pares de atividade."
  syntax:
    content: 'public sealed class ReceiveAndSendReplyFactory : System.Activities.Presentation.IActivityTemplateFactory'
  inheritance:
  - System.Object
  implements:
  - System.Activities.Presentation.IActivityTemplateFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  langs:
  - csharp
  name: ReceiveAndSendReplyFactory()
  nameWithType: ReceiveAndSendReplyFactory.ReceiveAndSendReplyFactory()
  fullName: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.ReceiveAndSendReplyFactory()
  type: Constructor
  assemblies:
  - System.Activities.Core.Presentation
  namespace: System.ServiceModel.Activities.Presentation.Factories
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory&quot;> </xref> classe."
  syntax:
    content: public ReceiveAndSendReplyFactory ();
    parameters: []
  overload: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.Create(System.Windows.DependencyObject)
  id: Create(System.Windows.DependencyObject)
  parent: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  langs:
  - csharp
  name: Create(DependencyObject)
  nameWithType: ReceiveAndSendReplyFactory.Create(DependencyObject)
  fullName: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.Create(DependencyObject)
  type: Method
  assemblies:
  - System.Activities.Core.Presentation
  namespace: System.ServiceModel.Activities.Presentation.Factories
  summary: "Cria uma nova <xref href=&quot;System.Activities.Statements.Sequence&quot;> </xref> atividade é composto por um <xref href=&quot;System.ServiceModel.Activities.Receive&quot;> </xref> e um <xref href=&quot;System.ServiceModel.Activities.SendReply&quot;> </xref> par."
  syntax:
    content: public System.Activities.Activity Create (System.Windows.DependencyObject target);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "O elemento de IU de fluxo de trabalho que é o contentor visual da nova atividade."
    return:
      type: System.Activities.Activity
      description: "Um novo <xref href=&quot;System.Activities.Statements.Sequence&quot;> </xref> atividade é composto por um <xref href=&quot;System.ServiceModel.Activities.Receive&quot;> </xref> e um <xref href=&quot;System.ServiceModel.Activities.SendReply&quot;> </xref> par."
  overload: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.#ctor
  parent: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  isExternal: false
  name: ReceiveAndSendReplyFactory()
  nameWithType: ReceiveAndSendReplyFactory.ReceiveAndSendReplyFactory()
  fullName: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.ReceiveAndSendReplyFactory()
- uid: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.Create(System.Windows.DependencyObject)
  parent: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  isExternal: false
  name: Create(DependencyObject)
  nameWithType: ReceiveAndSendReplyFactory.Create(DependencyObject)
  fullName: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.Create(DependencyObject)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.#ctor*
  parent: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  isExternal: false
  name: ReceiveAndSendReplyFactory
  nameWithType: ReceiveAndSendReplyFactory.ReceiveAndSendReplyFactory
- uid: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory.Create*
  parent: System.ServiceModel.Activities.Presentation.Factories.ReceiveAndSendReplyFactory
  isExternal: false
  name: Create
  nameWithType: ReceiveAndSendReplyFactory.Create
