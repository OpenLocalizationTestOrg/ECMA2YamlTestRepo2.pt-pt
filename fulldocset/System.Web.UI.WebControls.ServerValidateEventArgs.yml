### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ServerValidateEventArgs
  id: ServerValidateEventArgs
  children:
  - System.Web.UI.WebControls.ServerValidateEventArgs.#ctor(System.String,System.Boolean)
  - System.Web.UI.WebControls.ServerValidateEventArgs.IsValid
  - System.Web.UI.WebControls.ServerValidateEventArgs.Value
  langs:
  - csharp
  name: ServerValidateEventArgs
  nameWithType: ServerValidateEventArgs
  fullName: System.Web.UI.WebControls.ServerValidateEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.CustomValidator.ServerValidate&quot;></xref> event of the <xref href=&quot;System.Web.UI.WebControls.CustomValidator&quot;></xref> control. This class cannot be inherited."
  remarks: "A ServerValidateEventArgs is passed to the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event handler to provide event data to the handler. The <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event is raised when validation is performed on the server. This allows you to perform a custom server-side validation routine on the value of an input control (with a <xref:System.Web.UI.WebControls.CustomValidator> control associated with it) in the event handler.       The value to validate is determined by using the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property. Once your code has determined whether the value is valid, store the results of the validation in the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> property.       For a list of initial property values for an instance of ServerValidateEventArgs, see the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.%23ctor%2A> constructor.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use a ServerValidateEventArgs to pass event data to a custom event handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event. Notice that the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property of the ServerValidateEventArgs is used to determine the value to validate, while the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> property is used to store the results of the validation.  \n  \n [!code-cs[CustomValidatorServerValidate#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_346_1.aspx)]\n [!code-vb[CustomValidatorServerValidate#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_346_1.aspx)]  \n  \n [!code-vb[CustomValidatorServerValidate2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_346_2.aspx)]\n [!code-cs[CustomValidatorServerValidate2#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_346_2.aspx)]"
  syntax:
    content: 'public class ServerValidateEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  langs:
  - csharp
  name: ServerValidateEventArgs(String,Boolean)
  nameWithType: ServerValidateEventArgs.ServerValidateEventArgs(String,Boolean)
  fullName: System.Web.UI.WebControls.ServerValidateEventArgs.ServerValidateEventArgs(String,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.ServerValidateEventArgs&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ServerValidateEventArgs> class.       The following table shows initial property values for an instance of <xref:System.Web.UI.WebControls.ServerValidateEventArgs>.      |Property|Initial Value|   |--------------|-------------------|   |`Value`|The value of the `value` parameter.|   |`IsValid`|The value of the `isValid` parameter.|"
  syntax:
    content: public ServerValidateEventArgs (string value, bool isValid);
    parameters:
    - id: value
      type: System.String
      description: "The value to validate."
    - id: isValid
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the value passes validation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ServerValidateEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.IsValid
  id: IsValid
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  langs:
  - csharp
  name: IsValid
  nameWithType: ServerValidateEventArgs.IsValid
  fullName: System.Web.UI.WebControls.ServerValidateEventArgs.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets whether the value specified by the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value*> property passed validation."
  remarks: "Once your validation routine finishes, use the IsValid property to indicate whether the value specified by the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property passed validation. This value determines whether the input control associated with the <xref:System.Web.UI.WebControls.CustomValidator> control passed validation."
  example:
  - "The following example demonstrates how to use the IsValid property to store the results of the validation.  \n  \n [!code-cs[CustomValidatorServerValidate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_517_1.aspx)]\n [!code-vb[CustomValidatorServerValidate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_517_1.aspx)]"
  syntax:
    content: public bool IsValid { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the value specified by the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value*> property passed validation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ServerValidateEventArgs.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.Value
  id: Value
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  langs:
  - csharp
  name: Value
  nameWithType: ServerValidateEventArgs.Value
  fullName: System.Web.UI.WebControls.ServerValidateEventArgs.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the value to validate in the custom event handler for the <xref href=&quot;System.Web.UI.WebControls.CustomValidator.ServerValidate&quot;></xref> event."
  remarks: "Use the Value property determine the value to validate in the custom event handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event. Notice that you cannot programmatically change this value."
  example:
  - "The following example demonstrates how to use the Value property to determine the value to validate.  \n  \n [!code-cs[CustomValidatorServerValidate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_528_1.aspx)]\n [!code-vb[CustomValidatorServerValidate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_528_1.aspx)]"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "The value to validate in the custom event handler for the <xref href=&quot;System.Web.UI.WebControls.CustomValidator.ServerValidate&quot;></xref> event."
  overload: System.Web.UI.WebControls.ServerValidateEventArgs.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.#ctor(System.String,System.Boolean)
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  isExternal: false
  name: ServerValidateEventArgs(String,Boolean)
  nameWithType: ServerValidateEventArgs.ServerValidateEventArgs(String,Boolean)
  fullName: System.Web.UI.WebControls.ServerValidateEventArgs.ServerValidateEventArgs(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.IsValid
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  isExternal: false
  name: IsValid
  nameWithType: ServerValidateEventArgs.IsValid
  fullName: System.Web.UI.WebControls.ServerValidateEventArgs.IsValid
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.Value
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  isExternal: false
  name: Value
  nameWithType: ServerValidateEventArgs.Value
  fullName: System.Web.UI.WebControls.ServerValidateEventArgs.Value
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  isExternal: false
  name: ServerValidateEventArgs
  nameWithType: ServerValidateEventArgs.ServerValidateEventArgs
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.IsValid*
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  isExternal: false
  name: IsValid
  nameWithType: ServerValidateEventArgs.IsValid
- uid: System.Web.UI.WebControls.ServerValidateEventArgs.Value*
  parent: System.Web.UI.WebControls.ServerValidateEventArgs
  isExternal: false
  name: Value
  nameWithType: ServerValidateEventArgs.Value
