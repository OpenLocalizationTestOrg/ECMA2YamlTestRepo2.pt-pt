### YamlMime:ManagedReference
items:
- uid: System.Configuration.IdnElement
  id: IdnElement
  children:
  - System.Configuration.IdnElement.#ctor
  - System.Configuration.IdnElement.Enabled
  - System.Configuration.IdnElement.Properties
  langs:
  - csharp
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
  type: Class
  summary: "Fornece a definição de configuração para o nome de domínio de internacional (IDN) em processamento no &lt;xref:System.Uri?displayProperty=fullName&gt; classe."
  remarks: "Existente <xref:System.Uri?displayProperty=fullName>classe tiver sido expandida para fornecer suporte para identificadores de recursos de internacional (IRI) com base em RFC 3987.</xref:System.Uri?displayProperty=fullName> Os utilizadores atuais não verão qualquer alteração do comportamento de .NET Framework 2.0, a menos que permitem que especificamente IRI. Isto garante a compatibilidade de aplicações com versões anteriores do .NET Framework.       A definição de configuração para o IdnElement indiretamente é controlada através da <xref:System.Configuration.IriParsingElement>definição de configuração que processamento de IRI controlos na <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> Processamento IRI tem de estar ativado para processamento para ser possível de IDN. Se o processamento de IRI estiver desativado, o processamento IDN será definido para a definição predefinida onde o comportamento do .NET Framework 2.0 é utilizado para compatibilidade e os nomes IDN não são utilizados.       O atributo de nome de domínio Internacionalizado (IDN) controla apenas o processamento de IDN. Todos os outro IRI o processamento (normalização carateres, por exemplo) é executado por predefinição.       A definição de configuração para o IdnElement serão lidos uma vez quando o primeiro <xref:System.Uri?displayProperty=fullName>classe é construída.</xref:System.Uri?displayProperty=fullName> Alterações às definições de configuração após essa hora são ignoradas.       Para obter mais informações sobre o suporte de IRI, consulte a secção observações para a <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: 'public sealed class IdnElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Configuration.IdnElement.#ctor
  id: '#ctor'
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: IdnElement()
  nameWithType: IdnElement.IdnElement()
  fullName: System.Configuration.IdnElement.IdnElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> classe."
  remarks: "Este construtor cria uma <xref:System.Configuration.IdnElement>instância</xref:System.Configuration.IdnElement>"
  syntax:
    content: public IdnElement ();
    parameters: []
  overload: System.Configuration.IdnElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IdnElement.Enabled
  id: Enabled
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: Enabled
  nameWithType: IdnElement.Enabled
  fullName: System.Configuration.IdnElement.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor da <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> definição de configuração."
  remarks: "O atributo de nome de domínio internacional (IDN) controla apenas o processamento de IDN. Todos os outros processamento de identificadores de recursos de internacional (IRI) (normalização carateres, por exemplo) é executado por predefinição.       A definição de configuração para o <xref:System.Configuration.IdnElement>indiretamente é controlado pela <xref:System.Configuration.IriParsingElement?displayProperty=fullName>configuração definição que controla IRI em processamento na <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement?displayProperty=fullName> </xref:System.Configuration.IdnElement> Processamento IRI tem de estar ativado para processamento para ser possível de IDN. Se o processamento de IRI estiver desativado, o processamento IDN será definido para a definição predefinida onde o comportamento do .NET Framework 2.0 é utilizado para compatibilidade e os nomes IDN não são utilizados.       A definição de configuração para o <xref:System.Configuration.IdnElement>serão lidos uma vez quando o primeiro <xref:System.Uri?displayProperty=fullName>classe é construída.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> Alterações às definições de configuração após essa hora são ignoradas.       Para obter mais informações sobre o suporte de IRI, consulte a secção observações para a <xref:System.Uri?displayProperty=fullName>classe.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public UriIdnScope Enabled { get; set; }
    return:
      type: System.UriIdnScope
      description: "A <xref href=&quot;System.UriIdnScope&quot;> </xref> que contém a atual definição de configuração para o processamento de IDN."
  overload: System.Configuration.IdnElement.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IdnElement.Properties
  id: Properties
  parent: System.Configuration.IdnElement
  langs:
  - csharp
  name: Properties
  nameWithType: IdnElement.Properties
  fullName: System.Configuration.IdnElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A adicionar."
  overload: System.Configuration.IdnElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Configuration.IdnElement.#ctor
  parent: System.Configuration.IdnElement
  isExternal: false
  name: IdnElement()
  nameWithType: IdnElement.IdnElement()
  fullName: System.Configuration.IdnElement.IdnElement()
- uid: System.Configuration.IdnElement.Enabled
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Enabled
  nameWithType: IdnElement.Enabled
  fullName: System.Configuration.IdnElement.Enabled
- uid: System.UriIdnScope
  parent: System
  isExternal: false
  name: UriIdnScope
  nameWithType: UriIdnScope
  fullName: System.UriIdnScope
- uid: System.Configuration.IdnElement.Properties
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Properties
  nameWithType: IdnElement.Properties
  fullName: System.Configuration.IdnElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.IdnElement.#ctor*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement.IdnElement
- uid: System.Configuration.IdnElement.Enabled*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Enabled
  nameWithType: IdnElement.Enabled
- uid: System.Configuration.IdnElement.Properties*
  parent: System.Configuration.IdnElement
  isExternal: false
  name: Properties
  nameWithType: IdnElement.Properties
