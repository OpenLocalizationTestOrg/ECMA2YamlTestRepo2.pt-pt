### YamlMime:ManagedReference
items:
- uid: System.Windows.GiveFeedbackEventArgs
  id: GiveFeedbackEventArgs
  children:
  - System.Windows.GiveFeedbackEventArgs.Effects
  - System.Windows.GiveFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.GiveFeedbackEventArgs.UseDefaultCursors
  langs:
  - csharp
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.GiveFeedbackEventArgs
  type: Class
  summary: "Contains arguments for the <xref:System.Windows.DragDrop.GiveFeedback> event."
  remarks: "The <xref:System.Windows.DragDrop.GiveFeedback> event occurs when a drag-and-drop operation is started. The <xref:System.Windows.DragDrop.GiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer to provide the user with visual feedback during a drag-and-drop operation."
  syntax:
    content: 'public sealed class GiveFeedbackEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.GiveFeedbackEventArgs.Effects
  id: Effects
  parent: System.Windows.GiveFeedbackEventArgs
  langs:
  - csharp
  name: Effects
  nameWithType: GiveFeedbackEventArgs.Effects
  fullName: System.Windows.GiveFeedbackEventArgs.Effects
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets a value that indicates the effects of drag-and-drop operation."
  syntax:
    content: public System.Windows.DragDropEffects Effects { get; }
    return:
      type: System.Windows.DragDropEffects
      description: "A member of the <xref href=&quot;System.Windows.DragDropEffects&quot;></xref> enumeration that indicates the effects of the drag-and-drop operation."
  overload: System.Windows.GiveFeedbackEventArgs.Effects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.GiveFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.GiveFeedbackEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: GiveFeedbackEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.GiveFeedbackEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "To be added."
    - id: genericTarget
      type: System.Object
      description: "To be added."
  overload: System.Windows.GiveFeedbackEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.GiveFeedbackEventArgs.UseDefaultCursors
  id: UseDefaultCursors
  parent: System.Windows.GiveFeedbackEventArgs
  langs:
  - csharp
  name: UseDefaultCursors
  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors
  fullName: System.Windows.GiveFeedbackEventArgs.UseDefaultCursors
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets or sets a Boolean value indicating whether default cursor feedback behavior should be used for the associated drag-and-drop operation."
  remarks: "By default, the mouse cursor changes to provide feedback about permissible actions during a drag-and-drop operation."
  syntax:
    content: public bool UseDefaultCursors { get; set; }
    return:
      type: System.Boolean
      description: "A Boolean value that indicating whether default cursor feedback behavior should be used for the associated drag-and-drop operation. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to use default feedback cursor behavior; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.GiveFeedbackEventArgs.UseDefaultCursors*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.Windows.GiveFeedbackEventArgs.Effects
  parent: System.Windows.GiveFeedbackEventArgs
  isExternal: false
  name: Effects
  nameWithType: GiveFeedbackEventArgs.Effects
  fullName: System.Windows.GiveFeedbackEventArgs.Effects
- uid: System.Windows.DragDropEffects
  parent: System.Windows
  isExternal: false
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: System.Windows.DragDropEffects
- uid: System.Windows.GiveFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.GiveFeedbackEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: GiveFeedbackEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.GiveFeedbackEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.GiveFeedbackEventArgs.UseDefaultCursors
  parent: System.Windows.GiveFeedbackEventArgs
  isExternal: false
  name: UseDefaultCursors
  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors
  fullName: System.Windows.GiveFeedbackEventArgs.UseDefaultCursors
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.GiveFeedbackEventArgs.Effects*
  parent: System.Windows.GiveFeedbackEventArgs
  isExternal: false
  name: Effects
  nameWithType: GiveFeedbackEventArgs.Effects
- uid: System.Windows.GiveFeedbackEventArgs.InvokeEventHandler*
  parent: System.Windows.GiveFeedbackEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: GiveFeedbackEventArgs.InvokeEventHandler
- uid: System.Windows.GiveFeedbackEventArgs.UseDefaultCursors*
  parent: System.Windows.GiveFeedbackEventArgs
  isExternal: false
  name: UseDefaultCursors
  nameWithType: GiveFeedbackEventArgs.UseDefaultCursors
