### YamlMime:ManagedReference
items:
- uid: System.Windows.WeakEventManager.ListenerList
  id: WeakEventManager.ListenerList
  children:
  - System.Windows.WeakEventManager.ListenerList.#ctor
  - System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)
  - System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)
  - System.Windows.WeakEventManager.ListenerList.BeginUse
  - System.Windows.WeakEventManager.ListenerList.Clone
  - System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.ListenerList.Count
  - System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)
  - System.Windows.WeakEventManager.ListenerList.Empty
  - System.Windows.WeakEventManager.ListenerList.EndUse
  - System.Windows.WeakEventManager.ListenerList.IsEmpty
  - System.Windows.WeakEventManager.ListenerList.Item(System.Int32)
  - System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  - System.Windows.WeakEventManager.ListenerList.Purge
  - System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)
  langs:
  - csharp
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
  type: Class
  syntax:
    content: protected class WeakEventManager.ListenerList
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.#ctor
  id: '#ctor'
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: WeakEventManager+ListenerList()
  nameWithType: WeakEventManager+ListenerList.WeakEventManager+ListenerList()
  fullName: System.Windows.WeakEventManager+ListenerList.WeakEventManager+ListenerList()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public ListenerList ();
    parameters: []
  overload: System.Windows.WeakEventManager.ListenerList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: WeakEventManager+ListenerList(Int32)
  nameWithType: WeakEventManager+ListenerList.WeakEventManager+ListenerList(Int32)
  fullName: System.Windows.WeakEventManager+ListenerList.WeakEventManager+ListenerList(Int32)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public ListenerList (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)
  id: Add(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Add(IWeakEventListener)
  nameWithType: WeakEventManager+ListenerList.Add(IWeakEventListener)
  fullName: System.Windows.WeakEventManager+ListenerList.Add(IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public void Add (System.Windows.IWeakEventListener listener);
    parameters:
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)
  id: AddHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: AddHandler(Delegate)
  nameWithType: WeakEventManager+ListenerList.AddHandler(Delegate)
  fullName: System.Windows.WeakEventManager+ListenerList.AddHandler(Delegate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public void AddHandler (Delegate handler);
    parameters:
    - id: handler
      type: System.Delegate
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.BeginUse
  id: BeginUse
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: BeginUse()
  nameWithType: WeakEventManager+ListenerList.BeginUse()
  fullName: System.Windows.WeakEventManager+ListenerList.BeginUse()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public bool BeginUse ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.BeginUse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.Clone
  id: Clone
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Clone()
  nameWithType: WeakEventManager+ListenerList.Clone()
  fullName: System.Windows.WeakEventManager+ListenerList.Clone()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public virtual System.Windows.WeakEventManager.ListenerList Clone ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)
  id: CopyTo(System.Windows.WeakEventManager.ListenerList)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: CopyTo(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager+ListenerList.CopyTo(WeakEventManager+ListenerList)
  fullName: System.Windows.WeakEventManager+ListenerList.CopyTo(WeakEventManager+ListenerList)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: protected void CopyTo (System.Windows.WeakEventManager.ListenerList newList);
    parameters:
    - id: newList
      type: System.Windows.WeakEventManager.ListenerList
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.Count
  id: Count
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Count
  nameWithType: WeakEventManager+ListenerList.Count
  fullName: System.Windows.WeakEventManager+ListenerList.Count
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)
  id: DeliverEvent(System.Object,System.EventArgs,System.Type)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: DeliverEvent(Object,EventArgs,Type)
  nameWithType: WeakEventManager+ListenerList.DeliverEvent(Object,EventArgs,Type)
  fullName: System.Windows.WeakEventManager+ListenerList.DeliverEvent(Object,EventArgs,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public virtual bool DeliverEvent (object sender, EventArgs args, Type managerType);
    parameters:
    - id: sender
      type: System.Object
      description: "To be added."
    - id: args
      type: System.EventArgs
      description: "To be added."
    - id: managerType
      type: System.Type
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.DeliverEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.Empty
  id: Empty
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Empty
  nameWithType: WeakEventManager+ListenerList.Empty
  fullName: System.Windows.WeakEventManager+ListenerList.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static System.Windows.WeakEventManager.ListenerList Empty { get; }
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.EndUse
  id: EndUse
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: EndUse()
  nameWithType: WeakEventManager+ListenerList.EndUse()
  fullName: System.Windows.WeakEventManager+ListenerList.EndUse()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public void EndUse ();
    parameters: []
  overload: System.Windows.WeakEventManager.ListenerList.EndUse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.IsEmpty
  id: IsEmpty
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: IsEmpty
  nameWithType: WeakEventManager+ListenerList.IsEmpty
  fullName: System.Windows.WeakEventManager+ListenerList.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WeakEventManager+ListenerList.Item(Int32)
  fullName: System.Windows.WeakEventManager+ListenerList.Item(Int32)
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public System.Windows.IWeakEventListener this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
    return:
      type: System.Windows.IWeakEventListener
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  id: PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: PrepareForWriting(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager+ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
  fullName: System.Windows.WeakEventManager+ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static bool PrepareForWriting (ref System.Windows.WeakEventManager.ListenerList list);
    parameters:
    - id: list
      type: System.Windows.WeakEventManager.ListenerList
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.PrepareForWriting*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.Purge
  id: Purge
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Purge()
  nameWithType: WeakEventManager+ListenerList.Purge()
  fullName: System.Windows.WeakEventManager+ListenerList.Purge()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public bool Purge ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)
  id: Remove(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: Remove(IWeakEventListener)
  nameWithType: WeakEventManager+ListenerList.Remove(IWeakEventListener)
  fullName: System.Windows.WeakEventManager+ListenerList.Remove(IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public void Remove (System.Windows.IWeakEventListener listener);
    parameters:
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)
  id: RemoveHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  langs:
  - csharp
  name: RemoveHandler(Delegate)
  nameWithType: WeakEventManager+ListenerList.RemoveHandler(Delegate)
  fullName: System.Windows.WeakEventManager+ListenerList.RemoveHandler(Delegate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public void RemoveHandler (Delegate handler);
    parameters:
    - id: handler
      type: System.Delegate
      description: "To be added."
  overload: System.Windows.WeakEventManager.ListenerList.RemoveHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.WeakEventManager.ListenerList.#ctor
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: WeakEventManager+ListenerList()
  nameWithType: WeakEventManager+ListenerList.WeakEventManager+ListenerList()
  fullName: System.Windows.WeakEventManager+ListenerList.WeakEventManager+ListenerList()
- uid: System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: WeakEventManager+ListenerList(Int32)
  nameWithType: WeakEventManager+ListenerList.WeakEventManager+ListenerList(Int32)
  fullName: System.Windows.WeakEventManager+ListenerList.WeakEventManager+ListenerList(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Add(IWeakEventListener)
  nameWithType: WeakEventManager+ListenerList.Add(IWeakEventListener)
  fullName: System.Windows.WeakEventManager+ListenerList.Add(IWeakEventListener)
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: AddHandler(Delegate)
  nameWithType: WeakEventManager+ListenerList.AddHandler(Delegate)
  fullName: System.Windows.WeakEventManager+ListenerList.AddHandler(Delegate)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.WeakEventManager.ListenerList.BeginUse
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: BeginUse()
  nameWithType: WeakEventManager+ListenerList.BeginUse()
  fullName: System.Windows.WeakEventManager+ListenerList.BeginUse()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.WeakEventManager.ListenerList.Clone
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Clone()
  nameWithType: WeakEventManager+ListenerList.Clone()
  fullName: System.Windows.WeakEventManager+ListenerList.Clone()
- uid: System.Windows.WeakEventManager.ListenerList
  parent: System.Windows
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: CopyTo(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager+ListenerList.CopyTo(WeakEventManager+ListenerList)
  fullName: System.Windows.WeakEventManager+ListenerList.CopyTo(WeakEventManager+ListenerList)
- uid: System.Windows.WeakEventManager.ListenerList.Count
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Count
  nameWithType: WeakEventManager+ListenerList.Count
  fullName: System.Windows.WeakEventManager+ListenerList.Count
- uid: System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: DeliverEvent(Object,EventArgs,Type)
  nameWithType: WeakEventManager+ListenerList.DeliverEvent(Object,EventArgs,Type)
  fullName: System.Windows.WeakEventManager+ListenerList.DeliverEvent(Object,EventArgs,Type)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.WeakEventManager.ListenerList.Empty
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Empty
  nameWithType: WeakEventManager+ListenerList.Empty
  fullName: System.Windows.WeakEventManager+ListenerList.Empty
- uid: System.Windows.WeakEventManager.ListenerList.EndUse
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: EndUse()
  nameWithType: WeakEventManager+ListenerList.EndUse()
  fullName: System.Windows.WeakEventManager+ListenerList.EndUse()
- uid: System.Windows.WeakEventManager.ListenerList.IsEmpty
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: IsEmpty
  nameWithType: WeakEventManager+ListenerList.IsEmpty
  fullName: System.Windows.WeakEventManager+ListenerList.IsEmpty
- uid: System.Windows.WeakEventManager.ListenerList.Item(System.Int32)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Item(Int32)
  nameWithType: WeakEventManager+ListenerList.Item(Int32)
  fullName: System.Windows.WeakEventManager+ListenerList.Item(Int32)
- uid: System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: PrepareForWriting(WeakEventManager+ListenerList)
  nameWithType: WeakEventManager+ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
  fullName: System.Windows.WeakEventManager+ListenerList.PrepareForWriting(WeakEventManager+ListenerList)
- uid: System.Windows.WeakEventManager.ListenerList.Purge
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Purge()
  nameWithType: WeakEventManager+ListenerList.Purge()
  fullName: System.Windows.WeakEventManager+ListenerList.Purge()
- uid: System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Remove(IWeakEventListener)
  nameWithType: WeakEventManager+ListenerList.Remove(IWeakEventListener)
  fullName: System.Windows.WeakEventManager+ListenerList.Remove(IWeakEventListener)
- uid: System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: RemoveHandler(Delegate)
  nameWithType: WeakEventManager+ListenerList.RemoveHandler(Delegate)
  fullName: System.Windows.WeakEventManager+ListenerList.RemoveHandler(Delegate)
- uid: System.Windows.WeakEventManager.ListenerList.#ctor*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList.WeakEventManager+ListenerList
- uid: System.Windows.WeakEventManager.ListenerList.Add*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Add
  nameWithType: WeakEventManager+ListenerList.Add
- uid: System.Windows.WeakEventManager.ListenerList.AddHandler*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: AddHandler
  nameWithType: WeakEventManager+ListenerList.AddHandler
- uid: System.Windows.WeakEventManager.ListenerList.BeginUse*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: BeginUse
  nameWithType: WeakEventManager+ListenerList.BeginUse
- uid: System.Windows.WeakEventManager.ListenerList.Clone*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Clone
  nameWithType: WeakEventManager+ListenerList.Clone
- uid: System.Windows.WeakEventManager.ListenerList.CopyTo*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: CopyTo
  nameWithType: WeakEventManager+ListenerList.CopyTo
- uid: System.Windows.WeakEventManager.ListenerList.Count*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Count
  nameWithType: WeakEventManager+ListenerList.Count
- uid: System.Windows.WeakEventManager.ListenerList.DeliverEvent*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: DeliverEvent
  nameWithType: WeakEventManager+ListenerList.DeliverEvent
- uid: System.Windows.WeakEventManager.ListenerList.Empty*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Empty
  nameWithType: WeakEventManager+ListenerList.Empty
- uid: System.Windows.WeakEventManager.ListenerList.EndUse*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: EndUse
  nameWithType: WeakEventManager+ListenerList.EndUse
- uid: System.Windows.WeakEventManager.ListenerList.IsEmpty*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: IsEmpty
  nameWithType: WeakEventManager+ListenerList.IsEmpty
- uid: System.Windows.WeakEventManager.ListenerList.Item*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Item
  nameWithType: WeakEventManager+ListenerList.Item
- uid: System.Windows.WeakEventManager.ListenerList.PrepareForWriting*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: PrepareForWriting
  nameWithType: WeakEventManager+ListenerList.PrepareForWriting
- uid: System.Windows.WeakEventManager.ListenerList.Purge*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Purge
  nameWithType: WeakEventManager+ListenerList.Purge
- uid: System.Windows.WeakEventManager.ListenerList.Remove*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: Remove
  nameWithType: WeakEventManager+ListenerList.Remove
- uid: System.Windows.WeakEventManager.ListenerList.RemoveHandler*
  parent: System.Windows.WeakEventManager.ListenerList
  isExternal: false
  name: RemoveHandler
  nameWithType: WeakEventManager+ListenerList.RemoveHandler
