### YamlMime:ManagedReference
items:
- uid: System.Data.ITableMappingCollection
  id: ITableMappingCollection
  children:
  - System.Data.ITableMappingCollection.Add(System.String,System.String)
  - System.Data.ITableMappingCollection.Contains(System.String)
  - System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  - System.Data.ITableMappingCollection.IndexOf(System.String)
  - System.Data.ITableMappingCollection.Item(System.String)
  - System.Data.ITableMappingCollection.RemoveAt(System.String)
  langs:
  - csharp
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
  type: Interface
  summary: "Contains a collection of TableMapping objects, and is implemented by the <see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot;></see>, which is used in common by .NET Framework data providers."
  remarks: "The ITableMappingCollection interface allows an inheriting class to implement a TableMapping collection. For more information, see [DataAdapter DataTable and DataColumn Mappings](../Topic/DataAdapter%20DataTable%20and%20DataColumn%20Mappings.md).       An application does not create an instance of the ITableMappingCollection interface directly, but creates an instance of a class that inherits ITableMappingCollection.       Classes that inherit ITableMappingCollection must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the ITableMappingCollection interface defines one implementation of the <xref:System.Data.ITableMappingCollection.RemoveAt%2A> method. In turn, the <xref:System.Data.Common.DataTableMappingCollection> class inherits this method, and defines two additional overloads of <xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A>."
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.Common.DataTableMapping>, and adds it to a <xref:System.Data.Common.DataTableMappingCollection> collection. It then informs the user that the mapping was added to the collection.  \n  \n [!code-vb[Classic WebData DataTableMapping Example#1](~/add/codesnippet/VisualBasic/t-system.data.itablemapp_1_1.vb)]\n [!code-cs[Classic WebData DataTableMapping Example#1](~/add/codesnippet/CSharp/t-system.data.itablemapp_1_1.cs)]"
  syntax:
    content: 'public interface ITableMappingCollection : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ITableMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: ITableMappingCollection.Add(String,String)
  fullName: System.Data.ITableMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adds a table mapping to the collection."
  syntax:
    content: public System.Data.ITableMapping Add (string sourceTableName, string dataSetTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "The case-sensitive name of the source table."
    - id: dataSetTableName
      type: System.String
      description: "The name of the  table."
    return:
      type: System.Data.ITableMapping
      description: "To be added."
  overload: System.Data.ITableMappingCollection.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ITableMappingCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ITableMappingCollection.Contains(String)
  fullName: System.Data.ITableMappingCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets a value indicating whether the collection contains a table mapping with the specified source table name."
  syntax:
    content: public bool Contains (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "The case-sensitive name of the source table."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.ITableMappingCollection.Contains*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  id: GetByDataSetTable(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: GetByDataSetTable(String)
  nameWithType: ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.ITableMappingCollection.GetByDataSetTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the TableMapping object with the specified <see cref=&quot;T:System.Data.DataSet&quot;></see> table name."
  syntax:
    content: public System.Data.ITableMapping GetByDataSetTable (string dataSetTableName);
    parameters:
    - id: dataSetTableName
      type: System.String
      description: "The name of the  table within the collection."
    return:
      type: System.Data.ITableMapping
      description: "To be added."
  overload: System.Data.ITableMappingCollection.GetByDataSetTable*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ITableMappingCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: ITableMappingCollection.IndexOf(String)
  fullName: System.Data.ITableMappingCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the location of the <see cref=&quot;T:System.Data.ITableMapping&quot;></see> object within the collection."
  syntax:
    content: public int IndexOf (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "The case-sensitive name of the source table."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Data.ITableMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ITableMappingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ITableMappingCollection.Item(String)
  fullName: System.Data.ITableMappingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets or sets the instance of <see cref=&quot;T:System.Data.ITableMapping&quot;></see> with the specified &lt;xref:System.Data.ITableMapping.SourceTable%2A&gt; name."
  syntax:
    content: public object this[string index] { get; set; }
    parameters:
    - id: index
      type: System.String
      description: "The  name of the ."
    return:
      type: System.Object
      description: "The instance of <see cref=&quot;T:System.Data.ITableMapping&quot;></see> with the specified <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;></xref> name."
  overload: System.Data.ITableMappingCollection.Item*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ITableMappingCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: RemoveAt(String)
  nameWithType: ITableMappingCollection.RemoveAt(String)
  fullName: System.Data.ITableMappingCollection.RemoveAt(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Removes the <see cref=&quot;T:System.Data.ITableMapping&quot;></see> object with the specified &lt;xref:System.Data.ITableMapping.SourceTable%2A&gt; name from the collection."
  syntax:
    content: public void RemoveAt (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "The case-sensitive name of the ."
  overload: System.Data.ITableMappingCollection.RemoveAt*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Data.ITableMappingCollection.Add(System.String,System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: ITableMappingCollection.Add(String,String)
  fullName: System.Data.ITableMappingCollection.Add(String,String)
- uid: System.Data.ITableMapping
  parent: System.Data
  isExternal: false
  name: ITableMapping
  nameWithType: ITableMapping
  fullName: System.Data.ITableMapping
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.ITableMappingCollection.Contains(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ITableMappingCollection.Contains(String)
  fullName: System.Data.ITableMappingCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: GetByDataSetTable(String)
  nameWithType: ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.ITableMappingCollection.GetByDataSetTable(String)
- uid: System.Data.ITableMappingCollection.IndexOf(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: ITableMappingCollection.IndexOf(String)
  fullName: System.Data.ITableMappingCollection.IndexOf(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ITableMappingCollection.Item(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Item(String)
  nameWithType: ITableMappingCollection.Item(String)
  fullName: System.Data.ITableMappingCollection.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.ITableMappingCollection.RemoveAt(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: RemoveAt(String)
  nameWithType: ITableMappingCollection.RemoveAt(String)
  fullName: System.Data.ITableMappingCollection.RemoveAt(String)
- uid: System.Data.ITableMappingCollection.Add*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Add
  nameWithType: ITableMappingCollection.Add
- uid: System.Data.ITableMappingCollection.Contains*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Contains
  nameWithType: ITableMappingCollection.Contains
- uid: System.Data.ITableMappingCollection.GetByDataSetTable*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: GetByDataSetTable
  nameWithType: ITableMappingCollection.GetByDataSetTable
- uid: System.Data.ITableMappingCollection.IndexOf*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: ITableMappingCollection.IndexOf
- uid: System.Data.ITableMappingCollection.Item*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Item
  nameWithType: ITableMappingCollection.Item
- uid: System.Data.ITableMappingCollection.RemoveAt*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ITableMappingCollection.RemoveAt
