### YamlMime:ManagedReference
items:
- uid: System.Data.ITableMappingCollection
  id: ITableMappingCollection
  children:
  - System.Data.ITableMappingCollection.Add(System.String,System.String)
  - System.Data.ITableMappingCollection.Contains(System.String)
  - System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  - System.Data.ITableMappingCollection.IndexOf(System.String)
  - System.Data.ITableMappingCollection.Item(System.String)
  - System.Data.ITableMappingCollection.RemoveAt(System.String)
  langs:
  - csharp
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
  type: Interface
  summary: "Contém uma coleção de objetos de TableMapping e é implementado pelo <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>, que é utilizado em comum pelos fornecedores de dados .NET Framework."
  remarks: "A interface ITableMappingCollection permite uma classe inheriting implementar uma coleção de TableMapping. Para obter mais informações, consulte [DataAdapter DataTable e mapeamentos DataColumn](~/add/includes/ajax-current-ext-md.md).       Uma aplicação não cria uma instância da ITableMappingCollection interface diretamente, mas cria uma instância de uma classe que herda ITableMappingCollection.       As classes que herdam ITableMappingCollection tem de implementar os membros herdados e definir normalmente membros adicionais para adicionar a funcionalidade específica do fornecedor. Por exemplo, a interface ITableMappingCollection define uma implementação do <xref:System.Data.ITableMappingCollection.RemoveAt%2A>método.</xref:System.Data.ITableMappingCollection.RemoveAt%2A> Por sua vez, a <xref:System.Data.Common.DataTableMappingCollection>classe herda este método e define duas sobrecargas adicionais de <xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A>.</xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A> </xref:System.Data.Common.DataTableMappingCollection>"
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.Common.DataTableMapping>, and adds it to a <xref:System.Data.Common.DataTableMappingCollection> collection. It then informs the user that the mapping was added to the collection.  \n  \n [!code-vb[Classic WebData DataTableMapping Example#1](~/add/codesnippet/visualbasic/t-system.data.itablemapp_1_1.vb)]\n [!code-cs[Classic WebData DataTableMapping Example#1](~/add/codesnippet/csharp/t-system.data.itablemapp_1_1.cs)]"
  syntax:
    content: 'public interface ITableMappingCollection : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: ITableMappingCollection.Add(String,String)
  fullName: System.Data.ITableMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adiciona um mapeamento de tabela à coleção."
  syntax:
    content: public System.Data.ITableMapping Add (string sourceTableName, string dataSetTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "O nome de maiúsculas e minúsculas da tabela de origem."
    - id: dataSetTableName
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.DataSet&quot;> </xref> tabela."
    return:
      type: System.Data.ITableMapping
      description: "Uma referência a recentemente-mapeados <xref href=&quot;System.Data.ITableMapping&quot;> </xref> objeto."
  overload: System.Data.ITableMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ITableMappingCollection.Contains(String)
  fullName: System.Data.ITableMappingCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um valor que indica se a coleção contém um mapeamento de tabela com o nome da tabela de origem especificada."
  syntax:
    content: public bool Contains (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "O nome de maiúsculas e minúsculas da tabela de origem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um mapeamento de tabela com o nome da tabela de origem especificada existe, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ITableMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  id: GetByDataSetTable(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: GetByDataSetTable(String)
  nameWithType: ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.ITableMappingCollection.GetByDataSetTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o objeto de TableMapping com especificado <xref href=&quot;System.Data.DataSet&quot;> </xref> nome da tabela."
  syntax:
    content: public System.Data.ITableMapping GetByDataSetTable (string dataSetTableName);
    parameters:
    - id: dataSetTableName
      type: System.String
      description: "O nome do <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> tabela dentro da coleção."
    return:
      type: System.Data.ITableMapping
      description: "O objeto de TableMapping com especificado <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> nome da tabela."
  overload: System.Data.ITableMappingCollection.GetByDataSetTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: ITableMappingCollection.IndexOf(String)
  fullName: System.Data.ITableMappingCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém a localização do <xref href=&quot;System.Data.ITableMapping&quot;> </xref> objeto dentro da coleção."
  syntax:
    content: public int IndexOf (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "O nome de maiúsculas e minúsculas da tabela de origem."
    return:
      type: System.Int32
      description: "A localização com base em zero do <xref href=&quot;System.Data.ITableMapping&quot;> </xref> objeto dentro da coleção."
  overload: System.Data.ITableMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ITableMappingCollection.Item(String)
  fullName: System.Data.ITableMappingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém ou define a instância do <xref href=&quot;System.Data.ITableMapping&quot;> </xref> com especificado <xref:System.Data.ITableMapping.SourceTable*>nome.</xref:System.Data.ITableMapping.SourceTable*>"
  syntax:
    content: public object this[string index] { get; set; }
    parameters:
    - id: index
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;></xref> name of the <xref href=&quot;System.Data.ITableMapping&quot;></xref>."
    return:
      type: System.Object
      description: "A instância do <xref href=&quot;System.Data.ITableMapping&quot;> </xref> com especificado <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;> </xref> nome."
  overload: System.Data.ITableMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: RemoveAt(String)
  nameWithType: ITableMappingCollection.RemoveAt(String)
  fullName: System.Data.ITableMappingCollection.RemoveAt(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o <xref href=&quot;System.Data.ITableMapping&quot;> </xref> objeto especificado com <xref:System.Data.ITableMapping.SourceTable*>nome da coleção.</xref:System.Data.ITableMapping.SourceTable*>"
  syntax:
    content: public void RemoveAt (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "O nome de maiúsculas e minúsculas da <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ITableMappingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.ITableMappingCollection.Add(System.String,System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: ITableMappingCollection.Add(String,String)
  fullName: System.Data.ITableMappingCollection.Add(String,String)
- uid: System.Data.ITableMapping
  parent: System.Data
  isExternal: false
  name: ITableMapping
  nameWithType: ITableMapping
  fullName: System.Data.ITableMapping
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.ITableMappingCollection.Contains(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ITableMappingCollection.Contains(String)
  fullName: System.Data.ITableMappingCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: GetByDataSetTable(String)
  nameWithType: ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.ITableMappingCollection.GetByDataSetTable(String)
- uid: System.Data.ITableMappingCollection.IndexOf(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: ITableMappingCollection.IndexOf(String)
  fullName: System.Data.ITableMappingCollection.IndexOf(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ITableMappingCollection.Item(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Item(String)
  nameWithType: ITableMappingCollection.Item(String)
  fullName: System.Data.ITableMappingCollection.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.ITableMappingCollection.RemoveAt(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: RemoveAt(String)
  nameWithType: ITableMappingCollection.RemoveAt(String)
  fullName: System.Data.ITableMappingCollection.RemoveAt(String)
- uid: System.Data.ITableMappingCollection.Add*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Add
  nameWithType: ITableMappingCollection.Add
- uid: System.Data.ITableMappingCollection.Contains*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Contains
  nameWithType: ITableMappingCollection.Contains
- uid: System.Data.ITableMappingCollection.GetByDataSetTable*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: GetByDataSetTable
  nameWithType: ITableMappingCollection.GetByDataSetTable
- uid: System.Data.ITableMappingCollection.IndexOf*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: ITableMappingCollection.IndexOf
- uid: System.Data.ITableMappingCollection.Item*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Item
  nameWithType: ITableMappingCollection.Item
- uid: System.Data.ITableMappingCollection.RemoveAt*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ITableMappingCollection.RemoveAt
