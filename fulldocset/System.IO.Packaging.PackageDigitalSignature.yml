### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageDigitalSignature
  id: PackageDigitalSignature
  children:
  - System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  - System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  - System.IO.Packaging.PackageDigitalSignature.Signature
  - System.IO.Packaging.PackageDigitalSignature.SignaturePart
  - System.IO.Packaging.PackageDigitalSignature.SignatureType
  - System.IO.Packaging.PackageDigitalSignature.SignatureValue
  - System.IO.Packaging.PackageDigitalSignature.SignedParts
  - System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  - System.IO.Packaging.PackageDigitalSignature.Signer
  - System.IO.Packaging.PackageDigitalSignature.SigningTime
  - System.IO.Packaging.PackageDigitalSignature.TimeFormat
  - System.IO.Packaging.PackageDigitalSignature.Verify
  - System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  langs:
  - csharp
  name: PackageDigitalSignature
  nameWithType: PackageDigitalSignature
  fullName: System.IO.Packaging.PackageDigitalSignature
  type: Class
  summary: "Represents a digital signature that is applied to a set of package parts and relationships."
  remarks: "A PackageDigitalSignature object is immutable and cannot be altered after it is created.       For security, a PackageDigitalSignature can be associated with parts within a <xref:System.IO.Packaging.Package>. A PackageDigitalSignature incorporates an X.509 certificate that provides two features:      -   Identifies and authenticates the originator of the part.      -   Validates that the part has not been modified.       The digital signature does not preclude a part from being modified, but a validation check against the signature fails if the part has changed in any way. The application can then take appropriate actionâ€”for example, it can prevent the part from opening or it can notify the user that the part has been modified and is not secure.       For more information about package digital signatures, see the MSDN article [Digital Signing Framework of the Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkId=74494)."
  syntax:
    content: public class PackageDigitalSignature
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  id: CertificateEmbeddingOption
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the X.509 certificate embedding option."
  remarks: "X.509 certificates used to validate a package may be stored in one of three locations:      |||   |-|-|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|In its own certificate <xref:System.IO.Packaging.PackagePart> in the package.<br /><br /> The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|Within the content of the <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> in the package.<br /><br /> The X.509 certificate can be obtained through the <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> property.|   |<xref:System.IO.Packaging.CertificateEmbeddingOption>|External to the package in a location known by both the application that creates the signature and the application that later uses the signature for validation.|"
  syntax:
    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption { get; }
    return:
      type: System.IO.Packaging.CertificateEmbeddingOption
      description: "One of the <xref href=&quot;System.IO.Packaging.CertificateEmbeddingOption&quot;></xref> values that specifies the option for the digital signature."
  overload: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  id: GetPartTransformList(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: GetPartTransformList(Uri)
  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Returns an ordered list of the <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> operations applied to a given part."
  syntax:
    content: public System.Collections.Generic.List<string> GetPartTransformList (Uri partName);
    parameters:
    - id: partName
      type: System.Uri
      description: "The <xref:System.Uri> of the <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> to return the transform list for."
    return:
      type: System.Collections.Generic.List{System.String}
      description: "An ordered list of URI strings, such as <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot;></xref> or <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot;></xref>, that represents the canonical XML transformations applied to the part with the given <code>partName</code> URI."
  overload: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Signature
  id: Signature
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
  fullName: System.IO.Packaging.PackageDigitalSignature.Signature
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets or sets the XML digital signature."
  remarks: "Signature provides access to the foundation class that performs type-specific signature cryptographic functions and serialization to and from the <xref:System.IO.Packaging.PackagePart> that hosts the signature."
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; set; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "The XML digital signature."
  overload: System.IO.Packaging.PackageDigitalSignature.Signature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital Signature has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  id: SignaturePart
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> that contains the signature."
  remarks: "The signature&quot;s package part is frequently accessed when the signature is countersigned."
  syntax:
    content: public System.IO.Packaging.PackagePart SignaturePart { get; }
    return:
      type: System.IO.Packaging.PackagePart
      description: "The package part that contains the signature."
  overload: System.IO.Packaging.PackageDigitalSignature.SignaturePart*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType
  id: SignatureType
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] string that identifies the signature type."
  syntax:
    content: public string SignatureType { get; }
    return:
      type: System.String
      description: "A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] string that identifies the signature type. The default is <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot;></xref>."
  overload: System.IO.Packaging.PackageDigitalSignature.SignatureType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  id: SignatureValue
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "A byte array that contains the encrypted hash value of the <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>."
  overload: System.IO.Packaging.PackageDigitalSignature.SignatureValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts
  id: SignedParts
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets a collection of all the <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> objects signed with the signature."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> SignedParts { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: "A collection that contains all the package parts signed with the signature."
  overload: System.IO.Packaging.PackageDigitalSignature.SignedParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  id: SignedRelationshipSelectors
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the list of the <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref> parts that have been signed with the signature."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector> SignedRelationshipSelectors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}
      description: "The list of the <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref> parts that have been signed with the signature."
  overload: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Signer
  id: Signer
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
  fullName: System.IO.Packaging.PackageDigitalSignature.Signer
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the X.509 certificate of the signer."
  remarks: "Signer returns the X.509 certificate of the signer when the digital certificate is stored within the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption> or <xref:System.IO.Packaging.CertificateEmbeddingOption>).       Signer returns `null` when the X.509 certificate is not stored in the package (that is, when <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> is <xref:System.IO.Packaging.CertificateEmbeddingOption>)."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Signer { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "The digital certificate of the signer, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the certificate is not stored in the <xref href=&quot;System.IO.Packaging.Package&quot;></xref>."
  overload: System.IO.Packaging.PackageDigitalSignature.Signer*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime
  id: SigningTime
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the date and time that the signature was created."
  remarks: "The <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A> property specifies the format of the date.  The format of the SigningTime string is based on the <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName> property in effect when the signature was created.       SigningTime is based on the system time of the computer where the signing took place.       SigningTime is not a &quot;secure TimeStamp&quot; and is not from trusted Time Stamp Authority.  A secure TimeStamp must be obtained and applied through a trusted Time Stamp Authority."
  syntax:
    content: public DateTime SigningTime { get; }
    return:
      type: System.DateTime
      description: "The date and time that the signature was created."
  overload: System.IO.Packaging.PackageDigitalSignature.SigningTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  id: TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property."
  remarks: "Date/time formats follow the syntax of the W3C [Date and Time Formats](http://go.microsoft.com/fwlink/?LinkId=84446) note.  The components shown in the following table must use the syntax and punctuation shown.      |TimeFormat|Description|Example|   |----------------|-----------------|-------------|   |YYYY|Year|2005|   |YYYY-MM|Year and month|2005-07|   |YYYY-MM-DD|Complete date|2005-07-28|   |YYYY-MM-DDThh:mmTZD|Complete date plus hours and minutes|2005-07-28T19:20-01:00|   |YYYY-MM-DDThh:mm:ssTZD|Complete date plus hours, minutes, and seconds|2005-07-28T19:20:45-01:00|   |YYYY-MM-DDThh:mm:ss.sTZD|Complete date plus hours, minutes, and seconds with a decimal fraction|2005-07-28T19:20:45.75-01:00|       where:      |||   |-|-|   |YYYY|four-digit year (for example 2006)|   |MM|two-digit month (01=January)|   |DD|two-digit day of month (01 through 31)|   |Thh|two-digit hour (00 through 23, 24-hour time)|   |mm|two digits of minutes (00 through 59)|   |ss|two digits of seconds (00 through 59)|   |s|one or more digits representing a decimal fraction of a second|   |TZD|time zone designator (Z or +hh:mm or -hh:mm)|"
  syntax:
    content: public string TimeFormat { get; }
    return:
      type: System.String
      description: "The format of the date and time returned by the <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> property."
  overload: System.IO.Packaging.PackageDigitalSignature.TimeFormat*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Verify
  id: Verify
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Verify()
  nameWithType: PackageDigitalSignature.Verify()
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Verifies the digital signature against an X.509 certificate."
  remarks: "This method verifies the signature against an embedded X.509 certificate stored in the <xref:System.IO.Packaging.Package>."
  syntax:
    content: public System.IO.Packaging.VerifyResult Verify ();
    parameters: []
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref> if the verification succeeded; otherwise, one of the <xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref> values that identifies a problem."
  overload: System.IO.Packaging.PackageDigitalSignature.Verify*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Verify(X509Certificate)
  nameWithType: PackageDigitalSignature.Verify(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Verifies the digital signature against a given X.509 certificate."
  syntax:
    content: public System.IO.Packaging.VerifyResult Verify (System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate);
    parameters:
    - id: signingCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "The signer&quot;s X.509 certificate to verify the digital signature against."
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref> if the verification succeeded; otherwise, one of the <xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref> values that identifies a problem."
  overload: System.IO.Packaging.PackageDigitalSignature.Verify*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The digital <xref:System.IO.Packaging.PackageDigitalSignature.Signature*> has been deleted."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
- uid: System.IO.Packaging.CertificateEmbeddingOption
  parent: System.IO.Packaging
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: CertificateEmbeddingOption
  fullName: System.IO.Packaging.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: GetPartTransformList(Uri)
  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageDigitalSignature.Signature
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
  fullName: System.IO.Packaging.PackageDigitalSignature.Signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PackageRelationshipSelector>
  nameWithType: ReadOnlyCollection<PackageRelationshipSelector>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageRelationshipSelector
    name: PackageRelationshipSelector
    nameWithType: PackageRelationshipSelector
    fullName: PackageRelationshipSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignature.Signer
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
  fullName: System.IO.Packaging.PackageDigitalSignature.Signer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignature.Verify
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify()
  nameWithType: PackageDigitalSignature.Verify()
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()
- uid: System.IO.Packaging.VerifyResult
  parent: System.IO.Packaging
  isExternal: false
  name: VerifyResult
  nameWithType: VerifyResult
  fullName: System.IO.Packaging.VerifyResult
- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify(X509Certificate)
  nameWithType: PackageDigitalSignature.Verify(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: GetPartTransformList
  nameWithType: PackageDigitalSignature.GetPartTransformList
- uid: System.IO.Packaging.PackageDigitalSignature.Signature*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
- uid: System.IO.Packaging.PackageDigitalSignature.Signer*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignature.Verify*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify
  nameWithType: PackageDigitalSignature.Verify
