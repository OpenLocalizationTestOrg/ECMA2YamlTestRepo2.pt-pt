### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.DirectoryAttribute
  id: DirectoryAttribute
  children:
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  - System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Name
  - System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  langs:
  - csharp
  name: DirectoryAttribute
  nameWithType: DirectoryAttribute
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute
  type: Class
  summary: "The DirectoryAttribute class enables access to the attribute values."
  syntax:
    content: 'public class DirectoryAttribute : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute()
  nameWithType: DirectoryAttribute.DirectoryAttribute()
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute()
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The DirectoryAttribute constructor creates an instance of the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> class."
  syntax:
    content: public DirectoryAttribute ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,Byte[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Byte[])
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The DirectoryAttribute constructor creates an instance of the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> class using the specified attribute name and value."
  syntax:
    content: public DirectoryAttribute (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "The attribute name."
    - id: value
      type: System.Byte[]
      description: "The attribute value."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    name or value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  id: '#ctor(System.String,System.Object[])'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,Object[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Object[])
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The DirectoryAttribute constructor creates an instance of the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> class using the specified attribute name and values."
  syntax:
    content: public DirectoryAttribute (string name, object[] values);
    parameters:
    - id: name
      type: System.String
      description: "The attribute name."
    - id: values
      type: System.Object[]
      description: "An array of values for the attribute."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    name or value contains a null reference (Nothing in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An element of values is not of type string, byte[], or Uri."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,String)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The DirectoryAttribute constructor creates an instance of the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> class using the specified attribute name and value."
  syntax:
    content: public DirectoryAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The attribute name."
    - id: value
      type: System.String
      description: "The attribute value."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    name or value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  id: '#ctor(System.String,System.Uri)'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,Uri)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Uri)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The DirectoryAttribute constructor creates an instance of the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> class using the specified attribute name and value."
  syntax:
    content: public DirectoryAttribute (string name, Uri value);
    parameters:
    - id: name
      type: System.String
      description: "The attribute name."
    - id: value
      type: System.Uri
      description: "The attribute value."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    name or value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  id: Add(System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(Byte[])
  nameWithType: DirectoryAttribute.Add(Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Add method adds the specified value to this attribute."
  syntax:
    content: public int Add (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "The value to add."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    Value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  id: Add(System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(String)
  nameWithType: DirectoryAttribute.Add(String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(String)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Add method adds the specified value to this attribute."
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: "The value to add."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    Value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  id: Add(System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(Uri)
  nameWithType: DirectoryAttribute.Add(Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Uri)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Add method adds the specified value to this attribute."
  syntax:
    content: public int Add (Uri value);
    parameters:
    - id: value
      type: System.Uri
      description: "The value to add."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    Value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  id: AddRange(System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: AddRange(Object[])
  nameWithType: DirectoryAttribute.AddRange(Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(Object[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The AddRange method adds an array of values to the attribute."
  syntax:
    content: public void AddRange (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "The values to add."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    values is not a  byte[][], string[], or Uri[]."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    Values contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: DirectoryAttribute.Contains(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Contains method determines if the attribute contains the specified value."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The value for which to search."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Contains*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: DirectoryAttribute.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The CopyTo method copies the entire collection to a one-dimensional array, starting at the specified index of the target array."
  syntax:
    content: public void CopyTo (object[] array, int index);
    parameters:
    - id: array
      type: System.Object[]
      description: "A one-dimensional array that is the destination of the elements copied from the  object."
    - id: index
      type: System.Int32
      description: "The zero-based index of `array` where the copying begins."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    array contains a null reference ( in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n    index is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "This exception can occur under one of the following conditions:      -   array is multidimensional      -   index is equal to, or greater than, the length of array      -   The number of elements in the source  is greater than the space available from index to the end of the destination array."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The type of the source  cannot be cast automatically to the type of the destination array."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  id: GetValues(System.Type)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: GetValues(Type)
  nameWithType: DirectoryAttribute.GetValues(Type)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(Type)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The GetValues method returns all values of the specified type."
  syntax:
    content: public object[] GetValues (Type valuesType);
    parameters:
    - id: valuesType
      type: System.Type
      description: "A <xref:System.Type> object that specifies the type of values to return."
    return:
      type: System.Object[]
      description: "To be added."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A value cannot be converted to valuesType."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    valuesType must be either string or byte."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: DirectoryAttribute.IndexOf(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The IndexOf method returns the zero-based index of the first occurrence of the specified  &lt;xref:System.Object&gt; in the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> collection."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> for which the value is returned."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  id: Insert(System.Int32,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32,Byte[])
  nameWithType: DirectoryAttribute.Insert(Int32,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Insert method inserts the specified <span class=&quot;paramref&quot;>value</span> into the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> collection at the specified <span class=&quot;paramref&quot;>index</span>."
  syntax:
    content: public void Insert (int index, byte[] value);
    parameters:
    - id: index
      type: System.Int32
      description: "The index in the  collection at which to insert the `value`."
    - id: value
      type: System.Byte[]
      description: "The value to insert."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    value contains a null reference ( in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n    index is less than zero, or  is greater than the number of elements in the  object."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: DirectoryAttribute.Insert(Int32,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,String)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Insert method inserts the specified <span class=&quot;paramref&quot;>value</span> into the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> collection at the specified <span class=&quot;paramref&quot;>index</span>."
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: "The index in the  collection at which to insert the `value`."
    - id: value
      type: System.String
      description: "The value to insert."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    value contains a null reference ( in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n    index is less than zero, or index is greater than  the number of elements in the  object."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  id: Insert(System.Int32,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32,Uri)
  nameWithType: DirectoryAttribute.Insert(Int32,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Uri)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Insert method inserts the specified <span class=&quot;paramref&quot;>value</span> into the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> collection at the specified <span class=&quot;paramref&quot;>index</span>."
  syntax:
    content: public void Insert (int index, Uri value);
    parameters:
    - id: index
      type: System.Int32
      description: "The index in the  collection at which to insert the `value`."
    - id: value
      type: System.Uri
      description: "The value to insert."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    value contains a null reference ( in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n    index is less than zero or index is greater than the number of elements in the  object."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DirectoryAttribute.Item(Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Item property gets or sets the <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> object at the specified index."
  remarks: "The Get method of Item always attempts to convert and return the value object as a string; otherwise it returns a byte array. To get a better performance, use the <xref:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues%2A> method if you know the return type of the attribute value."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index value at which the  object is found."
    return:
      type: System.Object
      description: "The <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> object at the specified index."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    value to set is an invalid type. The valid types are byte[], string, or URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  id: Name
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Name
  nameWithType: DirectoryAttribute.Name
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Name property contains the attribute name."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The attribute name."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: DirectoryAttribute.OnValidate(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The OnValidate method verifies that <span class=&quot;paramref&quot;>value</span> is a <see cref=&quot;T:System.DirectoryServices.Protocols.DirectoryAttribute&quot;></see> object."
  remarks: "This method does not return a value. Instead, an exception is thrown if the specified object is null or is an invalid <xref:System.DirectoryServices.Protocols.DirectoryAttribute> object."
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to evaluate."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    value contains a null reference ( in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    value must be either a string, byte[], or URI."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: DirectoryAttribute.Remove(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Remove method removes the first occurrence of the specified <span class=&quot;paramref&quot;>value</span> from the list of attributes."
  syntax:
    content: public void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to remove."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    value contains a null reference ( in Visual Basic)."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute()
  nameWithType: DirectoryAttribute.DirectoryAttribute()
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute()
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,Byte[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,Object[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,String)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,Uri)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(Byte[])
  nameWithType: DirectoryAttribute.Add(Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Byte[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(String)
  nameWithType: DirectoryAttribute.Add(String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(Uri)
  nameWithType: DirectoryAttribute.Add(Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Uri)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: AddRange(Object[])
  nameWithType: DirectoryAttribute.AddRange(Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(Object[])
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Contains(Object)
  nameWithType: DirectoryAttribute.Contains(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: DirectoryAttribute.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(Object[],Int32)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: GetValues(Type)
  nameWithType: DirectoryAttribute.GetValues(Type)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: IndexOf(Object)
  nameWithType: DirectoryAttribute.IndexOf(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32,Byte[])
  nameWithType: DirectoryAttribute.Insert(Int32,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Byte[])
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: DirectoryAttribute.Insert(Int32,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32,Uri)
  nameWithType: DirectoryAttribute.Insert(Int32,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Uri)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Item(Int32)
  nameWithType: DirectoryAttribute.Item(Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Item(Int32)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Name
  nameWithType: DirectoryAttribute.Name
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Name
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: OnValidate(Object)
  nameWithType: DirectoryAttribute.OnValidate(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Remove(Object)
  nameWithType: DirectoryAttribute.Remove(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute
  nameWithType: DirectoryAttribute.DirectoryAttribute
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add
  nameWithType: DirectoryAttribute.Add
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: AddRange
  nameWithType: DirectoryAttribute.AddRange
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Contains
  nameWithType: DirectoryAttribute.Contains
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: CopyTo
  nameWithType: DirectoryAttribute.CopyTo
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: GetValues
  nameWithType: DirectoryAttribute.GetValues
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: IndexOf
  nameWithType: DirectoryAttribute.IndexOf
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert
  nameWithType: DirectoryAttribute.Insert
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Item
  nameWithType: DirectoryAttribute.Item
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Name
  nameWithType: DirectoryAttribute.Name
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: OnValidate
  nameWithType: DirectoryAttribute.OnValidate
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Remove
  nameWithType: DirectoryAttribute.Remove
