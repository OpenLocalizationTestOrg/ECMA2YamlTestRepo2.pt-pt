### YamlMime:ManagedReference
items:
- uid: System.Web.EventHandlerTaskAsyncHelper
  id: EventHandlerTaskAsyncHelper
  children:
  - System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)
  - System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler
  - System.Web.EventHandlerTaskAsyncHelper.EndEventHandler
  langs:
  - csharp
  name: EventHandlerTaskAsyncHelper
  nameWithType: EventHandlerTaskAsyncHelper
  fullName: System.Web.EventHandlerTaskAsyncHelper
  type: Class
  summary: "Converts task-returning asynchronous methods into methods that use the asynchronous programming model used in previous versions of ASP.NET and that is based on begin and end events."
  remarks: "To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate. This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events. After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events. The EventHandlerTaskAsyncHelper class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework. When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method."
  syntax:
    content: public sealed class EventHandlerTaskAsyncHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)
  id: '#ctor(System.Web.TaskEventHandler)'
  parent: System.Web.EventHandlerTaskAsyncHelper
  langs:
  - csharp
  name: EventHandlerTaskAsyncHelper(TaskEventHandler)
  nameWithType: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)
  fullName: System.Web.EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.EventHandlerTaskAsyncHelper&quot;></xref> class."
  syntax:
    content: public EventHandlerTaskAsyncHelper (System.Web.TaskEventHandler handler);
    parameters:
    - id: handler
      type: System.Web.TaskEventHandler
      description: "The asynchronous task."
  overload: System.Web.EventHandlerTaskAsyncHelper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler
  id: BeginEventHandler
  parent: System.Web.EventHandlerTaskAsyncHelper
  langs:
  - csharp
  name: BeginEventHandler
  nameWithType: EventHandlerTaskAsyncHelper.BeginEventHandler
  fullName: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Represents the <xref href=&quot;System.Web.BeginEventHandler&quot;></xref> method for an asynchronous task."
  syntax:
    content: public System.Web.BeginEventHandler BeginEventHandler { get; }
    return:
      type: System.Web.BeginEventHandler
      description: "The method that handles the begin event for the asynchronous task."
  overload: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler
  id: EndEventHandler
  parent: System.Web.EventHandlerTaskAsyncHelper
  langs:
  - csharp
  name: EndEventHandler
  nameWithType: EventHandlerTaskAsyncHelper.EndEventHandler
  fullName: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Represents the <xref href=&quot;System.Web.EndEventHandler&quot;></xref> method for an asynchronous task."
  syntax:
    content: public System.Web.EndEventHandler EndEventHandler { get; }
    return:
      type: System.Web.EndEventHandler
      description: "The method that handles the end event for the asynchronous task."
  overload: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)
  parent: System.Web.EventHandlerTaskAsyncHelper
  isExternal: false
  name: EventHandlerTaskAsyncHelper(TaskEventHandler)
  nameWithType: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)
  fullName: System.Web.EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)
- uid: System.Web.TaskEventHandler
  parent: System.Web
  isExternal: false
  name: TaskEventHandler
  nameWithType: TaskEventHandler
  fullName: System.Web.TaskEventHandler
- uid: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler
  parent: System.Web.EventHandlerTaskAsyncHelper
  isExternal: false
  name: BeginEventHandler
  nameWithType: EventHandlerTaskAsyncHelper.BeginEventHandler
  fullName: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler
  parent: System.Web.EventHandlerTaskAsyncHelper
  isExternal: false
  name: EndEventHandler
  nameWithType: EventHandlerTaskAsyncHelper.EndEventHandler
  fullName: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.EventHandlerTaskAsyncHelper.#ctor*
  parent: System.Web.EventHandlerTaskAsyncHelper
  isExternal: false
  name: EventHandlerTaskAsyncHelper
  nameWithType: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper
- uid: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler*
  parent: System.Web.EventHandlerTaskAsyncHelper
  isExternal: false
  name: BeginEventHandler
  nameWithType: EventHandlerTaskAsyncHelper.BeginEventHandler
- uid: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler*
  parent: System.Web.EventHandlerTaskAsyncHelper
  isExternal: false
  name: EndEventHandler
  nameWithType: EventHandlerTaskAsyncHelper.EndEventHandler
