### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectQuery
  id: ObjectQuery
  children:
  - System.Data.Objects.ObjectQuery.CommandText
  - System.Data.Objects.ObjectQuery.Context
  - System.Data.Objects.ObjectQuery.EnablePlanCaching
  - System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  - System.Data.Objects.ObjectQuery.GetResultType
  - System.Data.Objects.ObjectQuery.MergeOption
  - System.Data.Objects.ObjectQuery.Parameters
  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  - System.Data.Objects.ObjectQuery.ToTraceString
  langs:
  - csharp
  name: ObjectQuery
  nameWithType: ObjectQuery
  fullName: System.Data.Objects.ObjectQuery
  type: Class
  summary: "Implements common functionality for queries against a conceptual model using both LINQ to Entities and &lt;xref:System.Data.Objects.ObjectQuery%601&gt;."
  remarks: "ObjectQuery is the base class for queries against a conceptual model. ObjectQuery is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>. You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)."
  syntax:
    content: 'public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.ComponentModel.IListSource
  - System.Linq.IOrderedQueryable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.CommandText
  id: CommandText
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: CommandText
  nameWithType: ObjectQuery.CommandText
  fullName: System.Data.Objects.ObjectQuery.CommandText
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Returns the command text for the query."
  syntax:
    content: public string CommandText { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value."
  overload: System.Data.Objects.ObjectQuery.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Context
  id: Context
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Context
  nameWithType: ObjectQuery.Context
  fullName: System.Data.Objects.ObjectQuery.Context
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets the object context associated with this object query."
  remarks: "The context for the query includes the connection, cache, and metadata. For more information, see [Object Services Overview (Entity Framework)](http://msdn.microsoft.com/en-us/43014cf9-c9cb-4538-bfbb-197820b60038).       The connection property is mutable and must be set before a query can be executed. For more information, see [Managing Connections in Object Services (Entity Framework)](http://msdn.microsoft.com/en-us/a1df87ef-6441-417d-b264-bb58360e5d67)."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_context)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Context](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_context)]"
  syntax:
    content: public System.Data.Objects.ObjectContext Context { get; }
    return:
      type: System.Data.Objects.ObjectContext
      description: "The <xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref> associated with this &lt;xref:System.Data.Objects.ObjectQuery%601&gt; instance."
  overload: System.Data.Objects.ObjectQuery.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching
  id: EnablePlanCaching
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
  fullName: System.Data.Objects.ObjectQuery.EnablePlanCaching
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets or sets a value that indicates whether the query plan should be cached."
  remarks: "For more information, see [Query Plan Caching](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool EnablePlanCaching { get; set; }
    return:
      type: System.Boolean
      description: "A value that indicates whether the query plan should be cached."
  overload: System.Data.Objects.ObjectQuery.EnablePlanCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  id: Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Execute(MergeOption)
  nameWithType: ObjectQuery.Execute(MergeOption)
  fullName: System.Data.Objects.ObjectQuery.Execute(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Executes the untyped object query with the specified merge option."
  remarks: "The default merge option for object queries is <xref:System.Data.Objects.MergeOption>. For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0).       Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries."
  syntax:
    content: public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "The <xref href=&quot;System.Data.Objects.MergeOption&quot;></xref> to use when executing the query. The default is <xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>."
    return:
      type: System.Data.Objects.ObjectResult
      description: "An &lt;xref:System.Data.Objects.ObjectResult%601&gt; that contains a collection of entity objects returned by the query."
  overload: System.Data.Objects.ObjectQuery.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.GetResultType
  id: GetResultType
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: GetResultType()
  nameWithType: ObjectQuery.GetResultType()
  fullName: System.Data.Objects.ObjectQuery.GetResultType()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Returns information about the result type of the query."
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses GetResultType to determine whether the type returned represents a row.  \n  \n [!code-vb[DP ObjectServices Concepts#GetResultType](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#getresulttype)]\n [!code-cs[DP ObjectServices Concepts#GetResultType](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#getresulttype)]"
  syntax:
    content: public System.Data.Metadata.Edm.TypeUsage GetResultType ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A <xref href=&quot;System.Data.Metadata.Edm.TypeUsage&quot;></xref> value that contains information about the result type of the query."
  overload: System.Data.Objects.ObjectQuery.GetResultType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.MergeOption
  id: MergeOption
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
  fullName: System.Data.Objects.ObjectQuery.MergeOption
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets or sets how objects returned from a query are added to the object context."
  remarks: "If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption>. For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)."
  syntax:
    content: public System.Data.Objects.MergeOption MergeOption { get; set; }
    return:
      type: System.Data.Objects.MergeOption
      description: "The query <xref href=&quot;System.Data.Objects.MergeOption&quot;></xref>."
  overload: System.Data.Objects.ObjectQuery.MergeOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Parameters
  id: Parameters
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Parameters
  nameWithType: ObjectQuery.Parameters
  fullName: System.Data.Objects.ObjectQuery.Parameters
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets the parameter collection for this object query."
  remarks: "Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>. Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public System.Data.Objects.ObjectParameterCollection Parameters { get; }
    return:
      type: System.Data.Objects.ObjectParameterCollection
      description: "The parameter collection for this &lt;xref:System.Data.Objects.ObjectQuery%601&gt;."
  overload: System.Data.Objects.ObjectQuery.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Returns an enumerator that iterates through a collection."
  remarks: "Calling IEnumerable.GetEnumerator executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.       The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.       Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."
  overload: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets a value that indicates whether the collection returned by the query contains collection objects."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.       This property always returns `false` because the collection returned by the query contains objects and not collections."
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "A Boolean value."
  overload: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Returns the collection as an <xref:System.Collections.IList> used for data binding."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.       This method enables data binding to the result of the query. It is called by the control bound to the collection. For more information, see [Binding Objects to Controls](http://msdn.microsoft.com/en-us/2fd34855-929b-4303-a91e-4bb69d958f2b)."
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "An <xref:System.Collections.IList> of entity objects."
  overload: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  id: System#Linq#IQueryable#ElementType
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.ElementType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets the result element type for this query instance."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface."
  syntax:
    content: Type System.Linq.IQueryable.ElementType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type> that is the result element type for this query instance."
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  id: System#Linq#IQueryable#Expression
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Expression
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets the expression describing this query."
  remarks: "For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query. Note that the default expression is not cached. This allows the framework to differentiate between LINQ and Entity SQL queries.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface."
  syntax:
    content: System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: "The LINQ <xref:System.Linq.Expressions.Expression> that describes this query."
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  id: System#Linq#IQueryable#Provider
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Provider
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets the LINQ <xref:System.Linq.IQueryProvider> associated with this query instance."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface."
  syntax:
    content: System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }
    return:
      type: System.Linq.IQueryProvider
      description: "The <xref:System.Linq.IQueryProvider> associated with this query instance."
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.ToTraceString
  id: ToTraceString
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: ToTraceString()
  nameWithType: ObjectQuery.ToTraceString()
  fullName: System.Data.Objects.ObjectQuery.ToTraceString()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Returns the commands to execute against the data source."
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_totracestring)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_totracestring)]"
  syntax:
    content: public string ToTraceString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> that represents the commands that the query executes against the data source."
  overload: System.Data.Objects.ObjectQuery.ToTraceString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Objects.ObjectQuery.CommandText
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: CommandText
  nameWithType: ObjectQuery.CommandText
  fullName: System.Data.Objects.ObjectQuery.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery.Context
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Context
  nameWithType: ObjectQuery.Context
  fullName: System.Data.Objects.ObjectQuery.Context
- uid: System.Data.Objects.ObjectContext
  parent: System.Data.Objects
  isExternal: false
  name: ObjectContext
  nameWithType: ObjectContext
  fullName: System.Data.Objects.ObjectContext
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
  fullName: System.Data.Objects.ObjectQuery.EnablePlanCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Execute(MergeOption)
  nameWithType: ObjectQuery.Execute(MergeOption)
  fullName: System.Data.Objects.ObjectQuery.Execute(MergeOption)
- uid: System.Data.Objects.ObjectResult
  parent: System.Data.Objects
  isExternal: false
  name: ObjectResult
  nameWithType: ObjectResult
  fullName: System.Data.Objects.ObjectResult
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.ObjectQuery.GetResultType
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: GetResultType()
  nameWithType: ObjectQuery.GetResultType()
  fullName: System.Data.Objects.ObjectQuery.GetResultType()
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Objects.ObjectQuery.MergeOption
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
  fullName: System.Data.Objects.ObjectQuery.MergeOption
- uid: System.Data.Objects.ObjectQuery.Parameters
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Parameters
  nameWithType: ObjectQuery.Parameters
  fullName: System.Data.Objects.ObjectQuery.Parameters
- uid: System.Data.Objects.ObjectParameterCollection
  parent: System.Data.Objects
  isExternal: false
  name: ObjectParameterCollection
  nameWithType: ObjectParameterCollection
  fullName: System.Data.Objects.ObjectParameterCollection
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.ElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Provider
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.Data.Objects.ObjectQuery.ToTraceString
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: ToTraceString()
  nameWithType: ObjectQuery.ToTraceString()
  fullName: System.Data.Objects.ObjectQuery.ToTraceString()
- uid: System.Data.Objects.ObjectQuery.CommandText*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: CommandText
  nameWithType: ObjectQuery.CommandText
- uid: System.Data.Objects.ObjectQuery.Context*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Context
  nameWithType: ObjectQuery.Context
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
- uid: System.Data.Objects.ObjectQuery.Execute*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Execute
  nameWithType: ObjectQuery.Execute
- uid: System.Data.Objects.ObjectQuery.GetResultType*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: GetResultType
  nameWithType: ObjectQuery.GetResultType
- uid: System.Data.Objects.ObjectQuery.MergeOption*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
- uid: System.Data.Objects.ObjectQuery.Parameters*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Parameters
  nameWithType: ObjectQuery.Parameters
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
- uid: System.Data.Objects.ObjectQuery.ToTraceString*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: ToTraceString
  nameWithType: ObjectQuery.ToTraceString
