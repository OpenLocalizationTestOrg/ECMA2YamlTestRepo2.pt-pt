### YamlMime:ManagedReference
items:
- uid: System.Data.IDbTransaction
  id: IDbTransaction
  children:
  - System.Data.IDbTransaction.Commit
  - System.Data.IDbTransaction.Connection
  - System.Data.IDbTransaction.IsolationLevel
  - System.Data.IDbTransaction.Rollback
  langs:
  - csharp
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
  type: Interface
  summary: "Representa uma transação para ser efetuada uma origem de dados e é implementado por fornecedores de dados .NET Framework que acedem a bases de dados relacionais."
  remarks: "A interface IDbTransaction permite uma classe inheriting implementar uma classe de transação, que representa a transação a ser efetuada uma origem de dados. Para obter mais informações sobre as classes de transação, consulte [transações e simultaneidade](~/add/includes/ajax-current-ext-md.md).       Uma aplicação não cria uma instância da IDbTransaction interface diretamente, mas cria uma instância de uma classe que herda IDbTransaction.       As classes que herdam IDbTransaction tem de implementar os membros herdados e definir normalmente membros adicionais para adicionar a funcionalidade específica do fornecedor. Por exemplo, a interface IDbTransaction define o <xref:System.Data.IDbTransaction.Commit%2A>método.</xref:System.Data.IDbTransaction.Commit%2A> Por sua vez, o <xref:System.Data.OleDb.OleDbTransaction>classe herda esta propriedade e que define também o <xref:System.Data.OleDb.OleDbTransaction.Begin%2A>método.</xref:System.Data.OleDb.OleDbTransaction.Begin%2A> </xref:System.Data.OleDb.OleDbTransaction>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/t-system.data.idbtransac_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/t-system.data.idbtransac_1.vb)]"
  syntax:
    content: 'public interface IDbTransaction : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbTransaction.Commit
  id: Commit
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Consolida a transação de base de dados."
  remarks: ''
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_0_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_0_1.vb)]"
  syntax:
    content: public void Commit ();
    parameters: []
  overload: System.Data.IDbTransaction.Commit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Ocorreu um erro ao tentar consolidar a transação."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A transação já foi consolidada ou revertida.       - ou - a ligação está quebrada."
  platform:
  - net462
- uid: System.Data.IDbTransaction.Connection
  id: Connection
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Especifica o objeto de ligação para associar a transação."
  remarks: "Uma aplicação individual pode ter várias ligações de base de dados, cada um com zero ou mais transações. Esta propriedade permite-lhe determinar o objeto de ligação associado uma transação específica."
  syntax:
    content: public System.Data.IDbConnection Connection { get; }
    return:
      type: System.Data.IDbConnection
      description: "O objeto de ligação para associar a transação."
  overload: System.Data.IDbTransaction.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Especifica o <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> para esta transação."
  remarks: "Transações paralelas não são suportadas. Por conseguinte, o <xref:System.Data.IsolationLevel>aplica-se a toda a transação.</xref:System.Data.IsolationLevel>"
  syntax:
    content: public System.Data.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Data.IsolationLevel
      description: "O <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> para esta transação. A predefinição é <xref uid=&quot;langword_csharp_ReadCommitted&quot; name=&quot;ReadCommitted&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDbTransaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbTransaction.Rollback
  id: Rollback
  parent: System.Data.IDbTransaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Reverte uma transação de estado pendente."
  remarks: "A transação pode apenas ser revertida partir de um estado pendente (após <xref:System.Data.IDbConnection.BeginTransaction%2A>foi chamado, mas antes <xref:System.Data.IDbTransaction.Commit%2A>denomina).</xref:System.Data.IDbTransaction.Commit%2A> </xref:System.Data.IDbConnection.BeginTransaction%2A>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.idbtransac_1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.idbtransac_1_1.vb)]"
  syntax:
    content: public void Rollback ();
    parameters: []
  overload: System.Data.IDbTransaction.Rollback*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Ocorreu um erro ao tentar consolidar a transação."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A transação já foi consolidada ou revertida.       - ou - a ligação está quebrada."
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDbTransaction.Commit
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit()
  nameWithType: IDbTransaction.Commit()
  fullName: System.Data.IDbTransaction.Commit()
- uid: System.Data.IDbTransaction.Connection
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
  fullName: System.Data.IDbTransaction.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.IDbTransaction.IsolationLevel
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
  fullName: System.Data.IDbTransaction.IsolationLevel
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback()
  nameWithType: IDbTransaction.Rollback()
  fullName: System.Data.IDbTransaction.Rollback()
- uid: System.Data.IDbTransaction.Commit*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Commit
  nameWithType: IDbTransaction.Commit
- uid: System.Data.IDbTransaction.Connection*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Connection
  nameWithType: IDbTransaction.Connection
- uid: System.Data.IDbTransaction.IsolationLevel*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: IDbTransaction.IsolationLevel
- uid: System.Data.IDbTransaction.Rollback*
  parent: System.Data.IDbTransaction
  isExternal: false
  name: Rollback
  nameWithType: IDbTransaction.Rollback
