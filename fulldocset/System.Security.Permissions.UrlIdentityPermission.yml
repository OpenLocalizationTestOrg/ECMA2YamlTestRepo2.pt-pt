### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UrlIdentityPermission
  id: UrlIdentityPermission
  children:
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.UrlIdentityPermission.Copy
  - System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.ToXml
  - System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.Url
  langs:
  - csharp
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission
  fullName: System.Security.Permissions.UrlIdentityPermission
  type: Class
  summary: "Define a permissão de identidade para o URL a partir do qual o código de origem. Esta classe não pode ser herdada."
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file. For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> classe com especificado <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Cria um totalmente restrito (`None`) ou `Unrestricted` permissão.      > [!NOTE] > No versões do .NET Framework 1.0 e 1.1, permissões de identidade não podem ter um <xref:System.Security.Permissions.PermissionState>o valor de estado de permissão.</xref:System.Security.Permissions.PermissionState> A partir do .NET Framework versão 2.0, permissões de identidade podem ter qualquer valor de estado de permissão. Isto significa que em versões 2.0 e posteriores, permissões de identidade têm o mesmo comportamento de permissões que implementam o <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Ou seja, uma pedido para uma identidade sempre for bem sucedida, independentemente da identidade da assemblagem, se a assemblagem foi concedida fidedignidade total.       Nas versões do .NET Framework 1.0 e 1.1, exigências nas permissões de identidade são eficazes, mesmo quando a assemblagem de chamada é totalmente fidedigna. Ou seja, embora a assemblagem de chamada tem fidedignidade total, uma pedido para uma permissão de identidade falha se a assemblagem não cumpre os critérios de pedidos. A partir do .NET Framework versão 2.0, os pedidos para permissões de identidade são ineficaz se a assemblagem de chamada tem fidedignidade total. Isto garante a consistência para todas as permissões, eliminando o tratamento de permissões de identidade num caso especial."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/cpp/d852dbe8-5170-4e24-980e-_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/csharp/d852dbe8-5170-4e24-980e-_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/visualbasic/d852dbe8-5170-4e24-980e-_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Um do <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valores."
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> state </code> parâmetro não é um valor válido de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> classe para representar a identidade de URL descrita através de <code> site </code>."
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, for performance reasons, an invalid URL does not cause an argument exception at the time the new class instance is created.  The argument exception will occur when one of the set operations (Union, Intersect, or IsSubsetOf) is executed.  A demand on the permission causes <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> to be called by the security infrastructure. The demand will fail because of the argument exception, resulting in a <xref:System.Security.SecurityException> being thrown. In this case, the original <xref:System.ArgumentException> exception will not be seen."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/cpp/m-system.security.permis_0_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/csharp/m-system.security.permis_0_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/visualbasic/m-system.security.permis_0_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "Uma expressão de URL ou o caráter universal."
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>site</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "O comprimento do <code> site </code> parâmetro é zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O URL, diretório ou parte do site a <code> site </code> parâmetro não é válido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma cópia da permissão atual idêntica."
  remarks: "Uma cópia de uma permissão representa o mesmo acesso aos recursos, como a permissão original."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Uma cópia da permissão atual."
  overload: System.Security.Permissions.UrlIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Reconstructs uma permissão com um estado especificado de uma codificação de XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "O codificação XML a utilizar para reconstrua a permissão."
  overload: System.Security.Permissions.UrlIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> esd </code> parâmetro não é um elemento de permissão válido.       - ou - <code> esd </code> número da versão do parâmetro não é válido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma permissão que está a interseção da permissão atual e a permissão especificada."
  remarks: "A intersecção de dois permissões é uma permissão que descreve o acesso aos URLs ambas as descrevem em comum. Apenas um pedido que transmite ambas as permissões originais passarão a interseção. Por exemplo, a intersecção de uma permissão que representa acesso a http://www.fourthcoffee.com/process/grind.htm e uma permissão que representa acesso http://www.fourthcoffee.com/* é uma permissão que representa acesso http://www.fourthcoffee.com/process/grind.htm.       <xref:System.Security.Permissions.UrlIdentityPermission>suporta definir operações (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, Intersect e <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) apenas quando a permissão atual é igual ao objeto de permissão especificado ou quando utiliza um das permissões de operador de caráter universal (&quot;*&quot;).</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para intersect com a permissão atual. Tem de ser do mesmo tipo de que a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a interseção da permissão atual e a permissão especificada. Esta nova permissão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a interseção está vazia."
  overload: System.Security.Permissions.UrlIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual.       - ou - propriedade o Url não é um URL válido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se a permissão atual é um subconjunto da permissão especificado."
  remarks: "A permissão atual é um subconjunto da permissão especificada se a permissão atual identifica o acesso a um URL que detida está contido pela permissão especificada. Por exemplo, uma permissão que representa acesso http://www.fourthcoffee.com/process/grind.htm é um subconjunto de uma permissão que representa acesso http://www.fourthcoffee.com/*. Se este método devolve `true`, a permissão atual representa sem acesso ao recurso protegido mais do que a permissão especificada.       <xref:System.Security.Permissions.UrlIdentityPermission>suporta definir operações (IsSubsetOf, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, e <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) apenas quando a permissão atual é igual para a permissão especificada ou quando utiliza um das permissões de operador de caráter universal (&quot;*&quot;).</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão que está a ser testada para a relação de subconjunto. Esta permissão tem de ser do mesmo tipo como a permissão atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a permissão atual é um subconjunto da permissão especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual.       - ou - propriedade o Url não é um URL válido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma codificação XML de permissão e o respetivo estado atual."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Uma codificação XML da permissão, incluindo as informações de estado."
  overload: System.Security.Permissions.UrlIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma permissão que é a União de permissão atual e a permissão especificada."
  remarks: "O resultado de uma chamada para o método de União é uma permissão que representa acesso para o URL conforme representado pela permissão atual, bem como o acesso ao URL conforme representado pela permissão especificada.       O <xref:System.Security.Permissions.UrlIdentityPermission>classe suporta operações de conjunto <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>e União) apenas quando a permissão atual é igual para a permissão especificada, ou quando uma das permissões de utiliza o operador de caráter universal (&quot;*&quot;) e um é um subconjunto das outras.</xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para combinar com a permissão atual. Tem de ser do mesmo tipo de que a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a União de permissão atual e a permissão especificada."
  overload: System.Security.Permissions.UrlIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual.       - ou - <xref:System.Security.Permissions.UrlIdentityPermission.Url*>propriedade não é um URL válido.</xref:System.Security.Permissions.UrlIdentityPermission.Url*>       - ou - duas permissões não são iguais e um não é um subconjunto das outras."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  id: Url
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define um URL que representa a identidade do código da Internet."
  remarks: "É considerado o URL completo, incluindo o protocolo (HTTP, HTTPS, o protocolo FTP) e o ficheiro, por exemplo: http://www.fourthcoffee.com/process/grind.htm/.       URLs podem ser correspondidos exatamente ou por um caráter universal na posição final, por exemplo: http://www.fourthcoffee.com/process/ *."
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "Um URL que representa a identidade do código da Internet."
  overload: System.Security.Permissions.UrlIdentityPermission.Url*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível obter o URL, porque tem uma identidade ambígua."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission.UrlIdentityPermission
- uid: System.Security.Permissions.UrlIdentityPermission.Copy*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: UrlIdentityPermission.Copy
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: UrlIdentityPermission.FromXml
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: UrlIdentityPermission.Intersect
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: UrlIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: UrlIdentityPermission.ToXml
- uid: System.Security.Permissions.UrlIdentityPermission.Union*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union
  nameWithType: UrlIdentityPermission.Union
- uid: System.Security.Permissions.UrlIdentityPermission.Url*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
