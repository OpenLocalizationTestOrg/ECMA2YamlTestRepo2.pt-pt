### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaParameter
  id: MetaParameter
  children:
  - System.Data.Linq.Mapping.MetaParameter.#ctor
  - System.Data.Linq.Mapping.MetaParameter.DbType
  - System.Data.Linq.Mapping.MetaParameter.MappedName
  - System.Data.Linq.Mapping.MetaParameter.Name
  - System.Data.Linq.Mapping.MetaParameter.Parameter
  - System.Data.Linq.Mapping.MetaParameter.ParameterType
  langs:
  - csharp
  name: MetaParameter
  nameWithType: MetaParameter
  fullName: System.Data.Linq.Mapping.MetaParameter
  type: Class
  summary: "Representa o mapeamento entre um parâmetro de método e um parâmetro de função de base de dados."
  syntax:
    content: public abstract class MetaParameter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaParameter.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaParameter
  langs:
  - csharp
  name: MetaParameter()
  nameWithType: MetaParameter.MetaParameter()
  fullName: System.Data.Linq.Mapping.MetaParameter.MetaParameter()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Linq.Mapping.MetaParameter&quot;> </xref> classe."
  syntax:
    content: protected MetaParameter ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaParameter.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.MetaParameter
  langs:
  - csharp
  name: DbType
  nameWithType: MetaParameter.DbType
  fullName: System.Data.Linq.Mapping.MetaParameter.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o tipo de base de dados do parâmetro."
  syntax:
    content: public abstract string DbType { get; }
    return:
      type: System.String
      description: "O tipo de base de dados do parâmetro como uma cadeia."
  overload: System.Data.Linq.Mapping.MetaParameter.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaParameter.MappedName
  id: MappedName
  parent: System.Data.Linq.Mapping.MetaParameter
  langs:
  - csharp
  name: MappedName
  nameWithType: MetaParameter.MappedName
  fullName: System.Data.Linq.Mapping.MetaParameter.MappedName
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o nome do parâmetro na função de base de dados."
  syntax:
    content: public abstract string MappedName { get; }
    return:
      type: System.String
      description: "O nome como uma cadeia."
  overload: System.Data.Linq.Mapping.MetaParameter.MappedName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaParameter.Name
  id: Name
  parent: System.Data.Linq.Mapping.MetaParameter
  langs:
  - csharp
  name: Name
  nameWithType: MetaParameter.Name
  fullName: System.Data.Linq.Mapping.MetaParameter.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o nome do parâmetro."
  remarks: "Este valor é igual a <xref:System.Reflection.ParameterInfo>nome.</xref:System.Reflection.ParameterInfo>"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "O nome do parâmetro como uma cadeia."
  overload: System.Data.Linq.Mapping.MetaParameter.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaParameter.Parameter
  id: Parameter
  parent: System.Data.Linq.Mapping.MetaParameter
  langs:
  - csharp
  name: Parameter
  nameWithType: MetaParameter.Parameter
  fullName: System.Data.Linq.Mapping.MetaParameter.Parameter
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o parâmetro de método subjacente."
  syntax:
    content: public abstract System.Reflection.ParameterInfo Parameter { get; }
    return:
      type: System.Reflection.ParameterInfo
      description: "O parâmetro de método subjacente."
  overload: System.Data.Linq.Mapping.MetaParameter.Parameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaParameter.ParameterType
  id: ParameterType
  parent: System.Data.Linq.Mapping.MetaParameter
  langs:
  - csharp
  name: ParameterType
  nameWithType: MetaParameter.ParameterType
  fullName: System.Data.Linq.Mapping.MetaParameter.ParameterType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o tipo de runtime (CLR) de idioma comum do parâmetro."
  syntax:
    content: public abstract Type ParameterType { get; }
    return:
      type: System.Type
      description: "O tipo."
  overload: System.Data.Linq.Mapping.MetaParameter.ParameterType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaParameter.#ctor
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: MetaParameter()
  nameWithType: MetaParameter.MetaParameter()
  fullName: System.Data.Linq.Mapping.MetaParameter.MetaParameter()
- uid: System.Data.Linq.Mapping.MetaParameter.DbType
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: DbType
  nameWithType: MetaParameter.DbType
  fullName: System.Data.Linq.Mapping.MetaParameter.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaParameter.MappedName
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: MappedName
  nameWithType: MetaParameter.MappedName
  fullName: System.Data.Linq.Mapping.MetaParameter.MappedName
- uid: System.Data.Linq.Mapping.MetaParameter.Name
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: Name
  nameWithType: MetaParameter.Name
  fullName: System.Data.Linq.Mapping.MetaParameter.Name
- uid: System.Data.Linq.Mapping.MetaParameter.Parameter
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: Parameter
  nameWithType: MetaParameter.Parameter
  fullName: System.Data.Linq.Mapping.MetaParameter.Parameter
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Data.Linq.Mapping.MetaParameter.ParameterType
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: ParameterType
  nameWithType: MetaParameter.ParameterType
  fullName: System.Data.Linq.Mapping.MetaParameter.ParameterType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MetaParameter.#ctor*
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: MetaParameter
  nameWithType: MetaParameter.MetaParameter
- uid: System.Data.Linq.Mapping.MetaParameter.DbType*
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: DbType
  nameWithType: MetaParameter.DbType
- uid: System.Data.Linq.Mapping.MetaParameter.MappedName*
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: MappedName
  nameWithType: MetaParameter.MappedName
- uid: System.Data.Linq.Mapping.MetaParameter.Name*
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: Name
  nameWithType: MetaParameter.Name
- uid: System.Data.Linq.Mapping.MetaParameter.Parameter*
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: Parameter
  nameWithType: MetaParameter.Parameter
- uid: System.Data.Linq.Mapping.MetaParameter.ParameterType*
  parent: System.Data.Linq.Mapping.MetaParameter
  isExternal: false
  name: ParameterType
  nameWithType: MetaParameter.ParameterType
