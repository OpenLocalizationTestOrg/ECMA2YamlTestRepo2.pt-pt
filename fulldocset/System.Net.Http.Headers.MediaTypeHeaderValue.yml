### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.MediaTypeHeaderValue
  id: MediaTypeHeaderValue
  children:
  - System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)
  - System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  - System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  - System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  - System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  - System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.MediaTypeHeaderValue.ToString
  - System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  langs:
  - csharp
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue
  type: Class
  summary: "Representa um tipo de suporte de dados utilizado num cabeçalho de tipo de conteúdo, tal como definido no RFC 2616."
  remarks: "A classe de MediaTypeHeaderValue fornece suporte para o tipo de suporte de dados utilizado num cabeçalho de tipo de conteúdo, tal como definido no [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) pelo IETF.       Um exemplo de um tipo de suporte de dados seria &quot;text/plain; conjunto de carateres = iso-8859-5."
  syntax:
    content: 'public class MediaTypeHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)
  id: '#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)'
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: MediaTypeHeaderValue(MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(MediaTypeHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(MediaTypeHeaderValue)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> classe."
  syntax:
    content: protected MediaTypeHeaderValue (System.Net.Http.Headers.MediaTypeHeaderValue source);
    parameters:
    - id: source
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> utilizado para inicializar a nova instância de objeto."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: MediaTypeHeaderValue(String)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(String)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> classe."
  syntax:
    content: public MediaTypeHeaderValue (string mediaType);
    parameters:
    - id: mediaType
      type: System.String
      description: "A origem representada como uma cadeia para inicializar a nova instância."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  id: CharSet
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: CharSet
  nameWithType: MediaTypeHeaderValue.CharSet
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém ou define o conjunto de carateres."
  syntax:
    content: public string CharSet { get; set; }
    return:
      type: System.String
      description: "O conjunto de carateres."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: MediaTypeHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se o especificada <xref:System.Object>é igual a atual <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> objeto.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto para a comparação com o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref:System.Object>é igual para o objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: MediaTypeHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Funciona como uma função de hash para um <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> objeto."
  remarks: "Um código hash é um valor numérico é utilizado para identificar um objeto durante o teste de igualdade. Também podem servir como um índice para um objeto numa coleção.       O método GetHashCode é adequado para utilização em estruturas de dados, tais como uma tabela hash e algoritmos de hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o objeto atual."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  id: MediaType
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: MediaType
  nameWithType: MediaTypeHeaderValue.MediaType
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém ou define o valor do cabeçalho de tipo de suporte."
  remarks: "O tipo de suporte é utilizado no tipo de conteúdo e campos de cabeçalho de aceitar para fornecer dados abertos e extensíveis escrevendo e escreva a negociação."
  syntax:
    content: public string MediaType { get; set; }
    return:
      type: System.String
      description: "O valor de cabeçalho de tipo de suporte."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  id: Parameters
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: Parameters
  nameWithType: MediaTypeHeaderValue.Parameters
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém ou define o tipo de suporte de parâmetros de valor de cabeçalho."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Parameters { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "Os parâmetros de valor de cabeçalho de tipo de suporte."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: MediaTypeHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converte uma cadeia para um <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> instância."
  syntax:
    content: public static System.Net.Http.Headers.MediaTypeHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Uma cadeia que representa a informação do valor de cabeçalho de tipo de suporte de dados."
    return:
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> instância."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>é um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referência."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>é informações de valor de cabeçalho de tipo de suporte de dados não é válido."
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: MediaTypeHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Cria um novo objeto é uma cópia de atual <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> instância."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Uma cópia da instância atual."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: MediaTypeHeaderValue.ToString()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve uma cadeia que representa o atual <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que representa o objeto atual."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  name: TryParse(String,MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.TryParse(String,MediaTypeHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(String,MediaTypeHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se uma cadeia válida <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> informações."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.MediaTypeHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "A cadeia a validar."
    - id: parsedValue
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "O <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;> </xref> versão da cadeia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.MediaTypeHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: MediaTypeHeaderValue(MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(MediaTypeHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(MediaTypeHeaderValue)
- uid: System.Net.Http.Headers.MediaTypeHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: MediaTypeHeaderValue(String)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(String)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: CharSet
  nameWithType: MediaTypeHeaderValue.CharSet
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: MediaTypeHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: MediaTypeHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: MediaType
  nameWithType: MediaTypeHeaderValue.MediaType
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: Parameters
  nameWithType: MediaTypeHeaderValue.Parameters
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<NameValueHeaderValue>
  nameWithType: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: MediaTypeHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: MediaTypeHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: MediaTypeHeaderValue.ToString()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.ToString()
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: TryParse(String,MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.TryParse(String,MediaTypeHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(String,MediaTypeHeaderValue)
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: CharSet
  nameWithType: MediaTypeHeaderValue.CharSet
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Equals*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: Equals
  nameWithType: MediaTypeHeaderValue.Equals
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: MediaTypeHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: MediaType
  nameWithType: MediaTypeHeaderValue.MediaType
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: Parameters
  nameWithType: MediaTypeHeaderValue.Parameters
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parse*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: Parse
  nameWithType: MediaTypeHeaderValue.Parse
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: MediaTypeHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.ToString*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: ToString
  nameWithType: MediaTypeHeaderValue.ToString
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse*
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: MediaTypeHeaderValue.TryParse
