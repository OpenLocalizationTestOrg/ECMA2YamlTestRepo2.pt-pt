### YamlMime:ManagedReference
items:
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  id: AttachedPropertyBrowsableForTypeAttribute
  children:
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  - System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  langs:
  - csharp
  name: AttachedPropertyBrowsableForTypeAttribute
  nameWithType: AttachedPropertyBrowsableForTypeAttribute
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  type: Class
  summary: "Especifica se uma propriedade anexada é pesquisável apenas para os elementos que derivam de um tipo especificado."
  remarks: "O significado do termo `browsable` como utilizados nas descrições para este [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] é semelhante a descrições para determinados <xref:System.ComponentModel.BrowsableAttribute>, mas o estado pesquisável para uma propriedade anexada é especialmente relevante para obter informações de propriedade para [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], porque uma propriedade anexada é principalmente um [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] conceito.</xref:System.ComponentModel.BrowsableAttribute>       Se foi especificado mais do que um tipo para um AttachedPropertyBrowsableForTypeAttribute [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)], a propriedade é pesquisável se for especificado qualquer correspondências de tipo (lógico ou).  O tipo, também pode ser uma interface.       Isto [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] especifica <xref:System.AttributeUsageAttribute.AllowMultiple%2A> `true`.</xref:System.AttributeUsageAttribute.AllowMultiple%2A>       Isto [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] só deve ser aplicado o acessor de obtenção das definições de propriedade anexada. Não se aplicam esta [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] para o acessor. Embora intuitivo seja a operação de conjunto que está a ser efetuada pesquisável para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] nos elementos relevantes, é a presença e características do acessor get na propriedade definir elemento que controla o comportamento verdadeiro.       Para obter informações gerais sobre as propriedades anexadas declarativo, consulte [ligado descrição geral de propriedades](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class AttachedPropertyBrowsableForTypeAttribute : System.Windows.AttachedPropertyBrowsableAttribute
  inheritance:
  - System.Attribute
  - System.Windows.AttachedPropertyBrowsableAttribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: AttachedPropertyBrowsableForTypeAttribute(Type)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> classe, utilizando fornecido <code> targetType </code>."
  syntax:
    content: public AttachedPropertyBrowsableForTypeAttribute (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "O tipo pretendido que âmbitos a utilização da propriedade anexada onde este [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] aplica-se."
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se atual <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] é igual a um objeto especificado."
  remarks: "Esta implementação suporta igualdade de valor do valor pode ser definida uma possível exposta por este [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>.</xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> para comparar a atual <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> é igual a atual <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode
  id: GetHashCode
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Devolve o código hash para este <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]."
  remarks: "Esta implementação suporta vários valores de hash possíveis baseados no valor pode ser definido uma possível exposto por este [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>.</xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor de número inteiro sem sinal de 32 bits."
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  id: TargetType
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: TargetType
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TargetType
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém o tipo de base que âmbitos a utilização da propriedade anexada onde este [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] aplica-se."
  remarks: "Esta propriedade é definível apenas através de [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] declaração como exposta pelo <xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute>construtor.</xref:System.Windows.AttachedPropertyBrowsableForTypeAttribute>"
  syntax:
    content: public Type TargetType { get; }
    return:
      type: System.Type
      description: "O pedido <xref:System.Type>.</xref:System.Type>"
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  id: TypeId
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TypeId
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém um identificador de tipo exclusivo para este <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]."
  remarks: "Esta implementação devolve um valor exclusivo para cada [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)], que é necessário porque este [!INCLUDE[TLA2#tla_netframewkattr](~/add/includes/tla2sharptla-netframewkattr-md.md)] permite várias utilizações."
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "Um objeto que é um identificador exclusivo para o <xref href=&quot;System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot;> </xref>."
  overload: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.AttachedPropertyBrowsableAttribute
  isExternal: false
  name: System.Windows.AttachedPropertyBrowsableAttribute
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: AttachedPropertyBrowsableForTypeAttribute(Type)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TargetType
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TargetType
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TypeId
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TypeId
  fullName: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: AttachedPropertyBrowsableForTypeAttribute
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: Equals
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.Equals
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.GetHashCode
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TargetType
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TargetType
- uid: System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId*
  parent: System.Windows.AttachedPropertyBrowsableForTypeAttribute
  isExternal: false
  name: TypeId
  nameWithType: AttachedPropertyBrowsableForTypeAttribute.TypeId
