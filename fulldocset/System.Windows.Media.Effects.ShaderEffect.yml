### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.ShaderEffect
  id: ShaderEffect
  children:
  - System.Windows.Media.Effects.ShaderEffect.#ctor
  - System.Windows.Media.Effects.ShaderEffect.Clone
  - System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  - System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  - System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  - System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  - System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  - System.Windows.Media.Effects.ShaderEffect.PaddingRight
  - System.Windows.Media.Effects.ShaderEffect.PaddingTop
  - System.Windows.Media.Effects.ShaderEffect.PixelShader
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  - System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  - System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  langs:
  - csharp
  name: ShaderEffect
  nameWithType: ShaderEffect
  fullName: System.Windows.Media.Effects.ShaderEffect
  type: Class
  summary: "Fornece um efeito de mapa de bits personalizada utilizando um <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref>."
  remarks: "Deriva da classe de ShaderEffect para implementar um efeito personalizado com base num shader de pixel único.       Os passos seguintes mostram como criar um efeito personalizado.      1.  Carga uma <xref:System.Windows.Media.Effects.PixelShader>do código de byte de alto nível Shading idioma (HLSL) pré-compilada.</xref:System.Windows.Media.Effects.PixelShader>      2.  Definir propriedades de dependência que representam os parâmetros do efeito e <xref:System.Windows.Media.Brush>-com base em entradas superfície.</xref:System.Windows.Media.Brush> Utilize um do <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>sobrecargas para associar estas entradas com registar números que são referenciados no código de byte HLSL.</xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>       O número de samplers está limitado a 4.       As seguintes restrições aplicam-se ao utilizar um shader de PS 3.0.      -Quando uma PS 3.0 shader é atribuído, aumenta o número de samplers 8. Atribua o shader de PS 3.0 antes de outros shaders para permitir ao registar 8 samplers.      -O limite de registo constante de shader completo de 224 para floats é utilizado. Para obter mais informações, consulte [ps_3_0](http://go.microsoft.com/fwlink/?LinkId=166292).      -Os seguintes tipos de dados são suportados no PS 3.0 shaders apenas. Se estes campos são utilizados em versões do shader inferiores, é emitida uma exceção.          - `int` e convertíveis de tipos para `int`: `uint`, `byte`, `sbyte`, `long`, `ulong`, `short`, `ushort`, `char`           -    `bool` - se um válido 3.0 de PS shader é carregado num computador que não tem suporte de hardware para PS 3.0, o shader é ignorada. Se o shader é inválido, sem exceção é emitida.      -Se um computador tiver mais do que uma placa de vídeo, o comportamento é definido pela placa de vídeo com menos capacidade. Por exemplo, se o computador tiver duas placas de vídeo, um deles suporta PS 3.0 e um deles não, o comportamento é o mesmo como se o computador não suporta PS 3.0.      -Se um computador suportar composição PS 3.0 no hardware, mas é atribuído um shader de PS 3.0 inválido, o <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered>o evento é gerado.</xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> Um exemplo de um shader de PS 3.0 inválido é um compilada com a `ps_3_sw` sinalizador. A classe de ShaderEffect aceita apenas shaders de PS 3.0 que são compiladas com o `ps_3_0` sinalizador transmitido a fxc.exe. Para obter mais informações, consulte [efeito compilador ferramenta](http://go.microsoft.com/fwlink/?LinkId=166293).      > [!NOTE] > PS 2.0 shaders executar ao compor no software. No entanto, mesmo se PS 3.0 for suportada pelo hardware do sistema, shaders PS 3.0 não são executados durante a composição de software."
  example:
  - "The following code example shows how to derive from the ShaderEffect class.  \n  \n [!code-cs[System.Windows.Media.Effects.ShaderEffect#1](~/add/codesnippet/csharp/ShaderEffectDemo/ThresholdEffect.cs#1)]  \n  \n The following code example shows a shader that corresponds to the previous ShaderEffect class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following XAML shows how to use the custom shader effect.  \n  \n [!code-xml[System.Windows.Media.Effects.ShaderEffect#1000](~/add/codesnippet/xaml/ShaderEffectDemo/Window1.xaml#1000)]"
  syntax:
    content: 'public abstract class ShaderEffect : System.Windows.Media.Effects.Effect'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.Effect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.Effect.EffectMapping
  - System.Windows.Media.Effects.Effect.ImplicitInput
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: ShaderEffect()
  nameWithType: ShaderEffect.ShaderEffect()
  fullName: System.Windows.Media.Effects.ShaderEffect.ShaderEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> classe."
  syntax:
    content: protected ShaderEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.ShaderEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: ShaderEffect.Clone()
  fullName: System.Windows.Media.Effects.ShaderEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> objeto, efetuar cópias profundas de valores deste objeto. Quando copiar propriedades de dependência deste objeto, este método copia recursos referências e os dados enlaces (que já não pode ser resolvido), mas não animações ou os respetivos valores atuais."
  remarks: "O método de Clone pode ser utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos.</xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra o herdados <xref:System.Windows.Freezable.Clone%2A>método para fornecer uma implementação com tipo seguro.</xref:System.Windows.Freezable.Clone%2A>"
  syntax:
    content: public System.Windows.Media.Effects.ShaderEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.ShaderEffect
      description: "Um clone modificável desta instância. O clone devolvido eficazmente é uma cópia profunda do objeto atual. O clone <xref:System.Windows.Freezable.IsFrozen*>propriedade é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Freezable.IsFrozen*>"
  overload: System.Windows.Media.Effects.ShaderEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: ShaderEffect.CloneCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Faz com que a instância de um clone (cópia profunda) de especificado <xref href=&quot;System.Windows.Freezable&quot;> </xref> utilizando valores de propriedade base (não animada)."
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "O objeto a clonagem."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ShaderEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> objeto, tornando profundas cópias dos valores atuais deste objeto. As referências de recurso, enlaces de dados e animações não são copiadas, mas os respetivos valores atuais são copiados."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada por uma implementação com tipo seguro.       Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.ShaderEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.ShaderEffect
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: ShaderEffect.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Faz com que a instância de um clone modificável (cópia profunda) de especificado <xref href=&quot;System.Windows.Freezable&quot;> </xref> utilizando valores de propriedade atual."
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "O <xref href=&quot;System.Windows.Freezable&quot;> </xref> para ser clonado."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ShaderEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Cria uma nova instância do <xref href=&quot;System.Windows.Freezable&quot;> </xref> classe derivada."
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "A nova instância."
  overload: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  id: DdxUvDdyUvRegisterIndex
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
  fullName: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Obtém ou define um valor que indica o registo de shader a utilizar para os derivados parcial das coordenadas de texture no que respeita à espaço do ecrã."
  remarks: "Utilize a propriedade para especificar o shader registar DdxUvDdyUvRegisterIndex que contém os derivados parcial do texture coordena no que respeita à espaço do ecrã. Por exemplo, se DdxUvDdyUvRegisterIndex estiver definido para 4, c4 de registar shader é utilizado. C4 de registo contém quatro campos de vírgula flutuante. O seguinte código de idioma de Shading de nível elevado (HLSL) mostra como é utilizado este registo. O `nextPixelUV` valor representa o pixel seguinte à direita.      ```   float4 ddxUvDdyUv : register(c4);   SamplerState  sampler : register(S0);   ...   float2 nextPixelUV;   nextPixelUV.u = ddxUvDdyUv.x + u;   nextPixelUV.v = ddxUvDdyUv.y + v;      tex2D(sampler, nextPixelUV);   ```A tabela seguinte mostra como o registo especificado para DdxUvDdyUvRegisterIndex é preenchido.      | Registar constante | Valor de derivativo |   |-----------------------|----------------------|   | x component|ddx(u) |   | y component|ddx(v) |   | z component|ddy(u) |   | w component|ddy(v) |       Texture coordenadas são assinaladas como `(u, v)`. `ddx(u)`é o constante derivativo parcial do componente coordenada texture `u` relativamente a coordenada x do espaço do ecrã. `ddy(u)`é o derivativo parcial da coordenada texture `u` relativamente a coordenada y do espaço do ecrã. Da mesma forma, `ddx(v)` e `ddy(v)` são os derivados de espaço de ecrã correspondente para o componente de coordenada texture `v`.      > [!NOTE] > HLSL possui as instruções ddx e ddy para calcular estes valores, mas estas instruções não estão disponíveis em todo o hardware PixelShader 2.0.       Pode considerar estes constantes da seguinte forma. Se o passo 1 pixel à direita no espaço de ecrã (na direção x), em seguida, `ddx(u)` é a quantidade que `u` alterações no espaço de texture, e `ddx(v)` é a quantidade que `v` alterações no espaço de texture. Se o efeito é eixo alinhada quando esta é a composto, em seguida, `ddx(v)` é 0. Se o efeito é roda quando esta é a composto, em seguida, `ddx(v)` é diferente de zero."
  syntax:
    content: protected int DdxUvDdyUvRegisterIndex { get; set; }
    return:
      type: System.Int32
      description: "O índice de registo que contém os derivados parcial."
  overload: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi efetuada uma tentativa para definir a propriedade DdxUvDdyUvRegisterIndex mais uma vez ou após o processamento inicial do efeito."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Faz com que a instância de um clone congelado de especificado <xref href=&quot;System.Windows.Freezable&quot;> </xref> utilizando valores de propriedade base (não animada)."
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "A instância para copiar."
  overload: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Faz com que a instância atual um clone congelado de especificado <xref href=&quot;System.Windows.Freezable&quot;> </xref>. Se o objeto tem propriedades de dependência animado, os respetivos valores animados atuais são copiados."
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "O <xref href=&quot;System.Windows.Freezable&quot;> </xref> para copiar e parar."
  overload: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  id: PaddingBottom
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Obtém ou define um valor que indica que texture de saída o efeito é maior do que a entrada texture ao longo do limite inferior."
  syntax:
    content: protected double PaddingBottom { get; set; }
    return:
      type: System.Double
      description: "O preenchimento ao longo do limite inferior do efeito."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingBottom*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor fornecido é inferior a 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  id: PaddingLeft
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Obtém ou define um valor que indica que texture de saída o efeito é maior do que a entrada texture ao longo do limite esquerdo."
  syntax:
    content: protected double PaddingLeft { get; set; }
    return:
      type: System.Double
      description: "O preenchimento ao longo do limite esquerdo do efeito."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor fornecido é inferior a 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  id: PaddingRight
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Obtém ou define um valor que indica que texture de saída o efeito é maior do que a entrada texture ao longo da extremidade direita."
  syntax:
    content: protected double PaddingRight { get; set; }
    return:
      type: System.Double
      description: "O preenchimento ao longo da extremidade direita do efeito."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingRight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor fornecido é inferior a 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  id: PaddingTop
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Obtém ou define um valor que indica que texture de saída o efeito é maior do que a entrada texture ao longo do limite superior."
  syntax:
    content: protected double PaddingTop { get; set; }
    return:
      type: System.Double
      description: "O preenchimento ao longo de limite superior do efeito."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor fornecido é inferior a 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader
  id: PixelShader
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShader
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Obtém ou define o <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref> a utilizar para o efeito."
  remarks: "<a name=&quot;dependencyPropertyInfo_PixelShader&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>"
  syntax:
    content: protected System.Windows.Media.Effects.PixelShader PixelShader { get; set; }
    return:
      type: System.Windows.Media.Effects.PixelShader
      description: "O <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref> para o efeito."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShader*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  id: PixelShaderConstantCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderConstantCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderConstantCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa um valor de propriedade de dependência com o registo de constantes de vírgula flutuante de um shader de pixel."
  remarks: "Utilize o método de PixelShaderConstantCallback ao registar uma propriedade de dependência para uma constante de shader. O método PixelShaderConstantCallback constrói um <xref:System.Windows.PropertyChangedCallback>Delegar que, quando foi invocado, cria uma associação entre a propriedade de dependência e o registo de constante de shader especificado pelo `floatRegisterIndex`.</xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderConstantCallback (int floatRegisterIndex);
    parameters:
    - id: floatRegisterIndex
      type: System.Int32
      description: "O índice do registo do shader associado com a propriedade de dependência."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "A <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> delegado que associa uma propriedade de dependência e o registo de constante de shader especificado pelo <code> floatRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade de dependência tem um tipo desconhecido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>floatRegisterIndex</code>é maior que ou igual a 32, ou <code>floatRegisterIndex</code> é inferior a 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  id: PixelShaderProperty
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderProperty
  nameWithType: ShaderEffect.PixelShaderProperty
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Identifica o <xref:System.Windows.Media.Effects.ShaderEffect.PixelShader*>propriedade de dependência.</xref:System.Windows.Media.Effects.ShaderEffect.PixelShader*>"
  syntax:
    content: protected static readonly System.Windows.DependencyProperty PixelShaderProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  id: PixelShaderSamplerCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderSamplerCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa um valor de propriedade de dependência com o registo de Mostruário do shader de pixel."
  remarks: "Utilize o método de PixelShaderSamplerCallback ao registar um <xref:System.Windows.Media.Brush>-valor de propriedade de dependência para o Mostruário do shader.</xref:System.Windows.Media.Brush> O método PixelShaderSamplerCallback constrói um <xref:System.Windows.PropertyChangedCallback>Delegar que, quando foi invocado, cria uma associação entre a propriedade de dependência e o registo de Mostruário do shader especificado pelo `samplerRegisterIndex`.</xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex);
    parameters:
    - id: samplerRegisterIndex
      type: System.Int32
      description: "O índice do Mostruário do shader associado com a propriedade de dependência."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "A <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> delegado que associa uma propriedade de dependência e o registo de Mostruário do shader especificado pelo <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  id: PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderSamplerCallback(Int32,SamplingMode)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa um valor de propriedade de dependência com o registo de Mostruário do shader de pixel e um <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref>."
  remarks: "Utilize o <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>método ao registar um <xref:System.Windows.Media.Brush>-valor de propriedade de dependência para o Mostruário do shader.</xref:System.Windows.Media.Brush> </xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> O <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>construções de método um <xref:System.Windows.PropertyChangedCallback>Delegar que, quando foi invocado, cria uma associação entre a propriedade de dependência e o registo de Mostruário do shader especificado pelo `samplerRegisterIndex`.</xref:System.Windows.PropertyChangedCallback> </xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);
    parameters:
    - id: samplerRegisterIndex
      type: System.Int32
      description: "O índice do Mostruário do shader associado com a propriedade de dependência."
    - id: samplingMode
      type: System.Windows.Media.Effects.SamplingMode
      description: "O <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref> para o Mostruário do shader."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "A <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> delegado que associa uma propriedade de dependência e o registo de Mostruário do shader especificado pelo <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  id: RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa um registo de Mostruário do shader uma propriedade de dependência."
  syntax:
    content: protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex);
    parameters:
    - id: dpName
      type: System.String
      description: "O nome da propriedade de dependência."
    - id: ownerType
      type: System.Type
      description: "O tipo do efeito que tem a propriedade de dependência."
    - id: samplerRegisterIndex
      type: System.Int32
      description: "O índice do Mostruário do shader associado com a propriedade de dependência."
    return:
      type: System.Windows.DependencyProperty
      description: "Uma propriedade de dependência associada o Mostruário do shader especificado pelo <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  id: RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa uma propriedade de dependência com um registo de Mostruário do shader e um <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref>."
  syntax:
    content: protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);
    parameters:
    - id: dpName
      type: System.String
      description: "O nome da propriedade de dependência."
    - id: ownerType
      type: System.Type
      description: "O tipo do efeito que tem a propriedade de dependência."
    - id: samplerRegisterIndex
      type: System.Int32
      description: "O índice do Mostruário do shader associado com a propriedade de dependência."
    - id: samplingMode
      type: System.Windows.Media.Effects.SamplingMode
      description: "O <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref> para o Mostruário do shader."
    return:
      type: System.Windows.DependencyProperty
      description: "Uma propriedade de dependência associada o Mostruário do shader especificado pelo <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  id: UpdateShaderValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: UpdateShaderValue(DependencyProperty)
  nameWithType: ShaderEffect.UpdateShaderValue(DependencyProperty)
  fullName: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Notifica o efeito que a constante de shader ou mostruário correspondente para a propriedade de dependência especificado deve ser atualizado."
  syntax:
    content: protected void UpdateShaderValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "A propriedade de dependência a ser atualizado."
  overload: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.Effect
  isExternal: false
  name: System.Windows.Media.Effects.Effect
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: ShaderEffect()
  nameWithType: ShaderEffect.ShaderEffect()
  fullName: System.Windows.Media.Effects.ShaderEffect.ShaderEffect()
- uid: System.Windows.Media.Effects.ShaderEffect.Clone
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: Clone()
  nameWithType: ShaderEffect.Clone()
  fullName: System.Windows.Media.Effects.ShaderEffect.Clone()
- uid: System.Windows.Media.Effects.ShaderEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: ShaderEffect
  nameWithType: ShaderEffect
  fullName: System.Windows.Media.Effects.ShaderEffect
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: ShaderEffect.CloneCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ShaderEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: ShaderEffect.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ShaderEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore()
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
  fullName: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingRight
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingTop
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShader
- uid: System.Windows.Media.Effects.PixelShader
  parent: System.Windows.Media.Effects
  isExternal: false
  name: PixelShader
  nameWithType: PixelShader
  fullName: System.Windows.Media.Effects.PixelShader
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderConstantCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderConstantCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(Int32)
- uid: System.Windows.PropertyChangedCallback
  parent: System.Windows
  isExternal: false
  name: PropertyChangedCallback
  nameWithType: PropertyChangedCallback
  fullName: System.Windows.PropertyChangedCallback
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderProperty
  nameWithType: ShaderEffect.PixelShaderProperty
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32)
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback(Int32,SamplingMode)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
- uid: System.Windows.Media.Effects.SamplingMode
  parent: System.Windows.Media.Effects
  isExternal: false
  name: SamplingMode
  nameWithType: SamplingMode
  fullName: System.Windows.Media.Effects.SamplingMode
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: UpdateShaderValue(DependencyProperty)
  nameWithType: ShaderEffect.UpdateShaderValue(DependencyProperty)
  fullName: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(DependencyProperty)
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: ShaderEffect
  nameWithType: ShaderEffect.ShaderEffect
- uid: System.Windows.Media.Effects.ShaderEffect.Clone*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: Clone
  nameWithType: ShaderEffect.Clone
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCore
  nameWithType: ShaderEffect.CloneCore
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ShaderEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: ShaderEffect.CloneCurrentValueCore
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ShaderEffect.CreateInstanceCore
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: ShaderEffect.GetAsFrozenCore
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderConstantCallback
  nameWithType: ShaderEffect.PixelShaderConstantCallback
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback
  nameWithType: ShaderEffect.PixelShaderSamplerCallback
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: UpdateShaderValue
  nameWithType: ShaderEffect.UpdateShaderValue
