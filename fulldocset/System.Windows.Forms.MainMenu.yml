### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.MainMenu
  id: MainMenu
  children:
  - System.Windows.Forms.MainMenu.#ctor
  - System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.MainMenu.CloneMenu
  - System.Windows.Forms.MainMenu.Collapse
  - System.Windows.Forms.MainMenu.CreateMenuHandle
  - System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  - System.Windows.Forms.MainMenu.GetForm
  - System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  - System.Windows.Forms.MainMenu.RightToLeft
  - System.Windows.Forms.MainMenu.ToString
  langs:
  - csharp
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
  type: Class
  summary: "Represents the menu structure of a form. Although <xref href=&quot;System.Windows.Forms.MenuStrip&quot;></xref> replaces and adds functionality to the MainMenu control of previous versions, MainMenu is retained for both backward compatibility and future use if you choose."
  remarks: "The MainMenu control represents the container for the menu structure of a form. A menu is composed of <xref:System.Windows.Forms.MenuItem> objects that represent the individual menu commands in the menu structure. Each <xref:System.Windows.Forms.MenuItem> can be a command for your application or a parent menu for other submenu items. To bind the MainMenu to the <xref:System.Windows.Forms.Form> that will display it, assign the MainMenu to the <xref:System.Windows.Forms.Form.Menu%2A> property of the <xref:System.Windows.Forms.Form>.       For applications that will have support for multiple languages, you can use the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to display the text of the menu from right to left to support languages such as Arabic.       You can create different MainMenu objects to represent different menu structures for your form. If you want to reuse the menu structure contained in a specific MainMenu, you can use its <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> method to create a copy. Once you have a copy of the menu structure, you can make the appropriate modifications for your new menu structure.      > [!NOTE] >  Cutting and pasting menu items from one form to another in the designer might not work as expected if the form you are pasting into has no menu items defined."
  example:
  - "The following code example creates a MainMenu, assigns two <xref:System.Windows.Forms.MenuItem> objects to the MainMenu and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.m_9_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_9_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.m_9_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.MainMenu")]

      public class MainMenu : System.Windows.Forms.Menu
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Menu
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.IsParent
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu()
  nameWithType: MainMenu.MainMenu()
  fullName: System.Windows.Forms.MainMenu.MainMenu()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref> class without any specified menu items."
  remarks: "This version of the constructor creates a <xref:System.Windows.Forms.MainMenu> without any specified <xref:System.Windows.Forms.MenuItem> objects. To add menu items to the control use the other version of this constructor that accepts an array of <xref:System.Windows.Forms.MenuItem> objects as its parameter or use the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItems%2A> property."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_20_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_20_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_20_1.cpp)]"
  syntax:
    content: public MainMenu ();
    parameters: []
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu(IContainer)
  nameWithType: MainMenu.MainMenu(IContainer)
  fullName: System.Windows.Forms.MainMenu.MainMenu(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref> class with the specified container."
  syntax:
    content: public MainMenu (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "An <xref href=&quot;System.ComponentModel.IContainer&quot;></xref> representing the container of the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>."
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu(MenuItem[])
  nameWithType: MainMenu.MainMenu(MenuItem[])
  fullName: System.Windows.Forms.MainMenu.MainMenu(MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref> with a specified set of <xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref> objects."
  remarks: "You can use this constructor to assign an array of <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> at the time of its creation. After the <xref:System.Windows.Forms.MainMenu> has been created you can add additional <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItems%2A> property."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, and assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> using this version of the constructor. The example then binds the <xref:System.Windows.Forms.MainMenu> to a <xref:System.Windows.Forms.Form>. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cpp[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_24_1.cpp)]\n [!code-cs[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_24_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_24_1.vb)]"
  syntax:
    content: public MainMenu (System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "An array of <xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref> objects that will be added to the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>."
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.CloneMenu
  id: CloneMenu
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: CloneMenu()
  nameWithType: MainMenu.CloneMenu()
  fullName: System.Windows.Forms.MainMenu.CloneMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref> that is a duplicate of the current <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>."
  remarks: "You can use this method to create a copy of the menu structure stored in a <xref:System.Windows.Forms.MainMenu>. You can use this method to reuse the menu structure stored in a <xref:System.Windows.Forms.MainMenu> as the foundation for a new <xref:System.Windows.Forms.MainMenu>. For example, if you want to create a menu structure that has the same menu items as an existing <xref:System.Windows.Forms.MainMenu> but will also have additional <xref:System.Windows.Forms.MenuItem> objects added to it, you can use the CloneMenu method to create a copy of the original <xref:System.Windows.Forms.MainMenu> and then add the new <xref:System.Windows.Forms.MenuItem> objects to the cloned <xref:System.Windows.Forms.MainMenu>."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MainMenu.GetForm%2A> method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to <xref:System.Windows.Forms.MainMenu.GetForm%2A> does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the CloneMenu method. The code then sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to true on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.GetForm Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_21_1.cs)]\n [!code-cpp[Classic MainMenu.GetForm Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_21_1.cpp)]\n [!code-vb[Classic MainMenu.GetForm Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_21_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.MainMenu CloneMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MainMenu
      description: "A <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref> that represents the cloned menu."
  overload: System.Windows.Forms.MainMenu.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.Collapse
  id: Collapse
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: Collapse
  nameWithType: MainMenu.Collapse
  fullName: System.Windows.Forms.MainMenu.Collapse
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the main menu collapses."
  remarks: "For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Collapse event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MainMenu> named `MainMenu1`. Then ensure that the event handler is associated with the Collapse event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#483](~/add/codesnippet/csharp/e-system.windows.forms.m_9_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#483](~/add/codesnippet/visualbasic/e-system.windows.forms.m_9_1.vb)]"
  syntax:
    content: public event EventHandler Collapse;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle
  id: CreateMenuHandle
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: CreateMenuHandle()
  nameWithType: MainMenu.CreateMenuHandle()
  fullName: System.Windows.Forms.MainMenu.CreateMenuHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new handle to the Menu."
  syntax:
    content: protected override IntPtr CreateMenuHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "A handle to the menu if the method succeeds; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.MainMenu.CreateMenuHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MainMenu.Dispose(Boolean)
  fullName: System.Windows.Forms.MainMenu.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Disposes of the resources, other than memory, used by the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>."
  remarks: "Call Dispose when you are finished using the <xref:System.Windows.Forms.MainMenu>. The Dispose method leaves the <xref:System.Windows.Forms.MainMenu> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Windows.Forms.MainMenu> so the memory it was occupying can be reclaimed by garbage collection.      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Windows.Forms.MainMenu>. Otherwise, the resources the <xref:System.Windows.Forms.MainMenu> is using will not be freed until garbage collection calls the <xref:System.Windows.Forms.MainMenu> object&quot;s destructor."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Windows.Forms.MainMenu.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.GetForm
  id: GetForm
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: GetForm()
  nameWithType: MainMenu.GetForm()
  fullName: System.Windows.Forms.MainMenu.GetForm()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref href=&quot;System.Windows.Forms.Form&quot;></xref> that contains this control."
  remarks: "This property enables you to determine if a specific <xref:System.Windows.Forms.MainMenu> is parented to a form. The property is typically used when multiple <xref:System.Windows.Forms.MainMenu> objects are being used on a form and you need to determine which one is currently being used by a form."
  example:
  - "The following code example uses the GetForm method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to GetForm does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> method. The code then sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to true on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.GetForm Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_11_1.cs)]\n [!code-cpp[Classic MainMenu.GetForm Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_11_1.cpp)]\n [!code-vb[Classic MainMenu.GetForm Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_11_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Form GetForm ();
    parameters: []
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;></xref> that is the container for this control. Returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref> is not currently hosted on a form."
  overload: System.Windows.Forms.MainMenu.GetForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  id: OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: OnCollapse(EventArgs)
  nameWithType: MainMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.MainMenu.OnCollapse(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.MainMenu.Collapse&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnCollapse method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCollapse (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.MainMenu.OnCollapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
  fullName: System.Windows.Forms.MainMenu.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets whether the text displayed by the control is displayed from right to left."
  remarks: "This property enables your menus to support languages that are written from right to left. When this property is set to `RightToLeft.Yes`, the menu item text will be displayed from right to left instead of the default left to right method.      > [!NOTE] >  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A> property."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MainMenu.GetForm%2A> method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to <xref:System.Windows.Forms.MainMenu.GetForm%2A> does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> method. The example code then sets the RightToLeft property to `RightToLeft.Yes` on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_36_1.cs)]\n [!code-cpp[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_36_1.cpp)]\n [!code-vb[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_36_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "One of the <xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref> values."
  overload: System.Windows.Forms.MainMenu.RightToLeft*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The value assigned to the property is not a valid member of the <xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref> enumeration."
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.ToString
  id: ToString
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: ToString()
  nameWithType: MainMenu.ToString()
  fullName: System.Windows.Forms.MainMenu.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a string that represents the <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>."
  remarks: "The return string includes the type and the string returned by the <xref:System.Windows.Forms.Form.ToString%2A> method if the <xref:System.Windows.Forms.MainMenu> is assigned to a form."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the current <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>."
  overload: System.Windows.Forms.MainMenu.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Menu
  isExternal: false
  name: System.Windows.Forms.Menu
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Forms.MainMenu.#ctor
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu()
  nameWithType: MainMenu.MainMenu()
  fullName: System.Windows.Forms.MainMenu.MainMenu()
- uid: System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu(IContainer)
  nameWithType: MainMenu.MainMenu(IContainer)
  fullName: System.Windows.Forms.MainMenu.MainMenu(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu(MenuItem[])
  nameWithType: MainMenu.MainMenu(MenuItem[])
  fullName: System.Windows.Forms.MainMenu.MainMenu(MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.MainMenu.CloneMenu
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CloneMenu()
  nameWithType: MainMenu.CloneMenu()
  fullName: System.Windows.Forms.MainMenu.CloneMenu()
- uid: System.Windows.Forms.MainMenu
  parent: System.Windows.Forms
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
- uid: System.Windows.Forms.MainMenu.Collapse
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Collapse
  nameWithType: MainMenu.Collapse
  fullName: System.Windows.Forms.MainMenu.Collapse
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CreateMenuHandle()
  nameWithType: MainMenu.CreateMenuHandle()
  fullName: System.Windows.Forms.MainMenu.CreateMenuHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MainMenu.Dispose(Boolean)
  fullName: System.Windows.Forms.MainMenu.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.MainMenu.GetForm
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: GetForm()
  nameWithType: MainMenu.GetForm()
  fullName: System.Windows.Forms.MainMenu.GetForm()
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: OnCollapse(EventArgs)
  nameWithType: MainMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.MainMenu.OnCollapse(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.MainMenu.RightToLeft
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
  fullName: System.Windows.Forms.MainMenu.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.MainMenu.ToString
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: ToString()
  nameWithType: MainMenu.ToString()
  fullName: System.Windows.Forms.MainMenu.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.MainMenu.#ctor*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu.MainMenu
- uid: System.Windows.Forms.MainMenu.CloneMenu*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CloneMenu
  nameWithType: MainMenu.CloneMenu
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CreateMenuHandle
  nameWithType: MainMenu.CreateMenuHandle
- uid: System.Windows.Forms.MainMenu.Dispose*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Dispose
  nameWithType: MainMenu.Dispose
- uid: System.Windows.Forms.MainMenu.GetForm*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: GetForm
  nameWithType: MainMenu.GetForm
- uid: System.Windows.Forms.MainMenu.OnCollapse*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: OnCollapse
  nameWithType: MainMenu.OnCollapse
- uid: System.Windows.Forms.MainMenu.RightToLeft*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
- uid: System.Windows.Forms.MainMenu.ToString*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: ToString
  nameWithType: MainMenu.ToString
