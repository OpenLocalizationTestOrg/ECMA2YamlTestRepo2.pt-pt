### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlParameter
  id: SqlParameter
  children:
  - System.Data.SqlClient.SqlParameter.#ctor
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  - System.Data.SqlClient.SqlParameter.CompareInfo
  - System.Data.SqlClient.SqlParameter.DbType
  - System.Data.SqlClient.SqlParameter.Direction
  - System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  - System.Data.SqlClient.SqlParameter.IsNullable
  - System.Data.SqlClient.SqlParameter.LocaleId
  - System.Data.SqlClient.SqlParameter.Offset
  - System.Data.SqlClient.SqlParameter.ParameterName
  - System.Data.SqlClient.SqlParameter.Precision
  - System.Data.SqlClient.SqlParameter.ResetDbType
  - System.Data.SqlClient.SqlParameter.ResetSqlDbType
  - System.Data.SqlClient.SqlParameter.Scale
  - System.Data.SqlClient.SqlParameter.Size
  - System.Data.SqlClient.SqlParameter.SourceColumn
  - System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  - System.Data.SqlClient.SqlParameter.SourceVersion
  - System.Data.SqlClient.SqlParameter.SqlDbType
  - System.Data.SqlClient.SqlParameter.SqlValue
  - System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlParameter.ToString
  - System.Data.SqlClient.SqlParameter.TypeName
  - System.Data.SqlClient.SqlParameter.UdtTypeName
  - System.Data.SqlClient.SqlParameter.Value
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  langs:
  - csharp
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
  type: Class
  summary: "Represents a parameter to a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> and optionally its mapping to <xref href=&quot;System.Data.DataSet&quot;></xref> columns. This class cannot be inherited. For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Parameter names are not case sensitive.      > [!NOTE] >  Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.       For more information, along with additional sample code demonstrating how to use parameters, see [Commands and Parameters](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates multiple instances of SqlParameter through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>. These parameters are used to select data from the data source and put the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created by using the appropriate schema, commands, and connection. For more information and additional examples on using parameters, see [Retrieving and Modifying Data in ADO.NET](~/add/includes/ajax-current-ext-md.md) and [Configuring Parameters and Parameter Data Types](../Topic/Configuring%20Parameters%20and%20Parameter%20Data%20Types.md).  \n  \n [!code-cs[Classic WebData SqlParameter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._0_1.cs)]\n [!code-vb[Classic WebData SqlParameter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlParameter/SqlParameterConverter))]

      public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> class."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public SqlParameter ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  id: '#ctor(System.String,System.Data.SqlDbType)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> class that uses the parameter name and the data type."
  remarks: "The data type and, if appropriate, **Size** and <xref:System.Data.SqlClient.SqlParameter.Precision%2A> are inferred from the value of the `dbType` parameter."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/csharp/4c1dfa04-4b19-4ef9-bf3e-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/visualbasic/4c1dfa04-4b19-4ef9-bf3e-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType);
    parameters:
    - id: parameterName
      type: System.String
      description: "The name of the parameter to map."
    - id: dbType
      type: System.Data.SqlDbType
      description: "One of the <xref href=&quot;System.Data.SqlDbType&quot;></xref> values."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value supplied in the <code>dbType</code> parameter is an invalid back-end data type."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> class that uses the parameter name and a value of the new <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>."
  remarks: "When you specify an <xref:System.Object> in the `value` parameter, the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> is inferred from the Microsoft .NET Framework type of the <xref:System.Object>.       Use caution when you use this overload of the <xref:System.Data.SqlClient.SqlParameter> constructor to specify integer parameter values. Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates.      ```   Parameter = new SqlParameter(&quot;@pname&quot;, (object)0);   ```       If you do not perform this conversion, the compiler assumes that you are trying to call the `SqlParameter` (`string`, `SqlDbType`) constructor overload."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._12_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._12_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "The name of the parameter to map."
    - id: value
      type: System.Object
      description: "An <xref:System.Object> that is the value of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> class that uses the parameter name, the <xref href=&quot;System.Data.SqlDbType&quot;></xref>, and the size."
  remarks: "The **Size** is inferred from the value of the `dbType` parameter if it is not explicitly set in the `size` parameter."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/csharp/63cca4fc-f4fc-4270-865a-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/visualbasic/63cca4fc-f4fc-4270-865a-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);
    parameters:
    - id: parameterName
      type: System.String
      description: "The name of the parameter to map."
    - id: dbType
      type: System.Data.SqlDbType
      description: "One of the <xref href=&quot;System.Data.SqlDbType&quot;></xref> values."
    - id: size
      type: System.Int32
      description: "The length of the parameter."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value supplied in the <code>dbType</code> parameter is an invalid back-end data type."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> class that uses the parameter name, the <xref href=&quot;System.Data.SqlDbType&quot;></xref>, the size, and the source column name."
  remarks: "The **Size** is inferred from the value of the `dbType` parameter if it is not explicitly set in the `size` parameter."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/visualbasic/90f2fc39-217a-4d4f-ba7a-_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/csharp/90f2fc39-217a-4d4f-ba7a-_1.cs)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);
    parameters:
    - id: parameterName
      type: System.String
      description: "The name of the parameter to map."
    - id: dbType
      type: System.Data.SqlDbType
      description: "One of the <xref href=&quot;System.Data.SqlDbType&quot;></xref> values."
    - id: size
      type: System.Int32
      description: "The length of the parameter."
    - id: sourceColumn
      type: System.String
      description: "The name of the source column (<xref:System.Data.SqlClient.SqlParameter.SourceColumn*>) if this <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> is used in a call to <xref:System.Data.Common.DbDataAdapter.Update*>."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value supplied in the <code>dbType</code> parameter is an invalid back-end data type."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> class that uses the parameter name, the type of the parameter, the size of the parameter, a <xref href=&quot;System.Data.ParameterDirection&quot;></xref>, the precision of the parameter, the scale of the parameter, the source column, a <xref href=&quot;System.Data.DataRowVersion&quot;></xref> to use, and the value of the parameter."
  remarks: "The **Size** and <xref:System.Data.SqlClient.SqlParameter.Precision%2A> are inferred from the value of the `dbType` parameter if they are not explicitly set in the `size` and `precision` parameters."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/csharp/ebcbbbdb-fcc0-4579-9b6d-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/visualbasic/ebcbbbdb-fcc0-4579-9b6d-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "The name of the parameter to map."
    - id: dbType
      type: System.Data.SqlDbType
      description: "One of the <xref href=&quot;System.Data.SqlDbType&quot;></xref> values."
    - id: size
      type: System.Int32
      description: "The length of the parameter."
    - id: direction
      type: System.Data.ParameterDirection
      description: "One of the <xref href=&quot;System.Data.ParameterDirection&quot;></xref> values."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the value of the field can be null; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: precision
      type: System.Byte
      description: "The total number of digits to the left and right of the decimal point to which <xref:System.Data.SqlClient.SqlParameter.Value*> is resolved."
    - id: scale
      type: System.Byte
      description: "The total number of decimal places to which <xref:System.Data.SqlClient.SqlParameter.Value*> is resolved."
    - id: sourceColumn
      type: System.String
      description: "The name of the source column (<xref:System.Data.SqlClient.SqlParameter.SourceColumn*>) if this <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> is used in a call to <xref:System.Data.Common.DbDataAdapter.Update*>."
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "One of the <xref href=&quot;System.Data.DataRowVersion&quot;></xref> values."
    - id: value
      type: System.Object
      description: "An <xref:System.Object> that is the value of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value supplied in the <code>dbType</code> parameter is an invalid back-end data type."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> class that uses the parameter name, the type of the parameter, the length of the parameter the direction, the precision, the scale, the name of the source column, one of the <xref href=&quot;System.Data.DataRowVersion&quot;></xref> values, a Boolean for source column mapping, the value of the <xref uid=&quot;langword_csharp_SqlParameter&quot; name=&quot;SqlParameter&quot; href=&quot;&quot;></xref>, the name of the database where the schema collection for this XML instance is located, the owning relational schema where the schema collection for this XML instance is located, and the name of the schema collection for this parameter."
  remarks: "The <xref:System.Data.SqlClient.SqlParameter.Size%2A> and <xref:System.Data.SqlClient.SqlParameter.Precision%2A> are inferred from the value of the `dbType` parameter if they are not explicitly set in the `size` and `precision` parameters."
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);
    parameters:
    - id: parameterName
      type: System.String
      description: "The name of the parameter to map."
    - id: dbType
      type: System.Data.SqlDbType
      description: "One of the <xref href=&quot;System.Data.SqlDbType&quot;></xref> values."
    - id: size
      type: System.Int32
      description: "The length of the parameter."
    - id: direction
      type: System.Data.ParameterDirection
      description: "One of the <xref href=&quot;System.Data.ParameterDirection&quot;></xref> values."
    - id: precision
      type: System.Byte
      description: "The total number of digits to the left and right of the decimal point to which <xref:System.Data.SqlClient.SqlParameter.Value*> is resolved."
    - id: scale
      type: System.Byte
      description: "The total number of decimal places to which <xref:System.Data.SqlClient.SqlParameter.Value*> is resolved."
    - id: sourceColumn
      type: System.String
      description: "The name of the source column (<xref:System.Data.SqlClient.SqlParameter.SourceColumn*>) if this <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> is used in a call to <xref:System.Data.Common.DbDataAdapter.Update*>."
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "One of the <xref href=&quot;System.Data.DataRowVersion&quot;></xref> values."
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the source column is nullable; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if it is not."
    - id: value
      type: System.Object
      description: "An <xref:System.Object> that is the value of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>."
    - id: xmlSchemaCollectionDatabase
      type: System.String
      description: "The name of the database where the schema collection for this XML instance is located."
    - id: xmlSchemaCollectionOwningSchema
      type: System.String
      description: "The owning relational schema where the schema collection for this XML instance is located."
    - id: xmlSchemaCollectionName
      type: System.String
      description: "The name of the schema collection for this parameter."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the <xref:System.Globalization.CompareInfo> object that defines how string comparisons should be performed for this parameter."
  syntax:
    content: public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "A <xref:System.Globalization.CompareInfo> object that defines string comparison for this parameter."
  overload: System.Data.SqlClient.SqlParameter.CompareInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.DbType
  id: DbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the <xref href=&quot;System.Data.SqlDbType&quot;></xref> of the parameter."
  remarks: "The <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> and DbType are linked. Therefore, setting the DbType changes the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> to a supporting <xref:System.Data.SqlDbType>.       For a list of the supported data types, see the appropriate <xref:System.Data.SqlDbType> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._41_1.cs)]\n [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "One of the <xref href=&quot;System.Data.SqlDbType&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Direction
  id: Direction
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter."
  remarks: "If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.SqlClient.SqlCommand> does not return a value, the <xref:System.Data.SqlClient.SqlParameter> contains a null value.       `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> cannot be accessed until you close the <xref:System.Data.SqlClient.SqlDataReader>."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [Commands and Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [SQL Server and ADO.NET](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "One of the <xref href=&quot;System.Data.ParameterDirection&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The property was not set to one of the valid <xref href=&quot;System.Data.ParameterDirection&quot;></xref> values."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  id: ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Enforces encryption of a parameter when using [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx). If SQL Server informs the driver that the parameter does not need to be encrypted, the query using the parameter will fail. This property provides additional protection against security attacks that involve a compromised SQL Server providing incorrect encryption metadata to the client, which may lead to data disclosure."
  syntax:
    content: public bool ForceColumnEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the parameter has a force column encryption; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  id: IsNullable
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets a value that indicates whether the parameter accepts null values. IsNullable is not used to validate the parameter’s value and will not prevent sending or receiving a null value when executing a command."
  remarks: "Null values are handled using the <xref:System.DBNull> class."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#2](~/add/codesnippet/visualbasic/p-system.data.sqlclient._27_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#2](~/add/codesnippet/csharp/p-system.data.sqlclient._27_1.cs)]"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if null values are accepted; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  id: LocaleId
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the locale identifier that determines conventions and language for a particular region."
  remarks: "The locale identifies conventions and language for a particular geographical region. The codepage used to encode a specific string (the character set) is based on the locale used by that string or the environment that produced it. This property sets (for input parameters) or gets (for output parameters) the locale to be attached to a string when exchanging data with the server. This property is typically used together with the <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> property.      ```   static void CreateSqlParameterLocaleId(){      SqlParameter parameter = new SqlParameter(&quot;pName&quot;, SqlDbType.VarChar);      parameter.LocaleId = 1033;   // English - United States   }   ```"
  syntax:
    content: public int LocaleId { get; set; }
    return:
      type: System.Int32
      description: "Returns the locale identifier associated with the parameter."
  overload: System.Data.SqlClient.SqlParameter.LocaleId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Offset
  id: Offset
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the offset to the <xref:System.Data.SqlClient.SqlParameter.Value*> property."
  remarks: "The `Offset` property is used for client-side chunking of binary and string data. For example, in order to insert 10MB of text into a column on a server, a user might execute 10 parameterized inserts of 1MB chunks, shifting the value of `Offset` on each iteration by 1MB.       `Offset` specifies the number of bytes for binary types, and the number of characters for strings. The count for strings does not include the terminating character."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#3](~/add/codesnippet/visualbasic/p-system.data.sqlclient._43_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#3](~/add/codesnippet/csharp/p-system.data.sqlclient._43_1.cs)]"
  syntax:
    content: public int Offset { get; set; }
    return:
      type: System.Int32
      description: "The offset to the <xref:System.Data.SqlClient.SqlParameter.Value*>. The default is 0."
  overload: System.Data.SqlClient.SqlParameter.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  id: ParameterName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the name of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>."
  remarks: "The ParameterName is specified in the form @paramname. You must set ParameterName before executing a <xref:System.Data.SqlClient.SqlCommand> that relies on parameters."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>. The default is an empty string."
  overload: System.Data.SqlClient.SqlParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Precision
  id: Precision
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the maximum number of digits used to represent the <xref:System.Data.SqlClient.SqlParameter.Value*> property."
  remarks: "The Precision property is used by parameters that have a <xref:System.Data.SqlDbType> of `Decimal`.       You do not need to specify values for the Precision and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> properties for input parameters, as they can be inferred from the parameter value. `Precision` and `Scale` are required for output parameters and for scenarios where you need to specify complete metadata for a parameter without indicating a value, such as specifying a null value with a specific precision and scale.      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter&quot;s `Value` property.      > [!NOTE] >  Microsoft .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the Precision or <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> parameter values. This can cause truncated data being inserted at the data source. If you are using .NET Framework version 1.0, validate the Precision and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> values before setting the parameter value. When you use .NET Framework version 1.1 or a later version, an exception is thrown if a <xref:System.Decimal> parameter value is set with an invalid Precision. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "The maximum number of digits used to represent the <xref:System.Data.SqlClient.SqlParameter.Value*> property. The default value is 0. This indicates that the data provider sets the precision for <xref:System.Data.SqlClient.SqlParameter.Value*>."
  overload: System.Data.SqlClient.SqlParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Resets the type associated with this <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>."
  remarks: "When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties of the <xref:System.Data.SqlClient.SqlParameter>."
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  id: ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Resets the type associated with this <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>."
  remarks: "When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties of the <xref:System.Data.SqlClient.SqlParameter>."
  syntax:
    content: public void ResetSqlDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Scale
  id: Scale
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the number of decimal places to which <xref:System.Data.SqlClient.SqlParameter.Value*> is resolved."
  remarks: "The Scale property is used by parameters that have a <xref:System.Data.SqlDbType> of `Decimal`.      > [!WARNING] >  Data may be truncated if the Scale property is not explicitly specified and the data on the server does not fit in scale 0 (the default).       You do not need to specify values for the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and Scale properties for input parameters, as they can be inferred from the parameter value. `Precision` and `Scale` are required for output parameters and for scenarios where you need to specify complete metadata for a parameter without indicating a value, such as specifying a null value with a specific precision and scale.      > [!NOTE] >  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter&quot;s `Value` property.      > [!NOTE] >  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> or Scale of <xref:System.Decimal> parameter values. This can cause truncated data to be inserted at the data source. If you are using .NET Framework version 1.0, validate the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter> of <xref:System.Decimal> values before setting the parameter value. Scale values that exceed the <xref:System.Decimal> parameter scale are still truncated."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#4](~/add/codesnippet/visualbasic/p-system.data.sqlclient._60_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#4](~/add/codesnippet/csharp/p-system.data.sqlclient._60_1.cs)]"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "The number of decimal places to which <xref:System.Data.SqlClient.SqlParameter.Value*> is resolved. The default is 0."
  overload: System.Data.SqlClient.SqlParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Size
  id: Size
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the maximum size, in bytes, of the data within the column."
  remarks: "Return values are not affected by this property; return parameters from stored procedures are always fixed-size integers.       For output parameters with a variable length type (nvarchar, for example), the size of the parameter defines the size of the buffer holding the output parameter. The output parameter can be truncated to a size specified with Size. For character types, the size specified with Size is in characters.       The Size property is used for binary and string types. For parameters of type `SqlType.String`, `Size` means length in Unicode characters. For parameters of type `SqlType.Xml`, `Size` is ignored.       For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.       For variable-length data types, Size describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first one hundred characters.       If not explicitly set, the size is inferred from the actual size of the specified parameter value.       If the fractional part of the parameter value is greater than the size, then the value will be truncated to match the size.       For fixed length data types, the value of Size is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.       For information about streaming, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#5](~/add/codesnippet/visualbasic/p-system.data.sqlclient._19_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#5](~/add/codesnippet/csharp/p-system.data.sqlclient._19_1.cs)]"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value."
  overload: System.Data.SqlClient.SqlParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the name of the source column mapped to the <xref href=&quot;System.Data.DataSet&quot;></xref> and used for loading or returning the <xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the SourceColumn name. If <xref:System.Data.SqlClient.SqlParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>. If <xref:System.Data.SqlClient.SqlParameter.Direction%2A> is set to `Output`, the value is taken from the data source. A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> of `InputOutput` is a combination of both.       For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#6](~/add/codesnippet/visualbasic/p-system.data.sqlclient._48_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#6](~/add/codesnippet/csharp/p-system.data.sqlclient._48_1.cs)]"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "The name of the source column mapped to the <xref href=&quot;System.Data.DataSet&quot;></xref>. The default is an empty string."
  overload: System.Data.SqlClient.SqlParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;></xref> to correctly generate Update statements for nullable columns."
  remarks: "SourceColumnNullMapping is used by the <xref:System.Data.SqlClient.SqlCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.SqlClient.SqlCommandBuilder>.       <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.SqlClient.SqlCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter. If the property is `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> generates a WHERE clauses like the following (in this query expression, &quot;FieldName&quot; represents the name of the field):      ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```       If SourceColumnNullMapping for the field is false, <xref:System.Data.SqlClient.SqlCommandBuilder> generates the following WHERE clause:      ```   FieldName = @OriginalFieldName   ```       In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers."
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the source column is nullable; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if it is not."
  overload: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the <xref href=&quot;System.Data.DataRowVersion&quot;></xref> to use when you load <xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "This property is used by the `SqlDataAdapter.UpdateCommand` during an update to determine whether the original or current value is used for a parameter value. This lets primary keys be updated. This property is set to the version of the <xref:System.Data.DataRow> used by the `DataRow.Item` property, or one of the `DataRow.GetChildRows` methods of the <xref:System.Data.DataRow> object."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#7](~/add/codesnippet/visualbasic/p-system.data.sqlclient._64_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#7](~/add/codesnippet/csharp/p-system.data.sqlclient._64_1.cs)]"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "One of the <xref href=&quot;System.Data.DataRowVersion&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.SourceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  id: SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the <xref href=&quot;System.Data.SqlDbType&quot;></xref> of the parameter."
  remarks: "The SqlDbType and <xref:System.Data.SqlClient.SqlParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> changes the SqlDbType to a supporting <xref:System.Data.SqlDbType>.       For a list of the supported data types, see the appropriate <xref:System.Data.SqlDbType> member. For more information, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md).       For information about streaming, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlDbType SqlDbType { get; set; }
    return:
      type: System.Data.SqlDbType
      description: "One of the <xref href=&quot;System.Data.SqlDbType&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlParameter.SqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  id: SqlValue
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the value of the parameter as an SQL type."
  remarks: "For input parameters, the value is bound to the <xref:System.Data.SqlClient.SqlCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.SqlClient.SqlCommand> and after the <xref:System.Data.SqlClient.SqlDataReader> is closed.       This property can be set to null or <xref:System.DBNull.Value>. Use <xref:System.DBNull.Value> to send a NULL value as the value of the parameter. Use null or do not set SqlValue to use the default value for the parameter.       If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.       Both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties can be inferred by setting the <xref:System.Data.SqlClient.SqlParameter.Value%2A>.       The <xref:System.Data.SqlClient.SqlParameter.Value%2A> property is overwritten by `SqlDataAdapter.UpdateCommand`.       Use the <xref:System.Data.SqlClient.SqlParameter.Value%2A> property to return parameter values as common language runtime (CLR) types.       For information about streaming, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SqlValue { get; set; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that is the value of the parameter, using SQL types. The default value is null."
  overload: System.Data.SqlClient.SqlParameter.SqlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "For a description of this member, see <xref:System.ICloneable.Clone*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlClient.SqlParameter> instance is cast to an <xref:System.ICloneable> interface."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A new <xref:System.Object> that is a copy of this instance."
  overload: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ToString
  id: ToString
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets a string that contains the <xref:System.Data.SqlClient.SqlParameter.ParameterName*>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that contains the <xref:System.Data.SqlClient.SqlParameter.ParameterName*>."
  overload: System.Data.SqlClient.SqlParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.TypeName
  id: TypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the type name for a table-valued parameter."
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "The type name of the specified table-valued parameter."
  overload: System.Data.SqlClient.SqlParameter.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  id: UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets a <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> that represents a user-defined type as a parameter."
  remarks: "For a sample demonstrating UdtTypeName, see [Retrieving UDT Data](http://msdn.microsoft.com/library/ms131080.aspx)."
  syntax:
    content: public string UdtTypeName { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> that represents the fully qualified name of a user-defined type in the database."
  overload: System.Data.SqlClient.SqlParameter.UdtTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Value
  id: Value
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets or sets the value of the parameter."
  remarks: "For input parameters, the value is bound to the <xref:System.Data.SqlClient.SqlCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.SqlClient.SqlCommand> and after the <xref:System.Data.SqlClient.SqlDataReader> is closed.       This property can be set to null or <xref:System.DBNull.Value>. Use <xref:System.DBNull.Value> to send a NULL value as the value of the parameter. Use null or do not set Value to use the default value for the parameter.       An exception is thrown if non-Unicode XML data is passed as a string.       If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.       Both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties can be inferred by setting the Value.       The Value property is overwritten by `SqlDataAdapter.UpdateCommand`.       For information about streaming, see [SqlClient Streaming Support](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#8](~/add/codesnippet/visualbasic/p-system.data.sqlclient._17_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#8](~/add/codesnippet/csharp/p-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that is the value of the parameter. The default value is null."
  overload: System.Data.SqlClient.SqlParameter.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  id: XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the name of the database where the schema collection for this XML instance is located."
  remarks: "This value is null (`Nothing` in Microsoft Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> are also null."
  syntax:
    content: public string XmlSchemaCollectionDatabase { get; set; }
    return:
      type: System.String
      description: "The name of the database where the schema collection for this XML instance is located."
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  id: XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the name of the schema collection for this XML instance."
  remarks: "This value is null (`Nothing` in Microsoft Visual Basic) if there is no associated schema collection. If the value is null, then <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> are also null."
  syntax:
    content: public string XmlSchemaCollectionName { get; set; }
    return:
      type: System.String
      description: "The name of the schema collection for this XML instance."
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  id: XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "The owning relational schema where the schema collection for this XML instance is located."
  remarks: "This value is null (`Nothing` in Microsoft Visual Basic) if the collection is defined within the current database. It is also null if there is no schema collection, in which case <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> are also null."
  syntax:
    content: public string XmlSchemaCollectionOwningSchema { get; set; }
    return:
      type: System.String
      description: "The owning relational schema for this XML instance."
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlParameter.#ctor
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlDbType
  parent: System.Data
  isExternal: false
  name: SqlDbType
  nameWithType: SqlDbType
  fullName: System.Data.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Data.SqlClient.SqlParameter.DbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
- uid: System.Data.SqlClient.SqlParameter.Scale
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlParameter.ToString
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
- uid: System.Data.SqlClient.SqlParameter.TypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
- uid: System.Data.SqlClient.SqlParameter.#ctor*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter.SqlParameter
- uid: System.Data.SqlClient.SqlParameter.CompareInfo*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
- uid: System.Data.SqlClient.SqlParameter.DbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType
  nameWithType: SqlParameter.ResetDbType
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType
  nameWithType: SqlParameter.ResetSqlDbType
- uid: System.Data.SqlClient.SqlParameter.Scale*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlParameter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlParameter.ToString*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString
  nameWithType: SqlParameter.ToString
- uid: System.Data.SqlClient.SqlParameter.TypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
