### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.EncoderParameter
  id: EncoderParameter
  children:
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.Dispose
  - System.Drawing.Imaging.EncoderParameter.Encoder
  - System.Drawing.Imaging.EncoderParameter.Finalize
  - System.Drawing.Imaging.EncoderParameter.NumberOfValues
  - System.Drawing.Imaging.EncoderParameter.Type
  - System.Drawing.Imaging.EncoderParameter.ValueType
  langs:
  - csharp
  name: EncoderParameter
  nameWithType: EncoderParameter
  fullName: System.Drawing.Imaging.EncoderParameter
  type: Class
  summary: "Utilizado para transferir um valor ou uma matriz de valores, para um codificador de imagem."
  remarks: "Também pode utilizar um objeto de EncoderParameter receba uma lista de possíveis valores suportados por um parâmetro de específico de um codificador de imagem específica."
  example:
  - "The following code example demonstrates how to create a EncoderParameter using the <xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A> constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/t-system.drawing.imaging_0_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/t-system.drawing.imaging_0_2.cs)]"
  syntax:
    content: 'public sealed class EncoderParameter : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e o número inteiro sem sinal de 8 bits com um. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Byte
      description: "Um 8 bits com número inteiro não assinado que especifica o valor armazenado no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e uma matriz de números inteiros de 8 bits não assinados. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para o número de elementos na matriz."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Byte[]
      description: "Uma matriz de números inteiros sem sinal de 8 bits com que especifica os valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe especificada com <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e um número inteiro de 16 bits. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Int16
      description: "Um número inteiro de 16 bits que especifica o valor armazenado no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. Tem de ser não negativa."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e uma matriz de números inteiros de 16 bits. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para o número de elementos na matriz."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Int16[]
      description: "Uma matriz de números inteiros de 16 bits que especifica os valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. Os números inteiros na matriz tem de ser não negativa."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e um número inteiro de 64 bits. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> (32 bits) e define o <> </> *> propriedade para 1."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Drawing.Imaging.EncoderParameter> using the EncoderParameter constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_2.cs)]"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Int64
      description: "Um número inteiro de 64 bits que especifica o valor armazenado no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. Tem de ser não negativa. Este parâmetro é convertido para um número inteiro de 32 bits antes de esta está armazenada no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e uma matriz de números inteiros de 64 bits. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> (32 bits) e define o <> </> *> propriedade para o número de elementos na matriz."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Int64[]
      description: "Uma matriz de números inteiros de 64 bits que especifica os valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. Os números inteiros na matriz tem de ser não negativa. Os números inteiros de 64 bits são convertidos em números inteiros de 32 bits antes que estão armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.String)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e uma cadeia de carateres. A cadeia é convertida numa cadeia de ASCII terminada nula antes de esta está armazenada no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para o comprimento da cadeia ASCII, incluindo o terminador NULL."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.String
      description: "A <xref:System.String>que especifica o valor armazenado no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto.</xref:System.String>"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e um valor de 8 bits. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> ou <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Byte
      description: "Um byte que especifica o valor armazenado no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
    - id: undefined
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a <> </> *> propriedade está definida como <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>; caso contrário, o <> </> *> propriedade está definida como <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e uma matriz de bytes. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> ou <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para o número de elementos na matriz."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: value
      type: System.Byte[]
      description: "Uma matriz de bytes que especifica os valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
    - id: undefined
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a <> </> *> propriedade está definida como <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>; caso contrário, o <> </> *> propriedade está definida como <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e um par de números inteiros de 32 bits. O par de números inteiros representa uma fração, o número de inteiro primeiro a ser o numerator e o segundo número inteiro que está a ser o denominador. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: numerator
      type: System.Int32
      description: "Um número inteiro 32 bits que representa o numerator de fração. Tem de ser não negativa."
    - id: denominator
      type: System.Int32
      description: "Um número inteiro 32 bits que representa o denominador de fração. Tem de ser não negativa."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e duas matrizes de números inteiros de 32 bits. Duas matrizes representam uma matriz de frações. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para o número de elementos no <code> numerator </code> matriz, o que tem de ser igual ao número de elementos no <code> denominator </code> matriz."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: numerator
      type: System.Int32[]
      description: "Uma matriz de números inteiros de 32 bits que especifica os numerators das frações. Os números inteiros na matriz tem de ser não negativa."
    - id: denominator
      type: System.Int32[]
      description: "Uma matriz de números inteiros de 32 bits que especifica os denominadores das frações. Os números inteiros na matriz tem de ser não negativa. O denominador um índice fornecido se encontra emparelhado com numerator do mesmo índice."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e um par de números inteiros de 64 bits. O par de números inteiros representa um intervalo de números inteiros, o número de inteiro primeiro a ser o menor número no intervalo e o segundo número inteiro que está a ser o maior número no intervalo. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: rangebegin
      type: System.Int64
      description: "Um número inteiro 64 bits que representa o número mais pequeno um intervalo de números inteiros. Tem de ser não negativa. Este parâmetro é convertido para um número inteiro de 32 bits antes de esta está armazenada no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
    - id: rangeend
      type: System.Int64
      description: "Um número inteiro 64 bits que representa o número maior um intervalo de números inteiros. Tem de ser não negativa. Este parâmetro é convertido para um número inteiro de 32 bits antes de esta está armazenada no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e duas matrizes de números inteiros de 64 bits. Duas matrizes representam os intervalos de número inteiro de matriz. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para o número de elementos no <code> rangebegin </code> matriz, o que tem de ser igual ao número de elementos no <code> rangeend </code> matriz."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: rangebegin
      type: System.Int64[]
      description: "Uma matriz de números inteiros de 64 bits que especifica os valores mínimo para os intervalos de número inteiro. Os números inteiros na matriz tem de ser não negativa. Os números inteiros de 64 bits são convertidos em números inteiros de 32 bits antes que estão armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
    - id: rangeend
      type: System.Int64[]
      description: "Uma matriz de números inteiros de 64 bits que especifica os valores máximos para os intervalos de número inteiro. Os números inteiros na matriz tem de ser não negativa. Os números inteiros de 64 bits são convertidos em números inteiros de 32 bits antes que estão armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> objeto. Um valor máximo de um índice fornecido se encontra emparelhado com o valor mínimo do mesmo índice."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto, o número de valores, o tipo de dados de valores e um ponteiro para os valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: numberValues
      type: System.Int32
      description: "Um número inteiro que especifica o número de valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. O <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>propriedade está definida para este valor.</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>"
    - id: type
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "Um membro do <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> enumeração que especifica o tipo de dados de valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. O <xref:System.Type>e <xref:System.Drawing.Imaging.EncoderParameter.ValueType*>propriedades forem definidas para este valor.</xref:System.Drawing.Imaging.EncoderParameter.ValueType*> </xref:System.Type>"
    - id: value
      type: System.IntPtr
      description: "Um ponteiro para uma matriz de valores do tipo especificado pelo `Type` parâmetro."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e três números inteiros que especifique o número de valores, o tipo de dados de valores e um ponteiro para os valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: NumberOfValues
      type: System.Int32
      description: "Um número inteiro que especifica o número de valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. O <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>propriedade está definida para este valor.</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>"
    - id: Type
      type: System.Int32
      description: "Um membro do <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> enumeração que especifica o tipo de dados de valores armazenados no <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. O <xref:System.Type>e <xref:System.Drawing.Imaging.EncoderParameter.ValueType*>propriedades forem definidas para este valor.</xref:System.Drawing.Imaging.EncoderParameter.ValueType*> </xref:System.Type>"
    - id: Value
      type: System.Int32
      description: "Um ponteiro para uma matriz de valores do tipo especificado pelo `Type` parâmetro."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tipo não é um <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>."
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e quatro, números inteiros de 32 bits. Os números quatro inteiros representam um intervalo de frações. Os primeiro dois números de inteiros representam a fração menor no intervalo e os restantes dois números inteiros representam a fração maior no intervalo. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: numerator1
      type: System.Int32
      description: "Um número inteiro 32 bits que representa o numerator da fração menor no intervalo. Tem de ser não negativa."
    - id: demoninator1
      type: System.Int32
      description: "Um número inteiro 32 bits que representa o denominador da fração menor no intervalo. Tem de ser não negativa."
    - id: numerator2
      type: System.Int32
      description: "Um número inteiro 32 bits que representa o denominador da fração menor no intervalo. Tem de ser não negativa."
    - id: demoninator2
      type: System.Int32
      description: "Um número inteiro 32 bits que representa o numerator da fração maior no intervalo. Tem de ser não negativa."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto e quatro matrizes de números inteiros de 32 bits. As matrizes de quatro representam uma intervalos razoável de matriz. Um intervalo razoável é o conjunto de todos os frações de um valor mínimo fracional através de um valor de fracional máximo. Define o <> </> *> propriedade <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>e define o <> </> *> propriedade para o número de elementos no <code> numerator1 </code> matriz, o que tem de ser igual ao número de elementos na outros três matrizes."
  remarks: "O intervalo de ith é composta por todos os números fracional de numerator1 [i] / denominator1 [i] através de numerator2 [i] / denominator2 [i]."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o identificador exclusivo global da categoria de parâmetro."
    - id: numerator1
      type: System.Int32[]
      description: "Uma matriz de números inteiros de 32 bits que especifica os numerators dos valores mínimo para os intervalos. Os números inteiros na matriz tem de ser não negativa."
    - id: denominator1
      type: System.Int32[]
      description: "Uma matriz de números inteiros de 32 bits que especifica os denominadores dos valores mínimo para os intervalos. Os números inteiros na matriz tem de ser não negativa."
    - id: numerator2
      type: System.Int32[]
      description: "Uma matriz de números inteiros de 32 bits que especifica os numerators dos valores máximos para os intervalos. Os números inteiros na matriz tem de ser não negativa."
    - id: denominator2
      type: System.Int32[]
      description: "Uma matriz de números inteiros de 32 bits que especifica os denominadores dos valores máximos para os intervalos. Os números inteiros na matriz tem de ser não negativa."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  id: Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Versões de todos os recursos utilizados por este <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  remarks: "Chamar Dispose permite que os recursos utilizados por este <xref:System.Drawing.Imaging.EncoderParameter>o objeto a possível reatribuir porque para outros fins.</xref:System.Drawing.Imaging.EncoderParameter>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  id: Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Obtém ou define o <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto associado a este <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto. O <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objeto encapsula um identificador exclusivo global (GUID) que especifica a categoria (por exemplo <xref href=&quot;System.Drawing.Imaging.Encoder.Quality&quot;> </xref>, <xref href=&quot;System.Drawing.Imaging.Encoder.ColorDepth&quot;> </xref>, ou <xref href=&quot;System.Drawing.Imaging.Encoder.Compression&quot;> </xref>) do parâmetro armazenado deste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  syntax:
    content: public System.Drawing.Imaging.Encoder Encoder { get; set; }
    return:
      type: System.Drawing.Imaging.Encoder
      description: "Um <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> objecto que encapsula o GUID que especifica a categoria do parâmetro armazenado deste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.Encoder*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  id: Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Permite que um <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> o objeto a tentativa de libertar recursos e efetuar outras operações de limpeza antes do <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto é recuperado através da recolha de lixo."
  syntax:
    content: ~EncoderParameter ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  id: NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Obtém o número de elementos na matriz de valores armazenados neste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  syntax:
    content: public int NumberOfValues { get; }
    return:
      type: System.Int32
      description: "Um número inteiro que indica o número de elementos na matriz de valores armazenados neste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Type
  id: Type
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Obtém o tipo de dados de valores armazenados neste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType Type { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "Um membro do <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> enumeração que indica o tipo de dados de valores armazenados neste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  id: ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Obtém o tipo de dados de valores armazenados neste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "Um membro do <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> enumeração que indica o tipo de dados de valores armazenados neste <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> objeto."
  overload: System.Drawing.Imaging.EncoderParameter.ValueType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
- uid: System.Drawing.Imaging.Encoder
  parent: System.Drawing.Imaging
  isExternal: false
  name: Encoder
  nameWithType: Encoder
  fullName: System.Drawing.Imaging.Encoder
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
- uid: System.Int16[]
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16[]
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: Int16[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
- uid: System.Drawing.Imaging.EncoderParameterValueType
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameterValueType
  nameWithType: EncoderParameterValueType
  fullName: System.Drawing.Imaging.EncoderParameterValueType
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
- uid: System.Drawing.Imaging.EncoderParameter.#ctor*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter
  nameWithType: EncoderParameter.EncoderParameter
- uid: System.Drawing.Imaging.EncoderParameter.Dispose*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose
  nameWithType: EncoderParameter.Dispose
- uid: System.Drawing.Imaging.EncoderParameter.Encoder*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize
  nameWithType: EncoderParameter.Finalize
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
