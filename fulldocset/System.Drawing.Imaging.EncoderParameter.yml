### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.EncoderParameter
  id: EncoderParameter
  children:
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.Dispose
  - System.Drawing.Imaging.EncoderParameter.Encoder
  - System.Drawing.Imaging.EncoderParameter.Finalize
  - System.Drawing.Imaging.EncoderParameter.NumberOfValues
  - System.Drawing.Imaging.EncoderParameter.Type
  - System.Drawing.Imaging.EncoderParameter.ValueType
  langs:
  - csharp
  name: EncoderParameter
  nameWithType: EncoderParameter
  fullName: System.Drawing.Imaging.EncoderParameter
  type: Class
  summary: "Used to pass a value, or an array of values, to an image encoder."
  remarks: "You can also use an EncoderParameter object to receive a list of possible values supported by a particular parameter of a particular image encoder."
  example:
  - "The following code example demonstrates how to create a EncoderParameter using the <xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A> constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/t-system.drawing.imaging_0_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/t-system.drawing.imaging_0_2.cs)]"
  syntax:
    content: 'public sealed class EncoderParameter : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and one unsigned 8-bit integer. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Byte
      description: "An 8-bit unsigned integer that specifies the value stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and an array of unsigned 8-bit integers. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the number of elements in the array."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Byte[]
      description: "An array of 8-bit unsigned integers that specifies the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and one, 16-bit integer. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Int16
      description: "A 16-bit integer that specifies the value stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. Must be nonnegative."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and an array of 16-bit integers. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the number of elements in the array."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Int16[]
      description: "An array of 16-bit integers that specifies the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. The integers in the array must be nonnegative."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and one 64-bit integer. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> (32 bits), and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to 1."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Drawing.Imaging.EncoderParameter> using the EncoderParameter constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_2.cs)]"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Int64
      description: "A 64-bit integer that specifies the value stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and an array of 64-bit integers. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> (32-bit), and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the number of elements in the array."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Int64[]
      description: "An array of 64-bit integers that specifies the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.String)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and a character string. The string is converted to a null-terminated ASCII string before it is stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the length of the ASCII string including the NULL terminator."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.String
      description: "A <xref:System.String> that specifies the value stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and one 8-bit value. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> or <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Byte
      description: "A byte that specifies the value stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
    - id: undefined
      type: System.Boolean
      description: "If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property is set to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>; otherwise, the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property is set to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and an array of bytes. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> or <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the number of elements in the array."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: value
      type: System.Byte[]
      description: "An array of bytes that specifies the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
    - id: undefined
      type: System.Boolean
      description: "If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property is set to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>; otherwise, the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property is set to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and a pair of 32-bit integers. The pair of integers represents a fraction, the first integer being the numerator, and the second integer being the denominator. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: numerator
      type: System.Int32
      description: "A 32-bit integer that represents the numerator of a fraction. Must be nonnegative."
    - id: denominator
      type: System.Int32
      description: "A 32-bit integer that represents the denominator of a fraction. Must be nonnegative."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and two arrays of 32-bit integers. The two arrays represent an array of fractions. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the number of elements in the <code>numerator</code> array, which must be the same as the number of elements in the <code>denominator</code> array."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: numerator
      type: System.Int32[]
      description: "An array of 32-bit integers that specifies the numerators of the fractions. The integers in the array must be nonnegative."
    - id: denominator
      type: System.Int32[]
      description: "An array of 32-bit integers that specifies the denominators of the fractions. The integers in the array must be nonnegative. A denominator of a given index is paired with the numerator of the same index."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and a pair of 64-bit integers. The pair of integers represents a range of integers, the first integer being the smallest number in the range, and the second integer being the largest number in the range. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: rangebegin
      type: System.Int64
      description: "A 64-bit integer that represents the smallest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
    - id: rangeend
      type: System.Int64
      description: "A 64-bit integer that represents the largest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and two arrays of 64-bit integers. The two arrays represent an array integer ranges. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the number of elements in the <code>rangebegin</code> array, which must be the same as the number of elements in the <code>rangeend</code> array."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: rangebegin
      type: System.Int64[]
      description: "An array of 64-bit integers that specifies the minimum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
    - id: rangeend
      type: System.Int64[]
      description: "An array of 64-bit integers that specifies the maximum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;></xref> object. A maximum value of a given index is paired with the minimum value of the same index."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object, number of values, data type of the values, and a pointer to the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: numberValues
      type: System.Int32
      description: "An integer that specifies the number of values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. The <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property is set to this value."
    - id: type
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "A member of the <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> enumeration that specifies the data type of the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. The <xref:System.Type> and <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> properties are set to this value."
    - id: value
      type: System.IntPtr
      description: "A pointer to an array of values of the type specified by the `Type` parameter."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and three integers that specify the number of values, the data type of the values, and a pointer to the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: NumberOfValues
      type: System.Int32
      description: "An integer that specifies the number of values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. The <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property is set to this value."
    - id: Type
      type: System.Int32
      description: "A member of the <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> enumeration that specifies the data type of the values stored in the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. The <xref:System.Type> and <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> properties are set to this value."
    - id: Value
      type: System.Int32
      description: "A pointer to an array of values of the type specified by the `Type` parameter."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Type is not a valid <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and four, 32-bit integers. The four integers represent a range of fractions. The first two integers represent the smallest fraction in the range, and the remaining two integers represent the largest fraction in the range. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to 1."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: numerator1
      type: System.Int32
      description: "A 32-bit integer that represents the numerator of the smallest fraction in the range. Must be nonnegative."
    - id: demoninator1
      type: System.Int32
      description: "A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative."
    - id: numerator2
      type: System.Int32
      description: "A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative."
    - id: demoninator2
      type: System.Int32
      description: "A 32-bit integer that represents the numerator of the largest fraction in the range. Must be nonnegative."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> class with the specified <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object and four arrays of 32-bit integers. The four arrays represent an array rational ranges. A rational range is the set of all fractions from a minimum fractional value through a maximum fractional value. Sets the <xref:System.Drawing.Imaging.EncoderParameter.ValueType*> property to <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>, and sets the <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*> property to the number of elements in the <code>numerator1</code> array, which must be the same as the number of elements in the other three arrays."
  remarks: "The ith range consists of all fractional numbers from numerator1[i]/denominator1[i] through numerator2[i]/denominator2[i]."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the globally unique identifier of the parameter category."
    - id: numerator1
      type: System.Int32[]
      description: "An array of 32-bit integers that specifies the numerators of the minimum values for the ranges. The integers in the array must be nonnegative."
    - id: denominator1
      type: System.Int32[]
      description: "An array of 32-bit integers that specifies the denominators of the minimum values for the ranges. The integers in the array must be nonnegative."
    - id: numerator2
      type: System.Int32[]
      description: "An array of 32-bit integers that specifies the numerators of the maximum values for the ranges. The integers in the array must be nonnegative."
    - id: denominator2
      type: System.Int32[]
      description: "An array of 32-bit integers that specifies the denominators of the maximum values for the ranges. The integers in the array must be nonnegative."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  id: Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Releases all resources used by this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  remarks: "Calling Dispose allows the resources used by this <xref:System.Drawing.Imaging.EncoderParameter> object to be reallocated for other purposes."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  id: Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets the <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object associated with this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object. The <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object encapsulates the globally unique identifier (GUID) that specifies the category (for example <xref href=&quot;System.Drawing.Imaging.Encoder.Quality&quot;></xref>, <xref href=&quot;System.Drawing.Imaging.Encoder.ColorDepth&quot;></xref>, or <xref href=&quot;System.Drawing.Imaging.Encoder.Compression&quot;></xref>) of the parameter stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  syntax:
    content: public System.Drawing.Imaging.Encoder Encoder { get; set; }
    return:
      type: System.Drawing.Imaging.Encoder
      description: "An <xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref> object that encapsulates the GUID that specifies the category of the parameter stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.Encoder*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  id: Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Allows an <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object to attempt to free resources and perform other cleanup operations before the <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object is reclaimed by garbage collection."
  syntax:
    content: ~EncoderParameter ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  id: NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets the number of elements in the array of values stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  syntax:
    content: public int NumberOfValues { get; }
    return:
      type: System.Int32
      description: "An integer that indicates the number of elements in the array of values stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Type
  id: Type
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets the data type of the values stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType Type { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "A member of the <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> enumeration that indicates the data type of the values stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  id: ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets the data type of the values stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "A member of the <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref> enumeration that indicates the data type of the values stored in this <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref> object."
  overload: System.Drawing.Imaging.EncoderParameter.ValueType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
- uid: System.Drawing.Imaging.Encoder
  parent: System.Drawing.Imaging
  isExternal: false
  name: Encoder
  nameWithType: Encoder
  fullName: System.Drawing.Imaging.Encoder
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
- uid: System.Int16[]
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16[]
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: Int16[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
- uid: System.Drawing.Imaging.EncoderParameterValueType
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameterValueType
  nameWithType: EncoderParameterValueType
  fullName: System.Drawing.Imaging.EncoderParameterValueType
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
- uid: System.Drawing.Imaging.EncoderParameter.#ctor*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter
  nameWithType: EncoderParameter.EncoderParameter
- uid: System.Drawing.Imaging.EncoderParameter.Dispose*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose
  nameWithType: EncoderParameter.Dispose
- uid: System.Drawing.Imaging.EncoderParameter.Encoder*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize
  nameWithType: EncoderParameter.Finalize
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
