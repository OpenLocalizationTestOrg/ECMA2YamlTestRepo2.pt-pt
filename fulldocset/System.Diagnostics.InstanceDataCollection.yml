### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.InstanceDataCollection
  id: InstanceDataCollection
  children:
  - System.Diagnostics.InstanceDataCollection.#ctor(System.String)
  - System.Diagnostics.InstanceDataCollection.Contains(System.String)
  - System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)
  - System.Diagnostics.InstanceDataCollection.CounterName
  - System.Diagnostics.InstanceDataCollection.Item(System.String)
  - System.Diagnostics.InstanceDataCollection.Keys
  - System.Diagnostics.InstanceDataCollection.Values
  langs:
  - csharp
  name: InstanceDataCollection
  nameWithType: InstanceDataCollection
  fullName: System.Diagnostics.InstanceDataCollection
  type: Class
  summary: "Fornece uma coleção com tipo seguro de <xref href=&quot;System.Diagnostics.InstanceData&quot;> </xref> objetos."
  remarks: "A classe de InstanceDataCollection representa uma coleção que contém todos os dados de instância para um contador. Esta coleção está contida no <xref:System.Diagnostics.InstanceDataCollectionCollection>ao utilizar o <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>método.</xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> </xref:System.Diagnostics.InstanceDataCollectionCollection>"
  example:
  - "The following code example displays the instance data for a particular <xref:System.Diagnostics.PerformanceCounterCategory> on the local computer. It first displays a numbered list of <xref:System.Diagnostics.PerformanceCounterCategory> names. After the user enters the number of one of the categories, the example gets the <xref:System.Diagnostics.InstanceDataCollectionCollection> for that <xref:System.Diagnostics.PerformanceCounterCategory>. It then converts the collection returned by <xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A> to an array of InstanceDataCollection objects. The example also displays the instance data associated with each <xref:System.Diagnostics.InstanceData> of each InstanceDataCollection.  \n  \n [!code-vb[System.Diagnostics.InstanceData.KeysValues#1](~/add/codesnippet/visualbasic/t-system.diagnostics.ins_2_1.vb)]\n [!code-cs[System.Diagnostics.InstanceData.KeysValues#1](~/add/codesnippet/csharp/t-system.diagnostics.ins_2_1.cs)]"
  syntax:
    content: 'public class InstanceDataCollection : System.Collections.DictionaryBase'
  inheritance:
  - System.Object
  - System.Collections.DictionaryBase
  implements: []
  inheritedMembers:
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Diagnostics.InstanceDataCollection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.InstanceDataCollection
  langs:
  - csharp
  name: InstanceDataCollection(String)
  nameWithType: InstanceDataCollection.InstanceDataCollection(String)
  fullName: System.Diagnostics.InstanceDataCollection.InstanceDataCollection(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.InstanceDataCollection&quot;> </xref> classe, utilizando o contador de desempenho especificado (que define uma instância de desempenho)."
  syntax:
    content: public InstanceDataCollection (string counterName);
    parameters:
    - id: counterName
      type: System.String
      description: "O nome do contador que descreve muitas vezes a quantidade que está a ser contada."
  overload: System.Diagnostics.InstanceDataCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>counterName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.InstanceDataCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Diagnostics.InstanceDataCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: InstanceDataCollection.Contains(String)
  fullName: System.Diagnostics.InstanceDataCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determina se uma instância de desempenho com um nome especificado (identificado por uma do indexada <xref href=&quot;System.Diagnostics.InstanceData&quot;> </xref> objetos) existe na coleção."
  remarks: "O `instanceName` parâmetro é sensível."
  example:
  - "The following code example accepts a <xref:System.Diagnostics.PerformanceCounter> category name, counter name, and instance name from the command line. It gets the <xref:System.Diagnostics.InstanceDataCollectionCollection> for the category, which is a collection of <xref:System.Diagnostics.InstanceDataCollection> objects. From that it gets the particular <xref:System.Diagnostics.InstanceDataCollection> for the specified counter. It then uses the Contains method to determine if the specified instance exists, using the default single-instance name if none is entered.  \n  \n [!code-cs[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/add/codesnippet/csharp/m-system.diagnostics.ins_0_1.cs)]\n [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/add/codesnippet/visualbasic/m-system.diagnostics.ins_0_1.vb)]"
  syntax:
    content: public bool Contains (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "O nome da instância para localizar nesta coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instância existe na colecção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.InstanceDataCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>instanceName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)
  id: CopyTo(System.Diagnostics.InstanceData[],System.Int32)
  parent: System.Diagnostics.InstanceDataCollection
  langs:
  - csharp
  name: CopyTo(InstanceData[],Int32)
  nameWithType: InstanceDataCollection.CopyTo(InstanceData[],Int32)
  fullName: System.Diagnostics.InstanceDataCollection.CopyTo(InstanceData[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copia os itens na coleção para a matriz unidimensional especificada no índice especificado."
  remarks: ''
  example:
  - "The following code example uses the CopyTo method to convert an <xref:System.Diagnostics.InstanceDataCollection> into an array of <xref:System.Diagnostics.InstanceData> objects. The values of the <xref:System.Diagnostics.InstanceData.InstanceName%2A> and <xref:System.Diagnostics.InstanceData.Sample%2A> properties of each element of the array are passed to a function for further processing.  \n  \n [!code-cs[System.Diagnostics.InstanceData.CopyTo#4](~/add/codesnippet/csharp/8ac8b246-28a0-4ae2-9351-_1.cs)]\n [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/add/codesnippet/visualbasic/8ac8b246-28a0-4ae2-9351-_1.vb)]"
  syntax:
    content: public void CopyTo (System.Diagnostics.InstanceData[] instances, int index);
    parameters:
    - id: instances
      type: System.Diagnostics.InstanceData[]
      description: "O unidimensional <xref:System.Array>que é o destino dos valores copiados da coleção.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O valor de índice baseado em zero no qual pretende adicionar novas instâncias."
  overload: System.Diagnostics.InstanceDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.InstanceDataCollection.CounterName
  id: CounterName
  parent: System.Diagnostics.InstanceDataCollection
  langs:
  - csharp
  name: CounterName
  nameWithType: InstanceDataCollection.CounterName
  fullName: System.Diagnostics.InstanceDataCollection.CounterName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o nome do contador de desempenho cujos dados de instância que pretende obter."
  remarks: ''
  example:
  - "The following code example displays the CounterName property of an <xref:System.Diagnostics.InstanceDataCollection>.  \n  \n [!code-cs[System.Diagnostics.InstanceData.CopyTo#4](~/add/codesnippet/csharp/p-system.diagnostics.ins_7_1.cs)]\n [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/add/codesnippet/visualbasic/p-system.diagnostics.ins_7_1.vb)]"
  syntax:
    content: public string CounterName { get; }
    return:
      type: System.String
      description: "O nome do contador de desempenho."
  overload: System.Diagnostics.InstanceDataCollection.CounterName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.InstanceDataCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Diagnostics.InstanceDataCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: InstanceDataCollection.Item(String)
  fullName: System.Diagnostics.InstanceDataCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém os dados de instância associados este contador. Normalmente, este é um conjunto de valores de contador em bruto."
  remarks: "O `instanceName` parâmetro é sensível."
  example:
  - "The following code example accepts a <xref:System.Diagnostics.PerformanceCounter> category name, counter name, and instance name from the command line. It gets the <xref:System.Diagnostics.InstanceDataCollectionCollection> for the category, which is a collection of <xref:System.Diagnostics.InstanceDataCollection> objects. From that it gets the particular <xref:System.Diagnostics.InstanceDataCollection> for the specified counter. Then, if the instance exists, the example uses the Item property (referenced as an indexer) to obtain the associated <xref:System.Diagnostics.InstanceData> object.  \n  \n [!code-cs[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/add/codesnippet/csharp/p-system.diagnostics.ins_5_1.cs)]\n [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/add/codesnippet/visualbasic/p-system.diagnostics.ins_5_1.vb)]"
  syntax:
    content: public System.Diagnostics.InstanceData this[string instanceName] { get; }
    parameters:
    - id: instanceName
      type: System.String
      description: "O nome de instância de categoria do contador de desempenho ou uma cadeia vazia (&quot;&quot;) se a categoria contiver uma única instância."
    return:
      type: System.Diagnostics.InstanceData
      description: "Um <xref href=&quot;System.Diagnostics.InstanceData&quot;> </xref> item, através do qual o <xref href=&quot;System.Diagnostics.InstanceDataCollection&quot;> </xref> objeto está indexado."
  overload: System.Diagnostics.InstanceDataCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>instanceName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.InstanceDataCollection.Keys
  id: Keys
  parent: System.Diagnostics.InstanceDataCollection
  langs:
  - csharp
  name: Keys
  nameWithType: InstanceDataCollection.Keys
  fullName: System.Diagnostics.InstanceDataCollection.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém os objeto e contador as chaves de registo para os objetos associados estes dados de instância."
  remarks: "Cada componente de software cria as chaves de objetos e contadores quando este é instalado e escreve dados do contador enquanto está a executar. Pode aceder a estes dados tal como acederia a quaisquer outros dados de registo. No entanto, apesar de utilizar o registo a recolher dados de desempenho, os dados não são armazenados na base de dados de registo. Em vez disso, o sistema recolhe os dados de gestores de objeto sistema adequado."
  example:
  - "The following code example uses the Keys property of an <xref:System.Diagnostics.InstanceDataCollection> to return a collection of instance names, which it converts to an array of <xref:System.String>. It generates an array of <xref:System.Diagnostics.InstanceData> objects using the <xref:System.Diagnostics.InstanceDataCollection.Values%2A> property. For each element in the array of instance names, it displays the name and calls a function to process the associated <xref:System.Diagnostics.InstanceData> object.  \n  \n [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/add/codesnippet/visualbasic/p-system.diagnostics.ins_2_1.vb)]\n [!code-cs[System.Diagnostics.InstanceData.KeysValues#3](~/add/codesnippet/csharp/p-system.diagnostics.ins_2_1.cs)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que representa um conjunto de chaves de registo específicos do objeto.</xref:System.Collections.ICollection>"
  overload: System.Diagnostics.InstanceDataCollection.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.InstanceDataCollection.Values
  id: Values
  parent: System.Diagnostics.InstanceDataCollection
  langs:
  - csharp
  name: Values
  nameWithType: InstanceDataCollection.Values
  fullName: System.Diagnostics.InstanceDataCollection.Values
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém os valores de contador em bruto que compõem os dados da instância do contador."
  remarks: ''
  example:
  - "The following code example uses the Values property of an <xref:System.Diagnostics.InstanceDataCollection> to return a collection of <xref:System.Diagnostics.InstanceData> objects, which it converts to an array. It generates an array of instance names using the <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> property. For each element in the array of <xref:System.Diagnostics.InstanceData> objects, it displays the associated instance name and calls a function to process the <xref:System.Diagnostics.InstanceData> object.  \n  \n [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/add/codesnippet/visualbasic/p-system.diagnostics.ins_4_1.vb)]\n [!code-cs[System.Diagnostics.InstanceData.KeysValues#3](~/add/codesnippet/csharp/p-system.diagnostics.ins_4_1.cs)]"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que representa valores de dados não processados do contador.</xref:System.Collections.ICollection>"
  overload: System.Diagnostics.InstanceDataCollection.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.DictionaryBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.InstanceDataCollection.#ctor(System.String)
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: InstanceDataCollection(String)
  nameWithType: InstanceDataCollection.InstanceDataCollection(String)
  fullName: System.Diagnostics.InstanceDataCollection.InstanceDataCollection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.InstanceDataCollection.Contains(System.String)
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Contains(String)
  nameWithType: InstanceDataCollection.Contains(String)
  fullName: System.Diagnostics.InstanceDataCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: CopyTo(InstanceData[],Int32)
  nameWithType: InstanceDataCollection.CopyTo(InstanceData[],Int32)
  fullName: System.Diagnostics.InstanceDataCollection.CopyTo(InstanceData[],Int32)
- uid: System.Diagnostics.InstanceData[]
  parent: System.Diagnostics
  isExternal: false
  name: InstanceData
  nameWithType: InstanceData
  fullName: System.Diagnostics.InstanceData[]
  spec.csharp:
  - uid: System.Diagnostics.InstanceData
    name: InstanceData
    nameWithType: InstanceData
    fullName: InstanceData[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.InstanceDataCollection.CounterName
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: CounterName
  nameWithType: InstanceDataCollection.CounterName
  fullName: System.Diagnostics.InstanceDataCollection.CounterName
- uid: System.Diagnostics.InstanceDataCollection.Item(System.String)
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Item(String)
  nameWithType: InstanceDataCollection.Item(String)
  fullName: System.Diagnostics.InstanceDataCollection.Item(String)
- uid: System.Diagnostics.InstanceData
  parent: System.Diagnostics
  isExternal: false
  name: InstanceData
  nameWithType: InstanceData
  fullName: System.Diagnostics.InstanceData
- uid: System.Diagnostics.InstanceDataCollection.Keys
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Keys
  nameWithType: InstanceDataCollection.Keys
  fullName: System.Diagnostics.InstanceDataCollection.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Diagnostics.InstanceDataCollection.Values
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Values
  nameWithType: InstanceDataCollection.Values
  fullName: System.Diagnostics.InstanceDataCollection.Values
- uid: System.Diagnostics.InstanceDataCollection.#ctor*
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: InstanceDataCollection
  nameWithType: InstanceDataCollection.InstanceDataCollection
- uid: System.Diagnostics.InstanceDataCollection.Contains*
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Contains
  nameWithType: InstanceDataCollection.Contains
- uid: System.Diagnostics.InstanceDataCollection.CopyTo*
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: CopyTo
  nameWithType: InstanceDataCollection.CopyTo
- uid: System.Diagnostics.InstanceDataCollection.CounterName*
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: CounterName
  nameWithType: InstanceDataCollection.CounterName
- uid: System.Diagnostics.InstanceDataCollection.Item*
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Item
  nameWithType: InstanceDataCollection.Item
- uid: System.Diagnostics.InstanceDataCollection.Keys*
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Keys
  nameWithType: InstanceDataCollection.Keys
- uid: System.Diagnostics.InstanceDataCollection.Values*
  parent: System.Diagnostics.InstanceDataCollection
  isExternal: false
  name: Values
  nameWithType: InstanceDataCollection.Values
