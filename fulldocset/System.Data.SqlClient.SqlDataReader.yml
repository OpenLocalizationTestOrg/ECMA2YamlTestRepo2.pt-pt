### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataReader
  id: SqlDataReader
  children:
  - System.Data.SqlClient.SqlDataReader.Close
  - System.Data.SqlClient.SqlDataReader.Connection
  - System.Data.SqlClient.SqlDataReader.Depth
  - System.Data.SqlClient.SqlDataReader.FieldCount
  - System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetEnumerator
  - System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSchemaTable
  - System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.HasRows
  - System.Data.SqlClient.SqlDataReader.IsClosed
  - System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  - System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  - System.Data.SqlClient.SqlDataReader.Item(System.String)
  - System.Data.SqlClient.SqlDataReader.NextResult
  - System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Read
  - System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.RecordsAffected
  - System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  langs:
  - csharp
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
  type: Class
  summary: "Fornece uma forma de ler um fluxo apenas de reencaminhamento de linhas a partir de uma base de dados do SQL Server. Esta classe não pode ser herdada."
  remarks: "Para criar um SqlDataReader, tem de chamar o <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>método o <xref:System.Data.SqlClient.SqlCommand>objeto, em vez de utilizar diretamente um construtor.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>       Enquanto está a ser utilizado o SqlDataReader, associados <xref:System.Data.SqlClient.SqlConnection>está ocupado a servir SqlDataReader, e outras operações não podem ser executadas num <xref:System.Data.SqlClient.SqlConnection>diferente de fechar o mesmo.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection> É este o caso até o <xref:System.Data.SqlClient.SqlDataReader.Close%2A>método do SqlDataReader é chamado.</xref:System.Data.SqlClient.SqlDataReader.Close%2A> Por exemplo, não é possível obter os parâmetros de saída até depois de chamar <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>       As alterações efetuadas a um conjunto por outro processo ou thread durante a leitura de dados de resultados podem estar visíveis ao utilizador o `SqlDataReader`. No entanto, o comportamento preciso é temporize dependentes.       <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>e <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>são as propriedades de apenas pode chamar depois de fechar o SqlDataReader.</xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A></xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> Embora o <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>propriedade pode ser sempre acedidos enquanto o SqlDataReader existe, chamar <xref:System.Data.SqlClient.SqlDataReader.Close%2A>antes de o devolver o valor de <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>para garantir um valor de retorno preciso.</xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> </xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>       Se utilizar o acesso sequencial (<xref:System.Data.CommandBehavior?displayProperty=fullName>), um <xref:System.InvalidOperationException>será desencadeado se a posição SqlDataReader avançada e outro ler é tentada uma operação na coluna anterior.</xref:System.InvalidOperationException> </xref:System.Data.CommandBehavior?displayProperty=fullName>      > [!NOTE] > Para um desempenho ideal, SqlDataReader evita a criação de objetos desnecessários ou efetuar desnecessárias cópias dos dados. Por conseguinte, várias chamadas dos métodos, tais como <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>é devolvida uma referência ao mesmo objeto.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> Medidas de precaução se estiver a modificar o valor subjacente de objetos devolvido por métodos como <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a SqlDataReader. The example reads through the data, writing it out to the console window. The code then closes the SqlDataReader. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._3_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._3_1.vb)]"
  syntax:
    content: 'public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.ReadAsync
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Close
  id: Close
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: SqlDataReader.Close()
  fullName: System.Data.SqlClient.SqlDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Fecha o <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> objeto."
  remarks: "Explicitamente tem de chamar o método Fechar quando são através de utilizando o <xref:System.Data.SqlClient.SqlDataReader>utilizar associada <xref:System.Data.SqlClient.SqlConnection>para qualquer outro fim.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlDataReader>       O `Close` método preenche os valores para parâmetros de saída, valores de retorno e `RecordsAffected`, aumentar o tempo que demora para fechar um `SqlDataReader` que foi utilizada para processar uma consulta de grande ou complexa. Quando os valores de retorno e o número de registos afetados por uma consulta não são importantes, o tempo que demora para fechar o `SqlDataReader` pode ser reduzido ao chamar o <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>método associada <xref:System.Data.SqlClient.SqlCommand>objeto antes de chamar o `Close` método.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.Cancel%2A>      > [!CAUTION] > Não chame `Close` ou `Dispose` de uma ligação, um DataReader ou qualquer outro objeto gerido no `Finalize` método da sua classe. Num Finalizador, só deve de versão recursos não geridos que a classe pertence diretamente. Se a classe não possui quaisquer recursos não geridos, não incluem um `Finalize` método na sua definição de classe. Para obter mais informações, consulte [recolha de lixo](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._11_1.vb)]\n [!code-cs[Classic WebData SqlDataReader.Close Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._11_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Connection
  nameWithType: SqlDataReader.Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> associados a <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  syntax:
    content: protected System.Data.SqlClient.SqlConnection Connection { get; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "O <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> associados a <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Depth
  id: Depth
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: SqlDataReader.Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um valor que indica a profundidade de aninhamento para a linha atual."
  remarks: "A tabela mais exterior tem uma profundidade de zero. O .NET Framework Data Provider para o SQL Server não suporta o aninhamento e devolve sempre zero."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "A profundidade de aninhamento para a linha atual."
  overload: System.Data.SqlClient.SqlDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  id: FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o número de colunas na linha atual."
  remarks: "Executar uma consulta que, pelo respetiva natureza, não devolve linhas (por exemplo, uma consulta de eliminação), define FieldCount para 0. No entanto. não deve ser confundido com uma consulta que devolva linhas 0 (por exemplo, SELECIONE \\* FROM *tabela* onde 1 = 2) caso em que FieldCount devolve o número de colunas na tabela, incluindo campos ocultos. Utilize <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>para excluir os campos ocultos.</xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>"
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Quando não posicionado num recordset válido, 0; caso contrário, o número de colunas na linha atual. A predefinição é de -1."
  overload: System.Data.SqlClient.SqlDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há nenhuma ligação atual para uma instância do SQL Server."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: SqlDataReader.GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um valor booleano."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um valor boleano ou é gerada uma exceção.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Boolean
      description: "O valor da coluna."
  overload: System.Data.SqlClient.SqlDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: SqlDataReader.GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um byte."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um byte.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Byte
      description: "O valor da coluna especificada como um byte."
  overload: System.Data.SqlClient.SqlDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lê um fluxo de bytes a partir do deslocamento da coluna especificada para a memória intermédia de uma matriz, começando no desvio da memória intermédia fornecida."
  remarks: "Realizar GetBytes devolve o número de bytes disponíveis no campo. Na maioria das vezes, este é o comprimento do campo exato. No entanto, o número de devolvido pode ser inferior ao comprimento do campo VERDADEIRO se `GetBytes` já foi utilizado para obter os bytes do campo. Isto pode ser o caso, por exemplo, se o <xref:System.Data.SqlClient.SqlDataReader>está a ler uma estrutura de dados de grandes dimensões para uma memória intermédia.</xref:System.Data.SqlClient.SqlDataReader> Para obter mais informações, consulte o `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> a definição       Se obtiver uma memória intermédia que está `null`, GetBytes devolve o comprimento do campo todo em bytes, não o tamanho restante com base no parâmetro de desvio da memória intermédia.       Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser uma matriz de bytes."
  syntax:
    content: public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    - id: dataIndex
      type: System.Int64
      description: "O índice de campo partir do qual iniciar a operação de leitura."
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia para o qual é possível ler o fluxo de bytes."
    - id: bufferIndex
      type: System.Int32
      description: "O índice no `buffer` em que a operação de escrita está a iniciar."
    - id: length
      type: System.Int32
      description: "O comprimento máximo para copiar para a memória intermédia."
    return:
      type: System.Int64
      description: "O número real de bytes lidos."
  overload: System.Data.SqlClient.SqlDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: SqlDataReader.GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um único caráter."
  remarks: "Não é suportada para <xref:System.Data.SqlClient>.</xref:System.Data.SqlClient>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Char
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lê uma sequência de carateres do deslocamento da coluna especificada para a memória intermédia como uma matriz começar no desvio da memória intermédia fornecida."
  remarks: "GetChars devolve o número de carateres disponíveis no campo. Frequentemente este é o comprimento do campo exato. No entanto, o número de devolvido pode ser inferior ao comprimento do campo VERDADEIRO se `GetChars` já foi utilizado para obter carateres do campo. Isto pode ser o caso, por exemplo, se o <xref:System.Data.SqlClient.SqlDataReader>está a ler uma estrutura de dados de grandes dimensões para uma memória intermédia.</xref:System.Data.SqlClient.SqlDataReader> Para obter mais informações, consulte o `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> a definição       O número real de carateres de leitura pode ser inferior ao comprimento pedido, se for atingido o fim do campo. Se obtiver uma memória intermédia que está `null`, GetChars devolve o comprimento do campo todo em carateres, não o tamanho restante com base no parâmetro de desvio da memória intermédia.       Não existem conversões são efetuadas; desta forma. os dados obtidos já tem de ser uma matriz de caracteres.      > [!NOTE] > GetChars o método devolve 0 se `dataIndex` é negativo."
  syntax:
    content: public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    - id: dataIndex
      type: System.Int64
      description: "O índice de campo partir do qual iniciar a operação de leitura."
    - id: buffer
      type: System.Char[]
      description: "A memória intermédia para o qual é possível ler o fluxo de bytes."
    - id: bufferIndex
      type: System.Int32
      description: "O índice no `buffer` em que a operação de escrita está a iniciar."
    - id: length
      type: System.Int32
      description: "O comprimento máximo para copiar para a memória intermédia."
    return:
      type: System.Int64
      description: "O número real de carateres de leitura."
  overload: System.Data.SqlClient.SqlDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: SqlDataReader.GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém uma cadeia que representa o tipo de dados da coluna especificada."
  remarks: "Devolve o nome do tipo de dados de back-end.       `numeric`é um sinónimo no SQL Server para o `decimal` tipo de dados. `GetDataTypeName`irá devolver &quot;decimal&quot;, para uma coluna definida como decimal ou numérico."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A posição baseado em zero ordinal da coluna a localizar."
    return:
      type: System.String
      description: "A cadeia que representa o tipo de dados da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: SqlDataReader.GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref:System.DateTime>objeto.</xref:System.DateTime>"
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um <xref:System.DateTime>objeto.</xref:System.DateTime>       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.DateTime
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  id: GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDateTimeOffset(Int32)
  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref:System.DateTimeOffset>objeto.</xref:System.DateTimeOffset>"
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um <xref:System.DateTimeOffset>objeto.</xref:System.DateTimeOffset>       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual DateTimeOffset GetDateTimeOffset (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.DateTimeOffset
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: SqlDataReader.GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref:System.Decimal>objeto.</xref:System.Decimal>"
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um <xref:System.Decimal>objeto.</xref:System.Decimal>       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Decimal
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: SqlDataReader.GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um número de ponto flutuante de dupla precisão."
  remarks: "Não existem conversões são executadas. Por conseguinte, os dados obtidos já tem de ser um número de ponto flutuante de dupla precisão.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Double
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SqlDataReader.GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Devolve um <xref:System.Collections.IEnumerator>que itera através de <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "Apesar de poder utilizar este método para obter um enumerador explícito, idiomas que suportam um `foreach` construção, é mais simples utilizar a construção de ciclo diretamente para iterar através de linhas no leitor de dados."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Data.SqlClient.SqlDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: SqlDataReader.GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o <xref:System.Type>que é o tipo de dados do objeto.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Type
      description: "O <xref:System.Type>que é o tipo de dados do objeto.</xref:System.Type> Se o tipo não existe no cliente, no caso de um definidas pelo utilizador tipo (UDT) a base de dados devolvida **GetFieldType** devolve um valor nulo."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: SqlDataReader.GetFieldValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: public override T GetFieldValue<T> (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: public override System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int i, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: i
      type: System.Int32
      description: "A adicionar."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A adicionar."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: SqlDataReader.GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples."
  remarks: "Não existem conversões são executadas. Por conseguinte, os dados obtidos já tem de ser um número de ponto flutuante de precisão simples.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Single
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: SqlDataReader.GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um identificador exclusivo global (GUID)."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um GUID.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Guid
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: SqlDataReader.GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um número inteiro com sinal de 16 bits."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um número inteiro com sinal de 16 bits.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Int16
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: SqlDataReader.GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um número inteiro com sinal de 32 bits."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um número inteiro com sinal de 32 bits.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Int32
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: SqlDataReader.GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um número inteiro com sinal de 64 bits."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um número inteiro com sinal de 64 bits.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Int64
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: SqlDataReader.GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o nome da coluna especificada."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.String
      description: "O nome da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: SqlDataReader.GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém a coluna ordinal, fornecido o nome da coluna."
  remarks: "`GetOrdinal`efetua uma pesquisa de maiúsculas e minúsculas primeiro. Se falhar, uma segunda, a pesquisa sensível ocorre (uma sensível comparação é feita a utilizar o agrupamento de base de dados). Resultados inesperados podem ocorrer quando comparações afetadas pelas regras de maiúsculas e minúsculas de idioma específico. Por exemplo, no turco, o exemplo seguinte gera os resultados incorretos porque o sistema de ficheiros em turco utiliza regras de maiúsculas e minúsculas linguístico para a letra &quot;i&quot; em &quot;ficheiros&quot;. O método emite um `IndexOutOfRange` exceção se não for encontrado o ordinal de coluna baseado em zero.       `GetOrdinal`largura kana é sensível e minúsculas.       Uma vez com base no ordinal pesquisas são mais eficientes de pesquisas com nome, é ineficaz para chamar `GetOrdinal` dentro de um ciclo. Poupar tempo ao chamar `GetOrdinal` uma vez e atribuir os resultados para uma variável de número inteiro para utilização dentro do ciclo."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-cs[Classic WebData SqlDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.sqlclient._27_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._27_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
  overload: System.Data.SqlClient.SqlDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O nome especificado não é um nome de coluna válido."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> que é uma representação do tipo de campo específica do fornecedor subjacente."
  syntax:
    content: public override Type GetProviderSpecificFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Um <xref:System.Int32>que representa a ordinal da coluna.</xref:System.Int32>"
    return:
      type: System.Type
      description: "Obtém um <xref:System.Object>que é uma representação do tipo de campo específica do fornecedor subjacente.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> que é uma representação do valor específico do fornecedor subjacente."
  syntax:
    content: public override object GetProviderSpecificValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Um <xref:System.Int32>que representa a ordinal da coluna.</xref:System.Int32>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que é uma representação do valor específico do fornecedor subjacente.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém uma matriz de objetos que são uma representação dos valores específicos do fornecedor subjacente."
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de <xref:System.Object>no qual pretende copiar os valores da coluna.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A matriz de objetos que são uma representação dos valores específicos do fornecedor subjacente."
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: SqlDataReader.GetSchemaTable()
  fullName: System.Data.SqlClient.SqlDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Devolve um <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna do <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Para o GetSchemaTable método devolve os metadados sobre cada coluna pela seguinte ordem: | Coluna DataReader | Descrição |   |-----------------------|-----------------|   | AllowDBNull | Defina se o consumidor pode definir a coluna com um valor nulo ou se o fornecedor não consegue determinar se o consumidor pode definir a coluna com um valor nulo. Caso contrário, não definido. Uma coluna pode conter valores nulos, mesmo que não pode ser definido com um valor nulo. |   | BaseCatalogName | O nome do catálogo no arquivo de dados que contém a coluna. NULO se não é possível determinar o nome do catálogo de base. A predefinição desta coluna é um valor nulo. |   | BaseColumnName | O nome da coluna no arquivo de dados. Isto pode ser diferente do que o nome da coluna devolvido na coluna ColumnName se utilizou um alias. Um valor nulo se não é possível determinar o nome de coluna base ou se a coluna de conjunto de linhas é derivada, mas não é idêntico ao, armazenar uma coluna de dados. A predefinição desta coluna é um valor nulo. |   | BaseSchemaName | O nome do esquema no arquivo de dados que contém a coluna. Um valor nulo se não é possível determinar o nome do esquema de base. A predefinição desta coluna é um valor nulo. |   | BaseServerName | O nome da instância do Microsoft SQL Server utilizada pelo <xref:System.Data.SqlClient.SqlDataReader>. |   | BaseTableName | O nome da tabela ou vista no arquivo de dados que contém a coluna.</xref:System.Data.SqlClient.SqlDataReader> Um valor nulo se não é possível determinar o nome da tabela base. A predefinição desta coluna é um valor nulo. |   | ColumnName | O nome da coluna; poderá não ser exclusivo. Se isto não é possível determinar, é devolvido um valor nulo. Este nome sempre reflete a mais recente mudar o nome de coluna no texto de vista ou o comando atual. |   | ColumnOrdinal | O ordinal baseado em zero da coluna. Esta coluna não pode conter um valor nulo. |   | ColumnSize | O comprimento máximo possível de um valor na coluna. Para as colunas que utilizam um tipo de dados de comprimento fixo, este é o tamanho do tipo de dados. Para `nvarchar(MAX)`, `varchar(MAX)`, e `varbinary(MAX)` colunas armazenadas numa base de dados do SQL Server, o tamanho máximo é de 2 GB. Se estas colunas são armazenadas e aceder a ficheiros, o limite do tamanho máximo é imposto pelo sistema de ficheiros. Este valor é alterado quando utilizar o `Type System Version` palavra-chave na cadeia de ligação.  Para novos tipos são representados como tipos de nível inferior. Os tipos de dados de número máximo de retorno de 4K normal para `nvarchar` e 8000 para `varchar`. Para obter mais informações, consulte a referência de Transact-SQL no SQL Server Books Online. |   | DataTypeName | Devolve uma cadeia que representa o tipo de dados da coluna especificada. |   | IsAliased | `true`: O nome da coluna é um alias.<br /><br /> `false`: O nome da coluna não é um alias. |   | IsAutoIncrement | `true`: A coluna atribui valores a novas linhas em incrementos de fixos.<br /><br /> `false`: A coluna não atribuir valores às novas linhas em incrementos de fixos. A predefinição desta coluna é `false`. |   | IsColumnSet | `true`: A coluna é uma coluna dispersa que seja um membro de um conjunto de colunas. |   | IsExpression | `true`: A coluna é uma expressão.<br /><br /> `false`: A coluna não é uma expressão. |   | IsHidden | `true`: A coluna está oculta.<br /><br /> `false`: A coluna não se encontre oculto. |   | IsIdentity | `true`: A coluna é uma coluna de identidade.<br /><br /> `false`: A coluna não é uma coluna de identidade. |   | IsKey | `true`: A coluna é um de um conjunto de colunas no conjunto de linhas, utilizadas em conjunto, identificar exclusivamente a linha. O conjunto de colunas com `IsKey` definido como `true` tem de identificar exclusivamente uma linha no conjunto de linhas. Não é necessário que este conjunto de colunas é um conjunto mínimo de colunas. Este conjunto de colunas pode ser gerado a partir de um índice exclusivo, uma restrição exclusiva ou uma chave primária da tabela base.<br /><br /> `false`: A coluna não é necessário para identificar exclusivamente a linha. |   | IsLong | `true`: A coluna contém um binário longo objeto (BLOBS) que contém dados muito longos. A definição de dados muito é específica do fornecedor.<br /><br /> `false`: A coluna não contém um binário longo objeto (BLOBS) que contém dados muito. |   | IsReadOnly | `true`: A coluna não pode ser modificada.<br /><br /> `false`: A coluna pode ser modificada. |   | IsRowVersion | `true`: A coluna contém um identificador de linha persistente que não pode ser escrito e não tem nenhum valor significativo, exceto para a identidade a linha.<br /><br /> `false`: A coluna não contém um identificador de linha persistente que não pode ser escrito e não tem nenhum valor significativo, exceto para a identidade a linha. |   | IsUnique | `true`: A coluna é do tipo `timestamp`.<br /><br /> `false`: A coluna não é do tipo `timestamp`. |   | NonVersionedProviderType | O tipo da coluna independentemente atual `Type System Version` especificado na cadeia de ligação. O valor devolvido é da enumeração <xref:System.Data.SqlDbType>. |   | NumericPrecision | Se `ProviderType` é um tipo de dados numéricos, esta é a precisão máxima da coluna.</xref:System.Data.SqlDbType> A precisão depende a definição da coluna. Se `ProviderType` não é um tipo de dados numéricos, isto é 255. |   | NumericScale | Se `ProviderType` DBTYPE_DECIMAL ou DBTYPE_NUMERIC, o número de dígitos à direita da vírgula decimal. Caso contrário, isto é 255. |   | ProviderSpecificDataType | Devolve o tipo de dados específica do fornecedor da coluna com base no `Type System Version` palavra-chave na cadeia de ligação. |   | ProviderType | O indicador da coluna tipo de dados. Se o tipo de dados da coluna varia de linha para linha, tem de ser objeto. Esta coluna não pode conter um valor nulo. |   | UdtAssemblyQualifiedName | Se a coluna é um tipo definido pelo utilizador (UDT), este é o nome qualificado da assemblagem do UDT de acordo com <xref:System.Type.AssemblyQualifiedName%2A>.</xref:System.Type.AssemblyQualifiedName%2A> Se a coluna não é um UDT, isto é nulo. |   | XmlSchemaCollectionDatabase | O nome da base de dados em que a coleção de esquema para esta instância XML é localizada, se a linha contém informações sobre uma coluna XML. Este valor é `null` (`Nothing` no Visual Basic) se a coleção está definida no âmbito de base de dados atual. Também é nulo se não existir nenhuma coleção de esquema, caso em que o `XmlSchemaCollectionName` e `XmlSchemaCollectionOwningSchema` colunas também são nulos. |   | XmlSchemaCollectionName | O nome da coleção de esquema para esta instância XML, se a linha contém informações sobre uma coluna XML. Este valor é `null` (`Nothing` no Visual Basic) se não houver nenhuma coleção de esquema associado. Se o valor for nulo, o `XmlSchemaCollectionDatabase` e `XmlSchemaCollectionOwningSchema` colunas também são nulos. |   | XmlSchemaCollectionOwningSchema | O esquema relacional proprietário onde a coleção de esquema para esta instância XML está localizada, se a linha contém informações sobre uma coluna XML. Este valor é `null` (`Nothing` no Visual Basic) se a coleção está definida no âmbito de base de dados atual. Também é nulo se não existir nenhuma coleção de esquema, caso em que o `XmlSchemaCollectionDatabase` e `XmlSchemaCollectionName` colunas também são nulos. |      > [!NOTE] > Para se certificar de que as colunas de metadados devolvem as informações corretas, tem de chamar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>com o `behavior` parâmetro definido como `KeyInfo`.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Caso contrário, algumas das colunas da tabela de esquema podem devolver predefinido, nulos ou incorreta os dados."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna."
  overload: System.Data.SqlClient.SqlDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> está fechado."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  id: GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBinary(Int32)
  nameWithType: SqlDataReader.GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser uma estrutura de binária ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBinary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  id: GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBoolean(Int32)
  nameWithType: SqlDataReader.GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um valor boleano ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "O valor da coluna."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  id: GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlByte(Int32)
  nameWithType: SqlDataReader.GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já devem estar um byte ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  id: GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBytes(Int32)
  nameWithType: SqlDataReader.GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como <xref href=&quot;System.Data.SqlTypes.SqlBytes&quot;> </xref>."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlBytes
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlBytes&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  id: GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlChars(Int32)
  nameWithType: SqlDataReader.GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlChars
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  id: GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDateTime(Int32)
  nameWithType: SqlDataReader.GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um valor de data/hora ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  id: GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDecimal(Int32)
  nameWithType: SqlDataReader.GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um valor decimal ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  id: GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDouble(Int32)
  nameWithType: SqlDataReader.GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um número de vírgula flutuante de dupla precisão ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  id: GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlGuid(Int32)
  nameWithType: SqlDataReader.GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um GUID ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  id: GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt16(Int32)
  nameWithType: SqlDataReader.GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um número inteiro com sinal de 16 bits ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  id: GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt32(Int32)
  nameWithType: SqlDataReader.GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos tem já de ser um número inteiro com sinal de 32 bits ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  id: GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt64(Int32)
  nameWithType: SqlDataReader.GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um número inteiro com sinal de 64 bits ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  id: GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlMoney(Int32)
  nameWithType: SqlDataReader.GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um valor decimal ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  id: GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlSingle(Int32)
  nameWithType: SqlDataReader.GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser uma número de vírgula flutuante de precisão única ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  id: GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlString(Int32)
  nameWithType: SqlDataReader.GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser uma cadeia ou é gerada uma exceção."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  id: GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlValue(Int32)
  nameWithType: SqlDataReader.GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Devolve o valor de dados na coluna especificada como um tipo de SQL Server."
  remarks: "GetSqlValue devolve dados utilizando os tipos nativos do SQL Server. Para obter dados com os tipos de .NET Framework, consulte <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>"
  syntax:
    content: public virtual object GetSqlValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Object
      description: "O valor da coluna expressado como um <xref href=&quot;System.Data.SqlDbType&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  id: GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlValues(Object[])
  nameWithType: SqlDataReader.GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Preenche uma matriz de <xref:System.Object>que contém os valores para todas as colunas no registo, expresso como tipos de SQL Server.</xref:System.Object>"
  remarks: "Devolve os valores para todas as colunas no registo numa única chamada, utilizando o sistema de tipo do SQL Server em vez do sistema de tipo CLR. O comprimento do <xref:System.Object>matriz não tem de corresponder ao número de colunas no registo.</xref:System.Object> Pode passar uma <xref:System.Object>matriz que contenha menos do que o número de colunas contidas no registo.</xref:System.Object> Apenas a quantidade de dados a <xref:System.Object>matriz contém é copiado para a matriz, que começa com a coluna com o ordinal 0.</xref:System.Object> Também pode passar uma <xref:System.Object>matriz cujo comprimento é maior do que o número de colunas incluídas na linha resultante.</xref:System.Object> Todas as restantes colunas são inalteradas."
  syntax:
    content: public virtual int GetSqlValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de <xref:System.Object>na qual copiar os valores.</xref:System.Object> Os valores da coluna são expressos em tipos de SQL Server."
    return:
      type: System.Int32
      description: "Um número inteiro que indica o número de colunas copiados."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>values</code>é nulo."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  id: GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlXml(Int32)
  nameWithType: SqlDataReader.GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como um valor XML."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um valor XML.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Data.SqlTypes.SqlXml
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlXml&quot;> </xref> valor que contenha o XML armazenado no campo correspondente."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlXml*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice transmitido estava fora do intervalo de 0- <xref:System.Data.DataTableReader.FieldCount*>1</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi efetuada uma tentativa de ler ou aceder a colunas num fechado <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Não são compatíveis com os dados obtidos a <xref href=&quot;System.Data.SqlTypes.SqlXml&quot;> </xref> tipo."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: SqlDataReader.GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o binário, imagem, varbinary, UDT e tipos de dados variant como <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "<xref:System.IO.Stream.ReadTimeout%2A>Por predefinição, o valor de <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; mas pode modificar <xref:System.IO.Stream.ReadTimeout%2A>através de invocar GetStream.</xref:System.IO.Stream.ReadTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A></xref:System.IO.Stream.ReadTimeout%2A>       Valores nulos vai ser devolvidos como vazio (zero bytes) <xref:System.IO.Stream>.</xref:System.IO.Stream>       <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>emitirá um <xref:System.InvalidOperationException>exceção quando utilizada num objeto devolvido pelo GetStream quando <xref:System.Data.CommandBehavior>está em vigor.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>       <xref:System.Data.SqlClient.SqlException>exceções <xref:System.IO.Stream>forem emitidas como <xref:System.IO.IOException>exceções; consulte a exceção interna para <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.IO.IOException> </xref:System.IO.Stream> geradas</xref:System.Data.SqlClient.SqlException>       O seguinte <xref:System.IO.Stream>Membros não estão disponíveis para objectos devolvidos pelo GetStream: - SetLength - escrita - WriteByte - WriteTimeout quando a propriedade connection de pesquisa - BeginWrite - EndWrite - comprimento - posição - `ContextConnection=true`, GetStream só suporta a obtenção de dados síncrona para ambos sequencial (<xref:System.Data.CommandBehavior>) e não sequencial (<xref:System.Data.CommandBehavior>) acesso.</xref:System.Data.CommandBehavior> </xref:System.Data.CommandBehavior> </xref:System.IO.Stream>       Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.IO.Stream GetStream (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.IO.Stream
      description: "Um objeto de fluxo."
  overload: System.Data.SqlClient.SqlDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentou ler uma coluna de leitura anteriormente no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo devolvido não era um dos tipos abaixo: udt - binário - imagem - varbinary -"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: SqlDataReader.GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma cadeia."
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser uma cadeia.       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.String
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: SqlDataReader.GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém Char, NChar, NText, NVarChar, text, varChar e tipos de dados variante como <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: "<xref:System.Data.SqlClient.SqlException>exceções <xref:System.IO.TextReader>forem emitidas como <xref:System.IO.IOException>exceções; consulte a exceção interna para <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.IO.IOException> </xref:System.IO.TextReader> geradas</xref:System.Data.SqlClient.SqlException>       Valores nulos vai ser devolvidos como vazio (zero bytes) <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>emitirá um <xref:System.InvalidOperationException>exceção quando utilizada num objeto devolvido pelo GetTextReader quando <xref:System.Data.CommandBehavior>está em vigor.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>       Quando a propriedade connection `ContextConnection=true`, GetTextReader só suporta a obtenção de dados síncrona para ambos sequencial (<xref:System.Data.CommandBehavior>) e não sequencial (<xref:System.Data.CommandBehavior>) acesso.</xref:System.Data.CommandBehavior> </xref:System.Data.CommandBehavior>       Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.IO.TextReader GetTextReader (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A coluna a ser obtidos."
    return:
      type: System.IO.TextReader
      description: "O objeto devolvido."
  overload: System.Data.SqlClient.SqlDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentou ler uma coluna de leitura anteriormente no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo devolvido não era um dos tipos abaixo: - char - nchar - ntext - nvarchar - texto - varchar"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: SqlDataReader.GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada como uma <xref:System.TimeSpan>objeto.</xref:System.TimeSpan>"
  remarks: "Não existem conversões são efetuadas; Por conseguinte, os dados obtidos já tem de ser um <xref:System.TimeSpan>objeto.</xref:System.TimeSpan>       Chamar <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>verificar a existência de valores nulos antes de chamar este método.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual TimeSpan GetTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.TimeSpan
      description: "O valor da coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: SqlDataReader.GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada no formato nativo."
  remarks: "GetValue devolve dados utilizando os tipos de .NET Framework."
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Object
      description: "Este método devolve <xref href=&quot;System.DBNull&quot;> </xref> para colunas de base de dados nula."
  overload: System.Data.SqlClient.SqlDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: SqlDataReader.GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Preenche uma matriz de objetos com os valores da coluna da linha actual."
  remarks: "Para a maioria das aplicações, este método proporciona um meio eficiente para obter todas as colunas, em vez de obtenção individualmente cada coluna.       Pode passar uma <xref:System.Object>matriz que contenha menos do que o número de colunas incluídas na linha resultante.</xref:System.Object> Apenas a quantidade de dados a <xref:System.Object>matriz contém é copiado para a matriz.</xref:System.Object> Também pode passar uma <xref:System.Object>matriz cujo comprimento é maior do que o número de colunas incluídas na linha resultante.</xref:System.Object>       Este método devolve <xref:System.DBNull>para colunas de base de dados nula.</xref:System.DBNull>"
  example:
  - "The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#2](~/add/codesnippet/csharp/m-system.data.sqlclient._28_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/add/codesnippet/visualbasic/m-system.data.sqlclient._28_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de <xref:System.Object>na qual copiar as colunas de atributo.</xref:System.Object>"
    return:
      type: System.Int32
      description: "O número de instâncias de <xref:System.Object>na matriz.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  id: GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetXmlReader(Int32)
  nameWithType: SqlDataReader.GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém os dados do tipo XML como uma <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "O <xref:System.Xml.XmlReader>objecto devolvido por GetXmlReader não suporta operações assíncronas.</xref:System.Xml.XmlReader> Se necessitar de operações assíncronas num <xref:System.Xml.XmlReader>converta a coluna XML para uma nvarchar (Max) no servidor e utilize <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>com <xref:System.Xml.XmlReader.Create%2A>.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> </xref:System.Xml.XmlReader>       <xref:System.Data.SqlClient.SqlException>exceções <xref:System.Xml.XmlReader>forem emitidas como <xref:System.Xml.XmlException>exceções; consulte a exceção interna para <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.Xml.XmlException> </xref:System.Xml.XmlReader> geradas</xref:System.Data.SqlClient.SqlException>       <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>emitirá um <xref:System.InvalidOperationException>exceção quando utilizada num objeto devolvido pelo GetXmlReader quando <xref:System.Data.CommandBehavior>está em vigor.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>       Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Xml.XmlReader GetXmlReader (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O valor da coluna especificada."
    return:
      type: System.Xml.XmlReader
      description: "O objeto devolvido."
  overload: System.Data.SqlClient.SqlDataReader.GetXmlReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentativa de leitura de uma coluna anteriormente leitura no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo devolvido não era xml."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  id: HasRows
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: SqlDataReader.HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> contém uma ou mais linhas."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> contém uma ou mais linhas; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  id: IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um valor booleano que indica se especificado <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instância foi fechada."
  remarks: "Não é possível ler a partir de um <xref:System.Data.SqlClient.SqlDataReader>instância que está fechada.</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> instância é fechada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  id: IsCommandBehavior(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsCommandBehavior(CommandBehavior)
  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)
  fullName: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Determina se especificado <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> corresponde do <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> ."
  remarks: "Este membro suporta a infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: protected bool IsCommandBehavior (System.Data.CommandBehavior condition);
    parameters:
    - id: condition
      type: System.Data.CommandBehavior
      description: "A <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> enumeração."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> for VERDADEIRO, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário."
  overload: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: SqlDataReader.IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém um valor que indica se a coluna contém valores inexistente ou está em falta."
  remarks: "Chamar este método para verificar para métodos de introdução de valores da coluna nulo antes de chamar o escrito (por exemplo, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, e assim sucessivamente) para evitar que gera um erro.</xref:System.Data.SqlClient.SqlDataReader.GetChar%2A> </xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>       [!code-vb[SqlDataReader_IsDbNull n. º&1;](~/add/codesnippet/visualbasic/m-system.data.sqlclient._29_1.vb)][!code-cs[SqlDataReader_IsDbNull n. º&1;  ](~/add/codesnippet/csharp/m-system.data.sqlclient._29_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de coluna especificada é equivalente ao <xref href=&quot;System.DBNull&quot;> </xref>; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>, que obtém um valor que indica se a coluna contém valores inexistente ou está em falta.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>       O token de cancelamento pode ser utilizado para pedir que a operação ser abandonada antes do tempo limite do comando decorrida. Exceções serão comunicadas através do objeto de tarefa devolvido."
  remarks: "Para obter mais informações, consulte [suporte de transmissão em fluxo SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: i
      type: System.Int32
      description: "A coluna baseado em zero a recuperar."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento, propaga uma notificação que operações deverá ser canceladas. Isto garante o cancelamento. Uma definição de <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;> </xref> torna este método equivalente ao <xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull*> A tarefa devolvida tem de ser marcada como cancelada."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de coluna especificada é equivalente ao <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação ignora ou é fechado durante a obtenção de dados.       O <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> está fechado durante a obtenção de dados.       Não há nenhum prontos para ser de leitura de dados (por exemplo, o primeiro <> </> *> ainda não foi chamado ou devolveu false).       Tentativa de leitura de uma coluna anteriormente leitura no modo sequencial.       Ocorreu uma operação assíncrona em curso. Isto aplica-se para obter todos os* métodos quando executado no modo sequencial, como pode ser chamados durante a leitura numa sequência.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>foi especificado na cadeia de ligação."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativa de leitura de uma coluna que não existe."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SqlDataReader.Item(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada no formato nativo dado o ordinal de coluna."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "O baseado em zero ordinal da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada no formato nativo."
  overload: System.Data.SqlClient.SqlDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O índice transmitido estava fora do intervalo de 0 a <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: SqlDataReader.Item(String)
  fullName: System.Data.SqlClient.SqlDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o valor da coluna especificada no formato nativo fornecido o nome de coluna."
  remarks: "Uma pesquisa de maiúsculas e minúsculas é efetuada pela primeira vez. Se falhar, é efetuada uma pesquisa de sensível segundo (uma sensível comparação é feita a utilizar o agrupamento de base de dados). Resultados inesperados podem ocorrer quando comparações afetadas pelas regras de maiúsculas e minúsculas de idioma específico. Por exemplo, no turco, o exemplo seguinte gera os resultados incorretos porque o sistema de ficheiros em turco utiliza regras de maiúsculas e minúsculas linguístico para a letra &quot;i&quot; em &quot;ficheiros&quot;.       Este método é sensível e minúsculas kana largura."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada no formato nativo."
  overload: System.Data.SqlClient.SqlDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Não foi encontrada nenhuma coluna com o nome especificado."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  id: NextResult
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: SqlDataReader.NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Avança o leitor de dados para o resultado seguinte, ao ler os resultados de declarações de batch Transact-SQL."
  remarks: "Utilizada para processar vários resultados, o que podem ser gerados executando instruções Transact-SQL de batch.       Por predefinição, o leitor de dados está posicionado no resultado primeiro."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não existirem mais conjuntos de resultados; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <xref:System.Data.SqlClient.SqlDataReader.NextResult*>, que avança o leitor de dados para o resultado seguinte, ao ler os resultados do batch [!INCLUDE[tsql](~/add/includes/tsql-md.md)] declarações.</xref:System.Data.SqlClient.SqlDataReader.NextResult*>       O token de cancelamento pode ser utilizado para pedir que a operação ser abandonada antes do tempo limite do comando decorrida.  Exceções serão comunicadas através do objeto de tarefa devolvido."
  remarks: "Para obter mais informações sobre a programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] fornecedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlDataReader.NextResultAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamar NextResultAsync mais do que uma vez para a mesma instância antes da conclusão da tarefa.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>foi especificado na cadeia de ligação."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]devolveu um erro ao executar o texto do comando.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Read
  id: Read
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: SqlDataReader.Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Avança o <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> ao registo seguinte."
  remarks: "A posição da predefinição do <xref:System.Data.SqlClient.SqlDataReader>antes do primeiro registo.</xref:System.Data.SqlClient.SqlDataReader> Por conseguinte, tem de chamar leitura para começar a aceder a quaisquer dados.       Apenas um `SqlDataReader` por associados <xref:System.Data.SqlClient.SqlConnection>pode ser aberto um momento e qualquer tentativa de abrir outra falharão enquanto não for fechado primeiro.</xref:System.Data.SqlClient.SqlConnection> Da mesma forma, enquanto o `SqlDataReader` está a ser utilizado, associada `SqlConnection` está ocupado a servir até chamada <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._26_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._26_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não existirem mais linhas; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.Read*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]devolveu um erro ao executar o texto do comando.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: SqlDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uma versão assíncrona de <xref:System.Data.SqlClient.SqlDataReader.Read*>, que avanços o <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> para o seguinte registo.</xref:System.Data.SqlClient.SqlDataReader.Read*>       O token de cancelamento pode ser utilizado para pedir que a operação ser abandonada antes do tempo limite do comando decorrida. Exceções serão comunicadas através do objeto de tarefa devolvido."
  remarks: "Se o `behavior` parâmetro <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>está definido como `Default`, ReadAsync lê a toda a linha antes de o devolver a tarefa.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>       Para obter mais informações, incluindo exemplos de código, sobre programação assíncrona no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] fornecedor de dados para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], consulte [programação assíncrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A instrução de cancelamento."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Uma tarefa que representa a operação assíncrona."
  overload: System.Data.SqlClient.SqlDataReader.ReadAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamar ReadAsync mais do que uma vez para a mesma instância antes da conclusão da tarefa.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>foi especificado na cadeia de ligação."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]devolveu um erro ao executar o texto do comando.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o número de linhas alterada, inseridas ou eliminadas pela execução da instrução Transact-SQL."
  remarks: "A propriedade RecordsAffected não está definida até que todas as linhas são lidas e fechar o <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader>       O valor desta propriedade é cumulativo. Por exemplo, se dois registos são inseridos no modo de batch, o valor de `RecordsAffected` será dois.       <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>e RecordsAffected são as propriedades de só pode ser chamada após o <xref:System.Data.SqlClient.SqlDataReader>está fechado.</xref:System.Data.SqlClient.SqlDataReader></xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "O número de linhas alterada, inseridas ou eliminadas; 0 se não existem linhas foram afetadas ou a falha da instrução switch; e -1 para instruções SELECT."
  overload: System.Data.SqlClient.SqlDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Devolve um <xref href=&quot;System.Data.IDataReader&quot;> </xref> para o ordinal de coluna especificada."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.SqlClient.SqlDataReader>instância é convertida para um <xref:System.IDataRecord>interface.</xref:System.IDataRecord> </xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Um ordinal da coluna."
    return:
      type: System.Data.IDataReader
      description: "O <xref href=&quot;System.Data.IDataReader&quot;> </xref> instância para o ordinal de coluna especificada."
  overload: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém o número de campos no <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> que não estão ocultas."
  remarks: "Este valor é utilizado para determinar o número de campos no <xref:System.Data.SqlClient.SqlDataReader>estão visíveis.</xref:System.Data.SqlClient.SqlDataReader> Por exemplo, um SELECIONE numa chave primária parcial devolve as restantes partes da chave como campos ocultos. Os campos ocultos são sempre acrescentados atrás os campos visível."
  syntax:
    content: public override int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "O número de campos que não estão ocultas."
  overload: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDataReader.Close
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Close()
  nameWithType: SqlDataReader.Close()
  fullName: System.Data.SqlClient.SqlDataReader.Close()
- uid: System.Data.SqlClient.SqlDataReader.Connection
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Connection
  nameWithType: SqlDataReader.Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlDataReader.Depth
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Depth
  nameWithType: SqlDataReader.Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: SqlDataReader.GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: SqlDataReader.GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: SqlDataReader.GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: SqlDataReader.GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: SqlDataReader.GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTimeOffset(Int32)
  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(Int32)
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: SqlDataReader.GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: SqlDataReader.GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: SqlDataReader.GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: SqlDataReader.GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: SqlDataReader.GetFieldValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: SqlDataReader.GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: SqlDataReader.GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: SqlDataReader.GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: SqlDataReader.GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: SqlDataReader.GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: SqlDataReader.GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: SqlDataReader.GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(String)
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: SqlDataReader.GetSchemaTable()
  fullName: System.Data.SqlClient.SqlDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBinary(Int32)
  nameWithType: SqlDataReader.GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(Int32)
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBoolean(Int32)
  nameWithType: SqlDataReader.GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(Int32)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlByte(Int32)
  nameWithType: SqlDataReader.GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(Int32)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBytes(Int32)
  nameWithType: SqlDataReader.GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(Int32)
- uid: System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBytes
  nameWithType: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlChars(Int32)
  nameWithType: SqlDataReader.GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(Int32)
- uid: System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlChars
  nameWithType: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDateTime(Int32)
  nameWithType: SqlDataReader.GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(Int32)
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDecimal(Int32)
  nameWithType: SqlDataReader.GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(Int32)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDouble(Int32)
  nameWithType: SqlDataReader.GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(Int32)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlGuid(Int32)
  nameWithType: SqlDataReader.GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(Int32)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt16(Int32)
  nameWithType: SqlDataReader.GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(Int32)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt32(Int32)
  nameWithType: SqlDataReader.GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(Int32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt64(Int32)
  nameWithType: SqlDataReader.GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(Int32)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlMoney(Int32)
  nameWithType: SqlDataReader.GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(Int32)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlSingle(Int32)
  nameWithType: SqlDataReader.GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(Int32)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlString(Int32)
  nameWithType: SqlDataReader.GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(Int32)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValue(Int32)
  nameWithType: SqlDataReader.GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValues(Object[])
  nameWithType: SqlDataReader.GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(Object[])
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlXml(Int32)
  nameWithType: SqlDataReader.GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(Int32)
- uid: System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlXml
  nameWithType: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: SqlDataReader.GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: SqlDataReader.GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: SqlDataReader.GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: SqlDataReader.GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: SqlDataReader.GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: SqlDataReader.GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(Object[])
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetXmlReader(Int32)
  nameWithType: SqlDataReader.GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(Int32)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: HasRows
  nameWithType: SqlDataReader.HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsCommandBehavior(CommandBehavior)
  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)
  fullName: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: SqlDataReader.IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(Int32)
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: SqlDataReader.Item(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.Item(Int32)
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item(String)
  nameWithType: SqlDataReader.Item(String)
  fullName: System.Data.SqlClient.SqlDataReader.Item(String)
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResult()
  nameWithType: SqlDataReader.NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.Read
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Read()
  nameWithType: SqlDataReader.Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: SqlDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
- uid: System.Data.SqlClient.SqlDataReader.Close*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Close
  nameWithType: SqlDataReader.Close
- uid: System.Data.SqlClient.SqlDataReader.Connection*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Connection
  nameWithType: SqlDataReader.Connection
- uid: System.Data.SqlClient.SqlDataReader.Depth*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Depth
  nameWithType: SqlDataReader.Depth
- uid: System.Data.SqlClient.SqlDataReader.FieldCount*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: SqlDataReader.GetBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetByte*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetByte
  nameWithType: SqlDataReader.GetByte
- uid: System.Data.SqlClient.SqlDataReader.GetBytes*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBytes
  nameWithType: SqlDataReader.GetBytes
- uid: System.Data.SqlClient.SqlDataReader.GetChar*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChar
  nameWithType: SqlDataReader.GetChar
- uid: System.Data.SqlClient.SqlDataReader.GetChars*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChars
  nameWithType: SqlDataReader.GetChars
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: SqlDataReader.GetDataTypeName
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: SqlDataReader.GetDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTimeOffset
  nameWithType: SqlDataReader.GetDateTimeOffset
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: SqlDataReader.GetDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetDouble*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDouble
  nameWithType: SqlDataReader.GetDouble
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: SqlDataReader.GetEnumerator
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: SqlDataReader.GetFieldType
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: SqlDataReader.GetFieldValue<T>
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: SqlDataReader.GetFieldValueAsync<T>
- uid: System.Data.SqlClient.SqlDataReader.GetFloat*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFloat
  nameWithType: SqlDataReader.GetFloat
- uid: System.Data.SqlClient.SqlDataReader.GetGuid*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetGuid
  nameWithType: SqlDataReader.GetGuid
- uid: System.Data.SqlClient.SqlDataReader.GetInt16*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt16
  nameWithType: SqlDataReader.GetInt16
- uid: System.Data.SqlClient.SqlDataReader.GetInt32*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt32
  nameWithType: SqlDataReader.GetInt32
- uid: System.Data.SqlClient.SqlDataReader.GetInt64*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt64
  nameWithType: SqlDataReader.GetInt64
- uid: System.Data.SqlClient.SqlDataReader.GetName*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetName
  nameWithType: SqlDataReader.GetName
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: SqlDataReader.GetOrdinal
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: SqlDataReader.GetProviderSpecificFieldType
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: SqlDataReader.GetProviderSpecificValue
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: SqlDataReader.GetProviderSpecificValues
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: SqlDataReader.GetSchemaTable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBinary
  nameWithType: SqlDataReader.GetSqlBinary
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBoolean
  nameWithType: SqlDataReader.GetSqlBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlByte
  nameWithType: SqlDataReader.GetSqlByte
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBytes
  nameWithType: SqlDataReader.GetSqlBytes
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlChars
  nameWithType: SqlDataReader.GetSqlChars
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDateTime
  nameWithType: SqlDataReader.GetSqlDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDecimal
  nameWithType: SqlDataReader.GetSqlDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDouble
  nameWithType: SqlDataReader.GetSqlDouble
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlGuid
  nameWithType: SqlDataReader.GetSqlGuid
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt16
  nameWithType: SqlDataReader.GetSqlInt16
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt32
  nameWithType: SqlDataReader.GetSqlInt32
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt64
  nameWithType: SqlDataReader.GetSqlInt64
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlMoney
  nameWithType: SqlDataReader.GetSqlMoney
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlSingle
  nameWithType: SqlDataReader.GetSqlSingle
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlString
  nameWithType: SqlDataReader.GetSqlString
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValue
  nameWithType: SqlDataReader.GetSqlValue
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValues
  nameWithType: SqlDataReader.GetSqlValues
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlXml
  nameWithType: SqlDataReader.GetSqlXml
- uid: System.Data.SqlClient.SqlDataReader.GetStream*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetStream
  nameWithType: SqlDataReader.GetStream
- uid: System.Data.SqlClient.SqlDataReader.GetString*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetString
  nameWithType: SqlDataReader.GetString
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: SqlDataReader.GetTextReader
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: SqlDataReader.GetTimeSpan
- uid: System.Data.SqlClient.SqlDataReader.GetValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValue
  nameWithType: SqlDataReader.GetValue
- uid: System.Data.SqlClient.SqlDataReader.GetValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValues
  nameWithType: SqlDataReader.GetValues
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetXmlReader
  nameWithType: SqlDataReader.GetXmlReader
- uid: System.Data.SqlClient.SqlDataReader.HasRows*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: HasRows
  nameWithType: SqlDataReader.HasRows
- uid: System.Data.SqlClient.SqlDataReader.IsClosed*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsCommandBehavior
  nameWithType: SqlDataReader.IsCommandBehavior
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: SqlDataReader.IsDBNull
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: SqlDataReader.IsDBNullAsync
- uid: System.Data.SqlClient.SqlDataReader.Item*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item
  nameWithType: SqlDataReader.Item
- uid: System.Data.SqlClient.SqlDataReader.NextResult*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResult
  nameWithType: SqlDataReader.NextResult
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: SqlDataReader.NextResultAsync
- uid: System.Data.SqlClient.SqlDataReader.Read*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Read
  nameWithType: SqlDataReader.Read
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: SqlDataReader.ReadAsync
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
