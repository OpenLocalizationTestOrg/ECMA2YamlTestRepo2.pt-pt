### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  id: RSAPKCS1SignatureFormatter
  children:
  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor
  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(System.Byte[])
  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  langs:
  - csharp
  name: RSAPKCS1SignatureFormatter
  nameWithType: RSAPKCS1SignatureFormatter
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  type: Class
  summary: 'Creates an <xref href=&quot;System.Security.Cryptography.RSA&quot;></xref> PKCS #1 version 1.5 signature.'
  remarks: "This class is used to create a digital signature using the <xref:System.Security.Cryptography.RSA> algorithm.       Use <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter> to verify digital signatures with the <xref:System.Security.Cryptography.RSA> algorithm."
  example:
  - "The following example demonstrates how to create a PKCS #1 version 1.5 signature.  \n  \n [!code-vb[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/add/codesnippet/visualbasic/t-system.security.crypto_13_1.vb)]\n [!code-cs[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/add/codesnippet/csharp/t-system.security.crypto_13_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class RSAPKCS1SignatureFormatter : System.Security.Cryptography.AsymmetricSignatureFormatter
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricSignatureFormatter
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  langs:
  - csharp
  name: RSAPKCS1SignatureFormatter()
  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.RSAPKCS1SignatureFormatter&quot;></xref> class."
  remarks: "Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey%2A> and <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."
  syntax:
    content: public RSAPKCS1SignatureFormatter ();
    parameters: []
  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  langs:
  - csharp
  name: RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.RSAPKCS1SignatureFormatter&quot;></xref> class with the specified key."
  remarks: "Use <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm%2A> to set the hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."
  syntax:
    content: public RSAPKCS1SignatureFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The instance of the <xref href=&quot;System.Security.Cryptography.RSA&quot;></xref> algorithm that holds the private key."
  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(System.Byte[])
  id: CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  langs:
  - csharp
  name: CreateSignature(Byte[])
  nameWithType: RSAPKCS1SignatureFormatter.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: 'Creates the <xref href=&quot;System.Security.Cryptography.RSA&quot;></xref> PKCS #1 signature for the specified data.'
  remarks: "You must specify a key and a hash algorithm before calling this method."
  example:
  - "The following example demonstrates how to create a PKCS #1 version 1.5 signature.  \n  \n [!code-vb[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/add/codesnippet/visualbasic/086076d3-abdb-4e62-97f5-_1.vb)]\n [!code-cs[System.Security.Cryptography.RSAPKCS1SignatureFormatterExample#1](~/add/codesnippet/csharp/086076d3-abdb-4e62-97f5-_1.cs)]"
  syntax:
    content: public override byte[] CreateSignature (byte[] rgbHash);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "The data to be signed."
    return:
      type: System.Byte[]
      description: "The digital signature for <code>rgbHash</code>."
  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "The key is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The hash algorithm is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Sets the hash algorithm to use for creating the signature."
  remarks: "You must set a hash algorithm before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."
  syntax:
    content: public override void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: "The name of the hash algorithm to use for creating the signature."
  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Sets the private key to use for creating the signature."
  remarks: "You must set a key before calling <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature%2A>."
  syntax:
    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The instance of the <xref href=&quot;System.Security.Cryptography.RSA&quot;></xref> algorithm that holds the private key."
  overload: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: RSAPKCS1SignatureFormatter()
  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter()
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: CreateSignature(Byte[])
  nameWithType: RSAPKCS1SignatureFormatter.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.#ctor*
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: RSAPKCS1SignatureFormatter
  nameWithType: RSAPKCS1SignatureFormatter.RSAPKCS1SignatureFormatter
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.CreateSignature*
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: CreateSignature
  nameWithType: RSAPKCS1SignatureFormatter.CreateSignature
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: RSAPKCS1SignatureFormatter.SetHashAlgorithm
- uid: System.Security.Cryptography.RSAPKCS1SignatureFormatter.SetKey*
  parent: System.Security.Cryptography.RSAPKCS1SignatureFormatter
  isExternal: false
  name: SetKey
  nameWithType: RSAPKCS1SignatureFormatter.SetKey
