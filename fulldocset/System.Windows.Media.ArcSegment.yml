### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.ArcSegment
  id: ArcSegment
  children:
  - System.Windows.Media.ArcSegment.#ctor
  - System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  - System.Windows.Media.ArcSegment.Clone
  - System.Windows.Media.ArcSegment.CloneCurrentValue
  - System.Windows.Media.ArcSegment.CreateInstanceCore
  - System.Windows.Media.ArcSegment.IsLargeArc
  - System.Windows.Media.ArcSegment.IsLargeArcProperty
  - System.Windows.Media.ArcSegment.Point
  - System.Windows.Media.ArcSegment.PointProperty
  - System.Windows.Media.ArcSegment.RotationAngle
  - System.Windows.Media.ArcSegment.RotationAngleProperty
  - System.Windows.Media.ArcSegment.Size
  - System.Windows.Media.ArcSegment.SizeProperty
  - System.Windows.Media.ArcSegment.SweepDirection
  - System.Windows.Media.ArcSegment.SweepDirectionProperty
  langs:
  - csharp
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
  type: Class
  summary: "Representa um arco elíptica entre dois pontos."
  remarks: "Utilize um <xref:System.Windows.Media.PathFigure>objeto para armazenar objetos ArcSegment e outros segmentos.</xref:System.Windows.Media.PathFigure>       Um arco elíptica é definido pela respetiva pontos inicial e final, x - e y-radius, eixo x rotação fator de um valor que indica se o arco deve ser superior a 180 graus e um valor que descrevem a direção em que o arco é desenhado. A classe de ArcSegment não contém uma propriedade para o ponto de partida de arco; apenas define o ponto de destino de arco representa. O ponto de início do arco é o ponto de atual do <xref:System.Windows.Media.PathFigure>que é adicionado o ArcSegment.</xref:System.Windows.Media.PathFigure>       As ilustrações seguintes demonstram o ponto final diferente, <xref:System.Windows.Media.ArcSegment.Size%2A>, e <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>definições.</xref:System.Windows.Media.ArcSegment.RotationAngle%2A> </xref:System.Windows.Media.ArcSegment.Size%2A>       ![ArcSegments com diferentes definições de ponto](~/add/media/arcsegment-point.png &quot;ArcSegments com diferentes definições de ponto&quot;)![ArcSegments com diferentes definições de tamanho](~/add/media/arcsegment-size.png &quot;ArcSegments com diferentes definições de tamanho&quot;)![ArcSegments com diferentes definições de RotationAngle](~/add/media/arcsegment-rotationangle.png &quot;ArcSegments com diferentes definições de RotationAngle&quot;) # # IsLargeArc e SweepDirection para a maioria das arcos de um determinado posição, o tamanho e a rotação, existem quatro arcos diferentes que podem ser desenhados; o <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>Propriedades indicam qual arco a utilizar.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>                     De sweeps de arco em quatro candidato, dois representam grandes arcos com sweeps igual ou superior a 180 graus e dois representam arcos mais pequenos com sweeps 180 graus ou menos. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>é **verdadeiro**, então, um de dois sweeps arco maior é escolhido; caso contrário, se é **falso**, um do arco de menor sweeps é escolhido.</xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> Candidatos de arco dois em restantes são cada desenhados uma direção diferentes: <xref:System.Windows.Media.SweepDirection>ou <xref:System.Windows.Media.SweepDirection>.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> O <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>propriedade especifica qual delas utilizar.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       As ilustrações seguintes mostram diferentes <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>definições.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       ![ArcSegments com diferentes definições de IsLargeArc](~/add/media/arcsegment-islargearc.png &quot;ArcSegments com diferentes definições de IsLargeArc&quot;) ArcSegment objetos com diferentes definições de IsLargeArc ![ArcSegments com diferentes definições de SweepDirection](~/add/media/arcsegment-sweepdirection.png &quot;ArcSegments com diferentes definições de SweepDirection&quot;) ArcSegment objetos com diferentes definições de SweepDirection # # Freezable ArcSegment um de funcionalidades é um tipo de <xref:System.Windows.Freezable>objeto.</xref:System.Windows.Freezable> Para obter informações sobre <xref:System.Windows.Freezable>funcionalidades, como freezing e a clonagem, consulte o [descrição geral de objetos Freezable](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Freezable>"
  syntax:
    content: 'public sealed class ArcSegment : System.Windows.Media.PathSegment'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.PathSegment
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.PathSegment.IsSmoothJoin
  - System.Windows.Media.PathSegment.IsSmoothJoinProperty
  - System.Windows.Media.PathSegment.IsStroked
  - System.Windows.Media.PathSegment.IsStrokedProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor
  id: '#ctor'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> classe."
  remarks: "O <xref:System.Windows.Media.ArcSegment>classe define o ponto de destino de arco representa; o ponto de início do arco é o ponto atual do <xref:System.Windows.Media.PathFigure>, a qual o <xref:System.Windows.Media.ArcSegment>é adicionado.</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       Para mais elíptica arcos de um determinado posição, o tamanho e a rotação, existem quatro arcos diferentes que podem ser desenhados; o `largeArc` e `sweepDirection` parâmetros indicam qual arco a utilizar.       De sweeps de arco em quatro candidato, dois representam grandes arcos com sweeps igual ou superior a 180 graus e dois representam arcos mais pequenos com sweeps 180 graus ou menos. Se `largeArc` é **verdadeiro**, então, um de dois sweeps arco maior é escolhido; caso contrário, se `largeArc` é **falso**, um do arco de menor sweeps é escolhido.       Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection>, o arco é desenhado uma direção de ângulo positivos.</xref:System.Windows.Media.SweepDirection> Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection>, o arco é desenhado uma direção de ângulo negativo.</xref:System.Windows.Media.SweepDirection>"
  syntax:
    content: public ArcSegment ();
    parameters: []
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  id: '#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> classe."
  remarks: "O <xref:System.Windows.Media.ArcSegment>classe define o ponto de destino de arco representa; o ponto de início do arco é o ponto atual do <xref:System.Windows.Media.PathFigure>, a qual o <xref:System.Windows.Media.ArcSegment>é adicionado.</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       Para mais elíptica arcos de um determinado posição, o tamanho e a rotação, existem quatro arcos diferentes que podem ser desenhados; o `largeArc` e `sweepDirection` parâmetros indicam qual arco a utilizar.       De sweeps de arco em quatro candidato, dois representam grandes arcos com sweeps igual ou superior a 180 graus e dois representam arcos mais pequenos com sweeps 180 graus ou menos. Se `largeArc` é **verdadeiro**, então, um de dois sweeps arco maior é escolhido; caso contrário, se `largeArc` é **falso**, um do arco de menor sweeps é escolhido.       Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection>, o arco é desenhado uma direção de ângulo positivos.</xref:System.Windows.Media.SweepDirection> Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection>, o arco é desenhado uma direção de ângulo negativo.</xref:System.Windows.Media.SweepDirection>"
  syntax:
    content: public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "O ponto de destino de arco; o ponto de início do arco está definido como o ponto de atual o <xref href=&quot;System.Windows.Media.PathFigure&quot;> </xref> ao qual o <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> é adicionado."
    - id: size
      type: System.Windows.Size
      description: "X - e y-raio do arco. O radius x é especificado pelo <xref href=&quot;System.Windows.Size&quot;> </xref> da estrutura <> </> *> propriedade e o radius y especificada pelo <xref href=&quot;System.Windows.Size&quot;> </xref> da estrutura <> </> *> propriedade."
    - id: rotationAngle
      type: System.Double
      description: "A rotação do eixo x de elipse."
    - id: isLargeArc
      type: System.Boolean
      description: "Indica se o arco deve ser superior a 180 graus."
    - id: sweepDirection
      type: System.Windows.Media.SweepDirection
      description: "Definido como <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> para desenhar o arco num positivos ângulo direção; definido como <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> para desenhar o arco na direção de um ângulo negativo."
    - id: isStroked
      type: System.Boolean
      description: "Definido como `true` para stroke o arco quando um <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> é utilizado para compor o segmento; caso contrário, `false`."
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Clone
  id: Clone
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref>, efetuar cópias profundas de valores deste objeto. Quando copiar propriedades de dependência, este método copia enlaces de referências e os dados de recursos (mas já não poderão resolver), mas não animações ou os respetivos valores atuais."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada por uma implementação com tipo seguro.       Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.ArcSegment Clone ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.ArcSegment.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> objeto, tornando profundas cópias dos valores atuais deste objeto. As referências de recurso, enlaces de dados e animações não são copiadas, mas são os seus valores atuais."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada por uma implementação com tipo seguro.       Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.ArcSegment CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.ArcSegment.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "A adicionar."
  overload: System.Windows.Media.ArcSegment.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  id: IsLargeArc
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Obtém ou define um valor que indica se o arco em deve ser superior a 180 graus."
  remarks: "Para a maioria das arcos de um determinado posição, o tamanho e a rotação, existem quatro arcos diferentes que podem ser desenhados; o IsLargeArc e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>Propriedades indicam qual arco a utilizar.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       De sweeps de arco em quatro candidato, dois representam grandes arcos com sweeps igual ou superior a 180 graus e dois representam arcos mais pequenos com sweeps 180 graus ou menos. Se IsLargeArc **verdadeiro**, então, um de dois sweeps arco maior é escolhido; caso contrário, se é **falso**, um do arco de menor sweeps é escolhido. Candidatos de arco dois em restantes são cada desenhados uma direção diferentes: <xref:System.Windows.Media.SweepDirection>ou <xref:System.Windows.Media.SweepDirection>.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> O <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>propriedade especifica qual delas utilizar.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       A seguinte ilustração mostra duas arcos elíptica idênticas, à exceção as respetivas definições IsLargeArc.       ![ArcSegments com diferentes definições de IsLargeArc](~/add/media/arcsegment-islargearc.png &quot;ArcSegments com diferentes definições de IsLargeArc&quot;) ArcSegment objetos com diferentes definições de IsLargeArc <a name=&quot;dependencyPropertyInfo_IsLargeArc&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|   | Definir propriedades de metadados **verdadeiro**| Nenhum |</xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>"
  syntax:
    content: public bool IsLargeArc { get; set; }
    return:
      type: System.Boolean
      description: '**Verdadeiro** se o arco em deve ser superior a 180 graus; caso contrário, **falso**. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.'
  overload: System.Windows.Media.ArcSegment.IsLargeArc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  id: IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica o <xref:System.Windows.Media.ArcSegment.IsLargeArc*>propriedade de dependência.</xref:System.Windows.Media.ArcSegment.IsLargeArc*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsLargeArcProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Point
  id: Point
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Obtém ou define o ponto final do arco elíptica."
  remarks: "O <xref:System.Windows.Media.ArcSegment>classe define o ponto de destino de arco representa; o ponto de início do arco é o ponto de atual do <xref:System.Windows.Media.PathFigure>ao qual o <xref:System.Windows.Media.ArcSegment>é adicionado.</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       Se o segmento de arco em ponto de início e ponto final forem iguais, sem arco é desenhado.       Para a maioria das arcos de um determinado posição, o tamanho e a rotação, existem quatro arcos diferentes que podem ser desenhados; o <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>Propriedades indicam qual arco a utilizar.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       De sweeps de arco em quatro candidato, dois representam grandes arcos com sweeps igual ou superior a 180 graus e dois representam arcos mais pequenos com sweeps 180 graus ou menos. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>é **verdadeiro**, então, um de dois sweeps arco maior é escolhido; caso contrário, se é **falso**, um do arco de menor sweeps é escolhido.</xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> Candidatos de arco dois em restantes são cada desenhados uma direção diferentes: <xref:System.Windows.Media.SweepDirection>ou <xref:System.Windows.Media.SweepDirection>.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> O <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>propriedade especifica qual delas utilizar.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       A ilustração seguinte mostra várias arcos elíptica idênticas, à exceção as definições de ponto.       ![ArcSegments com diferentes definições de ponto](~/add/media/arcsegment-point.png &quot;ArcSegments com diferentes definições de ponto&quot;) ArcSegment vários objetos com diferentes definições de ponto <a name=&quot;dependencyPropertyInfo_Point&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.ArcSegment.PointProperty>|   | Definir propriedades de metadados **verdadeiro**| Nenhum |</xref:System.Windows.Media.ArcSegment.PointProperty>"
  syntax:
    content: public System.Windows.Point Point { get; set; }
    return:
      type: System.Windows.Point
      description: "O ponto de que o arco é desenhado. O valor predefinido é (0,0)."
  overload: System.Windows.Media.ArcSegment.Point*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.PointProperty
  id: PointProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica o <xref:System.Windows.Media.ArcSegment.Point*>propriedade de dependência.</xref:System.Windows.Media.ArcSegment.Point*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PointProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngle
  id: RotationAngle
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Obtém ou define a quantidade (em graus) através do qual será rodada elipse sobre o eixo x."
  remarks: "A ilustração seguinte mostra várias arcos elíptica idênticas, à exceção as respetivas definições RotationAngle.       ![ArcSegments com diferentes definições de RotationAngle](~/add/media/arcsegment-rotationangle.png &quot;ArcSegments com diferentes definições de RotationAngle&quot;) ArcSegment vários objetos com diferentes definições de RotationAngle tenha em atenção que, se o arco largura e altura forem iguais, definir esta propriedade não tem qualquer efeito.      <a name=&quot;dependencyPropertyInfo_RotationAngle&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|   | Definir propriedades de metadados **verdadeiro**| Nenhum |</xref:System.Windows.Media.ArcSegment.RotationAngleProperty>"
  syntax:
    content: public double RotationAngle { get; set; }
    return:
      type: System.Double
      description: "A quantidade (em graus) através do qual será rodada elipse sobre o eixo x. O valor predefinido é 0."
  overload: System.Windows.Media.ArcSegment.RotationAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  id: RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica o <xref:System.Windows.Media.ArcSegment.RotationAngle*>propriedade de dependência.</xref:System.Windows.Media.ArcSegment.RotationAngle*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RotationAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Size
  id: Size
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Obtém ou define o radius x e y de arco como um <xref href=&quot;System.Windows.Size&quot;> </xref> estrutura."
  remarks: "A ilustração seguinte mostra várias arcos elíptica idênticas, à exceção as respetivas definições de tamanho.       ![ArcSegments com diferentes definições de tamanho](~/add/media/arcsegment-size.png &quot;ArcSegments com diferentes definições de tamanho&quot;) ArcSegment vários objetos com diferentes definições de tamanho <a name=&quot;dependencyPropertyInfo_Size&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.ArcSegment.SizeProperty>|   | Definir propriedades de metadados **verdadeiro**| Nenhum |</xref:System.Windows.Media.ArcSegment.SizeProperty>"
  syntax:
    content: public System.Windows.Size Size { get; set; }
    return:
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;> </xref> estrutura que descreve o raio x e y do arco elíptica. O <xref href=&quot;System.Windows.Size&quot;> </xref> da estrutura <> </> *> propriedade especifica x-radius o arco; <> </> *> propriedade especifica y-radius o arco. O valor predefinido é 0,0."
  overload: System.Windows.Media.ArcSegment.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SizeProperty
  id: SizeProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica o <xref:System.Windows.Media.ArcSegment.Size*>propriedade de dependência.</xref:System.Windows.Media.ArcSegment.Size*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SizeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirection
  id: SweepDirection
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Obtém ou define um valor que especifica se o arco é desenhado <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> ou <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> direção."
  remarks: "Para um <xref:System.Windows.Media.ArcSegment>com uma determinada <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, ponto inicial e final <xref:System.Windows.Media.ArcSegment.Point%2A>, quatro arcos diferentes são possíveis.</xref:System.Windows.Media.ArcSegment.Point%2A> </xref:System.Windows.Media.ArcSegment.RotationAngle%2A> </xref:System.Windows.Media.ArcSegment.Size%2A> </xref:System.Windows.Media.ArcSegment> Especificar o <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>propriedade reduz o número de arcos possíveis para duas: um arco desenhado a partir do ponto de início ao fim <xref:System.Windows.Media.ArcSegment.Point%2A>num <xref:System.Windows.Media.SweepDirection>direção e um arco desenhada a partir do ponto de início para o ponto final num <xref:System.Windows.Media.SweepDirection>direção.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.ArcSegment.Point%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       A seguinte ilustração mostra duas arcos elíptica idênticas, à exceção as respetivas definições SweepDirection.       ![ArcSegments com diferentes definições de SweepDirection](~/add/media/arcsegment-sweepdirection.png &quot;ArcSegments com diferentes definições de SweepDirection&quot;) ArcSegment objetos com diferentes definições de SweepDirection <a name=&quot;dependencyPropertyInfo_SweepDirection&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|   | Definir propriedades de metadados **verdadeiro**| Nenhum |</xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>"
  syntax:
    content: public System.Windows.Media.SweepDirection SweepDirection { get; set; }
    return:
      type: System.Windows.Media.SweepDirection
      description: "Um valor que especifica a direcção em que o arco é desenhado. O valor predefinido é <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref>."
  overload: System.Windows.Media.ArcSegment.SweepDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  id: SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica o <xref:System.Windows.Media.ArcSegment.SweepDirection*>propriedade de dependência.</xref:System.Windows.Media.ArcSegment.SweepDirection*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SweepDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.PathSegment
  isExternal: false
  name: System.Windows.Media.PathSegment
- uid: System.Windows.Media.ArcSegment.#ctor
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.SweepDirection
  parent: System.Windows.Media
  isExternal: false
  name: SweepDirection
  nameWithType: SweepDirection
  fullName: System.Windows.Media.SweepDirection
- uid: System.Windows.Media.ArcSegment.Clone
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
- uid: System.Windows.Media.ArcSegment
  parent: System.Windows.Media
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.ArcSegment.Point
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.PointProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
- uid: System.Windows.Media.ArcSegment.RotationAngle
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
- uid: System.Windows.Media.ArcSegment.Size
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SizeProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
- uid: System.Windows.Media.ArcSegment.SweepDirection
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
- uid: System.Windows.Media.ArcSegment.#ctor*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment.ArcSegment
- uid: System.Windows.Media.ArcSegment.Clone*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone
  nameWithType: ArcSegment.Clone
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ArcSegment.CloneCurrentValue
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ArcSegment.CreateInstanceCore
- uid: System.Windows.Media.ArcSegment.IsLargeArc*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.Point*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.RotationAngle*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.Size*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SweepDirection*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
