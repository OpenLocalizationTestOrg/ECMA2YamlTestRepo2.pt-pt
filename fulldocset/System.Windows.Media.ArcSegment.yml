### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.ArcSegment
  id: ArcSegment
  children:
  - System.Windows.Media.ArcSegment.#ctor
  - System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  - System.Windows.Media.ArcSegment.Clone
  - System.Windows.Media.ArcSegment.CloneCurrentValue
  - System.Windows.Media.ArcSegment.CreateInstanceCore
  - System.Windows.Media.ArcSegment.IsLargeArc
  - System.Windows.Media.ArcSegment.IsLargeArcProperty
  - System.Windows.Media.ArcSegment.Point
  - System.Windows.Media.ArcSegment.PointProperty
  - System.Windows.Media.ArcSegment.RotationAngle
  - System.Windows.Media.ArcSegment.RotationAngleProperty
  - System.Windows.Media.ArcSegment.Size
  - System.Windows.Media.ArcSegment.SizeProperty
  - System.Windows.Media.ArcSegment.SweepDirection
  - System.Windows.Media.ArcSegment.SweepDirectionProperty
  langs:
  - csharp
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
  type: Class
  summary: "Represents an elliptical arc between two points."
  remarks: "Use a <xref:System.Windows.Media.PathFigure> object to store ArcSegment objects and other segments.       An elliptical arc is defined by its start and end points, x- and y-radius, x-axis rotation factor, a value indicating whether the arc should be greater than 180 degrees, and a value describing the direction in which the arc is drawn. The ArcSegment class does not contain a property for the starting point of the arc; it only defines the destination point of the arc it represents. The beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the ArcSegment is added.       The following illustrations demonstrate the different end point, <xref:System.Windows.Media.ArcSegment.Size%2A>, and <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> settings.       ![ArcSegments with different Point settings](~/add/media/arcsegment-point.png &quot;ArcSegments with different Point settings&quot;)       ![ArcSegments with different Size settings](~/add/media/arcsegment-size.png &quot;ArcSegments with different Size settings&quot;)       ![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png &quot;ArcSegments with different RotationAngle settings&quot;)      ## IsLargeArc and SweepDirection    For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.       The following illustrations show different <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> settings.       ![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png &quot;ArcSegments with different IsLargeArc settings&quot;)   ArcSegment objects with different IsLargeArc settings       ![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png &quot;ArcSegments with different SweepDirection settings&quot;)   ArcSegment objects with different SweepDirection settings      ## Freezable Features    An ArcSegment is a type of <xref:System.Windows.Freezable> object. For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public sealed class ArcSegment : System.Windows.Media.PathSegment'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.PathSegment
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.PathSegment.IsSmoothJoin
  - System.Windows.Media.PathSegment.IsSmoothJoinProperty
  - System.Windows.Media.PathSegment.IsStroked
  - System.Windows.Media.PathSegment.IsStrokedProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor
  id: '#ctor'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref> class."
  remarks: "The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added.       For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen.       If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction. If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction."
  syntax:
    content: public ArcSegment ();
    parameters: []
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  id: '#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref> class."
  remarks: "The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure>, to which the <xref:System.Windows.Media.ArcSegment> is added.       For most elliptical arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the `largeArc` and `sweepDirection` parameters indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If `largeArc` is **true**, then one of the two larger arc sweeps is chosen; otherwise, if `largeArc` is **false**, one of the smaller arc sweeps is chosen.       If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a positive-angle direction. If `sweepDirection` is <xref:System.Windows.Media.SweepDirection>, the arc is drawn in a negative-angle direction."
  syntax:
    content: public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "The destination point of the arc; the start point of the arc is defined as the current point of the <xref href=&quot;System.Windows.Media.PathFigure&quot;></xref> to which the <xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref> is added."
    - id: size
      type: System.Windows.Size
      description: "The x- and y-radius of the arc. The x-radius is specified by the <xref href=&quot;System.Windows.Size&quot;></xref> structure&quot;s <xref:System.Windows.Size.Width*> property, and the y-radius is specified by the <xref href=&quot;System.Windows.Size&quot;></xref> structure&quot;s <xref:System.Windows.Size.Height*> property."
    - id: rotationAngle
      type: System.Double
      description: "The x-axis rotation of the ellipse."
    - id: isLargeArc
      type: System.Boolean
      description: "Whether the arc should be greater than 180 degrees."
    - id: sweepDirection
      type: System.Windows.Media.SweepDirection
      description: "Set to <xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref> to draw the arc in a positive angle direction; set to <xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref> to draw the arc in a negative angle direction."
    - id: isStroked
      type: System.Boolean
      description: "Set to `true` to stroke the arc when a <xref href=&quot;System.Windows.Media.Pen&quot;></xref> is used to render the segment; otherwise, `false`."
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Clone
  id: Clone
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref>, making deep copies of this object&quot;s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.ArcSegment Clone ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.ArcSegment.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.ArcSegment&quot;></xref> object, making deep copies of this object&quot;s current values. Resource references, data bindings, and animations are not copied, but their current values are."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.ArcSegment CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.ArcSegment.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "To be added."
  overload: System.Windows.Media.ArcSegment.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  id: IsLargeArc
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets a value that indicates whether the arc should be greater than 180 degrees."
  remarks: "For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  IsLargeArc and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If IsLargeArc is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.       The following illustration shows two elliptical arcs that are identical except for their IsLargeArc settings.       ![ArcSegments with different IsLargeArc settings](~/add/media/arcsegment-islargearc.png &quot;ArcSegments with different IsLargeArc settings&quot;)   ArcSegment objects with different IsLargeArc settings      <a name=&quot;dependencyPropertyInfo_IsLargeArc&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|   |Metadata properties set to **true**|None|"
  syntax:
    content: public bool IsLargeArc { get; set; }
    return:
      type: System.Boolean
      description: '**true** if the arc should be greater than 180 degrees; otherwise, **false**. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.'
  overload: System.Windows.Media.ArcSegment.IsLargeArc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  id: IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.ArcSegment.IsLargeArc*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsLargeArcProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Point
  id: Point
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the endpoint of the elliptical arc."
  remarks: "The <xref:System.Windows.Media.ArcSegment> class defines only the destination point of the arc it represents; the beginning point of the arc is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.ArcSegment> is added.       If the arc segment&quot;s start point and end point are the same, no arc is drawn.       For most arcs of a particular position, size, and rotation, there are four different arcs that can be drawn; the  <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> and <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> properties indicate which arc to use.       Of the four candidate arc sweeps, two represent large arcs with sweeps of 180 degrees or greater, and two represent smaller arcs with sweeps 180 degrees or less. If <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> is **true**, then one of the two larger arc sweeps is chosen; otherwise, if  is **false**, one of the smaller arc sweeps is chosen. The remaining two arc candidates are each drawn in a different direction: <xref:System.Windows.Media.SweepDirection> or <xref:System.Windows.Media.SweepDirection>. The <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> property specifies which one to use.       The following illustration shows several elliptical arcs that are identical except for their Point settings.       ![ArcSegments with different Point settings](~/add/media/arcsegment-point.png &quot;ArcSegments with different Point settings&quot;)   Several ArcSegment objects with different Point settings      <a name=&quot;dependencyPropertyInfo_Point&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.PointProperty>|   |Metadata properties set to **true**|None|"
  syntax:
    content: public System.Windows.Point Point { get; set; }
    return:
      type: System.Windows.Point
      description: "The point to which the arc is drawn. The default value is (0,0)."
  overload: System.Windows.Media.ArcSegment.Point*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.PointProperty
  id: PointProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.ArcSegment.Point*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PointProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngle
  id: RotationAngle
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis."
  remarks: "The following illustration shows several elliptical arcs that are identical except for their RotationAngle settings.       ![ArcSegments with different RotationAngle settings](~/add/media/arcsegment-rotationangle.png &quot;ArcSegments with different RotationAngle settings&quot;)   Several ArcSegment objects with different RotationAngle settings       Note that, if the arc&quot;s width and height are the same, setting this property has no effect.      <a name=&quot;dependencyPropertyInfo_RotationAngle&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|   |Metadata properties set to **true**|None|"
  syntax:
    content: public double RotationAngle { get; set; }
    return:
      type: System.Double
      description: "The amount (in degrees) by which the ellipse is rotated about the x-axis. The default value is 0."
  overload: System.Windows.Media.ArcSegment.RotationAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  id: RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the  <xref:System.Windows.Media.ArcSegment.RotationAngle*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty RotationAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Size
  id: Size
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the x- and y-radius of the arc as a <xref href=&quot;System.Windows.Size&quot;></xref> structure."
  remarks: "The following illustration shows several elliptical arcs that are identical except for their Size settings.       ![ArcSegments with different Size settings](~/add/media/arcsegment-size.png &quot;ArcSegments with different Size settings&quot;)   Several ArcSegment objects with different Size settings      <a name=&quot;dependencyPropertyInfo_Size&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.SizeProperty>|   |Metadata properties set to **true**|None|"
  syntax:
    content: public System.Windows.Size Size { get; set; }
    return:
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;></xref> structure that describes the x- and y-radius of the elliptical arc. The <xref href=&quot;System.Windows.Size&quot;></xref> structure&quot;s <xref:System.Windows.Size.Width*> property specifies the arc&quot;s x-radius; its <xref:System.Windows.Size.Height*> property specifies the arc&quot;s y-radius. The default value is 0,0."
  overload: System.Windows.Media.ArcSegment.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SizeProperty
  id: SizeProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.ArcSegment.Size*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty SizeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirection
  id: SweepDirection
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets a value that specifies whether the arc is drawn in the <xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref> or <xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref> direction."
  remarks: "For an <xref:System.Windows.Media.ArcSegment> with a given <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, start point, and end <xref:System.Windows.Media.ArcSegment.Point%2A>, four different arcs are possible. Specifying the <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> property reduces the number of possible arcs to two: an arc drawn from the start point to the end <xref:System.Windows.Media.ArcSegment.Point%2A> in a <xref:System.Windows.Media.SweepDirection> direction and an arc drawn from the start point to the end point in a <xref:System.Windows.Media.SweepDirection> direction.       The following illustration shows two elliptical arcs that are identical except for their SweepDirection settings.       ![ArcSegments with different SweepDirection settings](~/add/media/arcsegment-sweepdirection.png &quot;ArcSegments with different SweepDirection settings&quot;)   ArcSegment objects with different SweepDirection settings      <a name=&quot;dependencyPropertyInfo_SweepDirection&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|   |Metadata properties set to **true**|None|"
  syntax:
    content: public System.Windows.Media.SweepDirection SweepDirection { get; set; }
    return:
      type: System.Windows.Media.SweepDirection
      description: "A value that specifies the direction in which the arc is drawn. The default value is <xref href=&quot;System.Windows.Media.SweepDirection&quot;></xref>."
  overload: System.Windows.Media.ArcSegment.SweepDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  id: SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.ArcSegment.SweepDirection*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty SweepDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.PathSegment
  isExternal: false
  name: System.Windows.Media.PathSegment
- uid: System.Windows.Media.ArcSegment.#ctor
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.SweepDirection
  parent: System.Windows.Media
  isExternal: false
  name: SweepDirection
  nameWithType: SweepDirection
  fullName: System.Windows.Media.SweepDirection
- uid: System.Windows.Media.ArcSegment.Clone
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
- uid: System.Windows.Media.ArcSegment
  parent: System.Windows.Media
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.ArcSegment.Point
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.PointProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
- uid: System.Windows.Media.ArcSegment.RotationAngle
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
- uid: System.Windows.Media.ArcSegment.Size
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SizeProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
- uid: System.Windows.Media.ArcSegment.SweepDirection
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
- uid: System.Windows.Media.ArcSegment.#ctor*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment.ArcSegment
- uid: System.Windows.Media.ArcSegment.Clone*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone
  nameWithType: ArcSegment.Clone
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ArcSegment.CloneCurrentValue
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ArcSegment.CreateInstanceCore
- uid: System.Windows.Media.ArcSegment.IsLargeArc*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.Point*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.RotationAngle*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.Size*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SweepDirection*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
