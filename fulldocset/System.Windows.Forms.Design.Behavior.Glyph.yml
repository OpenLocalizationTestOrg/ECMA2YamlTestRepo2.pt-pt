### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Design.Behavior.Glyph
  id: Glyph
  children:
  - System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)
  - System.Windows.Forms.Design.Behavior.Glyph.Behavior
  - System.Windows.Forms.Design.Behavior.Glyph.Bounds
  - System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)
  - System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)
  langs:
  - csharp
  name: Glyph
  nameWithType: Glyph
  fullName: System.Windows.Forms.Design.Behavior.Glyph
  type: Class
  summary: "Represents a single user interface (UI) entity managed by an <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot;></see>."
  remarks: "The sole purpose of a Glyph is to paint and hit test. A Glyph does not have a window handle (HWND), as it is rendered on the adorner window control of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Each Glyph can have a <xref:System.Windows.Forms.Design.Behavior.Behavior> associated with it. A successfully hit-tested Glyph has the opportunity to push a new or different <xref:System.Windows.Forms.Design.Behavior.Behavior> onto the behavior stack of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.       For more information, see [Behavior Service Overview](../Topic/Behavior%20Service%20Overview.md)."
  example:
  - "The following example demonstrates how to create your own Glyph based class with <xref:System.Windows.Forms.Design.Behavior.Behavior> associated with it. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  \n  \n [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/add/codesnippet/CPP/t-system.windows.forms.d_35_1.cpp)]\n [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/add/codesnippet/VisualBasic/t-system.windows.forms.d_35_1.vb)]\n [!code-cs[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/add/codesnippet/CSharp/t-system.windows.forms.d_35_1.cs)]"
  syntax:
    content: public abstract class Glyph
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)
  id: '#ctor(System.Windows.Forms.Design.Behavior.Behavior)'
  parent: System.Windows.Forms.Design.Behavior.Glyph
  langs:
  - csharp
  name: Glyph(Behavior)
  nameWithType: Glyph.Glyph(Behavior)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Glyph(Behavior)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design.Behavior
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot;></see> class."
  remarks: ''
  example:
  - "The following example demonstrates how to initialize a new instance of the <xref:System.Windows.Forms.Design.Behavior.Glyph> class. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  \n  \n [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/add/codesnippet/CPP/1583fdc7-88d1-4bb3-aaa8-_1.cpp)]\n [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/add/codesnippet/VisualBasic/1583fdc7-88d1-4bb3-aaa8-_1.vb)]\n [!code-cs[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/add/codesnippet/CSharp/1583fdc7-88d1-4bb3-aaa8-_1.cs)]"
  syntax:
    content: protected Glyph (System.Windows.Forms.Design.Behavior.Behavior behavior);
    parameters:
    - id: behavior
      type: System.Windows.Forms.Design.Behavior.Behavior
      description: "The  associated with the . Can be ."
  overload: System.Windows.Forms.Design.Behavior.Glyph.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.Design.Behavior.Glyph.Behavior
  id: Behavior
  parent: System.Windows.Forms.Design.Behavior.Glyph
  langs:
  - csharp
  name: Behavior
  nameWithType: Glyph.Behavior
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Behavior
  type: Property
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design.Behavior
  summary: "Gets the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot;></see> associated with the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot;></see>."
  syntax:
    content: public virtual System.Windows.Forms.Design.Behavior.Behavior Behavior { get; }
    return:
      type: System.Windows.Forms.Design.Behavior.Behavior
      description: "The <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot;></see> associated with the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot;></see>, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no behavior."
  overload: System.Windows.Forms.Design.Behavior.Glyph.Behavior*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.Design.Behavior.Glyph.Bounds
  id: Bounds
  parent: System.Windows.Forms.Design.Behavior.Glyph
  langs:
  - csharp
  name: Bounds
  nameWithType: Glyph.Bounds
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Bounds
  type: Property
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design.Behavior
  summary: "Gets the bounds of the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot;></see>."
  remarks: ''
  example:
  - "The following example demonstrates how to override the Bounds to create a glyph with the specific dimensions and position. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  \n  \n [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#8](~/add/codesnippet/CPP/p-system.windows.forms.d_204_1.cpp)]\n [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#8](~/add/codesnippet/VisualBasic/p-system.windows.forms.d_204_1.vb)]\n [!code-cs[System.Windows.Forms.Design.Behavior.BehaviorService#8](~/add/codesnippet/CSharp/p-system.windows.forms.d_204_1.cs)]"
  syntax:
    content: public virtual System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <see cref=&quot;T:System.Drawing.Rectangle&quot;></see> representing the bounds of the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot;></see>."
  overload: System.Windows.Forms.Design.Behavior.Glyph.Bounds*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)
  id: GetHitTest(System.Drawing.Point)
  parent: System.Windows.Forms.Design.Behavior.Glyph
  langs:
  - csharp
  name: GetHitTest(Point)
  nameWithType: Glyph.GetHitTest(Point)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(Point)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design.Behavior
  summary: "Provides hit test logic."
  remarks: "The GetHitTest method is an `abstract` method that forces <xref:System.Windows.Forms.Design.Behavior.Glyph> implementations to provide hit test logic. Given any point, if the <xref:System.Windows.Forms.Design.Behavior.Glyph> has decided to be involved with that location, it will need to return a valid <xref:System.Windows.Forms.Cursor>. Otherwise, returning `null` will cause the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> to ignore the location."
  example:
  - "The following example demonstrates how to override the GetHitTest to see if the point is within this glyph. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  \n  \n [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#9](~/add/codesnippet/CPP/m-system.windows.forms.d_28_1.cpp)]\n [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#9](~/add/codesnippet/VisualBasic/m-system.windows.forms.d_28_1.vb)]\n [!code-cs[System.Windows.Forms.Design.Behavior.BehaviorService#9](~/add/codesnippet/CSharp/m-system.windows.forms.d_28_1.cs)]"
  syntax:
    content: public abstract System.Windows.Forms.Cursor GetHitTest (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A point to hit-test."
    return:
      type: System.Windows.Forms.Cursor
      description: "To be added."
  overload: System.Windows.Forms.Design.Behavior.Glyph.GetHitTest*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)
  id: Paint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Design.Behavior.Glyph
  langs:
  - csharp
  name: Paint(PaintEventArgs)
  nameWithType: Glyph.Paint(PaintEventArgs)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Paint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design.Behavior
  summary: "Provides paint logic."
  remarks: "The Paint method is an `abstract` method that forces <xref:System.Windows.Forms.Design.Behavior.Glyph> implementations to provide paint logic. The `pe` parameter contains the <xref:System.Drawing.Graphics> related to the adorner window of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>."
  example:
  - "The following example demonstrates how to override the Paint to draw a glyph. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  \n  \n [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#10](~/add/codesnippet/CPP/97a40805-5896-47e0-9f24-_1.cpp)]\n [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#10](~/add/codesnippet/VisualBasic/97a40805-5896-47e0-9f24-_1.vb)]\n [!code-cs[System.Windows.Forms.Design.Behavior.BehaviorService#10](~/add/codesnippet/CSharp/97a40805-5896-47e0-9f24-_1.cs)]"
  syntax:
    content: public abstract void Paint (System.Windows.Forms.PaintEventArgs pe);
    parameters:
    - id: pe
      type: System.Windows.Forms.PaintEventArgs
      description: "A  that contains the event data."
  overload: System.Windows.Forms.Design.Behavior.Glyph.Paint*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)
  id: SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)
  parent: System.Windows.Forms.Design.Behavior.Glyph
  langs:
  - csharp
  name: SetBehavior(Behavior)
  nameWithType: Glyph.SetBehavior(Behavior)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(Behavior)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design.Behavior
  summary: "Changes the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot;></see> associated with the <see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot;></see>."
  syntax:
    content: protected void SetBehavior (System.Windows.Forms.Design.Behavior.Behavior behavior);
    parameters:
    - id: behavior
      type: System.Windows.Forms.Design.Behavior.Behavior
      description: "A  to associate with the ."
  overload: System.Windows.Forms.Design.Behavior.Glyph.SetBehavior*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Glyph(Behavior)
  nameWithType: Glyph.Glyph(Behavior)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Glyph(Behavior)
- uid: System.Windows.Forms.Design.Behavior.Behavior
  parent: System.Windows.Forms.Design.Behavior
  isExternal: false
  name: Behavior
  nameWithType: Behavior
  fullName: System.Windows.Forms.Design.Behavior.Behavior
- uid: System.Windows.Forms.Design.Behavior.Glyph.Behavior
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Behavior
  nameWithType: Glyph.Behavior
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Behavior
- uid: System.Windows.Forms.Design.Behavior.Glyph.Bounds
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Bounds
  nameWithType: Glyph.Bounds
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: GetHitTest(Point)
  nameWithType: Glyph.GetHitTest(Point)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(Point)
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Paint(PaintEventArgs)
  nameWithType: Glyph.Paint(PaintEventArgs)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.Paint(PaintEventArgs)
- uid: System.Windows.Forms.PaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventArgs
  nameWithType: PaintEventArgs
  fullName: System.Windows.Forms.PaintEventArgs
- uid: System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: SetBehavior(Behavior)
  nameWithType: Glyph.SetBehavior(Behavior)
  fullName: System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(Behavior)
- uid: System.Windows.Forms.Design.Behavior.Glyph.#ctor*
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Glyph
  nameWithType: Glyph.Glyph
- uid: System.Windows.Forms.Design.Behavior.Glyph.Behavior*
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Behavior
  nameWithType: Glyph.Behavior
- uid: System.Windows.Forms.Design.Behavior.Glyph.Bounds*
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Bounds
  nameWithType: Glyph.Bounds
- uid: System.Windows.Forms.Design.Behavior.Glyph.GetHitTest*
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: GetHitTest
  nameWithType: Glyph.GetHitTest
- uid: System.Windows.Forms.Design.Behavior.Glyph.Paint*
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: Paint
  nameWithType: Glyph.Paint
- uid: System.Windows.Forms.Design.Behavior.Glyph.SetBehavior*
  parent: System.Windows.Forms.Design.Behavior.Glyph
  isExternal: false
  name: SetBehavior
  nameWithType: Glyph.SetBehavior
