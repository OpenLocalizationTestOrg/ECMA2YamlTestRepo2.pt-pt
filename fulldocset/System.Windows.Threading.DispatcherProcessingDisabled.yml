### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherProcessingDisabled
  id: DispatcherProcessingDisabled
  children:
  - System.Windows.Threading.DispatcherProcessingDisabled.Dispose
  - System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)
  - System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode
  - System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  - System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  langs:
  - csharp
  name: DispatcherProcessingDisabled
  nameWithType: DispatcherProcessingDisabled
  fullName: System.Windows.Threading.DispatcherProcessingDisabled
  type: Struct
  summary: "Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing."
  remarks: "<xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a DispatcherProcessingDisabled object when it is called.       Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.       The effects of disabling processing are as follows:      -   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally.      -   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.      -   Message processing is not permitted.       Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the DispatcherProcessingDisabled object will re-enable dispatcher processing."
  example:
  - "The following example shows how to disable dispatcher processing and re-enable dispatcher processing.  <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.  <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a DispatcherProcessingDisabled structure which is used as the object to be disposed when the **using** block finishes.  Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the DispatcherProcessingDisabled structure re-enables dispatcher processing.  \n  \n [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdisableprocessing)]\n [!code-cs[DispatcherSnippets#DispatcherDisableProcessing](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdisableprocessing)]"
  syntax:
    content: 'public struct DispatcherProcessingDisabled : IDisposable'
  inheritance:
  - System.ValueType
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherProcessingDisabled.Dispose
  id: Dispose
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  langs:
  - csharp
  name: Dispose()
  nameWithType: DispatcherProcessingDisabled.Dispose()
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Re-enables dispatcher processing."
  remarks: "Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.       The effects of disabling processing are as follows:      -   [!INCLUDE[TLA2#tla_clr#initcap](~/add/includes/tla2sharptla-clrsharpinitcap-md.md)] locks will not pump messages internally.      -   <xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.      -   Message processing is not permitted."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Threading.DispatcherProcessingDisabled.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DispatcherProcessingDisabled.Equals(Object)
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Determines whether the specified <xref href=&quot;System.Windows.Threading.DispatcherProcessingDisabled&quot;></xref> object is equal to this <xref href=&quot;System.Windows.Threading.DispatcherProcessingDisabled&quot;></xref> object."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to evaluate for equality."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified object is equal to this <xref href=&quot;System.Windows.Threading.DispatcherProcessingDisabled&quot;></xref> object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Threading.DispatcherProcessingDisabled.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode
  id: GetHashCode
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DispatcherProcessingDisabled.GetHashCode()
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Gets a hash code for this instance."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A signed 32-bit integer hash code."
  overload: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  id: op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  langs:
  - csharp
  name: op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  nameWithType: DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Determines whether two <xref href=&quot;System.Windows.Threading.DispatcherProcessingDisabled&quot;></xref> objects are equal."
  syntax:
    content: public static bool op_Equality (System.Windows.Threading.DispatcherProcessingDisabled left, System.Windows.Threading.DispatcherProcessingDisabled right);
    parameters:
    - id: left
      type: System.Windows.Threading.DispatcherProcessingDisabled
      description: "The first object to compare."
    - id: right
      type: System.Windows.Threading.DispatcherProcessingDisabled
      description: "The second object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Threading.DispatcherProcessingDisabled&quot;></xref> objects are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  id: op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  langs:
  - csharp
  name: op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  nameWithType: DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Determines whether two <xref href=&quot;System.Windows.Threading.DispatcherProcessingDisabled&quot;></xref> objects are not equal."
  syntax:
    content: public static bool op_Inequality (System.Windows.Threading.DispatcherProcessingDisabled left, System.Windows.Threading.DispatcherProcessingDisabled right);
    parameters:
    - id: left
      type: System.Windows.Threading.DispatcherProcessingDisabled
      description: "The first object to compare."
    - id: right
      type: System.Windows.Threading.DispatcherProcessingDisabled
      description: "The second object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Threading.DispatcherProcessingDisabled&quot;></xref> objects are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Threading.DispatcherProcessingDisabled.Dispose
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: Dispose()
  nameWithType: DispatcherProcessingDisabled.Dispose()
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Dispose()
- uid: System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: Equals(Object)
  nameWithType: DispatcherProcessingDisabled.Equals(Object)
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: GetHashCode()
  nameWithType: DispatcherProcessingDisabled.GetHashCode()
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  nameWithType: DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
- uid: System.Windows.Threading.DispatcherProcessingDisabled
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherProcessingDisabled
  nameWithType: DispatcherProcessingDisabled
  fullName: System.Windows.Threading.DispatcherProcessingDisabled
- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  nameWithType: DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
  fullName: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled,DispatcherProcessingDisabled)
- uid: System.Windows.Threading.DispatcherProcessingDisabled.Dispose*
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: Dispose
  nameWithType: DispatcherProcessingDisabled.Dispose
- uid: System.Windows.Threading.DispatcherProcessingDisabled.Equals*
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: Equals
  nameWithType: DispatcherProcessingDisabled.Equals
- uid: System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode*
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: GetHashCode
  nameWithType: DispatcherProcessingDisabled.GetHashCode
- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Equality*
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: op_Equality
  nameWithType: DispatcherProcessingDisabled.op_Equality
- uid: System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality*
  parent: System.Windows.Threading.DispatcherProcessingDisabled
  isExternal: false
  name: op_Inequality
  nameWithType: DispatcherProcessingDisabled.op_Inequality
