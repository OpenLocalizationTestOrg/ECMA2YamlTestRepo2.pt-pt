### YamlMime:ManagedReference
items:
- uid: System.Drawing.Rectangle
  id: Rectangle
  children:
  - System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Bottom
  - System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Contains(System.Drawing.Point)
  - System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Empty
  - System.Drawing.Rectangle.Equals(System.Object)
  - System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.GetHashCode
  - System.Drawing.Rectangle.Height
  - System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  - System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IsEmpty
  - System.Drawing.Rectangle.Left
  - System.Drawing.Rectangle.Location
  - System.Drawing.Rectangle.Offset(System.Drawing.Point)
  - System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  - System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Right
  - System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Size
  - System.Drawing.Rectangle.Top
  - System.Drawing.Rectangle.ToString
  - System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Width
  - System.Drawing.Rectangle.X
  - System.Drawing.Rectangle.Y
  langs:
  - csharp
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
  type: Struct
  summary: "Stores a set of four integers that represent the location and size of a rectangle"
  remarks: "A rectangle is defined by its <xref:System.Drawing.Rectangle.Width%2A>, <xref:System.Drawing.Rectangle.Height%2A>, and upper-left corner represented by the <xref:System.Drawing.Rectangle.Location%2A> property.       To draw rectangles, you need a <xref:System.Drawing.Graphics> object and a <xref:System.Drawing.Pen> object. The <xref:System.Drawing.Graphics> object provides the <xref:System.Drawing.Graphics.DrawRectangle%2A> method, and the <xref:System.Drawing.Pen> object stores features of the line, such as color and width. The units the rectangle is drawn in is determined by the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> properties of the graphics object used for drawing. The default unit is pixels.       To draw a Rectangle filled with color, you need a <xref:System.Drawing.Graphics> object and an object derived from <xref:System.Drawing.Brush> such as <xref:System.Drawing.SolidBrush> or <xref:System.Drawing.Drawing2D.LinearGradientBrush>. The <xref:System.Drawing.Graphics> object provides the <xref:System.Drawing.Graphics.FillRectangle%2A> method and the <xref:System.Drawing.Brush> object provides the color and fill information.       For more advanced shapes, use a <xref:System.Drawing.Region> object."
  example:
  - "The following example draws a rectangle with its upper-left corner at (10, 10). The rectangle has a width of 100 and a height of 50. The second argument passed to the <xref:System.Drawing.Pen.%23ctor%2A> constructor indicates that the pen width is 5 pixels.  \n  \n When the rectangle is drawn, the pen is centered on the rectangle's boundary. Because the pen width is 5, the sides of the rectangle are drawn 5 pixels wide, such that 1 pixel is drawn on the boundary itself, 2 pixels are drawn on the inside, and 2 pixels are drawn on the outside. For more details on pen alignment, see [How to: Set Pen Width and Alignment](~/add/includes/ajax-current-ext-md.md).  \n  \n The following illustration shows the resulting rectangle. The dotted lines show where the rectangle would have been drawn if the pen width had been one pixel. The enlarged view of the upper-left corner of the rectangle shows that the thick black lines are centered on those dotted lines.  \n  \n ![Pens](~/add/media/pens1.gif \"Pens\")  \n  \n The example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.  \n  \n [!code-vb[System.Drawing.UsingAPen#21](~/add/codesnippet/visualbasic/t-system.drawing.rectangle_1.vb)]\n [!code-cs[System.Drawing.UsingAPen#21](~/add/codesnippet/csharp/t-system.drawing.rectangle_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.RectangleConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Rectangle
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  id: '#ctor(System.Drawing.Point,System.Drawing.Size)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Rectangle&quot;></xref> class with the specified location and size."
  syntax:
    content: public Rectangle (System.Drawing.Point location, System.Drawing.Size size);
    parameters:
    - id: location
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;></xref> that represents the upper-left corner of the rectangular region."
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> that represents the width and height of the rectangular region."
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Rectangle&quot;></xref> class with the specified location and size."
  remarks: ''
  example:
  - "The following code example demonstrates the Rectangle, <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/eee26612-4d30-4e2f-a9c7-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/eee26612-4d30-4e2f-a9c7-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/eee26612-4d30-4e2f-a9c7-_1.vb)]"
  syntax:
    content: public Rectangle (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper-left corner of the rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper-left corner of the rectangle."
    - id: width
      type: System.Int32
      description: "The width of the rectangle."
    - id: height
      type: System.Int32
      description: "The height of the rectangle."
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Bottom
  id: Bottom
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the y-coordinate that is the sum of the <xref:System.Drawing.Rectangle.Y*> and <xref:System.Drawing.Rectangle.Height*> property values of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "The value of the Bottom property represents the y-coordinate of the first point at the bottom edge of the <xref:System.Drawing.Rectangle> that is not contained in the <xref:System.Drawing.Rectangle>."
  syntax:
    content: public int Bottom { get; }
    return:
      type: System.Int32
      description: "The y-coordinate that is the sum of <xref:System.Drawing.Rectangle.Y*> and <xref:System.Drawing.Rectangle.Height*> of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  overload: System.Drawing.Rectangle.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  id: Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the specified <xref href=&quot;System.Drawing.RectangleF&quot;></xref> structure to a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure by rounding the <xref href=&quot;System.Drawing.RectangleF&quot;></xref> values to the next higher integer values."
  syntax:
    content: public static System.Drawing.Rectangle Ceiling (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "The <xref href=&quot;System.Drawing.RectangleF&quot;></xref> structure to be converted."
    return:
      type: System.Drawing.Rectangle
      description: "Returns a <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  overload: System.Drawing.Rectangle.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  id: Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines if the specified point is contained within this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "The containing rectangle must be normalized for this method to return accurate results."
  syntax:
    content: public bool Contains (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "The <xref href=&quot;System.Drawing.Point&quot;></xref> to test."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the point represented by <code>pt</code> is contained within this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  id: Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines if the rectangular region represented by <code>rect</code> is entirely contained within this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "The containing rectangle must be normalized for this method to return accurate results."
  example:
  - "The following code example demonstrates the Contains method and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_8_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_8_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_8_1.vb)]"
  syntax:
    content: public bool Contains (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> to test."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the rectangular region represented by <code>rect</code> is entirely contained within this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  id: Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines if the specified point is contained within this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "The containing rectangle must be normalized for this method to return accurate results."
  syntax:
    content: public bool Contains (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "The x-coordinate of the point to test."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the point to test."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the point defined by <code>x</code> and <code>y</code> is contained within this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Empty
  id: Empty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Represents a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure with its properties left uninitialized."
  remarks: "A rectangle is defined by its width, height and upper-left corner."
  syntax:
    content: public static readonly System.Drawing.Rectangle Empty;
    return:
      type: System.Drawing.Rectangle
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tests whether <code>obj</code> is a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure with the same location and size of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The <xref:System.Object> to test."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>obj</code> is a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure and its <xref:System.Drawing.Rectangle.X*>, <xref:System.Drawing.Rectangle.Y*>, <xref:System.Drawing.Rectangle.Width*>, and <xref:System.Drawing.Rectangle.Height*> properties are equal to the corresponding properties of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Rectangle.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  id: FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Creates a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure with the specified edge locations."
  remarks: "This method creates a <xref:System.Drawing.Rectangle> with the specified upper-left and lower-right corners."
  example:
  - "The following code example demonstrates how to create a rectangle using the FromLTRB method. This example is designed to be used with a Windows Form. Paste this code into a form and call the `CreateARectangleFromLTRB` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/csharp/b6a82677-d61c-473b-ae93-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/cpp/b6a82677-d61c-473b-ae93-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/visualbasic/b6a82677-d61c-473b-ae93-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle FromLTRB (int left, int top, int right, int bottom);
    parameters:
    - id: left
      type: System.Int32
      description: "The x-coordinate of the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
    - id: top
      type: System.Int32
      description: "The y-coordinate of the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
    - id: right
      type: System.Int32
      description: "The x-coordinate of the lower-right corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
    - id: bottom
      type: System.Int32
      description: "The y-coordinate of the lower-right corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
    return:
      type: System.Drawing.Rectangle
      description: "The new <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that this method creates."
  overload: System.Drawing.Rectangle.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returns the hash code for this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure. For information about the use of hash codes, see <xref:System.Object.GetHashCode*> ."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "An integer that represents the hash code for this rectangle."
  overload: System.Drawing.Rectangle.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Height
  id: Height
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the height of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "Changing the Height property will also cause a change in the <xref:System.Drawing.Rectangle.Bottom%2A> property of the <xref:System.Drawing.Rectangle>. The units the rectangle is drawn in is determined by the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> properties of the graphics object used for drawing. The default unit is pixels."
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "The height of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure. The default is 0."
  overload: System.Drawing.Rectangle.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  id: Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Enlarges this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> by the specified amount."
  remarks: "This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis.  For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle&quot;s geometric center."
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. The rectangle is drawn to screen before inflation (black) and after inflation (red).  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/csharp/m-system.drawing.rectang_2_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/cpp/m-system.drawing.rectang_2_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_2_1.vb)]"
  syntax:
    content: public void Inflate (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: "The amount to inflate this rectangle."
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  id: Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Enlarges this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> by the specified amount."
  remarks: "This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle&quot;s geometric center.       If either `x` or `y` is negative, the <xref:System.Drawing.Rectangle> structure is deflated in the corresponding direction."
  example:
  - "The following example creates a <xref:System.Drawing.Rectangle> structure and enlarges it by 100 units in the x-axis direction:  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/csharp/m-system.drawing.rectang_7_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/cpp/m-system.drawing.rectang_7_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_7_1.vb)]"
  syntax:
    content: public void Inflate (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "The amount to inflate this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> horizontally."
    - id: height
      type: System.Int32
      description: "The amount to inflate this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> vertically."
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  id: Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Creates and returns an enlarged copy of the specified <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure. The copy is enlarged by the specified amount. The original <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure remains unmodified."
  remarks: "This method makes a copy of `rect`, enlarges the copy, and then returns the enlarged copy. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle&quot;s geometric center."
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. Notice that the resulting rectangle (red) is 150 units in both axes.  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/csharp/29159456-f586-460b-ac33-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/cpp/29159456-f586-460b-ac33-_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/visualbasic/29159456-f586-460b-ac33-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Inflate (System.Drawing.Rectangle rect, int x, int y);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> with which to start. This rectangle is not modified."
    - id: x
      type: System.Int32
      description: "The amount to inflate this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> horizontally."
    - id: y
      type: System.Int32
      description: "The amount to inflate this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> vertically."
    return:
      type: System.Drawing.Rectangle
      description: "The enlarged <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Replaces this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> with the intersection of itself and the specified <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the Intersect, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_1_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_1_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_1_1.vb)]"
  syntax:
    content: public void Intersect (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> with which to intersect."
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returns a third <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure that represents the intersection of two other <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structures. If there is no intersection, an empty <xref href=&quot;System.Drawing.Rectangle&quot;></xref> is returned."
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/csharp/220e8ffb-cf8f-48fb-bbcf-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/cpp/220e8ffb-cf8f-48fb-bbcf-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/visualbasic/220e8ffb-cf8f-48fb-bbcf-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Intersect (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "A rectangle to intersect."
    - id: b
      type: System.Drawing.Rectangle
      description: "A rectangle to intersect."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the intersection of <code>a</code> and <code>b</code>."
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  id: IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines if this rectangle intersects with <code>rect</code>."
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the IntersectsWith members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_6_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_6_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_6_1.vb)]"
  syntax:
    content: public bool IntersectsWith (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "The rectangle to test."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there is any intersection, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Rectangle.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tests whether all numeric properties of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> have values of zero."
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, IsEmpty and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/p-system.drawing.rectang_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/p-system.drawing.rectang_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/p-system.drawing.rectang_1.vb)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "This property returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Drawing.Rectangle.Width*>, <xref:System.Drawing.Rectangle.Height*>, <xref:System.Drawing.Rectangle.X*>, and <xref:System.Drawing.Rectangle.Y*> properties of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> all have values of zero; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Rectangle.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Left
  id: Left
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the x-coordinate of the left edge of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  syntax:
    content: public int Left { get; }
    return:
      type: System.Int32
      description: "The x-coordinate of the left edge of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  overload: System.Drawing.Rectangle.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Location
  id: Location
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the coordinates of the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;></xref> that represents the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  overload: System.Drawing.Rectangle.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  id: Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Adjusts the location of this rectangle by the specified amount."
  remarks: "This method adjusts the location of the upper-left corner horizontally by the x-coordinate of the specified point, and vertically by the y-coordinate of the specified point."
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Contains%2A>, and <xref:System.Drawing.Rectangle.Offset%2A> methods and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_0_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_0_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_0_1.vb)]"
  syntax:
    content: public void Offset (System.Drawing.Point pos);
    parameters:
    - id: pos
      type: System.Drawing.Point
      description: "Amount to offset the location."
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  id: Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Adjusts the location of this rectangle by the specified amount."
  syntax:
    content: public void Offset (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "The horizontal offset."
    - id: y
      type: System.Int32
      description: "The vertical offset."
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tests whether two <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structures have equal location and size."
  syntax:
    content: public static bool op_Equality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure that is to the left of the equality operator."
    - id: right
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure that is to the right of the equality operator."
    return:
      type: System.Boolean
      description: "This operator returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structures have equal <xref:System.Drawing.Rectangle.X*>, <xref:System.Drawing.Rectangle.Y*>, <xref:System.Drawing.Rectangle.Width*>, and <xref:System.Drawing.Rectangle.Height*> properties."
  overload: System.Drawing.Rectangle.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tests whether two <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structures differ in location or size."
  syntax:
    content: public static bool op_Inequality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure that is to the left of the inequality operator."
    - id: right
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure that is to the right of the inequality operator."
    return:
      type: System.Boolean
      description: "This operator returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if any of the <xref:System.Drawing.Rectangle.X*>, <xref:System.Drawing.Rectangle.Y*>, <xref:System.Drawing.Rectangle.Width*> or <xref:System.Drawing.Rectangle.Height*> properties of the two <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structures are unequal; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Rectangle.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Right
  id: Right
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the x-coordinate that is the sum of <xref:System.Drawing.Rectangle.X*> and <xref:System.Drawing.Rectangle.Width*> property values of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "The value of the Right property represents the x-coordinate of the first point at the right edge of the rectangle that is not contained in the rectangle."
  syntax:
    content: public int Right { get; }
    return:
      type: System.Int32
      description: "The x-coordinate that is the sum of <xref:System.Drawing.Rectangle.X*> and <xref:System.Drawing.Rectangle.Width*> of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  overload: System.Drawing.Rectangle.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  id: Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the specified <xref href=&quot;System.Drawing.RectangleF&quot;></xref> to a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> by rounding the <xref href=&quot;System.Drawing.RectangleF&quot;></xref> values to the nearest integer values."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Round and <xref:System.Drawing.Rectangle.Truncate%2A> methods. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_3_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_3_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_3_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Round (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "The <xref href=&quot;System.Drawing.RectangleF&quot;></xref> to be converted."
    return:
      type: System.Drawing.Rectangle
      description: "The rounded interger value of the <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  overload: System.Drawing.Rectangle.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Size
  id: Size
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the size of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> that represents the width and height of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  overload: System.Drawing.Rectangle.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Top
  id: Top
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the y-coordinate of the top edge of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  syntax:
    content: public int Top { get; }
    return:
      type: System.Int32
      description: "The y-coordinate of the top edge of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  overload: System.Drawing.Rectangle.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.ToString
  id: ToString
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the attributes of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> to a human-readable string."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that contains the position, width, and height of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure ¾ for example, {X=20, Y=20, Width=100, Height=50}"
  overload: System.Drawing.Rectangle.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  id: Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the specified <xref href=&quot;System.Drawing.RectangleF&quot;></xref> to a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> by truncating the <xref href=&quot;System.Drawing.RectangleF&quot;></xref> values."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Rectangle.Round%2A> and Truncate methods. This example is designed for use with a Windows Form. Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_4_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_4_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_4_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Truncate (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "The <xref href=&quot;System.Drawing.RectangleF&quot;></xref> to be converted."
    return:
      type: System.Drawing.Rectangle
      description: "The truncated value of the  <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  overload: System.Drawing.Rectangle.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure that contains the union of two <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structures."
  remarks: 'When one of the two rectangles is empty, meaning all of its values are zero, the Union method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle. For example, if you have two rectangles: A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).'
  example:
  - "The following code example demonstrates how to use the Union method. This example is designed for use with a Windows Form. Paste this code into a form and call the `ShowRectangleUnion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/csharp/dbe79589-a969-4d01-95b2-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/cpp/dbe79589-a969-4d01-95b2-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/visualbasic/dbe79589-a969-4d01-95b2-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Union (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "A rectangle to union."
    - id: b
      type: System.Drawing.Rectangle
      description: "A rectangle to union."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure that bounds the union of the two <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structures."
  overload: System.Drawing.Rectangle.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Width
  id: Width
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the width of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "Changing the Width property will also cause a change in the <xref:System.Drawing.Rectangle.Right%2A> property of the <xref:System.Drawing.Rectangle>. The units the rectangle is drawn in is determined by the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> properties of the graphics object used for drawing. The default unit is pixels."
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "The width of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure. The default is 0."
  overload: System.Drawing.Rectangle.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.X
  id: X
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the x-coordinate of the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "Changing the X property will also cause a change in the <xref:System.Drawing.Rectangle.Right%2A> property of the <xref:System.Drawing.Rectangle>."
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "The x-coordinate of the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure. The default is 0."
  overload: System.Drawing.Rectangle.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Y
  id: Y
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the y-coordinate of the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure."
  remarks: "Changing the Y property will also cause a change in the <xref:System.Drawing.Rectangle.Bottom%2A> property of the <xref:System.Drawing.Rectangle>."
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "The y-coordinate of the upper-left corner of this <xref href=&quot;System.Drawing.Rectangle&quot;></xref> structure. The default is 0."
  overload: System.Drawing.Rectangle.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Rectangle.Bottom
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
- uid: System.Drawing.Rectangle.Empty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
- uid: System.Drawing.Rectangle.Equals(System.Object)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Rectangle.GetHashCode
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
- uid: System.Drawing.Rectangle.Height
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
- uid: System.Drawing.Rectangle.IsEmpty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
- uid: System.Drawing.Rectangle.Location
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Right
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
- uid: System.Drawing.Rectangle.Size
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
- uid: System.Drawing.Rectangle.Top
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
- uid: System.Drawing.Rectangle.ToString
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Width
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
- uid: System.Drawing.Rectangle.X
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
- uid: System.Drawing.Rectangle.Y
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
- uid: System.Drawing.Rectangle.#ctor*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle.Rectangle
- uid: System.Drawing.Rectangle.Bottom*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling
  nameWithType: Rectangle.Ceiling
- uid: System.Drawing.Rectangle.Contains*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains
  nameWithType: Rectangle.Contains
- uid: System.Drawing.Rectangle.Equals*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals
  nameWithType: Rectangle.Equals
- uid: System.Drawing.Rectangle.FromLTRB*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB
  nameWithType: Rectangle.FromLTRB
- uid: System.Drawing.Rectangle.GetHashCode*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode
  nameWithType: Rectangle.GetHashCode
- uid: System.Drawing.Rectangle.Height*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate
  nameWithType: Rectangle.Inflate
- uid: System.Drawing.Rectangle.Intersect*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect
  nameWithType: Rectangle.Intersect
- uid: System.Drawing.Rectangle.IntersectsWith*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith
  nameWithType: Rectangle.IntersectsWith
- uid: System.Drawing.Rectangle.IsEmpty*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
- uid: System.Drawing.Rectangle.Location*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
- uid: System.Drawing.Rectangle.Offset*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset
  nameWithType: Rectangle.Offset
- uid: System.Drawing.Rectangle.op_Equality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality
  nameWithType: Rectangle.op_Equality
- uid: System.Drawing.Rectangle.op_Inequality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality
  nameWithType: Rectangle.op_Inequality
- uid: System.Drawing.Rectangle.Right*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
- uid: System.Drawing.Rectangle.Round*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round
  nameWithType: Rectangle.Round
- uid: System.Drawing.Rectangle.Size*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
- uid: System.Drawing.Rectangle.Top*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
- uid: System.Drawing.Rectangle.ToString*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString
  nameWithType: Rectangle.ToString
- uid: System.Drawing.Rectangle.Truncate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate
  nameWithType: Rectangle.Truncate
- uid: System.Drawing.Rectangle.Union*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union
  nameWithType: Rectangle.Union
- uid: System.Drawing.Rectangle.Width*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
- uid: System.Drawing.Rectangle.X*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
- uid: System.Drawing.Rectangle.Y*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
