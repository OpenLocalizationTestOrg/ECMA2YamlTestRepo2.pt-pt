### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  id: IRemoteArgumentArrayListContract
  children:
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add(System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains(System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf(System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert(System.Int32,System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove(System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt(System.Int32)
  langs:
  - csharp
  name: IRemoteArgumentArrayListContract
  nameWithType: IRemoteArgumentArrayListContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  type: Interface
  summary: "Representa uma matriz de <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> objetos que será redimensionado dinamicamente conforme necessário."
  syntax:
    content: 'public interface IRemoteArgumentArrayListContract : System.AddIn.Contract.Collections.IRemoteArgumentArrayContract'
  implements:
  - System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add(System.AddIn.Contract.RemoteArgument)
  id: Add(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  langs:
  - csharp
  name: Add(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Add(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add(RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Adiciona um <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> ao fim do <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
  syntax:
    content: public void Add (System.AddIn.Contract.RemoteArgument newItem);
    parameters:
    - id: newItem
      type: System.AddIn.Contract.RemoteArgument
      description: "O <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> a adicionar ao fim do <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear
  id: Clear
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  langs:
  - csharp
  name: Clear()
  nameWithType: IRemoteArgumentArrayListContract.Clear()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Remove todos os elementos do <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains(System.AddIn.Contract.RemoteArgument)
  id: Contains(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  langs:
  - csharp
  name: Contains(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Contains(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains(RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Indica se uma determinada <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> está a ser o <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
  syntax:
    content: public bool Contains (System.AddIn.Contract.RemoteArgument item);
    parameters:
    - id: item
      type: System.AddIn.Contract.RemoteArgument
      description: "O <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> localizar no <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>item</code> is found in the <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf(System.AddIn.Contract.RemoteArgument)
  id: IndexOf(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  langs:
  - csharp
  name: IndexOf(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.IndexOf(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf(RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Devolve o índice baseado em zero da primeira ocorrência de uma determinada <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> no <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
  syntax:
    content: public int IndexOf (System.AddIn.Contract.RemoteArgument item);
    parameters:
    - id: item
      type: System.AddIn.Contract.RemoteArgument
      description: "O <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> localizar no <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
    return:
      type: System.Int32
      description: "O índice baseado em zero da primeira ocorrência de <code> item </code> no <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>, se encontrado; caso contrário, -1."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert(System.Int32,System.AddIn.Contract.RemoteArgument)
  id: Insert(System.Int32,System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  langs:
  - csharp
  name: Insert(Int32,RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Insert(Int32,RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert(Int32,RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Insere um <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> para o <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref> no índice especificado."
  syntax:
    content: public void Insert (int index, System.AddIn.Contract.RemoteArgument item);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero no qual pretende inserir `item`."
    - id: item
      type: System.AddIn.Contract.RemoteArgument
      description: "O <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> para inserir."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>é menor que zero.       - ou - <code>index</code> é igual ou maior do que o valor de retorno de <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>."
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove(System.AddIn.Contract.RemoteArgument)
  id: Remove(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  langs:
  - csharp
  name: Remove(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Remove(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove(RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Remove a primeira ocorrência de uma determinada <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> do <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
  syntax:
    content: public void Remove (System.AddIn.Contract.RemoteArgument item);
    parameters:
    - id: item
      type: System.AddIn.Contract.RemoteArgument
      description: "O <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> para remover."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IRemoteArgumentArrayListContract.RemoveAt(Int32)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Remove o elemento no índice especificado do <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&quot;> </xref>."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero do elemento para remover."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>é menor que zero.       - ou - <code>index</code> é igual ou maior do que o valor de retorno de <xref:System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount*>."
  platform:
  - net462
references:
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Add(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Add(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add(RemoteArgument)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Clear()
  nameWithType: IRemoteArgumentArrayListContract.Clear()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Contains(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Contains(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains(RemoteArgument)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: IndexOf(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.IndexOf(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf(RemoteArgument)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert(System.Int32,System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Insert(Int32,RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Insert(Int32,RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert(Int32,RemoteArgument)
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Remove(RemoteArgument)
  nameWithType: IRemoteArgumentArrayListContract.Remove(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove(RemoteArgument)
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt(System.Int32)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IRemoteArgumentArrayListContract.RemoveAt(Int32)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt(Int32)
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Add*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Add
  nameWithType: IRemoteArgumentArrayListContract.Add
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Clear*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Clear
  nameWithType: IRemoteArgumentArrayListContract.Clear
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Contains*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Contains
  nameWithType: IRemoteArgumentArrayListContract.Contains
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.IndexOf*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: IndexOf
  nameWithType: IRemoteArgumentArrayListContract.IndexOf
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Insert*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Insert
  nameWithType: IRemoteArgumentArrayListContract.Insert
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.Remove*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: Remove
  nameWithType: IRemoteArgumentArrayListContract.Remove
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract.RemoveAt*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract
  isExternal: false
  name: RemoveAt
  nameWithType: IRemoteArgumentArrayListContract.RemoveAt
