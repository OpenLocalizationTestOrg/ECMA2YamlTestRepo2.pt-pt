### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithm
  id: CngAlgorithm
  children:
  - System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithm.Algorithm
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  - System.Security.Cryptography.CngAlgorithm.ECDsaP256
  - System.Security.Cryptography.CngAlgorithm.ECDsaP384
  - System.Security.Cryptography.CngAlgorithm.ECDsaP521
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.GetHashCode
  - System.Security.Cryptography.CngAlgorithm.MD5
  - System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.Rsa
  - System.Security.Cryptography.CngAlgorithm.Sha1
  - System.Security.Cryptography.CngAlgorithm.Sha256
  - System.Security.Cryptography.CngAlgorithm.Sha384
  - System.Security.Cryptography.CngAlgorithm.Sha512
  - System.Security.Cryptography.CngAlgorithm.ToString
  langs:
  - csharp
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
  type: Class
  summary: "Encapsulates the name of an encryption algorithm."
  remarks: "The CngAlgorithm class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.       The static properties return CngAlgorithm objects. Each object&quot;s internal string is initialized to the algorithm name that corresponds to the name of the static property.       You can also use this class to create objects for algorithm types that are not covered by the static properties.       Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept CngAlgorithm objects through an `algorithm` parameter. When the class receives the CngAlgorithm object, it retrieves the embedded algorithm name by calling the object&quot;s <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.       Therefore, CngAlgorithm serves as an enumeration of well-known algorithms. It lets you specify a well-known algorithm by using a strongly typed value instead of a string."
  syntax:
    content: 'public sealed class CngAlgorithm : IEquatable<System.Security.Cryptography.CngAlgorithm>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngAlgorithm>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: System.Security.Cryptography.CngAlgorithm.CngAlgorithm(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> class."
  remarks: "Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter.       The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class. This capacity enables future [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available."
  syntax:
    content: public CngAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "The name of the algorithm to initialize."
  overload: System.Security.Cryptography.CngAlgorithm.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>algorithm</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>algorithm</code> parameter length is 0 (zero)."
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: System.Security.Cryptography.CngAlgorithm.Algorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets the algorithm name that the current <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object specifies."
  syntax:
    content: public string Algorithm { get; }
    return:
      type: System.String
      description: "The embedded algorithm name."
  overload: System.Security.Cryptography.CngAlgorithm.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  id: ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an ECDH algorithm that uses the P-256 curve."
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  id: ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an ECDH algorithm that uses the P-384 curve."
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  id: ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an ECDH algorithm that uses the P-521 curve."
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  id: ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an ECDSA algorithm that uses the P-256 curve."
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  id: ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an ECDSA algorithm that uses the P-384 curve."
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  id: ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a new <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an ECDSA algorithm that uses the P-521 curve."
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Compares the specified object to the current <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "An object to be compared to the current <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>obj</code> parameter is a <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> that specifies the same algorithm as the current object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  id: Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(CngAlgorithm)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Compares the specified <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object to the current <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithm other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object to be compared to the current <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>other</code> parameter specifies the same algorithm as the current object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithm.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Generates a hash value for the algorithm name that is embedded in the current <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "The hash value of the embedded algorithm name."
  overload: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  id: MD5
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: System.Security.Cryptography.CngAlgorithm.MD5
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a new <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies the Message Digest 5 (MD5) hash algorithm."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm MD5 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies the MD5 algorithm."
  overload: System.Security.Cryptography.CngAlgorithm.MD5*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Equality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determines whether two <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> objects specify the same algorithm name."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an algorithm name."
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: "A second object, to be compared to the object that is identified by the `left` parameter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two objects specify the same algorithm name; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.CngAlgorithm.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Inequality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determines whether two <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> objects do not specify the same algorithm."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies an algorithm name."
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: "A second object, to be compared to the object that is identified by the `left` parameter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two objects do not specify the same algorithm name; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: System.Security.Cryptography.CngAlgorithm.Rsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a new <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies the RSA hash algorithm."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies the RSA algorithm."
  overload: System.Security.Cryptography.CngAlgorithm.Rsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  id: Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: System.Security.Cryptography.CngAlgorithm.Sha1
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a new <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies the SHA-1 algorithm."
  overload: System.Security.Cryptography.CngAlgorithm.Sha1*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  id: Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: System.Security.Cryptography.CngAlgorithm.Sha256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a new <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies the SHA-256 algorithm."
  overload: System.Security.Cryptography.CngAlgorithm.Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  id: Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: System.Security.Cryptography.CngAlgorithm.Sha384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a new <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies the SHA-384 algorithm."
  overload: System.Security.Cryptography.CngAlgorithm.Sha384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  id: Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: System.Security.Cryptography.CngAlgorithm.Sha512
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets a new <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "An object that specifies the SHA-512 algorithm."
  overload: System.Security.Cryptography.CngAlgorithm.Sha512*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: System.Security.Cryptography.CngAlgorithm.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets the name of the algorithm that the current <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref> object specifies."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "The embedded algorithm name."
  overload: System.Security.Cryptography.CngAlgorithm.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: System.Security.Cryptography.CngAlgorithm.CngAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: System.Security.Cryptography.CngAlgorithm.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP521
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithm.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: System.Security.Cryptography.CngAlgorithm.MD5
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: System.Security.Cryptography.CngAlgorithm.Rsa
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: System.Security.Cryptography.CngAlgorithm.Sha1
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: System.Security.Cryptography.CngAlgorithm.Sha256
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: System.Security.Cryptography.CngAlgorithm.Sha384
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: System.Security.Cryptography.CngAlgorithm.Sha512
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: System.Security.Cryptography.CngAlgorithm.ToString()
- uid: System.Security.Cryptography.CngAlgorithm.#ctor*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
- uid: System.Security.Cryptography.CngAlgorithm.Equals*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals
  nameWithType: CngAlgorithm.Equals
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode
  nameWithType: CngAlgorithm.GetHashCode
- uid: System.Security.Cryptography.CngAlgorithm.MD5*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality
  nameWithType: CngAlgorithm.op_Equality
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality
  nameWithType: CngAlgorithm.op_Inequality
- uid: System.Security.Cryptography.CngAlgorithm.Rsa*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
- uid: System.Security.Cryptography.CngAlgorithm.Sha1*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
- uid: System.Security.Cryptography.CngAlgorithm.Sha256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
- uid: System.Security.Cryptography.CngAlgorithm.Sha384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
- uid: System.Security.Cryptography.CngAlgorithm.Sha512*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
- uid: System.Security.Cryptography.CngAlgorithm.ToString*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString
  nameWithType: CngAlgorithm.ToString
