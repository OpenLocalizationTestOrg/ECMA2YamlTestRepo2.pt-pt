### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support
  id: Support
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath
  - Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX
  - Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY
  - Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)
  - Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)
  langs:
  - csharp
  name: Support
  nameWithType: Support
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support
  type: Class
  summary: "Contains various utility functions for backward compatibility with Visual Basic 6.0."
  remarks: "The functions in this class are used during the upgrade of Visual Basic 6.0 projects to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. Some functions replace Visual Basic 6.0 functions that are no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]; others compensate for differences in the object models.       To use functions in this class in a [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] project, add a reference to the `Microsoft.VisualBasic.Compatibility.VB6` namespace.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      public sealed class Support
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)
  id: CopyArray(System.Array)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: CopyArray(Array)
  nameWithType: Support.CopyArray(Array)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(Array)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Duplicates Visual Basic 6.0 functionality of assigning an <xref uid=&quot;langword_csharp_Array&quot; name=&quot;Array&quot; href=&quot;&quot;></xref> to a <xref uid=&quot;langword_csharp_Variant&quot; name=&quot;Variant&quot; href=&quot;&quot;></xref>."
  remarks: "The Visual Basic 6.0 `Variant` data type is no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. The `CopyArray` function is used by the upgrade tools to copy an `Array` to or from a `Variant` array.       To copy an array in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use the <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> or <xref:System.Array.CopyTo%2A> methods of the <xref:System.Array> class.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static Array CopyArray (Array SourceArray);
    parameters:
    - id: SourceArray
      type: System.Array
      description: "A <xref:System.Array>."
    return:
      type: System.Array
      description: "The array to copy."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)
  id: CursorToIPicture(System.Windows.Forms.Cursor)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: CursorToIPicture(Cursor)
  nameWithType: Support.CursorToIPicture(Cursor)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(Cursor)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Returns an OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object that corresponds to the specified <xref href=&quot;System.Windows.Forms.Cursor&quot;></xref>."
  remarks: "In Visual Basic 6.0, the `MouseIcon` property of a form or control could be used to load a custom `MousePointer` (cursor). In some cases, the image for the `MouseIcon` was stored as a `stdOle``IPicture`; this function is used by the upgrade tool to convert a <xref:System.Windows.Forms.Cursor> to a `stdOle``IPicture`.       To convert a <xref:System.Windows.Forms.Cursor> in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use the <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> method of the <xref:System.Windows.Forms.AxHost> class.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object CursorToIPicture (System.Windows.Forms.Cursor curs);
    parameters:
    - id: curs
      type: System.Windows.Forms.Cursor
      description: "The <xref href=&quot;System.Windows.Forms.Cursor&quot;></xref> to convert."
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)
  id: Eqv(System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Eqv(Boolean,Boolean)
  nameWithType: Support.Eqv(Boolean,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Boolean,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical equivalence on two <xref:System.Boolean> expressions."
  remarks: "If either expression is `Null`, result is also `Null`. When neither expression is `Null`, result is determined according to the following table:      |If expression1 is|And expression2 is|The result is|   |-----------------------|------------------------|-------------------|   |`true`|`true`|`true`|   |`true`|`false`|`false`|   |`false`|`true`|`false`|   |`false`|`false`|`true`|       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `Eqv` operator is no longer a part of the Visual Basic language; use the equals (=) comparison operator in place of `Eqv` for logical evaluations.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static bool Eqv (bool a, bool b);
    parameters:
    - id: a
      type: System.Boolean
      description: "A <xref:System.Boolean> to compare."
    - id: b
      type: System.Boolean
      description: "A <xref:System.Boolean> to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two expressions are equal; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)
  id: Eqv(System.Byte,System.Byte)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Eqv(Byte,Byte)
  nameWithType: Support.Eqv(Byte,Byte)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Byte,Byte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical equivalence on two <xref:System.Byte> expressions."
  remarks: "The `Eqv` operator performs a bitwise comparison of identically positioned bits in two numeric expressions and sets the corresponding bit according to the following table:      |If bit in expression1 is|And bit in expression2 is|The result is|   |------------------------------|-------------------------------|-------------------|   |0|0|1|   |0|1|0|   |1|0|0|   |1|1|1|       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static byte Eqv (byte a, byte b);
    parameters:
    - id: a
      type: System.Byte
      description: "A <xref:System.Byte> to compare."
    - id: b
      type: System.Byte
      description: "A <xref:System.Byte> to compare."
    return:
      type: System.Byte
      description: "A <xref:System.Byte> that contains the result of the bitwise comparison."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)
  id: Eqv(System.Int16,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Eqv(Int16,Int16)
  nameWithType: Support.Eqv(Int16,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Int16,Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical equivalence on two <xref:System.Int16> expressions."
  remarks: "In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static short Eqv (short a, short b);
    parameters:
    - id: a
      type: System.Int16
      description: "A <xref:System.Int16> to compare."
    - id: b
      type: System.Int16
      description: "A <xref:System.Int16> to compare."
    return:
      type: System.Int16
      description: "A <xref:System.Int16> that contains the result of the comparison."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)
  id: Eqv(System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Eqv(Int32,Int32)
  nameWithType: Support.Eqv(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical equivalence on two <xref:System.Int32> expressions."
  remarks: "In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `Eqv` operator is no longer a part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] language; for bitwise evaluations use the `Not` and `XOr` operators.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static int Eqv (int a, int b);
    parameters:
    - id: a
      type: System.Int32
      description: "A <xref:System.Int32> to compare."
    - id: b
      type: System.Int32
      description: "A <xref:System.Int32> to compare."
    return:
      type: System.Int32
      description: "A <xref:System.Int32> that contains the result of the comparison."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)
  id: Eqv(System.Int64,System.Int64)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Eqv(Int64,Int64)
  nameWithType: Support.Eqv(Int64,Int64)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Int64,Int64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical equivalence on two <xref:System.Int64> expressions."
  remarks: "In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `Eqv` operator is no longer a part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] language; for bitwise evaluations use the `Not` and `XOr` operators.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static long Eqv (long a, long b);
    parameters:
    - id: a
      type: System.Int64
      description: "A <xref:System.Int64> to compare."
    - id: b
      type: System.Int64
      description: "A <xref:System.Int64> to compare."
    return:
      type: System.Int64
      description: "A <xref:System.Int64> that contains the result of the comparison."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)
  id: Eqv(System.Object,System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Eqv(Object,Object)
  nameWithType: Support.Eqv(Object,Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical equivalence on two <xref:System.Object> expressions."
  remarks: "In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `Eqv` operator is no longer a part of the [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] language; for bitwise evaluations use the `Not` and `XOr` operators.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object Eqv (object a, object b);
    parameters:
    - id: a
      type: System.Object
      description: "A <xref:System.Object> to compare."
    - id: b
      type: System.Object
      description: "A <xref:System.Object> to compare."
    return:
      type: System.Object
      description: "A <xref:System.Object> that contains the result of the comparison."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)
  id: FontChangeBold(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontChangeBold(Font,Boolean)
  nameWithType: Support.FontChangeBold(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(Font,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Changes the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit for a font."
  remarks: "In Visual Basic 6.0, font styles were applied by setting properties; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration. This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font FontChangeBold (System.Drawing.Font CurrentFont, bool Bold);
    parameters:
    - id: CurrentFont
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: Bold
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to set the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> with the new style applied."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)
  id: FontChangeGdiCharSet(System.Drawing.Font,System.Byte)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontChangeGdiCharSet(Font,Byte)
  nameWithType: Support.FontChangeGdiCharSet(Font,Byte)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(Font,Byte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Returns a font for a specified GDI character set."
  remarks: "In Visual Basic 6.0, the `stdFont` object had a `CharSet` property that specified the GDI character set for a font. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the character set is specified as an optional of a <xref:System.Drawing.Font> constructor. This function is used by the upgrade tools to convert a `stdFont` to a <xref:System.Drawing.Font>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font FontChangeGdiCharSet (System.Drawing.Font CurrentFont, byte GdiCharSet);
    parameters:
    - id: CurrentFont
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: GdiCharSet
      type: System.Byte
      description: "A byte value that specifies the GDI character set to use."
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> for the specified GDI character set."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)
  id: FontChangeItalic(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontChangeItalic(Font,Boolean)
  nameWithType: Support.FontChangeItalic(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(Font,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Changes the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit for a font."
  remarks: "In Visual Basic 6.0, font styles were applied by setting properties; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration. This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font FontChangeItalic (System.Drawing.Font CurrentFont, bool Italic);
    parameters:
    - id: CurrentFont
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: Italic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to set the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> with the new style applied."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)
  id: FontChangeName(System.Drawing.Font,System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontChangeName(Font,String)
  nameWithType: Support.FontChangeName(Font,String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(Font,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Returns a new <xref href=&quot;System.Drawing.Font&quot;></xref> for a given Visual Basic 6.0 <xref uid=&quot;langword_csharp_Font&quot; name=&quot;Font&quot; href=&quot;&quot;></xref>."
  remarks: "In Visual Basic 6.0, the name of a font was specified by the `Font` property; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], <xref:System.Drawing.Font.Name%2A> is a property of the <xref:System.Drawing.Font> object. This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font FontChangeName (System.Drawing.Font CurrentFont, string Name);
    parameters:
    - id: CurrentFont
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: Name
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_Font&quot; name=&quot;Font&quot; href=&quot;&quot;></xref> property."
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> that matches the Visual Basic 6.0 <xref uid=&quot;langword_csharp_Font&quot; name=&quot;Font&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)
  id: FontChangeSize(System.Drawing.Font,System.Single)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontChangeSize(Font,Single)
  nameWithType: Support.FontChangeSize(Font,Single)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(Font,Single)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Changes the <xref:System.Drawing.Font.Size*> property for a font."
  remarks: "In Visual Basic 6.0, the size of a font was specified by the `FontSize` property; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], <xref:System.Drawing.Font.Size%2A> is a property of the <xref:System.Drawing.Font> object. This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font FontChangeSize (System.Drawing.Font CurrentFont, float Size);
    parameters:
    - id: CurrentFont
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: Size
      type: System.Single
      description: "A <xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;></xref> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_FontSize&quot; name=&quot;FontSize&quot; href=&quot;&quot;></xref> property."
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> that matches the Visual Basic 6.0 <xref uid=&quot;langword_csharp_FontSize&quot; name=&quot;FontSize&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)
  id: FontChangeStrikeout(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontChangeStrikeout(Font,Boolean)
  nameWithType: Support.FontChangeStrikeout(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(Font,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Changes the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit for a font."
  remarks: "In Visual Basic 6.0, font styles were applied by setting properties; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration. This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font FontChangeStrikeout (System.Drawing.Font CurrentFont, bool Strikeout);
    parameters:
    - id: CurrentFont
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: Strikeout
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to set the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> with the new style applied."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)
  id: FontChangeUnderline(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontChangeUnderline(Font,Boolean)
  nameWithType: Support.FontChangeUnderline(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(Font,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Changes the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit for a font."
  remarks: "In Visual Basic 6.0, font styles were applied by setting properties; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration. This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font FontChangeUnderline (System.Drawing.Font CurrentFont, bool Underline);
    parameters:
    - id: CurrentFont
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: Underline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to set the <xref href=&quot;System.Drawing.FontStyle&quot;></xref> style bit; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;></xref> with the new style applied."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)
  id: FontToIFont(System.Drawing.Font)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FontToIFont(Font)
  nameWithType: Support.FontToIFont(Font)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(Font)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a <xref href=&quot;System.Drawing.Font&quot;></xref> to a Visual Basic 6.0 <xref uid=&quot;langword_csharp_stdFont&quot; name=&quot;stdFont&quot; href=&quot;&quot;></xref> object."
  remarks: "The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object FontToIFont (System.Drawing.Font fnt);
    parameters:
    - id: fnt
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to convert."
    return:
      type: System.Object
      description: "A <xref uid=&quot;langword_csharp_stdFont&quot; name=&quot;stdFont&quot; href=&quot;&quot;></xref> object."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Format(Object,String,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: Support.Format(Object,String,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Format(Object,String,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts the Visual Basic 6.0 <xref uid=&quot;langword_csharp_Format&quot; name=&quot;Format&quot; href=&quot;&quot;></xref> function to be compatible with [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]."
  remarks: "The Visual Basic 6.0 `Format` function could operate on a `Variant` data type; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] the `Variant` data type no longer exists. This function is used by the upgrade tools to convert a `Variant` formatted by using the `Format` function to a common language runtime-compliant type.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static string Format (object Expression, string Style = "", Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Expression
      type: System.Object
      description: "The <xref:System.Object> expression to convert."
    - id: Style
      type: System.String
      description: "Optional. A <xref:System.String> that represents a date format."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Optional. A <xref href=&quot;Microsoft.VisualBasic.FirstDayOfWeek&quot;></xref> enumeration."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Optional. A <xref href=&quot;Microsoft.VisualBasic.FirstWeekOfYear&quot;></xref> enumeration."
    return:
      type: System.String
      description: "A <xref:System.String> that contains the formatted data."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Format*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)
  id: FromPixelsUserHeight(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FromPixelsUserHeight(Double,Double,Int32)
  nameWithType: Support.FromPixelsUserHeight(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a pixel measurement to a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref> measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double FromPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);
    parameters:
    - id: Height
      type: System.Double
      description: "A <xref:System.Double> that represents the height."
    - id: ScaleHeight
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalHeightInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the height in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)
  id: FromPixelsUserWidth(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FromPixelsUserWidth(Double,Double,Int32)
  nameWithType: Support.FromPixelsUserWidth(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a pixel measurement to a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref> measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double FromPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);
    parameters:
    - id: Width
      type: System.Double
      description: "A <xref:System.Double> that represents the width."
    - id: ScaleWidth
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalWidthInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the width in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  id: FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FromPixelsUserX(Double,Double,Double,Int32)
  nameWithType: Support.FromPixelsUserX(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(Double,Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a pixel measurement to a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleLeft&quot; name=&quot;ScaleLeft&quot; href=&quot;&quot;></xref> measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double FromPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);
    parameters:
    - id: X
      type: System.Double
      description: "A <xref:System.Double> that represents the X coordinate."
    - id: ScaleLeft
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleLeft&quot; name=&quot;ScaleLeft&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: ScaleWidth
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalWidthInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the width in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleLeft&quot; name=&quot;ScaleLeft&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  id: FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FromPixelsUserY(Double,Double,Double,Int32)
  nameWithType: Support.FromPixelsUserY(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(Double,Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a pixel measurement to a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleTop&quot; name=&quot;ScaleTop&quot; href=&quot;&quot;></xref> measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double FromPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);
    parameters:
    - id: Y
      type: System.Double
      description: "A <xref:System.Double> that represents the X coordinate."
    - id: ScaleTop
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleTop&quot; name=&quot;ScaleTop&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: ScaleHeight
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalHeightInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the height in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleTop&quot; name=&quot;ScaleTop&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  id: FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FromPixelsX(Double,ScaleMode)
  nameWithType: Support.FromPixelsX(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(Double,ScaleMode)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref>."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double FromPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);
    parameters:
    - id: X
      type: System.Double
      description: "A <xref:System.Double> that represents the X coordinate in pixels."
    - id: ToScale
      type: Microsoft.VisualBasic.Compatibility.VB6.ScaleMode
      description: "A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref> enumeration that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleMode &quot; name=&quot;ScaleMode &quot; href=&quot;&quot;></xref>to convert to."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the Visual Basic 6.0 value for the specified <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  id: FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: FromPixelsY(Double,ScaleMode)
  nameWithType: Support.FromPixelsY(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(Double,ScaleMode)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref>."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double FromPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);
    parameters:
    - id: Y
      type: System.Double
      description: "A <xref:System.Double> that represents the Y coordinate in pixels."
    - id: ToScale
      type: Microsoft.VisualBasic.Compatibility.VB6.ScaleMode
      description: "A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref> enumeration that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleMode &quot; name=&quot;ScaleMode &quot; href=&quot;&quot;></xref>to convert to."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the Visual Basic 6.0 value for the specified <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl
  id: GetActiveControl
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetActiveControl()
  nameWithType: Support.GetActiveControl()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets the control that currently has focus."
  remarks: "This function is used by the upgrade tools to replace the Visual Basic 6.0 `Screen.ActiveControl` property. It is the equivalent of calling <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)].       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Windows.Forms.Control GetActiveControl ();
    parameters: []
    return:
      type: System.Windows.Forms.Control
      description: "The control that currently has focus."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)
  id: GetCancel(System.Windows.Forms.Button)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetCancel(Button)
  nameWithType: Support.GetCancel(Button)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(Button)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets a value that indicates whether a <xref href=&quot;System.Windows.Forms.Button&quot;></xref> is the cancel button on a form."
  remarks: "This function is the equivalent of checking the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static bool GetCancel (System.Windows.Forms.Button btn);
    parameters:
    - id: btn
      type: System.Windows.Forms.Button
      description: "A <xref href=&quot;System.Windows.Forms.Button&quot;></xref> control."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>btn</code> is the cancel button; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)
  id: GetDefault(System.Windows.Forms.Button)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetDefault(Button)
  nameWithType: Support.GetDefault(Button)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(Button)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets sets a value that determines whether a <xref href=&quot;System.Windows.Forms.Button&quot;></xref> control is the default button on a form."
  remarks: "This function is the equivalent of checking the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static bool GetDefault (System.Windows.Forms.Button btn);
    parameters:
    - id: btn
      type: System.Windows.Forms.Button
      description: "A <xref href=&quot;System.Windows.Forms.Button&quot;></xref> control."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>btn</code> is the default button; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName
  id: GetEXEName
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetEXEName()
  nameWithType: Support.GetEXEName()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets the name of the executable file (.exe) for the current application."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: public static string GetEXEName ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> that contains the name without a file name extension."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance
  id: GetHInstance
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetHInstance()
  nameWithType: Support.GetHInstance()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets the instance handle (HINSTANCE) for the current application."
  remarks: "This function is the equivalent of calling <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static IntPtr GetHInstance ();
    parameters: []
    return:
      type: System.IntPtr
      description: "An <xref:System.IntPtr> for the current application instance."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)
  id: GetItemData(System.Windows.Forms.Control,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetItemData(Control,Int32)
  nameWithType: Support.GetItemData(Control,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(Control,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets an <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> associated with a <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> or <xref href=&quot;System.Windows.Forms.ComboBox&quot;></xref> item."
  remarks: "In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `ItemData` property no longer exists; the `GetItemData` and <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> methods can be used to emulate the behavior of `ItemData`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static int GetItemData (System.Windows.Forms.Control Control, int Index);
    parameters:
    - id: Control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> or <xref href=&quot;System.Windows.Forms.ComboBox&quot;></xref> control."
    - id: Index
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the index of the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
    return:
      type: System.Int32
      description: "The <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> associated with the specified <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)
  id: GetItemString(System.Windows.Forms.Control,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetItemString(Control,Int32)
  nameWithType: Support.GetItemString(Control,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(Control,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets a <xref:System.String> associated with a <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> or <xref href=&quot;System.Windows.Forms.ComboBox&quot;></xref> item."
  remarks: "This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static string GetItemString (System.Windows.Forms.Control Control, int Index);
    parameters:
    - id: Control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> or <xref href=&quot;System.Windows.Forms.ComboBox&quot;></xref> control."
    - id: Index
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the index of the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
    return:
      type: System.String
      description: "The <xref:System.String> associated with the specified <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath
  id: GetPath
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: GetPath()
  nameWithType: Support.GetPath()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets the current path for the application."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: public static string GetPath ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> that contains the path of the currently executing assembly."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)
  id: IconToIPicture(System.Drawing.Icon)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: IconToIPicture(Icon)
  nameWithType: Support.IconToIPicture(Icon)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(Icon)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets an OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object for a given <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  remarks: "In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an icon; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the OLE `IPicture` format is no longer supported. This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Icon>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object IconToIPicture (System.Drawing.Icon ico);
    parameters:
    - id: ico
      type: System.Drawing.Icon
      description: "A <xref href=&quot;System.Drawing.Icon&quot;></xref>."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)
  id: IFontToFont(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: IFontToFont(Object)
  nameWithType: Support.IFontToFont(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Visual Basic 6.0 <xref uid=&quot;langword_csharp_stdFont&quot; name=&quot;stdFont&quot; href=&quot;&quot;></xref> object to a <xref href=&quot;System.Drawing.Font&quot;></xref>."
  remarks: "The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Font IFontToFont (object objFnt);
    parameters:
    - id: objFnt
      type: System.Object
      description: "An <xref:System.Object> that contains a Visual Basic 6.0 <xref uid=&quot;langword_csharp_stdFont&quot; name=&quot;stdFont&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Drawing.Font
      description: "A specified object to convert."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)
  id: ImageToIPicture(System.Drawing.Image)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ImageToIPicture(Image)
  nameWithType: Support.ImageToIPicture(Image)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(Image)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets an OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object for a given <xref href=&quot;System.Drawing.Image&quot;></xref>."
  remarks: "In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the OLE `IPicture` format is no longer supported. This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object ImageToIPicture (System.Drawing.Image img);
    parameters:
    - id: img
      type: System.Drawing.Image
      description: "A <xref href=&quot;System.Drawing.Image&quot;></xref>."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)
  id: ImageToIPictureDisp(System.Drawing.Image)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ImageToIPictureDisp(Image)
  nameWithType: Support.ImageToIPictureDisp(Image)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(Image)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets an OLE <xref uid=&quot;langword_csharp_IPictureDisp&quot; name=&quot;IPictureDisp&quot; href=&quot;&quot;></xref> object for a given <xref href=&quot;System.Drawing.Image&quot;></xref>."
  remarks: "In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the OLE `IPicture` format is no longer supported. This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object ImageToIPictureDisp (System.Drawing.Image img);
    parameters:
    - id: img
      type: System.Drawing.Image
      description: "A <xref href=&quot;System.Drawing.Image&quot;></xref>."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the OLE <xref uid=&quot;langword_csharp_IPictureDisp&quot; name=&quot;IPictureDisp&quot; href=&quot;&quot;></xref> object."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)
  id: Imp(System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Imp(Boolean,Boolean)
  nameWithType: Support.Imp(Boolean,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Boolean,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical implication on two <xref:System.Boolean> expressions."
  remarks: "The Visual Basic 6.0 `Imp` operator is no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use `Not` and `XOr` instead of `Imp`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static bool Imp (bool a, bool b);
    parameters:
    - id: a
      type: System.Boolean
      description: "A <xref:System.Boolean> expression."
    - id: b
      type: System.Boolean
      description: "A <xref:System.Boolean> expression."
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean> that contains the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)
  id: Imp(System.Byte,System.Byte)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Imp(Byte,Byte)
  nameWithType: Support.Imp(Byte,Byte)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Byte,Byte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical implication on two <xref:System.Byte> expressions."
  remarks: "The Visual Basic 6.0 `Imp` operator is no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use `Not` and `XOr` to replace `Imp`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static byte Imp (byte a, byte b);
    parameters:
    - id: a
      type: System.Byte
      description: "A <xref:System.Byte> expression."
    - id: b
      type: System.Byte
      description: "A <xref:System.Byte> expression."
    return:
      type: System.Byte
      description: "A <xref:System.Byte> that contains the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)
  id: Imp(System.Int16,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Imp(Int16,Int16)
  nameWithType: Support.Imp(Int16,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Int16,Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical implication on two <xref:System.Int16> expressions."
  remarks: "The Visual Basic 6.0 `Imp` operator is no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use `Not` and `XOr` to replace `Imp`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static short Imp (short a, short b);
    parameters:
    - id: a
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref> expression."
    - id: b
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref> expression."
    return:
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref> that contains the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)
  id: Imp(System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Imp(Int32,Int32)
  nameWithType: Support.Imp(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical implication on two <xref:System.Int32> expressions."
  remarks: "The Visual Basic 6.0 `Imp` operator is no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use `Not` and `XOr` to replace `Imp`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static int Imp (int a, int b);
    parameters:
    - id: a
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> expression."
    - id: b
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> expression."
    return:
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that contains the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)
  id: Imp(System.Int64,System.Int64)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Imp(Int64,Int64)
  nameWithType: Support.Imp(Int64,Int64)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Int64,Int64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical implication on two <xref:System.Int64> expressions."
  remarks: "The Visual Basic 6.0 `Imp` operator is no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use `Not` and `XOr` to replace `Imp`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static long Imp (long a, long b);
    parameters:
    - id: a
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref> expression."
    - id: b
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref> expression."
    return:
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref> that contains the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)
  id: Imp(System.Object,System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: Imp(Object,Object)
  nameWithType: Support.Imp(Object,Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Performs a logical implication on two <xref:System.Object> expressions."
  remarks: "The Visual Basic 6.0 `Imp` operator is no longer supported in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to replace the `Imp` operator during project upgrade. During upgrade, the Variant data type is upgraded to <xref:System.Object>.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use `Not` and `XOr` to replace `Imp`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object Imp (object a, object b);
    parameters:
    - id: a
      type: System.Object
      description: "An <xref:System.Object> expression."
    - id: b
      type: System.Object
      description: "An <xref:System.Object> expression."
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)
  id: IPictureDispToImage(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: IPictureDispToImage(Object)
  nameWithType: Support.IPictureDispToImage(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets an <xref href=&quot;System.Drawing.Image&quot;></xref> for a given OLE <xref uid=&quot;langword_csharp_IPictureDisp&quot; name=&quot;IPictureDisp&quot; href=&quot;&quot;></xref> object."
  remarks: "In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the OLE `IPicture` format is no longer supported. This function is used by the upgrade tools to convert between an `IPictureDisp` and a <xref:System.Drawing.Image>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Image IPictureDispToImage (object pict);
    parameters:
    - id: pict
      type: System.Object
      description: "An OLE <xref uid=&quot;langword_csharp_IPictureDisp&quot; name=&quot;IPictureDisp&quot; href=&quot;&quot;></xref> object."
    return:
      type: System.Drawing.Image
      description: "An image object."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)
  id: IPictureToImage(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: IPictureToImage(Object)
  nameWithType: Support.IPictureToImage(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets an <xref href=&quot;System.Drawing.Image&quot;></xref> for a given OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object."
  remarks: "In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the OLE `IPicture` format is no longer supported. This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static System.Drawing.Image IPictureToImage (object pict);
    parameters:
    - id: pict
      type: System.Object
      description: "An OLE <xref uid=&quot;langword_csharp_IPicture&quot; name=&quot;IPicture&quot; href=&quot;&quot;></xref> object."
    return:
      type: System.Drawing.Image
      description: "A converted object to image."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)
  id: LoadResData(System.Object,System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: LoadResData(Object,Object)
  nameWithType: Support.LoadResData(Object,Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Loads data of several possible types from a resource (.res) file."
  remarks: "In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language. At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], international versions of an application are created by changing the `Language` property of a form at design time. A separate resource file (.resx) is automatically created for each locale selected. You no longer have to explicitly load resources from code; resources are automatically loaded based on the user&quot;s locale. For more information, see [Globalizing Windows Forms](~/add/includes/ajax-current-ext-md.md).       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object LoadResData (object ID, object restype);
    parameters:
    - id: ID
      type: System.Object
      description: "An <xref:System.Object> that specifies the data in the resource file."
    - id: restype
      type: System.Object
      description: "An <xref:System.Object> that specifies the resource type."
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains the resource."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)
  id: LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: LoadResData(Object,Object,CultureInfo)
  nameWithType: Support.LoadResData(Object,Object,CultureInfo)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(Object,Object,CultureInfo)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Loads data of several possible types from a resource (.res) file, specifying a locale."
  remarks: "In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language. At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], international versions of an application are created by changing the `Language` property of a form at design time. A separate resource file (.resx) is automatically created for each locale selected. You no longer have to explicitly load resources from code; resources are automatically loaded based on the user&quot;s locale. For more information, see [Globalizing Windows Forms](~/add/includes/ajax-current-ext-md.md).       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object LoadResData (object ID, object restype, System.Globalization.CultureInfo Culture);
    parameters:
    - id: ID
      type: System.Object
      description: "An <xref:System.Object> that specifies the data in the resource file."
    - id: restype
      type: System.Object
      description: "An <xref:System.Object> that specifies the resource type."
    - id: Culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object that specifies the locale."
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains the resource."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)
  id: LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: LoadResPicture(Object,LoadResConstants)
  nameWithType: Support.LoadResPicture(Object,LoadResConstants)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(Object,LoadResConstants)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Loads a bitmap, icon, or cursor from a resource (.res) file."
  remarks: "In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language. At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], international versions of an application are created by changing the `Language` property of a form at design time. A separate resource file (.resx) is automatically created for each locale selected. You no longer have to explicitly load resources from code; resources are automatically loaded based on the user&quot;s locale. For more information, see [Globalizing Windows Forms](~/add/includes/ajax-current-ext-md.md).       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype);
    parameters:
    - id: ID
      type: System.Object
      description: "An <xref:System.Object> that specifies the data in the resource file."
    - id: restype
      type: Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants
      description: "A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants&quot;></xref> enumeration that specifies the resource type."
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains the resource."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)
  id: LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: LoadResPicture(Object,LoadResConstants,CultureInfo)
  nameWithType: Support.LoadResPicture(Object,LoadResConstants,CultureInfo)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(Object,LoadResConstants,CultureInfo)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale."
  remarks: "In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language. At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], international versions of an application are created by changing the `Language` property of a form at design time. A separate resource file (.resx) is automatically created for each locale selected. You no longer have to explicitly load resources from code; resources are automatically loaded based on the user&quot;s locale. For more information, see [Globalizing Windows Forms](~/add/includes/ajax-current-ext-md.md).       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, System.Globalization.CultureInfo Culture);
    parameters:
    - id: ID
      type: System.Object
      description: "An <xref:System.Object> that specifies the data in the resource file."
    - id: restype
      type: Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants
      description: "A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants&quot;></xref> enumeration that specifies the resource type."
    - id: Culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object that specifies the locale."
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains the resource."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)
  id: LoadResString(System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: LoadResString(Int32)
  nameWithType: Support.LoadResString(Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Loads a string from a resource (.res) file."
  remarks: "In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language. At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], international versions of an application are created by changing the `Language` property of a form at design time. A separate resource file (.resx) is automatically created for each locale selected. You no longer have to explicitly load resources from code; resources are automatically loaded based on the user&quot;s locale. For more information, see [Globalizing Windows Forms](~/add/includes/ajax-current-ext-md.md).       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static string LoadResString (int ID);
    parameters:
    - id: ID
      type: System.Int32
      description: "An <xref:System.Object> that specifies the data in the resource file."
    return:
      type: System.String
      description: "A <xref:System.String> that contains the resource."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)
  id: LoadResString(System.Int32,System.Globalization.CultureInfo)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: LoadResString(Int32,CultureInfo)
  nameWithType: Support.LoadResString(Int32,CultureInfo)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(Int32,CultureInfo)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Loads a string from a resource (.res) file, specifying a locale."
  remarks: "In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language. At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.       In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], international versions of an application are created by changing the `Language` property of a form at design time. A separate resource file (.resx) is automatically created for each locale selected. You no longer have to explicitly load resources from code; resources are automatically loaded based on the user&quot;s locale. For more information, see [Globalizing Windows Forms](~/add/includes/ajax-current-ext-md.md).       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static string LoadResString (int ID, System.Globalization.CultureInfo Culture);
    parameters:
    - id: ID
      type: System.Int32
      description: "An <xref:System.Object> that specifies the data in the resource file."
    - id: Culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object that specifies the locale."
    return:
      type: System.String
      description: "A <xref:System.String> that contains the resource."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)
  id: PixelsToTwipsX(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: PixelsToTwipsX(Double)
  nameWithType: Support.PixelsToTwipsX(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts an X coordinate from pixels to twips."
  remarks: "In Visual Basic 6.0, coordinates were expressed in twips; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] they are expressed in pixels. This function is used by the upgrade tools to convert between the two coordinate systems.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double PixelsToTwipsX (double X);
    parameters:
    - id: X
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the X coordinate to convert."
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the X coordinate expressed in twips."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)
  id: PixelsToTwipsY(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: PixelsToTwipsY(Double)
  nameWithType: Support.PixelsToTwipsY(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Y coordinate from pixels to twips."
  remarks: "In Visual Basic 6.0, coordinates were expressed in twips; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] they are expressed in pixels. This function is used by the upgrade tools to convert between the two coordinate systems.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double PixelsToTwipsY (double Y);
    parameters:
    - id: Y
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the Y coordinate to convert."
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the Y coordinate expressed in twips."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)
  id: SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: SendKeys(String,Boolean)
  nameWithType: Support.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Sends one or more keystrokes to the active window as if typed at the keyboard."
  remarks: "This function is used by the upgrade tools to emulate the Visual Basic 6.0 `SendKeys` method. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use the `My.Computer.Keyboard.SendKeys` method instead.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void SendKeys (string Keys, bool Wait = false);
    parameters:
    - id: Keys
      type: System.String
      description: "A <xref:System.String> that contains the key values."
    - id: Wait
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to process keystrokes before control is returned to the procedure; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)
  id: SetCancel(System.Windows.Forms.Button,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: SetCancel(Button,Boolean)
  nameWithType: Support.SetCancel(Button,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(Button,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Sets the <xref:System.Windows.Forms.Form.CancelButton*> property of a <xref href=&quot;System.Windows.Forms.Form&quot;></xref>."
  remarks: "In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties. The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.       This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Cancel` property of an upgraded Visual Basic 6.0 `CommandButton` control.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void SetCancel (System.Windows.Forms.Button btn, bool Cancel);
    parameters:
    - id: btn
      type: System.Windows.Forms.Button
      description: "A <xref href=&quot;System.Windows.Forms.Button&quot;></xref>."
    - id: Cancel
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the Visual Basic 6.0 <xref uid=&quot;langword_csharp_CommandButton&quot; name=&quot;CommandButton&quot; href=&quot;&quot;></xref> control&quot;s <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;></xref> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)
  id: SetDefault(System.Windows.Forms.Button,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: SetDefault(Button,Boolean)
  nameWithType: Support.SetDefault(Button,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(Button,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Sets the <xref:System.Windows.Forms.Form.AcceptButton*> property of a <xref href=&quot;System.Windows.Forms.Form&quot;></xref>."
  remarks: "In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties. The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.       This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Default` property of an upgraded Visual Basic 6.0 `CommandButton` control.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void SetDefault (System.Windows.Forms.Button btn, bool Default);
    parameters:
    - id: btn
      type: System.Windows.Forms.Button
      description: "A <xref href=&quot;System.Windows.Forms.Button&quot;></xref>."
    - id: Default
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the Visual Basic 6.0 <xref uid=&quot;langword_csharp_CommandButton&quot; name=&quot;CommandButton&quot; href=&quot;&quot;></xref> control&quot;s <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)
  id: SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: SetItemData(Control,Int32,Int32)
  nameWithType: Support.SetItemData(Control,Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(Control,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Sets the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData&quot;></xref> property for a <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
  remarks: "In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `ItemData` property no longer exists; the <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> and `SetItemData` methods can be used to emulate the behavior of `ItemData`.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void SetItemData (System.Windows.Forms.Control Control, int Index, int ItemData);
    parameters:
    - id: Control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> or <xref href=&quot;System.Windows.Forms.ComboBox&quot;></xref> control."
    - id: Index
      type: System.Int32
      description: "The <xref uid=&quot;langword_csharp_Index&quot; name=&quot;Index&quot; href=&quot;&quot;></xref> of the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
    - id: ItemData
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> to assign to the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData&quot;></xref> property."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)
  id: SetItemString(System.Windows.Forms.Control,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: SetItemString(Control,Int32,String)
  nameWithType: Support.SetItemString(Control,Int32,String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(Control,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Sets the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString&quot;></xref> property for a <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
  remarks: "This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void SetItemString (System.Windows.Forms.Control Control, int Index, string ItemString);
    parameters:
    - id: Control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref><xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> or <xref href=&quot;System.Windows.Forms.ComboBox&quot;></xref> control."
    - id: Index
      type: System.Int32
      description: "The <xref uid=&quot;langword_csharp_Index&quot; name=&quot;Index&quot; href=&quot;&quot;></xref> of the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem&quot;></xref>."
    - id: ItemString
      type: System.String
      description: "A <xref:System.String> to assign to the <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString&quot;></xref> property."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)
  id: SetResourceBaseName(System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: SetResourceBaseName(String)
  nameWithType: Support.SetResourceBaseName(String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Assigns the name of a Visual Basic 6.0 resource file to the current [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] project namespace."
  remarks: "Resource handling is different for Visual Basic 6.0 and [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void SetResourceBaseName (string BaseFileName);
    parameters:
    - id: BaseFileName
      type: System.String
      description: "A resource file (.res)."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)
  id: SetResourceBaseName(System.String,System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: SetResourceBaseName(String,String)
  nameWithType: Support.SetResourceBaseName(String,String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Assigns the name of a Visual Basic 6.0 resource file to a [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] project namespace."
  remarks: "Resource handling is different for Visual Basic 6.0 and [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void SetResourceBaseName (string ProjectNamespace, string BaseFileName);
    parameters:
    - id: ProjectNamespace
      type: System.String
      description: "A <xref:System.String> that contains the <xref uid=&quot;langword_csharp_Namespace&quot; name=&quot;Namespace&quot; href=&quot;&quot;></xref> for the resource file."
    - id: BaseFileName
      type: System.String
      description: "A resource file (.res)."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)
  id: ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ShowForm(Form,Int32,Form)
  nameWithType: Support.ShowForm(Form,Int32,Form)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(Form,Int32,Form)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Displays a form by calling either the <xref:System.Windows.Forms.Control.Show*> or <xref:System.Windows.Forms.Form.ShowDialog*> method."
  remarks: "In Visual Basic 6.0, the `Show` method specified whether a Form would be displayed modally; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] it is replaced by the <xref:System.Windows.Forms.Control.Show%2A> and <xref:System.Windows.Forms.Form.ShowDialog%2A> methods. This function is used by the upgrade tools to map the Visual Basic 6.0 `Show` method to either the <xref:System.Windows.Forms.Control.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void ShowForm (System.Windows.Forms.Form Form, int Modal = 0, System.Windows.Forms.Form OwnerForm = null);
    parameters:
    - id: Form
      type: System.Windows.Forms.Form
      description: "The <xref href=&quot;System.Windows.Forms.Form&quot;></xref> to display."
    - id: Modal
      type: System.Int32
      description: "Optional. A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants&quot;></xref> enumeration that specifies modality."
    - id: OwnerForm
      type: System.Windows.Forms.Form
      description: "Optional. The `owner` parameter of the <xref:System.Windows.Forms.Form.ShowDialog*> method."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])
  id: TabLayout(System.Object[])
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: TabLayout(Object[])
  nameWithType: Support.TabLayout(Object[])
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Formats strings to simulate the Visual Basic 6.0 <xref uid=&quot;langword_csharp_Debug.Print&quot; name=&quot;Debug.Print&quot; href=&quot;&quot;></xref> functionality."
  remarks: "In Visual Basic 6.0, the `Debug.Print` method had an `outputlist` parameter that specified how output was formatted in the **Immediate** window. This function is used by the upgrade tools to translate the `outputlist` parameter into a string for display in the **Immediate** window.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static string TabLayout (object[] Args);
    parameters:
    - id: Args
      type: System.Object[]
      description: "An expression or list of expressions to print."
    return:
      type: System.String
      description: "A formatted <xref:System.String>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)
  id: ToPixelsUserHeight(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ToPixelsUserHeight(Double,Double,Int32)
  nameWithType: Support.ToPixelsUserHeight(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref> measurement to a pixel measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double ToPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);
    parameters:
    - id: Height
      type: System.Double
      description: "A <xref:System.Double> that represents the height."
    - id: ScaleHeight
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalHeightInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the height in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)
  id: ToPixelsUserWidth(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ToPixelsUserWidth(Double,Double,Int32)
  nameWithType: Support.ToPixelsUserWidth(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref> measurement to a pixel measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double ToPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);
    parameters:
    - id: Width
      type: System.Double
      description: "A <xref:System.Double> that represents the width."
    - id: ScaleWidth
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalWidthInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the width in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  id: ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ToPixelsUserX(Double,Double,Double,Int32)
  nameWithType: Support.ToPixelsUserX(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(Double,Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleLeft&quot; name=&quot;ScaleLeft&quot; href=&quot;&quot;></xref> measurement to a pixel measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double ToPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);
    parameters:
    - id: X
      type: System.Double
      description: "A <xref:System.Double> that represents the X coordinate."
    - id: ScaleLeft
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleLeft&quot; name=&quot;ScaleLeft&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: ScaleWidth
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleWidth&quot; name=&quot;ScaleWidth&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalWidthInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the width in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleLeft&quot; name=&quot;ScaleLeft&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  id: ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ToPixelsUserY(Double,Double,Double,Int32)
  nameWithType: Support.ToPixelsUserY(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(Double,Double,Double,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleTop&quot; name=&quot;ScaleTop&quot; href=&quot;&quot;></xref> measurement to a pixel measurement."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double ToPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);
    parameters:
    - id: Y
      type: System.Double
      description: "A <xref:System.Double> that represents the Y coordinate."
    - id: ScaleTop
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleTop&quot; name=&quot;ScaleTop&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: ScaleHeight
      type: System.Double
      description: "A <xref:System.Double> that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleHeight&quot; name=&quot;ScaleHeight&quot; href=&quot;&quot;></xref> for the current <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
    - id: OriginalHeightInPixels
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that represents the height in pixels."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the converted Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleLeft&quot; name=&quot;ScaleLeft&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  id: ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ToPixelsX(Double,ScaleMode)
  nameWithType: Support.ToPixelsX(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(Double,ScaleMode)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref>."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double ToPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);
    parameters:
    - id: X
      type: System.Double
      description: "A <xref:System.Double> that represents the X coordinate."
    - id: FromScale
      type: Microsoft.VisualBasic.Compatibility.VB6.ScaleMode
      description: "A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref> enumeration that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref> to convert from."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the pixel value for the specified <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  id: ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ToPixelsY(Double,ScaleMode)
  nameWithType: Support.ToPixelsY(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(Double,ScaleMode)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref>."
  remarks: "Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property. This included a user-defined value. [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] only supports a coordinate system that is based on pixels. This function is used by the upgrade tools to convert between pixels and a user-defined scale value.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double ToPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);
    parameters:
    - id: Y
      type: System.Double
      description: "A <xref:System.Double> that represents the Y coordinate."
    - id: FromScale
      type: Microsoft.VisualBasic.Compatibility.VB6.ScaleMode
      description: "A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ScaleMode&quot;></xref> enumeration that represents the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ScaleMode &quot; name=&quot;ScaleMode &quot; href=&quot;&quot;></xref>to convert from."
    return:
      type: System.Double
      description: "A <xref:System.Double> that contains the pixel value for the specified <xref uid=&quot;langword_csharp_ScaleMode&quot; name=&quot;ScaleMode&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX
  id: TwipsPerPixelX
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: TwipsPerPixelX()
  nameWithType: Support.TwipsPerPixelX()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets a value that is used to convert twips to pixels based on screen settings."
  remarks: "In Visual Basic 6.0, coordinates were expressed in twips; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] they are expressed in pixels. This function is used by the upgrade tools to convert between the two coordinate systems.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static float TwipsPerPixelX ();
    parameters: []
    return:
      type: System.Single
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the conversion factor."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY
  id: TwipsPerPixelY
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: TwipsPerPixelY()
  nameWithType: Support.TwipsPerPixelY()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Gets a value that is used to convert twips to pixels based on screen settings."
  remarks: "In Visual Basic 6.0, coordinates were expressed in twips; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] they are expressed in pixels. This function is used by the upgrade tools to convert between the two coordinate systems.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static float TwipsPerPixelY ();
    parameters: []
    return:
      type: System.Single
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the conversion factor."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)
  id: TwipsToPixelsX(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: TwipsToPixelsX(Double)
  nameWithType: Support.TwipsToPixelsX(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts an X coordinate from twips to pixels."
  remarks: "In Visual Basic 6.0, coordinates were expressed in twips; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] they are expressed in pixels. This function is used by the upgrade tools to convert between the two coordinate systems.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double TwipsToPixelsX (double X);
    parameters:
    - id: X
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the X coordinate to convert."
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the X coordinate expressed in pixels."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)
  id: TwipsToPixelsY(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: TwipsToPixelsY(Double)
  nameWithType: Support.TwipsToPixelsY(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts a Y coordinate from twips to pixels."
  remarks: "In Visual Basic 6.0, coordinates were expressed in twips; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] they are expressed in pixels. This function is used by the upgrade tools to convert between the two coordinate systems.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static double TwipsToPixelsY (double Y);
    parameters:
    - id: Y
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the X coordinate to convert."
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> that contains the Y coordinate expressed in pixels."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)
  id: ValidateControls(System.Windows.Forms.ContainerControl)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ValidateControls(ContainerControl)
  nameWithType: Support.ValidateControls(ContainerControl)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(ContainerControl)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Emulates the behavior of the Visual Basic 6.0 <xref uid=&quot;langword_csharp_ValidateControls&quot; name=&quot;ValidateControls&quot; href=&quot;&quot;></xref> method."
  remarks: "In Visual Basic 6.0, the `ValidateControls` method was used to force the `Validate` event for the control that has focus when a form is closed; if the `Validate` event fails, an error was raised. In [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], the `ValidateControls` method is replaced by the <xref:System.Windows.Forms.ContainerControl.Validate%2A> method, which returns `true` or `false`.       This function is used by the upgrade tools to emulate the Visual Basic 6.0 behavior.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void ValidateControls (System.Windows.Forms.ContainerControl Form);
    parameters:
    - id: Form
      type: System.Windows.Forms.ContainerControl
      description: "The <xref href=&quot;System.Windows.Forms.ContainerControl&quot;></xref> where the control is parented."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)
  id: WhatsThisMode(System.Windows.Forms.Form)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: WhatsThisMode(Form)
  nameWithType: Support.WhatsThisMode(Form)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(Form)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Displays pop-up Help for a form upgraded from Visual Basic 6.0."
  remarks: "Pop-up Help in Visual Basic 6.0 was implemented by using the `WhatsThisButton` and `WhatsThisHelp` properties of a form; pop-up Help in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] is implemented by using the <xref:System.Windows.Forms.Form.HelpButton%2A> property of a form. This function is used by the upgrade tools to change the method of displaying pop-up Help in an upgraded application.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void WhatsThisMode (System.Windows.Forms.Form Form);
    parameters:
    - id: Form
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;></xref>."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)
  id: ZOrder(System.Windows.Forms.Control,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  langs:
  - csharp
  name: ZOrder(Control,Int32)
  nameWithType: Support.ZOrder(Control,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(Control,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Converts the Visual Basic <xref uid=&quot;langword_csharp_ZOrder&quot; name=&quot;ZOrder&quot; href=&quot;&quot;></xref> method for use in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]."
  remarks: "In Visual Basic 6.0, the `ZOrder` method was used to specify the layering of controls; in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] .it is replaced by the <xref:System.Windows.Forms.Control.BringToFront%2A> and <xref:System.Windows.Forms.Control.SendToBack%2A> methods. This function is used by the upgrade tools to map between the methods.       [!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]"
  syntax:
    content: public static void ZOrder (System.Windows.Forms.Control Control, int Position);
    parameters:
    - id: Control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref>."
    - id: Position
      type: System.Int32
      description: "A <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants&quot;></xref> enumeration."
  overload: Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: CopyArray(Array)
  nameWithType: Support.CopyArray(Array)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(Array)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: CursorToIPicture(Cursor)
  nameWithType: Support.CursorToIPicture(Cursor)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(Cursor)
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Eqv(Boolean,Boolean)
  nameWithType: Support.Eqv(Boolean,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Eqv(Byte,Byte)
  nameWithType: Support.Eqv(Byte,Byte)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Byte,Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Eqv(Int16,Int16)
  nameWithType: Support.Eqv(Int16,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Int16,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Eqv(Int32,Int32)
  nameWithType: Support.Eqv(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Eqv(Int64,Int64)
  nameWithType: Support.Eqv(Int64,Int64)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Eqv(Object,Object)
  nameWithType: Support.Eqv(Object,Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(Object,Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeBold(Font,Boolean)
  nameWithType: Support.FontChangeBold(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(Font,Boolean)
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeGdiCharSet(Font,Byte)
  nameWithType: Support.FontChangeGdiCharSet(Font,Byte)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(Font,Byte)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeItalic(Font,Boolean)
  nameWithType: Support.FontChangeItalic(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(Font,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeName(Font,String)
  nameWithType: Support.FontChangeName(Font,String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(Font,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeSize(Font,Single)
  nameWithType: Support.FontChangeSize(Font,Single)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(Font,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeStrikeout(Font,Boolean)
  nameWithType: Support.FontChangeStrikeout(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(Font,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeUnderline(Font,Boolean)
  nameWithType: Support.FontChangeUnderline(Font,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(Font,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontToIFont(Font)
  nameWithType: Support.FontToIFont(Font)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(Font)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Format(Object,String,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: Support.Format(Object,String,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Format(Object,String,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.FirstDayOfWeek
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstDayOfWeek
  nameWithType: FirstDayOfWeek
  fullName: Microsoft.VisualBasic.FirstDayOfWeek
- uid: Microsoft.VisualBasic.FirstWeekOfYear
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstWeekOfYear
  nameWithType: FirstWeekOfYear
  fullName: Microsoft.VisualBasic.FirstWeekOfYear
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserHeight(Double,Double,Int32)
  nameWithType: Support.FromPixelsUserHeight(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(Double,Double,Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserWidth(Double,Double,Int32)
  nameWithType: Support.FromPixelsUserWidth(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(Double,Double,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserX(Double,Double,Double,Int32)
  nameWithType: Support.FromPixelsUserX(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(Double,Double,Double,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserY(Double,Double,Double,Int32)
  nameWithType: Support.FromPixelsUserY(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(Double,Double,Double,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsX(Double,ScaleMode)
  nameWithType: Support.FromPixelsX(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(Double,ScaleMode)
- uid: Microsoft.VisualBasic.Compatibility.VB6.ScaleMode
  parent: Microsoft.VisualBasic.Compatibility.VB6
  isExternal: false
  name: ScaleMode
  nameWithType: ScaleMode
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ScaleMode
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsY(Double,ScaleMode)
  nameWithType: Support.FromPixelsY(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(Double,ScaleMode)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetActiveControl()
  nameWithType: Support.GetActiveControl()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl()
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetCancel(Button)
  nameWithType: Support.GetCancel(Button)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(Button)
- uid: System.Windows.Forms.Button
  parent: System.Windows.Forms
  isExternal: false
  name: Button
  nameWithType: Button
  fullName: System.Windows.Forms.Button
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetDefault(Button)
  nameWithType: Support.GetDefault(Button)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(Button)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetEXEName()
  nameWithType: Support.GetEXEName()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName()
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetHInstance()
  nameWithType: Support.GetHInstance()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetItemData(Control,Int32)
  nameWithType: Support.GetItemData(Control,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(Control,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetItemString(Control,Int32)
  nameWithType: Support.GetItemString(Control,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(Control,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetPath()
  nameWithType: Support.GetPath()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath()
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IconToIPicture(Icon)
  nameWithType: Support.IconToIPicture(Icon)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(Icon)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IFontToFont(Object)
  nameWithType: Support.IFontToFont(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ImageToIPicture(Image)
  nameWithType: Support.ImageToIPicture(Image)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(Image)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ImageToIPictureDisp(Image)
  nameWithType: Support.ImageToIPictureDisp(Image)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(Image)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Imp(Boolean,Boolean)
  nameWithType: Support.Imp(Boolean,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Boolean,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Imp(Byte,Byte)
  nameWithType: Support.Imp(Byte,Byte)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Byte,Byte)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Imp(Int16,Int16)
  nameWithType: Support.Imp(Int16,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Int16,Int16)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Imp(Int32,Int32)
  nameWithType: Support.Imp(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Int32,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Imp(Int64,Int64)
  nameWithType: Support.Imp(Int64,Int64)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Int64,Int64)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Imp(Object,Object)
  nameWithType: Support.Imp(Object,Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(Object,Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IPictureDispToImage(Object)
  nameWithType: Support.IPictureDispToImage(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IPictureToImage(Object)
  nameWithType: Support.IPictureToImage(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResData(Object,Object)
  nameWithType: Support.LoadResData(Object,Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(Object,Object)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResData(Object,Object,CultureInfo)
  nameWithType: Support.LoadResData(Object,Object,CultureInfo)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(Object,Object,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResPicture(Object,LoadResConstants)
  nameWithType: Support.LoadResPicture(Object,LoadResConstants)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(Object,LoadResConstants)
- uid: Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants
  parent: Microsoft.VisualBasic.Compatibility.VB6
  isExternal: false
  name: LoadResConstants
  nameWithType: LoadResConstants
  fullName: Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResPicture(Object,LoadResConstants,CultureInfo)
  nameWithType: Support.LoadResPicture(Object,LoadResConstants,CultureInfo)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(Object,LoadResConstants,CultureInfo)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResString(Int32)
  nameWithType: Support.LoadResString(Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResString(Int32,CultureInfo)
  nameWithType: Support.LoadResString(Int32,CultureInfo)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(Int32,CultureInfo)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: PixelsToTwipsX(Double)
  nameWithType: Support.PixelsToTwipsX(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(Double)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: PixelsToTwipsY(Double)
  nameWithType: Support.PixelsToTwipsY(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(Double)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SendKeys(String,Boolean)
  nameWithType: Support.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(String,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetCancel(Button,Boolean)
  nameWithType: Support.SetCancel(Button,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(Button,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetDefault(Button,Boolean)
  nameWithType: Support.SetDefault(Button,Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(Button,Boolean)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetItemData(Control,Int32,Int32)
  nameWithType: Support.SetItemData(Control,Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(Control,Int32,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetItemString(Control,Int32,String)
  nameWithType: Support.SetItemString(Control,Int32,String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(Control,Int32,String)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetResourceBaseName(String)
  nameWithType: Support.SetResourceBaseName(String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(String)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetResourceBaseName(String,String)
  nameWithType: Support.SetResourceBaseName(String,String)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(String,String)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ShowForm(Form,Int32,Form)
  nameWithType: Support.ShowForm(Form,Int32,Form)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(Form,Int32,Form)
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TabLayout(Object[])
  nameWithType: Support.TabLayout(Object[])
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserHeight(Double,Double,Int32)
  nameWithType: Support.ToPixelsUserHeight(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(Double,Double,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserWidth(Double,Double,Int32)
  nameWithType: Support.ToPixelsUserWidth(Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(Double,Double,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserX(Double,Double,Double,Int32)
  nameWithType: Support.ToPixelsUserX(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(Double,Double,Double,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserY(Double,Double,Double,Int32)
  nameWithType: Support.ToPixelsUserY(Double,Double,Double,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(Double,Double,Double,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsX(Double,ScaleMode)
  nameWithType: Support.ToPixelsX(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(Double,ScaleMode)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsY(Double,ScaleMode)
  nameWithType: Support.ToPixelsY(Double,ScaleMode)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(Double,ScaleMode)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsPerPixelX()
  nameWithType: Support.TwipsPerPixelX()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX()
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsPerPixelY()
  nameWithType: Support.TwipsPerPixelY()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY()
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsToPixelsX(Double)
  nameWithType: Support.TwipsToPixelsX(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(Double)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsToPixelsY(Double)
  nameWithType: Support.TwipsToPixelsY(Double)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(Double)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ValidateControls(ContainerControl)
  nameWithType: Support.ValidateControls(ContainerControl)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(ContainerControl)
- uid: System.Windows.Forms.ContainerControl
  parent: System.Windows.Forms
  isExternal: false
  name: ContainerControl
  nameWithType: ContainerControl
  fullName: System.Windows.Forms.ContainerControl
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: WhatsThisMode(Form)
  nameWithType: Support.WhatsThisMode(Form)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(Form)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ZOrder(Control,Int32)
  nameWithType: Support.ZOrder(Control,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(Control,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: CopyArray
  nameWithType: Support.CopyArray
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: CursorToIPicture
  nameWithType: Support.CursorToIPicture
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Eqv
  nameWithType: Support.Eqv
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeBold
  nameWithType: Support.FontChangeBold
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeGdiCharSet
  nameWithType: Support.FontChangeGdiCharSet
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeItalic
  nameWithType: Support.FontChangeItalic
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeName
  nameWithType: Support.FontChangeName
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeSize
  nameWithType: Support.FontChangeSize
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeStrikeout
  nameWithType: Support.FontChangeStrikeout
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontChangeUnderline
  nameWithType: Support.FontChangeUnderline
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FontToIFont
  nameWithType: Support.FontToIFont
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Format*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Format
  nameWithType: Support.Format
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserHeight
  nameWithType: Support.FromPixelsUserHeight
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserWidth
  nameWithType: Support.FromPixelsUserWidth
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserX
  nameWithType: Support.FromPixelsUserX
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsUserY
  nameWithType: Support.FromPixelsUserY
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsX
  nameWithType: Support.FromPixelsX
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: FromPixelsY
  nameWithType: Support.FromPixelsY
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetActiveControl
  nameWithType: Support.GetActiveControl
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetCancel
  nameWithType: Support.GetCancel
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetDefault
  nameWithType: Support.GetDefault
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetEXEName
  nameWithType: Support.GetEXEName
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetHInstance
  nameWithType: Support.GetHInstance
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetItemData
  nameWithType: Support.GetItemData
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetItemString
  nameWithType: Support.GetItemString
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: GetPath
  nameWithType: Support.GetPath
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IconToIPicture
  nameWithType: Support.IconToIPicture
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IFontToFont
  nameWithType: Support.IFontToFont
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ImageToIPicture
  nameWithType: Support.ImageToIPicture
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ImageToIPictureDisp
  nameWithType: Support.ImageToIPictureDisp
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.Imp*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: Imp
  nameWithType: Support.Imp
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IPictureDispToImage
  nameWithType: Support.IPictureDispToImage
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: IPictureToImage
  nameWithType: Support.IPictureToImage
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResData
  nameWithType: Support.LoadResData
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResPicture
  nameWithType: Support.LoadResPicture
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: LoadResString
  nameWithType: Support.LoadResString
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: PixelsToTwipsX
  nameWithType: Support.PixelsToTwipsX
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: PixelsToTwipsY
  nameWithType: Support.PixelsToTwipsY
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SendKeys
  nameWithType: Support.SendKeys
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetCancel
  nameWithType: Support.SetCancel
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetDefault
  nameWithType: Support.SetDefault
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetItemData
  nameWithType: Support.SetItemData
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetItemString
  nameWithType: Support.SetItemString
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: SetResourceBaseName
  nameWithType: Support.SetResourceBaseName
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ShowForm
  nameWithType: Support.ShowForm
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TabLayout
  nameWithType: Support.TabLayout
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserHeight
  nameWithType: Support.ToPixelsUserHeight
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserWidth
  nameWithType: Support.ToPixelsUserWidth
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserX
  nameWithType: Support.ToPixelsUserX
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsUserY
  nameWithType: Support.ToPixelsUserY
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsX
  nameWithType: Support.ToPixelsX
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ToPixelsY
  nameWithType: Support.ToPixelsY
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsPerPixelX
  nameWithType: Support.TwipsPerPixelX
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsPerPixelY
  nameWithType: Support.TwipsPerPixelY
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsToPixelsX
  nameWithType: Support.TwipsToPixelsX
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: TwipsToPixelsY
  nameWithType: Support.TwipsToPixelsY
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ValidateControls
  nameWithType: Support.ValidateControls
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: WhatsThisMode
  nameWithType: Support.WhatsThisMode
- uid: Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder*
  parent: Microsoft.VisualBasic.Compatibility.VB6.Support
  isExternal: false
  name: ZOrder
  nameWithType: Support.ZOrder
