### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  id: RoutingExtensionElement
  children:
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  langs:
  - csharp
  name: RoutingExtensionElement
  nameWithType: RoutingExtensionElement
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  type: Class
  summary: "Representa um elemento de configuração que contém elementos secundárias que especificam o comportamento de encaminhamento."
  syntax:
    content: 'public sealed class RoutingExtensionElement : System.ServiceModel.Configuration.BehaviorExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BehaviorExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: RoutingExtensionElement()
  nameWithType: RoutingExtensionElement.RoutingExtensionElement()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RoutingExtensionElement()
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Routing.Configuration.RoutingExtensionElement&quot;> </xref> classe."
  syntax:
    content: public RoutingExtensionElement ();
    parameters: []
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  id: BehaviorType
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: BehaviorType
  nameWithType: RoutingExtensionElement.BehaviorType
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Obtém o tipo de comportamento."
  syntax:
    content: public override Type BehaviorType { get; }
    return:
      type: System.Type
      description: "O tipo de comportamento."
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior
  id: CreateBehavior
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: CreateBehavior()
  nameWithType: RoutingExtensionElement.CreateBehavior()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior()
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  syntax:
    content: protected override object CreateBehavior ();
    parameters: []
    return:
      type: System.Object
      description: "A adicionar."
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Obtém ou define um valor que indica se as mensagens estão a ser emitida pela ordem que foram enviadas."
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as mensagens estão a ser emitida pela ordem em que são enviadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  id: FilterTableName
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: FilterTableName
  nameWithType: RoutingExtensionElement.FilterTableName
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Obtém ou define o nome da tabela de filtro utilizada por este serviço de encaminhamento para encaminhamento de mensagens."
  syntax:
    content: public string FilterTableName { get; set; }
    return:
      type: System.String
      description: "O nome da tabela de filtros."
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  id: RouteOnHeadersOnly
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: RouteOnHeadersOnly
  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Obtém ou define um valor que indica se o filtro tem permissão para aceder os cabeçalhos de mensagens ou a cabeçalhos de mensagens e o corpo da mensagem."
  syntax:
    content: public bool RouteOnHeadersOnly { get; set; }
    return:
      type: System.Boolean
      description: '**Verdadeiro** se o filtro só pode aceder a valores de cabeçalho; caso contrário, **falso**. A predefinição é **verdadeiro**.'
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  id: SoapProcessingEnabled
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: SoapProcessingEnabled
  nameWithType: RoutingExtensionElement.SoapProcessingEnabled
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Obtém ou define um valor que indica se o processamento de SOAP deve ocorrer."
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Processamento de SOAP, consulte <xref:System.ServiceModel.Routing.SoapProcessingBehavior>.</xref:System.ServiceModel.Routing.SoapProcessingBehavior>'
  syntax:
    content: public bool SoapProcessingEnabled { get; set; }
    return:
      type: System.Boolean
      description: '**Verdadeiro** se as mensagens devem ser com referências empacotadas; caso contrário, **falso**. A predefinição é **verdadeiro**.'
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BehaviorExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BehaviorExtensionElement
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RoutingExtensionElement()
  nameWithType: RoutingExtensionElement.RoutingExtensionElement()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RoutingExtensionElement()
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: BehaviorType
  nameWithType: RoutingExtensionElement.BehaviorType
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: CreateBehavior()
  nameWithType: RoutingExtensionElement.CreateBehavior()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: FilterTableName
  nameWithType: RoutingExtensionElement.FilterTableName
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RouteOnHeadersOnly
  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: SoapProcessingEnabled
  nameWithType: RoutingExtensionElement.SoapProcessingEnabled
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RoutingExtensionElement
  nameWithType: RoutingExtensionElement.RoutingExtensionElement
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: BehaviorType
  nameWithType: RoutingExtensionElement.BehaviorType
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: CreateBehavior
  nameWithType: RoutingExtensionElement.CreateBehavior
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: FilterTableName
  nameWithType: RoutingExtensionElement.FilterTableName
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RouteOnHeadersOnly
  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: SoapProcessingEnabled
  nameWithType: RoutingExtensionElement.SoapProcessingEnabled
