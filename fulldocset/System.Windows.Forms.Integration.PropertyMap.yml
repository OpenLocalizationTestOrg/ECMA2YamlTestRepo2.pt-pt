### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Integration.PropertyMap
  id: PropertyMap
  children:
  - System.Windows.Forms.Integration.PropertyMap.#ctor
  - System.Windows.Forms.Integration.PropertyMap.#ctor(System.Object)
  - System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)
  - System.Windows.Forms.Integration.PropertyMap.Apply(System.String)
  - System.Windows.Forms.Integration.PropertyMap.ApplyAll
  - System.Windows.Forms.Integration.PropertyMap.Clear
  - System.Windows.Forms.Integration.PropertyMap.Contains(System.String)
  - System.Windows.Forms.Integration.PropertyMap.DefaultTranslators
  - System.Windows.Forms.Integration.PropertyMap.Item(System.String)
  - System.Windows.Forms.Integration.PropertyMap.Keys
  - System.Windows.Forms.Integration.PropertyMap.PropertyMappingError
  - System.Windows.Forms.Integration.PropertyMap.Remove(System.String)
  - System.Windows.Forms.Integration.PropertyMap.Reset(System.String)
  - System.Windows.Forms.Integration.PropertyMap.ResetAll
  - System.Windows.Forms.Integration.PropertyMap.SourceObject
  - System.Windows.Forms.Integration.PropertyMap.Values
  langs:
  - csharp
  name: PropertyMap
  nameWithType: PropertyMap
  fullName: System.Windows.Forms.Integration.PropertyMap
  type: Class
  summary: "Provides a way to translate property values between [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] controls and [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] elements."
  remarks: "Use the PropertyMap class to define translations between [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] properties and [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] properties in a hybrid application. The <xref:System.Windows.Forms.Integration.ElementHost.PropertyMap%2A?displayProperty=fullName> and <xref:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap%2A?displayProperty=fullName> properties on the <xref:System.Windows.Forms.Integration.ElementHost> and <xref:System.Windows.Forms.Integration.WindowsFormsHost> classes define mappings from one technology to the other.  \n  \n For more information, see [Walkthrough: Mapping Properties Using the ElementHost Control](https://msdn.microsoft.com/en-us/library/ms788740\\(v=vs.100\\).aspx) and [Walkthrough: Mapping Properties Using the WindowsFormsHost Element](https://msdn.microsoft.com/en-us/library/ms788729\\(v=vs.100\\).aspx)."
  example:
  - "The following code example shows how to add a mapping for the <xref:System.Windows.Forms.Control.Margin%2A> property to an <xref:System.Windows.Forms.Integration.ElementHost> control.  \n  \n [!code-cs[PropertyMappingWithElementHost#12](~/add/codesnippet/csharp/PropertyMappingWithElementHost/Form1.cs#12)]\n [!code-vb[PropertyMappingWithElementHost#12](~/add/codesnippet/visualbasic/PropertyMappingWithElementHost/Form1.vb#12)]  \n  \n The following code example shows how to replace the default mapping for the <xref:System.Windows.FrameworkElement.FlowDirection%2A> property on a <xref:System.Windows.Forms.Integration.WindowsFormsHost> control.  \n  \n [!code-cs[PropertyMappingWithWfh#12](~/add/codesnippet/csharp/t-system.windows.forms.i_17_2.cs)]\n [!code-vb[PropertyMappingWithWfh#12](~/add/codesnippet/visualbasic/t-system.windows.forms.i_17_2.vb)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class PropertyMap
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: PropertyMap()
  nameWithType: PropertyMap.PropertyMap()
  fullName: System.Windows.Forms.Integration.PropertyMap.PropertyMap()
  type: Constructor
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.Integration.PropertyMap&quot;></xref> class."
  syntax:
    content: public PropertyMap ();
    parameters: []
  overload: System.Windows.Forms.Integration.PropertyMap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: PropertyMap(Object)
  nameWithType: PropertyMap.PropertyMap(Object)
  fullName: System.Windows.Forms.Integration.PropertyMap.PropertyMap(Object)
  type: Constructor
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.Integration.PropertyMap&quot;></xref> class with the given source object."
  remarks: "`source` is the source of the properties which are translated by the <xref:System.Windows.Forms.Integration.PropertyMap>. The properties which are mapped in the <xref:System.Windows.Forms.Integration.PropertyMap> must exist on <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>.       <xref:System.Windows.Forms.Integration.PropertyTranslator> delegates are called using the current property values on <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>."
  syntax:
    content: public PropertyMap (object source);
    parameters:
    - id: source
      type: System.Object
      description: "The object which has the properties to be translated."
  overload: System.Windows.Forms.Integration.PropertyMap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)
  id: Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Add(String,PropertyTranslator)
  nameWithType: PropertyMap.Add(String,PropertyTranslator)
  fullName: System.Windows.Forms.Integration.PropertyMap.Add(String,PropertyTranslator)
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Adds a <xref href=&quot;System.Windows.Forms.Integration.PropertyTranslator&quot;></xref> delegate for the given property to the <xref href=&quot;System.Windows.Forms.Integration.PropertyMap&quot;></xref>."
  remarks: "When setting, if no <xref:System.Windows.Forms.Integration.PropertyTranslator> exists for `propertyName`, the new delegate is added to the <xref:System.Windows.Forms.Integration.PropertyMap>. If a <xref:System.Windows.Forms.Integration.PropertyTranslator> already exists for `propertyName`, an <xref:System.InvalidOperationException> is raised."
  example:
  - "The following code example shows how to add a mapping for the <xref:System.Windows.Forms.Control.Margin%2A> property to an <xref:System.Windows.Forms.Integration.ElementHost> control.  \n  \n [!code-cs[PropertyMappingWithElementHost#12](~/add/codesnippet/csharp/PropertyMappingWithElementHost/Form1.cs#12)]\n [!code-vb[PropertyMappingWithElementHost#12](~/add/codesnippet/visualbasic/PropertyMappingWithElementHost/Form1.vb#12)]  \n  \n The following code example shows how to add a mapping for the <xref:System.Windows.UIElement.Clip%2A> property to a <xref:System.Windows.Forms.Integration.WindowsFormsHost> control.  \n  \n [!code-cs[PropertyMappingWithWfh#14](~/add/codesnippet/csharp/6596649d-30e2-4978-84d0-_2.cs)]\n [!code-vb[PropertyMappingWithWfh#14](~/add/codesnippet/visualbasic/6596649d-30e2-4978-84d0-_2.vb)]"
  syntax:
    content: public void Add (string propertyName, System.Windows.Forms.Integration.PropertyTranslator translator);
    parameters:
    - id: propertyName
      type: System.String
      description: "The name of the property to map."
    - id: translator
      type: System.Windows.Forms.Integration.PropertyTranslator
      description: "The <xref href=&quot;System.Windows.Forms.Integration.PropertyTranslator&quot;></xref> delegate which is called when `propertyName` changes."
  overload: System.Windows.Forms.Integration.PropertyMap.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>propertyName</code> has an existing mapping."
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Apply(System.String)
  id: Apply(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Apply(String)
  nameWithType: PropertyMap.Apply(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Apply(String)
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Runs the property translator for the given property, based on the source object&quot;s current property value."
  syntax:
    content: public void Apply (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "The name of the property to translate."
  overload: System.Windows.Forms.Integration.PropertyMap.Apply*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The property given by <code>propertyName</code> does not exist on <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject*>."
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.ApplyAll
  id: ApplyAll
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: ApplyAll()
  nameWithType: PropertyMap.ApplyAll()
  fullName: System.Windows.Forms.Integration.PropertyMap.ApplyAll()
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Runs the property translator for each mapped property, based on the source object&quot;s current property values."
  syntax:
    content: public void ApplyAll ();
    parameters: []
  overload: System.Windows.Forms.Integration.PropertyMap.ApplyAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Clear
  id: Clear
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Clear()
  nameWithType: PropertyMap.Clear()
  fullName: System.Windows.Forms.Integration.PropertyMap.Clear()
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Removes all property mappings."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Forms.Integration.PropertyMap.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Contains(System.String)
  id: Contains(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Contains(String)
  nameWithType: PropertyMap.Contains(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Contains(String)
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Gets a value indicating whether the given property is mapped."
  syntax:
    content: public bool Contains (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "The name of the property to search for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>propertyName</code> exists in the property map; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.Integration.PropertyMap.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.DefaultTranslators
  id: DefaultTranslators
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: DefaultTranslators
  nameWithType: PropertyMap.DefaultTranslators
  fullName: System.Windows.Forms.Integration.PropertyMap.DefaultTranslators
  type: Property
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Gets a collection of property mappings which are defined by default."
  remarks: "For a list of default property mappings, see [Windows Forms and WPF Property Mapping](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected System.Collections.Generic.Dictionary<string,System.Windows.Forms.Integration.PropertyTranslator> DefaultTranslators { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Integration.PropertyTranslator}
      description: "A &lt;xref:System.Collections.Generic.Dictionary%602&gt; which maps property names to corresponding <xref href=&quot;System.Windows.Forms.Integration.PropertyTranslator&quot;></xref> delegates."
  overload: System.Windows.Forms.Integration.PropertyMap.DefaultTranslators*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyMap.Item(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Item(String)
  type: Property
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Gets or sets the <xref href=&quot;System.Windows.Forms.Integration.PropertyTranslator&quot;></xref> delegate for the given property."
  remarks: "When setting, if no <xref:System.Windows.Forms.Integration.PropertyTranslator> exists for `propertyName`, the new delegate is added to the <xref:System.Windows.Forms.Integration.PropertyMap>. If a <xref:System.Windows.Forms.Integration.PropertyTranslator> already exists for `propertyName`, it is replaced."
  example:
  - "The following code example shows how to retrieve the <xref:System.Windows.Forms.Integration.PropertyTranslator> delegate for the <xref:System.Windows.Forms.Control.BackColor%2A> property of a <xref:System.Windows.Forms.Integration.ElementHost> control.  \n  \n [!code-cs[PropertyMappingWithElementHost#15](~/add/codesnippet/csharp/PropertyMappingWithElementHost/Form1.cs#15)]\n [!code-vb[PropertyMappingWithElementHost#15](~/add/codesnippet/visualbasic/PropertyMappingWithElementHost/Form1.vb#15)]  \n  \n The following code example shows how to retrieve the <xref:System.Windows.Forms.Integration.PropertyTranslator> delegate for the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Forms.Integration.WindowsFormsHost> control.  \n  \n [!code-cs[PropertyMappingWithWfh#15](~/add/codesnippet/csharp/p-system.windows.forms.i_8_2.cs)]\n [!code-vb[PropertyMappingWithWfh#15](~/add/codesnippet/visualbasic/p-system.windows.forms.i_8_2.vb)]"
  syntax:
    content: public System.Windows.Forms.Integration.PropertyTranslator this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "The name of the property to map."
    return:
      type: System.Windows.Forms.Integration.PropertyTranslator
      description: "The <xref href=&quot;System.Windows.Forms.Integration.PropertyTranslator&quot;></xref> delegate corresponding to the property specified by <code>propertyName</code>."
  overload: System.Windows.Forms.Integration.PropertyMap.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string; the specified <xref href=&quot;System.Windows.Forms.Integration.PropertyTranslator&quot;></xref> delegate is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The property given by <code>propertyName</code> does not exist on <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject*>."
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Keys
  id: Keys
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Keys
  nameWithType: PropertyMap.Keys
  fullName: System.Windows.Forms.Integration.PropertyMap.Keys
  type: Property
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Gets an <xref:System.Collections.ICollection> object containing the property names in the <xref href=&quot;System.Windows.Forms.Integration.PropertyMap&quot;></xref> collection."
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "An <xref:System.Collections.ICollection> object containing the property names of the <xref href=&quot;System.Windows.Forms.Integration.PropertyMap&quot;></xref> collection."
  overload: System.Windows.Forms.Integration.PropertyMap.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.PropertyMappingError
  id: PropertyMappingError
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: PropertyMappingError
  nameWithType: PropertyMap.PropertyMappingError
  fullName: System.Windows.Forms.Integration.PropertyMap.PropertyMappingError
  type: Event
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Occurs when an exception is raised by a property translator."
  remarks: "Handlers for the PropertyMappingError event can optionally raise the exception by setting the <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> flag on the <xref:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs>."
  syntax:
    content: public event EventHandler<System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs> PropertyMappingError;
    return:
      type: System.EventHandler{System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs}
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Remove(System.String)
  id: Remove(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Remove(String)
  nameWithType: PropertyMap.Remove(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Remove(String)
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Deletes the given property from the mapping."
  remarks: ''
  example:
  - "The following code example shows how to remove a mapping for the <xref:System.Windows.Forms.Control.Cursor%2A> property to an <xref:System.Windows.Forms.Integration.ElementHost> control.  \n  \n [!code-cs[PropertyMappingWithElementHost#13](~/add/codesnippet/csharp/PropertyMappingWithElementHost/Form1.cs#13)]\n [!code-vb[PropertyMappingWithElementHost#13](~/add/codesnippet/visualbasic/PropertyMappingWithElementHost/Form1.vb#13)]  \n  \n The following code example shows how to add a mapping for the <xref:System.Windows.FrameworkElement.Cursor%2A> property to a <xref:System.Windows.Forms.Integration.WindowsFormsHost> control.  \n  \n [!code-cs[PropertyMappingWithWfh#13](~/add/codesnippet/csharp/m-system.windows.forms.i_16_2.cs)]\n [!code-vb[PropertyMappingWithWfh#13](~/add/codesnippet/visualbasic/m-system.windows.forms.i_16_2.vb)]"
  syntax:
    content: public void Remove (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "The name of the property to remove."
  overload: System.Windows.Forms.Integration.PropertyMap.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Reset(System.String)
  id: Reset(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Reset(String)
  nameWithType: PropertyMap.Reset(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Reset(String)
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Restores the default property mapping for the given property."
  remarks: "The Reset method has the following effects on the <xref:System.Windows.Forms.Integration.PropertyMap>.      -   A default property mapping that has been removed is restored.      -   A property mapping that has been added is removed.      -   A default property mapping that has been overridden is restored to its default value."
  syntax:
    content: public void Reset (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "The name of the property to restore."
  overload: System.Windows.Forms.Integration.PropertyMap.Reset*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.ResetAll
  id: ResetAll
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: ResetAll()
  nameWithType: PropertyMap.ResetAll()
  fullName: System.Windows.Forms.Integration.PropertyMap.ResetAll()
  type: Method
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Restores the default property mappings."
  remarks: "The ResetAll method has the following effects on the <xref:System.Windows.Forms.Integration.PropertyMap>.      -   Default property mappings that have been removed are restored.      -   Property mappings that have been added are removed.      -   Default property mappings that have been overridden are restored to their default values."
  syntax:
    content: public void ResetAll ();
    parameters: []
  overload: System.Windows.Forms.Integration.PropertyMap.ResetAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.SourceObject
  id: SourceObject
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: SourceObject
  nameWithType: PropertyMap.SourceObject
  fullName: System.Windows.Forms.Integration.PropertyMap.SourceObject
  type: Property
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Gets the object which has the properties to be translated."
  remarks: "The properties which are mapped in the <xref:System.Windows.Forms.Integration.PropertyMap> must exist on SourceObject."
  syntax:
    content: protected object SourceObject { get; }
    return:
      type: System.Object
      description: "The object which has the properties to be translated."
  overload: System.Windows.Forms.Integration.PropertyMap.SourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Integration.PropertyMap.Values
  id: Values
  parent: System.Windows.Forms.Integration.PropertyMap
  langs:
  - csharp
  name: Values
  nameWithType: PropertyMap.Values
  fullName: System.Windows.Forms.Integration.PropertyMap.Values
  type: Property
  assemblies:
  - WindowsFormsIntegration
  namespace: System.Windows.Forms.Integration
  summary: "Gets an <xref:System.Collections.ICollection> containing the property translators in the <xref href=&quot;System.Windows.Forms.Integration.PropertyMap&quot;></xref> collection."
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "An <xref:System.Collections.ICollection> containing the property translators in the <xref href=&quot;System.Windows.Forms.Integration.PropertyMap&quot;></xref> collection."
  overload: System.Windows.Forms.Integration.PropertyMap.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Forms.Integration.PropertyMap.#ctor
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: PropertyMap()
  nameWithType: PropertyMap.PropertyMap()
  fullName: System.Windows.Forms.Integration.PropertyMap.PropertyMap()
- uid: System.Windows.Forms.Integration.PropertyMap.#ctor(System.Object)
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: PropertyMap(Object)
  nameWithType: PropertyMap.PropertyMap(Object)
  fullName: System.Windows.Forms.Integration.PropertyMap.PropertyMap(Object)
- uid: System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Add(String,PropertyTranslator)
  nameWithType: PropertyMap.Add(String,PropertyTranslator)
  fullName: System.Windows.Forms.Integration.PropertyMap.Add(String,PropertyTranslator)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Integration.PropertyTranslator
  parent: System.Windows.Forms.Integration
  isExternal: false
  name: PropertyTranslator
  nameWithType: PropertyTranslator
  fullName: System.Windows.Forms.Integration.PropertyTranslator
- uid: System.Windows.Forms.Integration.PropertyMap.Apply(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Apply(String)
  nameWithType: PropertyMap.Apply(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Apply(String)
- uid: System.Windows.Forms.Integration.PropertyMap.ApplyAll
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: ApplyAll()
  nameWithType: PropertyMap.ApplyAll()
  fullName: System.Windows.Forms.Integration.PropertyMap.ApplyAll()
- uid: System.Windows.Forms.Integration.PropertyMap.Clear
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Clear()
  nameWithType: PropertyMap.Clear()
  fullName: System.Windows.Forms.Integration.PropertyMap.Clear()
- uid: System.Windows.Forms.Integration.PropertyMap.Contains(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Contains(String)
  nameWithType: PropertyMap.Contains(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Integration.PropertyMap.DefaultTranslators
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: DefaultTranslators
  nameWithType: PropertyMap.DefaultTranslators
  fullName: System.Windows.Forms.Integration.PropertyMap.DefaultTranslators
- uid: System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Integration.PropertyTranslator}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,PropertyTranslator>
  nameWithType: Dictionary<String,PropertyTranslator>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Windows.Forms.Integration.PropertyTranslator>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Windows.Forms.Integration.PropertyTranslator>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Windows.Forms.Integration.PropertyTranslator
    name: PropertyTranslator
    nameWithType: PropertyTranslator
    fullName: PropertyTranslator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Forms.Integration.PropertyMap.Item(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Item(String)
  nameWithType: PropertyMap.Item(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Item(String)
- uid: System.Windows.Forms.Integration.PropertyMap.Keys
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Keys
  nameWithType: PropertyMap.Keys
  fullName: System.Windows.Forms.Integration.PropertyMap.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.Forms.Integration.PropertyMap.PropertyMappingError
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: PropertyMappingError
  nameWithType: PropertyMap.PropertyMappingError
  fullName: System.Windows.Forms.Integration.PropertyMap.PropertyMappingError
- uid: System.EventHandler{System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PropertyMappingExceptionEventArgs>
  nameWithType: EventHandler<PropertyMappingExceptionEventArgs>
  fullName: System.EventHandler<System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs
    name: PropertyMappingExceptionEventArgs
    nameWithType: PropertyMappingExceptionEventArgs
    fullName: PropertyMappingExceptionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Forms.Integration.PropertyMap.Remove(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Remove(String)
  nameWithType: PropertyMap.Remove(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Remove(String)
- uid: System.Windows.Forms.Integration.PropertyMap.Reset(System.String)
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Reset(String)
  nameWithType: PropertyMap.Reset(String)
  fullName: System.Windows.Forms.Integration.PropertyMap.Reset(String)
- uid: System.Windows.Forms.Integration.PropertyMap.ResetAll
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: ResetAll()
  nameWithType: PropertyMap.ResetAll()
  fullName: System.Windows.Forms.Integration.PropertyMap.ResetAll()
- uid: System.Windows.Forms.Integration.PropertyMap.SourceObject
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: SourceObject
  nameWithType: PropertyMap.SourceObject
  fullName: System.Windows.Forms.Integration.PropertyMap.SourceObject
- uid: System.Windows.Forms.Integration.PropertyMap.Values
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Values
  nameWithType: PropertyMap.Values
  fullName: System.Windows.Forms.Integration.PropertyMap.Values
- uid: System.Windows.Forms.Integration.PropertyMap.#ctor*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: PropertyMap
  nameWithType: PropertyMap.PropertyMap
- uid: System.Windows.Forms.Integration.PropertyMap.Add*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Add
  nameWithType: PropertyMap.Add
- uid: System.Windows.Forms.Integration.PropertyMap.Apply*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Apply
  nameWithType: PropertyMap.Apply
- uid: System.Windows.Forms.Integration.PropertyMap.ApplyAll*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: ApplyAll
  nameWithType: PropertyMap.ApplyAll
- uid: System.Windows.Forms.Integration.PropertyMap.Clear*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Clear
  nameWithType: PropertyMap.Clear
- uid: System.Windows.Forms.Integration.PropertyMap.Contains*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Contains
  nameWithType: PropertyMap.Contains
- uid: System.Windows.Forms.Integration.PropertyMap.DefaultTranslators*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: DefaultTranslators
  nameWithType: PropertyMap.DefaultTranslators
- uid: System.Windows.Forms.Integration.PropertyMap.Item*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Item
  nameWithType: PropertyMap.Item
- uid: System.Windows.Forms.Integration.PropertyMap.Keys*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Keys
  nameWithType: PropertyMap.Keys
- uid: System.Windows.Forms.Integration.PropertyMap.Remove*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Remove
  nameWithType: PropertyMap.Remove
- uid: System.Windows.Forms.Integration.PropertyMap.Reset*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Reset
  nameWithType: PropertyMap.Reset
- uid: System.Windows.Forms.Integration.PropertyMap.ResetAll*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: ResetAll
  nameWithType: PropertyMap.ResetAll
- uid: System.Windows.Forms.Integration.PropertyMap.SourceObject*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: SourceObject
  nameWithType: PropertyMap.SourceObject
- uid: System.Windows.Forms.Integration.PropertyMap.Values*
  parent: System.Windows.Forms.Integration.PropertyMap
  isExternal: false
  name: Values
  nameWithType: PropertyMap.Values
