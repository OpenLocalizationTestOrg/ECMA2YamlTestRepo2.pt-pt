### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "Fornece um mecanismo de formato independente de transferência de dados."
  remarks: "O `IDataObject` interface é utilizada pelo <xref:System.Windows.Forms.Clipboard>classe e nas operações de arrastar e largar.</xref:System.Windows.Forms.Clipboard>       Quando implementada numa classe, os métodos de IDataObject permitem ao utilizador armazenar dados em vários formatos numa instância da classe. Armazenamento de dados no formato mais do que um aumenta a probabilidade de que uma aplicação de destino, cujos requisitos de formato poderá não saber, pode obter os dados armazenados. Para armazenar dados numa instância do IDataObject, chame o <xref:System.Windows.Forms.IDataObject.SetData%2A>método e especifique o formato dos dados no `format` parâmetro.</xref:System.Windows.Forms.IDataObject.SetData%2A> Definir o `autoConvert` parâmetro `false` se não pretender que os dados armazenados a ser convertida para outro formato quando é obtido. Invocar <xref:System.Windows.Forms.IDataObject.SetData%2A>várias vezes numa instância do IDataObject para armazenar dados num formato mais do que um.</xref:System.Windows.Forms.IDataObject.SetData%2A>       Obter dados armazenados a partir de um IDataObject ao chamar o <xref:System.Windows.Forms.IDataObject.GetData%2A>método e especificar os dados de formato no `format` parâmetro.</xref:System.Windows.Forms.IDataObject.GetData%2A> Definir o `autoConvert` parâmetro `false` para obter apenas os dados que foram armazenados no formato especificado. Para converter os dados armazenados no formato especificado, defina `autoConvert` para `true`, ou não utilize `autoConvert`.       Para determinar os formatos dos dados armazenados num IDataObject, utilize os seguintes métodos de IDataObject.      -Chamar o <xref:System.Windows.Forms.IDataObject.GetFormats%2A>método para obter uma matriz de todos os formatos na qual os dados estão disponíveis.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> Definir o `autoConvert` parâmetro `false` para obter apenas os formatos na qual os dados são armazenados. Para obter todos os formatos na qual os dados estão disponíveis, defina `autoConvert` para `true`, ou não utilize este parâmetro.      -Chamar o <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>método para determinar se os dados armazenados estão disponíveis em determinados formato.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Se não pretender que os dados armazenados a ser convertida no formato especificado, defina o `autoConvert` parâmetro `false`.       Consulte o <xref:System.Windows.Forms.DataObject>classe para uma implementação desta interface.</xref:System.Windows.Forms.DataObject> Consulte o <xref:System.Windows.Forms.DataFormats>classe predefinida para <xref:System.Windows.Forms.Clipboard>formatos de dados.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém os dados associados com o formato de dados especificada."
  remarks: "Se este método não é possível localizar dados no formato especificado, este tenta converter os dados para o formato. Se os dados não não possível converter o formato especificado, este método devolve `null`.       Para determinar se os dados se encontra associados ou podem ser convertidos para um formato, chamada <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>antes de chamar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Chamar <xref:System.Windows.Forms.IDataObject.GetFormats%2A>para uma lista de formatos válidos para os dados armazenados nesta instância.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "O formato dos dados a obter. Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    return:
      type: System.Object
      description: "Os dados associados de formato especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém os dados associados com o formato de tipo de classe especificada."
  remarks: "Se este método não é possível localizar dados no formato especificado, este tenta converter os dados para o formato. Se os dados não não possível converter o formato especificado, este método devolve `null`.       Para determinar se os dados se encontra associados ou podem ser convertidos para um formato, chamada <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>antes de chamar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Chamar <xref:System.Windows.Forms.IDataObject.GetFormats%2A>para uma lista de formatos válidos para os dados armazenados nesta instância.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>que representa o formato dos dados a obter.</xref:System.Type> Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    return:
      type: System.Object
      description: "Os dados associados de formato especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém os dados associados com o formato de dados especificado, utilizando um valor booleano para determinar se deve converter os dados para o formato."
  remarks: "Se o `autoConvert` parâmetro é `true` e este método não é possível localizar dados no formato especificado, este tenta converter os dados para o formato. Se os dados não podem ser convertidos no formato especificado ou se os dados foram armazenados com o `autoConvert` parâmetro definido como `false`, este método devolve `null`.       Se o `autoConvert` parâmetro é `false`, este método devolve a data no formato especificado, ou `null` se não existem dados neste formato podem ser encontrados.       Para determinar se os dados se encontra associados, ou podem ser convertidos para um formato, chamar <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>antes de chamar GetData.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Chamar <xref:System.Windows.Forms.IDataObject.GetFormats%2A>para uma lista de formatos válidos para os dados armazenados nesta instância.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "O formato dos dados a obter. Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>converter os dados no formato especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Os dados associados de formato especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se os dados armazenados nesta instância estão associados, ou podem ser convertidos para o formato especificado."
  remarks: "Chamar este método para determinar se um formato existe este <xref:System.Windows.Forms.DataObject>antes de chamar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Chamar <xref:System.Windows.Forms.IDataObject.GetFormats%2A>para os formatos que estão disponíveis nesta instância.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "O formato no qual pretende verificar. Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados armazenados nesta instância é associada ou pode ser convertida para o formato especificado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se os dados armazenados nesta instância estão associados, ou podem ser convertidos para o formato especificado."
  remarks: "Chamar este método para determinar se um formato existe este <xref:System.Windows.Forms.DataObject>antes de chamar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Chamar <xref:System.Windows.Forms.IDataObject.GetFormats%2A>para os formatos que estão disponíveis nesta instância.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>que representa o formato no qual pretende verificar.</xref:System.Type> Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados armazenados nesta instância é associada ou pode ser convertida para o formato especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se estão associados ao formato especificado, utilizando um valor booleano para determinar se deve converter os dados para o formato de dados armazenados nesta instância."
  remarks: "Chamar este método para determinar se um formato existe este <xref:System.Windows.Forms.DataObject>antes de chamar <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Chamar <xref:System.Windows.Forms.IDataObject.GetFormats%2A>para os formatos que estão disponíveis nesta instância.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       Este método devolve `true` quando: - `autoConvert` parâmetro é `true` e os dados estão num formato que pode ser convertido no formato adequado.      -O `autoConvert` parâmetro é `false` e os dados estão no formato adequado.       Este método devolve `false` quando: - `autoConvert` parâmetro é `true` e este método não é possível localizar dados no formato especificado e não é possível converter dados no formato especificado ou os dados foram armazenados com `autoConvert` definido como `false`.      -O `autoConvert` parâmetro é `false`, e os dados não existe nesta instância no formato especificado.      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "O formato no qual pretende verificar. Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para determinar se os dados armazenados nesta instância pode ser convertida no formato especificado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para verificar se os dados estão no formato especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados se encontra no ou podem ser convertidos para o formato especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Devolve uma lista de todos os formatos que estão associados ou podem ser convertidos para dados armazenados nesta instância."
  remarks: "Chamar este método para obter os formatos de dados suportada antes de chamar o <xref:System.Windows.Forms.IDataObject.GetData%2A>método.</xref:System.Windows.Forms.IDataObject.GetData%2A> Consulte o <xref:System.Windows.Forms.DataFormats>classe para os formatos de predefinido.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "Uma matriz de nomes que representa uma lista de todos os formatos que são suportados pelos dados armazenados neste objeto."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém uma lista dos formatos de todos os dados armazenados nesta instância estão associados, ou podem ser convertidos, utilizando um valor booleano para determinar se obter todos os formatos que os dados podem ser convertidos em ou apenas os dados de nativos formatos."
  remarks: "Chamar este método para obter os formatos de dados suportada antes de chamar o <xref:System.Windows.Forms.IDataObject.GetData%2A>método.</xref:System.Windows.Forms.IDataObject.GetData%2A> Consulte o <xref:System.Windows.Forms.DataFormats>classe para os formatos de predefinido.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Dados podem ser convertidos para outro formato se foi armazenada que conversão é permitida especificar e se o formato do pedido é compatível com o formato armazenado. Por exemplo, dados armazenados como Unicode pode ser convertido para texto.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para obter todos os formatos de que os dados armazenados nesta instância estão associados, ou podem ser convertidos para; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> obter apenas os formatos de dados nativos."
    return:
      type: System.String[]
      description: "Uma matriz de nomes que representa uma lista de todos os formatos que são suportados pelos dados armazenados neste objeto."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Armazena os dados especificados nesta instância, utilizando a classe dos dados para o formato."
  remarks: "O formato é derivado da classe de dados.       Os dados armazenados através deste método podem ser convertidos para um formato compatível quando é obtido.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Os dados para armazenar."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Armazena os dados especificados e o respetivo formato associado nesta instância."
  remarks: "Se não souber o formato da aplicação de destino, pode armazenar dados em vários formatos através deste método.       Os dados armazenados através deste método podem ser convertidos para um formato compatível quando é obtido.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "O formato associado com os dados. Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    - id: data
      type: System.Object
      description: "Os dados para armazenar."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Armazena os dados especificados e o tipo de classe associada nesta instância."
  remarks: "Se não souber o formato da aplicação de destino, pode armazenar dados em vários formatos através deste método.       Os dados armazenados através deste método podem ser convertidos para um formato compatível quando é obtido.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>que representa o formato associado com os dados.</xref:System.Type> Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    - id: data
      type: System.Object
      description: "Os dados para armazenar."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Armazena os dados especificados e o respetivo formato associado nesta instância, utilizando um valor booleano para especificar se os dados podem ser convertidos para outro formato."
  remarks: "Se não souber o formato da aplicação de destino, pode armazenar dados em vários formatos através deste método.       Para uma implementação deste método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "O formato associado com os dados. Consulte <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> para formatos predefinidos."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para permitir que os dados a ser convertida para outro formato; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: data
      type: System.Object
      description: "Os dados para armazenar."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
