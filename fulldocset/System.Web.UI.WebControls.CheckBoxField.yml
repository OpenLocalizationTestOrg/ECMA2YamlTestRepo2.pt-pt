### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.CheckBoxField
  id: CheckBoxField
  children:
  - System.Web.UI.WebControls.CheckBoxField.#ctor
  - System.Web.UI.WebControls.CheckBoxField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.CheckBoxField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.CheckBoxField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.CheckBoxField.CreateField
  - System.Web.UI.WebControls.CheckBoxField.DataField
  - System.Web.UI.WebControls.CheckBoxField.DataFormatString
  - System.Web.UI.WebControls.CheckBoxField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.CheckBoxField.GetDesignTimeValue
  - System.Web.UI.WebControls.CheckBoxField.HtmlEncode
  - System.Web.UI.WebControls.CheckBoxField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.CheckBoxField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.CheckBoxField.NullDisplayText
  - System.Web.UI.WebControls.CheckBoxField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.CheckBoxField.SupportsHtmlEncode
  - System.Web.UI.WebControls.CheckBoxField.Text
  - System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback
  langs:
  - csharp
  name: CheckBoxField
  nameWithType: CheckBoxField
  fullName: System.Web.UI.WebControls.CheckBoxField
  type: Class
  summary: "Represents a Boolean field that is displayed as a check box in a data-bound control."
  remarks: "The CheckBoxField class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display the value of a Boolean data field in a check box. The CheckBoxField object is displayed differently depending on the data-bound control in which it is used. For example, the <xref:System.Web.UI.WebControls.GridView> control displays a CheckBoxField object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.      > [!NOTE] >  A check box is disabled (read-only) until the data-bound control displays a record that contains the check box in edit mode. For more information on how to put a record into edit mode, see the documentation for the parent control that contains the CheckBoxField object.       To specify the field to display in a CheckBoxField object, set the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property with the field&quot;s name.      > [!NOTE] >  Because a check box can display only a selected or an unselected state, a CheckBoxField object can be bound only to a field with a Boolean data type or a string that can be parsed by <xref:System.Boolean.Parse%2A>.       You can display a caption next to each check box by setting the <xref:System.Web.UI.WebControls.CheckBoxField.Text%2A> property. A CheckBoxField object is hidden in a data-bound control when the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property is set to `false`. To prevent the value of a field from being modified in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to `true`. In data-bound controls that support inserting records (such as the <xref:System.Web.UI.WebControls.DetailsView> control), you can hide a CheckBoxField object in insert mode by setting the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property to `false`.       You can customize the header and footer sections of a CheckBoxField object. To display a caption in the header or footer sections, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively. Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property. The header section can be hidden in the CheckBoxField object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`.      > [!NOTE] >  Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control. These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual bound field. To show or hide the entire header section of a data-bound control (if available), use the control&quot;s `ShowHeader` property.       You also can customize the appearance of the CheckBoxField object (font color, background color, and so on) by setting the style properties for the different parts of the field. The following table lists the different style properties.      |Style property|Description|   |--------------------|-----------------|   |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|The style settings for the child Web server controls of the CheckBoxField object.|   |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|The style settings for the footer section of the CheckBoxField object.|   |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|The style settings for the header section of the CheckBoxField object.|   |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|The style settings for the data items in the CheckBoxField object.|"
  example:
  - "The following code example demonstrates how to use a CheckBoxField object in a <xref:System.Web.UI.WebControls.GridView> control to display a field from a Microsoft SQL Server data source with a Boolean data type.  \n  \n [!code-cs[CheckBoxField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_367_1.aspx)]\n [!code-vb[CheckBoxField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_367_1.aspx)]"
  syntax:
    content: 'public class CheckBoxField : System.Web.UI.WebControls.BoundField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.BoundField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: CheckBoxField()
  nameWithType: CheckBoxField.CheckBoxField()
  fullName: System.Web.UI.WebControls.CheckBoxField.CheckBoxField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.CheckBoxField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.       To dynamically add a <xref:System.Web.UI.WebControls.CheckBoxField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.CheckBoxField> object, set its properties, and then add it to the data-bound control&quot;s field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.CheckBoxField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.      > [!NOTE] >  Although you can dynamically add fields to a data-bound control, it is strongly recommended that all fields be statically declared and then shown or hidden, as appropriate. Statically declaring all your fields reduces the size of the view state for the parent data-bound control."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.CheckBoxField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CheckBoxFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_44_1.aspx)]\n [!code-vb[CheckBoxFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_44_1.aspx)]"
  syntax:
    content: public CheckBoxField ();
    parameters: []
  overload: System.Web.UI.WebControls.CheckBoxField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: CheckBoxField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.CheckBoxField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> class."
  remarks: "The ApplyFormatInEditMode property is inherited from the <xref:System.Web.UI.WebControls.BoundField> class, but is not applicable to the <xref:System.Web.UI.WebControls.CheckBoxField> class. Any attempt to access the value of this property will throw a <xref:System.NotSupportedException?displayProperty=fullName> exception."
  syntax:
    content: public override bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases. This property is not supported, and throws a &lt;xref:System.NotSupportedException?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.CheckBoxField.ApplyFormatInEditMode*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to read or set the value of this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: CheckBoxField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.CheckBoxField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> class."
  remarks: "The ConvertEmptyStringToNull property is inherited from the <xref:System.Web.UI.WebControls.BoundField> class, but is not applicable to the <xref:System.Web.UI.WebControls.CheckBoxField> class. Any attempt to access the value of this property will throw a <xref:System.NotSupportedException?displayProperty=fullName> exception."
  syntax:
    content: public override bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases. This property is not supported and throws a &lt;xref:System.NotSupportedException?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.CheckBoxField.ConvertEmptyStringToNull*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to read or set the value of this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: CheckBoxField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.CheckBoxField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies the properties of the current <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> object to the specified <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object."
  remarks: "The CopyProperties method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to copy the properties of the current <xref:System.Web.UI.WebControls.CheckBoxField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the CopyProperties method."
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> to copy the properties of the current <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> to."
  overload: System.Web.UI.WebControls.CheckBoxField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: CreateField()
  nameWithType: CheckBoxField.CreateField()
  fullName: System.Web.UI.WebControls.CheckBoxField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates an empty <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> object."
  remarks: "The CreateField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to create an empty <xref:System.Web.UI.WebControls.CheckBoxField> object to which the properties of the current <xref:System.Web.UI.WebControls.CheckBoxField> object can be copied."
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: DataField
  nameWithType: CheckBoxField.DataField
  fullName: System.Web.UI.WebControls.CheckBoxField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the name of the data field to bind to the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> object."
  remarks: "Use the DataField property to specify the name of the data field to bind to the <xref:System.Web.UI.WebControls.CheckBoxField> object."
  syntax:
    content: public override string DataField { get; set; }
    return:
      type: System.String
      description: "The name of the data field to bind to the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CheckBoxField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: CheckBoxField.DataFormatString
  fullName: System.Web.UI.WebControls.CheckBoxField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the string that specifies the display format for the value of the field. This property is not supported by the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> class."
  remarks: "The DataFormatString property is inherited from the <xref:System.Web.UI.WebControls.BoundField> class, but is not applicable to the <xref:System.Web.UI.WebControls.CheckBoxField> class. Any attempt to access the value of this property will throw a <xref:System.NotSupportedException?displayProperty=fullName> exception."
  syntax:
    content: public override string DataFormatString { get; set; }
    return:
      type: System.String
      description: "A formatting string that specifies the display format for the value of the field. This property is not supported, and throws a &lt;xref:System.NotSupportedException?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.CheckBoxField.DataFormatString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to read or set the value of this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: CheckBoxField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.CheckBoxField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fills the specified &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; object with the values from the specified <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> object."
  remarks: "The ExtractValuesFromCell method is provided as a convenient way to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.DataControlFieldCell> object in a <xref:System.Web.UI.WebControls.CheckBoxField> object.      > [!NOTE] >  This method is used primarily by control developers.       This method does not have a return value. Instead, the field values are returned by reference through the <xref:System.Collections.IDictionary?displayProperty=fullName> object passed in for the `dictionary` parameter. After the method has been called, iterate through the <xref:System.Collections.IDictionary?displayProperty=fullName> object to access the field values.      > [!NOTE] >  If the <xref:System.Web.UI.WebControls.DataControlFieldCell> object contains read-only field values, you must pass in `true` for the `includeReadOnly` parameter to include those values."
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; used to store the values of the specified cell."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> that contains the values to retrieve."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to include the values of read-only fields; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: CheckBoxField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.CheckBoxField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retrieves the value used for the field&quot;s value when rendering the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> object in a designer."
  remarks: "The GetDesignTimeValue method is a helper method used to determine what value to display for a field when rendering the <xref:System.Web.UI.WebControls.CheckBoxField> object in a designer. If real data can not be retrieved from the data source at design time, the value returned by this method is displayed instead."
  syntax:
    content: protected override object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "Always returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: CheckBoxField.HtmlEncode
  fullName: System.Web.UI.WebControls.CheckBoxField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> class."
  remarks: "The HtmlEncode property is inherited from the <xref:System.Web.UI.WebControls.BoundField> class, but is not applicable to the <xref:System.Web.UI.WebControls.CheckBoxField> class. Any attempt to access the value of this property will throw a <xref:System.NotSupportedException?displayProperty=fullName> exception."
  syntax:
    content: public override bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases. This property is not supported and throws a &lt;xref:System.NotSupportedException?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.CheckBoxField.HtmlEncode*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to read or set the value of this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: CheckBoxField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.CheckBoxField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that indicates whether the formatted text should be HTML encoded before it is displayed."
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed."
  syntax:
    content: public override bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the text should be HTML encoded; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: CheckBoxField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.CheckBoxField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes the specified <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> object to the specified row state."
  remarks: "The InitializeDataCell method is a helper method used to initialize a cell in the <xref:System.Web.UI.WebControls.CheckBoxField> object."
  syntax:
    content: protected override void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> to initialize."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values."
  overload: System.Web.UI.WebControls.CheckBoxField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: CheckBoxField.NullDisplayText
  fullName: System.Web.UI.WebControls.CheckBoxField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text displayed for a field when the field&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. This property is not supported by the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> class."
  remarks: "The NullDisplayText property is inherited from the <xref:System.Web.UI.WebControls.BoundField> class, but is not applicable to the <xref:System.Web.UI.WebControls.CheckBoxField> class. Any attempt to access the value of this property will throw a <xref:System.NotSupportedException?displayProperty=fullName> exception."
  syntax:
    content: public override string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "The text displayed for a field with a value of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. This property is not supported, and throws a &lt;xref:System.NotSupportedException?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.CheckBoxField.NullDisplayText*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to read or set the value of this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: CheckBoxField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.CheckBoxField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Binds the value of a field to a check box in the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> object."
  remarks: "The OnDataBindField method is a helper method used to bind the value of a field in the data source to a corresponding check box in the <xref:System.Web.UI.WebControls.CheckBoxField> object."
  syntax:
    content: protected override void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "The source of the event."
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Web.UI.WebControls.CheckBoxField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The control to which the field value is bound is not a <xref href=\"System.Web.UI.WebControls.CheckBox\"></xref> control.  \n  \n \\- or -  \n  \n The field value cannot be converted to a Boolean value."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: CheckBoxField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.CheckBoxField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a Boolean value indicating whether the control supports HTML encoding."
  remarks: "HTML encoding is not supported for this control, and this property always returns `false`."
  syntax:
    content: protected override bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Web.UI.WebControls.CheckBoxField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.Text
  id: Text
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: Text
  nameWithType: CheckBoxField.Text
  fullName: System.Web.UI.WebControls.CheckBoxField.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption to display next to each check box in a <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> object."
  remarks: "The Text property is used to display a caption next to each check box in a <xref:System.Web.UI.WebControls.CheckBoxField> object. If the Text property is set to an empty string, no caption is displayed.      > [!NOTE] >  All check boxes in the <xref:System.Web.UI.WebControls.CheckBoxField> object share the same caption.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Text property to specify a custom caption for the check boxes in a <xref:System.Web.UI.WebControls.CheckBoxField> object in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CheckBoxField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_185_1.aspx)]\n [!code-vb[CheckBoxField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_185_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "The caption displayed next to each check box in the <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref>. The default is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.CheckBoxField.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.CheckBoxField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: CheckBoxField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the controls contained in a <xref href=&quot;System.Web.UI.WebControls.CheckBoxField&quot;></xref> object support callbacks."
  remarks: "The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.CheckBoxField> object support callbacks. This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: System.Web.UI.WebControls.BoundField
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.CheckBoxField.#ctor
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: CheckBoxField()
  nameWithType: CheckBoxField.CheckBoxField()
  fullName: System.Web.UI.WebControls.CheckBoxField.CheckBoxField()
- uid: System.Web.UI.WebControls.CheckBoxField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: CheckBoxField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.CheckBoxField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.CheckBoxField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: CheckBoxField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.CheckBoxField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.CheckBoxField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: CheckBoxField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.CheckBoxField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.CheckBoxField.CreateField
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: CreateField()
  nameWithType: CheckBoxField.CreateField()
  fullName: System.Web.UI.WebControls.CheckBoxField.CreateField()
- uid: System.Web.UI.WebControls.CheckBoxField.DataField
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: DataField
  nameWithType: CheckBoxField.DataField
  fullName: System.Web.UI.WebControls.CheckBoxField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.CheckBoxField.DataFormatString
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: DataFormatString
  nameWithType: CheckBoxField.DataFormatString
  fullName: System.Web.UI.WebControls.CheckBoxField.DataFormatString
- uid: System.Web.UI.WebControls.CheckBoxField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: CheckBoxField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.CheckBoxField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.CheckBoxField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: CheckBoxField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.CheckBoxField.GetDesignTimeValue()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.CheckBoxField.HtmlEncode
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: HtmlEncode
  nameWithType: CheckBoxField.HtmlEncode
  fullName: System.Web.UI.WebControls.CheckBoxField.HtmlEncode
- uid: System.Web.UI.WebControls.CheckBoxField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: CheckBoxField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.CheckBoxField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.CheckBoxField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: CheckBoxField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.CheckBoxField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.CheckBoxField.NullDisplayText
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: NullDisplayText
  nameWithType: CheckBoxField.NullDisplayText
  fullName: System.Web.UI.WebControls.CheckBoxField.NullDisplayText
- uid: System.Web.UI.WebControls.CheckBoxField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: CheckBoxField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.CheckBoxField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.CheckBoxField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: CheckBoxField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.CheckBoxField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.CheckBoxField.Text
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: Text
  nameWithType: CheckBoxField.Text
  fullName: System.Web.UI.WebControls.CheckBoxField.Text
- uid: System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: CheckBoxField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.CheckBoxField.#ctor*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: CheckBoxField
  nameWithType: CheckBoxField.CheckBoxField
- uid: System.Web.UI.WebControls.CheckBoxField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: CheckBoxField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.CheckBoxField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: CheckBoxField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.CheckBoxField.CopyProperties*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: CopyProperties
  nameWithType: CheckBoxField.CopyProperties
- uid: System.Web.UI.WebControls.CheckBoxField.CreateField*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: CreateField
  nameWithType: CheckBoxField.CreateField
- uid: System.Web.UI.WebControls.CheckBoxField.DataField*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: DataField
  nameWithType: CheckBoxField.DataField
- uid: System.Web.UI.WebControls.CheckBoxField.DataFormatString*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: DataFormatString
  nameWithType: CheckBoxField.DataFormatString
- uid: System.Web.UI.WebControls.CheckBoxField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: CheckBoxField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.CheckBoxField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: CheckBoxField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.CheckBoxField.HtmlEncode*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: HtmlEncode
  nameWithType: CheckBoxField.HtmlEncode
- uid: System.Web.UI.WebControls.CheckBoxField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: CheckBoxField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.CheckBoxField.InitializeDataCell*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: InitializeDataCell
  nameWithType: CheckBoxField.InitializeDataCell
- uid: System.Web.UI.WebControls.CheckBoxField.NullDisplayText*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: NullDisplayText
  nameWithType: CheckBoxField.NullDisplayText
- uid: System.Web.UI.WebControls.CheckBoxField.OnDataBindField*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: OnDataBindField
  nameWithType: CheckBoxField.OnDataBindField
- uid: System.Web.UI.WebControls.CheckBoxField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: CheckBoxField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.CheckBoxField.Text*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: Text
  nameWithType: CheckBoxField.Text
- uid: System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.CheckBoxField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: CheckBoxField.ValidateSupportsCallback
