### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CompoundAce
  id: CompoundAce
  children:
  - System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CompoundAce.BinaryLength
  - System.Security.AccessControl.CompoundAce.CompoundAceType
  - System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)
  langs:
  - csharp
  name: CompoundAce
  nameWithType: CompoundAce
  fullName: System.Security.AccessControl.CompoundAce
  type: Class
  summary: "Represents a compound Access Control Entry (ACE)."
  syntax:
    content: 'public sealed class CompoundAce : System.Security.AccessControl.KnownAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  - System.Security.AccessControl.KnownAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  - System.Security.AccessControl.KnownAce.AccessMask
  - System.Security.AccessControl.KnownAce.SecurityIdentifier
  platform:
  - net462
- uid: System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)
  id: '#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)'
  parent: System.Security.AccessControl.CompoundAce
  langs:
  - csharp
  name: CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)
  nameWithType: CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)
  fullName: System.Security.AccessControl.CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> class."
  syntax:
    content: public CompoundAce (System.Security.AccessControl.AceFlags flags, int accessMask, System.Security.AccessControl.CompoundAceType compoundAceType, System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: flags
      type: System.Security.AccessControl.AceFlags
      description: "Contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE)."
    - id: accessMask
      type: System.Int32
      description: "The access mask for the ACE."
    - id: compoundAceType
      type: System.Security.AccessControl.CompoundAceType
      description: "A value from the <xref href=&quot;System.Security.AccessControl.CompoundAceType&quot;></xref> enumeration."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> associated with the new ACE."
  overload: System.Security.AccessControl.CompoundAce.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CompoundAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CompoundAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CompoundAce.BinaryLength
  fullName: System.Security.AccessControl.CompoundAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the length, in bytes, of the binary representation of the current <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref:System.Security.AccessControl.CompoundAce.GetBinaryForm*> method."
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "The length, in bytes, of the binary representation of the current <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> object."
  overload: System.Security.AccessControl.CompoundAce.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CompoundAce.CompoundAceType
  id: CompoundAceType
  parent: System.Security.AccessControl.CompoundAce
  langs:
  - csharp
  name: CompoundAceType
  nameWithType: CompoundAce.CompoundAceType
  fullName: System.Security.AccessControl.CompoundAce.CompoundAceType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the type of this <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> object."
  syntax:
    content: public System.Security.AccessControl.CompoundAceType CompoundAceType { get; set; }
    return:
      type: System.Security.AccessControl.CompoundAceType
      description: "The type of this <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> object."
  overload: System.Security.AccessControl.CompoundAce.CompoundAceType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CompoundAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CompoundAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CompoundAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Marshals the contents of the <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> object into the specified byte array beginning at the specified offset."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "The byte array into which the contents of the <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> is marshaled."
    - id: offset
      type: System.Int32
      description: "The offset at which to start marshaling."
  overload: System.Security.AccessControl.CompoundAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is negative or too high to allow the entire <xref href=&quot;System.Security.AccessControl.CompoundAce&quot;></xref> to be copied into <code>array</code>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.KnownAce
  isExternal: false
  name: System.Security.AccessControl.KnownAce
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)
  nameWithType: CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)
  fullName: System.Security.AccessControl.CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CompoundAceType
  parent: System.Security.AccessControl
  isExternal: false
  name: CompoundAceType
  nameWithType: CompoundAceType
  fullName: System.Security.AccessControl.CompoundAceType
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.CompoundAce.BinaryLength
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: BinaryLength
  nameWithType: CompoundAce.BinaryLength
  fullName: System.Security.AccessControl.CompoundAce.BinaryLength
- uid: System.Security.AccessControl.CompoundAce.CompoundAceType
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: CompoundAceType
  nameWithType: CompoundAce.CompoundAceType
  fullName: System.Security.AccessControl.CompoundAce.CompoundAceType
- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CompoundAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CompoundAce.GetBinaryForm(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CompoundAce.#ctor*
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: CompoundAce
  nameWithType: CompoundAce.CompoundAce
- uid: System.Security.AccessControl.CompoundAce.BinaryLength*
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: BinaryLength
  nameWithType: CompoundAce.BinaryLength
- uid: System.Security.AccessControl.CompoundAce.CompoundAceType*
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: CompoundAceType
  nameWithType: CompoundAce.CompoundAceType
- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm*
  parent: System.Security.AccessControl.CompoundAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: CompoundAce.GetBinaryForm
