### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Matrix
  id: Matrix
  children:
  - System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Determinant
  - System.Windows.Media.Matrix.Equals(System.Object)
  - System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.GetHashCode
  - System.Windows.Media.Matrix.HasInverse
  - System.Windows.Media.Matrix.Identity
  - System.Windows.Media.Matrix.Invert
  - System.Windows.Media.Matrix.IsIdentity
  - System.Windows.Media.Matrix.M11
  - System.Windows.Media.Matrix.M12
  - System.Windows.Media.Matrix.M21
  - System.Windows.Media.Matrix.M22
  - System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.OffsetX
  - System.Windows.Media.Matrix.OffsetY
  - System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Parse(System.String)
  - System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Rotate(System.Double)
  - System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.RotatePrepend(System.Double)
  - System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  - System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  - System.Windows.Media.Matrix.SetIdentity
  - System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  - System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  - System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.Matrix.ToString
  - System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  - System.Windows.Media.Matrix.Transform(System.Windows.Point)
  - System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  - System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  - System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  - System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  - System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  langs:
  - csharp
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
  type: Struct
  summary: "Represents a 3x3 affine transformation matrix used for transformations in [!INCLUDE[TLA#tla_2d](~/add/includes/tlasharptla-2d-md.md)] space."
  remarks: "A 3x3 matrix is used for transformations in a [!INCLUDE[TLA2#tla_2d](~/add/includes/tla2sharptla-2d-md.md)] x-y plane. Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation. An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.  Note that vectors are expressed as row-vectors, not column vectors.       A [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] Matrix is stored using row-major order and has the following structure:      ||||   |-|-|-|   |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|   |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|   |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|       The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.       In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:       (<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)       Although you can use a Matrix structure directly to translate individual points, or with a <xref:System.Windows.Media.MatrixTransform> to transform objects, [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] also provides a set of classes that enable you to transform objects without working directly with matrices: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform>.      <a name=&quot;xamlAttributeUsage_Matrix&quot;></a>    ## XAML Attribute Usage      ```   <object property=&quot;m11, m12, m21, m22, offsetX, offsetY&quot;/>   - or -   <object property=&quot;Identity&quot;/>   ```      <a name=&quot;xamlValues_Matrix&quot;></a>    ## XAML Values    *m11*    <xref:System.Double?displayProperty=fullName>       The value in the first row and first column of this Matrix. For more information, see the <xref:System.Windows.Media.Matrix.M11%2A> property.       *m12*    <xref:System.Double?displayProperty=fullName>       The value in the first row and second column. For more information, see the <xref:System.Windows.Media.Matrix.M12%2A> property.       *m21*    <xref:System.Double?displayProperty=fullName>       The value in the second row and first column. For more information, see the <xref:System.Windows.Media.Matrix.M21%2A> property.       *m22*    <xref:System.Double?displayProperty=fullName>       The value in the second row and second column. For more information, see the <xref:System.Windows.Media.Matrix.M22%2A> property.       *offsetX*    <xref:System.Double?displayProperty=fullName>       The value in the third row and third column. For more information, see the <xref:System.Windows.Media.Matrix.OffsetX%2A> property.       *offsetY*    <xref:System.Double?displayProperty=fullName>       The value in the third row and second column. For more information, see the <xref:System.Windows.Media.Matrix.OffsetY%2A> property."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))]

      public struct Matrix : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Matrix(Double,Double,Double,Double,Double,Double)
  nameWithType: Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  syntax:
    content: public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);
    parameters:
    - id: m11
      type: System.Double
      description: "The new <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure&quot;s <xref:System.Windows.Media.Matrix.M11*> coefficient."
    - id: m12
      type: System.Double
      description: "The new <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure&quot;s <xref:System.Windows.Media.Matrix.M12*> coefficient."
    - id: m21
      type: System.Double
      description: "The new <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure&quot;s <xref:System.Windows.Media.Matrix.M21*> coefficient."
    - id: m22
      type: System.Double
      description: "The new <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure&quot;s <xref:System.Windows.Media.Matrix.M22*> coefficient."
    - id: offsetX
      type: System.Double
      description: "The new <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure&quot;s <xref:System.Windows.Media.Matrix.OffsetX*> coefficient."
    - id: offsetY
      type: System.Double
      description: "The new <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure&quot;s <xref:System.Windows.Media.Matrix.OffsetY*> coefficient."
  overload: System.Windows.Media.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  id: Append(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Append(Matrix)
  nameWithType: Matrix.Append(Matrix)
  fullName: System.Windows.Media.Matrix.Append(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Appends the specified <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "This operation is the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`.  Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure; that is, (this * `matrix`) is not the same as (`matrix` \\* this)."
  example:
  - "The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]"
  syntax:
    content: public void Append (System.Windows.Media.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "The <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to append to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  overload: System.Windows.Media.Matrix.Append*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Determinant
  id: Determinant
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: System.Windows.Media.Matrix.Determinant
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets the determinant of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixdeterminantexample_csharp)]"
  syntax:
    content: public double Determinant { get; }
    return:
      type: System.Double
      description: "The determinant of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.Matrix.Determinant*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Windows.Media.Matrix.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Determines whether the specified <xref:System.Object> is a <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure that is identical to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The <xref:System.Object> to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>o</code> is a <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure that is identical to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  id: Equals(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Determines whether the specified <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure is identical to this instance."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public bool Equals (System.Windows.Media.Matrix value);
    parameters:
    - id: value
      type: System.Windows.Media.Matrix
      description: "The instance of <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> to compare to this instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if instances are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Matrix,Matrix)
  nameWithType: Matrix.Equals(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix,Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Determines whether the two specified <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structures are identical."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  syntax:
    content: public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "The first <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to compare."
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "The second <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.GetHashCode
  id: GetHashCode
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Windows.Media.Matrix.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Returns the hash code for this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "The hash code for this instance."
  overload: System.Windows.Media.Matrix.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.HasInverse
  id: HasInverse
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: System.Windows.Media.Matrix.HasInverse
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets a value that indicates whether this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure is invertible."
  remarks: ''
  example:
  - "The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible. If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.  \n  \n [!code-cs[MatrixExamples_snip#MatrixInverseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixinverseexample_csharp)]"
  syntax:
    content: public bool HasInverse { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> has an inverse; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.HasInverse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Identity
  id: Identity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Identity
  nameWithType: Matrix.Identity
  fullName: System.Windows.Media.Matrix.Identity
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets an identity <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  remarks: "An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0. In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] uses for the <xref:System.Windows.Media.Matrix>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.      ||||   |-|-|-|   |1|0|0|   |0|1|0|   |0|0|1|       For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string &quot;Identity&quot; instead of the coefficients of the <xref:System.Windows.Media.Matrix>."
  example:
  - "The following example shows how to retrieve the Identity matrix.  \n  \n [!code-cs[MatrixExamples_snip#MatrixIdentityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixidentityexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Identity { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "An identity matrix."
  overload: System.Windows.Media.Matrix.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Invert
  id: Invert
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Windows.Media.Matrix.Invert()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Inverts this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible. If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.  \n  \n [!code-cs[MatrixExamples_snip#MatrixInverseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixinverseexample_csharp)]"
  syntax:
    content: public void Invert ();
    parameters: []
  overload: System.Windows.Media.Matrix.Invert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure is not invertible."
  platform:
  - net462
- uid: System.Windows.Media.Matrix.IsIdentity
  id: IsIdentity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Windows.Media.Matrix.IsIdentity
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets a value that indicates whether this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure is an identity matrix."
  remarks: "An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0. In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.      ||||   |-|-|-|   |1|0|0|   |0|1|0|   |0|0|1|       For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string &quot;Identity&quot;, instead of the coefficients of the <xref:System.Windows.Media.Matrix>."
  syntax:
    content: public bool IsIdentity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure is an identity matrix; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.IsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M11
  id: M11
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M11
  nameWithType: Matrix.M11
  fullName: System.Windows.Media.Matrix.M11
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets or sets the value of the first row and first column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M11 { get; set; }
    return:
      type: System.Double
      description: "The value of the first row and first column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>. The default value is 1."
  overload: System.Windows.Media.Matrix.M11*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M12
  id: M12
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M12
  nameWithType: Matrix.M12
  fullName: System.Windows.Media.Matrix.M12
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets or sets the value of the first row and second column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "The following table shows the layout of a <xref:System.Windows.Media.Matrix>.      ||||   |-|-|-|   |<xref:System.Windows.Media.Matrix.M11%2A>|M12|0|   |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|   |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M12 { get; set; }
    return:
      type: System.Double
      description: "The value of the first row and second column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>. The default value is 0."
  overload: System.Windows.Media.Matrix.M12*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M21
  id: M21
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M21
  nameWithType: Matrix.M21
  fullName: System.Windows.Media.Matrix.M21
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets or sets the value of the second row and first column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "The following table shows the layout of a <xref:System.Windows.Media.Matrix>.      ||||   |-|-|-|   |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|   |M21|<xref:System.Windows.Media.Matrix.M22%2A>|0|   |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M21 { get; set; }
    return:
      type: System.Double
      description: "The value of the second row and first column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>. The default value is 0."
  overload: System.Windows.Media.Matrix.M21*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M22
  id: M22
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M22
  nameWithType: Matrix.M22
  fullName: System.Windows.Media.Matrix.M22
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets or sets the value of the second row and second column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "The following table shows the layout of a <xref:System.Windows.Media.Matrix> structure.      ||||   |-|-|-|   |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|   |<xref:System.Windows.Media.Matrix.M21%2A>|M22|0|   |<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M22 { get; set; }
    return:
      type: System.Double
      description: "The value of the second row and second column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure. The default value is 1."
  overload: System.Windows.Media.Matrix.M22*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Multiply(Matrix,Matrix)
  nameWithType: Matrix.Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Multiply(Matrix,Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Multiplies a <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure by another <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "Matrix multiplication is not commutative. Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`."
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);
    parameters:
    - id: trans1
      type: System.Windows.Media.Matrix
      description: "The first <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to multiply."
    - id: trans2
      type: System.Windows.Media.Matrix
      description: "The second <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to multiply."
    return:
      type: System.Windows.Media.Matrix
      description: "The result of multiplying <code>trans1</code> by <code>trans2</code>."
  overload: System.Windows.Media.Matrix.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.OffsetX
  id: OffsetX
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Windows.Media.Matrix.OffsetX
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets or sets the value of the third row and first column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "The OffsetX property is so named because it specifies the amount to translate the coordinate space along the x-axis.       The following table shows the layout of a <xref:System.Windows.Media.Matrix>.      ||||   |-|-|-|   |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|   |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|   |OffsetX|<xref:System.Windows.Media.Matrix.OffsetY%2A>|1|"
  syntax:
    content: public double OffsetX { get; set; }
    return:
      type: System.Double
      description: "The value of the third row and first column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure. The default value is 0."
  overload: System.Windows.Media.Matrix.OffsetX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.OffsetY
  id: OffsetY
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Windows.Media.Matrix.OffsetY
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Gets or sets the value of the third row and second column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "The OffsetY property is so named because it specifies the amount to translate the coordinate space along the y-axis.       The following table shows the layout of a <xref:System.Windows.Media.Matrix>.      ||||   |-|-|-|   |<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|0|   |<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|0|   |<xref:System.Windows.Media.Matrix.OffsetX%2A>|OffsetY|1|"
  syntax:
    content: public double OffsetY { get; set; }
    return:
      type: System.Double
      description: "The value of the third row and second column of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure. The default value is 0."
  overload: System.Windows.Media.Matrix.OffsetY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Equality(Matrix,Matrix)
  nameWithType: Matrix.op_Equality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Equality(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Determines whether the two specified <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structures are identical."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public static bool op_Equality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "The first <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to compare."
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "The second <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Inequality(Matrix,Matrix)
  nameWithType: Matrix.op_Inequality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Inequality(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Determines whether the two specified <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structures are not identical."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public static bool op_Inequality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "The first <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to compare."
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "The second <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>matrix1</code> and <code>matrix2</code> are not identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Multiply(Matrix,Matrix)
  nameWithType: Matrix.op_Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Multiply(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Multiplies a <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure by another <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "Matrix multiplication is not commutative. Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`."
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix op_Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);
    parameters:
    - id: trans1
      type: System.Windows.Media.Matrix
      description: "The first <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to multiply."
    - id: trans2
      type: System.Windows.Media.Matrix
      description: "The second <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to multiply."
    return:
      type: System.Windows.Media.Matrix
      description: "The result of multiplying <code>trans1</code> by <code>trans2</code>."
  overload: System.Windows.Media.Matrix.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Matrix.Parse(String)
  fullName: System.Windows.Media.Matrix.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Converts a <xref:System.String> representation of a matrix into the equivalent <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixParseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixparseexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "The <xref:System.String> representation of the matrix."
    return:
      type: System.Windows.Media.Matrix
      description: "The equivalent <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  overload: System.Windows.Media.Matrix.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  id: Prepend(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Prepend(Matrix)
  nameWithType: Matrix.Prepend(Matrix)
  fullName: System.Windows.Media.Matrix.Prepend(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Prepends the specified <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure onto this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure. Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` * this is not the same as this \\* `matrix`.  \n  \n In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependexample_csharp)]"
  syntax:
    content: public void Prepend (System.Windows.Media.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "The <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure to prepend to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  overload: System.Windows.Media.Matrix.Prepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Rotate(System.Double)
  id: Rotate(System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Rotate(Double)
  nameWithType: Matrix.Rotate(Double)
  fullName: System.Windows.Media.Matrix.Rotate(Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Applies a rotation of the specified angle about the origin of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateexample_csharp)]"
  syntax:
    content: public void Rotate (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "The angle of rotation."
  overload: System.Windows.Media.Matrix.Rotate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  id: RotateAt(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotateAt(Double,Double,Double)
  nameWithType: Matrix.RotateAt(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAt(Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Rotates this matrix about the specified point."
  remarks: ''
  example:
  - "The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]"
  syntax:
    content: public void RotateAt (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "The angle, in degrees, by which to rotate this matrix."
    - id: centerX
      type: System.Double
      description: "The x-coordinate of the point about which to rotate this matrix."
    - id: centerY
      type: System.Double
      description: "The y-coordinate of the point about which to rotate this matrix."
  overload: System.Windows.Media.Matrix.RotateAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  id: RotateAtPrepend(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotateAtPrepend(Double,Double,Double)
  nameWithType: Matrix.RotateAtPrepend(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAtPrepend(Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Prepends a rotation of the specified angle at the specified point to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependrotateexamples_csharp)]"
  syntax:
    content: public void RotateAtPrepend (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "The rotation angle, in degrees."
    - id: centerX
      type: System.Double
      description: "The x-coordinate of the rotation center."
    - id: centerY
      type: System.Double
      description: "The y-coordinate of the rotation center."
  overload: System.Windows.Media.Matrix.RotateAtPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotatePrepend(System.Double)
  id: RotatePrepend(System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotatePrepend(Double)
  nameWithType: Matrix.RotatePrepend(Double)
  fullName: System.Windows.Media.Matrix.RotatePrepend(Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Prepends a rotation of the specified angle to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependrotateexamples_csharp)]"
  syntax:
    content: public void RotatePrepend (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "The angle of rotation to prepend."
  overload: System.Windows.Media.Matrix.RotatePrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  id: Scale(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Scale(Double,Double)
  nameWithType: Matrix.Scale(Double,Double)
  fullName: System.Windows.Media.Matrix.Scale(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Appends the specified scale vector to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixscaleexamples_csharp)]"
  syntax:
    content: public void Scale (double scaleX, double scaleY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "The value by which to scale this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the x-axis."
    - id: scaleY
      type: System.Double
      description: "The value by which to scale this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the y-axis."
  overload: System.Windows.Media.Matrix.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  id: ScaleAt(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScaleAt(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAt(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAt(Double,Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Scales this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> by the specified amount about the specified point."
  remarks: ''
  example:
  - "The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixscaleexamples_csharp)]"
  syntax:
    content: public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "The amount by which to scale this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the x-axis."
    - id: scaleY
      type: System.Double
      description: "The amount by which to scale this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the y-axis."
    - id: centerX
      type: System.Double
      description: "The x-coordinate of the scale operation&quot;s center point."
    - id: centerY
      type: System.Double
      description: "The y-coordinate of the scale operation&quot;s center point."
  overload: System.Windows.Media.Matrix.ScaleAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  id: ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScaleAtPrepend(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Prepends the specified scale about the specified point of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  remarks: "In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependscaleexamples_csharp)]"
  syntax:
    content: public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "The x-axis scale factor."
    - id: scaleY
      type: System.Double
      description: "The y-axis scale factor."
    - id: centerX
      type: System.Double
      description: "The x-coordinate of the point about which the scale operation is performed."
    - id: centerY
      type: System.Double
      description: "The y-coordinate of the point about which the scale operation is performed."
  overload: System.Windows.Media.Matrix.ScaleAtPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  id: ScalePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScalePrepend(Double,Double)
  nameWithType: Matrix.ScalePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.ScalePrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Prepends the specified scale vector to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependscaleexamples_csharp)]"
  syntax:
    content: public void ScalePrepend (double scaleX, double scaleY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "The value by which to scale this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure along the x-axis."
    - id: scaleY
      type: System.Double
      description: "The value by which to scale this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure along the y-axis."
  overload: System.Windows.Media.Matrix.ScalePrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.SetIdentity
  id: SetIdentity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: SetIdentity()
  nameWithType: Matrix.SetIdentity()
  fullName: System.Windows.Media.Matrix.SetIdentity()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Changes this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure into an identity matrix."
  remarks: "An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0. In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.      ||||   |-|-|-|   |1|0|0|   |0|1|0|   |0|0|1|       For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string &quot;Identity&quot;, instead of the coefficients of the <xref:System.Windows.Media.Matrix>."
  example:
  - "The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.  \n  \n [!code-cs[MatrixExamples_snip#MatrixIdentityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixidentityexample_csharp)]"
  syntax:
    content: public void SetIdentity ();
    parameters: []
  overload: System.Windows.Media.Matrix.SetIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  id: Skew(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Skew(Double,Double)
  nameWithType: Matrix.Skew(Double,Double)
  fullName: System.Windows.Media.Matrix.Skew(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Appends a skew of the specified degrees in the x and y dimensions to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixSkewExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixskewexample_csharp)]"
  syntax:
    content: public void Skew (double skewX, double skewY);
    parameters:
    - id: skewX
      type: System.Double
      description: "The angle in the x dimension by which to skew this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
    - id: skewY
      type: System.Double
      description: "The angle in the y dimension by which to skew this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.Matrix.Skew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  id: SkewPrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: SkewPrepend(Double,Double)
  nameWithType: Matrix.SkewPrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.SkewPrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Prepends a skew of the specified degrees in the x and y dimensions to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixskewprependexample_csharp)]"
  syntax:
    content: public void SkewPrepend (double skewX, double skewY);
    parameters:
    - id: skewX
      type: System.Double
      description: "The angle in the x dimension by which to skew this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
    - id: skewY
      type: System.Double
      description: "The angle in the y dimension by which to skew this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.Matrix.SkewPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Matrix.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Matrix.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Formats the value of the current instance using the specified format."
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "The format to use.       -or-       A null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic) to use the default format defined for the type of the <xref:System.IFormattable> implementation."
    - id: provider
      type: System.IFormatProvider
      description: "The provider to use to format the value.       -or-       A null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system."
    return:
      type: System.String
      description: "The value of the current instance in the specified format."
  overload: System.Windows.Media.Matrix.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ToString
  id: ToString
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: System.Windows.Media.Matrix.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Creates a <xref:System.String> representation of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "If this <xref:System.Windows.Media.Matrix> is an <xref:System.Windows.Media.Matrix.Identity%2A> matrix, the string &quot;Identity&quot; is returned."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> containing the <xref:System.Windows.Media.Matrix.M11*>, <xref:System.Windows.Media.Matrix.M12*>, <xref:System.Windows.Media.Matrix.M21*>, <xref:System.Windows.Media.Matrix.M22*>, <xref:System.Windows.Media.Matrix.OffsetX*>, and <xref:System.Windows.Media.Matrix.OffsetY*> values of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.Matrix.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Matrix.ToString(IFormatProvider)
  fullName: System.Windows.Media.Matrix.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Creates a <xref:System.String> representation of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure with culture-specific formatting information."
  remarks: "If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string &quot;Identity&quot; is returned."
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "The culture-specific formatting information."
    return:
      type: System.String
      description: "A <xref:System.String> containing the <xref:System.Windows.Media.Matrix.M11*>, <xref:System.Windows.Media.Matrix.M12*>, <xref:System.Windows.Media.Matrix.M21*>, <xref:System.Windows.Media.Matrix.M22*>, <xref:System.Windows.Media.Matrix.OffsetX*>, and <xref:System.Windows.Media.Matrix.OffsetY*> values of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.Matrix.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point)
  id: Transform(System.Windows.Point)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Point)
  nameWithType: Matrix.Transform(Point)
  fullName: System.Windows.Media.Matrix.Transform(Point)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Transforms the specified point by the <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> and returns the result."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public System.Windows.Point Transform (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "The point to transform."
    return:
      type: System.Windows.Point
      description: "The result of transforming <code>point</code> by this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  id: Transform(System.Windows.Point[])
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Point[])
  nameWithType: Matrix.Transform(Point[])
  fullName: System.Windows.Media.Matrix.Transform(Point[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Transforms the specified points by this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public void Transform (System.Windows.Point[] points);
    parameters:
    - id: points
      type: System.Windows.Point[]
      description: "The points to transform. The original points in the array are replaced by their transformed values."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  id: Transform(System.Windows.Vector)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Vector)
  nameWithType: Matrix.Transform(Vector)
  fullName: System.Windows.Media.Matrix.Transform(Vector)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Transforms the specified vector by this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public System.Windows.Vector Transform (System.Windows.Vector vector);
    parameters:
    - id: vector
      type: System.Windows.Vector
      description: "The vector to transform."
    return:
      type: System.Windows.Vector
      description: "The result of transforming <code>vector</code> by this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  id: Transform(System.Windows.Vector[])
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Vector[])
  nameWithType: Matrix.Transform(Vector[])
  fullName: System.Windows.Media.Matrix.Transform(Vector[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Transforms the specified vectors by this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public void Transform (System.Windows.Vector[] vectors);
    parameters:
    - id: vectors
      type: System.Windows.Vector[]
      description: "The vectors to transform. The original vectors in the array are replaced by their transformed values."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  id: Translate(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Translate(Double,Double)
  nameWithType: Matrix.Translate(Double,Double)
  fullName: System.Windows.Media.Matrix.Translate(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Appends a translation of the specified offsets to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: ''
  example:
  - "The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTranslateExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtranslateexample_csharp)]"
  syntax:
    content: public void Translate (double offsetX, double offsetY);
    parameters:
    - id: offsetX
      type: System.Double
      description: "The amount to offset this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the x-axis."
    - id: offsetY
      type: System.Double
      description: "The amount to offset this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the y-axis."
  overload: System.Windows.Media.Matrix.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  id: TranslatePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: TranslatePrepend(Double,Double)
  nameWithType: Matrix.TranslatePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.TranslatePrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Prepends a translation of the specified offsets to this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> structure."
  remarks: "In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtranslateprependexample_csharp)]"
  syntax:
    content: public void TranslatePrepend (double offsetX, double offsetY);
    parameters:
    - id: offsetX
      type: System.Double
      description: "The amount to offset this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the x-axis."
    - id: offsetY
      type: System.Double
      description: "The amount to offset this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> along the y-axis."
  overload: System.Windows.Media.Matrix.TranslatePrepend*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Matrix(Double,Double,Double,Double,Double,Double)
  nameWithType: Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.Matrix(Double,Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Append(Matrix)
  nameWithType: Matrix.Append(Matrix)
  fullName: System.Windows.Media.Matrix.Append(Matrix)
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.Matrix.Determinant
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: System.Windows.Media.Matrix.Determinant
- uid: System.Windows.Media.Matrix.Equals(System.Object)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Windows.Media.Matrix.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix)
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Matrix,Matrix)
  nameWithType: Matrix.Equals(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.GetHashCode
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Windows.Media.Matrix.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Matrix.HasInverse
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: System.Windows.Media.Matrix.HasInverse
- uid: System.Windows.Media.Matrix.Identity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Identity
  nameWithType: Matrix.Identity
  fullName: System.Windows.Media.Matrix.Identity
- uid: System.Windows.Media.Matrix.Invert
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Windows.Media.Matrix.Invert()
- uid: System.Windows.Media.Matrix.IsIdentity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Windows.Media.Matrix.IsIdentity
- uid: System.Windows.Media.Matrix.M11
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M11
  nameWithType: Matrix.M11
  fullName: System.Windows.Media.Matrix.M11
- uid: System.Windows.Media.Matrix.M12
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M12
  nameWithType: Matrix.M12
  fullName: System.Windows.Media.Matrix.M12
- uid: System.Windows.Media.Matrix.M21
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M21
  nameWithType: Matrix.M21
  fullName: System.Windows.Media.Matrix.M21
- uid: System.Windows.Media.Matrix.M22
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M22
  nameWithType: Matrix.M22
  fullName: System.Windows.Media.Matrix.M22
- uid: System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Multiply(Matrix,Matrix)
  nameWithType: Matrix.Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Multiply(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.OffsetX
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Windows.Media.Matrix.OffsetX
- uid: System.Windows.Media.Matrix.OffsetY
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Windows.Media.Matrix.OffsetY
- uid: System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Equality(Matrix,Matrix)
  nameWithType: Matrix.op_Equality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Equality(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Inequality(Matrix,Matrix)
  nameWithType: Matrix.op_Inequality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Inequality(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Multiply(Matrix,Matrix)
  nameWithType: Matrix.op_Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Multiply(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.Parse(System.String)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Parse(String)
  nameWithType: Matrix.Parse(String)
  fullName: System.Windows.Media.Matrix.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Prepend(Matrix)
  nameWithType: Matrix.Prepend(Matrix)
  fullName: System.Windows.Media.Matrix.Prepend(Matrix)
- uid: System.Windows.Media.Matrix.Rotate(System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Rotate(Double)
  nameWithType: Matrix.Rotate(Double)
  fullName: System.Windows.Media.Matrix.Rotate(Double)
- uid: System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAt(Double,Double,Double)
  nameWithType: Matrix.RotateAt(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAt(Double,Double,Double)
- uid: System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAtPrepend(Double,Double,Double)
  nameWithType: Matrix.RotateAtPrepend(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAtPrepend(Double,Double,Double)
- uid: System.Windows.Media.Matrix.RotatePrepend(System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotatePrepend(Double)
  nameWithType: Matrix.RotatePrepend(Double)
  fullName: System.Windows.Media.Matrix.RotatePrepend(Double)
- uid: System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Scale(Double,Double)
  nameWithType: Matrix.Scale(Double,Double)
  fullName: System.Windows.Media.Matrix.Scale(Double,Double)
- uid: System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAt(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAt(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAt(Double,Double,Double,Double)
- uid: System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAtPrepend(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAtPrepend(Double,Double,Double,Double)
- uid: System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScalePrepend(Double,Double)
  nameWithType: Matrix.ScalePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.ScalePrepend(Double,Double)
- uid: System.Windows.Media.Matrix.SetIdentity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SetIdentity()
  nameWithType: Matrix.SetIdentity()
  fullName: System.Windows.Media.Matrix.SetIdentity()
- uid: System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Skew(Double,Double)
  nameWithType: Matrix.Skew(Double,Double)
  fullName: System.Windows.Media.Matrix.Skew(Double,Double)
- uid: System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SkewPrepend(Double,Double)
  nameWithType: Matrix.SkewPrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.SkewPrepend(Double,Double)
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Matrix.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Matrix.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Media.Matrix.ToString
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: System.Windows.Media.Matrix.ToString()
- uid: System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Matrix.ToString(IFormatProvider)
  fullName: System.Windows.Media.Matrix.ToString(IFormatProvider)
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Point)
  nameWithType: Matrix.Transform(Point)
  fullName: System.Windows.Media.Matrix.Transform(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Point[])
  nameWithType: Matrix.Transform(Point[])
  fullName: System.Windows.Media.Matrix.Transform(Point[])
- uid: System.Windows.Point[]
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point[]
  spec.csharp:
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Vector)
  nameWithType: Matrix.Transform(Vector)
  fullName: System.Windows.Media.Matrix.Transform(Vector)
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Vector[])
  nameWithType: Matrix.Transform(Vector[])
  fullName: System.Windows.Media.Matrix.Transform(Vector[])
- uid: System.Windows.Vector[]
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector[]
  spec.csharp:
  - uid: System.Windows.Vector
    name: Vector
    nameWithType: Vector
    fullName: Vector[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Translate(Double,Double)
  nameWithType: Matrix.Translate(Double,Double)
  fullName: System.Windows.Media.Matrix.Translate(Double,Double)
- uid: System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: TranslatePrepend(Double,Double)
  nameWithType: Matrix.TranslatePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.TranslatePrepend(Double,Double)
- uid: System.Windows.Media.Matrix.#ctor*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Matrix
  nameWithType: Matrix.Matrix
- uid: System.Windows.Media.Matrix.Append*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Append
  nameWithType: Matrix.Append
- uid: System.Windows.Media.Matrix.Determinant*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Determinant
  nameWithType: Matrix.Determinant
- uid: System.Windows.Media.Matrix.Equals*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals
  nameWithType: Matrix.Equals
- uid: System.Windows.Media.Matrix.GetHashCode*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
- uid: System.Windows.Media.Matrix.HasInverse*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: HasInverse
  nameWithType: Matrix.HasInverse
- uid: System.Windows.Media.Matrix.Identity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Identity
  nameWithType: Matrix.Identity
- uid: System.Windows.Media.Matrix.Invert*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Invert
  nameWithType: Matrix.Invert
- uid: System.Windows.Media.Matrix.IsIdentity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
- uid: System.Windows.Media.Matrix.M11*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M11
  nameWithType: Matrix.M11
- uid: System.Windows.Media.Matrix.M12*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M12
  nameWithType: Matrix.M12
- uid: System.Windows.Media.Matrix.M21*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M21
  nameWithType: Matrix.M21
- uid: System.Windows.Media.Matrix.M22*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M22
  nameWithType: Matrix.M22
- uid: System.Windows.Media.Matrix.Multiply*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Multiply
  nameWithType: Matrix.Multiply
- uid: System.Windows.Media.Matrix.OffsetX*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
- uid: System.Windows.Media.Matrix.OffsetY*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
- uid: System.Windows.Media.Matrix.op_Equality*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Equality
  nameWithType: Matrix.op_Equality
- uid: System.Windows.Media.Matrix.op_Inequality*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Inequality
  nameWithType: Matrix.op_Inequality
- uid: System.Windows.Media.Matrix.op_Multiply*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Multiply
  nameWithType: Matrix.op_Multiply
- uid: System.Windows.Media.Matrix.Parse*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Parse
  nameWithType: Matrix.Parse
- uid: System.Windows.Media.Matrix.Prepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Prepend
  nameWithType: Matrix.Prepend
- uid: System.Windows.Media.Matrix.Rotate*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Rotate
  nameWithType: Matrix.Rotate
- uid: System.Windows.Media.Matrix.RotateAt*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAt
  nameWithType: Matrix.RotateAt
- uid: System.Windows.Media.Matrix.RotateAtPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAtPrepend
  nameWithType: Matrix.RotateAtPrepend
- uid: System.Windows.Media.Matrix.RotatePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotatePrepend
  nameWithType: Matrix.RotatePrepend
- uid: System.Windows.Media.Matrix.Scale*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Scale
  nameWithType: Matrix.Scale
- uid: System.Windows.Media.Matrix.ScaleAt*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAt
  nameWithType: Matrix.ScaleAt
- uid: System.Windows.Media.Matrix.ScaleAtPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAtPrepend
  nameWithType: Matrix.ScaleAtPrepend
- uid: System.Windows.Media.Matrix.ScalePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScalePrepend
  nameWithType: Matrix.ScalePrepend
- uid: System.Windows.Media.Matrix.SetIdentity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SetIdentity
  nameWithType: Matrix.SetIdentity
- uid: System.Windows.Media.Matrix.Skew*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Skew
  nameWithType: Matrix.Skew
- uid: System.Windows.Media.Matrix.SkewPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SkewPrepend
  nameWithType: Matrix.SkewPrepend
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Matrix.System.IFormattable.ToString
- uid: System.Windows.Media.Matrix.ToString*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString
  nameWithType: Matrix.ToString
- uid: System.Windows.Media.Matrix.Transform*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform
  nameWithType: Matrix.Transform
- uid: System.Windows.Media.Matrix.Translate*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Translate
  nameWithType: Matrix.Translate
- uid: System.Windows.Media.Matrix.TranslatePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: TranslatePrepend
  nameWithType: Matrix.TranslatePrepend
