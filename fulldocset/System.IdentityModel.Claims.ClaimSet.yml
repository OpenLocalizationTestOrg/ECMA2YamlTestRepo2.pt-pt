### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Claims.ClaimSet
  id: ClaimSet
  children:
  - System.IdentityModel.Claims.ClaimSet.#ctor
  - System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  - System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  - System.IdentityModel.Claims.ClaimSet.Count
  - System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  - System.IdentityModel.Claims.ClaimSet.GetEnumerator
  - System.IdentityModel.Claims.ClaimSet.Issuer
  - System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  - System.IdentityModel.Claims.ClaimSet.System
  - System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  - System.IdentityModel.Claims.ClaimSet.Windows
  langs:
  - csharp
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
  type: Class
  summary: "Representa a coleção de afirmações que estão associados uma entidade."
  remarks: "Depois da classe de ClaimSet tiver sido criada, não pode ser alterada.       Examinar o conteúdo de um ClaimSet para tipos específicos de afirmações é uma tarefa comuns quando utilizar autorização baseada em afirmações. Para examinar um ClaimSet quanto à presença de afirmações específicas, utilize o <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%2A>método.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%2A> O método fornece um melhor desempenho ao iterating diretamente através do ClaimSet."
  example:
  - >-
    [!code-cs[c_ClaimSet#1](~/add/codesnippet/csharp/t-system.identitymodel.c_1_1.cs)]
     [!code-vb[c_ClaimSet#1](~/add/codesnippet/visualbasic/t-system.identitymodel.c_1_1.vb)]
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract(Namespace="http://schemas.xmlsoap.org/ws/2005/05/identity")]

      public abstract class ClaimSet : System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ClaimSet()
  nameWithType: ClaimSet.ClaimSet()
  fullName: System.IdentityModel.Claims.ClaimSet.ClaimSet()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> classe."
  remarks: "Reservado para utilização futura."
  syntax:
    content: protected ClaimSet ();
    parameters: []
  overload: System.IdentityModel.Claims.ClaimSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  id: ContainsClaim(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ContainsClaim(Claim)
  nameWithType: ClaimSet.ContainsClaim(Claim)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Determina se o <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> contém especificado <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>."
  remarks: "Para localizar a afirmação especificada, chame o <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>método.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>"
  syntax:
    content: public virtual bool ContainsClaim (System.IdentityModel.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "O <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> que pretende procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a afirmação especificada está contida no <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  id: ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ContainsClaim(Claim,IEqualityComparer<Claim>)
  nameWithType: ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Determina se o <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> contém especificado <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>, utilizando especificado &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; objeto."
  remarks: "Para localizar a afirmação especificada, chame o <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>método.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>"
  syntax:
    content: public virtual bool ContainsClaim (System.IdentityModel.Claims.Claim claim, System.Collections.Generic.IEqualityComparer<System.IdentityModel.Claims.Claim> comparer);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "O <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> que pretende procurar."
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim}
      description: "O &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; objecto utilizado para tornar a comparação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a afirmação especificada está contida no <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>; caso contrário<xref uid=&quot;langword_csharp_false.&quot; name=&quot;false.&quot; href=&quot;&quot;></xref>"
  overload: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Count
  id: Count
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Count
  nameWithType: ClaimSet.Count
  fullName: System.IdentityModel.Claims.ClaimSet.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Quando substituí-lo de uma classe derivada, obtém o número de afirmações deste conjunto de afirmações."
  remarks: "Para obter uma afirmação individuais, utilize o <xref:System.IdentityModel.Claims.ClaimSet.Item%2A>propriedade.</xref:System.IdentityModel.Claims.ClaimSet.Item%2A>"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "O número de afirmações deste <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  id: FindClaims(System.String,System.String)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: FindClaims(String,String)
  nameWithType: ClaimSet.FindClaims(String,String)
  fullName: System.IdentityModel.Claims.ClaimSet.FindClaims(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Quando substituí-lo de uma classe derivada, procuram um <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objeto que corresponde ao tipo de afirmação especificado e de direitos no <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "Para determinar se este <xref:System.IdentityModel.Claims.ClaimSet>contém a afirmação sem devolver a afirmação, a chamada de <xref:System.IdentityModel.Claims.ClaimSet.ContainsClaim%2A>método.</xref:System.IdentityModel.Claims.ClaimSet.ContainsClaim%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  example:
  - >-
    [!code-cs[c_ClaimSet#2](~/add/codesnippet/csharp/m-system.identitymodel.c_1.cs)]
     [!code-vb[c_ClaimSet#2](~/add/codesnippet/visualbasic/m-system.identitymodel.c_1.vb)]
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim> FindClaims (string claimType, string right);
    parameters:
    - id: claimType
      type: System.String
      description: "O uniform resource identifier (URI) de um tipo de afirmação. Várias afirmações estão disponíveis como as propriedades estáticas de tipos de <xref href=&quot;System.IdentityModel.Claims.ClaimTypes&quot;> </xref> classe."
    - id: right
      type: System.String
      description: "O URI da direita associada com a nova afirmação. Direitos de várias estão disponíveis como as propriedades estáticas do <xref href=&quot;System.IdentityModel.Claims.Rights&quot;> </xref> classe."
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.Claim}
      description: "A &lt;xref:System.Collections.Generic.IEnumerable%601&gt; do tipo <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> que lhe permitem ao enumerar as afirmações que corresponde aos critérios especificados."
  overload: System.IdentityModel.Claims.ClaimSet.FindClaims*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator
  id: GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ClaimSet.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Quando substituí-lo de uma classe derivada, obtém um &lt;xref:System.Collections.Generic.IEnumerator%601&gt; que podem ser utilizados ao enumerar a <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objeto o <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "O `foreach` declaração do Estado de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores. Por conseguinte, utilizando `foreach` recomenda-se, em vez de manipular diretamente o enumerador.       Enumeradores podem ser utilizados para ler os dados da coleção, mas não pode ser utilizados para modificar a colecção subjacente."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Claims.Claim}
      description: "A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; que podem ser utilizados ao enumerar a <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objeto o <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Issuer
  id: Issuer
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Issuer
  nameWithType: ClaimSet.Issuer
  fullName: System.IdentityModel.Claims.ClaimSet.Issuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Quando substituí-lo de uma classe derivada, obtém a entidade que emitiu este <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "O emissor de afirmação que está a definir devolvido pela <xref:System.IdentityModel.Claims.ClaimSet.System%2A>propriedade é <xref:System.IdentityModel.Claims.DefaultClaimSet>.</xref:System.IdentityModel.Claims.DefaultClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.System%2A>"
  syntax:
    content: public abstract System.IdentityModel.Claims.ClaimSet Issuer { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "O <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objeto que emitiu este <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objeto."
  overload: System.IdentityModel.Claims.ClaimSet.Issuer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ClaimSet.Item(Int32)
  fullName: System.IdentityModel.Claims.ClaimSet.Item(Int32)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Quando substituí-lo de uma classe derivada, obtém o <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> para o índice especificado."
  syntax:
    content: public abstract System.IdentityModel.Claims.Claim this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de afirmação para ser obtido."
    return:
      type: System.IdentityModel.Claims.Claim
      description: "O <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> no índice especificado."
  overload: System.IdentityModel.Claims.ClaimSet.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.System
  id: System
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: System
  nameWithType: ClaimSet.System
  fullName: System.IdentityModel.Claims.ClaimSet.System
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Obtém um <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objeto que representa uma aplicação fidedigna emissor."
  remarks: "Este tipo de <xref:System.IdentityModel.Claims.ClaimSet>objeto é normalmente utilizado como o valor de <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>propriedade para um <xref:System.IdentityModel.Claims.ClaimSet>que é emitido pela aplicação atual.</xref:System.IdentityModel.Claims.ClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>       Por exemplo, depois de uma aplicação efetua a autenticação de utilizador e palavra-passe, cria um <xref:System.IdentityModel.Claims.ClaimSet>que representa o utilizador com o <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>propriedade definida como System.</xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  syntax:
    content: public static System.IdentityModel.Claims.ClaimSet System { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "O sistema <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> objeto."
  overload: System.IdentityModel.Claims.ClaimSet.System*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Obtém um &lt;xref:System.Collections.Generic.IEnumerator%601&gt; que podem ser utilizados ao enumerar a <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objeto o <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  remarks: "O `foreach` declaração do Estado de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores. Por conseguinte, utilizando `foreach` recomenda-se, em vez de manipular diretamente o enumerador.       Enumeradores podem ser utilizados para ler os dados da coleção, mas não pode ser utilizados para modificar a colecção subjacente."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; que podem ser utilizados ao enumerar a <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> objeto o <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>."
  overload: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Windows
  id: Windows
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Windows
  nameWithType: ClaimSet.Windows
  fullName: System.IdentityModel.Claims.ClaimSet.Windows
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Obtém um conjunto de afirmações que contém os identificadores de segurança do Windows."
  remarks: "Este tipo de <xref:System.IdentityModel.Claims.ClaimSet>objeto é normalmente utilizado como o valor de <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>propriedade para um <xref:System.IdentityModel.Claims.ClaimSet>que é emitido por do Windows.</xref:System.IdentityModel.Claims.ClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet> Por exemplo, depois de uma aplicação efetua a autenticação de utilizador e palavra-passe através da autenticação do Windows, cria o <xref:System.IdentityModel.Claims.ClaimSet>com o <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>propriedade definida para o Windows.</xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  syntax:
    content: public static System.IdentityModel.Claims.ClaimSet Windows { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> que contenha, pelo menos, uma claim do tipo <xref:System.IdentityModel.Claims.ClaimTypes.Sid*>.</xref:System.IdentityModel.Claims.ClaimTypes.Sid*>"
  overload: System.IdentityModel.Claims.ClaimSet.Windows*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Claims.ClaimSet.#ctor
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ClaimSet()
  nameWithType: ClaimSet.ClaimSet()
  fullName: System.IdentityModel.Claims.ClaimSet.ClaimSet()
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim(Claim)
  nameWithType: ClaimSet.ContainsClaim(Claim)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Claims.Claim
  parent: System.IdentityModel.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.IdentityModel.Claims.Claim
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim(Claim,IEqualityComparer<Claim>)
  nameWithType: ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
- uid: System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<Claim>
  nameWithType: IEqualityComparer<Claim>
  fullName: System.Collections.Generic.IEqualityComparer<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Claims.ClaimSet.Count
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Count
  nameWithType: ClaimSet.Count
  fullName: System.IdentityModel.Claims.ClaimSet.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: FindClaims(String,String)
  nameWithType: ClaimSet.FindClaims(String,String)
  fullName: System.IdentityModel.Claims.ClaimSet.FindClaims(String,String)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: GetEnumerator()
  nameWithType: ClaimSet.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Claim>
  nameWithType: IEnumerator<Claim>
  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Claims.ClaimSet.Issuer
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Issuer
  nameWithType: ClaimSet.Issuer
  fullName: System.IdentityModel.Claims.ClaimSet.Issuer
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Item(Int32)
  nameWithType: ClaimSet.Item(Int32)
  fullName: System.IdentityModel.Claims.ClaimSet.Item(Int32)
- uid: System.IdentityModel.Claims.ClaimSet.System
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System
  nameWithType: ClaimSet.System
  fullName: System.IdentityModel.Claims.ClaimSet.System
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Windows
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Windows
  nameWithType: ClaimSet.Windows
  fullName: System.IdentityModel.Claims.ClaimSet.Windows
- uid: System.IdentityModel.Claims.ClaimSet.#ctor*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet.ClaimSet
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim
  nameWithType: ClaimSet.ContainsClaim
- uid: System.IdentityModel.Claims.ClaimSet.Count*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Count
  nameWithType: ClaimSet.Count
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: FindClaims
  nameWithType: ClaimSet.FindClaims
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: GetEnumerator
  nameWithType: ClaimSet.GetEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Issuer*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Issuer
  nameWithType: ClaimSet.Issuer
- uid: System.IdentityModel.Claims.ClaimSet.Item*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Item
  nameWithType: ClaimSet.Item
- uid: System.IdentityModel.Claims.ClaimSet.System*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System
  nameWithType: ClaimSet.System
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Windows*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Windows
  nameWithType: ClaimSet.Windows
