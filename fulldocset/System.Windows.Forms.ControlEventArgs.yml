### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ControlEventArgs
  id: ControlEventArgs
  children:
  - System.Windows.Forms.ControlEventArgs.#ctor(System.Windows.Forms.Control)
  - System.Windows.Forms.ControlEventArgs.Control
  langs:
  - csharp
  name: ControlEventArgs
  nameWithType: ControlEventArgs
  fullName: System.Windows.Forms.ControlEventArgs
  type: Class
  summary: "Provides data for the <see cref=&quot;E:System.Windows.Forms.Control.ControlAdded&quot;></see> and <see cref=&quot;E:System.Windows.Forms.Control.ControlRemoved&quot;></see> events."
  remarks: "For more information about handling events, see [Events](../Topic/Handling%20and%20Raising%20Events.md)."
  example:
  - "The following code example demonstrates the use of the <xref:System.Windows.Forms.Control.ControlAdded> and <xref:System.Windows.Forms.Control.ControlRemoved> events. The example requires that two <xref:System.Windows.Forms.Button> controls are added to the form and connected to the `addControl_Click` and `removeControl_Click` event handling methods.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/CPP/t-system.windows.forms.c_28_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/VisualBasic/t-system.windows.forms.c_28_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/CSharp/t-system.windows.forms.c_28_1.cs)]"
  syntax:
    content: 'public class ControlEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.ControlEventArgs.#ctor(System.Windows.Forms.Control)
  id: '#ctor(System.Windows.Forms.Control)'
  parent: System.Windows.Forms.ControlEventArgs
  langs:
  - csharp
  name: ControlEventArgs(Control)
  nameWithType: ControlEventArgs.ControlEventArgs(Control)
  fullName: System.Windows.Forms.ControlEventArgs.ControlEventArgs(Control)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Windows.Forms.ControlEventArgs&quot;></see> class for the specified control."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the <xref:System.Windows.Forms.Control.ControlAdded> and <xref:System.Windows.Forms.Control.ControlRemoved> events. The example requires that two <xref:System.Windows.Forms.Button> controls are added to the form and connected to the `addControl_Click` and `removeControl_Click` event handling methods.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/CPP/m-system.windows.forms.c_100_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/VisualBasic/m-system.windows.forms.c_100_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/CSharp/m-system.windows.forms.c_100_1.cs)]"
  syntax:
    content: public ControlEventArgs (System.Windows.Forms.Control control);
    parameters:
    - id: control
      type: System.Windows.Forms.Control
      description: "The  to store in this event."
  overload: System.Windows.Forms.ControlEventArgs.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Forms.ControlEventArgs.Control
  id: Control
  parent: System.Windows.Forms.ControlEventArgs
  langs:
  - csharp
  name: Control
  nameWithType: ControlEventArgs.Control
  fullName: System.Windows.Forms.ControlEventArgs.Control
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the control object used by this event."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the <xref:System.Windows.Forms.Control.ControlAdded> and <xref:System.Windows.Forms.Control.ControlRemoved> events. The example requires that two <xref:System.Windows.Forms.Button> controls are added to the form and connected to the `addControl_Click` and `removeControl_Click` event handling methods.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/CPP/p-system.windows.forms.c_92_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/VisualBasic/p-system.windows.forms.c_92_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/CSharp/p-system.windows.forms.c_92_1.cs)]"
  syntax:
    content: public System.Windows.Forms.Control Control { get; }
    return:
      type: System.Windows.Forms.Control
      description: "The <see cref=&quot;T:System.Windows.Forms.Control&quot;></see> used by this event."
  overload: System.Windows.Forms.ControlEventArgs.Control*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.ControlEventArgs.#ctor(System.Windows.Forms.Control)
  parent: System.Windows.Forms.ControlEventArgs
  isExternal: false
  name: ControlEventArgs(Control)
  nameWithType: ControlEventArgs.ControlEventArgs(Control)
  fullName: System.Windows.Forms.ControlEventArgs.ControlEventArgs(Control)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.ControlEventArgs.Control
  parent: System.Windows.Forms.ControlEventArgs
  isExternal: false
  name: Control
  nameWithType: ControlEventArgs.Control
  fullName: System.Windows.Forms.ControlEventArgs.Control
- uid: System.Windows.Forms.ControlEventArgs.#ctor*
  parent: System.Windows.Forms.ControlEventArgs
  isExternal: false
  name: ControlEventArgs
  nameWithType: ControlEventArgs.ControlEventArgs
- uid: System.Windows.Forms.ControlEventArgs.Control*
  parent: System.Windows.Forms.ControlEventArgs
  isExternal: false
  name: Control
  nameWithType: ControlEventArgs.Control
