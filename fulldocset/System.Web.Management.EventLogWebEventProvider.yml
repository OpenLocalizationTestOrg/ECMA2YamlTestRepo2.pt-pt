### YamlMime:ManagedReference
items:
- uid: System.Web.Management.EventLogWebEventProvider
  id: EventLogWebEventProvider
  children:
  - System.Web.Management.EventLogWebEventProvider.Flush
  - System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.EventLogWebEventProvider.Shutdown
  langs:
  - csharp
  name: EventLogWebEventProvider
  nameWithType: EventLogWebEventProvider
  fullName: System.Web.Management.EventLogWebEventProvider
  type: Class
  summary: "Implementa um fornecedor de evento que os registos de eventos de monitorização de estado de funcionamento do ASP.NET para o registo de eventos de aplicações do Windows."
  remarks: "Monitorização de estado de funcionamento do ASP.NET permite que os funcionários de operações e de produção gerir aplicações implementadas do Web. O <xref:System.Web.Management>espaço de nomes contém os tipos de eventos de estado de funcionamento responsáveis pelo empacotamento dados de estado de funcionamento da aplicação e os tipos de fornecedor responsáveis por processar estes dados.</xref:System.Web.Management> Também contém tipos de suporte que ajudam a durante a gestão de eventos de estado de funcionamento.       O EventLogWebEventProvider, a auditoria de falhas e os eventos de monitorização de estado de funcionamento de erro são configurados (ativado) por predefinição. Isto significa que a auditoria de falhas e o erro de eventos de monitorização de estado de funcionamento são registados no registo de eventos de aplicações do Windows por predefinição.      > [!NOTE] > Na maioria dos casos poderá utilizar os tipos de monitorização de estado de funcionamento do ASP.NET, conforme implementado e vai controlar o sistema de monitorização de estado de funcionamento, especificando valores de `healthMonitoring` secção de configuração. Também pode derivar de tipos de monitorização de estado de funcionamento para criar os seus próprios fornecedores e eventos personalizados. Para obter um exemplo de criação de um fornecedor personalizado, consulte [como: implementar o estado de funcionamento monitorização personalizada fornecedor exemplo](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following configuration file excerpt shows how to specify a provider of type EventLogWebEventProvider to handle success audit events. The EventLogWebEventProvider and the failure audit health-event types to monitor are configured by default. To monitor the success audits, you need to configure them, as shown in the example code.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartbeatInterval=\"10\">  \n  \n  <rule>  \n    <add name=\"Success Audits Default\"  \n      eventName=\"Success Audits\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"  \n      minInterval=\"00:01:00\" />  \n  </rule>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Move os eventos de memória intermédia do fornecedor no registo de eventos."
  remarks: "Quando este método é denominado, todos os eventos na memória intermédia do fornecedor imediatamente são escritos no Windows aplicação registo de eventos, independentemente da quanto tempo decorrido desde a última operação de escrita ou eventos quantos são na memória intermédia. A hora da última operação de escrita é reposta para a hora da ação flushing. Se o mecanismo de buffering não estiver ativado, chamar este método não tem qualquer efeito."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Define os valores iniciais para este objeto."
  remarks: "Este método é chamado para inicializar o <xref:System.Web.Management.EventLogWebEventProvider>com as definições de configuração e o nome, conforme especificado no ficheiro de configuração.</xref:System.Web.Management.EventLogWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "O nome utilizado no ficheiro de configuração para identificar este fornecedor."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> que especifica os atributos atribuídos para este fornecedor no ficheiro de configuração."
  overload: System.Web.Management.EventLogWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Processa o evento foi transmitido para o fornecedor."
  remarks: "Este é o método que a monitorização de estado de funcionamento do ASP.NET chama para iniciar o processamento do evento."
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "O <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> objeto ao processo."
  overload: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Executa tarefas associadas a encerrar o fornecedor."
  remarks: "ASP.NET chama o método de encerramento quando termina o domínio de aplicação que aloja a aplicação Web. O método é chamado para efetuar tarefas que irão permitir que a aplicação terminar corretamente."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
- uid: System.Web.Management.EventLogWebEventProvider.Flush*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: EventLogWebEventProvider.Flush
- uid: System.Web.Management.EventLogWebEventProvider.Initialize*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: EventLogWebEventProvider.Initialize
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: EventLogWebEventProvider.ProcessEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: EventLogWebEventProvider.Shutdown
