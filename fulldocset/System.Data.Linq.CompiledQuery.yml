### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.CompiledQuery
  id: CompiledQuery
  children:
  - System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  - System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})
  - System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})
  - System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})
  - System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})
  - System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})
  - System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  - System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  - System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})
  - System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})
  - System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})
  - System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})
  - System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})
  - System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})
  - System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})
  - System.Data.Linq.CompiledQuery.Expression
  langs:
  - csharp
  name: CompiledQuery
  nameWithType: CompiledQuery
  fullName: System.Data.Linq.CompiledQuery
  type: Class
  summary: "Provides for compilation and caching of queries for reuse."
  remarks: "Conceptually this class contains a single method (`Compile`) with several overloads. You call the <xref:System.Data.Linq.CompiledQuery.Compile%2A> method to create a new delegate to represent the compiled query.      > [!NOTE] >  Compilation does not occur until the first time the query is executed."
  syntax:
    content: public sealed class CompiledQuery
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TResult> Compile<TArg0,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  id: Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TResult> Compile<TArg0,TArg1,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})
  id: Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TResult> Compile<TArg0,TArg1,TArg2,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})
  id: Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})
  id: Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})
  id: Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})
  id: Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  id: Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  id: Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})
  id: Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})
  id: Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})
  id: Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})
  id: Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})
  id: Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})
  id: Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})
  id: Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'
    parameters:
    - id: query
      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}}
      description: "To be added."
    return:
      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}
      description: "To be added."
  overload: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.CompiledQuery.Expression
  id: Expression
  parent: System.Data.Linq.CompiledQuery
  langs:
  - csharp
  name: Expression
  nameWithType: CompiledQuery.Expression
  fullName: System.Data.Linq.CompiledQuery.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Returns the query as a lambda expression."
  syntax:
    content: public System.Linq.Expressions.LambdaExpression Expression { get; }
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: "The lambda expression that represents the query."
  overload: System.Data.Linq.CompiledQuery.Expression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)
- uid: System.Func{TArg0,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TResult>
  nameWithType: Func<TArg0,TResult>
  fullName: System.Func<TArg0,TResult>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TResult>>
  nameWithType: Expression<Func<TArg0,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)
- uid: System.Func{TArg0,TArg1,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TResult>
  nameWithType: Func<TArg0,TArg1,TResult>
  fullName: System.Func<TArg0,TArg1,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TResult>
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TResult>
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>
  spec.csharp:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>
  spec.csharp:
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`7
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>
  spec.csharp:
  - uid: System.Func`8
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`8
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>
  spec.csharp:
  - uid: System.Func`9
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`9
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>
  spec.csharp:
  - uid: System.Func`10
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`10
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>
  spec.csharp:
  - uid: System.Func`11
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`11
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>
  spec.csharp:
  - uid: System.Func`12
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`12
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>
  spec.csharp:
  - uid: System.Func`13
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`13
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>
  spec.csharp:
  - uid: System.Func`14
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`14
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>
  spec.csharp:
  - uid: System.Func`15
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg13
    name: TArg13
    nameWithType: TArg13
    fullName: TArg13
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`15
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg13
    name: TArg13
    nameWithType: TArg13
    fullName: TArg13
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>
  spec.csharp:
  - uid: System.Func`16
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg13
    name: TArg13
    nameWithType: TArg13
    fullName: TArg13
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg14
    name: TArg14
    nameWithType: TArg14
    fullName: TArg14
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`16
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg13
    name: TArg13
    nameWithType: TArg13
    fullName: TArg13
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg14
    name: TArg14
    nameWithType: TArg14
    fullName: TArg14
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)
  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)
  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)
- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}
  parent: System
  isExternal: true
  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>
  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>
  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>
  spec.csharp:
  - uid: System.Func`17
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg13
    name: TArg13
    nameWithType: TArg13
    fullName: TArg13
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg14
    name: TArg14
    nameWithType: TArg14
    fullName: TArg14
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg15
    name: TArg15
    nameWithType: TArg15
    fullName: TArg15
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>
  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`17
    name: Func
    nameWithType: Func
    fullName: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArg0
    name: TArg0
    nameWithType: TArg0
    fullName: TArg0
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg1
    name: TArg1
    nameWithType: TArg1
    fullName: TArg1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg2
    name: TArg2
    nameWithType: TArg2
    fullName: TArg2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg3
    name: TArg3
    nameWithType: TArg3
    fullName: TArg3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg4
    name: TArg4
    nameWithType: TArg4
    fullName: TArg4
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg5
    name: TArg5
    nameWithType: TArg5
    fullName: TArg5
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg6
    name: TArg6
    nameWithType: TArg6
    fullName: TArg6
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg7
    name: TArg7
    nameWithType: TArg7
    fullName: TArg7
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg8
    name: TArg8
    nameWithType: TArg8
    fullName: TArg8
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg9
    name: TArg9
    nameWithType: TArg9
    fullName: TArg9
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg10
    name: TArg10
    nameWithType: TArg10
    fullName: TArg10
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg11
    name: TArg11
    nameWithType: TArg11
    fullName: TArg11
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg12
    name: TArg12
    nameWithType: TArg12
    fullName: TArg12
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg13
    name: TArg13
    nameWithType: TArg13
    fullName: TArg13
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg14
    name: TArg14
    nameWithType: TArg14
    fullName: TArg14
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TArg15
    name: TArg15
    nameWithType: TArg15
    fullName: TArg15
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.CompiledQuery.Expression
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Expression
  nameWithType: CompiledQuery.Expression
  fullName: System.Data.Linq.CompiledQuery.Expression
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>
- uid: System.Data.Linq.CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>
  nameWithType: CompiledQuery.Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>
- uid: System.Data.Linq.CompiledQuery.Expression*
  parent: System.Data.Linq.CompiledQuery
  isExternal: false
  name: Expression
  nameWithType: CompiledQuery.Expression
