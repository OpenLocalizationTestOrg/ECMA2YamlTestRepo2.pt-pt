### YamlMime:ManagedReference
items:
- uid: System.Web.SiteMapNodeCollection
  id: SiteMapNodeCollection
  children:
  - System.Web.SiteMapNodeCollection.#ctor
  - System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  - System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Clear
  - System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  - System.Web.SiteMapNodeCollection.Count
  - System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  - System.Web.SiteMapNodeCollection.GetEnumerator
  - System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  - System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  - System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.IsFixedSize
  - System.Web.SiteMapNodeCollection.IsReadOnly
  - System.Web.SiteMapNodeCollection.IsSynchronized
  - System.Web.SiteMapNodeCollection.Item(System.Int32)
  - System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  - System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  - System.Web.SiteMapNodeCollection.SyncRoot
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  - System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  langs:
  - csharp
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
  type: Class
  summary: "Provides a strongly typed collection for <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects and implements the <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;></xref> interface to support navigating through the collection."
  remarks: "The SiteMapNodeCollection class provides a strongly typed collection for <xref:System.Web.SiteMapNode> objects. It stores <xref:System.Web.SiteMapNode> objects internally in a zero-based array.       You can modify a SiteMapNodeCollection collection when it is first created, and then use the following methods to add, copy, and remove <xref:System.Web.SiteMapNode> objects:      -   To add <xref:System.Web.SiteMapNode> objects, use the <xref:System.Web.SiteMapNodeCollection.Add%2A>,  <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, and <xref:System.Web.SiteMapNodeCollection.Insert%2A> methods.      -   To copy <xref:System.Web.SiteMapNode> objects, use the <xref:System.Web.SiteMapNodeCollection.CopyTo%2A> method.      -   To remove <xref:System.Web.SiteMapNode> objects, use the <xref:System.Web.SiteMapNodeCollection.Remove%2A> method.       You can create a read-only SiteMapNodeCollection, which does not permit adding, copying, nor removing <xref:System.Web.SiteMapNode> objects, by using the static <xref:System.Web.SiteMapNodeCollection.ReadOnly%2A> method. The SiteMapNodeCollection collections that are returned by the <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName> and <xref:System.Web.UI.IHierarchyData.GetChildren%2A> methods are read-only, as is the SiteMapNodeCollection that is returned when the <xref:System.Web.SiteMapNode.ChildNodes%2A> property is accessed on a <xref:System.Web.SiteMapNode> object that is returned from a provider. A <xref:System.NotSupportedException> exception is thrown, if you attempt to modify a read-only SiteMapNodeCollection by setting the default indexer property or by using any of the following methods:      -   <xref:System.Web.SiteMapNodeCollection.Add%2A>      -   <xref:System.Web.SiteMapNodeCollection.AddRange%2A>      -   <xref:System.Web.SiteMapNodeCollection.Clear%2A>      -   <xref:System.Web.SiteMapNodeCollection.Insert%2A>      -   <xref:System.Web.SiteMapNodeCollection.Remove%2A>      -   <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A>       Use the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property to check the collection before calling any of the methods in the preceding list."
  example:
  - "The following code example demonstrates how to create a SiteMapNodeCollection collection, and then add <xref:System.Web.SiteMapNode> objects to it using the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method. The SiteMapNodeCollection is a subset of the current site map, showing only the first two hierarchical levels.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/t-system.web.sitemapnode_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/t-system.web.sitemapnode_1.aspx)]"
  syntax:
    content: 'public class SiteMapNodeCollection : System.Collections.IList, System.Web.UI.IHierarchicalEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IHierarchicalEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection()
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection()
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> class, which is the default instance."
  remarks: "Use the SiteMapNodeCollection constructor to create an empty <xref:System.Web.SiteMapNodeCollection> collection. You can add elements to the <xref:System.Web.SiteMapNodeCollection> using the <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, or <xref:System.Web.SiteMapNodeCollection.Insert%2A> method."
  example:
  - "The following code example demonstrates how to use the SiteMapNodeCollection constructor to create a new <xref:System.Web.SiteMapNodeCollection> collection, and then add elements to the <xref:System.Web.SiteMapNodeCollection> with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_5_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_5_1.vb)]"
  syntax:
    content: public SiteMapNodeCollection ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(Int32)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> class with the specified initial capacity."
  remarks: "Use the SiteMapNodeCollection constructor to create a <xref:System.Web.SiteMapNodeCollection> collection with the specified initial capacity."
  syntax:
    content: public SiteMapNodeCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "The initial capacity of the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  id: '#ctor(System.Web.SiteMapNode)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNode)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> class and adds the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object to the <xref:System.Collections.CollectionBase.InnerList*> property for the collection."
  remarks: "Use the SiteMapNodeCollection constructor to create a <xref:System.Web.SiteMapNodeCollection> collection with a single initial <xref:System.Web.SiteMapNode> object. You can add elements to the <xref:System.Web.SiteMapNodeCollection> using the <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, or <xref:System.Web.SiteMapNodeCollection.Insert%2A> method."
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.SiteMapNodeCollection> collection with a single initial <xref:System.Web.SiteMapNode> object, and then add a <xref:System.Web.SiteMapNodeCollection> of <xref:System.Web.SiteMapNode> objects to it using the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method. You can modify the <xref:System.Web.SiteMapNodeCollection>, even though the individual <xref:System.Web.SiteMapNode> objects might be read-only.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_2_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_2_1.aspx)]"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  id: '#ctor(System.Web.SiteMapNode[])'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> class and adds the array of type <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to the <xref:System.Collections.CollectionBase.InnerList*> property for the collection."
  remarks: "Using the SiteMapNodeCollection constructor is equivalent to calling the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor and adding elements to the <xref:System.Web.SiteMapNodeCollection> collection with the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method."
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNode[] value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode[]
      description: "An array of type <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  id: '#ctor(System.Web.SiteMapNodeCollection)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> class and adds all the list items of the specified <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> collection to the <xref:System.Collections.CollectionBase.InnerList*> property for the collection."
  remarks: "Using the SiteMapNodeCollection constructor is equivalent to calling the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor and adding elements to the <xref:System.Web.SiteMapNodeCollection> collection with the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method."
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.SiteMapNodeCollection> collection using another <xref:System.Web.SiteMapNodeCollection> of <xref:System.Web.SiteMapNode> objects as a base. The <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName> method returns a read-only <xref:System.Web.SiteMapNodeCollection>, which is detected when the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property returns `true`. A new <xref:System.Web.SiteMapNodeCollection> is created using the read-only <xref:System.Web.SiteMapNodeCollection> and the <xref:System.Web.SiteMapNodeCollection.Add%2A> and <xref:System.Web.SiteMapNodeCollection.Remove%2A> methods can be called successfully.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_7_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_7_1.aspx)]"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNodeCollection value);
    parameters:
    - id: value
      type: System.Web.SiteMapNodeCollection
      description: "A <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> that contains the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the current <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  id: Add(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Add(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Add(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Add(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds a single <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object to the  collection."
  remarks: "You cannot add a <xref:System.Web.SiteMapNode> object to a read-only or fixed-size <xref:System.Web.SiteMapNodeCollection> collection. You can test whether a <xref:System.Web.SiteMapNodeCollection> is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property."
  example:
  - "This section contains two code examples. The first code example demonstrates how to create a new <xref:System.Web.SiteMapNodeCollection> collection and add elements to it. The second code example demonstrates how to add elements to a custom site map provider.  \n  \n The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection>, and then add elements to it with the Add method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_10_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_10_1.vb)]  \n  \n The following code example demonstrates a custom site map provider implementation and shows how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection> and add elements to the <xref:System.Web.SiteMapNodeCollection> with the Add method.  \n  \n This code example is part of a larger code example provided for the <xref:System.Web.SiteMapProvider> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_10_2.vb)]\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/csharp/m-system.web.sitemapnode_10_2.cs)]"
  syntax:
    content: public virtual int Add (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "The index of the <xref:System.Collections.CollectionBase.InnerList*> where the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> was inserted."
  overload: System.Web.SiteMapNodeCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  id: AddRange(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: AddRange(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNode[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds an array of type <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to the collection."
  remarks: "The array that is passed to the AddRange method can contain `null` values; however, this leads to unexpected exceptions when the <xref:System.Web.SiteMapNodeCollection> collection is manipulated.       You cannot add a <xref:System.Web.SiteMapNode> object to a read-only or fixed-size <xref:System.Web.SiteMapNodeCollection>. You can test whether a <xref:System.Web.SiteMapNodeCollection> is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property."
  syntax:
    content: public virtual void AddRange (System.Web.SiteMapNode[] value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode[]
      description: "An array of type <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the current <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  id: AddRange(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: AddRange(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds the nodes in the specified  <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> to the current collection."
  remarks: "The <xref:System.Web.SiteMapNodeCollection> collection that is passed to the AddRange method can contain `null`<xref:System.Web.SiteMapNode> objects; however, this leads to unexpected exceptions when the <xref:System.Web.SiteMapNodeCollection> is manipulated.       You cannot add a <xref:System.Web.SiteMapNode> object to a read-only or fixed-size <xref:System.Web.SiteMapNodeCollection>. You can test whether a <xref:System.Web.SiteMapNodeCollection> is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property."
  example:
  - "The following code example demonstrates how to create a modifiable <xref:System.Web.SiteMapNodeCollection> collection, and then add <xref:System.Web.SiteMapNode> objects to it using the AddRange method.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_0_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_0_1.aspx)]"
  syntax:
    content: public virtual void AddRange (System.Web.SiteMapNodeCollection value);
    parameters:
    - id: value
      type: System.Web.SiteMapNodeCollection
      description: "A <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> that contains the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects to add to the current <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Clear
  id: Clear
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: SiteMapNodeCollection.Clear()
  fullName: System.Web.SiteMapNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Removes all items from the collection."
  remarks: "You can test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property.       To remove specific elements of the <xref:System.Web.SiteMapNodeCollection>, use the <xref:System.Web.SiteMapNodeCollection.Remove%2A> or <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A> method."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  id: Contains(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Contains(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Contains(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Contains(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Determines whether the collection contains a specific <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object."
  remarks: "The Contains method determines equality by calling the <xref:System.Object.Equals%2A?displayProperty=fullName> method."
  example:
  - "The following code example demonstrates how to use the Contains and <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> methods of the <xref:System.Web.SiteMapNodeCollection> class. The code checks two providers, `AspNetXmlSiteMapProvider` and `MyXmlSiteMapProvider`, for child nodes of the root node that are duplicates.  \n  \n [!code-cs[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_6_1.aspx)]\n [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_6_1.aspx)]"
  syntax:
    content: public virtual bool Contains (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to locate in the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> contains the specified <xref href=&quot;System.Web.SiteMapNode&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  id: CopyTo(System.Web.SiteMapNode[],System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: CopyTo(SiteMapNode[],Int32)
  nameWithType: SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  fullName: System.Web.SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array."
  remarks: "The CopyTo method delegates to the <xref:System.Collections.CollectionBase.List%2A?displayProperty=fullName> property, which accounts for the possible exceptions that are listed in &quot;Exceptions.&quot;"
  syntax:
    content: public virtual void CopyTo (System.Web.SiteMapNode[] array, int index);
    parameters:
    - id: array
      type: System.Web.SiteMapNode[]
      description: "The one-dimensional array that must have zero-based indexing and is the destination of the elements copied from the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Web.SiteMapNodeCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.       -or-       The number of <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects in the source <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is greater than the available space from <code>index</code> to the end of <code>array</code>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Count
  id: Count
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: SiteMapNodeCollection.Count
  fullName: System.Web.SiteMapNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the number of elements contained in the collection."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "The number of elements in the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  id: GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Retrieves the <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;></xref> object that is associated with the nodes in the current collection."
  syntax:
    content: public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView (System.Web.UI.WebControls.SiteMapDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SiteMapDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSource&quot;></xref> control that the view is associated with."
    - id: viewName
      type: System.String
      description: "The name of the view."
    return:
      type: System.Web.UI.WebControls.SiteMapDataSourceView
      description: "A named <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;></xref> for the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects in the current <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.GetDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SiteMapNodeCollection.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Retrieves a reference to an enumerator object, which is used to iterate over the collection."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An object that implements the <xref:System.Collections.IEnumerator>."
  overload: System.Web.SiteMapNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  id: GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Retrieves the <xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;></xref> object that is associated with the nodes in the current collection."
  syntax:
    content: public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;></xref> for the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects in the current <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  id: GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.GetHierarchyData(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a hierarchical data item for the specified enumerated item."
  syntax:
    content: public virtual System.Web.UI.IHierarchyData GetHierarchyData (object enumeratedItem);
    parameters:
    - id: enumeratedItem
      type: System.Object
      description: "The object for which to return an <xref href=&quot;System.Web.UI.IHierarchyData&quot;></xref>."
    return:
      type: System.Web.UI.IHierarchyData
      description: "An <xref href=&quot;System.Web.UI.IHierarchyData&quot;></xref> that represents the object passed to the GetHierarchyData."
  overload: System.Web.SiteMapNodeCollection.GetHierarchyData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  id: IndexOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IndexOf(SiteMapNode)
  nameWithType: SiteMapNodeCollection.IndexOf(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.IndexOf(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Searches for the specified <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object, and then returns the zero-based index of the first occurrence within the entire collection."
  remarks: "The IndexOf method determines equality by calling the <xref:System.Object.Equals%2A?displayProperty=fullName> method."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.Contains%2A> and IndexOf methods of the <xref:System.Web.SiteMapNodeCollection> class. The code checks two providers, `AspNetXmlSiteMapProvider` and `MyXmlSiteMapProvider`, for child nodes of the root node that are duplicates.  \n  \n [!code-cs[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_3_1.aspx)]\n [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_3_1.aspx)]"
  syntax:
    content: public virtual int IndexOf (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to locate in the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "The zero-based index of the first occurrence of <code>value</code> within the entire <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>, if found; otherwise, -1."
  overload: System.Web.SiteMapNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  id: Insert(System.Int32,System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Insert(Int32,SiteMapNode)
  nameWithType: SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inserts the specified <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object into the collection at the specified index."
  remarks: "You can test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property."
  syntax:
    content: public virtual void Insert (int index, System.Web.SiteMapNode value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> is inserted."
    - id: value
      type: System.Web.SiteMapNode
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to insert."
  overload: System.Web.SiteMapNodeCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.       -or-       <code>index</code> is greater than the <xref:System.Collections.CollectionBase.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only.       -or-       The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> has a fixed size."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a Boolean value indicating whether nodes can be added to or subtracted from the collection."
  syntax:
    content: public virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if you can add <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects to or remove <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects from the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a Boolean value indicating whether the collection is read-only."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if you can modify the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a Boolean value indicating whether access to the collection is synchronized (thread safe)."
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access is synchronized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SiteMapNodeCollection.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object at the specified index in the collection."
  remarks: "You can use the Item indexer to iterate over the contents of a <xref:System.Web.SiteMapNodeCollection> collection or to replace the <xref:System.Web.SiteMapNode> object at a specified index."
  example:
  - "The following code example demonstrates how to use the Item indexer to retrieve a <xref:System.Web.SiteMapNode> object from the <xref:System.Web.SiteMapNodeCollection> collection. In this example, a <xref:System.Web.SiteMapNode> object is removed from its position at the second element of the internal array using the <xref:System.Web.SiteMapNodeCollection.Remove%2A> method and is appended to the array with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method. To insert a <xref:System.Web.SiteMapNode> object at a specific index, instead of appending it to the end of the array, use the <xref:System.Web.SiteMapNodeCollection.Insert%2A> method.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/visualbasic/p-system.web.sitemapnode_0_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/csharp/p-system.web.sitemapnode_0_1.aspx)]"
  syntax:
    content: public virtual System.Web.SiteMapNode this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to find."
    return:
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;></xref> that represents an element in the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is great than the <xref:System.Collections.CollectionBase.Count*>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value supplied to the setter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: SiteMapNodeCollection.OnValidate(Object)
  fullName: System.Web.SiteMapNodeCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Performs additional custom processes when validating a value."
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to validate."
  overload: System.Web.SiteMapNodeCollection.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is not a <xref href=&quot;System.Web.SiteMapNode&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  id: ReadOnly(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: ReadOnly(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a read-only collection that contains the nodes in the specified <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> collection."
  remarks: "You can test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property. The <xref:System.Web.SiteMapNodeCollection.IsFixedSize%2A> property also returns `true` when a <xref:System.Web.SiteMapNodeCollection> is read-only."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property to test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only or modifiable. If `siteNodes` is modifiable, `MoveNode` is called on it; otherwise, a clone <xref:System.Web.SiteMapNodeCollection> is created, using `siteNodes` as a base.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_11_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_11_1.aspx)]"
  syntax:
    content: public static System.Web.SiteMapNodeCollection ReadOnly (System.Web.SiteMapNodeCollection collection);
    parameters:
    - id: collection
      type: System.Web.SiteMapNodeCollection
      description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> that contains the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects to add to the read-only <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
    return:
      type: System.Web.SiteMapNodeCollection
      description: "A read-only <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> with the same <xref href=&quot;System.Web.SiteMapNode&quot;></xref> elements and structure as the original <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.ReadOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>collection</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  id: Remove(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Remove(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Remove(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Remove(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Removes the specified <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object from the collection."
  remarks: "You can test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property.       The Remove method determines equality by calling the <xref:System.Object.Equals%2A?displayProperty=fullName> method."
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.SiteMapNode> object from a <xref:System.Web.SiteMapNodeCollection> collection, and then append the <xref:System.Web.SiteMapNode> object to the end of the <xref:System.Web.SiteMapNodeCollection> using the <xref:System.Web.SiteMapNodeCollection.Add%2A> method. If the <xref:System.Web.SiteMapNodeCollection> is read-only, a <xref:System.NotSupportedException> exception is caught.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_9_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_9_1.aspx)]"
  syntax:
    content: public virtual void Remove (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to remove from the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> does not exist in the collection."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only.       -or-       The <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> has a fixed size."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Removes the <xref href=&quot;System.Web.SiteMapNode&quot;></xref> object at the specified index of the  collection."
  remarks: "You can test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only by checking the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property.       To remove an element from the <xref:System.Web.SiteMapNodeCollection> by specifying a <xref:System.Web.SiteMapNode> object to remove, use the <xref:System.Web.SiteMapNodeCollection.Remove%2A> method."
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the element to remove."
  overload: System.Web.SiteMapNodeCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than the <xref:System.Collections.CollectionBase.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Web.SiteMapNodeCollection\"></xref> is read-only.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.SiteMapNodeCollection\"></xref> has a fixed sized."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets an object that can be used to synchronize access to the  collection."
  remarks: "Enumerating through a <xref:System.Web.SiteMapNodeCollection> collection is intrinsically not a thread safe procedure. Even when a <xref:System.Web.SiteMapNodeCollection> is synchronized, other threads can still modify the <xref:System.Web.SiteMapNodeCollection>, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the <xref:System.Web.SiteMapNodeCollection> during the entire enumeration or catch the exceptions resulting from changes that are made by other threads."
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Copies the elements of the <xref:System.Collections.ICollection> interface to an array, starting at a particular array index. This class cannot be inherited."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A one-dimensional array that must have zero-based indexing and is the destination of the elements copied from the <xref href=&quot;System.Collections.CollectionBase&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.       -or-       The number of <xref href=&quot;System.Web.SiteMapNode&quot;></xref> objects in the source <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is greater than the available space from <code>index</code> to the end of <code>array</code>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the number of elements that are contained in the <xref:System.Collections.ICollection> interface. This class cannot be inherited."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "The number of elements contained in the <xref:System.Collections.ICollection>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value indicating whether access to the <xref:System.Collections.ICollection> interface is synchronized (thread safe). This class cannot be inherited."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets an object that can be used to synchronize access to the <xref:System.Collections.ICollection> interface. This class cannot be inherited."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the <xref:System.Collections.ICollection>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns an enumerator that iterates through a collection. For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds an item to the collection in the <xref:System.Collections.IList> interface. For a description of this member, see &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to add to the <xref:System.Collections.IList>."
    return:
      type: System.Int32
      description: "The position into which the new element was inserted."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Removes all items from the collection in the <xref:System.Collections.IList> interface. For a description of this member, see &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Determines whether the collection in the <xref:System.Collections.IList> interface contains the specified Boolean value."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to locate in the <xref:System.Collections.IList>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the object is found in the <xref:System.Collections.IList>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Determines the index of the specific item in the collection that is returned by the <xref:System.Collections.IList> interface. For a description of this member, see &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to locate in the <xref:System.Collections.IList>."
    return:
      type: System.Int32
      description: "The index of the value, in the list, if found; otherwise, -1."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inserts an item into the collection in the <xref:System.Collections.IList> interface at the specified index. For a description of this member, see &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based `index` at which to insert `value`."
    - id: value
      type: System.Object
      description: "The object to insert into the <xref:System.Collections.IList>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value indicating whether the collection has a fixed size. For a description of this member, see &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value indicating whether the collection is read-only. For a description of this member, see &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref> is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the <xref:System.Collections.IList> element at the specified index."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the element to get."
    return:
      type: System.Object
      description: "The element at the specified index."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Removes the first occurrence of a specified object from the collection in the <xref:System.Collections.IList> interface. For a description of this member, see &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to remove from the <xref:System.Collections.IList>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Removes the <xref:System.Collections.IList> item at the specified index. For a description of this member, see &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the item to remove."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  id: System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a hierarchical data item for the specified enumerated item. For a description of this member, see &lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A?displayProperty=fullName&gt;."
  syntax:
    content: System.Web.UI.IHierarchyData IHierarchicalEnumerable.GetHierarchyData (object enumeratedItem);
    parameters:
    - id: enumeratedItem
      type: System.Object
      description: "The object for which to return an <xref href=&quot;System.Web.UI.IHierarchyData&quot;></xref>."
    return:
      type: System.Web.UI.IHierarchyData
      description: "An <xref href=&quot;System.Web.UI.IHierarchyData&quot;></xref> that represents the object passed to the IHierarchicalEnumerable.GetHierarchyData."
  overload: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SiteMapNodeCollection.#ctor
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection()
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection()
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection()
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(Int32)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNode)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
- uid: System.Web.SiteMapNode
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
- uid: System.Web.SiteMapNode[]
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode[]
  spec.csharp:
  - uid: System.Web.SiteMapNode
    name: SiteMapNode
    nameWithType: SiteMapNode
    fullName: SiteMapNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection
  parent: System.Web
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
- uid: System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Add(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Add(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Add(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNode[])
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection.Clear
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: SiteMapNodeCollection.Clear()
  fullName: System.Web.SiteMapNodeCollection.Clear()
- uid: System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Contains(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Contains(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Contains(SiteMapNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: CopyTo(SiteMapNode[],Int32)
  nameWithType: SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  fullName: System.Web.SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
- uid: System.Web.SiteMapNodeCollection.Count
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Count
  nameWithType: SiteMapNodeCollection.Count
  fullName: System.Web.SiteMapNodeCollection.Count
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
- uid: System.Web.UI.WebControls.SiteMapDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSourceView
  nameWithType: SiteMapDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapDataSourceView
- uid: System.Web.UI.WebControls.SiteMapDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSource
  nameWithType: SiteMapDataSource
  fullName: System.Web.UI.WebControls.SiteMapDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SiteMapNodeCollection.GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: SiteMapNodeCollection.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView()
- uid: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapHierarchicalDataSourceView
  nameWithType: SiteMapHierarchicalDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.GetHierarchyData(Object)
- uid: System.Web.UI.IHierarchyData
  parent: System.Web.UI
  isExternal: false
  name: IHierarchyData
  nameWithType: IHierarchyData
  fullName: System.Web.UI.IHierarchyData
- uid: System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IndexOf(SiteMapNode)
  nameWithType: SiteMapNodeCollection.IndexOf(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.IndexOf(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Insert(Int32,SiteMapNode)
  nameWithType: SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Insert(Int32,SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: SiteMapNodeCollection.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.Item(Int32)
- uid: System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: SiteMapNodeCollection.OnValidate(Object)
  fullName: System.Web.SiteMapNodeCollection.OnValidate(Object)
- uid: System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: ReadOnly(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Remove(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Remove(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Remove(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.RemoveAt(Int32)
- uid: System.Web.SiteMapNodeCollection.SyncRoot
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.Count
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Add(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Clear()
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
- uid: System.Web.SiteMapNodeCollection.#ctor*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection
- uid: System.Web.SiteMapNodeCollection.Add*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Add
  nameWithType: SiteMapNodeCollection.Add
- uid: System.Web.SiteMapNodeCollection.AddRange*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange
  nameWithType: SiteMapNodeCollection.AddRange
- uid: System.Web.SiteMapNodeCollection.Clear*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Clear
  nameWithType: SiteMapNodeCollection.Clear
- uid: System.Web.SiteMapNodeCollection.Contains*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Contains
  nameWithType: SiteMapNodeCollection.Contains
- uid: System.Web.SiteMapNodeCollection.CopyTo*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: SiteMapNodeCollection.CopyTo
- uid: System.Web.SiteMapNodeCollection.Count*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Count
  nameWithType: SiteMapNodeCollection.Count
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetDataSourceView
  nameWithType: SiteMapNodeCollection.GetDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetEnumerator*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: SiteMapNodeCollection.GetEnumerator
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchicalDataSourceView
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchyData
  nameWithType: SiteMapNodeCollection.GetHierarchyData
- uid: System.Web.SiteMapNodeCollection.IndexOf*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: SiteMapNodeCollection.IndexOf
- uid: System.Web.SiteMapNodeCollection.Insert*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Insert
  nameWithType: SiteMapNodeCollection.Insert
- uid: System.Web.SiteMapNodeCollection.IsFixedSize*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.IsReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.IsSynchronized*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.Item*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Item
  nameWithType: SiteMapNodeCollection.Item
- uid: System.Web.SiteMapNodeCollection.OnValidate*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: OnValidate
  nameWithType: SiteMapNodeCollection.OnValidate
- uid: System.Web.SiteMapNodeCollection.ReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: ReadOnly
  nameWithType: SiteMapNodeCollection.ReadOnly
- uid: System.Web.SiteMapNodeCollection.Remove*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Remove
  nameWithType: SiteMapNodeCollection.Remove
- uid: System.Web.SiteMapNodeCollection.RemoveAt*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: SiteMapNodeCollection.RemoveAt
- uid: System.Web.SiteMapNodeCollection.SyncRoot*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData
