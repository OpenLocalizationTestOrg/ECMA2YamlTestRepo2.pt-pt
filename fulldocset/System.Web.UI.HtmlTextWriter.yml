### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlTextWriter
  id: HtmlTextWriter
  children:
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  - System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  - System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.BeginRender
  - System.Web.UI.HtmlTextWriter.Close
  - System.Web.UI.HtmlTextWriter.DefaultTabString
  - System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  - System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  - System.Web.UI.HtmlTextWriter.Encoding
  - System.Web.UI.HtmlTextWriter.EndRender
  - System.Web.UI.HtmlTextWriter.EndTagLeftChars
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.EqualsChar
  - System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.FilterAttributes
  - System.Web.UI.HtmlTextWriter.Flush
  - System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  - System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.Indent
  - System.Web.UI.HtmlTextWriter.InnerWriter
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  - System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  - System.Web.UI.HtmlTextWriter.NewLine
  - System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.OutputTabs
  - System.Web.UI.HtmlTextWriter.PopEndTag
  - System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  - System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  - System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderAfterContent
  - System.Web.UI.HtmlTextWriter.RenderAfterTag
  - System.Web.UI.HtmlTextWriter.RenderBeforeContent
  - System.Web.UI.HtmlTextWriter.RenderBeforeTag
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.HtmlTextWriter.RenderEndTag
  - System.Web.UI.HtmlTextWriter.SelfClosingChars
  - System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  - System.Web.UI.HtmlTextWriter.SemicolonChar
  - System.Web.UI.HtmlTextWriter.SingleQuoteChar
  - System.Web.UI.HtmlTextWriter.SlashChar
  - System.Web.UI.HtmlTextWriter.SpaceChar
  - System.Web.UI.HtmlTextWriter.StyleEqualsChar
  - System.Web.UI.HtmlTextWriter.TagKey
  - System.Web.UI.HtmlTextWriter.TagLeftChar
  - System.Web.UI.HtmlTextWriter.TagName
  - System.Web.UI.HtmlTextWriter.TagRightChar
  - System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  - System.Web.UI.HtmlTextWriter.Write(System.Char)
  - System.Web.UI.HtmlTextWriter.Write(System.Char[])
  - System.Web.UI.HtmlTextWriter.Write(System.Double)
  - System.Web.UI.HtmlTextWriter.Write(System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.Int64)
  - System.Web.UI.HtmlTextWriter.Write(System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.Single)
  - System.Web.UI.HtmlTextWriter.Write(System.String)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteBreak
  - System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  - System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  - System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  - System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  - System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
  type: Class
  summary: "Writes markup characters and text to an ASP.NET server control output stream. This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients."
  remarks: "The HtmlTextWriter class is used to render HTML 4.0 to desktop browsers. The HtmlTextWriter is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes. These classes are used to write the elements, attributes, and style and layout information for different types of markup. In addition, these classes are used by the page and control adapter classes that are associated with each markup language.       In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device. However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file."
  example:
  - "The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class. The code example illustrates how to use various HtmlTextWriter methods, properties, and fields.  \n  \n [!code-cs[MarkupTextWriter_Samples1#1](~/add/codesnippet/csharp/t-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: 'public class HtmlTextWriter : System.IO.TextWriter'
  inheritance:
  - System.IO.TextWriter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> class that uses a default tab string."
  remarks: "The HtmlTextWriter overload of the HtmlTextWriter constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary. It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance."
  example:
  - "The following code example demonstrates how to use the HtmlTextWriter constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_26_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_26_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_26_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "The <xref:System.IO.TextWriter> instance that renders the markup content."
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> class with a specified tab string character."
  remarks: "The HtmlTextWriter overload of the HtmlTextWriter constructor uses `tabString` when indentation of a line is necessary. It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=fullName> base constructor to initialize the new instance."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.  \n  \n [!code-vb[HtmlTextWriter_Methods3#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_31_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#10](~/add/codesnippet/cpp/m-system.web.ui.htmltext_31_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_31_1.cs)]"
  syntax:
    content: public HtmlTextWriter (System.IO.TextWriter writer, string tabString);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "The <xref:System.IO.TextWriter> that renders the markup content."
    - id: tabString
      type: System.String
      description: "The string to use to render a line indentation."
  overload: System.Web.UI.HtmlTextWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  id: AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the specified markup attribute and value to the opening tag of the element that the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object creates with a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "Use the AddAttribute overload of the AddAttribute method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.       For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element. When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element. The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.       The coding pattern for rendering markup elements is as follows:      -   Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.      -   Use other methods as needed to render the content found between the element&quot;s opening and closing tags.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method."
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream. The AddAttribute method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_42_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_42_1.vb)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "A string containing the name of the attribute to add."
    - id: value
      type: System.String
      description: "A string containing the value to assign to the attribute."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the markup attribute and the attribute value to the opening tag of the element that the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object creates with a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "Use the AddAttribute overload of the AddAttribute method to render a standard markup attribute.       For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element. When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element. The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.       The coding pattern for rendering markup elements is as follows:      -   Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.      -   Use other methods as needed to render the content found between the element&quot;s opening and closing tags.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method."
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:  \n  \n```  \nalert('Hello');  \n```  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/visualbasic/f7056fa3-ef89-45d7-9cdd-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/csharp/f7056fa3-ef89-45d7-9cdd-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/add/codesnippet/cpp/f7056fa3-ef89-45d7-9cdd-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> that represents the markup attribute to add to the output stream."
    - id: value
      type: System.String
      description: "A string containing the value to assign to the attribute."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  id: AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the specified markup attribute and value to the opening tag of the element that the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object creates with a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method, with optional encoding."
  remarks: "Use the AddAttribute overload of the AddAttribute method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.       For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element. When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element. The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.       Use the AddAttribute method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark (&quot;), a less than sign (<), or an ampersand (&). The method call will encode the attribute to meet the requirements of the requesting device. You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.       The coding pattern for rendering markup elements is as follows:      -   Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.      -   Use other methods as needed to render the content found between the element&quot;s opening and closing tags.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method."
  example:
  - "The following code example shows how to use the AddAttribute overload of the AddAttribute method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/42cbe4de-f3a3-40dc-8e06-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/42cbe4de-f3a3-40dc-8e06-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/42cbe4de-f3a3-40dc-8e06-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (string name, string value, bool fEndode);
    parameters:
    - id: name
      type: System.String
      description: "A string containing the name of the attribute to add."
    - id: value
      type: System.String
      description: "A string containing the value to assign to the attribute."
    - id: fEndode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to encode the attribute and its value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the specified markup attribute and value, along with an <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> enumeration value, to the opening tag of the element that the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object creates with a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "Use the AddAttribute overload of the AddAttribute method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class. It enables you to create new `name` and `key` pairs for attributes."
  syntax:
    content: protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "A string containing the name of the attribute to add."
    - id: value
      type: System.String
      description: "A string containing the value to assign to the attribute."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> that represents the attribute."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  id: AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the markup attribute and the attribute value to the opening tag of the element that the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object creates with a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method, with optional encoding."
  remarks: "Use the AddAttribute overload of the AddAttribute method to render a standard markup attribute, with optional encoding.       For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element. When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element. The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.       Use the AddAttribute method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark (&quot;), a less than sign (<), or an ampersand (&). The method call will encode the attribute to meet the requirements of the requesting device. You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.       The coding pattern for rendering markup elements is as follows:      -   Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.      -   Use other methods as needed to render the content found between the element&quot;s opening and closing tags.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method."
  example:
  - "The following code example demonstrates how to use the AddAttribute method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/5fc4f314-c4b1-473d-abfa-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/5fc4f314-c4b1-473d-abfa-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/5fc4f314-c4b1-473d-abfa-_1.cpp)]"
  syntax:
    content: public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> that represents the markup attribute to add to the output stream."
    - id: value
      type: System.String
      description: "A string containing the value to assign to the attribute."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to encode the attribute and its value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.AddAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  id: AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "Use the AddStyleAttribute overload of the AddStyleAttribute method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.       The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders. When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element. The list of styles is then cleared.       The coding pattern for rendering markup elements is as follows:      -   Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.      -   Use other methods as needed to render the content found between the element opening and closing tags.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method."
  example:
  - "The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the AddStyleAttribute method to render `font-size` and `color` style attributes on a `<p>` element. This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.  \n  \n [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_13_1.cpp)]\n [!code-cs[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_13_1.cs)]\n [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_13_1.vb)]"
  syntax:
    content: public virtual void AddStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "A string that contains the style attribute to add."
    - id: value
      type: System.String
      description: "A string that contains the value to assign to the attribute."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  id: AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the markup style attribute associated with the specified <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> value and the attribute value to the opening markup tag created by a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "Use the AddStyleAttribute overload of the AddStyleAttribute method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.       The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders. When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element. The list of styles is then cleared.       The coding pattern for rendering markup elements is as follows:      -   Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.      -   Use other methods as needed to render the content found between the element opening and closing tags.      -   Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method."
  example:
  - "The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The code checks whether a `<Label>` element is being rendered. If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element. If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/da7f284f-e06a-4e07-bda6-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/da7f284f-e06a-4e07-bda6-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/da7f284f-e06a-4e07-bda6-_1.cs)]"
  syntax:
    content: public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> that represents the style attribute to add to the output stream."
    - id: value
      type: System.String
      description: "A string that contains the value to assign to the attribute."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds the specified markup style attribute and the attribute value, along with an <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> enumeration value, to the opening markup tag created by a subsequent call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "Use the AddStyleAttribute overload of the AddStyleAttribute method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class. It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes."
  syntax:
    content: protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "A string that contains the style attribute to be added."
    - id: value
      type: System.String
      description: "A string that contains the value to assign to the attribute."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> that represents the style attribute to add."
  overload: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  id: BeginRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Notifies an <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object, or an object of a derived class, that a control is about to be rendered."
  remarks: "The <xref:System.Web.UI.HtmlTextWriter> class implementation of the BeginRender method has no functionality. You must override the BeginRender method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality. For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the BeginRender override."
  syntax:
    content: public virtual void BeginRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Close
  id: Close
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Closes the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object and releases any system resources associated with it."
  remarks: "This implementation of the Close method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=fullName> base method.       Following a call to the Close method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  id: DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents a single tab character."
  remarks: "The single tab is represented by the ASCII 9 character."
  example:
  - "The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the DefaultTabString field as a parameter argument to a second version of the constructor. When this constructor is called from code, the DefaultTabString field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.  \n  \n [!code-cs[MarkupTextWriter_Methods3#1](~/add/codesnippet/csharp/f-system.web.ui.htmltext_8_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#1](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_8_1.vb)]"
  syntax:
    content: public const string DefaultTabString;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  id: DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the quotation mark (&quot;) character."
  remarks: "The DoubleQuoteChar field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute."
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and DoubleQuoteChar fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_7_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_7_1.cs)]"
  syntax:
    content: public const char DoubleQuoteChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  id: EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Encodes the value of the specified markup attribute based on the requirements of the <xref href=&quot;System.Web.HttpRequest&quot;></xref> object of the current context."
  remarks: "Use the EncodeAttributeValue overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.       The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks (&quot;), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input. The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method."
  example:
  - "The following code example shows how to call the EncodeAttributeValue method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.  \n  \n [!code-cs[HtmlTextWriter_Methods#5](~/add/codesnippet/csharp/ca3d7869-90f7-46e1-a9f1-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#5](~/add/codesnippet/visualbasic/ca3d7869-90f7-46e1-a9f1-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#5](~/add/codesnippet/cpp/ca3d7869-90f7-46e1-a9f1-_1.cpp)]"
  syntax:
    content: protected string EncodeAttributeValue (string value, bool fEncode);
    parameters:
    - id: value
      type: System.String
      description: "A string containing the attribute value to encode."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to encode the attribute value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "A string containing the encoded attribute value, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>value</code> is empty, or the unencoded attribute value if <code>fEncode</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  id: EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Encodes the value of the specified markup attribute based on the requirements of the <xref href=&quot;System.Web.HttpRequest&quot;></xref> object of the current context."
  remarks: "The EncodeAttributeValue method removes double quotation marks (&quot;), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input. The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method."
  syntax:
    content: protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> representing the markup attribute."
    - id: value
      type: System.String
      description: "A string containing the attribute value to encode."
    return:
      type: System.String
      description: "A string containing the encoded attribute value."
  overload: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  id: EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Performs minimal URL encoding by converting spaces in the specified URL to the string &quot;%20&quot;."
  remarks: "URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character. The hexadecimal representation of a space is 20."
  example:
  - "The following code example demonstrates how to call the EncodeUrl method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.  \n  \n [!code-cs[HtmlTextWriter_Methods#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_41_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_41_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#6](~/add/codesnippet/cpp/m-system.web.ui.htmltext_41_1.cpp)]"
  syntax:
    content: protected string EncodeUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "A string containing the URL to encode."
    return:
      type: System.String
      description: "A string containing the encoded URL."
  overload: System.Web.UI.HtmlTextWriter.EncodeUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Encoding
  id: Encoding
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the encoding that the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object uses to write content to the page."
  remarks: "The Encoding property obtains its value from the base <xref:System.IO.TextWriter> object."
  example:
  - "The following code example shows how to use the Encoding property to write the type of encoding that a custom control uses to render text to the page that contains it.  \n  \n [!code-cpp[HtmlTextWriter_Properties#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_3_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override System.Text.Encoding Encoding { get; }
    return:
      type: System.Text.Encoding
      description: "The <xref:System.Text.Encoding> in which the markup is written to the page."
  overload: System.Web.UI.HtmlTextWriter.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndRender
  id: EndRender
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Notifies an <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object, or an object of a derived class, that a control has finished rendering. You can use this method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender*> method."
  remarks: "The <xref:System.Web.UI.HtmlTextWriter> class implementation of the EndRender method has no functionality. You must override EndRender in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.       You can use the EndRender method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method."
  syntax:
    content: public virtual void EndRender ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  id: EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element."
  remarks: "The EndTagLeftChars field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags."
  example:
  - "The following code example shows how to render the closing tag of a `<table>` markup element by using the EndTagLeftChars and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_10_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_10_1.cs)]"
  syntax:
    content: public const string EndTagLeftChars;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  id: EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the opening tag of a <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;></xref> element that contains attributes that implement the layout and character formatting of the specified style."
  remarks: "Use the EnterStyle method to apply styles, such as background color or border width, to a block of markup.       The EnterStyle and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style. Use the same value for `style` in the EnterStyle method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.       The EnterStyle overload of the EnterStyle method renders the opening tag of a `<span>` element. This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object. If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload."
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the EnterStyle method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The EnterStyle method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_43_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> that specifies the layout and formatting to begin applying to the block of markup."
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style."
  remarks: "Use the EnterStyle method to apply styles, such as background color or border width, to a block of markup.       The EnterStyle and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style. Use the same value for `style` in the EnterStyle method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.       The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the EnterStyle method renders the opening tag of the element specified by the `tag` parameter. The EnterStyle method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object. Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element."
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/92807ec1-50d1-4344-bc65-_1.vb)]"
  syntax:
    content: public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> that specifies the layout and formatting to begin applying to the block of markup."
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> that specifies the opening tag of the markup element that will contain the style object specified in `style`."
  overload: System.Web.UI.HtmlTextWriter.EnterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  id: EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the equal sign (<xref uid=&quot;langword_csharp_=&quot; name=&quot;=&quot; href=&quot;&quot;></xref>)."
  remarks: "You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the EqualsChar field when constructing the opening delimiter of an attribute value."
  example:
  - "The following code example shows how to render the `src` attribute and part of its value for an `<img>` element. The code uses the EqualsChar field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public const char EqualsChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  id: EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents an equal sign (=) and a double quotation mark (&quot;) together in a string (=&quot;)."
  remarks: "The EqualsDoubleQuoteString field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values."
  example:
  - "The following code example shows how to render a `border` attribute for a `<table>` element. The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the EqualsDoubleQuoteString and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.  \n  \n This code example renders the following markup:  \n  \n `border=\"1\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#6](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_5_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#6](~/add/codesnippet/csharp/f-system.web.ui.htmltext_5_1.cs)]"
  syntax:
    content: public const string EqualsDoubleQuoteString;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  id: ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the closing tag of a <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;></xref> element to end the specified layout and character formatting."
  remarks: "The ExitStyle overload of the ExitStyle method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.       The ExitStyle and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style. Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding ExitStyle method."
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The ExitStyle method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_32_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> that specifies the layout and formatting to close."
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  id: ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the closing tag of the specified markup element to end the specified layout and character formatting."
  remarks: "The ExitStyle overload of the ExitStyle method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.       The ExitStyle and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style. Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding ExitStyle method."
  example:
  - "The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.  \n  \n The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style=\"color:Navy;\">`. The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/add/codesnippet/visualbasic/5d790280-f115-4c9e-8ee8-_1.vb)]"
  syntax:
    content: public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: style
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> that specifies the layout and formatting to stop applying to the output text."
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> that specifies the closing tag of the markup element that contained the attributes that applied the specified style. This must match the key passed in the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle*> call."
  overload: System.Web.UI.HtmlTextWriter.ExitStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  id: FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Removes all the markup and style attributes on all properties of the page or Web server control."
  remarks: "Before attributes are rendered on a markup element, the FilterAttributes method is called. In turn, the FilterAttributes method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render."
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the FilterAttributes method. When called, the FilterAttributes override checks whether the text writer renders any `<label>` or `<a>` elements:  \n  \n-   If a `<label>` element is being rendered, the FilterAttributes method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.  \n  \n-   If an `<a>` element is being rendered, the FilterAttributes method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_16_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_16_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_16_1.cpp)]"
  syntax:
    content: protected virtual void FilterAttributes ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Flush
  id: Flush
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Clears all buffers for the current <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object and causes any buffered data to be written to the output stream."
  remarks: "The <xref:System.Web.UI.HtmlTextWriter> class implementation of the Flush method just calls the <xref:System.IO.TextWriter.Flush%2A> base method."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  id: GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtains the corresponding <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> enumeration value for the specified attribute."
  remarks: "If `attrName` is `null` or an empty string (&quot;&quot;), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned."
  example:
  - "The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag> field, which indicates that a `<font>` markup element will be rendered. If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the GetAttributeKey method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_9_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_9_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_9_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);
    parameters:
    - id: attrName
      type: System.String
      description: "A string that contains the attribute for which to obtain the <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref>."
    return:
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> enumeration value for the specified attribute; otherwise, an invalid <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> value if the attribute is not a member of the enumeration."
  overload: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  id: GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtains the name of the markup attribute associated with the specified <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> value."
  remarks: "The GetAttributeName method returns an empty string (&quot;&quot;), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value."
  example:
  - "The following code example shows how to use the GetAttributeName method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value to its string name.  \n  \n [!code-vb[HtmlTextWriter_Methods3#6](~/add/codesnippet/visualbasic/fd0863d4-1999-4326-849f-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#6](~/add/codesnippet/cpp/fd0863d4-1999-4326-849f-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#6](~/add/codesnippet/csharp/fd0863d4-1999-4326-849f-_1.cs)]"
  syntax:
    content: protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);
    parameters:
    - id: attrKey
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> to obtain the markup attribute name for."
    return:
      type: System.String
      description: "A string containing the name of the markup attribute."
  overload: System.Web.UI.HtmlTextWriter.GetAttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  id: GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtains the <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> enumeration value for the specified style."
  remarks: "The GetStyleKey method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value."
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle> attribute. If a <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the GetStyleKey method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `red`.  \n  \n [!code-cs[HtmlTextWriter_Methods#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_14_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_14_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_14_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);
    parameters:
    - id: styleName
      type: System.String
      description: "The style attribute for which to obtain the <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref>."
    return:
      type: System.Web.UI.HtmlTextWriterStyle
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> enumeration value corresponding to <code>styleName</code>."
  overload: System.Web.UI.HtmlTextWriter.GetStyleKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  id: GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtains the markup style attribute name associated with the specified <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> enumeration value."
  remarks: "If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the GetStyleName method returns an empty string (&quot;&quot;)."
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the GetStyleName method converts the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_29_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_29_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_29_1.cs)]"
  syntax:
    content: protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);
    parameters:
    - id: styleKey
      type: System.Web.UI.HtmlTextWriterStyle
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> to obtain the style attribute name for."
    return:
      type: System.String
      description: "The style attribute name associated with the <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> enumeration value specified in <code>styleKey</code>."
  overload: System.Web.UI.HtmlTextWriter.GetStyleName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  id: GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtains the <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> enumeration value associated with the specified markup element."
  remarks: "If `tagName` is `null`, an empty string (&quot;&quot;), or cannot be found in the table of markup tag names, the GetTagKey method returns the <xref:System.Web.UI.HtmlTextWriterTag> field."
  example:
  - "The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter. The string is passed to the GetTagKey method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.  \n  \n [!code-vb[HtmlTextWriter_Methods3#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_17_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#8](~/add/codesnippet/cpp/m-system.web.ui.htmltext_17_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_17_1.cs)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "The markup element for which to obtain the <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>."
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> enumeration value; otherwise, if <code>tagName</code> is not associated with a specific <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> value, <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.GetTagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  id: GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtains the markup element associated with the specified <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> enumeration value."
  remarks: "If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the GetTagName method returns an empty string (&quot;&quot;)."
  example:
  - "The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method. The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the GetTagName method to convert the <xref:System.Web.UI.HtmlTextWriterTag> value to a string.  \n  \n [!code-vb[HtmlTextWriter_Methods3#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_40_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_40_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_40_1.cs)]"
  syntax:
    content: protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> to obtain the markup element for."
    return:
      type: System.String
      description: "A string representing the markup element."
  overload: System.Web.UI.HtmlTextWriter.GetTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Indent
  id: Indent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the number of tab positions to indent the beginning of each line of markup."
  remarks: "Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the Indent property.       If the Indent property is set to a negative value, it is changed to 0 before being saved."
  example:
  - "The following code example demonstrates how to increment the value that is assigned to the Indent property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called. This increases the indentation for any markup that is rendered inside the `<span>` element.  \n  \n [!code-cs[MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_1_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_1_1.vb)]"
  syntax:
    content: public int Indent { get; set; }
    return:
      type: System.Int32
      description: "The number of tab positions to indent each line."
  overload: System.Web.UI.HtmlTextWriter.Indent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  id: InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the text writer that writes the inner content of the markup element."
  remarks: "Inner markup content is the text found between the opening and closing tags of a markup language element.       If the InnerWriter property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved."
  example:
  - "The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method. It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element. After it writes the opening tag of the element, it uses the InnerWriter property to write the string `\"<br> The time on the server:\"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[HtmlTextWriter_Properties#3](~/add/codesnippet/cpp/p-system.web.ui.htmltext_0_1.cpp)]\n [!code-cs[HtmlTextWriter_Properties#3](~/add/codesnippet/csharp/p-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[HtmlTextWriter_Properties#3](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_0_1.vb)]"
  syntax:
    content: public System.IO.TextWriter InnerWriter { get; set; }
    return:
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter> that writes the inner markup content."
  overload: System.Web.UI.HtmlTextWriter.InnerWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the specified markup attribute and its value are rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one."
  example:
  - "The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class. The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered. If so, the override calls the IsAttributeDefined method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute. If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and sets its value to `30pt`.  \n  \n [!code-cs[HtmlTextWriter_Methods#3](~/add/codesnippet/csharp/cbdca703-4aa0-4111-9334-_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#3](~/add/codesnippet/visualbasic/cbdca703-4aa0-4111-9334-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#3](~/add/codesnippet/cpp/cbdca703-4aa0-4111-9334-_1.cpp)]"
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> associated with the markup attribute."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the attribute is rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  id: IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the specified markup attribute and its value are rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "If the IsAttributeDefined method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter."
  syntax:
    content: protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> associated with the markup attribute."
    - id: value
      type: System.String
      description: "The value assigned to the attribute."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the attribute is rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the specified markup style attribute is rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the IsStyleAttributeDefined method."
  example:
  - "The following code example shows how to check whether a `<label>` element is being rendered. If so, the IsStyleAttributeDefined method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute has been defined on the element. If the <xref:System.Web.UI.HtmlTextWriterStyle> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle> attribute and sets its value to `red`.  \n  \n [!code-vb[HtmlTextWriter_Methods3#4](~/add/codesnippet/visualbasic/47188de5-abf6-4bc4-9c12-_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods3#4](~/add/codesnippet/cpp/47188de5-abf6-4bc4-9c12-_1.cpp)]\n [!code-cs[HtmlTextWriter_Methods3#4](~/add/codesnippet/csharp/47188de5-abf6-4bc4-9c12-_1.cs)]"
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> associated with the attribute."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the attribute will be rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  id: IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the specified markup style attribute and its value are rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method."
  remarks: "If the IsStyleAttributeDefined method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter."
  syntax:
    content: protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);
    parameters:
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> associated with the attribute."
    - id: value
      type: System.String
      description: "The value assigned to the style attribute."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the attribute and its value will be rendered during the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag*> method; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  id: IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Checks an attribute to ensure that it can be rendered in the opening tag of a <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;></xref> markup element."
  remarks: "The <xref:System.Web.UI.HtmlTextWriter> class implementation of the IsValidFormAttribute method returns `true` for all attributes. Override the IsValidFormAttribute to limit the attributes that can be rendered in the opening tag of a `<form>` element."
  syntax:
    content: public virtual bool IsValidFormAttribute (string attribute);
    parameters:
    - id: attribute
      type: System.String
      description: "A string that contains the name of the attribute to check."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.NewLine
  id: NewLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the line terminator string used by the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object."
  remarks: "The default line terminator string is a carriage return, followed by a line feed (\"\\r\\n\").  \n  \n The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called. If the NewLine property is set to `null`, the default new line character is used."
  example:
  - "The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method. When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements. If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label. If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue. The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the NewLine property to insert a line break in the markup tag and writes any other defined attributes.  \n  \n [!code-cs[HtmlTextWriter_Methods#4](~/add/codesnippet/csharp/p-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#4](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_2_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#4](~/add/codesnippet/cpp/p-system.web.ui.htmltext_2_1.cpp)]"
  syntax:
    content: public override string NewLine { get; set; }
    return:
      type: System.String
      description: "The line terminator string used by the current <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.NewLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the specified markup attribute and its value can be rendered to the current markup element."
  remarks: "The <xref:System.Web.UI.HtmlTextWriter> class implementation of the OnAttributeRender method always returns `true`. The OnAttributeRender overrides can determine whether an attribute will be rendered to the page."
  example:
  - "The following code example shows how to override the OnAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute> value is not `30pt`, the OnAttributeRender override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `30pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#5](~/add/codesnippet/csharp/d0e562f6-9a39-4246-a984-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#5](~/add/codesnippet/visualbasic/d0e562f6-9a39-4246-a984-_1.vb)]"
  syntax:
    content: protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "A string containing the name of the attribute to render."
    - id: value
      type: System.String
      description: "A string containing the value that is assigned to the attribute."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> associated with the markup attribute."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  id: OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the specified markup style attribute and its value can be rendered to the current markup element."
  remarks: "The <xref:System.Web.UI.HtmlTextWriter> class implementation of the OnStyleAttributeRender method always returns `true`. The OnStyleAttributeRender overrides can determine whether a style attribute will be rendered to the page."
  example:
  - "The following code example shows how to override the OnStyleAttributeRender method. If a <xref:System.Web.UI.HtmlTextWriterStyle> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle> value is not `purple`, the OnStyleAttributeRender override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle> attribute to `purple`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#6](~/add/codesnippet/csharp/d9590f65-fa57-44a8-99c7-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#6](~/add/codesnippet/visualbasic/d9590f65-fa57-44a8-99c7-_1.vb)]"
  syntax:
    content: protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "A string containing the name of the style attribute to render."
    - id: value
      type: System.String
      description: "A string containing the value that is assigned to the style attribute."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> associated with the style attribute."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  id: OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the specified markup element will be rendered to the requesting page."
  remarks: "The <xref:System.Web.UI.HtmlTextWriter> class implementation of the OnTagRender method always returns `true`. The OnTagRender overrides can determine whether an element will be rendered to the page."
  example:
  - "The following code example shows how to override the OnTagRender method. If a <xref:System.Web.UI.HtmlTextWriterTag> element is being rendered, the OnTagRender override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute is being rendered. If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute> attribute and set its value to `20pt`.  \n  \n [!code-cs[MarkupTextWriter_Methods3#4](~/add/codesnippet/csharp/e717512e-2198-4ad0-a7c8-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods3#4](~/add/codesnippet/visualbasic/e717512e-2198-4ad0-a7c8-_1.vb)]"
  syntax:
    content: protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "A string containing the name of the element to render."
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> associated with the element."
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.OnTagRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  id: OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes a series of tab strings that represent the indentation level for a line of markup characters."
  remarks: "The OutputTabs method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.  \n  \n The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor. If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\\t`) is used."
  example:
  - "The following code example shows how to override the OutputTabs method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class. The OutputTabs override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.  \n  \n [!code-cs[HtmlTextWriter_Methods#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_34_1.cs)]\n [!code-vb[HtmlTextWriter_Methods#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_34_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods#7](~/add/codesnippet/cpp/m-system.web.ui.htmltext_34_1.cpp)]"
  syntax:
    content: protected virtual void OutputTabs ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.OutputTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  id: PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Removes the most recently saved markup element from the list of rendered elements."
  remarks: "Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method. The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the PopEndTag method."
  syntax:
    content: protected string PopEndTag ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> containing the most recently rendered markup element."
  overload: System.Web.UI.HtmlTextWriter.PopEndTag*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The list of rendered elements is empty."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  id: PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Saves the specified markup element for later use when generating the end tag for a markup element."
  remarks: "Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the PushEndTag method. The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element."
  syntax:
    content: protected void PushEndTag (string endTag);
    parameters:
    - id: endTag
      type: System.String
      description: "The closing tag of the markup element."
  overload: System.Web.UI.HtmlTextWriter.PushEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  id: RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client."
  remarks: "The predefined attributes of the HTML markup language are registered by calls to the RegisterAttribute method when the first <xref:System.Web.UI.HtmlTextWriter> object is created. Dynamic attributes can be registered by using the RegisterAttribute method at other times.       The registration table used by the RegisterAttribute method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer."
  syntax:
    content: protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);
    parameters:
    - id: name
      type: System.String
      description: "A string containing the name of the markup attribute to register."
    - id: key
      type: System.Web.UI.HtmlTextWriterAttribute
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterAttribute&quot;></xref> that corresponds with the attribute name."
  overload: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  id: RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client."
  remarks: "The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the RegisterStyle method when the first <xref:System.Web.UI.HtmlTextWriter> object is created. Dynamic style attributes can be registered by using the RegisterStyle method at other times.       The registration table used by the RegisterStyle method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer."
  syntax:
    content: protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);
    parameters:
    - id: name
      type: System.String
      description: "The string passed from the source file specifying the style name."
    - id: key
      type: System.Web.UI.HtmlTextWriterStyle
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriterStyle&quot;></xref> that corresponds with the specified style."
  overload: System.Web.UI.HtmlTextWriter.RegisterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  id: RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client."
  remarks: "The predefined markup tags of the HTML language are registered by calls to the RegisterTag method when the first <xref:System.Web.UI.HtmlTextWriter> object is created. Dynamic markup tags can be registered by using the RegisterTag method at other times.       The registration table used by the RegisterTag method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer."
  syntax:
    content: protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);
    parameters:
    - id: name
      type: System.String
      description: "A string that contains the HTML tag."
    - id: key
      type: System.Web.UI.HtmlTextWriterTag
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> that specifies which element to render."
  overload: System.Web.UI.HtmlTextWriter.RegisterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  id: RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream."
  remarks: "The RenderAfterContent method can be useful if you want to insert child elements into the current markup element."
  example:
  - "The following code example shows how to override the RenderAfterContent method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered. If so, the RenderAfterContent override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element. If an element other than `<label>` is being rendered, the RenderAfterContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_6_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_6_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterContent ();
    parameters: []
    return:
      type: System.String
      description: "A string that contains the spacing or text to write after the content of the element."
  overload: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  id: RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any spacing or text that occurs after the closing tag for a markup element."
  remarks: "The RenderAfterTag method can be useful if you want to render additional closing tags after the element tag."
  example:
  - "The following code example shows how to override the RenderAfterTag method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element. If so, the RenderAfterTag override inserts the closing tag of a `<font>` element immediately after the `<label>` element. If it is not a `<label>` element, the RenderAfterTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_7_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_7_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_7_1.cpp)]"
  syntax:
    content: protected virtual string RenderAfterTag ();
    parameters: []
    return:
      type: System.String
      description: "The spacing or text to write after the closing tag of the element."
  overload: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  id: RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any text or spacing before the content and after the opening tag of a markup element."
  remarks: "The RenderBeforeContent method can be useful if you want to insert child elements into the current markup element before the inner markup."
  example:
  - "The following code example shows how to override the RenderBeforeContent method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeContent override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element. If it is not a `<label>` element, the RenderBeforeContent base method is used.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_0_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_0_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/m-system.web.ui.htmltext_0_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeContent ();
    parameters: []
    return:
      type: System.String
      description: "The text or spacing to write prior to the content of the element. If not overridden, RenderBeforeContent returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  id: RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any text or spacing that occurs before the opening tag of a markup element."
  remarks: "The RenderBeforeTag method can be useful if you want to render additional opening tags before the opening tag of the intended element."
  example:
  - "The following code example shows how to override the RenderBeforeTag method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element. If so, the RenderBeforeTag override inserts the opening tag of a `<font>` element immediately before the `<label>` element. If it is not rendering a `<label>` element, the RenderBeforeTag base method is used.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_20_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_20_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/m-system.web.ui.htmltext_20_1.cpp)]"
  syntax:
    content: protected virtual string RenderBeforeTag ();
    parameters: []
    return:
      type: System.String
      description: "The text or spacing to write before the markup element opening tag. If not overridden, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  id: RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the opening tag of the specified markup element to the output stream."
  remarks: "Use the RenderBeginTag override of the RenderBeginTag method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.       To generate a markup element by using the RenderBeginTag method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element. After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag."
  example:
  - "The following code example shows how to call the RenderBeginTag method in a custom control to render the opening tag of a non-standard `MyTag` element. The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_35_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_35_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_35_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "A string containing the name of the markup element for which to render the opening tag."
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the opening tag of the markup element associated with the specified <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> enumeration value to the output stream."
  remarks: "Use the RenderBeginTag overload of the RenderBeginTag method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.       To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element. After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag."
  example:
  - "The following code example shows how to use the RenderBeginTag method to output the opening tag of an `<img>` element. The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag. The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"Encoding \"Required\"\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_36_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_36_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_36_1.cpp)]"
  syntax:
    content: public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);
    parameters:
    - id: tagKey
      type: System.Web.UI.HtmlTextWriterTag
      description: "One of the <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> values that defines the opening tag of the markup element to render."
  overload: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  id: RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the end tag of a markup element to the output stream."
  remarks: "Call the RenderEndTag method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered."
  example:
  - "The following code example demonstrates how to call the RenderEndTag method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_1_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_1_1.cpp)]"
  syntax:
    content: public virtual void RenderEndTag ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  id: SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents a space and the self-closing slash mark (/) of a markup tag."
  remarks: "The SelfClosingChars field is used in markup elements that are self-closed. For example:       `<input type=&quot;submit&quot; value=&quot;go&quot;  />`"
  syntax:
    content: public const string SelfClosingChars;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  id: SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element."
  remarks: "The SelfClosingTagEnd field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements."
  example:
  - "The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the SelfClosingTagEnd field. The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the SelfClosingTagEnd field as the parameter argument to close the element.  \n  \n This code example renders the `FileName` property value, and then the following markup:  \n  \n `\" />`  \n  \n [!code-cs[MarkupTextWriter_Constants#11](~/add/codesnippet/csharp/f-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#11](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public const string SelfClosingTagEnd;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  id: SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the semicolon (;)."
  remarks: "Pass the SemicolonChar field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter."
  example:
  - "The following code example demonstrates how to manually render a series of styles on a markup element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes. The SemicolonChar field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.  \n  \n This code example renders the following markup:  \n  \n `style=\"font-size:12pt;border-style:ridge\"`  \n  \n [!code-cs[MarkupTextWriter_Constants#7](~/add/codesnippet/csharp/f-system.web.ui.htmltext_4_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#7](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_4_1.vb)]"
  syntax:
    content: public const char SemicolonChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  id: SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents an apostrophe (&quot;)."
  remarks: "Use the SingleQuoteChar field when it is necessary to render an apostrophe."
  syntax:
    content: public const char SingleQuoteChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  id: SlashChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the slash mark (/)."
  remarks: "Use the SlashChar field to render the slash marks when you write a URL. The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the SlashChar field when writing the closing tag of a markup element."
  example:
  - "The following code example demonstrates how to manually render the `src` attribute of an `<img>` element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the SlashChar field as its parameter to render slash marks in the path that is applied to the `src` attribute.  \n  \n This code example renders the following markup:  \n  \n `src=\"/images/`  \n  \n [!code-cs[MarkupTextWriter_Constants#10](~/add/codesnippet/csharp/f-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Constants#10](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public const char SlashChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  id: SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents a space ( ) character."
  remarks: "The SpaceChar field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes."
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create a <xref:System.Char> array that contains the SpaceChar field.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_1.vb)]  \n  \n The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/f-system.web.ui.htmltext_0_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_0_2.vb)]"
  syntax:
    content: public const char SpaceChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  id: StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the style equals (<xref uid=&quot;langword_csharp_:&quot; name=&quot;:&quot; href=&quot;&quot;></xref>) character used to set style attributes equal to values."
  remarks: "The StyleEqualsChar field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values."
  example:
  - "The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the StyleEqualsChar field as the parameter to render the character that sets the value of each style attribute.  \n  \n This code example renders the following markup:  \n  \n `FontWeight:\"bold\"`  \n  \n [!code-vb[MarkupTextWriter_Constants#5](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_1_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#5](~/add/codesnippet/csharp/f-system.web.ui.htmltext_1_1.cs)]"
  syntax:
    content: public const char StyleEqualsChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagKey
  id: TagKey
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> value for the specified markup element."
  remarks: "The TagKey property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class. You should read or set the TagKey property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value."
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. It uses the value of the TagKey property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element. If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.  \n  \n [!code-vb[HtmlTextWriter_Methods1#2](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[HtmlTextWriter_Methods1#2](~/add/codesnippet/csharp/p-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[HtmlTextWriter_Methods1#2](~/add/codesnippet/cpp/p-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "The markup element that is having its opening tag rendered."
  overload: System.Web.UI.HtmlTextWriter.TagKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property value cannot be set."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  id: TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the opening angle bracket (&lt;) of a markup tag."
  remarks: "The TagLeftChar field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags."
  example:
  - "The following code example renders the first character of the opening tag of a `<table>` element with the element name. The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagLeftChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `<table`  \n  \n [!code-vb[MarkupTextWriter_Constants#9](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_9_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#9](~/add/codesnippet/csharp/f-system.web.ui.htmltext_9_1.cs)]"
  syntax:
    content: public const char TagLeftChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagName
  id: TagName
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the tag name of the markup element being rendered."
  remarks: "The TagName property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class. You should read or set the TagName property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value."
  example:
  - "The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class. The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=fullName> method, and then passing the TagName property value and a string, `\"label\"`, as the parameter arguments. If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag. If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.  \n  \n [!code-cs[HtmlTextWriter_Methods4#1](~/add/codesnippet/csharp/p-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[HtmlTextWriter_Methods4#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmltext_5_1.vb)]\n [!code-cpp[HtmlTextWriter_Methods4#1](~/add/codesnippet/cpp/p-system.web.ui.htmltext_5_1.cpp)]"
  syntax:
    content: protected string TagName { get; set; }
    return:
      type: System.String
      description: "The tag name of the markup element being rendered."
  overload: System.Web.UI.HtmlTextWriter.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  id: TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Represents the closing angle bracket (&gt;) of a markup tag."
  remarks: "The TagRightChar field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags."
  example:
  - "The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method. To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the TagRightChar field as a parameter.  \n  \n This code example renders the following markup:  \n  \n `</table>`  \n  \n [!code-vb[MarkupTextWriter_Constants#4](~/add/codesnippet/visualbasic/f-system.web.ui.htmltext_6_1.vb)]\n [!code-cs[MarkupTextWriter_Constants#4](~/add/codesnippet/csharp/f-system.web.ui.htmltext_6_1.cs)]"
  syntax:
    content: public const char TagRightChar;
    return:
      type: System.Char
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  syntax:
    content: public override void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "The <xref:System.Boolean> to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "The following code example demonstrates using the Write method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.  \n  \n This code example renders the following markup:  \n  \n `<img alt=\"A custom image\">`  \n  \n `</img>`  \n  \n [!code-cs[MarkupTextWriter_Samples1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_21_1.cs)]\n [!code-vb[MarkupTextWriter_Samples1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_21_1.vb)]"
  syntax:
    content: public override void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "The Unicode character to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array of characters. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_1.vb)]  \n  \n The following code example demonstrates how to use the Write method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.  \n  \n [!code-cs[MarkupTextWriter_Methods2#12](~/add/codesnippet/csharp/m-system.web.ui.htmltext_22_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#12](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_22_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "The array of Unicode characters to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_10_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_10_1.vb)]"
  syntax:
    content: public override void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "The double-precision floating-point number to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  syntax:
    content: public override void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "The 32-byte signed integer to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  syntax:
    content: public override void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "The 64-byte signed integer to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of an object to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "The following code example shows how to use the Write method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property.  \n  \n This code example generates the following markup:  \n  \n `This is a rendered CultureInfo object.`  \n  \n `<bold>`  \n  \n The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:  \n  \n `</bold>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#8](~/add/codesnippet/csharp/m-system.web.ui.htmltext_19_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#8](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_19_1.vb)]"
  syntax:
    content: public override void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "The following code example demonstrates how to use the Write method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#10](~/add/codesnippet/csharp/m-system.web.ui.htmltext_28_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#10](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_28_1.vb)]"
  syntax:
    content: public override void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "The single-precision floating-point number to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  id: Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the specified string to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "The following code example demonstrates how to use the Write method to render a string between the opening and closing tags of a custom markup element.  \n  \n This code example generates the following markup:  \n  \n `<MyTag>`  \n  \n `Contents of MyTag`  \n  \n `</MyTag>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_25_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_25_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/add/codesnippet/cpp/m-system.web.ui.htmltext_25_1.cpp)]"
  syntax:
    content: public override void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "The string to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes a tab string and a formatted string to the output stream, using the same semantics as the &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; method, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "The following code example shows how to use the Write method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_18_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_18_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "A string that contains zero or more format items."
    - id: arg0
      type: System.Object
      description: "An object to format."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing. This method uses the same semantics as the &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; method."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "This section contains two code examples. The first one demonstrates how to render a formatted string and the contents of an array. The second one demonstrates how to declare the array.  \n  \n The following code example shows how to use the Write method to render a formatted string and the contents of an object array, named `curPriceTime`. The method call renders the second member of the array before it renders the first member.  \n  \n [!code-cs[MarkupTextWriter_Methods2#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_1.vb)]  \n  \n The following code example demonstrates declaring the `curPriceTime` object array.  \n  \n [!code-cs[MarkupTextWriter_Methods2#14](~/add/codesnippet/csharp/m-system.web.ui.htmltext_12_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#14](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_12_2.vb)]"
  syntax:
    content: public override void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "A string that contains zero or more format items."
    - id: arg
      type: System.Object[]
      description: "An object array to format."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#13](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#13](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_1.vb)]  \n  \n The following portion of the code example uses the `index` and `count` parameters of the Write method to render the first five characters of the array created in the preceding example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#11](~/add/codesnippet/csharp/m-system.web.ui.htmltext_5_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#11](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_5_2.vb)]"
  syntax:
    content: public override void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "The array of characters from which to write text to the output stream."
    - id: index
      type: System.Int32
      description: "The index location in the array where writing begins."
    - id: count
      type: System.Int32
      description: "The number of characters to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing. This method uses the same semantics as the &lt;xref:System.String.Format%2A?displayProperty=fullName&gt; method."
  remarks: "The Write method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method."
  example:
  - "The following code example shows how to use the Write method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.  \n  \n [!code-cs[MarkupTextWriter_Methods1#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_39_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_39_1.vb)]"
  syntax:
    content: public override void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "A string that contains zero or more format items."
    - id: arg0
      type: System.Object
      description: "An object to format."
    - id: arg1
      type: System.Object
      description: "An object to format."
  overload: System.Web.UI.HtmlTextWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  id: WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the specified markup attribute and value to the output stream."
  remarks: "Use the WriteAttribute method to write markup attributes and their values with no encoding. The WriteAttribute method writes the attribute value enclosed in double quotation marks (&quot;). If `value` is `null`, the WriteAttribute method writes only the attribute name."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the WriteAttribute overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_8_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_8_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_8_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The attribute to write to the output stream."
    - id: value
      type: System.String
      description: "The value assigned to the attribute."
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  id: WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded."
  remarks: "Use the WriteAttribute method to write markup attributes and their values with or without encoding. The WriteAttribute method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.       The WriteAttribute method writes the attribute value enclosed in double quotation marks (&quot;). If `value` is `null`, the WriteAttribute method writes only the attribute name."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the WriteAttribute overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/be7115c4-7933-43ab-93e3-_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/be7115c4-7933-43ab-93e3-_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/be7115c4-7933-43ab-93e3-_1.cpp)]"
  syntax:
    content: public virtual void WriteAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "The markup attribute to write to the output stream."
    - id: value
      type: System.String
      description: "The value assigned to the attribute."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to encode the attribute and its assigned value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  id: WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any tab spacing and the opening tag of the specified markup element to the output stream."
  remarks: "The WriteBeginTag method does not write the closing angle bracket (>) of the markup element&quot;s opening tag. This allows the writing of markup attributes to the opening tag of the element. Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the WriteBeginTag method. Use the WriteBeginTag method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.       The WriteBeginTag method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request."
  example:
  - "The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called. The code example uses the following process:  \n  \n-   Calls the WriteBeginTag method, which renders the opening characters of the element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No \"encoding\" required`, and then sets `fEncode` to `false`.  \n  \n-   Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.  \n  \n This code example generates the following markup:  \n  \n `<img alt=\"AtlValue\" myattribute=\"No \"encoding\" required\">`  \n  \n `</img>`  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_15_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_15_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_15_1.cpp)]"
  syntax:
    content: public virtual void WriteBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "The markup element of which to write the opening tag."
  overload: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  id: WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes a <xref uid=&quot;langword_csharp_&lt;br /&gt;&quot; name=&quot;&lt;br /&gt;&quot; href=&quot;&quot;></xref> markup element to the output stream."
  remarks: "Use the WriteBreak method to render line breaks in custom control or adapter markup. The WriteBreak method writes a space between the `br` and `/` for improved HTML compatibility."
  example:
  - "The following code example shows how to call the WriteBreak method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `<custID> & <invoice#>` markup.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_38_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_38_1.vb)]"
  syntax:
    content: public virtual void WriteBreak ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  id: WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Encodes the specified text for the requesting device, and then writes it to the output stream."
  remarks: "Use the WriteEncodedText method when a string contains angle brackets (\\< or >) or an ampersand (&).  \n  \n The WriteEncodedText method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to ` `."
  example:
  - "The following code example shows how to use the WriteEncodedText method to write the encoded markup `<custID> & \\<invoice#>` to the output stream. The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_44_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_44_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedText (string text);
    parameters:
    - id: text
      type: System.String
      description: "The text string to encode and write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  id: WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Encodes the specified URL, and then writes it to the output stream. The URL might include parameters."
  remarks: "The WriteEncodedUrl method encodes the string in the `url` parameter in accordance with the specification for URL encoding. The parameters that follow the question mark (?) delimiter are not encoded."
  example:
  - "The following code example shows how to use the WriteEncodedUrl method, which generates the following output:  \n  \n `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_30_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_30_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrl (string url);
    parameters:
    - id: url
      type: System.String
      description: "The URL string to encode and write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  id: WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Encodes the specified URL parameter for the requesting device, and then writes it to the output stream."
  remarks: "Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`."
  example:
  - "The following code example shows how to use the WriteEncodedUrlParameter method, which generates the following output:  \n  \n `ID%3dCity+State`  \n  \n [!code-cs[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_2_1.cs)]\n [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_2_1.vb)]"
  syntax:
    content: public virtual void WriteEncodedUrlParameter (string urlText);
    parameters:
    - id: urlText
      type: System.String
      description: "The URL parameter string to encode and write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  id: WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any tab spacing and the closing tag of the specified markup element."
  remarks: "Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the WriteEndTag method has no logic to make the element end tag match the corresponding opening tag."
  example:
  - "The following code example demonstrates rendering an `<img>` element. The code example uses the following process:  \n  \n-   Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.  \n  \n-   Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.  \n  \n-   Calls the WriteEndTag method to close the `<img>` element.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_4_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_4_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/add/codesnippet/cpp/m-system.web.ui.htmltext_4_1.cpp)]"
  syntax:
    content: public virtual void WriteEndTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "The element to write the closing tag for."
  overload: System.Web.UI.HtmlTextWriter.WriteEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  id: WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any tab spacing and the opening tag of the specified markup element to the output stream."
  remarks: "The WriteFullBeginTag method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket. Use WriteFullBeginTag for markup elements that have no attributes."
  syntax:
    content: public virtual void WriteFullBeginTag (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "The element to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  id: WriteLine
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes a line terminator string to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). For more information, see <xref:System.IO.TextWriter.WriteLine%2A>."
  example:
  - "The following code example demonstrates how to use the WriteLine method to insert a line after an `<img>` element is rendered.  \n  \n [!code-vb[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_27_1.vb)]\n [!code-cs[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_27_1.cs)]\n [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/add/codesnippet/cpp/m-system.web.ui.htmltext_27_1.cpp)]"
  syntax:
    content: public override void WriteLine ();
    parameters: []
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public override void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "The Boolean to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public override void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "The character to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  example:
  - "This section provides two code examples. The first one demonstrates how to create an array. The second one demonstrates how to use that array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello world`  \n  \n `</label>`  \n  \n The following code example shows how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_1.vb)]  \n  \n The following code example renders the `hello world` character array that was created in the preceding example by using the WriteLine method.  \n  \n [!code-cs[MarkupTextWriter_Methods2#5](~/add/codesnippet/csharp/m-system.web.ui.htmltext_37_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#5](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_37_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "The character array to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Double.MaxValue?displayProperty=fullName> field.  \n  \n This code example generates the following markup:  \n  \n `<label>`  \n  \n `1.79769313486232E+308`  \n  \n `</label>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#3](~/add/codesnippet/csharp/m-system.web.ui.htmltext_33_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#3](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_33_1.vb)]"
  syntax:
    content: public override void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "The double-precision floating-point number to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public override void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "The 32-byte signed integer to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public override void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "The 64-byte signed integer to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> property to a control.  \n  \n [!code-cs[MarkupTextWriter_Methods1#4](~/add/codesnippet/csharp/m-system.web.ui.htmltext_3_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#4](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_3_1.vb)]"
  syntax:
    content: public override void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  example:
  - "The following code example shows how to use the WriteLine method to render the value of the <xref:System.Single.Epsilon?displayProperty=fullName> field, which is the smallest possible value of the <xref:System.Single> structure.  \n  \n This code example generates the following markup:  \n  \n `<b>`  \n  \n `1.401298E-45`  \n  \n `</b>`  \n  \n [!code-cs[MarkupTextWriter_Methods1#9](~/add/codesnippet/csharp/m-system.web.ui.htmltext_11_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#9](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_11_1.vb)]"
  syntax:
    content: public override void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "The single-precision floating point number to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public override void WriteLine (string s);
    parameters:
    - id: s
      type: System.String
      description: "The string to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public override void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "The 4-byte unsigned integer to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The WriteLine method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method. The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  example:
  - "The following code example shows how to use the WriteLine method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#1](~/add/codesnippet/csharp/m-system.web.ui.htmltext_23_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_23_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "A string containing zero or more format items."
    - id: arg0
      type: System.Object
      description: "An object to format."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The WriteLine method uses the same semantics as the [Format(String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method. The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method."
  example:
  - "This section contains two code examples. The first one demonstrates how to render a string and an array to the output stream. The second one shows how to declare the array.  \n  \n The following code example demonstrates how to use the WriteLine method to render a formatted string and the contents of an object array to the output stream.  \n  \n [!code-cs[MarkupTextWriter_Methods2#2](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_1.vb)]  \n  \n The following code example shows how to declare the object array that was rendered in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#7](~/add/codesnippet/csharp/m-system.web.ui.htmltext_24_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#7](~/add/codesnippet/visualbasic/m-system.web.ui.htmltext_24_2.vb)]"
  syntax:
    content: public override void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "A string containing zero or more format items."
    - id: arg
      type: System.Object[]
      description: "An object array to format."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  example:
  - "This section contains two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  \n  \n These code examples generate the following markup:  \n  \n `<label>`  \n  \n `hello`  \n  \n `</label>`  \n  \n The following code example demonstrates how to create an array of characters that spell out `hello world`. Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.  \n  \n [!code-cs[MarkupTextWriter_Methods2#6](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods2#6](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_1.vb)]  \n  \n The following code example uses the `index` and `count` parameters of the WriteLine method to render the first five characters of the array created in the preceding code example.  \n  \n [!code-cs[MarkupTextWriter_Methods2#4](~/add/codesnippet/csharp/6b13e0ca-ed56-413e-b392-_2.cs)]\n [!code-vb[MarkupTextWriter_Methods2#4](~/add/codesnippet/visualbasic/6b13e0ca-ed56-413e-b392-_2.vb)]"
  syntax:
    content: public override void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "The character array from which to write text to the output stream."
    - id: index
      type: System.Int32
      description: "The location in the character array where writing begins."
    - id: count
      type: System.Int32
      description: "The number of characters in the array to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream."
  remarks: "The default line terminator string is a carriage return followed by a line feed (&quot;\\r &quot;). The WriteLine method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method. The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  example:
  - "The following code example demonstrates how to use the WriteLine method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.  \n  \n [!code-cs[MarkupTextWriter_Methods1#2](~/add/codesnippet/csharp/efeeb384-c97a-43fc-baf0-_1.cs)]\n [!code-vb[MarkupTextWriter_Methods1#2](~/add/codesnippet/visualbasic/efeeb384-c97a-43fc-baf0-_1.vb)]"
  syntax:
    content: public override void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "A string containing zero or more format items."
    - id: arg0
      type: System.Object
      description: "An object to format."
    - id: arg1
      type: System.Object
      description: "An object to format."
  overload: System.Web.UI.HtmlTextWriter.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  id: WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes a string, followed by a line terminator string, to the output stream. This method ignores any specified tab spacing."
  remarks: "Use the WriteLineNoTabs method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.  \n  \n The default line terminator string is a carriage return followed by a line feed (\"\\r\\n\"). The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter."
  syntax:
    content: public void WriteLineNoTabs (string s);
    parameters:
    - id: s
      type: System.String
      description: "The string to write to the output stream."
  overload: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  id: WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the specified style attribute to the output stream."
  remarks: "The WriteStyleAttribute method writes the style attribute in the following form:       `name` `=` `value` `;`"
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The style attribute to write to the output stream."
    - id: value
      type: System.String
      description: "The value assigned to the style attribute."
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  id: WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the specified style attribute and value to the output stream, and encodes the value, if specified."
  remarks: "The WriteStyleAttribute method writes the style attribute in the following form:       `name` `=` `value` `;`       The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter."
  syntax:
    content: public virtual void WriteStyleAttribute (string name, string value, bool fEncode);
    parameters:
    - id: name
      type: System.String
      description: "The style attribute to write to the output stream."
    - id: value
      type: System.String
      description: "The value assigned to the style attribute."
    - id: fEncode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to encode the style attribute and its assigned value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  id: WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  langs:
  - csharp
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the specified string, encoding it according to URL requirements."
  remarks: "The WriteUrlEncodedString method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%``xx`, if the ASCII code is less than 128; otherwise, `%u``xxxx`, where `x` is a hexadecimal digit.       The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the WriteUrlEncodedString method as a utility method."
  syntax:
    content: protected void WriteUrlEncodedString (string text, bool argument);
    parameters:
    - id: text
      type: System.String
      description: "The string to encode and write to the output stream."
    - id: argument
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to encode the string as a part of the parameter section of the URL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to encode the string as part of the path section of the URL."
  overload: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.TextWriter
  isExternal: false
  name: System.IO.TextWriter
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter(TextWriter,String)
  nameWithType: HtmlTextWriter.HtmlTextWriter(TextWriter,String)
  fullName: System.Web.UI.HtmlTextWriter.HtmlTextWriter(TextWriter,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String)
  nameWithType: HtmlTextWriter.AddAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriterAttribute
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterAttribute
  nameWithType: HtmlTextWriterAttribute
  fullName: System.Web.UI.HtmlTextWriterAttribute
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  nameWithType: HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.AddAttribute(HtmlTextWriterAttribute,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriterStyle
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterStyle
  nameWithType: HtmlTextWriterStyle
  fullName: System.Web.UI.HtmlTextWriterStyle
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.AddStyleAttribute(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.BeginRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender()
  nameWithType: HtmlTextWriter.BeginRender()
  fullName: System.Web.UI.HtmlTextWriter.BeginRender()
- uid: System.Web.UI.HtmlTextWriter.Close
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close()
  nameWithType: HtmlTextWriter.Close()
  fullName: System.Web.UI.HtmlTextWriter.Close()
- uid: System.Web.UI.HtmlTextWriter.DefaultTabString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DefaultTabString
  nameWithType: HtmlTextWriter.DefaultTabString
  fullName: System.Web.UI.HtmlTextWriter.DefaultTabString
- uid: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: DoubleQuoteChar
  nameWithType: HtmlTextWriter.DoubleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.DoubleQuoteChar
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(String,Boolean)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeAttributeValue(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl(String)
  nameWithType: HtmlTextWriter.EncodeUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.EncodeUrl(String)
- uid: System.Web.UI.HtmlTextWriter.Encoding
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
  fullName: System.Web.UI.HtmlTextWriter.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender()
  nameWithType: HtmlTextWriter.EndRender()
  fullName: System.Web.UI.HtmlTextWriter.EndRender()
- uid: System.Web.UI.HtmlTextWriter.EndTagLeftChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndTagLeftChars
  nameWithType: HtmlTextWriter.EndTagLeftChars
  fullName: System.Web.UI.HtmlTextWriter.EndTagLeftChars
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style)
  nameWithType: HtmlTextWriter.EnterStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style)
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.EnterStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.HtmlTextWriter.EqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsChar
  nameWithType: HtmlTextWriter.EqualsChar
  fullName: System.Web.UI.HtmlTextWriter.EqualsChar
- uid: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EqualsDoubleQuoteString
  nameWithType: HtmlTextWriter.EqualsDoubleQuoteString
  fullName: System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style)
  nameWithType: HtmlTextWriter.ExitStyle(Style)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style)
- uid: System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle(Style,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.ExitStyle(Style,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes()
  nameWithType: HtmlTextWriter.FilterAttributes()
  fullName: System.Web.UI.HtmlTextWriter.FilterAttributes()
- uid: System.Web.UI.HtmlTextWriter.Flush
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush()
  nameWithType: HtmlTextWriter.Flush()
  fullName: System.Web.UI.HtmlTextWriter.Flush()
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey(String)
  nameWithType: HtmlTextWriter.GetAttributeKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.GetAttributeName(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey(String)
  nameWithType: HtmlTextWriter.GetStyleKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.GetStyleName(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.GetTagKey(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey(String)
  nameWithType: HtmlTextWriter.GetTagKey(String)
  fullName: System.Web.UI.HtmlTextWriter.GetTagKey(String)
- uid: System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.GetTagName(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.GetTagName(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.Indent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
  fullName: System.Web.UI.HtmlTextWriter.Indent
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.HtmlTextWriter.InnerWriter
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
  fullName: System.Web.UI.HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined(HtmlTextWriterAttribute,String)
  nameWithType: HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
  fullName: System.Web.UI.HtmlTextWriter.IsAttributeDefined(HtmlTextWriterAttribute,String)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
  fullName: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(HtmlTextWriterStyle,String)
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute(String)
  nameWithType: HtmlTextWriter.IsValidFormAttribute(String)
  fullName: System.Web.UI.HtmlTextWriter.IsValidFormAttribute(String)
- uid: System.Web.UI.HtmlTextWriter.NewLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
  fullName: System.Web.UI.HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender(String,String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.OnAttributeRender(String,String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(String,String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.OnTagRender(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.OutputTabs
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs()
  nameWithType: HtmlTextWriter.OutputTabs()
  fullName: System.Web.UI.HtmlTextWriter.OutputTabs()
- uid: System.Web.UI.HtmlTextWriter.PopEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag()
  nameWithType: HtmlTextWriter.PopEndTag()
  fullName: System.Web.UI.HtmlTextWriter.PopEndTag()
- uid: System.Web.UI.HtmlTextWriter.PushEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag(String)
  nameWithType: HtmlTextWriter.PushEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.PushEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute(String,HtmlTextWriterAttribute)
  nameWithType: HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
  fullName: System.Web.UI.HtmlTextWriter.RegisterAttribute(String,HtmlTextWriterAttribute)
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle(String,HtmlTextWriterStyle)
  nameWithType: HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
  fullName: System.Web.UI.HtmlTextWriter.RegisterStyle(String,HtmlTextWriterStyle)
- uid: System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag(String,HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RegisterTag(String,HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent()
  nameWithType: HtmlTextWriter.RenderAfterContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterContent()
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag()
  nameWithType: HtmlTextWriter.RenderAfterTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderAfterTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent()
  nameWithType: HtmlTextWriter.RenderBeforeContent()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeContent()
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag()
  nameWithType: HtmlTextWriter.RenderBeforeTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderBeforeTag()
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(String)
  nameWithType: HtmlTextWriter.RenderBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag(HtmlTextWriterTag)
  nameWithType: HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
  fullName: System.Web.UI.HtmlTextWriter.RenderBeginTag(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag()
  nameWithType: HtmlTextWriter.RenderEndTag()
  fullName: System.Web.UI.HtmlTextWriter.RenderEndTag()
- uid: System.Web.UI.HtmlTextWriter.SelfClosingChars
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingChars
  nameWithType: HtmlTextWriter.SelfClosingChars
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingChars
- uid: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SelfClosingTagEnd
  nameWithType: HtmlTextWriter.SelfClosingTagEnd
  fullName: System.Web.UI.HtmlTextWriter.SelfClosingTagEnd
- uid: System.Web.UI.HtmlTextWriter.SemicolonChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SemicolonChar
  nameWithType: HtmlTextWriter.SemicolonChar
  fullName: System.Web.UI.HtmlTextWriter.SemicolonChar
- uid: System.Web.UI.HtmlTextWriter.SingleQuoteChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SingleQuoteChar
  nameWithType: HtmlTextWriter.SingleQuoteChar
  fullName: System.Web.UI.HtmlTextWriter.SingleQuoteChar
- uid: System.Web.UI.HtmlTextWriter.SlashChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SlashChar
  nameWithType: HtmlTextWriter.SlashChar
  fullName: System.Web.UI.HtmlTextWriter.SlashChar
- uid: System.Web.UI.HtmlTextWriter.SpaceChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: SpaceChar
  nameWithType: HtmlTextWriter.SpaceChar
  fullName: System.Web.UI.HtmlTextWriter.SpaceChar
- uid: System.Web.UI.HtmlTextWriter.StyleEqualsChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: StyleEqualsChar
  nameWithType: HtmlTextWriter.StyleEqualsChar
  fullName: System.Web.UI.HtmlTextWriter.StyleEqualsChar
- uid: System.Web.UI.HtmlTextWriter.TagKey
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
  fullName: System.Web.UI.HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagLeftChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagLeftChar
  nameWithType: HtmlTextWriter.TagLeftChar
  fullName: System.Web.UI.HtmlTextWriter.TagLeftChar
- uid: System.Web.UI.HtmlTextWriter.TagName
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
  fullName: System.Web.UI.HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.TagRightChar
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagRightChar
  nameWithType: HtmlTextWriter.TagRightChar
  fullName: System.Web.UI.HtmlTextWriter.TagRightChar
- uid: System.Web.UI.HtmlTextWriter.Write(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Boolean)
  nameWithType: HtmlTextWriter.Write(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.Write(Boolean)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char)
  nameWithType: HtmlTextWriter.Write(Char)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[])
  nameWithType: HtmlTextWriter.Write(Char[])
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Double)
  nameWithType: HtmlTextWriter.Write(Double)
  fullName: System.Web.UI.HtmlTextWriter.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int32)
  nameWithType: HtmlTextWriter.Write(Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Int64)
  nameWithType: HtmlTextWriter.Write(Int64)
  fullName: System.Web.UI.HtmlTextWriter.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.UI.HtmlTextWriter.Write(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Object)
  nameWithType: HtmlTextWriter.Write(Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.HtmlTextWriter.Write(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Single)
  nameWithType: HtmlTextWriter.Write(Single)
  fullName: System.Web.UI.HtmlTextWriter.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Web.UI.HtmlTextWriter.Write(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String)
  nameWithType: HtmlTextWriter.Write(String)
  fullName: System.Web.UI.HtmlTextWriter.Write(String)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object)
  nameWithType: HtmlTextWriter.Write(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object[])
  nameWithType: HtmlTextWriter.Write(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.Write(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.Write(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: HtmlTextWriter.Write(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.Write(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag(String)
  nameWithType: HtmlTextWriter.WriteBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteBreak
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak()
  nameWithType: HtmlTextWriter.WriteBreak()
  fullName: System.Web.UI.HtmlTextWriter.WriteBreak()
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText(String)
  nameWithType: HtmlTextWriter.WriteEncodedText(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedText(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrl(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrl(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter(String)
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(String)
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag(String)
  nameWithType: HtmlTextWriter.WriteEndTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteEndTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag(String)
  nameWithType: HtmlTextWriter.WriteFullBeginTag(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteFullBeginTag(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine()
  nameWithType: HtmlTextWriter.WriteLine()
  fullName: System.Web.UI.HtmlTextWriter.WriteLine()
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: HtmlTextWriter.WriteLine(Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char)
  nameWithType: HtmlTextWriter.WriteLine(Char)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: HtmlTextWriter.WriteLine(Char[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Double)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Double)
  nameWithType: HtmlTextWriter.WriteLine(Double)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Double)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: HtmlTextWriter.WriteLine(Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: HtmlTextWriter.WriteLine(Int64)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Int64)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Object)
  nameWithType: HtmlTextWriter.WriteLine(Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Single)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Single)
  nameWithType: HtmlTextWriter.WriteLine(Single)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Single)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String)
  nameWithType: HtmlTextWriter.WriteLine(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: HtmlTextWriter.WriteLine(UInt32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: HtmlTextWriter.WriteLine(String,Object[])
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object[])
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: HtmlTextWriter.WriteLine(Char[],Int32,Int32)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(Char[],Int32,Int32)
- uid: System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: HtmlTextWriter.WriteLine(String,Object,Object)
  fullName: System.Web.UI.HtmlTextWriter.WriteLine(String,Object,Object)
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs(String)
  nameWithType: HtmlTextWriter.WriteLineNoTabs(String)
  fullName: System.Web.UI.HtmlTextWriter.WriteLineNoTabs(String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String)
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute(String,String,Boolean)
  nameWithType: HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteStyleAttribute(String,String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString(String,Boolean)
  nameWithType: HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
  fullName: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(String,Boolean)
- uid: System.Web.UI.HtmlTextWriter.#ctor*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter.HtmlTextWriter
- uid: System.Web.UI.HtmlTextWriter.AddAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddAttribute
  nameWithType: HtmlTextWriter.AddAttribute
- uid: System.Web.UI.HtmlTextWriter.AddStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: AddStyleAttribute
  nameWithType: HtmlTextWriter.AddStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.BeginRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: BeginRender
  nameWithType: HtmlTextWriter.BeginRender
- uid: System.Web.UI.HtmlTextWriter.Close*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Close
  nameWithType: HtmlTextWriter.Close
- uid: System.Web.UI.HtmlTextWriter.EncodeAttributeValue*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeAttributeValue
  nameWithType: HtmlTextWriter.EncodeAttributeValue
- uid: System.Web.UI.HtmlTextWriter.EncodeUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EncodeUrl
  nameWithType: HtmlTextWriter.EncodeUrl
- uid: System.Web.UI.HtmlTextWriter.Encoding*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Encoding
  nameWithType: HtmlTextWriter.Encoding
- uid: System.Web.UI.HtmlTextWriter.EndRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EndRender
  nameWithType: HtmlTextWriter.EndRender
- uid: System.Web.UI.HtmlTextWriter.EnterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: EnterStyle
  nameWithType: HtmlTextWriter.EnterStyle
- uid: System.Web.UI.HtmlTextWriter.ExitStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: ExitStyle
  nameWithType: HtmlTextWriter.ExitStyle
- uid: System.Web.UI.HtmlTextWriter.FilterAttributes*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: FilterAttributes
  nameWithType: HtmlTextWriter.FilterAttributes
- uid: System.Web.UI.HtmlTextWriter.Flush*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Flush
  nameWithType: HtmlTextWriter.Flush
- uid: System.Web.UI.HtmlTextWriter.GetAttributeKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeKey
  nameWithType: HtmlTextWriter.GetAttributeKey
- uid: System.Web.UI.HtmlTextWriter.GetAttributeName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetAttributeName
  nameWithType: HtmlTextWriter.GetAttributeName
- uid: System.Web.UI.HtmlTextWriter.GetStyleKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleKey
  nameWithType: HtmlTextWriter.GetStyleKey
- uid: System.Web.UI.HtmlTextWriter.GetStyleName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetStyleName
  nameWithType: HtmlTextWriter.GetStyleName
- uid: System.Web.UI.HtmlTextWriter.GetTagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagKey
  nameWithType: HtmlTextWriter.GetTagKey
- uid: System.Web.UI.HtmlTextWriter.GetTagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: GetTagName
  nameWithType: HtmlTextWriter.GetTagName
- uid: System.Web.UI.HtmlTextWriter.Indent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Indent
  nameWithType: HtmlTextWriter.Indent
- uid: System.Web.UI.HtmlTextWriter.InnerWriter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: InnerWriter
  nameWithType: HtmlTextWriter.InnerWriter
- uid: System.Web.UI.HtmlTextWriter.IsAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsAttributeDefined
  nameWithType: HtmlTextWriter.IsAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsStyleAttributeDefined
  nameWithType: HtmlTextWriter.IsStyleAttributeDefined
- uid: System.Web.UI.HtmlTextWriter.IsValidFormAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: IsValidFormAttribute
  nameWithType: HtmlTextWriter.IsValidFormAttribute
- uid: System.Web.UI.HtmlTextWriter.NewLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: NewLine
  nameWithType: HtmlTextWriter.NewLine
- uid: System.Web.UI.HtmlTextWriter.OnAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnAttributeRender
  nameWithType: HtmlTextWriter.OnAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnStyleAttributeRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnStyleAttributeRender
  nameWithType: HtmlTextWriter.OnStyleAttributeRender
- uid: System.Web.UI.HtmlTextWriter.OnTagRender*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OnTagRender
  nameWithType: HtmlTextWriter.OnTagRender
- uid: System.Web.UI.HtmlTextWriter.OutputTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: OutputTabs
  nameWithType: HtmlTextWriter.OutputTabs
- uid: System.Web.UI.HtmlTextWriter.PopEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PopEndTag
  nameWithType: HtmlTextWriter.PopEndTag
- uid: System.Web.UI.HtmlTextWriter.PushEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: PushEndTag
  nameWithType: HtmlTextWriter.PushEndTag
- uid: System.Web.UI.HtmlTextWriter.RegisterAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterAttribute
  nameWithType: HtmlTextWriter.RegisterAttribute
- uid: System.Web.UI.HtmlTextWriter.RegisterStyle*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterStyle
  nameWithType: HtmlTextWriter.RegisterStyle
- uid: System.Web.UI.HtmlTextWriter.RegisterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RegisterTag
  nameWithType: HtmlTextWriter.RegisterTag
- uid: System.Web.UI.HtmlTextWriter.RenderAfterContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterContent
  nameWithType: HtmlTextWriter.RenderAfterContent
- uid: System.Web.UI.HtmlTextWriter.RenderAfterTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderAfterTag
  nameWithType: HtmlTextWriter.RenderAfterTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeContent*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeContent
  nameWithType: HtmlTextWriter.RenderBeforeContent
- uid: System.Web.UI.HtmlTextWriter.RenderBeforeTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeforeTag
  nameWithType: HtmlTextWriter.RenderBeforeTag
- uid: System.Web.UI.HtmlTextWriter.RenderBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderBeginTag
  nameWithType: HtmlTextWriter.RenderBeginTag
- uid: System.Web.UI.HtmlTextWriter.RenderEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: RenderEndTag
  nameWithType: HtmlTextWriter.RenderEndTag
- uid: System.Web.UI.HtmlTextWriter.TagKey*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagKey
  nameWithType: HtmlTextWriter.TagKey
- uid: System.Web.UI.HtmlTextWriter.TagName*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: TagName
  nameWithType: HtmlTextWriter.TagName
- uid: System.Web.UI.HtmlTextWriter.Write*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: Write
  nameWithType: HtmlTextWriter.Write
- uid: System.Web.UI.HtmlTextWriter.WriteAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteAttribute
  nameWithType: HtmlTextWriter.WriteAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBeginTag
  nameWithType: HtmlTextWriter.WriteBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteBreak*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteBreak
  nameWithType: HtmlTextWriter.WriteBreak
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedText*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedText
  nameWithType: HtmlTextWriter.WriteEncodedText
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrl*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrl
  nameWithType: HtmlTextWriter.WriteEncodedUrl
- uid: System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEncodedUrlParameter
  nameWithType: HtmlTextWriter.WriteEncodedUrlParameter
- uid: System.Web.UI.HtmlTextWriter.WriteEndTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteEndTag
  nameWithType: HtmlTextWriter.WriteEndTag
- uid: System.Web.UI.HtmlTextWriter.WriteFullBeginTag*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteFullBeginTag
  nameWithType: HtmlTextWriter.WriteFullBeginTag
- uid: System.Web.UI.HtmlTextWriter.WriteLine*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLine
  nameWithType: HtmlTextWriter.WriteLine
- uid: System.Web.UI.HtmlTextWriter.WriteLineNoTabs*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteLineNoTabs
  nameWithType: HtmlTextWriter.WriteLineNoTabs
- uid: System.Web.UI.HtmlTextWriter.WriteStyleAttribute*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteStyleAttribute
  nameWithType: HtmlTextWriter.WriteStyleAttribute
- uid: System.Web.UI.HtmlTextWriter.WriteUrlEncodedString*
  parent: System.Web.UI.HtmlTextWriter
  isExternal: false
  name: WriteUrlEncodedString
  nameWithType: HtmlTextWriter.WriteUrlEncodedString
