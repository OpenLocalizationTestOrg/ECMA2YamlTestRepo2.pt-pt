### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.View.ViewStateService
  id: ViewStateService
  children:
  - System.Activities.Presentation.View.ViewStateService.#ctor
  - System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  - System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  - System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  - System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  langs:
  - csharp
  name: ViewStateService
  nameWithType: ViewStateService
  fullName: System.Activities.Presentation.View.ViewStateService
  type: Class
  summary: "Permite a preservação e acesso de todos os valores de dados associados com os componentes de interação do utilizador de uma aplicação de fluxo de trabalho, num determinado ponto no tempo na execução de uma aplicação de fluxo de trabalho. Um ViewStateService armazena Estados de vista para itens de modelo."
  remarks: "Isto é útil para que o estado pode manter a ser obtido quando o controlo da aplicação passa e inclui novas colocações. ViewStateService é uma classe abstracta. Classes derivadas tem de armazenar a vista indica quando <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>denomina-se e obtê-las quando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>denomina-se.</xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> </xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public abstract class ViewStateService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: ViewStateService()
  nameWithType: ViewStateService.ViewStateService()
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Inicia uma nova instância do <xref href=&quot;System.Activities.Presentation.View.ViewStateService&quot;> </xref> classe."
  syntax:
    content: protected ViewStateService ();
    parameters: []
  overload: System.Activities.Presentation.View.ViewStateService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  id: RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: RemoveViewState(ModelItem,String)
  nameWithType: ViewStateService.RemoveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RemoveViewState(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Quando implementada numa classe derivada, remove o estado de visualização representado pelo nome da chave e associou com o item de modelo especificado."
  syntax:
    content: public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "A atividade de fluxo de trabalho <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> associadas ao estado de vista atual."
    - id: key
      type: System.String
      description: "O <xref:System.String>que identifica o item de estado de vista que está armazenado.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o estado de visualização foi removido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.View.ViewStateService.RemoveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  id: RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: RetrieveAllViewState(ModelItem)
  nameWithType: ViewStateService.RetrieveAllViewState(ModelItem)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Devolve um aspeto do Estado de vista que foram armazenado para especificado <code> modelItem </code>, correspondência especificado <code> key </code>."
  remarks: "Chamar <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>inicialmente armazenar informações de estado de vista para que possa ser obtido.</xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>"
  syntax:
    content: public abstract System.Collections.Generic.Dictionary<string,object> RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "O <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> aos quais se aplica o estado de visualização."
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Devolve &lt;xref:System.Collections.Generic.Dictionary%602&gt;."
  overload: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  id: RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: RetrieveViewState(ModelItem,String)
  nameWithType: ViewStateService.RetrieveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Obtém um aspeto de estado de visualização para especificado <code> modelItem </code>, correspondência especificado <code> key </code>."
  remarks: "Chamar <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>inicialmente armazenar informações de estado de vista para que possa ser obtido.</xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>"
  syntax:
    content: public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "A atividade de fluxo de trabalho <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> associadas ao estado de vista atual."
    - id: key
      type: System.String
      description: "O <xref:System.String>que identifica o aspeto do Estado de vista que está a ser obtido.</xref:System.String>"
    return:
      type: System.Object
      description: "O aspeto do Estado de visualização, como um <xref:System.Object>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Activities.Presentation.View.ViewStateService.RetrieveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  id: StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: StoreViewState(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewState(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewState(ModelItem,String,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Armazena um aspeto de estado de visualização para especificado <code> modelItem </code>, correspondência especificado <code> key </code>."
  remarks: "Pode obter o objeto armazenado chamando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>e passou os mesmos valores `modelItem` e `key`.</xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>"
  syntax:
    content: public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "O <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> aos quais se aplica o estado de visualização."
    - id: key
      type: System.String
      description: "O <xref:System.String>que identifica o aspeto do Estado de vista que está a ser armazenados.</xref:System.String>"
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>para ser armazenada.</xref:System.Object>"
  overload: System.Activities.Presentation.View.ViewStateService.StoreViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  id: StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: StoreViewStateWithUndo(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Quando implementada numa classe derivada, regista a definição atual do item representado pelo nome da chave para que fique disponível para uma operação de anulação. O item representado pelo nome da chave é armazenado, em seguida, no estado de visualização do item de modelo especificado."
  remarks: "Pode obter o objeto armazenado chamando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>e passou os mesmos valores `modelItem` e `key`.</xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>"
  syntax:
    content: public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "O <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> aos quais se aplica o estado de visualização."
    - id: key
      type: System.String
      description: "O <xref:System.String>que identifica o aspeto do Estado de vista que está a ser armazenados.</xref:System.String> O <xref:System.String>que identifica o item de estado de vista que está armazenado.</xref:System.String>"
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>para ser armazenada.</xref:System.Object>"
  overload: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  id: UndoableViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: UndoableViewStateChanged
  nameWithType: ViewStateService.UndoableViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Quando implementada numa classe derivada, declara um evento que indica que não foi efetuada uma alteração de estado de vista undoable do controlo."
  syntax:
    content: public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;
    return:
      type: System.Activities.Presentation.View.ViewStateChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  id: ViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  langs:
  - csharp
  name: ViewStateChanged
  nameWithType: ViewStateService.ViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.View
  summary: "Quando implementada numa classe derivada, declara um evento que indica que foi efetuada uma alteração para o estado de visualização do controlo."
  syntax:
    content: public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;
    return:
      type: System.Activities.Presentation.View.ViewStateChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.View.ViewStateService.#ctor
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: ViewStateService()
  nameWithType: ViewStateService.ViewStateService()
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateService()
- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RemoveViewState(ModelItem,String)
  nameWithType: ViewStateService.RemoveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RemoveViewState(ModelItem,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveAllViewState(ModelItem)
  nameWithType: ViewStateService.RetrieveAllViewState(ModelItem)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(ModelItem)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveViewState(ModelItem,String)
  nameWithType: ViewStateService.RetrieveViewState(ModelItem,String)
  fullName: System.Activities.Presentation.View.ViewStateService.RetrieveViewState(ModelItem,String)
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewState(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewState(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewState(ModelItem,String,Object)
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewStateWithUndo(ModelItem,String,Object)
  nameWithType: ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
  fullName: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(ModelItem,String,Object)
- uid: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: UndoableViewStateChanged
  nameWithType: ViewStateService.UndoableViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged
- uid: System.Activities.Presentation.View.ViewStateChangedEventHandler
  parent: System.Activities.Presentation.View
  isExternal: false
  name: ViewStateChangedEventHandler
  nameWithType: ViewStateChangedEventHandler
  fullName: System.Activities.Presentation.View.ViewStateChangedEventHandler
- uid: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: ViewStateChanged
  nameWithType: ViewStateService.ViewStateChanged
  fullName: System.Activities.Presentation.View.ViewStateService.ViewStateChanged
- uid: System.Activities.Presentation.View.ViewStateService.#ctor*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: ViewStateService
  nameWithType: ViewStateService.ViewStateService
- uid: System.Activities.Presentation.View.ViewStateService.RemoveViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RemoveViewState
  nameWithType: ViewStateService.RemoveViewState
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveAllViewState
  nameWithType: ViewStateService.RetrieveAllViewState
- uid: System.Activities.Presentation.View.ViewStateService.RetrieveViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: RetrieveViewState
  nameWithType: ViewStateService.RetrieveViewState
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewState*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewState
  nameWithType: ViewStateService.StoreViewState
- uid: System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo*
  parent: System.Activities.Presentation.View.ViewStateService
  isExternal: false
  name: StoreViewStateWithUndo
  nameWithType: ViewStateService.StoreViewStateWithUndo
