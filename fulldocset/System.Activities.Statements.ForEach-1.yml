### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.ForEach`1
  id: ForEach`1
  children:
  - System.Activities.Statements.ForEach`1.#ctor
  - System.Activities.Statements.ForEach`1.Body
  - System.Activities.Statements.ForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.ForEach`1.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.ForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.Statements.ForEach`1.Values
  langs:
  - csharp
  name: ForEach<T>
  nameWithType: ForEach<T>
  fullName: System.Activities.Statements.ForEach<T>
  type: Class
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Body")]

      public sealed class ForEach<T> : System.Activities.NativeActivity
    typeParameters:
    - id: T
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  platform:
  - net462
- uid: System.Activities.Statements.ForEach`1.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.ForEach`1
  langs:
  - csharp
  name: ForEach()
  nameWithType: ForEach<T>.ForEach()
  fullName: System.Activities.Statements.ForEach<T>.ForEach()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public ForEach ();
    parameters: []
  overload: System.Activities.Statements.ForEach`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ForEach`1.Body
  id: Body
  parent: System.Activities.Statements.ForEach`1
  langs:
  - csharp
  name: Body
  nameWithType: ForEach<T>.Body
  fullName: System.Activities.Statements.ForEach<T>.Body
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Activities.ActivityAction<T> Body { get; set; }
    return:
      type: System.Activities.ActivityAction`1
      description: "To be added."
  overload: System.Activities.Statements.ForEach`1.Body*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.ForEach`1
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: ForEach<T>.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.ForEach<T>.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "To be added."
  overload: System.Activities.Statements.ForEach`1.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ForEach`1.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.ForEach`1
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: ForEach<T>.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.ForEach<T>.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.ForEach`1.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.ForEach`1
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: ForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.ForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: "To be added."
    - id: originalActivity
      type: System.Activities.Activity
      description: "To be added."
  overload: System.Activities.Statements.ForEach`1.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.ForEach`1.Values
  id: Values
  parent: System.Activities.Statements.ForEach`1
  langs:
  - csharp
  name: Values
  nameWithType: ForEach<T>.Values
  fullName: System.Activities.Statements.ForEach<T>.Values
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Activities.InArgument<System.Collections.Generic.IEnumerable<T>> Values { get; set; }
    return:
      type: System.Activities.InArgument{System.Collections.Generic.IEnumerable{T}}
      description: "To be added."
  overload: System.Activities.Statements.ForEach`1.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.Activities.Statements.ForEach`1.#ctor
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: ForEach()
  nameWithType: ForEach<T>.ForEach()
  fullName: System.Activities.Statements.ForEach<T>.ForEach()
- uid: System.Activities.Statements.ForEach`1.Body
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: Body
  nameWithType: ForEach<T>.Body
  fullName: System.Activities.Statements.ForEach<T>.Body
- uid: System.Activities.ActivityAction`1
  parent: System.Activities
  isExternal: false
  name: ActivityAction<T>
  nameWithType: ActivityAction<T>
  fullName: System.Activities.ActivityAction<T>
- uid: System.Activities.Statements.ForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: ForEach<T>.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.ForEach<T>.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.ForEach`1.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: ForEach<T>.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.ForEach<T>.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.ForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: ForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.ForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Statements.ForEach`1.Values
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: Values
  nameWithType: ForEach<T>.Values
  fullName: System.Activities.Statements.ForEach<T>.Values
- uid: System.Activities.InArgument{System.Collections.Generic.IEnumerable{T}}
  parent: System.Activities
  isExternal: false
  name: InArgument<IEnumerable<T>>
  nameWithType: InArgument<IEnumerable<T>>
  fullName: System.Activities.InArgument<System.Collections.Generic.IEnumerable<T>>
  spec.csharp:
  - uid: System.Activities.InArgument`1
    name: InArgument
    nameWithType: InArgument
    fullName: InArgument<System.Collections.Generic.IEnumerable<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.ForEach`1.#ctor*
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: ForEach<T>
  nameWithType: ForEach<T>.ForEach<T>
- uid: System.Activities.Statements.ForEach`1.Body*
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: Body
  nameWithType: ForEach<T>.Body
- uid: System.Activities.Statements.ForEach`1.CacheMetadata*
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: CacheMetadata
  nameWithType: ForEach<T>.CacheMetadata
- uid: System.Activities.Statements.ForEach`1.Execute*
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: Execute
  nameWithType: ForEach<T>.Execute
- uid: System.Activities.Statements.ForEach`1.OnCreateDynamicUpdateMap*
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: ForEach<T>.OnCreateDynamicUpdateMap
- uid: System.Activities.Statements.ForEach`1.Values*
  parent: System.Activities.Statements.ForEach`1
  isExternal: false
  name: Values
  nameWithType: ForEach<T>.Values
