### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.Blend
  id: Blend
  children:
  - System.Drawing.Drawing2D.Blend.#ctor
  - System.Drawing.Drawing2D.Blend.#ctor(System.Int32)
  - System.Drawing.Drawing2D.Blend.Factors
  - System.Drawing.Drawing2D.Blend.Positions
  langs:
  - csharp
  name: Blend
  nameWithType: Blend
  fullName: System.Drawing.Drawing2D.Blend
  type: Class
  summary: "Defines a blend pattern for a <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref> object. This class cannot be inherited."
  remarks: "Gradients are commonly used to smoothly shade the interiors of shapes. A blend pattern is defined by two arrays (<xref:System.Drawing.Drawing2D.Blend.Factors%2A> and <xref:System.Drawing.Drawing2D.Blend.Positions%2A>) that each contain the same number of elements. Each element of the <xref:System.Drawing.Drawing2D.Blend.Positions%2A> array represents a proportion of the distance along the gradient line. Each element of the <xref:System.Drawing.Drawing2D.Blend.Factors%2A> array represents the proportion of the starting and ending colors in the gradient blend at the position along the gradient line represented by the corresponding element in the <xref:System.Drawing.Drawing2D.Blend.Positions%2A> array.       For example, if corresponding elements of the <xref:System.Drawing.Drawing2D.Blend.Positions%2A> and <xref:System.Drawing.Drawing2D.Blend.Factors%2A> arrays are 0.2 and 0.3, respectively, for a linear gradient from blue to red along a 100-pixel line, the color 20 pixels along that line (20 percent of the distance) consists of 30 percent blue and 70 percent red."
  example:
  - "The following example is intended to be used in a Windows Forms environment. It demonstrates how to use the Blend class in conjunction with the <xref:System.Drawing.Drawing2D.LinearGradientBrush> class to draw an ellipse to screen that has its colors blended. The ellipse is blue on the left, blends to red in the center, and blends back to blue on the right. This is accomplished through the settings in the `myFactors` and `myPositions` arrays used in the <xref:System.Drawing.Drawing2D.Blend.Factors%2A> and <xref:System.Drawing.Drawing2D.Blend.Positions%2A> properties. Note that the Blend property of the <xref:System.Drawing.Drawing2D.LinearGradientBrush> object named `lgBrush2` must be made equal to the Blend object `myBlend`.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/add/codesnippet/visualbasic/t-system.drawing.drawing_9_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMisc#3](~/add/codesnippet/csharp/t-system.drawing.drawing_9_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/add/codesnippet/cpp/t-system.drawing.drawing_9_1.cpp)]"
  syntax:
    content: public sealed class Blend
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Blend.#ctor
  id: '#ctor'
  parent: System.Drawing.Drawing2D.Blend
  langs:
  - csharp
  name: Blend()
  nameWithType: Blend.Blend()
  fullName: System.Drawing.Drawing2D.Blend.Blend()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;></xref> class."
  remarks: ''
  example:
  - "The following example is intended to be used in a Windows Forms environment. It demonstrates how to use the <xref:System.Drawing.Drawing2D.Blend> class in conjunction with the <xref:System.Drawing.Drawing2D.LinearGradientBrush> class to draw an ellipse to screen that has its colors blended. The ellipse is blue on the left, blends to red in the center, and blends back to blue on the right. This is accomplished through the settings in the `myFactors` and `myPositions` arrays used in the <xref:System.Drawing.Drawing2D.Blend.Factors%2A> and <xref:System.Drawing.Drawing2D.Blend.Positions%2A> properties. Note that the <xref:System.Drawing.Drawing2D.Blend> property of the <xref:System.Drawing.Drawing2D.LinearGradientBrush> object named `lgBrush2` must be made equal to the <xref:System.Drawing.Drawing2D.Blend> object `myBlend`.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_20_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMisc#3](~/add/codesnippet/csharp/m-system.drawing.drawing_20_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/add/codesnippet/cpp/m-system.drawing.drawing_20_1.cpp)]"
  syntax:
    content: public Blend ();
    parameters: []
  overload: System.Drawing.Drawing2D.Blend.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Blend.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Drawing.Drawing2D.Blend
  langs:
  - csharp
  name: Blend(Int32)
  nameWithType: Blend.Blend(Int32)
  fullName: System.Drawing.Drawing2D.Blend.Blend(Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;></xref> class with the specified number of factors and positions."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Blend.%23ctor%2A>.
  syntax:
    content: public Blend (int count);
    parameters:
    - id: count
      type: System.Int32
      description: "The number of elements in the <xref:System.Drawing.Drawing2D.Blend.Factors*> and <xref:System.Drawing.Drawing2D.Blend.Positions*> arrays."
  overload: System.Drawing.Drawing2D.Blend.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Blend.Factors
  id: Factors
  parent: System.Drawing.Drawing2D.Blend
  langs:
  - csharp
  name: Factors
  nameWithType: Blend.Factors
  fullName: System.Drawing.Drawing2D.Blend.Factors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Gets or sets an array of blend factors for the gradient."
  remarks: "Typically, the elements of this array are a value from 0.0f through 1.0f. These elements specify the percentages of the ending color and the starting color to use at the corresponding blend position. For example, a value of 0.2 indicates that at the specified position, the blended color is composed of 20 percent of the ending gradient color and 80 percent of the starting gradient color."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Drawing2D.Blend> class by setting the Factors and <xref:System.Drawing.Drawing2D.Blend.Positions%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DemonstrateBlend` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.Misc2#5](~/add/codesnippet/csharp/p-system.drawing.drawing_1_1.cs)]\n [!code-vb[System.Drawing.Misc2#5](~/add/codesnippet/visualbasic/p-system.drawing.drawing_1_1.vb)]\n [!code-cpp[System.Drawing.Misc2#5](~/add/codesnippet/cpp/p-system.drawing.drawing_1_1.cpp)]"
  syntax:
    content: public float[] Factors { get; set; }
    return:
      type: System.Single[]
      description: "An array of blend factors that specify the percentages of the starting color and the ending color to be used at the corresponding position."
  overload: System.Drawing.Drawing2D.Blend.Factors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Blend.Positions
  id: Positions
  parent: System.Drawing.Drawing2D.Blend
  langs:
  - csharp
  name: Positions
  nameWithType: Blend.Positions
  fullName: System.Drawing.Drawing2D.Blend.Positions
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Gets or sets an array of blend positions for the gradient."
  remarks: "The elements of this array specify percentages of distance along the gradient line. For example, an element value of 0.2f specifies that this point is 20 percent of the total distance from the starting point. The elements in this array are represented by float values between 0.0f and 1.0f. The first element of the array must be 0.0f, and the last element must be 1.0f."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Drawing2D.Blend> class by setting the <xref:System.Drawing.Drawing2D.Blend.Factors%2A> and Positions properties. This example is designed to be used with Windows Forms. Paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DemonstrateBlend` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.Misc2#5](~/add/codesnippet/csharp/p-system.drawing.drawing_2_1.cs)]\n [!code-vb[System.Drawing.Misc2#5](~/add/codesnippet/visualbasic/p-system.drawing.drawing_2_1.vb)]\n [!code-cpp[System.Drawing.Misc2#5](~/add/codesnippet/cpp/p-system.drawing.drawing_2_1.cpp)]"
  syntax:
    content: public float[] Positions { get; set; }
    return:
      type: System.Single[]
      description: "An array of blend positions that specify the percentages of distance along the gradient line."
  overload: System.Drawing.Drawing2D.Blend.Positions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Drawing2D.Blend.#ctor
  parent: System.Drawing.Drawing2D.Blend
  isExternal: false
  name: Blend()
  nameWithType: Blend.Blend()
  fullName: System.Drawing.Drawing2D.Blend.Blend()
- uid: System.Drawing.Drawing2D.Blend.#ctor(System.Int32)
  parent: System.Drawing.Drawing2D.Blend
  isExternal: false
  name: Blend(Int32)
  nameWithType: Blend.Blend(Int32)
  fullName: System.Drawing.Drawing2D.Blend.Blend(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Drawing2D.Blend.Factors
  parent: System.Drawing.Drawing2D.Blend
  isExternal: false
  name: Factors
  nameWithType: Blend.Factors
  fullName: System.Drawing.Drawing2D.Blend.Factors
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.Blend.Positions
  parent: System.Drawing.Drawing2D.Blend
  isExternal: false
  name: Positions
  nameWithType: Blend.Positions
  fullName: System.Drawing.Drawing2D.Blend.Positions
- uid: System.Drawing.Drawing2D.Blend.#ctor*
  parent: System.Drawing.Drawing2D.Blend
  isExternal: false
  name: Blend
  nameWithType: Blend.Blend
- uid: System.Drawing.Drawing2D.Blend.Factors*
  parent: System.Drawing.Drawing2D.Blend
  isExternal: false
  name: Factors
  nameWithType: Blend.Factors
- uid: System.Drawing.Drawing2D.Blend.Positions*
  parent: System.Drawing.Drawing2D.Blend
  isExternal: false
  name: Positions
  nameWithType: Blend.Positions
