### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityFunc`2
  id: ActivityFunc`2
  children:
  - System.Activities.ActivityFunc`2.#ctor
  - System.Activities.ActivityFunc`2.Argument
  - System.Activities.ActivityFunc`2.GetResultArgument
  - System.Activities.ActivityFunc`2.Result
  langs:
  - csharp
  name: ActivityFunc<T,TResult>
  nameWithType: ActivityFunc<T,TResult>
  fullName: System.Activities.ActivityFunc<T,TResult>
  type: Class
  syntax:
    content: 'public sealed class ActivityFunc<T,TResult> : System.Activities.ActivityDelegate'
    typeParameters:
    - id: T
      description: "To be added."
    - id: TResult
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.ActivityDelegate
  implements: []
  inheritedMembers:
  - System.Activities.ActivityDelegate.DisplayName
  - System.Activities.ActivityDelegate.Handler
  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  - System.Activities.ActivityDelegate.ToString
  platform:
  - net462
- uid: System.Activities.ActivityFunc`2.#ctor
  id: '#ctor'
  parent: System.Activities.ActivityFunc`2
  langs:
  - csharp
  name: ActivityFunc()
  nameWithType: ActivityFunc<T,TResult>.ActivityFunc()
  fullName: System.Activities.ActivityFunc<T,TResult>.ActivityFunc()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public ActivityFunc ();
    parameters: []
  overload: System.Activities.ActivityFunc`2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityFunc`2.Argument
  id: Argument
  parent: System.Activities.ActivityFunc`2
  langs:
  - csharp
  name: Argument
  nameWithType: ActivityFunc<T,TResult>.Argument
  fullName: System.Activities.ActivityFunc<T,TResult>.Argument
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.DelegateInArgument<T> Argument { get; set; }
    return:
      type: System.Activities.DelegateInArgument`1
      description: "To be added."
  overload: System.Activities.ActivityFunc`2.Argument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityFunc`2.GetResultArgument
  id: GetResultArgument
  parent: System.Activities.ActivityFunc`2
  langs:
  - csharp
  name: GetResultArgument()
  nameWithType: ActivityFunc<T,TResult>.GetResultArgument()
  fullName: System.Activities.ActivityFunc<T,TResult>.GetResultArgument()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override System.Activities.DelegateOutArgument GetResultArgument ();
    parameters: []
    return:
      type: System.Activities.DelegateOutArgument
      description: "To be added."
  overload: System.Activities.ActivityFunc`2.GetResultArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityFunc`2.Result
  id: Result
  parent: System.Activities.ActivityFunc`2
  langs:
  - csharp
  name: Result
  nameWithType: ActivityFunc<T,TResult>.Result
  fullName: System.Activities.ActivityFunc<T,TResult>.Result
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.DelegateOutArgument<TResult> Result { get; set; }
    return:
      type: System.Activities.DelegateOutArgument{TResult}
      description: "To be added."
  overload: System.Activities.ActivityFunc`2.Result*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.ActivityDelegate
  isExternal: false
  name: System.Activities.ActivityDelegate
- uid: System.Activities.ActivityFunc`2.#ctor
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: ActivityFunc()
  nameWithType: ActivityFunc<T,TResult>.ActivityFunc()
  fullName: System.Activities.ActivityFunc<T,TResult>.ActivityFunc()
- uid: System.Activities.ActivityFunc`2.Argument
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: Argument
  nameWithType: ActivityFunc<T,TResult>.Argument
  fullName: System.Activities.ActivityFunc<T,TResult>.Argument
- uid: System.Activities.DelegateInArgument`1
  parent: System.Activities
  isExternal: false
  name: DelegateInArgument<T>
  nameWithType: DelegateInArgument<T>
  fullName: System.Activities.DelegateInArgument<T>
- uid: System.Activities.ActivityFunc`2.GetResultArgument
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: GetResultArgument()
  nameWithType: ActivityFunc<T,TResult>.GetResultArgument()
  fullName: System.Activities.ActivityFunc<T,TResult>.GetResultArgument()
- uid: System.Activities.DelegateOutArgument
  parent: System.Activities
  isExternal: false
  name: DelegateOutArgument
  nameWithType: DelegateOutArgument
  fullName: System.Activities.DelegateOutArgument
- uid: System.Activities.ActivityFunc`2.Result
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: Result
  nameWithType: ActivityFunc<T,TResult>.Result
  fullName: System.Activities.ActivityFunc<T,TResult>.Result
- uid: System.Activities.DelegateOutArgument{TResult}
  parent: System.Activities
  isExternal: false
  name: DelegateOutArgument<TResult>
  nameWithType: DelegateOutArgument<TResult>
  fullName: System.Activities.DelegateOutArgument<TResult>
  spec.csharp:
  - uid: System.Activities.DelegateOutArgument`1
    name: DelegateOutArgument
    nameWithType: DelegateOutArgument
    fullName: DelegateOutArgument<TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityFunc`2.#ctor*
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: ActivityFunc<T,TResult>
  nameWithType: ActivityFunc<T,TResult>.ActivityFunc<T,TResult>
- uid: System.Activities.ActivityFunc`2.Argument*
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: Argument
  nameWithType: ActivityFunc<T,TResult>.Argument
- uid: System.Activities.ActivityFunc`2.GetResultArgument*
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: GetResultArgument
  nameWithType: ActivityFunc<T,TResult>.GetResultArgument
- uid: System.Activities.ActivityFunc`2.Result*
  parent: System.Activities.ActivityFunc`2
  isExternal: false
  name: Result
  nameWithType: ActivityFunc<T,TResult>.Result
