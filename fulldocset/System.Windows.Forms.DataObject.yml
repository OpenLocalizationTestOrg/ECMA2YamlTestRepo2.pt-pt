### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataObject
  id: DataObject
  children:
  - System.Windows.Forms.DataObject.#ctor
  - System.Windows.Forms.DataObject.#ctor(System.Object)
  - System.Windows.Forms.DataObject.#ctor(System.String,System.Object)
  - System.Windows.Forms.DataObject.ContainsAudio
  - System.Windows.Forms.DataObject.ContainsFileDropList
  - System.Windows.Forms.DataObject.ContainsImage
  - System.Windows.Forms.DataObject.ContainsText
  - System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)
  - System.Windows.Forms.DataObject.GetAudioStream
  - System.Windows.Forms.DataObject.GetData(System.String)
  - System.Windows.Forms.DataObject.GetData(System.Type)
  - System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.DataObject.GetDataPresent(System.String)
  - System.Windows.Forms.DataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.DataObject.GetFileDropList
  - System.Windows.Forms.DataObject.GetFormats
  - System.Windows.Forms.DataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.DataObject.GetImage
  - System.Windows.Forms.DataObject.GetText
  - System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)
  - System.Windows.Forms.DataObject.SetAudio(System.Byte[])
  - System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)
  - System.Windows.Forms.DataObject.SetData(System.Object)
  - System.Windows.Forms.DataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.DataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)
  - System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)
  - System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)
  - System.Windows.Forms.DataObject.SetText(System.String)
  - System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)
  - System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)
  langs:
  - csharp
  name: DataObject
  nameWithType: DataObject
  fullName: System.Windows.Forms.DataObject
  type: Class
  summary: "Implements a basic data transfer mechanism."
  remarks: "DataObject implements the <xref:System.Windows.Forms.IDataObject> interface, whose methods provide a format-independent mechanism for data transfer.       A DataObject is typically used with the <xref:System.Windows.Forms.Clipboard> and in drag-and-drop operations. The DataObject class provides the recommended implementation of the <xref:System.Windows.Forms.IDataObject> interface. It is suggested that you use the DataObject class rather than implementing <xref:System.Windows.Forms.IDataObject> yourself.       Multiple pieces of data in different formats can be stored in a DataObject. Data is retrieved from a DataObject by its associated format. Because the target application might not be known, you can increase the likelihood that the data will be in the appropriate format for an application by placing the data in a DataObject in multiple formats. See <xref:System.Windows.Forms.DataFormats> for the predefined formats. You can implement your own format by creating an instance of the <xref:System.Windows.Forms.DataFormats.Format> class.       To store data in a DataObject, pass the data to the constructor or call <xref:System.Windows.Forms.DataObject.SetData%2A>. You can add data in multiple formats to the same DataObject. If you want the data you add to be retrieved in its native format only, call <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> with the `autoConvert` parameter set to `false`.       Data can be retrieved from a DataObject in any format which is compatible with <xref:System.Windows.Forms.DataObject.GetData%2A>. For example, text can be converted to Unicode. To retrieve data in the format in which it was stored, call <xref:System.Windows.Forms.DataObject.GetData%2A> with the `autoConvert` parameter set to `false`.       To determine what formats the data is stored in, call <xref:System.Windows.Forms.DataObject.GetFormats%2A>. To determine if a format is available, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> with the desired format.       In [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the DataObject class provides additional methods that make it easier to work with data in common formats. To add data of a particular format to the DataObject, use the appropriate `Set`*Format* method, such as <xref:System.Windows.Forms.DataObject.SetText%2A>. To retrieve data of a particular format from the DataObject, first call the appropriate `Contains`*Format* method (such as <xref:System.Windows.Forms.DataObject.ContainsText%2A>) to determine whether the DataObject contains data in that format, then call the appropriate `Get`*Format* method (such as <xref:System.Windows.Forms.DataObject.GetText%2A>) to retrieve the data if the DataObject contains it.      > [!NOTE] >  Special considerations may be necessary when using the metafile format with the Clipboard. Due to a limitation in the current implementation of the DataObject class, the metafile format used by the .NET Framework may not be recognized by applications that use an older metafile format. In this case, you must interoperate with the Win32 Clipboard application programming interfaces (APIs). For more information, see article 323530, &quot;Metafiles on Clipboard Are Not Visible to All Applications,&quot; in the Microsoft Knowledge Base at http://support.microsoft.com.   >    >  An object must be serializable for it to be put on the Clipboard. See <xref:System.Runtime.Serialization> for more information on serialization. If your target application requires a very specific data format, the headers added to the data in the serialization process may prevent the application from recognizing your data. To preserve your data format, add your data as a <xref:System.Byte> array to a <xref:System.IO.MemoryStream> and pass the <xref:System.IO.MemoryStream> to the <xref:System.Windows.Forms.DataObject.SetData%2A> method."
  example:
  - "The following code example adds data in a DataObject. First, a new DataObject is created and a component is stored in it. Then, it checks to see if data in the appropriate type exists in the DataObject. The result is displayed in a text box. This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject Example#1](~/add/codesnippet/cpp/t-system.windows.forms.d_14_1.cpp)]\n [!code-vb[Classic DataObject Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_14_1.vb)]\n [!code-cs[Classic DataObject Example#1](~/add/codesnippet/csharp/t-system.windows.forms.d_14_1.cs)]  \n  \n The next example retrieves the data stored in a DataObject. First, a new DataObject is created with text data. Then, the data is retrieved, specifying its format as a string, and displayed in a text box. The data format is automatically converted from text to string. This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject Example#2](~/add/codesnippet/cpp/t-system.windows.forms.d_14_2.cpp)]\n [!code-vb[Classic DataObject Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.d_14_2.vb)]\n [!code-cs[Classic DataObject Example#2](~/add/codesnippet/csharp/t-system.windows.forms.d_14_2.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices.ComTypes.IDataObject
  - System.Windows.Forms.IDataObject
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Windows.Forms.DataObject.DataObject()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Windows.Forms.DataObject> and adds data to it. The example then retrieves and displays the data. This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject.DataObject2 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_81_1.cpp)]\n [!code-vb[Classic DataObject.DataObject2 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_81_1.vb)]\n [!code-cs[Classic DataObject.DataObject2 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_81_1.cs)]"
  syntax:
    content: public DataObject ();
    parameters: []
  overload: System.Windows.Forms.DataObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: DataObject(Object)
  nameWithType: DataObject.DataObject(Object)
  fullName: System.Windows.Forms.DataObject.DataObject(Object)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> class and adds the specified object to it."
  remarks: "You can add data in any format to the <xref:System.Windows.Forms.DataObject> when you use this constructor, or you can add data as an <xref:System.Windows.Forms.IDataObject> to provide multiple formats at once. If you are familiar with COM programming, you can also add a data object that implements the COM `IDataObject` interface. For more information, see `IDataObject` in the MSDN library at http://msdn.microsoft.com/library."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.DataObject> that contains a string. The data is retrieved using its data format. The results are displayed in a text box. This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject.DataObject3 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_89_1.cpp)]\n [!code-cs[Classic DataObject.DataObject3 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_89_1.cs)]\n [!code-vb[Classic DataObject.DataObject3 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_89_1.vb)]"
  syntax:
    content: public DataObject (object data);
    parameters:
    - id: data
      type: System.Object
      description: "The data to store."
  overload: System.Windows.Forms.DataObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: DataObject(String,Object)
  nameWithType: DataObject.DataObject(String,Object)
  fullName: System.Windows.Forms.DataObject.DataObject(String,Object)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> class and adds the specified object in the specified format."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Windows.Forms.DataObject> class using a string that is specified as the string type. The data is retrieved from the <xref:System.Windows.Forms.DataObject> by specifying its format as text. The results are displayed in a text box. This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject.DataObject4 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_96_1.cpp)]\n [!code-vb[Classic DataObject.DataObject4 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_96_1.vb)]\n [!code-cs[Classic DataObject.DataObject4 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_96_1.cs)]"
  syntax:
    content: public DataObject (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "The format of the specified data. See <xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref> for predefined formats."
    - id: data
      type: System.Object
      description: "The data to store."
  overload: System.Windows.Forms.DataObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.ContainsAudio
  id: ContainsAudio
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: ContainsAudio()
  nameWithType: DataObject.ContainsAudio()
  fullName: System.Windows.Forms.DataObject.ContainsAudio()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the data object contains data in the <xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref> format."
  remarks: "Use this method to determine whether the data object contains audio data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> method."
  syntax:
    content: public virtual bool ContainsAudio ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data object contains audio data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.ContainsAudio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.ContainsFileDropList
  id: ContainsFileDropList
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: ContainsFileDropList()
  nameWithType: DataObject.ContainsFileDropList()
  fullName: System.Windows.Forms.DataObject.ContainsFileDropList()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the data object contains data that is in the <xref href=&quot;System.Windows.Forms.DataFormats.FileDrop&quot;></xref> format or can be converted to that format."
  remarks: "A file drop list is a collection of strings containing path information for files.       Use this method to determine whether the data object contains a file drop list before retrieving it with the <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> method."
  syntax:
    content: public virtual bool ContainsFileDropList ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data object contains a file drop list; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.ContainsFileDropList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.ContainsImage
  id: ContainsImage
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: ContainsImage()
  nameWithType: DataObject.ContainsImage()
  fullName: System.Windows.Forms.DataObject.ContainsImage()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the data object contains data that is in the <xref href=&quot;System.Windows.Forms.DataFormats.Bitmap&quot;></xref> format or can be converted to that format."
  remarks: "Use this method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetImage%2A> method."
  syntax:
    content: public virtual bool ContainsImage ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data object contains image data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.ContainsImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.ContainsText
  id: ContainsText
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: ContainsText()
  nameWithType: DataObject.ContainsText()
  fullName: System.Windows.Forms.DataObject.ContainsText()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the data object contains data in the <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> format."
  remarks: "Use this method to determine whether the data object contains text data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method."
  syntax:
    content: public virtual bool ContainsText ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data object contains text data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.ContainsText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)
  id: ContainsText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: ContainsText(TextDataFormat)
  nameWithType: DataObject.ContainsText(TextDataFormat)
  fullName: System.Windows.Forms.DataObject.ContainsText(TextDataFormat)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the data object contains text data in the format indicated by the specified <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> value."
  remarks: "Use this method to determine whether the data object contains text data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method."
  syntax:
    content: public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "One of the <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> values."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data object contains text data in the specified format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.ContainsText*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>format</code> is not a valid <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetAudioStream
  id: GetAudioStream
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetAudioStream()
  nameWithType: DataObject.GetAudioStream()
  fullName: System.Windows.Forms.DataObject.GetAudioStream()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves an audio stream from the data object."
  remarks: "Use the <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> method to determine whether the data object contains audio data before retrieving it with this method.       Use the <xref:System.Windows.Forms.DataObject.SetAudio%2A> method to add audio data to the data object."
  syntax:
    content: public virtual System.IO.Stream GetAudioStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> containing audio data or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the data object does not contain any data in the <xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref> format."
  overload: System.Windows.Forms.DataObject.GetAudioStream*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: DataObject.GetData(String)
  fullName: System.Windows.Forms.DataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the data associated with the specified data format."
  remarks: "If this method cannot find data in the specified format, it attempts to convert the data to the format. If the data cannot be converted to the specified format, or if the data was stored with automatic conversion set to `false`, this method returns `null`.       To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.DataObject.GetData%2A>. Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for a list of valid formats for the data stored in this <xref:System.Windows.Forms.DataObject>.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.   >    >  When `format` is <xref:System.Windows.Forms.DataFormats.Html>, this method returns a UTF-8 encoded string in applications that target .NET 4.5 or higher, and an ANSI encoded string in applications that target .NET 4.0 or lower."
  example:
  - "The following code example retrieves the data stored in a <xref:System.Windows.Forms.DataObject>. First, a new <xref:System.Windows.Forms.DataObject> is created with text data. Then, the data is retrieved, specifying its format as a string, and displayed in a text box.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-cpp[classic dataobject example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_15_1.cpp)]\n [!code-vb[classic dataobject example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_15_1.vb)]\n [!code-cs[classic dataobject example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_15_1.cs)]"
  syntax:
    content: public virtual object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "The format of the data to retrieve. See <xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref> for predefined formats."
    return:
      type: System.Object
      description: "The data associated with the specified format, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: DataObject.GetData(Type)
  fullName: System.Windows.Forms.DataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the data associated with the specified class type format."
  remarks: "If this method cannot find data in the specified format, it attempts to convert the data to the format. If the data cannot be converted to the specified format, or if the data was stored with automatic conversion set to `false`, this method returns `null`.       To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.DataObject.GetData%2A>. Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for a list of valid formats for the data stored in this <xref:System.Windows.Forms.DataObject>.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text."
  example:
  - "The following code example retrieves the data stored in a <xref:System.Windows.Forms.DataObject>. First, a new <xref:System.Windows.Forms.DataObject> is created with a component. Then, the data is retrieved, specifying its type. The type of the retrieved data is displayed in a text box.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-cs[Classic DataObject.GetData2 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_50_1.cs)]\n [!code-cpp[Classic DataObject.GetData2 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_50_1.cpp)]\n [!code-vb[Classic DataObject.GetData2 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_50_1.vb)]"
  syntax:
    content: public virtual object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type> representing the format of the data to retrieve."
    return:
      type: System.Object
      description: "The data associated with the specified format, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: DataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.DataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the data associated with the specified data format, using an automated conversion parameter to determine whether to convert the data to the format."
  remarks: "If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format. If the data cannot be converted to the specified format, or if the data was stored with the automatic conversion set to `false`, this method returns `null`.       If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.       To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> before calling GetData. Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for a list of valid formats for the data stored in this <xref:System.Windows.Forms.DataObject>.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.   >    >  When `format` is <xref:System.Windows.Forms.DataFormats.Html>, this method returns a UTF-8 encoded string in applications that target .NET 4.5 or higher, and an ANSI encoded string in applications that target .NET 4.0 or lower."
  example:
  - "The following code example retrieves the data stored in a <xref:System.Windows.Forms.DataObject>, using the `autoConvert` parameter to specify whether to convert the data format.  \n  \n First, a new <xref:System.Windows.Forms.DataObject> is created with text data. Then the example tries to retrieve the data, specifying its format as a string and no format conversion, that is, the `autoConvert` parameter is `false`. This operation fails because there is no string data in the <xref:System.Windows.Forms.DataObject>.  \n  \n Next, the example tries to retrieve the data again, with the `autoConvert` parameter set to `true`. This operation succeeds and the results are displayed in a <xref:System.Windows.Forms.MessageBox>.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject.GetData Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_62_1.cpp)]\n [!code-vb[Classic DataObject.GetData Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_62_1.vb)]\n [!code-cs[Classic DataObject.GetData Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_62_1.cs)]"
  syntax:
    content: public virtual object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "The format of the data to retrieve. See <xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref> for predefined formats."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to the convert data to the specified format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "The data associated with the specified format, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: DataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.DataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> is associated with, or can be converted to, the specified format."
  remarks: "Call this method to determine whether a format exists before calling <xref:System.Windows.Forms.DataObject.GetData%2A>. Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for the formats that are available in this <xref:System.Windows.Forms.DataObject>.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.      > [!NOTE] >  If no data can be retrieved, no exception will be thrown. Instead, `false` will be returned."
  example:
  - "The following code example determines whether data currently stored in this <xref:System.Windows.Forms.DataObject> is associated with, or can be converted to, a specified format. A new <xref:System.Windows.Forms.DataObject> is initialized with a string and its associated format specified as text.  \n  \n Then the examples prints whether text data exists in the <xref:System.Windows.Forms.DataObject>. This code requires that `textBox1` has been created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "The format to check for. See <xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref> for predefined formats."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> is associated with, or can be converted to, the specified format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: DataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.DataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> is associated with, or can be converted to, the specified format."
  remarks: "Call this method to determine whether a format exists before calling <xref:System.Windows.Forms.DataObject.GetData%2A>. Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for the formats that are available in this <xref:System.Windows.Forms.DataObject>.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.      > [!NOTE] >  If no data can be retrieved, no exception will be thrown. Instead, `false` will be returned."
  example:
  - "The following code example determines whether data of the specified type exists in a <xref:System.Windows.Forms.DataObject>, or whether the data can be converted to the specified type. The result is displayed in a text box. The code requires that `textBox1` has been created.  \n  \n [!code-cs[Classic DataObject.GetDataPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_90_1.cs)]\n [!code-vb[Classic DataObject.GetDataPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_90_1.vb)]\n [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_90_1.cpp)]"
  syntax:
    content: public virtual bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type> representing the format to check for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> is associated with, or can be converted to, the specified format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: DataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.DataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> contains data in the specified format or, optionally, contains data that can be converted to the specified format."
  remarks: "Call this method to determine whether a format exists before calling <xref:System.Windows.Forms.DataObject.GetData%2A>. Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for the formats that are available in this <xref:System.Windows.Forms.DataObject>.       This method returns `true` when:      -   The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.      -   The `autoConvert` parameter is `false` and the data is in the appropriate format.       This method returns `false` when:      -   The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with automatic conversion set to `false`.      -   The `autoConvert` parameter is `false` and data does not exist in this <xref:System.Windows.Forms.DataObject> in the specified format.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.      > [!NOTE] >  If no data can be retrieved, no exception will be thrown. Instead, `false` will be returned."
  example:
  - "The following code example determines whether data currently stored in the <xref:System.Windows.Forms.DataObject> is associated with a specified format. First, a new <xref:System.Windows.Forms.DataObject> is initialized with a string, specifying its format as text.  \n  \n Then the <xref:System.Windows.Forms.DataObject> is queried for data associated with the text format, specifying the `autoConvert` parameter as `false`. The result of this query is printed in a text box.  \n  \n Then the <xref:System.Windows.Forms.DataObject> is queried for data associated with string format, specifying the `autoConvert` parameter as `true`. The results are printed in the text box. This code requires that `textBox1` has been created.  \n  \n [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_111_1.vb)]\n [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_111_1.cpp)]\n [!code-cs[Classic DataObject.GetDataPresent1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_111_1.cs)]"
  syntax:
    content: public virtual bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "The format to check for. See <xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref> for predefined formats."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to determine whether data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> can be converted to the specified format; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to check whether the data is in the specified format."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data is in, or can be converted to, the specified format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetFileDropList
  id: GetFileDropList
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetFileDropList()
  nameWithType: DataObject.GetFileDropList()
  fullName: System.Windows.Forms.DataObject.GetFileDropList()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves a collection of file names from the data object."
  remarks: "A file drop list is a collection of strings containing path information for files.       A file drop list is stored in a data object as a <xref:System.String> array. This method converts this array to a <xref:System.Collections.Specialized.StringCollection> and returns the collection.       Use the <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> method to determine whether the data object contains a file drop list before retrieving it with this method.       Use the <xref:System.Windows.Forms.DataObject.SetFileDropList%2A> method to add a file drop list to the data object."
  syntax:
    content: public virtual System.Collections.Specialized.StringCollection GetFileDropList ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref> containing file names or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the data object does not contain any data that is in the <xref href=&quot;System.Windows.Forms.DataFormats.FileDrop&quot;></xref> format or can be converted to that format."
  overload: System.Windows.Forms.DataObject.GetFileDropList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: DataObject.GetFormats()
  fullName: System.Windows.Forms.DataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a list of all formats that data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> is associated with or can be converted to."
  remarks: "Call this method to get the supported data formats before calling <xref:System.Windows.Forms.DataObject.GetData%2A>. See <xref:System.Windows.Forms.DataFormats> for the predefined formats.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text."
  example:
  - "The following code example queries a <xref:System.Windows.Forms.DataObject> for the formats associated with its data, and the formats that the data can be converted to. The resulting list is displayed in a text box. This code requires that `textBox1` has been created.  \n  \n [!code-cs[Classic DataObject.GetFormats1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_103_1.cs)]\n [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_103_1.cpp)]\n [!code-vb[Classic DataObject.GetFormats1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_103_1.vb)]"
  syntax:
    content: public virtual string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "An array of type <xref:System.String>, containing a list of all formats that are supported by the data stored in this object."
  overload: System.Windows.Forms.DataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: DataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.DataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a list of all formats that data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> is associated with or can be converted to, using an automatic conversion parameter to determine whether to retrieve only native data formats or all formats that the data can be converted to."
  remarks: "Call this method to get the supported data formats before calling <xref:System.Windows.Forms.DataObject.GetData%2A>. See <xref:System.Windows.Forms.DataFormats> for the predefined formats.      > [!NOTE] >  Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text."
  example:
  - "The following code example queries a <xref:System.Windows.Forms.DataObject> for the formats associated with its data. The first query specifies the `autoConvert` parameter as `false`, so only the native format of the data is returned. The second query specifies the `autoConvert` parameter as `true`, so the list of formats includes the formats that the data can be converted to.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject.GetFormats Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_31_1.cpp)]\n [!code-cs[Classic DataObject.GetFormats Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_31_1.cs)]\n [!code-vb[Classic DataObject.GetFormats Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_31_1.vb)]"
  syntax:
    content: public virtual string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to retrieve all formats that data stored in this <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> is associated with, or can be converted to; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to retrieve only native data formats."
    return:
      type: System.String[]
      description: "An array of type <xref:System.String>, containing a list of all formats that are supported by the data stored in this object."
  overload: System.Windows.Forms.DataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetImage
  id: GetImage
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetImage()
  nameWithType: DataObject.GetImage()
  fullName: System.Windows.Forms.DataObject.GetImage()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves an image from the data object."
  remarks: "Use the <xref:System.Windows.Forms.DataObject.ContainsImage%2A> method to determine whether the data object contains image data before retrieving it with this method.       Use the <xref:System.Windows.Forms.DataObject.SetImage%2A> method to add image data to the data object."
  syntax:
    content: public virtual System.Drawing.Image GetImage ();
    parameters: []
    return:
      type: System.Drawing.Image
      description: "An <xref href=&quot;System.Drawing.Image&quot;></xref> representing the image data in the data object or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the data object does not contain any data that is in the <xref href=&quot;System.Windows.Forms.DataFormats.Bitmap&quot;></xref> format or can be converted to that format."
  overload: System.Windows.Forms.DataObject.GetImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetText
  id: GetText
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetText()
  nameWithType: DataObject.GetText()
  fullName: System.Windows.Forms.DataObject.GetText()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves text data from the data object in the <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> format."
  remarks: "Use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains text data before retrieving it with this method.       Use the <xref:System.Windows.Forms.DataObject.SetText%2A> method to add text data to the data object."
  syntax:
    content: public virtual string GetText ();
    parameters: []
    return:
      type: System.String
      description: "The text data in the data object or &lt;xref:System.String?displayProperty=fullName&gt; if the data object does not contain data in the <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> format."
  overload: System.Windows.Forms.DataObject.GetText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)
  id: GetText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: GetText(TextDataFormat)
  nameWithType: DataObject.GetText(TextDataFormat)
  fullName: System.Windows.Forms.DataObject.GetText(TextDataFormat)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves text data from the data object in the format indicated by the specified <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> value."
  remarks: "Use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains text data before retrieving it with this method.       Use the <xref:System.Windows.Forms.DataObject.SetText%2A> method to add text data to the data object."
  syntax:
    content: public virtual string GetText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "One of the <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> values."
    return:
      type: System.String
      description: "The text data in the data object or &lt;xref:System.String?displayProperty=fullName&gt; if the data object does not contain data in the specified format."
  overload: System.Windows.Forms.DataObject.GetText*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>format</code> is not a valid <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetAudio(System.Byte[])
  id: SetAudio(System.Byte[])
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetAudio(Byte[])
  nameWithType: DataObject.SetAudio(Byte[])
  fullName: System.Windows.Forms.DataObject.SetAudio(Byte[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds a <xref:System.Byte> array to the data object in the <xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref> format after converting it to a <xref:System.IO.Stream>."
  remarks: "To retrieve audio data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> method to determine whether the data object contains audio data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> method."
  syntax:
    content: public virtual void SetAudio (byte[] audioBytes);
    parameters:
    - id: audioBytes
      type: System.Byte[]
      description: "A <xref:System.Byte> array containing the audio data."
  overload: System.Windows.Forms.DataObject.SetAudio*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>audioBytes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)
  id: SetAudio(System.IO.Stream)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetAudio(Stream)
  nameWithType: DataObject.SetAudio(Stream)
  fullName: System.Windows.Forms.DataObject.SetAudio(Stream)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds a <xref:System.IO.Stream> to the data object in the <xref href=&quot;System.Windows.Forms.DataFormats.WaveAudio&quot;></xref> format."
  remarks: "To retrieve audio data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> method to determine whether the data object contains audio data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> method."
  syntax:
    content: public virtual void SetAudio (System.IO.Stream audioStream);
    parameters:
    - id: audioStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> containing the audio data."
  overload: System.Windows.Forms.DataObject.SetAudio*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>audioStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: DataObject.SetData(Object)
  fullName: System.Windows.Forms.DataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds the specified object to the <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> using the object type as the data format."
  remarks: "If you do not know the format of the target application, you can store data in multiple formats using this method. Data stored using this method can be converted to a compatible format when it is retrieved.       The SetData overload stores the `data` value in a format that it determines by calling the <xref:System.Object.GetType%2A?displayProperty=fullName> method. If `data` implements the <xref:System.Runtime.Serialization.ISerializable> interface, this overload also stores the value in the <xref:System.Windows.DataFormats.Serializable> format."
  example:
  - "The following code example stores data in a <xref:System.Windows.Forms.DataObject>. First, a new <xref:System.Windows.Forms.DataObject> is created and a component is stored in it. Then, the data is retrieved by specifying the class. The result is displayed in a text box.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-cs[Classic DataObject.SetData3 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_94_1.cs)]\n [!code-cpp[Classic DataObject.SetData3 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_94_1.cpp)]\n [!code-vb[Classic DataObject.SetData3 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_94_1.vb)]"
  syntax:
    content: public virtual void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "The data to store."
  overload: System.Windows.Forms.DataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: DataObject.SetData(String,Object)
  fullName: System.Windows.Forms.DataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds the specified object to the <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> using the specified format."
  remarks: "If you do not know the format of the target application, you can store data in multiple formats using this method.       Data stored using this method can be converted to a compatible format when it is retrieved."
  example:
  - "The following code example stores data in a <xref:System.Windows.Forms.DataObject>, specifying its format as Unicode.  \n  \n Then the data is retrieved by specifying the text format, since the default is to convert the data when the final format is compatible. The result is displayed in a text box.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-cpp[Classic DataObject.SetData1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_97_1.cpp)]\n [!code-cs[Classic DataObject.SetData1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_97_1.cs)]\n [!code-vb[Classic DataObject.SetData1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_97_1.vb)]"
  syntax:
    content: public virtual void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "The format associated with the data. See <xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref> for predefined formats."
    - id: data
      type: System.Object
      description: "The data to store."
  overload: System.Windows.Forms.DataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: DataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.DataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds the specified object to the <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> using the specified type as the format."
  remarks: "If you do not know the format of the target application, you can store data in multiple formats using this method.       Data stored using this method can be converted to a compatible format when it is retrieved."
  example:
  - "The following code example stores data in a <xref:System.Windows.Forms.DataObject> using a <xref:System.Type> as the data format. The data is then retrieved by calling <xref:System.Windows.Forms.DataObject.GetData%2A> using the <xref:System.Type> to specify the data format. The result is displayed in a text box.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-vb[Classic DataObject.SetData2 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.d_0_1.vb)]\n [!code-cs[Classic DataObject.SetData2 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.d_0_1.cs)]\n [!code-cpp[Classic DataObject.SetData2 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.d_0_1.cpp)]"
  syntax:
    content: public virtual void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type> representing the format associated with the data."
    - id: data
      type: System.Object
      description: "The data to store."
  overload: System.Windows.Forms.DataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: DataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.DataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds the specified object to the <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> using the specified format and indicating whether the data can be converted to another format."
  remarks: "If you do not know the format of the target application, you can store data in multiple formats using this method."
  example:
  - "The following code example stores data in a <xref:System.Windows.Forms.DataObject> and specifies that the data can only be retrieved in its native format.  \n  \n First, a new <xref:System.Windows.Forms.DataObject> is created. Data in the Unicode format is stored in the <xref:System.Windows.Forms.DataObject>, with `autoConvert` set to `false`.  \n  \n Then, the <xref:System.Windows.Forms.DataObject> is queried for the list of available data formats. Only the Unicode format is returned, although Unicode data can be converted to text and other formats.  \n  \n This code requires that `textBox1` has been created.  \n  \n [!code-cs[Classic DataObject.SetData Example#1](~/add/codesnippet/csharp/35d23f60-f448-4594-8862-_1.cs)]\n [!code-cpp[Classic DataObject.SetData Example#1](~/add/codesnippet/cpp/35d23f60-f448-4594-8862-_1.cpp)]\n [!code-vb[Classic DataObject.SetData Example#1](~/add/codesnippet/visualbasic/35d23f60-f448-4594-8862-_1.vb)]"
  syntax:
    content: public virtual void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "The format associated with the data. See <xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref> for predefined formats."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to allow the data to be converted to another format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: data
      type: System.Object
      description: "The data to store."
  overload: System.Windows.Forms.DataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)
  id: SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetFileDropList(StringCollection)
  nameWithType: DataObject.SetFileDropList(StringCollection)
  fullName: System.Windows.Forms.DataObject.SetFileDropList(StringCollection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds a collection of file names to the data object in the <xref href=&quot;System.Windows.Forms.DataFormats.FileDrop&quot;></xref> format."
  remarks: "A file drop list is a collection of strings containing path information for files.       A file drop list is stored in a data object as a <xref:System.String> array. This method converts `filePaths` to a <xref:System.String> array before adding it to the data object.       To retrieve a file drop list from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> method to determine whether the data object contains data in that format before retrieving it with the <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> method."
  syntax:
    content: public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref> containing the file names."
  overload: System.Windows.Forms.DataObject.SetFileDropList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)
  id: SetImage(System.Drawing.Image)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetImage(Image)
  nameWithType: DataObject.SetImage(Image)
  fullName: System.Windows.Forms.DataObject.SetImage(Image)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds an <xref href=&quot;System.Drawing.Image&quot;></xref> to the data object in the <xref href=&quot;System.Windows.Forms.DataFormats.Bitmap&quot;></xref> format."
  remarks: "To retrieve image data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsImage%2A> method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetImage%2A> method."
  syntax:
    content: public virtual void SetImage (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "The <xref href=&quot;System.Drawing.Image&quot;></xref> to add to the data object."
  overload: System.Windows.Forms.DataObject.SetImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetText(System.String)
  id: SetText(System.String)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetText(String)
  nameWithType: DataObject.SetText(String)
  fullName: System.Windows.Forms.DataObject.SetText(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds text data to the data object in the <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> format."
  remarks: "To retrieve text data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method."
  syntax:
    content: public virtual void SetText (string textData);
    parameters:
    - id: textData
      type: System.String
      description: "The text to add to the data object."
  overload: System.Windows.Forms.DataObject.SetText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>textData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <xref:System.String>."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)
  id: SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: SetText(String,TextDataFormat)
  nameWithType: DataObject.SetText(String,TextDataFormat)
  fullName: System.Windows.Forms.DataObject.SetText(String,TextDataFormat)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds text data to the data object in the format indicated by the specified <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> value."
  remarks: "To retrieve text data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method."
  syntax:
    content: public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: textData
      type: System.String
      description: "The text to add to the data object."
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "One of the <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> values."
  overload: System.Windows.Forms.DataObject.SetText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>textData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <xref:System.String.Empty>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>format</code> is not a valid <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(FORMATETC,ADVF,IAdviseSink,Int32)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(FORMATETC,ADVF,IAdviseSink,Int32)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(FORMATETC,ADVF,IAdviseSink,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a connection between a data object and an advisory sink. This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object&quot;s data."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);
    parameters:
    - id: pFormatetc
      type: System.Runtime.InteropServices.ComTypes.FORMATETC
      description: "A <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications."
    - id: advf
      type: System.Runtime.InteropServices.ComTypes.ADVF
      description: "One of the <xref:System.Runtime.InteropServices.ComTypes.ADVF> values that specifies a group of flags for controlling the advisory connection."
    - id: pAdvSink
      type: System.Runtime.InteropServices.ComTypes.IAdviseSink
      description: "A pointer to the <xref:System.Runtime.InteropServices.ComTypes.IAdviseSink> interface on the advisory sink that will receive the change notification."
    - id: pdwConnection
      type: System.Int32
      description: "When this method returns, contains a pointer to a DWORD token that identifies this connection. You can use this token later to delete the advisory connection by passing it to <xref:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise*>. If this value is zero, the connection was not established. This parameter is passed uninitialized."
    return:
      type: System.Int32
      description: "This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:       <table><thead><tr><th> Value       </th><th> Description       </th></tr></thead><tbody><tr><td> S_OK       </td><td> The advisory connection was created.       </td></tr><tr><td> E_NOTIMPL       </td><td> This method is not implemented on the data object.       </td></tr><tr><td> DV_E_LINDEX       </td><td> There is an invalid value for <xref:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex>; currently, only -1 is supported.       </td></tr><tr><td> DV_E_FORMATETC       </td><td> There is an invalid value for the <code>pFormatetc</code> parameter.       </td></tr><tr><td> OLE_E_ADVISENOTSUPPORTED       </td><td> The data object does not support change notification.       </td></tr></tbody></table>"
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(Int32)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(Int32)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Destroys a notification connection that had been previously established."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: void IDataObject.DUnadvise (int dwConnection);
    parameters:
    - id: dwConnection
      type: System.Int32
      description: "A DWORD token that specifies the connection to remove. Use the value returned by <xref:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise*> when the connection was originally established."
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(IEnumSTATDATA)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(IEnumSTATDATA)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(IEnumSTATDATA)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates an object that can be used to enumerate the current advisory connections."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);
    parameters:
    - id: enumAdvise
      type: System.Runtime.InteropServices.ComTypes.IEnumSTATDATA
      description: "When this method returns, contains an <xref href=&quot;System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&quot;></xref> that receives the interface pointer to the new enumerator object. If the implementation sets `enumAdvise` to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, there are no connections to advisory sinks at this time. This parameter is passed uninitialized."
    return:
      type: System.Int32
      description: "This method supports the standard return value E_OUTOFMEMORY, as well as the following:       <table><thead><tr><th> Value       </th><th> Description       </th></tr></thead><tbody><tr><td> S_OK       </td><td> The enumerator object is successfully instantiated or there are no connections.       </td></tr><tr><td> OLE_E_ADVISENOTSUPPORTED       </td><td> This object does not support advisory notifications.       </td></tr></tbody></table>"
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(DATADIR)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(DATADIR)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(DATADIR)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates an object for enumerating the <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structures for a data object. These structures are used in calls to <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*> or <xref:System.Runtime.InteropServices.ComTypes.IDataObject.SetData*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);
    parameters:
    - id: dwDirection
      type: System.Runtime.InteropServices.ComTypes.DATADIR
      description: "One of the <xref:System.Runtime.InteropServices.ComTypes.DATADIR> values that specifies the direction of the data."
    return:
      type: System.Runtime.InteropServices.ComTypes.IEnumFORMATETC
      description: "This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:       <table><thead><tr><th> Value       </th><th> Description       </th></tr></thead><tbody><tr><td> S_OK       </td><td> The enumerator object was successfully created.       </td></tr><tr><td> E_NOTIMPL       </td><td> The direction specified by the <code>direction</code> parameter is not supported.       </td></tr><tr><td> OLE_S_USEREG       </td><td> Requests that OLE enumerate the formats from the registry.       </td></tr></tbody></table>"
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(FORMATETC,FORMATETC)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(FORMATETC,FORMATETC)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(FORMATETC,FORMATETC)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides a standard <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure that is logically equivalent to a more complex structure. Use this method to determine whether two different <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structures would return the same data, removing the need for duplicate rendering."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);
    parameters:
    - id: pformatetcIn
      type: System.Runtime.InteropServices.ComTypes.FORMATETC
      description: "A pointer to a <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*>. The <xref:System.Runtime.InteropServices.ComTypes.TYMED> member is not significant in this case and should be ignored."
    - id: pformatetcOut
      type: System.Runtime.InteropServices.ComTypes.FORMATETC
      description: "When this method returns, contains a pointer to a <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure that contains the most general information possible for a specific rendering, making it canonically equivalent to `formatetIn`. The caller must allocate this structure and the <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc*> method must fill in the data. To retrieve data in a subsequent call such as <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*>, the caller uses the supplied value of `formatOut`, unless the value supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. This value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the method returns <xref uid=&quot;langword_csharp_DATA_S_SAMEFORMATETC&quot; name=&quot;DATA_S_SAMEFORMATETC&quot; href=&quot;&quot;></xref>. The <xref:System.Runtime.InteropServices.ComTypes.TYMED> member is not significant in this case and should be ignored. This parameter is passed uninitialized."
    return:
      type: System.Int32
      description: "This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:       <table><thead><tr><th> Value       </th><th> Description       </th></tr></thead><tbody><tr><td> S_OK       </td><td> The returned <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure is different from the one that was passed.       </td></tr><tr><td> DATA_S_SAMEFORMATETC       </td><td> The <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structures are the same and <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> is returned in the <code>formatOut</code> parameter.       </td></tr><tr><td> DV_E_LINDEX       </td><td> There is an invalid value for <xref:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex>; currently, only -1 is supported.       </td></tr><tr><td> DV_E_FORMATETC       </td><td> There is an invalid value for the <code>pFormatetc</code> parameter.       </td></tr><tr><td> OLE_E_NOTRUNNING       </td><td> The application is not running.       </td></tr></tbody></table>"
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetData(FORMATETC,STGMEDIUM)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetData(FORMATETC,STGMEDIUM)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetData(FORMATETC,STGMEDIUM)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtains data from a source data object. The <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*> method, which is called by a data consumer, renders the data described in the specified <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure and transfers it through the specified <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> structure. The caller then assumes responsibility for releasing the <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> structure."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);
    parameters:
    - id: formatetc
      type: System.Runtime.InteropServices.ComTypes.FORMATETC
      description: "A pointer to a <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure, passed by reference, that defines the format, medium, and target device to use when passing the data. It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified."
    - id: medium
      type: System.Runtime.InteropServices.ComTypes.STGMEDIUM
      description: "When this method returns, contains a pointer to the <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> structure that indicates the storage medium containing the returned data through its <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> member, and the responsibility for releasing the medium through the value of its <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> member. If <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the receiver of the medium is responsible for releasing it; otherwise, <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> points to the <xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;></xref> interface on the appropriate object so its <xref uid=&quot;langword_csharp_Release&quot; name=&quot;Release&quot; href=&quot;&quot;></xref> method can be called. The medium must be allocated and filled in by <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*>. This parameter is passed uninitialized."
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "There is not enough memory to perform this operation."
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(FORMATETC,STGMEDIUM)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(FORMATETC,STGMEDIUM)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(FORMATETC,STGMEDIUM)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtains data from a source data object. This method, which is called by a data consumer, differs from the <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*> method in that the caller must allocate and free the specified storage medium."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);
    parameters:
    - id: formatetc
      type: System.Runtime.InteropServices.ComTypes.FORMATETC
      description: 'A pointer to a <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure, passed by reference, that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in <xref:System.Runtime.InteropServices.ComTypes.TYMED>, and only the following <xref:System.Runtime.InteropServices.ComTypes.TYMED> values are valid: <xref:System.Runtime.InteropServices.ComTypes.TYMED>, <xref:System.Runtime.InteropServices.ComTypes.TYMED>, <xref:System.Runtime.InteropServices.ComTypes.TYMED>, or <xref:System.Runtime.InteropServices.ComTypes.TYMED>.'
    - id: medium
      type: System.Runtime.InteropServices.ComTypes.STGMEDIUM
      description: "A <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM>, passed by reference, that defines the storage medium containing the data being transferred. The medium must be allocated by the caller and filled in by <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere*>. The caller must also free the medium. The implementation of this method must always supply a value of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> for the <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease> member of the <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> structure that this parameter points to."
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(FORMATETC)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(FORMATETC)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(FORMATETC)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether the data object is capable of rendering the data described in the <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure. Objects attempting a paste or drop operation can call this method before calling <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*> to get an indication of whether the operation may be successful."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);
    parameters:
    - id: formatetc
      type: System.Runtime.InteropServices.ComTypes.FORMATETC
      description: "A pointer to a <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure, passed by reference, that defines the format, medium, and target device to use for the query."
    return:
      type: System.Int32
      description: "This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:       <table><thead><tr><th> Value       </th><th> Description       </th></tr></thead><tbody><tr><td> S_OK       </td><td> A subsequent call to <xref:System.Runtime.InteropServices.ComTypes.IDataObject.GetData*> would probably be successful.       </td></tr><tr><td> DV_E_LINDEX       </td><td> An invalid value for <xref:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex>; currently, only -1 is supported.       </td></tr><tr><td> DV_E_FORMATETC       </td><td> An invalid value for the <code>pFormatetc</code> parameter.       </td></tr><tr><td> DV_E_TYMED       </td><td> An invalid <xref:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed> value.       </td></tr><tr><td> DV_E_DVASPECT       </td><td> An invalid <xref:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect> value.       </td></tr><tr><td> OLE_E_NOTRUNNING       </td><td> The application is not running.       </td></tr></tbody></table>"
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)
  id: System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)
  isEii: true
  parent: System.Windows.Forms.DataObject
  langs:
  - csharp
  name: System.Runtime.InteropServices.ComTypes.IDataObject.SetData(FORMATETC,STGMEDIUM,Boolean)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.SetData(FORMATETC,STGMEDIUM,Boolean)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.SetData(FORMATETC,STGMEDIUM,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Transfers data to the object that implements this method. This method is called by an object that contains a data source."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface."
  syntax:
    content: void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);
    parameters:
    - id: pFormatetcIn
      type: System.Runtime.InteropServices.ComTypes.FORMATETC
      description: "A <xref:System.Runtime.InteropServices.ComTypes.FORMATETC> structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium."
    - id: pmedium
      type: System.Runtime.InteropServices.ComTypes.STGMEDIUM
      description: "A <xref:System.Runtime.InteropServices.ComTypes.STGMEDIUM> structure, passed by reference, that defines the storage medium in which the data is being passed."
    - id: fRelease
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to specify that the data object called, which implements <xref:System.Runtime.InteropServices.ComTypes.IDataObject.SetData*>, owns the storage medium after the call returns. This means that the data object must free the medium after it has been used by calling the <xref uid=&quot;langword_csharp_ReleaseStgMedium&quot; name=&quot;ReleaseStgMedium&quot; href=&quot;&quot;></xref> function. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only."
  overload: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "This method does not support the type of the underlying data object."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Windows.Forms.DataObject.#ctor
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Windows.Forms.DataObject.DataObject()
- uid: System.Windows.Forms.DataObject.#ctor(System.Object)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: DataObject(Object)
  nameWithType: DataObject.DataObject(Object)
  fullName: System.Windows.Forms.DataObject.DataObject(Object)
- uid: System.Windows.Forms.DataObject.#ctor(System.String,System.Object)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: DataObject(String,Object)
  nameWithType: DataObject.DataObject(String,Object)
  fullName: System.Windows.Forms.DataObject.DataObject(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.DataObject.ContainsAudio
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsAudio()
  nameWithType: DataObject.ContainsAudio()
  fullName: System.Windows.Forms.DataObject.ContainsAudio()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataObject.ContainsFileDropList
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsFileDropList()
  nameWithType: DataObject.ContainsFileDropList()
  fullName: System.Windows.Forms.DataObject.ContainsFileDropList()
- uid: System.Windows.Forms.DataObject.ContainsImage
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsImage()
  nameWithType: DataObject.ContainsImage()
  fullName: System.Windows.Forms.DataObject.ContainsImage()
- uid: System.Windows.Forms.DataObject.ContainsText
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsText()
  nameWithType: DataObject.ContainsText()
  fullName: System.Windows.Forms.DataObject.ContainsText()
- uid: System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsText(TextDataFormat)
  nameWithType: DataObject.ContainsText(TextDataFormat)
  fullName: System.Windows.Forms.DataObject.ContainsText(TextDataFormat)
- uid: System.Windows.Forms.TextDataFormat
  parent: System.Windows.Forms
  isExternal: false
  name: TextDataFormat
  nameWithType: TextDataFormat
  fullName: System.Windows.Forms.TextDataFormat
- uid: System.Windows.Forms.DataObject.GetAudioStream
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetAudioStream()
  nameWithType: DataObject.GetAudioStream()
  fullName: System.Windows.Forms.DataObject.GetAudioStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Forms.DataObject.GetData(System.String)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetData(String)
  nameWithType: DataObject.GetData(String)
  fullName: System.Windows.Forms.DataObject.GetData(String)
- uid: System.Windows.Forms.DataObject.GetData(System.Type)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: DataObject.GetData(Type)
  fullName: System.Windows.Forms.DataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: DataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.DataObject.GetData(String,Boolean)
- uid: System.Windows.Forms.DataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: DataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.DataObject.GetDataPresent(String)
- uid: System.Windows.Forms.DataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: DataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.DataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: DataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.DataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.DataObject.GetFileDropList
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetFileDropList()
  nameWithType: DataObject.GetFileDropList()
  fullName: System.Windows.Forms.DataObject.GetFileDropList()
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.Windows.Forms.DataObject.GetFormats
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetFormats()
  nameWithType: DataObject.GetFormats()
  fullName: System.Windows.Forms.DataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.DataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: DataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.DataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.DataObject.GetImage
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetImage()
  nameWithType: DataObject.GetImage()
  fullName: System.Windows.Forms.DataObject.GetImage()
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.DataObject.GetText
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetText()
  nameWithType: DataObject.GetText()
  fullName: System.Windows.Forms.DataObject.GetText()
- uid: System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetText(TextDataFormat)
  nameWithType: DataObject.GetText(TextDataFormat)
  fullName: System.Windows.Forms.DataObject.GetText(TextDataFormat)
- uid: System.Windows.Forms.DataObject.SetAudio(System.Byte[])
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetAudio(Byte[])
  nameWithType: DataObject.SetAudio(Byte[])
  fullName: System.Windows.Forms.DataObject.SetAudio(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetAudio(Stream)
  nameWithType: DataObject.SetAudio(Stream)
  fullName: System.Windows.Forms.DataObject.SetAudio(Stream)
- uid: System.Windows.Forms.DataObject.SetData(System.Object)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: DataObject.SetData(Object)
  fullName: System.Windows.Forms.DataObject.SetData(Object)
- uid: System.Windows.Forms.DataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: DataObject.SetData(String,Object)
  fullName: System.Windows.Forms.DataObject.SetData(String,Object)
- uid: System.Windows.Forms.DataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: DataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.DataObject.SetData(Type,Object)
- uid: System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: DataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.DataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetFileDropList(StringCollection)
  nameWithType: DataObject.SetFileDropList(StringCollection)
  fullName: System.Windows.Forms.DataObject.SetFileDropList(StringCollection)
- uid: System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetImage(Image)
  nameWithType: DataObject.SetImage(Image)
  fullName: System.Windows.Forms.DataObject.SetImage(Image)
- uid: System.Windows.Forms.DataObject.SetText(System.String)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetText(String)
  nameWithType: DataObject.SetText(String)
  fullName: System.Windows.Forms.DataObject.SetText(String)
- uid: System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetText(String,TextDataFormat)
  nameWithType: DataObject.SetText(String,TextDataFormat)
  fullName: System.Windows.Forms.DataObject.SetText(String,TextDataFormat)
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(FORMATETC,ADVF,IAdviseSink,Int32)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(FORMATETC,ADVF,IAdviseSink,Int32)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(FORMATETC,ADVF,IAdviseSink,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ComTypes.FORMATETC
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: true
  name: FORMATETC
  nameWithType: FORMATETC
  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC
- uid: System.Runtime.InteropServices.ComTypes.ADVF
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: true
  name: ADVF
  nameWithType: ADVF
  fullName: System.Runtime.InteropServices.ComTypes.ADVF
- uid: System.Runtime.InteropServices.ComTypes.IAdviseSink
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: true
  name: IAdviseSink
  nameWithType: IAdviseSink
  fullName: System.Runtime.InteropServices.ComTypes.IAdviseSink
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(Int32)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(Int32)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(Int32)
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(IEnumSTATDATA)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(IEnumSTATDATA)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(IEnumSTATDATA)
- uid: System.Runtime.InteropServices.ComTypes.IEnumSTATDATA
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IEnumSTATDATA
  nameWithType: IEnumSTATDATA
  fullName: System.Runtime.InteropServices.ComTypes.IEnumSTATDATA
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(DATADIR)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(DATADIR)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(DATADIR)
- uid: System.Runtime.InteropServices.ComTypes.IEnumFORMATETC
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: true
  name: IEnumFORMATETC
  nameWithType: IEnumFORMATETC
  fullName: System.Runtime.InteropServices.ComTypes.IEnumFORMATETC
- uid: System.Runtime.InteropServices.ComTypes.DATADIR
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: true
  name: DATADIR
  nameWithType: DATADIR
  fullName: System.Runtime.InteropServices.ComTypes.DATADIR
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(FORMATETC,FORMATETC)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(FORMATETC,FORMATETC)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(FORMATETC,FORMATETC)
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetData(FORMATETC,STGMEDIUM)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetData(FORMATETC,STGMEDIUM)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetData(FORMATETC,STGMEDIUM)
- uid: System.Runtime.InteropServices.ComTypes.STGMEDIUM
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: true
  name: STGMEDIUM
  nameWithType: STGMEDIUM
  fullName: System.Runtime.InteropServices.ComTypes.STGMEDIUM
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(FORMATETC,STGMEDIUM)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(FORMATETC,STGMEDIUM)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(FORMATETC,STGMEDIUM)
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(FORMATETC)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(FORMATETC)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(FORMATETC)
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.SetData(FORMATETC,STGMEDIUM,Boolean)
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.SetData(FORMATETC,STGMEDIUM,Boolean)
  fullName: System.Windows.Forms.DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.SetData(FORMATETC,STGMEDIUM,Boolean)
- uid: System.Windows.Forms.DataObject.#ctor*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: DataObject
  nameWithType: DataObject.DataObject
- uid: System.Windows.Forms.DataObject.ContainsAudio*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsAudio
  nameWithType: DataObject.ContainsAudio
- uid: System.Windows.Forms.DataObject.ContainsFileDropList*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsFileDropList
  nameWithType: DataObject.ContainsFileDropList
- uid: System.Windows.Forms.DataObject.ContainsImage*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsImage
  nameWithType: DataObject.ContainsImage
- uid: System.Windows.Forms.DataObject.ContainsText*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: ContainsText
  nameWithType: DataObject.ContainsText
- uid: System.Windows.Forms.DataObject.GetAudioStream*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetAudioStream
  nameWithType: DataObject.GetAudioStream
- uid: System.Windows.Forms.DataObject.GetData*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetData
  nameWithType: DataObject.GetData
- uid: System.Windows.Forms.DataObject.GetDataPresent*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: DataObject.GetDataPresent
- uid: System.Windows.Forms.DataObject.GetFileDropList*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetFileDropList
  nameWithType: DataObject.GetFileDropList
- uid: System.Windows.Forms.DataObject.GetFormats*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetFormats
  nameWithType: DataObject.GetFormats
- uid: System.Windows.Forms.DataObject.GetImage*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetImage
  nameWithType: DataObject.GetImage
- uid: System.Windows.Forms.DataObject.GetText*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: GetText
  nameWithType: DataObject.GetText
- uid: System.Windows.Forms.DataObject.SetAudio*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetAudio
  nameWithType: DataObject.SetAudio
- uid: System.Windows.Forms.DataObject.SetData*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetData
  nameWithType: DataObject.SetData
- uid: System.Windows.Forms.DataObject.SetFileDropList*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetFileDropList
  nameWithType: DataObject.SetFileDropList
- uid: System.Windows.Forms.DataObject.SetImage*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetImage
  nameWithType: DataObject.SetImage
- uid: System.Windows.Forms.DataObject.SetText*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: SetText
  nameWithType: DataObject.SetText
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetData
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetData
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData
- uid: System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData*
  parent: System.Windows.Forms.DataObject
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes.IDataObject.SetData
  nameWithType: DataObject.System.Runtime.InteropServices.ComTypes.IDataObject.SetData
