### YamlMime:ManagedReference
items:
- uid: System.Configuration.Configuration
  id: Configuration
  children:
  - System.Configuration.Configuration.AppSettings
  - System.Configuration.Configuration.AssemblyStringTransformer
  - System.Configuration.Configuration.ConnectionStrings
  - System.Configuration.Configuration.EvaluationContext
  - System.Configuration.Configuration.FilePath
  - System.Configuration.Configuration.GetSection(System.String)
  - System.Configuration.Configuration.GetSectionGroup(System.String)
  - System.Configuration.Configuration.HasFile
  - System.Configuration.Configuration.Locations
  - System.Configuration.Configuration.NamespaceDeclared
  - System.Configuration.Configuration.RootSectionGroup
  - System.Configuration.Configuration.Save
  - System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)
  - System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  - System.Configuration.Configuration.SaveAs(System.String)
  - System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  - System.Configuration.Configuration.SectionGroups
  - System.Configuration.Configuration.Sections
  - System.Configuration.Configuration.TargetFramework
  - System.Configuration.Configuration.TypeStringTransformer
  langs:
  - csharp
  name: Configuration
  nameWithType: Configuration
  fullName: System.Configuration.Configuration
  type: Class
  summary: "Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited."
  remarks: "Configuration settings are stored in a hierarchy of configuration files. The Configuration class instance represents the merged view of the configuration settings from all of the configuration files that apply to a specific physical entity, such as a computer, or to a logical entity, such as an application or a Web site. The logical entity can exist on the local computer or on a remote server. For information about configuration files, see [Configuring Apps](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Configuration Files](~/add/includes/ajax-current-ext-md.md).       When no configuration file exists for a specified entity, the Configuration object represents the default configuration settings as defined by the Machine.config file.       You can get a Configuration object by using the following classes:      -   The <xref:System.Configuration.ConfigurationManager> class, if your entity is a client application.      -   The <xref:System.Web.Configuration.WebConfigurationManager> class, if your entity is a Web application.       The names of the methods that return a Configuration object begin with &quot;Open&quot;.       You can also generate a configuration file that represents the configuration settings in a Configuration object. To do this, use one of the following methods:      -   Call the <xref:System.Configuration.Configuration.Save%2A> method to create a new configuration file.      -   Call the <xref:System.Configuration.Configuration.SaveAs%2A> method to generate a new configuration file at another location.       The names of the methods that create configuration files begin with &quot;Save&quot;.      > [!NOTE] >  To enable access to configuration settings on a remote computer, use the Aspnet_regiis command-line tool. For more information about this tool, see [ASP.NET IIS Registration Tool (Aspnet_regiis.exe)](~/add/includes/ajax-current-ext-md.md). For information about creating and accessing custom configuration settings other than the intrinsic sections included in the .NET Framework, refer to <xref:System.Configuration.ConfigurationSection>."
  example:
  - "The following code example demonstrates how to use the Configuration class to access configuration file elements.  \n  \n [!code-vb[System.Configuration.Configuration#31](~/add/codesnippet/visualbasic/t-system.configuration.c_3_1.vb)]\n [!code-cs[System.Configuration.Configuration#31](~/add/codesnippet/csharp/t-system.configuration.c_3_1.cs)]"
  syntax:
    content: public sealed class Configuration
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Configuration.AppSettings
  id: AppSettings
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: AppSettings
  nameWithType: Configuration.AppSettings
  fullName: System.Configuration.Configuration.AppSettings
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the <xref href=&quot;System.Configuration.AppSettingsSection&quot;></xref> object configuration section that applies to this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  remarks: "Use the AppSettings property to access and change the `appSettings` configuration section defined by default in the open configuration file."
  example:
  - "The following code example demonstrates how to use the AppSettings property.  \n  \n [!code-vb[System.Configuration.Configuration#5](~/add/codesnippet/visualbasic/p-system.configuration.c_42_1.vb)]\n [!code-cs[System.Configuration.Configuration#5](~/add/codesnippet/csharp/p-system.configuration.c_42_1.cs)]"
  syntax:
    content: public System.Configuration.AppSettingsSection AppSettings { get; }
    return:
      type: System.Configuration.AppSettingsSection
      description: "An <xref href=&quot;System.Configuration.AppSettingsSection&quot;></xref> object representing the <xref uid=&quot;langword_csharp_appSettings&quot; name=&quot;appSettings&quot; href=&quot;&quot;></xref> configuration section that applies to this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.AppSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.AssemblyStringTransformer
  id: AssemblyStringTransformer
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: AssemblyStringTransformer
  nameWithType: Configuration.AssemblyStringTransformer
  fullName: System.Configuration.Configuration.AssemblyStringTransformer
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Specifies a function delegate that is used to transform assembly strings in configuration files."
  remarks: "This property enables a consumer of the .NET Framework configuration system to set a function delegate that is used to transform assembly strings found in configuration files. [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] uses this property when a project is targeted for an earlier version of the .NET Framework. The function makes sure that assembly strings are formatted correctly for the targeted version of the .NET Framework when configuration files are updated."
  syntax:
    content: public Func<string,string> AssemblyStringTransformer { get; set; }
    return:
      type: System.Func{System.String,System.String}
      description: "A delegate that transforms type strings. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Configuration.AssemblyStringTransformer*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.ConnectionStrings
  id: ConnectionStrings
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: ConnectionStrings
  nameWithType: Configuration.ConnectionStrings
  fullName: System.Configuration.Configuration.ConnectionStrings
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets a <xref href=&quot;System.Configuration.ConnectionStringsSection&quot;></xref> configuration-section object that applies to this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  remarks: "Use the ConnectionStrings property to access and change the `connectionStrings` configuration section defined in the open configuration file."
  example:
  - "The following code example demonstrates how to use the ConnectionStrings property.  \n  \n [!code-vb[System.Configuration.Configuration#6](~/add/codesnippet/visualbasic/p-system.configuration.c_40_1.vb)]\n [!code-cs[System.Configuration.Configuration#6](~/add/codesnippet/csharp/p-system.configuration.c_40_1.cs)]"
  syntax:
    content: public System.Configuration.ConnectionStringsSection ConnectionStrings { get; }
    return:
      type: System.Configuration.ConnectionStringsSection
      description: "A <xref href=&quot;System.Configuration.ConnectionStringsSection&quot;></xref> configuration-section object representing the <xref uid=&quot;langword_csharp_connectionStrings&quot; name=&quot;connectionStrings&quot; href=&quot;&quot;></xref> configuration section that applies to this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.ConnectionStrings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.EvaluationContext
  id: EvaluationContext
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: EvaluationContext
  nameWithType: Configuration.EvaluationContext
  fullName: System.Configuration.Configuration.EvaluationContext
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the <xref href=&quot;System.Configuration.ContextInformation&quot;></xref> object for the <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  remarks: "A <xref:System.Configuration.ContextInformation> object provides the context necessary for a <xref:System.Configuration.Configuration> object to respond based upon where it is being evaluated."
  example:
  - "The following code example demonstrates how to use the EvaluationContext property.  \n  \n [!code-vb[System.Configuration.Configuration#7](~/add/codesnippet/visualbasic/p-system.configuration.c_54_1.vb)]\n [!code-cs[System.Configuration.Configuration#7](~/add/codesnippet/csharp/p-system.configuration.c_54_1.cs)]"
  syntax:
    content: public System.Configuration.ContextInformation EvaluationContext { get; }
    return:
      type: System.Configuration.ContextInformation
      description: "The <xref href=&quot;System.Configuration.ContextInformation&quot;></xref> object for the <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.EvaluationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.FilePath
  id: FilePath
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: FilePath
  nameWithType: Configuration.FilePath
  fullName: System.Configuration.Configuration.FilePath
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the physical path to the configuration file represented by this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  remarks: "If the value for this FilePath property represents a merged view and no actual file exists for the application, the path to the parent configuration file is returned."
  example:
  - "The following code example demonstrates how to use the FilePath property.  \n  \n [!code-vb[System.Configuration.Configuration#8](~/add/codesnippet/visualbasic/p-system.configuration.c_51_1.vb)]\n [!code-cs[System.Configuration.Configuration#8](~/add/codesnippet/csharp/p-system.configuration.c_51_1.cs)]"
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "The physical path to the configuration file represented by this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.GetSection(System.String)
  id: GetSection(System.String)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: GetSection(String)
  nameWithType: Configuration.GetSection(String)
  fullName: System.Configuration.Configuration.GetSection(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Returns the specified <xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref> object."
  remarks: "Configuration settings are contained within sections that group similar settings together for convenience. The GetSection method retrieves a configuration section by its name."
  example:
  - "The following example shows how to use the GetSection method to access a custom section. For the complete example code that defines a class that stores information for the `CustomSection` section, see the <xref:System.Configuration.Configuration> class overview.  \n  \n [!code-vb[System.Configuration.Configuration#3](~/add/codesnippet/visualbasic/m-system.configuration.c_21_1.vb)]\n [!code-cs[System.Configuration.Configuration#3](~/add/codesnippet/csharp/m-system.configuration.c_21_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSection GetSection (string sectionName);
    parameters:
    - id: sectionName
      type: System.String
      description: "The path to the section to be returned."
    return:
      type: System.Configuration.ConfigurationSection
      description: "The specified <xref href=&quot;System.Configuration.ConfigurationSection&quot;></xref> object."
  overload: System.Configuration.Configuration.GetSection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.GetSectionGroup(System.String)
  id: GetSectionGroup(System.String)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: GetSectionGroup(String)
  nameWithType: Configuration.GetSectionGroup(String)
  fullName: System.Configuration.Configuration.GetSectionGroup(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the specified <xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref> object."
  remarks: "Use the GetSectionGroup method to obtain a specific <xref:System.Configuration.ConfigurationSectionGroup> from a <xref:System.Configuration.Configuration> object."
  syntax:
    content: public System.Configuration.ConfigurationSectionGroup GetSectionGroup (string sectionGroupName);
    parameters:
    - id: sectionGroupName
      type: System.String
      description: "The path name of the <xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref> to return."
    return:
      type: System.Configuration.ConfigurationSectionGroup
      description: "The <xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref> specified."
  overload: System.Configuration.Configuration.GetSectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.HasFile
  id: HasFile
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: HasFile
  nameWithType: Configuration.HasFile
  fullName: System.Configuration.Configuration.HasFile
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets a value that indicates whether a file exists for the resource represented by this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  remarks: "The HasFile property also returns `true` when the resource represented by this <xref:System.Configuration.Configuration> object inherits settings from a Web.config file.       The HasFile property returns `false` when this <xref:System.Configuration.Configuration> object represents a location-specific configuration."
  example:
  - "The following code example demonstrates how to use the HasFile property.  \n  \n [!code-vb[System.Configuration.Configuration#9](~/add/codesnippet/visualbasic/p-system.configuration.c_23_1.vb)]\n [!code-cs[System.Configuration.Configuration#9](~/add/codesnippet/csharp/p-system.configuration.c_23_1.cs)]"
  syntax:
    content: public bool HasFile { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there is a configuration file; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Configuration.HasFile*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.Locations
  id: Locations
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Locations
  nameWithType: Configuration.Locations
  fullName: System.Configuration.Configuration.Locations
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the locations defined within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  remarks: "The Locations property applies only when the <xref:System.Configuration.Configuration.HasFile%2A> property returns `true`. If this configuration inherits all of its settings, or no locations are defined, an empty collection is returned."
  syntax:
    content: public System.Configuration.ConfigurationLocationCollection Locations { get; }
    return:
      type: System.Configuration.ConfigurationLocationCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationLocationCollection&quot;></xref> containing the locations defined within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.Locations*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.NamespaceDeclared
  id: NamespaceDeclared
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: NamespaceDeclared
  nameWithType: Configuration.NamespaceDeclared
  fullName: System.Configuration.Configuration.NamespaceDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets or sets a value indicating whether the configuration file has an XML namespace."
  remarks: "Configuration files are formatted as XML files, but an XML namespace is not required. If this value is `true` after the <xref:System.Configuration.Configuration> object is opened, then the file contains a namespace reference. If it is set to `true` before the <xref:System.Configuration.Configuration> object is saved, then a namespace reference will be added to the file."
  syntax:
    content: public bool NamespaceDeclared { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration file has an XML namespace; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Configuration.NamespaceDeclared*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.RootSectionGroup
  id: RootSectionGroup
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: RootSectionGroup
  nameWithType: Configuration.RootSectionGroup
  fullName: System.Configuration.Configuration.RootSectionGroup
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the root <xref href=&quot;System.Configuration.ConfigurationSectionGroup&quot;></xref> for this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  syntax:
    content: public System.Configuration.ConfigurationSectionGroup RootSectionGroup { get; }
    return:
      type: System.Configuration.ConfigurationSectionGroup
      description: "The root section group for this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.RootSectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.Save
  id: Save
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Save()
  nameWithType: Configuration.Save()
  fullName: System.Configuration.Configuration.Save()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Writes the configuration settings contained within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object to the current XML configuration file."
  remarks: "The Save method persists any configuration settings that have been modified since this <xref:System.Configuration.Configuration> object was created. If a configuration file does not exist at the physical location represented by the <xref:System.Configuration.Configuration.FilePath%2A> property, a new configuration file will be created to contain any settings that are different from the inherited configuration.       If the configuration file has changed since this <xref:System.Configuration.Configuration> object was created, a run-time error occurs.      > [!NOTE] >  When &quot;Creator Owner&quot; is listed in the ACL (Access Control List) of the directory containing the configuration file, the current user of Save becomes the new owner of the file and inherits the permissions granted to &quot;Creator Owner&quot;. This results in an elevation of privileges for the current user and a removal of privileges for the previous owner."
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.Configuration.Configuration.Save*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)
  id: Save(System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Save(ConfigurationSaveMode)
  nameWithType: Configuration.Save(ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Writes the configuration settings contained within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object to the current XML configuration file."
  remarks: "The Save method persists configuration settings in the <xref:System.Configuration.Configuration> object based on the `saveMode` parameter.       If a configuration file does not exist at the physical location represented by the <xref:System.Configuration.Configuration.FilePath%2A> property, a new configuration file will be created to contain any settings that are different from the inherited configuration.       If the configuration file has changed since this <xref:System.Configuration.Configuration> object was created, a run-time error occurs.      > [!NOTE] >  When &quot;Creator Owner&quot; is listed in the ACL (Access Control List) of the directory containing the configuration file, the current user of Save becomes the new owner of the file and inherits the permissions granted to &quot;Creator Owner&quot;. This results in an elevation of privileges for the current user and a removal of privileges for the previous owner."
  example:
  - "The following code example demonstrates how to use the Save method to save a custom section.  \n  \n [!code-vb[System.Configuration.Configuration#2](~/add/codesnippet/visualbasic/ff1dd447-b23a-44d0-8833-_1.vb)]\n [!code-cs[System.Configuration.Configuration#2](~/add/codesnippet/csharp/ff1dd447-b23a-44d0-8833-_1.cs)]"
  syntax:
    content: public void Save (System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;></xref> value that determines which property values to save."
  overload: System.Configuration.Configuration.Save*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  id: Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Save(ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.Save(ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Writes the configuration settings contained within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object to the current XML configuration file."
  remarks: "The Save method persists configuration settings in the <xref:System.Configuration.Configuration> object based on the `saveMode` and `forceSaveAll` parameters.       If a configuration file does not exist at the physical location represented by the <xref:System.Configuration.Configuration.FilePath%2A> property, a  new configuration file will be created to contain any settings that are different from the inherited configuration..       If the configuration file has changed since this <xref:System.Configuration.Configuration> object was created, a run-time error occurs.      > [!NOTE] >  When &quot;Creator Owner&quot; is listed in the ACL (Access Control List) of the directory containing the configuration file, the current user of Save becomes the new owner of the file and inherits the permissions granted to &quot;Creator Owner&quot;. This results in an elevation of privileges for the current user and a removal of privileges for the previous owner."
  syntax:
    content: public void Save (System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll);
    parameters:
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;></xref> value that determines which property values to save."
    - id: forceSaveAll
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to save even if the configuration was not modified; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Configuration.Save*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.SaveAs(System.String)
  id: SaveAs(System.String)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SaveAs(String)
  nameWithType: Configuration.SaveAs(String)
  fullName: System.Configuration.Configuration.SaveAs(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Writes the configuration settings contained within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object to the specified XML configuration file."
  remarks: "The SaveAs method persists any configuration settings that have been modified since this <xref:System.Configuration.Configuration> object was created to a new file.       If a configuration file does not exist at the physical location represented by the       <xref:System.Configuration.Configuration.FilePath%2A> property, a new configuration file will be created to contain any settings that are different from the inherited configuration..       If the configuration file has changed since this <xref:System.Configuration.Configuration> object was created, a run-time error occurs."
  syntax:
    content: public void SaveAs (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "The path and file name to save the configuration file to."
  overload: System.Configuration.Configuration.SaveAs*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  id: SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SaveAs(String,ConfigurationSaveMode)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Writes the configuration settings contained within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object to the specified XML configuration file."
  remarks: "The SaveAs method persists configuration settings in the <xref:System.Configuration.Configuration> object to a new file based on the `saveMode` parameter.       If a configuration file does not exist at the physical location represented by the <xref:System.Configuration.Configuration.FilePath%2A> property, a new configuration file will be created to contain any settings that are different from the inherited configuration..       If the configuration file has changed since this <xref:System.Configuration.Configuration> object was created, a run-time error occurs."
  syntax:
    content: public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: filename
      type: System.String
      description: "The path and file name to save the configuration file to."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;></xref> value that determines which property values to save."
  overload: System.Configuration.Configuration.SaveAs*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file could not be written to.  \n  \n \\- or -  \n  \n The configuration file has changed."
  platform:
  - net462
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  id: SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SaveAs(String,ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Writes the configuration settings contained within this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object to the specified XML configuration file."
  remarks: "The SaveAs method persists configuration settings in the <xref:System.Configuration.Configuration> object to a new file based on the `saveMode` and `forceSaveAll` parameters.       If a configuration file does not exist at the physical location represented by the <xref:System.Configuration.Configuration.FilePath%2A> property, a new configuration file will be created to contain any settings that are different from the inherited configuration.       If the configuration file has changed since this <xref:System.Configuration.Configuration> object was created, a run-time error occurs."
  example:
  - "The following code example demonstrates how to use the SaveAs method.  \n  \n [!code-vb[System.Configuration.Configuration#4](~/add/codesnippet/visualbasic/482b549a-5bc1-4854-b723-_1.vb)]\n [!code-cs[System.Configuration.Configuration#4](~/add/codesnippet/csharp/482b549a-5bc1-4854-b723-_1.cs)]"
  syntax:
    content: public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode saveMode, bool forceSaveAll);
    parameters:
    - id: filename
      type: System.String
      description: "The path and file name to save the configuration file to."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;></xref> value that determines which property values to save."
    - id: forceSaveAll
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to save even if the configuration was not modified; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Configuration.SaveAs*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code> is null or an empty string (&quot;&quot;)."
  platform:
  - net462
- uid: System.Configuration.Configuration.SectionGroups
  id: SectionGroups
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: SectionGroups
  nameWithType: Configuration.SectionGroups
  fullName: System.Configuration.Configuration.SectionGroups
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets a collection of the section groups defined by this configuration."
  remarks: "Configuration sections can be combined into groups for convenience and added functionality. Access the SectionGroups property to retrieve the <xref:System.Configuration.ConfigurationSectionGroupCollection> object representing the collection of section groups for this <xref:System.Configuration.Configuration> object. If this <xref:System.Configuration.Configuration> object represents an inherited view, the merged list of section groups will be returned."
  example:
  - "The following code example demonstrates how to use the SectionGroups property.  \n  \n [!code-vb[System.Configuration.Configuration#10](~/add/codesnippet/visualbasic/p-system.configuration.c_36_1.vb)]\n [!code-cs[System.Configuration.Configuration#10](~/add/codesnippet/csharp/p-system.configuration.c_36_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionGroupCollection SectionGroups { get; }
    return:
      type: System.Configuration.ConfigurationSectionGroupCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationSectionGroupCollection&quot;></xref> collection representing the collection of section groups for this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.SectionGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.Sections
  id: Sections
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: Sections
  nameWithType: Configuration.Sections
  fullName: System.Configuration.Configuration.Sections
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets a collection of the sections defined by this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  remarks: "Access the Sections property to retrieve a <xref:System.Configuration.ConfigurationSectionCollection> object representing the collection of sections for this <xref:System.Configuration.Configuration> object. If this <xref:System.Configuration.Configuration> object represents a merged configuration, the merged list of sections will be returned."
  example:
  - "The following example shows how to retrieve the Sections property value and to display the number of the sections in the collection.  \n  \n [!code-vb[System.Configuration.Configuration#11](~/add/codesnippet/visualbasic/p-system.configuration.c_31_1.vb)]\n [!code-cs[System.Configuration.Configuration#11](~/add/codesnippet/csharp/p-system.configuration.c_31_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionCollection Sections { get; }
    return:
      type: System.Configuration.ConfigurationSectionCollection
      description: "A collection of the sections defined by this <xref href=&quot;System.Configuration.Configuration&quot;></xref> object."
  overload: System.Configuration.Configuration.Sections*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.TargetFramework
  id: TargetFramework
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: TargetFramework
  nameWithType: Configuration.TargetFramework
  fullName: System.Configuration.Configuration.TargetFramework
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Specifies the targeted version of the .NET Framework when a version earlier than the current one is targeted."
  remarks: "When the configuration system serializes a hierarchy of configuration objects to XML, it checks the value of this property. If the property is not `null`, the configuration system performs version checks for each configuration section group and configuration section. The configuration system also performs version checks for individual configuration properties that are marked as having changed across versions. (For more information, see <xref:System.Configuration.ConfigurationPropertyOptions>.) The configuration system also performs version checks for configuration elements in configuration sections.       If the value of this property is `null`, the configuration system does not perform any version checks during serialization."
  syntax:
    content: public System.Runtime.Versioning.FrameworkName TargetFramework { get; set; }
    return:
      type: System.Runtime.Versioning.FrameworkName
      description: "The name of the targeted version of the .NET Framework. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, which indicates that the current version is targeted."
  overload: System.Configuration.Configuration.TargetFramework*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Configuration.TypeStringTransformer
  id: TypeStringTransformer
  parent: System.Configuration.Configuration
  langs:
  - csharp
  name: TypeStringTransformer
  nameWithType: Configuration.TypeStringTransformer
  fullName: System.Configuration.Configuration.TypeStringTransformer
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Specifies a function delegate that is used to transform type strings in configuration files."
  remarks: "This property enables a consumer of the .NET Framework configuration system to set a function delegate that is used to transform type strings found in configuration files. [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] uses this property when a project is targeted for an earlier version of the .NET Framework. The function makes sure that type strings are formatted correctly for the targeted version of the .NET Framework when configuration files are updated."
  syntax:
    content: public Func<string,string> TypeStringTransformer { get; set; }
    return:
      type: System.Func{System.String,System.String}
      description: "A delegate that transforms type strings. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Configuration.TypeStringTransformer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Configuration.AppSettings
  parent: System.Configuration.Configuration
  isExternal: false
  name: AppSettings
  nameWithType: Configuration.AppSettings
  fullName: System.Configuration.Configuration.AppSettings
- uid: System.Configuration.AppSettingsSection
  parent: System.Configuration
  isExternal: false
  name: AppSettingsSection
  nameWithType: AppSettingsSection
  fullName: System.Configuration.AppSettingsSection
- uid: System.Configuration.Configuration.AssemblyStringTransformer
  parent: System.Configuration.Configuration
  isExternal: false
  name: AssemblyStringTransformer
  nameWithType: Configuration.AssemblyStringTransformer
  fullName: System.Configuration.Configuration.AssemblyStringTransformer
- uid: System.Func{System.String,System.String}
  parent: System
  isExternal: true
  name: Func<String,String>
  nameWithType: Func<String,String>
  fullName: System.Func<System.String,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Configuration.Configuration.ConnectionStrings
  parent: System.Configuration.Configuration
  isExternal: false
  name: ConnectionStrings
  nameWithType: Configuration.ConnectionStrings
  fullName: System.Configuration.Configuration.ConnectionStrings
- uid: System.Configuration.ConnectionStringsSection
  parent: System.Configuration
  isExternal: false
  name: ConnectionStringsSection
  nameWithType: ConnectionStringsSection
  fullName: System.Configuration.ConnectionStringsSection
- uid: System.Configuration.Configuration.EvaluationContext
  parent: System.Configuration.Configuration
  isExternal: false
  name: EvaluationContext
  nameWithType: Configuration.EvaluationContext
  fullName: System.Configuration.Configuration.EvaluationContext
- uid: System.Configuration.ContextInformation
  parent: System.Configuration
  isExternal: false
  name: ContextInformation
  nameWithType: ContextInformation
  fullName: System.Configuration.ContextInformation
- uid: System.Configuration.Configuration.FilePath
  parent: System.Configuration.Configuration
  isExternal: false
  name: FilePath
  nameWithType: Configuration.FilePath
  fullName: System.Configuration.Configuration.FilePath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Configuration.GetSection(System.String)
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSection(String)
  nameWithType: Configuration.GetSection(String)
  fullName: System.Configuration.Configuration.GetSection(String)
- uid: System.Configuration.ConfigurationSection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSection
  nameWithType: ConfigurationSection
  fullName: System.Configuration.ConfigurationSection
- uid: System.Configuration.Configuration.GetSectionGroup(System.String)
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSectionGroup(String)
  nameWithType: Configuration.GetSectionGroup(String)
  fullName: System.Configuration.Configuration.GetSectionGroup(String)
- uid: System.Configuration.ConfigurationSectionGroup
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionGroup
  nameWithType: ConfigurationSectionGroup
  fullName: System.Configuration.ConfigurationSectionGroup
- uid: System.Configuration.Configuration.HasFile
  parent: System.Configuration.Configuration
  isExternal: false
  name: HasFile
  nameWithType: Configuration.HasFile
  fullName: System.Configuration.Configuration.HasFile
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Configuration.Locations
  parent: System.Configuration.Configuration
  isExternal: false
  name: Locations
  nameWithType: Configuration.Locations
  fullName: System.Configuration.Configuration.Locations
- uid: System.Configuration.ConfigurationLocationCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationLocationCollection
  nameWithType: ConfigurationLocationCollection
  fullName: System.Configuration.ConfigurationLocationCollection
- uid: System.Configuration.Configuration.NamespaceDeclared
  parent: System.Configuration.Configuration
  isExternal: false
  name: NamespaceDeclared
  nameWithType: Configuration.NamespaceDeclared
  fullName: System.Configuration.Configuration.NamespaceDeclared
- uid: System.Configuration.Configuration.RootSectionGroup
  parent: System.Configuration.Configuration
  isExternal: false
  name: RootSectionGroup
  nameWithType: Configuration.RootSectionGroup
  fullName: System.Configuration.Configuration.RootSectionGroup
- uid: System.Configuration.Configuration.Save
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save()
  nameWithType: Configuration.Save()
  fullName: System.Configuration.Configuration.Save()
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save(ConfigurationSaveMode)
  nameWithType: Configuration.Save(ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save(ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.Save(ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.Save(ConfigurationSaveMode,Boolean)
- uid: System.Configuration.Configuration.SaveAs(System.String)
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs(String)
  nameWithType: Configuration.SaveAs(String)
  fullName: System.Configuration.Configuration.SaveAs(String)
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs(String,ConfigurationSaveMode)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode)
- uid: System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs(String,ConfigurationSaveMode,Boolean)
  nameWithType: Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
  fullName: System.Configuration.Configuration.SaveAs(String,ConfigurationSaveMode,Boolean)
- uid: System.Configuration.Configuration.SectionGroups
  parent: System.Configuration.Configuration
  isExternal: false
  name: SectionGroups
  nameWithType: Configuration.SectionGroups
  fullName: System.Configuration.Configuration.SectionGroups
- uid: System.Configuration.ConfigurationSectionGroupCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionGroupCollection
  nameWithType: ConfigurationSectionGroupCollection
  fullName: System.Configuration.ConfigurationSectionGroupCollection
- uid: System.Configuration.Configuration.Sections
  parent: System.Configuration.Configuration
  isExternal: false
  name: Sections
  nameWithType: Configuration.Sections
  fullName: System.Configuration.Configuration.Sections
- uid: System.Configuration.ConfigurationSectionCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionCollection
  nameWithType: ConfigurationSectionCollection
  fullName: System.Configuration.ConfigurationSectionCollection
- uid: System.Configuration.Configuration.TargetFramework
  parent: System.Configuration.Configuration
  isExternal: false
  name: TargetFramework
  nameWithType: Configuration.TargetFramework
  fullName: System.Configuration.Configuration.TargetFramework
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Configuration.Configuration.TypeStringTransformer
  parent: System.Configuration.Configuration
  isExternal: false
  name: TypeStringTransformer
  nameWithType: Configuration.TypeStringTransformer
  fullName: System.Configuration.Configuration.TypeStringTransformer
- uid: System.Configuration.Configuration.AppSettings*
  parent: System.Configuration.Configuration
  isExternal: false
  name: AppSettings
  nameWithType: Configuration.AppSettings
- uid: System.Configuration.Configuration.AssemblyStringTransformer*
  parent: System.Configuration.Configuration
  isExternal: false
  name: AssemblyStringTransformer
  nameWithType: Configuration.AssemblyStringTransformer
- uid: System.Configuration.Configuration.ConnectionStrings*
  parent: System.Configuration.Configuration
  isExternal: false
  name: ConnectionStrings
  nameWithType: Configuration.ConnectionStrings
- uid: System.Configuration.Configuration.EvaluationContext*
  parent: System.Configuration.Configuration
  isExternal: false
  name: EvaluationContext
  nameWithType: Configuration.EvaluationContext
- uid: System.Configuration.Configuration.FilePath*
  parent: System.Configuration.Configuration
  isExternal: false
  name: FilePath
  nameWithType: Configuration.FilePath
- uid: System.Configuration.Configuration.GetSection*
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSection
  nameWithType: Configuration.GetSection
- uid: System.Configuration.Configuration.GetSectionGroup*
  parent: System.Configuration.Configuration
  isExternal: false
  name: GetSectionGroup
  nameWithType: Configuration.GetSectionGroup
- uid: System.Configuration.Configuration.HasFile*
  parent: System.Configuration.Configuration
  isExternal: false
  name: HasFile
  nameWithType: Configuration.HasFile
- uid: System.Configuration.Configuration.Locations*
  parent: System.Configuration.Configuration
  isExternal: false
  name: Locations
  nameWithType: Configuration.Locations
- uid: System.Configuration.Configuration.NamespaceDeclared*
  parent: System.Configuration.Configuration
  isExternal: false
  name: NamespaceDeclared
  nameWithType: Configuration.NamespaceDeclared
- uid: System.Configuration.Configuration.RootSectionGroup*
  parent: System.Configuration.Configuration
  isExternal: false
  name: RootSectionGroup
  nameWithType: Configuration.RootSectionGroup
- uid: System.Configuration.Configuration.Save*
  parent: System.Configuration.Configuration
  isExternal: false
  name: Save
  nameWithType: Configuration.Save
- uid: System.Configuration.Configuration.SaveAs*
  parent: System.Configuration.Configuration
  isExternal: false
  name: SaveAs
  nameWithType: Configuration.SaveAs
- uid: System.Configuration.Configuration.SectionGroups*
  parent: System.Configuration.Configuration
  isExternal: false
  name: SectionGroups
  nameWithType: Configuration.SectionGroups
- uid: System.Configuration.Configuration.Sections*
  parent: System.Configuration.Configuration
  isExternal: false
  name: Sections
  nameWithType: Configuration.Sections
- uid: System.Configuration.Configuration.TargetFramework*
  parent: System.Configuration.Configuration
  isExternal: false
  name: TargetFramework
  nameWithType: Configuration.TargetFramework
- uid: System.Configuration.Configuration.TypeStringTransformer*
  parent: System.Configuration.Configuration
  isExternal: false
  name: TypeStringTransformer
  nameWithType: Configuration.TypeStringTransformer
