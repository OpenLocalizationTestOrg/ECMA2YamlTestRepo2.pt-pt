### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.GacIdentityPermissionAttribute
  id: GacIdentityPermissionAttribute
  children:
  - System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission
  langs:
  - csharp
  name: GacIdentityPermissionAttribute
  nameWithType: GacIdentityPermissionAttribute
  fullName: System.Security.Permissions.GacIdentityPermissionAttribute
  type: Class
  summary: "Allows security actions for <xref href=&quot;System.Security.Permissions.GacIdentityPermission&quot;></xref> to be applied to code using declarative security. This class cannot be inherited."
  remarks: "This class is used to ensure that callers are registered in the global assembly cache (GAC).       The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class, <xref:System.Security.Permissions.GacIdentityPermission>.      > [!IMPORTANT] >  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.   >    >  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. In the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the use of GacIdentityPermissionAttribute.  \n  \n [!code-cs[System.Security.Permissions.GacIdentityPermissionAttribute#1](~/add/codesnippet/csharp/t-system.security.permis_12_1.cs)]\n [!code-cpp[System.Security.Permissions.GacIdentityPermissionAttribute#1](~/add/codesnippet/cpp/t-system.security.permis_12_1.cpp)]\n [!code-vb[System.Security.Permissions.GacIdentityPermissionAttribute#1](~/add/codesnippet/visualbasic/t-system.security.permis_12_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class GacIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.GacIdentityPermissionAttribute
  langs:
  - csharp
  name: GacIdentityPermissionAttribute(SecurityAction)
  nameWithType: GacIdentityPermissionAttribute.GacIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.GacIdentityPermissionAttribute.GacIdentityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Permissions.GacIdentityPermissionAttribute&quot;></xref> class with the specified <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> value."
  remarks: "The constructor calls the base class to validate the <xref:System.Security.Permissions.SecurityAction> value.       This constructor associates a <xref:System.Security.Permissions.SecurityAction> (for example, `Demand`) with the <xref:System.Security.Permissions.GacIdentityPermission>.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. Use <xref:System.Security.Permissions.GacIdentityPermission> for imperative security."
  example:
  - "The following code example demonstrates the use of the GacIdentityPermissionAttribute constructor to demand that the calling program be in the global assembly cache. This example is part of a larger example provided for the <xref:System.Security.Permissions.GacIdentityPermissionAttribute> class.  \n  \n [!code-cs[System.Security.Permissions.GacIdentityPermissionAttribute#2](~/add/codesnippet/csharp/716cda58-9af0-4f0e-9803-_1.cs)]\n [!code-cpp[System.Security.Permissions.GacIdentityPermissionAttribute#2](~/add/codesnippet/cpp/716cda58-9af0-4f0e-9803-_1.cpp)]\n [!code-vb[System.Security.Permissions.GacIdentityPermissionAttribute#2](~/add/codesnippet/visualbasic/716cda58-9af0-4f0e-9803-_1.vb)]"
  syntax:
    content: public GacIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "One of the <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> values."
  overload: System.Security.Permissions.GacIdentityPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>action</code> parameter is not a valid <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> value."
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.GacIdentityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: GacIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates a new <xref href=&quot;System.Security.Permissions.GacIdentityPermission&quot;></xref> object."
  remarks: "This method should be called only by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission returned by this method."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.GacIdentityPermission&quot;></xref> that corresponds to this attribute."
  overload: System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.GacIdentityPermissionAttribute
  isExternal: false
  name: GacIdentityPermissionAttribute(SecurityAction)
  nameWithType: GacIdentityPermissionAttribute.GacIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.GacIdentityPermissionAttribute.GacIdentityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.GacIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: GacIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.GacIdentityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.GacIdentityPermissionAttribute
  isExternal: false
  name: GacIdentityPermissionAttribute
  nameWithType: GacIdentityPermissionAttribute.GacIdentityPermissionAttribute
- uid: System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.GacIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: GacIdentityPermissionAttribute.CreatePermission
