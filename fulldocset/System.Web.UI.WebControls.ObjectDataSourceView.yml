### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "Suporta o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlar e fornece uma interface para controlos vinculados a dados executar operações de dados com objetos de negócio e os dados."
  remarks: "A classe de ObjectDataSourceView destina-se principalmente a ser utilizada por controlos vinculados a dados e não como um objeto programável no código da página.       A classe de ObjectDataSourceView implementa a funcionalidade de dados para o <xref:System.Web.UI.WebControls.ObjectDataSource>controlar, incluindo o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operações, ordenação, filtragem e gestão das definições mantidos na vista estado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       É criado um objeto de ObjectDataSourceView para cada instância de <xref:System.Web.UI.WebControls.ObjectDataSource>classe em tempo de execução.</xref:System.Web.UI.WebControls.ObjectDataSource> Chamadas para operações de dados da instância do <xref:System.Web.UI.WebControls.ObjectDataSource>classe são processadas pela instância do objeto ObjectDataSourceView.</xref:System.Web.UI.WebControls.ObjectDataSource> Os programadores de página não aceder à instância da classe ObjectDataSourceView diretamente. Os programadores do controlo podem criar controlos de dados personalizados ao alargar o <xref:System.Web.UI.WebControls.ObjectDataSource>e ObjectDataSourceView classes.</xref:System.Web.UI.WebControls.ObjectDataSource>       A classe de ObjectDataSourceView executa operações de dados ao chamar os métodos em objetos empresariais ou dados utilizando reflexão. No momento de execução a <xref:System.Web.UI.WebControls.ObjectDataSource>controlo cria uma instância do tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>propriedade e, em seguida, chama o método adequado para a operação de dados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> O objeto com instâncias não esteja em cache na memória pelo ObjectDataSourceView. O objeto é criado e destruído para cada chamada de método de dados. Se o método for `static` (`Shared` no Visual Basic), não é possível criar uma instância, mas ainda é possível chamar o método de operação de dados.       O ObjectDataSourceView não está exposta diretamente para os programadores de página pelo <xref:System.Web.UI.WebControls.ObjectDataSource>controlo.</xref:System.Web.UI.WebControls.ObjectDataSource> Em vez disso, as propriedades e métodos para a ObjectDataSourceView são acedidos através de <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> Por exemplo, a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>de ObjectDataSourceView for definida, definindo a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>propriedade de <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## Obter dados a operação mais básica que efetua uma vista de origem de dados é a obtenção de dados da utilização de armazenamento de dados subjacente a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método, o que obtém um <xref:System.Collections.IEnumerable>colecção de itens de dados.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> Os seguintes métodos de obtenção de dados, propriedades e os eventos são implementados pelo objeto ObjectDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.ObjectDataSource>controlo para programadores de página e outros os chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método - o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>evento - o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>eventos # # objeto de dados de atualizar o ObjectDataSourceView suporte atualizações de dados ao chamar um método de objeto empresariais ou dados que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os controlos vinculados a dados automaticamente efetuar atualizações, tais como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>controlos, transmita os parâmetros um <xref:System.Collections.Specialized.IOrderedDictionary>interface para o ObjectDataSourceView e a vista do objeto intercala estes parâmetros com quaisquer parâmetros que se encontram no <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Os seguintes métodos de atualização, propriedades e os eventos são implementados pelo ObjectDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.ObjectDataSource>controlo para programadores de página e outros os chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>método - o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>evento - o <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>eventos # # objeto a inserir o ObjectDataSourceView de dados suporta inserir novas linhas de dados ao chamar um método de objeto empresariais ou dados que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os controlos vinculados a dados automaticamente efetue inserções, tais como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, passar os parâmetros um <xref:System.Collections.Specialized.IOrderedDictionary>interface para o ObjectDataSourceView e a vista do objeto intercala estes parâmetros com quaisquer parâmetros que se encontram no <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Seguintes Inserir métodos, propriedades, e eventos são implementados pelo ObjectDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.ObjectDataSource>controlo para programadores de página e outros os chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>o método serializationmethod o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>evento - o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>eventos # # suporta a eliminação de dados ao chamar um método de objeto empresariais ou dados que é identificado de objeto de dados de eliminar o ObjectDataSourceView o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os controlos vinculados a dados automaticamente efetue eliminações, tais como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, passar os parâmetros um <xref:System.Collections.Specialized.IOrderedDictionary>interface para o ObjectDataSourceView e a vista do objeto intercala estes parâmetros com quaisquer parâmetros que se encontram no <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Os seguintes métodos, propriedades, de eliminar e eventos são implementados pelo ObjectDataSourceView e expostos diretamente pelo respetivo <xref:System.Web.UI.WebControls.ObjectDataSource>controlo para programadores de página e outros os chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>método - o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>evento - o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>eventos # # obtenção filtragem e os dados de ordenação de dados é mais poderosa quando pode filtrar os dados de forma dinâmica.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Filtragem é suportada apenas pelo <xref:System.Web.UI.WebControls.ObjectDataSource>controlar se a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método devolve um <xref:System.Data.DataTable>ou <xref:System.Data.DataSet>objeto.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Pode utilizar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>Propriedades para aplicar a filtragem dinâmica para obtenção de dados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Estas propriedades são implementadas pelo objeto ObjectDataSourceView e expostas diretamente pelo respetivo <xref:System.Web.UI.WebControls.ObjectDataSource>controlo para controlos vinculados a dados e os outros chamadores.</xref:System.Web.UI.WebControls.ObjectDataSource>       Pode ordenar os dados que é possível obter com a <xref:System.Web.UI.WebControls.ObjectDataSource>por ordenar os dados na memória depois é obtido.</xref:System.Web.UI.WebControls.ObjectDataSource> A ordenação é suportada apenas pelo <xref:System.Web.UI.WebControls.ObjectDataSource>controlar se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método devolve um <xref:System.Data.DataTable>ou <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>propriedade devolve sempre `true`, porque o ObjectDataSourceView não é possível determinar o tipo é devolvido pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método sem chamar o método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> O <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>sintaxe de propriedade é o mesmo como para um <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>propriedade.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>      ## Controlo de vista de estado a ObjectDataSourceView implementa o <xref:System.Web.UI.IStateManager>interface e utiliza a vista de estado para controlar o respetivo estado em pedidos de página.</xref:System.Web.UI.IStateManager> Implementação do <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>métodos são fornecidos para ativar o controlo de estado de vista para o controlo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> Para obter mais informações, consulte [descrição geral da gestão de estado de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> classe."
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>construtor é chamado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>método para devolver uma nova instância de uma vista de origem de dados com especificado `viewName` parâmetro.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> O <xref:System.Web.UI.WebControls.ObjectDataSource>controlo está associado apenas um <xref:System.Web.UI.WebControls.ObjectDataSourceView>em qualquer altura e atribui sempre a vista `DefaultView`, apesar desta restrição nomenclatura impõe o <xref:System.Web.UI.WebControls.ObjectDataSource>controlo, não o <xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> Pode substituir o <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>método para suportar as vistas de uma convenção de nomenclatura diferentes.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>       O <xref:System.Web.HttpContext>objeto que é transmitido por `context` é utilizado pela vista de origem de dados para objetos de parâmetro de acesso, tais como <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>Propriedades.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "O <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> está associado."
    - id: name
      type: System.String
      description: "Um nome exclusivo para a vista de origem de dados, no âmbito do controlo de origem de dados é a proprietária."
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo suporta a operação de eliminação."
  remarks: "Devolve de propriedade CanDelete `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>propriedade está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Uma operação de eliminação ainda poderá falhar, se todas as propriedades de dados não estão definidas ou que não estão definidas corretamente."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a operação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A eliminação não é suportada, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade é uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo suporta a operação insert."
  remarks: "Devolve de propriedade CanInsert `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>propriedade está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> A operação de inserção ainda poderá falhar, se todas as propriedades de dados não estão definidas ou que não estão definidas corretamente."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a operação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Inserção não é suportada, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade é uma cadeia vazia.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo suporta paginação através dos dados obtidos."
  remarks: "A propriedade CanPage indica se o <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto suporta paginação.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Para obter informações sobre como é suportada paginação, a <xref:System.Web.UI.WebControls.ObjectDataSourceView>consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>valor está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo suporta a obtenção do número total de linhas de dados, além do conjunto de dados."
  remarks: "Devolve de propriedade CanRetrieveTotalRowCount `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>propriedade está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> O método que devolve a contagem deverá devolver o número total de linhas que pode ser do bloco paginado, não é o número de linhas numa página. Controlos vinculados a dados, utilize o número total de linhas paginável para determinar como a composição de controlos de paginação. Por exemplo, quantas botões de paginação numérica para serem compostas num <xref:System.Web.UI.WebControls.GridView>controlar pager.</xref:System.Web.UI.WebControls.GridView> Para obter mais informações sobre o suporte de paginação, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>       A propriedade CanRetrieveTotalRowCount é verificada durante uma chamada para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>método para se certificar de que a origem de dados controlo suporta todas as funcionalidades a pedido, definindo várias <xref:System.Web.UI.DataSourceSelectArguments>Propriedades.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a operação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo suporta uma vista ordenada na origem de dados subjacente."
  remarks: "Porque o <xref:System.Web.UI.WebControls.ObjectDataSource>controlar suporta apenas a ordenação de dados quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método devolve um <xref:System.Data.DataSet>, <xref:System.Data.DataView>, ou <xref:System.Data.DataTable>objeto, o objeto de vista não é possível determinar se a ordenação é suportada até que o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método denomina-se e devolve.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Por este motivo, a propriedade CanSort devolve sempre `true`."
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto que está associado a atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo suporta a operação de atualização."
  remarks: "Devolve de propriedade CanUpdate `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>propriedade está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Uma operação de atualização ainda poderá falhar, se todas as propriedades de dados não estão definidas ou que não estão definidas corretamente."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a operação é suportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A atualização não é suportada se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade é uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que determina como o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo efetua as atualizações e elimina quando os dados numa linha no armazenamento de dados subjacente durante o período de tempo da operação."
  remarks: "A propriedade ConflictDetection determina se os parâmetros para valores antigos e novos são aplicados para o `Update` método. Por exemplo, se o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>propriedade devolve um <xref:System.Data.DataTable>objeto com as colunas `Name` e `Number`, e a propriedade ConflictDetection está definida para o <xref:System.Web.UI.ConflictOptions>valor, são criados os parâmetros para `Name` e `Number` para o `Update` método.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Se a propriedade ConflictDetection estiver definida como o <xref:System.Web.UI.ConflictOptions>valor, são criados com os nomes de parâmetros `Name`, `Number`, `original_Name`, e `original_Name`.</xref:System.Web.UI.ConflictOptions> (O nome exato dos parâmetros para os valores originais depende o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> O <xref:System.Web.UI.WebControls.ObjectDataSourceView>, em seguida, determina se o método que é especificado no <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>propriedade tem parâmetros que correspondem aos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       O controlo de simultaneidade é uma técnica utilizam arquivos de dados para controlar a forma como os dados são ler e alterados no arquivo de quando múltiplos clientes estão a aceder e manipular os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-la a um utilizador, enquanto outro cliente lê os mesmos dados e apresenta-la a um utilizador diferente. Se ambos os atualizar os dados e a submetê-las para o armazenamento de dados, alguns resultado inesperado poderão ocorrer, porque ambos os clientes podem atualizar valores diferentes para os mesmos dados. Isto é considerado um conflito. Ao definir a propriedade de ConflictDetection o <xref:System.Web.UI.ConflictOptions>valor, o `Update` método poderá então comparar os valores antigos e novos para a origem de dados original para detetar conflitos e lidar com os mesmos, conforme necessário.</xref:System.Web.UI.ConflictOptions>       O valor de ConflictDetection propriedade é armazenado na vista de estado."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Um do <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores. A predefinição é o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> valores que são transferidos para uma atualização, inserção ou operação de eliminação são automaticamente convertidos do <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para o <xref href=&quot;System.DBNull.Value&quot;> </xref> valor."
  remarks: "Não converter `null` para o <xref:System.DBNull.Value?displayProperty=fullName>valor pode resultar em erros em tempo de execução.</xref:System.DBNull.Value?displayProperty=fullName> Utilize a propriedade ConvertNullToDBNull para indicar se o <xref:System.Web.UI.WebControls.Parameter>valores que são transferidos para uma atualização, inserção ou uma operação de eliminação são automaticamente convertidos do `null` para o <xref:System.DBNull.Value?displayProperty=fullName>valor.</xref:System.DBNull.Value?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> no <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objetos transmitido para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> é automaticamente convertido a <xref href=&quot;System.DBNull.Value&quot;> </xref> valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome de uma classe que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo utiliza para um parâmetro numa operação de dados. O <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo utiliza a classe especificada em vez do <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objetos que estão em várias coleções de parâmetros."
  remarks: "Em vez de especificar vários parâmetros que são transmitidos para o `Select`, `Update`, `Insert`, e `Delete` métodos, pode criar um objeto que agrega vários itens. Este um objeto é transmitido para os métodos, em vez de vários parâmetros. Para obter mais informações consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "Um nome de classe qualificado total ou parcialmente que identifica o tipo do objeto que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> pode utilizar como um parâmetro para um <> </> *>, <> </> *>, ou <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>operação.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de eliminação ao chamar o método de objecto de negócio que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade utilizando especificado <code> keys </code> e <code> oldValues </code> coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "O valor predefinido é de -1, o que significa que um número de linhas desconhecido foram eliminado. Para devolver um valor diferente, defina o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>processador de eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> O número de linhas afetadas normalmente, é devolvido pelo `Delete` método para o objecto de negócio e de que o valor está disponível a partir de <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>parâmetro do <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>processador de eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       As chamadas de método de eliminar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>método, transmitir o `keys` e `oldValues` coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>dos valores da chave utilizados para identificar o item a eliminar.</xref:System.Collections.IDictionary> Estes parâmetros são utilizados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade para efetuar a operação de eliminação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> Se não existirem sem parâmetros associados com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>que contém os valores de chave não adicionais utilizados para fazer corresponder o item da origem de dados.</xref:System.Collections.IDictionary> Valores de linha são transmitidos para o método apenas se for o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>propriedade está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "O número de linhas eliminadas; caso contrário, -1, se o número não é conhecido."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Processar o evento eliminado para examinar os valores de um valor de retorno e os parâmetros de saída ou para determinar se foi emitida uma exceção após uma <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> O valor de retorno, parâmetros de saída e excepção a processar a propriedades estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da função ou método que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> invoca o objeto para eliminar dados."
  remarks: "O método que é identificado pela propriedade DeleteMethod pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se se tratar de um método de instância, o objecto de negócio é criado e destruído sempre que o método especificado pela propriedade DeleteMethod é chamado. Pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>eventos para trabalhar com o objecto de negócio antes de é chamado o método especificado pela propriedade DeleteMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Também pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento é desencadeado depois do método especificado pela propriedade DeleteMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> Se o método for um `static` (`Shared` no Visual Basic) método, o objecto de negócio nunca é criado e não consegue processar estes eventos.       Se a empresas de objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource>controlo funciona com implementa mais de um método ou uma função com o mesmo nome (sobrecargas do método), o controlo de origem de dados tenta invocar um correto, de acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>coleção não correspondem da assinatura de método DeleteMethod, a origem de dados emite uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       O valor de DeleteMethod propriedade é armazenado na vista de estado.       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> utiliza para eliminar dados. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "Nomes e tipos de parâmetros que estão contidos na coleção DeleteParameters tem de corresponder ao nomes e tipos de parâmetros que são o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>assinatura de propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Os nomes de parâmetro são afetados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>propriedade e são sensíveis a maiúsculas e minúsculas.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Ao trabalhar com controlos vinculados a dados que fornecem parâmetros, tais como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, a <xref:System.Web.UI.WebControls.ObjectDataSource>controlo intercala automaticamente os parâmetros que são ou não explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controlo vinculado a dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Processar o evento de eliminação para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controlo efetua a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção que é acedida pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, o que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o controlo de origem de dados suporta paginação através do conjunto de dados que obtém."
  remarks: "Paginação pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView>controlo é processado através da definição EnablePaging, <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>Propriedades do <xref:System.Web.UI.WebControls.ObjectDataSourceView>e definir um `Select` método no objecto de negócio com os parâmetros adequados.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Quando a propriedade EnablePaging está definida como `true`, a <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção inclui dois parâmetros adicionais para a primeira linha pedida e o número de linhas pedida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> Estes dois parâmetros são denominados conforme definido pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>Propriedades.</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> O `Select` método deverá devolver o número solicitado de linhas que começa no índice especificado. Porque os dados não podem dividir uniformemente pelo tamanho da página, a última página poderá conter menos linhas. Assim, o número de linhas pedida é, na verdade, o número máximo de linhas que são devolvidos.       O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>propriedade está marcada durante uma chamada para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>método para se certificar de que a origem de dados controlo suporta todas as funcionalidades a pedido, definindo várias <xref:System.Web.UI.DataSourceSelectArguments>Propriedades.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>       Quando estiver ativada a paginação no controlo associado vinculados a dados, o controlo vinculado a dados chama o `Select` método com o índice inicial e o número de linhas que são necessárias. Além disso, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>for definida, o controlo vinculado a dados chama o método antes de composição de controlos de paginação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> Por exemplo, se um <xref:System.Web.UI.WebControls.GridView>controlo tem a paginação ativada com um tamanho de página de 5 e o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>método devolve 20, 4 apenas páginas são apresentadas no pager.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       O valor de EnablePaging é propriedade armazenado na vista de estado."
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o controlo de origem de dados suporta paginação através dos dados obtém; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de eliminação com a <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>método e especificado <code> keys </code> e <code> oldValues </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteDelete herdado para eliminar dados de um arquivo de dados subjacente, utilizando um objecto de negócio.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteDelete diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       Antes da operação de eliminação é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>método é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>       Para efetuar uma operação de eliminação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>utiliza reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>associados a propriedade e quaisquer parâmetros de `keys` e `oldValues` coleções e, em seguida, executa a mesma.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> Pode processar este evento para examinar os valores de retorno e códigos de erro e efetuar qualquer processamento posterior ao."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>de parâmetros utilizados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade para efetuar a operação de eliminação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> </xref:System.Collections.IDictionary> Se não existirem sem parâmetros associados com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>que contém valores de linha são avaliados apenas se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>propriedade está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "O número de linhas eliminadas; caso contrário, -1, se o número não é conhecido. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>propriedade devolve <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>propriedade está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor e não existem valores são transmitidos a <code> oldValues </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de inserção ao chamar o método de objecto de negócio que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade utilizando especificado <code> values </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteInsert herdado para inserir dados de um arquivo de dados subjacente, utilizando um objecto de negócio.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteInsert diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Antes que seja efetuada a inserção, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>método é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Para efetuar uma operação de inserção, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>controlo utiliza reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>associados a propriedade e quaisquer parâmetros que estão no `values` coleção e, em seguida, executa a mesma.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> Pode processar este evento para examinar os valores de retorno, códigos de erro e efetuar qualquer processamento posterior ao.       Para obter mais informações sobre a devolver o número de linhas inseridas, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>de parâmetros utilizados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade para efetuar a operação de inserção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Se não existirem sem parâmetros associados com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas inseridas; caso contrário, -1, se o número não é conhecido. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>propriedade devolve <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou estar vazio."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém dados a partir do objeto que é identificado pelo <> </> *> propriedade ao chamar o método que é identificada pelo <> </> *> propriedade e transmitir quaisquer valores no <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteSelect herdado obter dados através de um objecto de negócio.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteSelect diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       O método especificado pode ter qualquer assinatura do método, mas tem de devolver um dos tipos para o <xref:System.Web.UI.WebControls.ObjectDataSource>controlo que estão listados na seguinte tabela para chamá-lo com êxito.</xref:System.Web.UI.WebControls.ObjectDataSource>      | Tipo de retorno | Ação |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| O <xref:System.Collections.IEnumerable>é devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| Um <xref:System.Data.DataView>é criado utilizando o <xref:System.Data.DataTable>e devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| O primeiro <xref:System.Data.DataTable>o <xref:System.Data.DataSet>é extraído e um <xref:System.Data.DataView>é criado e será devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| O objeto é moldado num elemento de um <xref:System.Collections.IEnumerable>e devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       Antes que seja efetuada a obtenção de dados, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes de uma operação.       Para efetuar uma operação de seleção, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>controlo utiliza reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>associados a propriedade e quaisquer parâmetros que estão no <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção e, em seguida, executa a mesma.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> Pode processar este evento para examinar os valores de retorno e códigos de erro e efetuar qualquer processamento posterior ao.       Se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método devolve um <xref:System.Data.DataSet>objeto e a colocação em cache está ativada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>obtém dados a partir do e guarda dados para a cache durante a operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> A cache é criada, rejeitados ou atualizada com base no comportamento de colocação em cache que é especificado pela combinação da <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>Propriedades.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       Se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método devolve um <xref:System.Data.DataSet>objeto e um <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>propriedade foi especificada, é avaliado juntamente com qualquer fornecido <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>Propriedades e o filtro resultante é aplicada à lista de dados durante a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       Para obter informações sobre a devolver o número de linhas selecionado, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> utilizado para operações de pedido nos dados para além de obtenção de dados básica."
    return:
      type: System.Collections.IEnumerable
      description: "A <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de atualização ao chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade e utilizando os parâmetros que são fornecidos no <code> keys </code>, <code> values </code>, ou <code> oldValues </code> coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteUpdate herdado para atualizar os dados através de um objecto de negócio.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os programadores de página e autores de controlo vinculado a dados não chamam o método ExecuteUpdate diretamente; em alternativa, utilize publicamente expostas <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       Os valores que estão contidos no `keys` e `values` coleções são avaliadas e intercaladas com os valores que estão contidos pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> Se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>propriedade está definida como o <xref:System.Web.UI.ConflictOptions>valor, os valores que estão contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>propriedade e são também Unidas.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       Antes da operação de atualização é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> Pode processar este evento para examinar os valores dos parâmetros e efetuar qualquer pré-processamentos antes de uma atualização. Para efetuar uma operação de atualização, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>utiliza reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>associados a propriedade e quaisquer parâmetros de `keys` coleção e, em seguida, executa a mesma.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>método é denominado para aumentar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>eventos.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> Pode processar este evento para examinar os valores de retorno, códigos de erro e efetuar qualquer processamento posterior ao.       Para obter mais informações sobre a devolver o número de linhas atualizar, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>de chaves primárias para utilizar com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade para efetuar a operação de base de dados de atualização.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Se não houver nenhuma chaves associadas com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>de valores a ser utilizado com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>para efetuar a operação de base de dados de atualização.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Se não existirem sem parâmetros associados com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>que representa os valores originais no arquivo de dados subjacente.</xref:System.Collections.IDictionary> Se não existirem sem parâmetros associados à consulta, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas atualizada; ou -1, se o número não é conhecido. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>propriedade devolve <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma expressão de filtragem que é aplicada quando o método de objecto de negócio que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>denomina-se a propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSource>controlo suporta filtragem dados apenas quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método devolve um <xref:System.Data.DataSet>, <xref:System.Data.DataView>, ou <xref:System.Data.DataTable>objeto.</xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       A sintaxe que é utilizada para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade é uma expressão de cadeia-estilo de formato.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> A sintaxe de expressão do filtro é a mesma sintaxe que é aceite pelo <xref:System.Data.DataView.RowFilter%2A>propriedade porque a expressão de filtro é aplicada ao <xref:System.Data.DataView.RowFilter%2A>propriedade o <xref:System.Data.DataView>objeto é devolvido execução o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> (Para obter mais informações, consulte <xref:System.Data.DataColumn.Expression%2A>.)</xref:System.Data.DataColumn.Expression%2A> Se adicionar parâmetros a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>coleção, também pode incluir marcadores de cadeia de formato, por exemplo `&quot;{0}&quot;`, a expressão para substituir para os valores de parâmetros.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Os marcadores de posição são substituídas, de acordo com o índice do parâmetro no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       Pode incluir parâmetros no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Se o tipo do parâmetro é um tipo de cadeia ou caráter, coloque o parâmetro entre plicas. As aspas não são necessários se o parâmetro for um tipo numérico. A <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>coleção contém os parâmetros que são avaliados para os marcadores de posição foi encontrados no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       O valor de FilterExpression propriedade é armazenado na vista de estado.      > [!IMPORTANT] > É recomendado que valide qualquer valor de parâmetro de filtro que recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro para a expressão de filtro e aplica-se de que o <xref:System.Data.DataView>objeto é devolvido pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se estiver a utilizar o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade como medida de segurança para limitar o número de itens que são devolvidos, é necessário validar os valores de parâmetros antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa uma expressão de filtro aplicada quando os dados são obtidos utilizando o método de objecto de negócio identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade FilterExpression foi definida e o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>método não devolver um <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de filtro."
  remarks: "Processar o <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>eventos para efetuar operações de validação nos valores de parâmetros de filtro antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controlo executa uma operação de filtro.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> Pode cancelar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operação definindo a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>object `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> O evento é gerado apenas se o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade está definida.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).      > [!IMPORTANT] > Deve validar qualquer valor de parâmetro de filtro que recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro para a expressão de filtro e aplica-se de que o <xref:System.Data.DataView>objeto é devolvido pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se estiver a utilizar o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade como medida de segurança para limitar o número de itens que são devolvidos, é necessário validar os valores de parâmetros antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de parâmetros que estão associados a quaisquer marcadores de posição do parâmetro que se encontrem no <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>cadeia.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSource>controlo suporta filtragem dados apenas quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método devolve um <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>objeto.</xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Os parâmetros da coleção de FilterParameters estão associados a quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Os marcadores de posição do parâmetro estão especificados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>propriedade são correspondidas para objetos de parâmetro na coleção FilterParameters quando o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>denomina-se a propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém um conjunto de parâmetros associados a quaisquer marcadores de posição do parâmetro encontrados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <> </> *> propriedade foi definida e o <> </> *> método não devolver um <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de inserção ao chamar o método de objecto de negócio que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade utilizando especificado <code> values </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "O valor de retorno predefinido é de -1, o que significa que foram inserido um número de linhas desconhecido. Para devolver um valor diferente, defina o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> O número de linhas afetadas normalmente, é devolvido pelo `Insert` método para o objecto de negócio e de que o valor está disponível a partir o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       As chamadas de método Insert o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>método, transmitir o `values` coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>coleção de parâmetros utilizados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade para efetuar a operação de inserção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Se não existirem sem parâmetros associados com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas inseridas; caso contrário, -1, se o número não é conhecido."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>propriedade devolve <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Processar o evento de Inserted para examinar os valores de um valor de retorno e os parâmetros de saída ou para determinar se foi emitida uma exceção após uma <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> O valor de retorno, parâmetros de saída e excepção a processar a propriedades estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Processar o evento de Inserting para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controlo efetua a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção que é acedida pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, o que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da função ou método que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> invoca o objeto a inserir dados."
  remarks: "O método que é identificado pela propriedade InsertMethod pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se se tratar de um método de instância, o objecto de negócio é criado e destruído sempre que o método especificado pela propriedade InsertMethod é chamado. Pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>eventos para trabalhar com o objecto de negócio antes de é chamado o método especificado pela propriedade InsertMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Também pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento é desencadeado depois do método especificado pela propriedade InsertMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` denomina-se, apenas se o objecto de negócio implementa o <xref:System.IDisposable>interface.)</xref:System.IDisposable> Se o método for um `static` (`Shared` no Visual Basic) método, o objecto de negócio nunca é criado e não consegue processar estes eventos.       Se a empresas de objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource>objeto implementa mais do que um método ou uma função com o mesmo nome (sobrecargas do método), o controlo de origem de dados tenta invocar um correto, de acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>coleção não correspondem do método especificado pela assinatura de propriedade InsertMethod, a origem de dados emite uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       O valor de InsertMethod propriedade é armazenado na vista de estado.       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> utiliza para inserir dados. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "Nomes e tipos de parâmetros que estão contidos na coleção de coleção InsertParameters tem de corresponder ao nomes e tipos de parâmetros que são o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>assinatura de propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Ao trabalhar com controlos vinculados a dados que fornecem parâmetros, tais como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, a <xref:System.Web.UI.WebControls.ObjectDataSource>controlo intercala automaticamente os parâmetros que são ou não explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controlo vinculado a dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto está a guardar as alterações para o estado de vista."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a vista de origem de dados está marcada para guardar Estado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restauros anteriormente guardado o estado de visualização para a vista de origem de dados."
  remarks: "Este método é utilizado principalmente pela infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código.  No entanto, os programadores do controlo podem substituir este método para especificar a forma como um controlo de servidor personalizado restaura o estado de visualização. Para obter mais informações, consulte [descrição geral da gestão de estado de ASP.NET](~/add/includes/ajax-current-ext-md.md).       O método LoadViewState restaura as informações de estado de visualização para o <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto num pedido de página anterior, que foi guardado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objecto que representa o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do parâmetro do método de obtenção de dados que é utilizado para indicar o número de registos para obter suporte de paginação de origem de dados."
  remarks: "A propriedade MaximumRowsParameterName é utilizada para suportar a paginação da origem de dados. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>       O valor de MaximumRowsParameterName propriedade é armazenado na vista de estado."
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "O nome do parâmetro do método utilizado para indicar o número de registos a obter. A predefinição é `&quot;maximumRows&quot;`."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre depois do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto cria uma instância do tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Processar o evento de ObjectCreated chamar outros métodos do objeto de negócio, defina as propriedades, ou para efetuar outra inicialização que é específica para o objecto de negócio antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controlar chamadas a `Data` métodos para o objecto de negócio.</xref:System.Web.UI.WebControls.ObjectDataSource> Uma referência para o objeto é acedida pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>propriedade, o que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Se o método que é identificado para efetuar a operação de dados é `static` (`Shared` no Visual Basic), o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>e eventos de ObjectCreated nunca são gerados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto cria uma instância do tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSource>controlo automaticamente chama o construtor predefinido de um objecto de negócio para criar e a instância do mesmo utilizando reflexão.</xref:System.Web.UI.WebControls.ObjectDataSource> Processar o evento de ObjectCreating explicitamente chamar outro construtor e definir a instância do objeto que os resultados à <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>propriedade associada <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Se o método que é identificado para efetuar a operação de dados é `static` (`Shared` no Visual Basic), o ObjectCreating e <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>eventos nunca são gerados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto elimina uma instância de um objeto que foi criado."
  remarks: "O evento ObjectDisposing é desencadeado antes da instância do objecto de negócio é rejeitada. Se o objecto de negócio implementa o <xref:System.IDisposable>interface, o <xref:System.IDisposable.Dispose%2A>método for chamado depois de ObjectDisposing o evento é gerado.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       Processe o evento de ObjectDisposing para chamar outros métodos no objeto e definir as propriedades ou para efetuar a limpeza que é específica para o objeto antes do objeto é destruído. Uma referência para o objeto é acedida pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>propriedade, o que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Se o método que é identificado para efetuar a operação de dados é `static` (`Shared` no Visual Basic), o evento de ObjectDisposing nunca é gerado."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma cadeia de formato para aplicar os nomes dos parâmetros para os valores originais, que são transmitidos para o <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> métodos."
  remarks: "A cadeia de formato corresponda à OldValuesParameterFormatString é aplicada ao chaves primárias apenas, tais como as que são identificados com o `DataKeyNames` propriedade de um controlo vinculado a dados ou na elimine e atualizar cenários, onde o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>propriedade está definida como o <xref:System.Web.UI.ConflictOptions>valor e o conjunto de valores originais, que são transmitidos para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       Dois cenários comuns, onde poderá alterar a propriedade corresponda à OldValuesParameterFormatString são os seguintes: - para diferenciar entre valores antigos e novos nas atualizações. Quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>propriedade está definida como o <xref:System.Web.UI.ConflictOptions>valor parâmetros para ambos os valores originais e novos são adicionados para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> Sem a cadeia de formatação, os dois parâmetros com o mesmo nome seriam possível criar para cada campo de dados. Ao alterar o nome do parâmetro de valor original, pode comparar os dados para a origem de dados original para detetar conflitos e comparar os valores da chave.      -Algumas designers visual implementam um esquema de nomenclatura específico para as chaves e valores originais.       O valor da corresponda à OldValuesParameterFormatString é armazenado no estado de visualização."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa uma cadeia de formato aplicada aos nomes de qualquer <code> oldValues </code> transmitido para o <> </> *> ou <> </> *> método. A predefinição é &quot;{0}&quot;, que significa que o nome do parâmetro é simplesmente o nome do campo."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto foi concluída uma operação de eliminação."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleted também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de eliminação."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleting também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de filtragem."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnFiltering também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto foi concluída uma operação de inserção."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserted também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de inserção."
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>se chama o método, apenas se o método que é identificado para efetuar a operação de dados não é `static` (`Shared` no Visual Basic).</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserting também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> cria uma instância do objeto que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "O método OnObjectCreated é chamado, apenas se o método que é identificado para efetuar a operação de dados não é `static` (`Shared` no Visual Basic).       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>       O método OnObjectCreated também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto cria uma instância de um objecto de negócio para efetuar uma operação de dados."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnObjectCreating também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto rejeita um tipo com instâncias."
  remarks: "O OnObjectDisposing é chamado quando a instância de um objeto que foi criada para efetuar uma operação de dados é rejeitada. O `Dispose` se chama o método, apenas se o tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>propriedade implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnObjectDisposing também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto foi concluída uma operação de obtenção de dados."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelected também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de obtenção de dados."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelecting também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;> </xref> eventos depois do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto foi concluída uma operação de atualização."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnUpdated também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;> </xref> eventos antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de atualização."
  remarks: "Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnUpdating também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um ou define um valor que indica as informações de cultura são utilizadas quando converter valores de cadeia para tipos de propriedade real para construir um objeto do tipo indicado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "As informações de cultura. O valor predefinido é <xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Guarda as alterações para o estado de visualização para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto desde a hora quando a página foi publicada para o servidor."
  remarks: "O método SaveViewState é principalmente utilizado pelos programadores do controlo.       Vista de estado é a acumulação dos valores de propriedades de um controlo de servidor. Estes valores são automaticamente colocados na <xref:System.Web.UI.Control.ViewState%2A>propriedade para o controlo de servidor, que é uma instância de <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> O <xref:System.Web.UI.Control.ViewState%2A>valor, em seguida, é mantido um objeto string após a fase de guardar estado de ciclo de vida de controlo do servidor.</xref:System.Web.UI.Control.ViewState%2A>       Quando for guardado o estado de visualização, ver o conteúdo de estado é devolvido ao cliente como uma variável que está armazenada num HTML `Hidden` elemento. Quando cria os controlos de servidor personalizado, pode melhorar a eficiência ao substituir o método SaveViewState e modificar o `ViewState` propriedade para o controlo de servidor. Para obter mais informações, consulte [descrição geral da gestão de estado de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> Ver estado; caso contrário <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não houver nenhuma vista de estado associada ao objeto."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém dados a partir do objeto que é identificado pelo <> </> *> propriedade ao chamar o método que é identificada pelo <> </> *> propriedade e transmitir quaisquer valores no <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "As chamadas de método Select o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>transmitir o `arguments` parâmetro.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> utilizado para operações de pedido nos dados para além de obtenção de dados básica."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <code> arguments </code> transmitido para selecionar o método especificar que a origem de dados deve efetuar algumas tarefas adicionais ao obter dados para ativar a paginação ou ordenação através dos dados obtidos, mas o controlo de origem de dados não suporta a capacidade de pedido."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da função ou método que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> controlo invoca para obter uma contagem de linhas."
  remarks: "O SelectCountMethod identifica um método de objecto de negócio que é utilizado para obter uma contagem de total de linhas para suportar a paginação da origem de dados. A propriedade SelectCountMethod é avaliada apenas se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>propriedade está definida como `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> Para obter informações sobre como é suportada paginação, a <xref:System.Web.UI.WebControls.ObjectDataSourceView>consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       O valor de SelectCountMethod propriedade é armazenado na vista de estado."
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> utiliza para obter uma contagem de linhas. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando foi concluída uma operação de obtenção de dados."
  remarks: "Processe o evento de selecionados para examinar os valores de um valor de retorno e os parâmetros de saída ou para determinar se foi emitida uma exceção após uma operação de obtenção de dados foi concluída. O valor de retorno, parâmetros de saída e excepção a processar a propriedades estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de obtenção de dados."
  remarks: "Processar o evento Selecting para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controlo efetua a operação de obtenção de dados.</xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção que é acedida pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, o que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da função ou método que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> controlo invoca para obter dados."
  remarks: "O método especificado pode ter qualquer assinatura do método mas tem de devolver um dos tipos listados na seguinte tabela para que o controlo de <xref:System.Web.UI.WebControls.ObjectDataSource>chamá-lo com êxito | Tipo de retorno | Ação |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| O <xref:System.Collections.IEnumerable>é devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| Um <xref:System.Data.DataView>é criado utilizando o <xref:System.Data.DataTable>e devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| O primeiro <xref:System.Data.DataTable>o <xref:System.Data.DataSet>é extraído e um <xref:System.Data.DataView>é criado e será devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| O objeto é moldado num elemento de um <xref:System.Collections.IEnumerable>e devolvido pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       O método que é identificado pela propriedade SelectMethod pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSource> Se se tratar de um método de instância, o objecto de negócio é criado e destruído sempre que o método SelectMethod é chamado. Pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>eventos para trabalhar com o objecto de negócio antes de é chamado o método especificado pela propriedade SelectMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Também pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento é desencadeado depois do método especificado pela propriedade SelectMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` denomina-se apenas se o objecto de negócio implementa o <xref:System.IDisposable>interface.)</xref:System.IDisposable> Se o método for um `static` (`Shared` no Visual Basic) método, o objecto de negócio nunca é criado e não consegue processar estes eventos.       Se a empresas de objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource>controlo funciona com implementa mais de um método ou uma função com o mesmo nome (sobrecargas do método), o controlo de origem de dados tenta invocar um correto, de acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção não correspondem da assinatura do método especificado pela propriedade SelectMethod, a origem de dados emite uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> utiliza para obter dados. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "Nomes e tipos de parâmetros que estão contidos na coleção SelectParameters só tem de corresponder ao nomes e tipos de parâmetros que são o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>assinatura de propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Ao trabalhar com controlos vinculados a dados que fornecem parâmetros, tais como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, a <xref:System.Web.UI.WebControls.ObjectDataSource>controlo intercala automaticamente os parâmetros que são ou não explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controlo vinculado a dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do parâmetro do método de obtenção de dados que é utilizado para especificar uma expressão de ordenação para a origem de dados que suporte a ordenação."
  remarks: "A propriedade SortParameterName é utilizada para suportar a ordenação de origem de dados. Quando um <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>propriedade está definida no <xref:System.Web.UI.DataSourceSelectArguments>objeto e transmitidos para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método, a propriedade SortParameterName identifica o nome do parâmetro do método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>propriedade do objeto de negócio que aceita o valor da expressão de ordenação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       O valor da SortParameterName propriedade é armazenado na vista de estado."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "O nome do parâmetro do método utilizado para indicar o parâmetro que aceite este valor da expressão de ordenação. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do parâmetro de método de obtenção de dados que é utilizado para indicar o índice de números inteiros do primeiro registo para obter resultados definido para o suporte de paginação de origem de dados."
  remarks: "A propriedade StartRowIndexParameterName tem de ser definida para ativar a paginação. Para obter informações sobre como é suportada paginação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       O valor de StartRowIndexParameterName propriedade é armazenado na vista de estado."
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "O nome do parâmetro de método do objeto de negócio utilizado para indicar o primeiro registo obter. A predefinição é &quot;startRowIndex&quot;."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a vista de origem de dados está marcada para guardar Estado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte &lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida para um <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objecto que representa o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte &lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida para um <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> Ver estado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição deste membro, consulte &lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida para um <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Faz com que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto controlar as alterações ao estado de visualização para que as alterações podem ser armazenadas no <xref:System.Web.UI.Control.ViewState*>objeto para o controlo e persistentes através de pedidos para a mesma página.</xref:System.Web.UI.Control.ViewState*>"
  remarks: "O método TrackViewState é principalmente utilizado pelos programadores do controlo."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da classe que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlar representa."
  remarks: "Para criar uma instância do objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource>controlo está vinculado a, o controlo utiliza reflexão para carregar o tipo que é identificado pelo nome do tipo em tempo de execução.</xref:System.Web.UI.WebControls.ObjectDataSource> Por conseguinte, o valor da propriedade TypeName pode ser um tipo parcialmente qualificado para o código que está localizado no diretório Bin ou App_Code ou um nome de tipo totalmente qualificado para o código que está registado na global assembly cache. Se utilizar a cache de assemblagem global, tem de adicionar a referência adequada para o `assemblies` secção do ficheiro de configuração Machine. config ou Web. config."
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "Um nome de classe qualificado total ou parcialmente que identifica o tipo do objeto que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> representa. A predefinição é uma cadeia vazia."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Efetua uma operação de atualização ao chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade e utilizando os parâmetros que são fornecidos no <code> keys </code>, <code> values </code>, ou <code> oldValues </code> coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "O valor de retorno predefinido é de -1, o que significa que um número de linhas desconhecido foram atualizado. Para devolver um valor diferente, defina o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> O número de linhas afetadas normalmente, é devolvido pelo `Update` método para o objecto de negócio e de que o valor está disponível a partir o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>parâmetro do <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       As chamadas de método de atualização de <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>método, transmitir o `keys`, `values`, e `oldValues` parâmetros.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>dos valores da chave utilizados para identificar o item a atualizar.</xref:System.Collections.IDictionary> Estes parâmetros são utilizados com o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade para efetuar a operação de atualização.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Se não existirem sem parâmetros associados com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>de novos valores para aplicar à origem de dados.</xref:System.Collections.IDictionary> Estes parâmetros são utilizados com o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade para efetuar a operação de base de dados de atualização.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Se não existirem sem parâmetros associados com o método, transmitir <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>que contém os valores de chave não adicionais utilizados para fazer corresponder o item da origem de dados.</xref:System.Collections.IDictionary> Valores de linha são transmitidos para o método delete, apenas se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>propriedade está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "O número de linhas atualizada; caso contrário, -1, se o número não é conhecido."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Processar o evento de atualizada para examinar os valores de um valor de retorno e os parâmetros de saída ou para determinar se foi emitida uma exceção após uma <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> O valor de retorno, parâmetros de saída e excepção a processar a propriedades estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado ao evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da função ou método que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto invoca para atualizar os dados."
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto parte do princípio de que o método que é identificado pela propriedade UpdateMethod efetua as atualizações de um cada vez, em vez de num batch.</xref:System.Web.UI.WebControls.ObjectDataSourceView>       O método pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se se tratar de um método de instância, o objecto de negócio é criado e destruído sempre que o método especificado pela propriedade UpdateMethod é chamado. Pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>eventos para trabalhar com o objecto de negócio antes de é chamado o método especificado pela propriedade UpdateMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Também pode processar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento é desencadeado depois do método UpdateMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` denomina-se, apenas se o objecto de negócio implementa o <xref:System.IDisposable>interface.)</xref:System.IDisposable> Se o método for um `static` (`Shared` no Visual Basic) método, o objecto de negócio nunca é criado e não consegue processar estes eventos.       Se a empresas de objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource>objeto funciona com implementa mais de um método ou uma função com o mesmo nome (sobrecargas do método), o controlo de origem de dados tenta invocar um correto, de acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção não correspondem da assinatura do método especificado pela propriedade UpdateMethod, a origem de dados emite uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>       O valor de UpdateMethod propriedade é armazenado na vista de estado."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> utiliza para atualizar os dados. A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são utilizados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "Nomes e tipos de parâmetros que estão contidos na coleção UpdateParameters tem de corresponder ao nomes e tipos de parâmetros que são o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>assinatura de propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Os nomes de parâmetro são afetados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>propriedade e são sensíveis a maiúsculas e minúsculas.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Ao trabalhar com controlos vinculados a dados que fornecem parâmetros, tais como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, a <xref:System.Web.UI.WebControls.ObjectDataSource>controlo intercala automaticamente os parâmetros que são ou não explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controlo vinculado a dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros utilizados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Processar o evento de atualização para efetuar operações de inicialização adicionais que são específicas da aplicação, para validar os valores de parâmetros, ou alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controlo efetua a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção, acedida pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, o que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
