### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Tracking.TrackingService
  id: TrackingService
  children:
  - System.Workflow.Runtime.Tracking.TrackingService.#ctor
  - System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  - System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  - System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  - System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  - System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  langs:
  - csharp
  name: TrackingService
  nameWithType: TrackingService
  fullName: System.Workflow.Runtime.Tracking.TrackingService
  type: Class
  summary: "Fornece a interface básica entre um serviço de controlo e a infraestrutura de controlo do tempo de execução."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Um serviço de controlo é responsável por fornecer canais de controlo e perfis de controlo para o motor de tempo de execução do fluxo de trabalho. O motor de tempo de execução do fluxo de trabalho pedidos um <xref:System.Workflow.Runtime.Tracking.TrackingChannel>de um serviço de controlo para cada instância de fluxo de trabalho para o qual tem um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.TrackingChannel> O motor de tempo de execução do fluxo de trabalho utiliza este <xref:System.Workflow.Runtime.Tracking.TrackingChannel>para enviar registos de controlo associado essa instância de fluxo de trabalho.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> A <xref:System.Workflow.Runtime.Tracking.TrackingProfile>contém pontos de controlar que especifique um conjunto de eventos para o qual a infraestrutura de controlo do tempo de execução deve enviar registos de controlo de controlo.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> A <xref:System.Workflow.Runtime.Tracking.TrackingProfile>também pode especificar a dados a ser extraído da instância de fluxo de trabalho quando ocorre um destes eventos de controlo.</xref:System.Workflow.Runtime.Tracking.TrackingProfile>       A infraestrutura de controlo do tempo de execução utiliza um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>ao emitidos por uma instância de fluxo de trabalho de eventos de controlo de filtro.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Quando um evento de controlo é emitido a que corresponda a um ponto de registo no <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, a infraestrutura de controlo do tempo de execução extrai dados especificados no <xref:System.Workflow.Runtime.Tracking.TrackingProfile>da instância de fluxo de trabalho e encapsula este dados e as informações sobre o evento de rastreio num registo de controlo.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.TrackingProfile> Este registo de controlo, em seguida, é enviado através de <xref:System.Workflow.Runtime.Tracking.TrackingChannel>associada com a instância de fluxo de trabalho.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> Um registo de controlo pode ser um dos seguintes tipos: <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord> <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord> <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>a aplicação de anfitrião pode utilizar o registo de controlo de qualquer forma que escolhe.</xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>       </xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>       </xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord> Por exemplo, a aplicação de anfitrião pode armazenar as informações de controlo numa base de dados e utilizá-lo para implementar uma interface de utilizador sofisticadas, ou pode utilizar as informações para informar o administrador de uma condição que necessita de qualquer ação. Pode registar um serviço de controlo com o motor de tempo de execução do fluxo de trabalho chamando <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=fullName>ou, incluindo a entrada adequada no ficheiro de configuração de aplicação.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=fullName>       Todos os serviços de controlo tem de herdar da classe abstrata TrackingService. Esta classe define a interface básica entre um serviço de controlo e a infraestrutura de controlo do tempo de execução. Os pedidos de motor de tempo de execução do fluxo de trabalho uma <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para uma instância de fluxo de trabalho específico ou um fluxo de trabalho <xref:System.Type>chamando um do sobrecarregado <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A>métodos ou <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>método.</xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> </xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile> O motor de tempo de execução do fluxo de trabalho chama <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A>para pedir um <xref:System.Workflow.Runtime.Tracking.TrackingChannel>.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> </xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A>       O tempo de execução de chamadas de controlo de fluxo de trabalho a <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A>e <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>métodos sempre que uma instância de fluxo de trabalho é criada ou carregada a partir do arquivo de persistência.</xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> </xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> A sobrecarga associada a essas chamadas pode ser dispendiosa para o serviço de controlo (muitas bases de dados chamadas, por exemplo). Pode implementar a <xref:System.Workflow.Runtime.Tracking.IProfileNotification>interface no seu serviço de controlo, para contornar este mecanismo de chamadas e utilizar eventos para notificar o motor de runtime do fluxo de trabalho de alterações a um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.IProfileNotification> Para controlar os serviços que implementa o <xref:System.Workflow.Runtime.Tracking.IProfileNotification>interface, o motor de tempo de execução do fluxo de trabalho subscreve o <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated>e <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved>eventos.</xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved> </xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> </xref:System.Workflow.Runtime.Tracking.IProfileNotification> O serviço de controlo pode aumentar o evento adequado quando ocorre uma alteração a um dos seus perfis de controlo. O <xref:System.Workflow.Runtime.Tracking.SqlTrackingService>classe implemente esta interface.</xref:System.Workflow.Runtime.Tracking.SqlTrackingService>       As chamadas de motor de tempo de execução do fluxo de trabalho a <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A>método para testar se um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>foi atualizado ou removido devido a uma chamada explícita por um anfitrião ou um serviço para <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A>numa instância de fluxo de trabalho.</xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> </xref:System.Workflow.Runtime.Tracking.TrackingProfile> </xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> Este processo permite que um anfitrião ou serviço alterar dinamicamente o perfil de controlo que está a ser utilizado para uma instância de fluxo de trabalho específico."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TrackingService()
  nameWithType: TrackingService.TrackingService()
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TrackingService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Quando implementada numa classe derivada, inicializa uma nova instância do <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingService&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following example shows how to create a new instance of a `TerminationTrackingService` object, of a type that derives from `TrackingService`. This sample is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#111](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#111)]\n [!code-vb[WF_Samples#111](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#111)]"
  syntax:
    content: protected TrackingService ();
    parameters: []
  overload: System.Workflow.Runtime.Tracking.TrackingService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  id: GetProfile(System.Guid)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetProfile(Guid)
  nameWithType: TrackingService.GetProfile(Guid)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Tem de ser substituído na classe derivada e quando implementada, devolve o perfil de controlo para a instância de fluxo de trabalho especificado."
  remarks: "Um serviço de controlo é responsável por gerir os perfis de controlo disponíveis para os tipos de fluxo de trabalho específico e instâncias de fluxo de trabalho específico. Pode implementar este gestão na forma que achar mais que escolher. Por exemplo, pode devolver o mesmo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para cada fluxo de trabalho <xref:System.Type>e instância de fluxo de trabalho; ou gerir um arquivo sofisticado de controlar perfis referenciadas por instância de fluxo de trabalho, fluxo de trabalho <xref:System.Type>e <xref:System.Version>.</xref:System.Version> </xref:System.Type> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile>"
  example:
  - "The following example shows an implementation of the `GetProfile` method. In this example, several overloads of the `GetProfile` method call a single private `GetProfile` method, which returns a hard-coded, default tracking profile. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#115](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#115)]\n [!code-vb[WF_Samples#115](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#115)]"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);
    parameters:
    - id: workflowInstanceId
      type: System.Guid
      description: "O <xref:System.Guid>da instância do fluxo de trabalho.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "O perfil de controlo para a instância de fluxo de trabalho especificado."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  id: GetProfile(System.Type,System.Version)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetProfile(Type,Version)
  nameWithType: TrackingService.GetProfile(Type,Version)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Type,Version)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Tem de ser substituído na classe derivada e quando implementada, devolve o perfil de controlo, qualificado por versão, para o fluxo de trabalho especificado <xref:System.Type>.</xref:System.Type>"
  remarks: "Um serviço de controlo é responsável por gerir os perfis de controlo disponíveis para os tipos de fluxo de trabalho específico e instâncias de fluxo de trabalho específico. Pode implementar este gestão na forma que achar mais que escolher. Por exemplo, pode devolver o mesmo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para cada fluxo de trabalho <xref:System.Type>e instância de fluxo de trabalho; ou gerir um arquivo sofisticado de controlar perfis referenciadas por instância de fluxo de trabalho, fluxo de trabalho <xref:System.Type>e <xref:System.Version>.</xref:System.Version> </xref:System.Type> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile>"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>do fluxo de trabalho.</xref:System.Type>"
    - id: profileVersionId
      type: System.Version
      description: "O <xref:System.Version>do perfil de controlo.</xref:System.Version>"
    return:
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "O perfil de controlo para o tipo de fluxo de trabalho especificado."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  id: GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetTrackingChannel(TrackingParameters)
  nameWithType: TrackingService.GetTrackingChannel(TrackingParameters)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(TrackingParameters)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Tem de ser substituído na classe derivada e quando implementada, devolve o canal que utiliza a infraestrutura de controlo do tempo de execução para enviar os registos de controlo para o serviço de controlo."
  remarks: "A infraestrutura de controlo do tempo de execução utiliza um <xref:System.Workflow.Runtime.Tracking.TrackingChannel>para cada serviço de controlo para cada instância de fluxo de trabalho.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> O motor de tempo de execução do fluxo de trabalho chama GetTrackingChannel em cada serviço de controlo para obter o <xref:System.Workflow.Runtime.Tracking.TrackingChannel>relativamente a esse serviço.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> Pode utilizar as informações transmitidas <xref:System.Workflow.Runtime.Tracking.TrackingParameters>para associar dados de controlo enviados a <xref:System.Workflow.Runtime.Tracking.TrackingChannel>para o seu serviço de controlo com uma instância de fluxo de trabalho raiz específica.</xref:System.Workflow.Runtime.Tracking.TrackingChannel> </xref:System.Workflow.Runtime.Tracking.TrackingParameters>"
  example:
  - "The following example shows an implementation of the `GetTrackingChannel` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#113](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#113)]\n [!code-vb[WF_Samples#113](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#113)]"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);
    parameters:
    - id: parameters
      type: System.Workflow.Runtime.Tracking.TrackingParameters
      description: "O <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingParameters&quot;> </xref> associada com a instância de fluxo de trabalho."
    return:
      type: System.Workflow.Runtime.Tracking.TrackingChannel
      description: "O <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingChannel&quot;> </xref> que é utilizada para enviar os registos de controlo para o serviço de controlo."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  id: TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TryGetProfile(Type,TrackingProfile)
  nameWithType: TrackingService.TryGetProfile(Type,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(Type,TrackingProfile)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Tem de ser substituído na classe derivada e quando implementada, obtém o perfil de controlo para o tipo de fluxo de trabalho especificado esteja disponível."
  remarks: "Um serviço de controlo é responsável por gerir os perfis de controlo disponíveis para os tipos de fluxo de trabalho específico e instâncias de fluxo de trabalho específico. Pode implementar este gestão na forma que achar mais que escolher. Por exemplo, pode devolver o mesmo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>para cada fluxo de trabalho <xref:System.Type>e instância de fluxo de trabalho; ou gerir um arquivo sofisticado de controlar perfis referenciadas por instância de fluxo de trabalho, fluxo de trabalho <xref:System.Type>e <xref:System.Version>.</xref:System.Version> </xref:System.Type> </xref:System.Type> </xref:System.Workflow.Runtime.Tracking.TrackingProfile>"
  example:
  - "The following example demonstrates an implementation of the `TryGetProfile` method, which calls a private `GetProfile` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[Wf_samples#209](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#209)]\n [!code-vb[Wf_samples#209](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#209)]"
  syntax:
    content: protected abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>do fluxo de trabalho para o qual pretende obter o perfil de controlo.</xref:System.Type>"
    - id: profile
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "Quando este método devolve, contém o <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> carregar. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> do fluxo de trabalho especificado <xref:System.Type>está disponível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type> If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> is returned in <code>profile</code>."
  overload: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  id: TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TryReloadProfile(Type,Guid,TrackingProfile)
  nameWithType: TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Tem de ser substituído na classe derivada e quando implementada, obtém um novo perfil de controlo para a instância de fluxo de trabalho especificado se o perfil de controlo tiver sido alterado desde que foi efetuada a última carregado."
  remarks: "TryReloadProfile denomina-se a infraestrutura de controlo do tempo de execução para determinar se um novo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>deve ser carregado para a instância de fluxo de trabalho especificado.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Se um novo <xref:System.Workflow.Runtime.Tracking.TrackingProfile>é necessário, é devolvido em `profile`.</xref:System.Workflow.Runtime.Tracking.TrackingProfile> Se pretender que a infraestrutura de controlo do tempo de execução para parar a monitorização de uma instância de fluxo de trabalho, o serviço de controlo deve devolver `true` e defina `profile` igual a uma referência nula (`Nothing` no Visual Basic). Pode utilizar o seu serviço de controlo `workflowType` ou `workflowInstanceId` na forma que achar mais optar por determinar se um perfil de controlo deve ser recarregado. Por exemplo, o <xref:System.Workflow.Runtime.Tracking.SqlTrackingService>utiliza apenas `workflowInstanceId` para decidir se o perfil de controlo deve ser recarregado.</xref:System.Workflow.Runtime.Tracking.SqlTrackingService> TryReloadProfile denomina-se a infraestrutura de controlo do tempo de execução, de acordo com a suas próprias semântica de controlo ou em resposta a uma chamada de serviço ou o anfitrião <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=fullName>numa instância de fluxo de trabalho.</xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=fullName>"
  example:
  - "The following example shows a basic implementation of the `TryReloadProfile` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#116](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#116)]\n [!code-vb[WF_Samples#116](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#116)]"
  syntax:
    content: protected abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);
    parameters:
    - id: workflowType
      type: System.Type
      description: "O <xref:System.Type>da instância do fluxo de trabalho.</xref:System.Type>"
    - id: workflowInstanceId
      type: System.Guid
      description: "O <xref:System.Guid>da instância do fluxo de trabalho.</xref:System.Guid>"
    - id: profile
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "Quando este método devolve, contém o <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> carregar. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um novo <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;> </xref> deve ser carregado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> is returned in <code>profile</code>."
  overload: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TrackingService()
  nameWithType: TrackingService.TrackingService()
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TrackingService()
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile(Guid)
  nameWithType: TrackingService.GetProfile(Guid)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Guid)
- uid: System.Workflow.Runtime.Tracking.TrackingProfile
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingProfile
  fullName: System.Workflow.Runtime.Tracking.TrackingProfile
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile(Type,Version)
  nameWithType: TrackingService.GetProfile(Type,Version)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Type,Version)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetTrackingChannel(TrackingParameters)
  nameWithType: TrackingService.GetTrackingChannel(TrackingParameters)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(TrackingParameters)
- uid: System.Workflow.Runtime.Tracking.TrackingChannel
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingChannel
  nameWithType: TrackingChannel
  fullName: System.Workflow.Runtime.Tracking.TrackingChannel
- uid: System.Workflow.Runtime.Tracking.TrackingParameters
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingParameters
  nameWithType: TrackingParameters
  fullName: System.Workflow.Runtime.Tracking.TrackingParameters
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryGetProfile(Type,TrackingProfile)
  nameWithType: TrackingService.TryGetProfile(Type,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(Type,TrackingProfile)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryReloadProfile(Type,Guid,TrackingProfile)
  nameWithType: TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TrackingService
  nameWithType: TrackingService.TrackingService
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile
  nameWithType: TrackingService.GetProfile
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetTrackingChannel
  nameWithType: TrackingService.GetTrackingChannel
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryGetProfile
  nameWithType: TrackingService.TryGetProfile
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryReloadProfile
  nameWithType: TrackingService.TryReloadProfile
