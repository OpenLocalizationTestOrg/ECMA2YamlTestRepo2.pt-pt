### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Tracking.TrackingService
  id: TrackingService
  children:
  - System.Workflow.Runtime.Tracking.TrackingService.#ctor
  - System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  - System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  - System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  - System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  - System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  langs:
  - csharp
  name: TrackingService
  nameWithType: TrackingService
  fullName: System.Workflow.Runtime.Tracking.TrackingService
  type: Class
  summary: "Provides the basic interface between a tracking service and the run-time tracking infrastructure."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A tracking service is responsible for supplying tracking channels and tracking profiles to the workflow run-time engine. The workflow run-time engine requests one <xref:System.Workflow.Runtime.Tracking.TrackingChannel> from a tracking service for each workflow instance for which it has a <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. The workflow run-time engine uses this <xref:System.Workflow.Runtime.Tracking.TrackingChannel> to send tracking records associated with that workflow instance. A <xref:System.Workflow.Runtime.Tracking.TrackingProfile> contains track points that specify a set of tracking events for which the run-time tracking infrastructure should send tracking records. A <xref:System.Workflow.Runtime.Tracking.TrackingProfile> may also specify data to be extracted from the workflow instance when one of these tracking events occurs.       The run-time tracking infrastructure uses a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> to filter tracking events emitted by a workflow instance. When a tracking event is emitted that matches a track point in the <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, the run-time tracking infrastructure extracts any data specified in the <xref:System.Workflow.Runtime.Tracking.TrackingProfile> from the workflow instance and encapsulates this data and information about the tracking event in a tracking record. This tracking record is then sent over the <xref:System.Workflow.Runtime.Tracking.TrackingChannel> associated with the workflow instance. A tracking record may be one of the following kinds:       <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>       <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>       <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>       The host application can use the tracking record in any way that it chooses. For example, the host application may store the tracking information in a database and use it to implement a sophisticated user interface, or it may use the information to inform an administrator of a condition that requires some action. You can register a tracking service with the workflow run-time engine by calling <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=fullName> or by including the appropriate entry in the application configuration file.       All tracking services must inherit from the TrackingService abstract class. This class defines the basic interface between a tracking service and the run-time tracking infrastructure. The workflow run-time engine requests a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for a specific workflow instance or workflow <xref:System.Type> by calling one of the overloaded <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> methods or the <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> method. The workflow run-time engine calls <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> to request a <xref:System.Workflow.Runtime.Tracking.TrackingChannel>.       The workflow tracking runtime calls the <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> and <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> methods whenever a workflow instance is created or loaded from the persistence store. The overhead associated with these calls can be costly to the tracking service (many database calls, for example). You can implement the <xref:System.Workflow.Runtime.Tracking.IProfileNotification> interface in your tracking service to circumvent this call-based mechanism and use events to notify the workflow runtime engine of changes to a <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. For tracking services that implement the <xref:System.Workflow.Runtime.Tracking.IProfileNotification> interface, the workflow run-time engine subscribes to the <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> and <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved> events. Your tracking service can raise the appropriate event when a change to one of its tracking profiles occurs. The <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> class implements this interface.       The workflow run-time engine calls the <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> method to test whether a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> has been updated or removed as a result of an explicit call by a host or a service to <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> on a workflow instance. This process enables a host or service to dynamically change the tracking profile that is being used for a specific workflow instance."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TrackingService()
  nameWithType: TrackingService.TrackingService()
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TrackingService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "When implemented in a derived class, initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingService&quot;></xref> class."
  remarks: ''
  example:
  - "The following example shows how to create a new instance of a `TerminationTrackingService` object, of a type that derives from `TrackingService`. This sample is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#111](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#111)]\n [!code-vb[WF_Samples#111](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#111)]"
  syntax:
    content: protected TrackingService ();
    parameters: []
  overload: System.Workflow.Runtime.Tracking.TrackingService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  id: GetProfile(System.Guid)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetProfile(Guid)
  nameWithType: TrackingService.GetProfile(Guid)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Must be overridden in the derived class, and when implemented, returns the tracking profile for the specified workflow instance."
  remarks: "A tracking service is responsible for managing the tracking profiles available for specific workflow types and specific workflow instances. You can implement this management in whatever manner you choose. For example, you can return the same <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for every workflow <xref:System.Type> and workflow instance; or you can manage a sophisticated store of tracking profiles referenced by workflow instance, workflow <xref:System.Type>, and <xref:System.Version>."
  example:
  - "The following example shows an implementation of the `GetProfile` method. In this example, several overloads of the `GetProfile` method call a single private `GetProfile` method, which returns a hard-coded, default tracking profile. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#115](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#115)]\n [!code-vb[WF_Samples#115](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#115)]"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);
    parameters:
    - id: workflowInstanceId
      type: System.Guid
      description: "The <xref:System.Guid> of the workflow instance."
    return:
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "The tracking profile for the specified workflow instance."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  id: GetProfile(System.Type,System.Version)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetProfile(Type,Version)
  nameWithType: TrackingService.GetProfile(Type,Version)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Type,Version)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Must be overridden in the derived class, and when implemented, returns the tracking profile, qualified by version, for the specified workflow <xref:System.Type>."
  remarks: "A tracking service is responsible for managing the tracking profiles available for specific workflow types and specific workflow instances. You can implement this management in whatever manner you choose. For example, you can return the same <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for every workflow <xref:System.Type> and workflow instance; or you can manage a sophisticated store of tracking profiles referenced by workflow instance, workflow <xref:System.Type>, and <xref:System.Version>."
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "The <xref:System.Type> of the workflow."
    - id: profileVersionId
      type: System.Version
      description: "The <xref:System.Version> of the tracking profile."
    return:
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "The tracking profile for the specified workflow type."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  id: GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: GetTrackingChannel(TrackingParameters)
  nameWithType: TrackingService.GetTrackingChannel(TrackingParameters)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(TrackingParameters)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Must be overridden in the derived class, and when implemented, returns the channel that the run-time tracking infrastructure uses to send tracking records to the tracking service."
  remarks: "The run-time tracking infrastructure uses one <xref:System.Workflow.Runtime.Tracking.TrackingChannel> for each tracking service for each workflow instance. The workflow run-time engine calls GetTrackingChannel on each tracking service to get the <xref:System.Workflow.Runtime.Tracking.TrackingChannel> for that service. You can use the information passed in <xref:System.Workflow.Runtime.Tracking.TrackingParameters> to associate tracking data sent on the <xref:System.Workflow.Runtime.Tracking.TrackingChannel> for your tracking service with a particular root workflow instance."
  example:
  - "The following example shows an implementation of the `GetTrackingChannel` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#113](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#113)]\n [!code-vb[WF_Samples#113](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#113)]"
  syntax:
    content: protected abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);
    parameters:
    - id: parameters
      type: System.Workflow.Runtime.Tracking.TrackingParameters
      description: "The <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingParameters&quot;></xref> associated with the workflow instance."
    return:
      type: System.Workflow.Runtime.Tracking.TrackingChannel
      description: "The <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingChannel&quot;></xref> that is used to send tracking records to the tracking service."
  overload: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  id: TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TryGetProfile(Type,TrackingProfile)
  nameWithType: TrackingService.TryGetProfile(Type,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(Type,TrackingProfile)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Must be overridden in the derived class, and when implemented, retrieves the tracking profile for the specified workflow type if one is available."
  remarks: "A tracking service is responsible for managing the tracking profiles available for specific workflow types and specific workflow instances. You can implement this management in whatever manner you choose. For example, you can return the same <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for every workflow <xref:System.Type> and workflow instance; or you can manage a sophisticated store of tracking profiles referenced by workflow instance, workflow <xref:System.Type>, and <xref:System.Version>."
  example:
  - "The following example demonstrates an implementation of the `TryGetProfile` method, which calls a private `GetProfile` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[Wf_samples#209](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#209)]\n [!code-vb[Wf_samples#209](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#209)]"
  syntax:
    content: protected abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);
    parameters:
    - id: workflowType
      type: System.Type
      description: "The <xref:System.Type> of the workflow for which to get the tracking profile."
    - id: profile
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "When this method returns, contains the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> to load. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> for the specified workflow <xref:System.Type> is available; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> is returned in <code>profile</code>."
  overload: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  id: TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  langs:
  - csharp
  name: TryReloadProfile(Type,Guid,TrackingProfile)
  nameWithType: TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Must be overridden in the derived class, and when implemented, retrieves a new tracking profile for the specified workflow instance if the tracking profile has changed since it was last loaded."
  remarks: "TryReloadProfile is called by the run-time tracking infrastructure to determine whether a new <xref:System.Workflow.Runtime.Tracking.TrackingProfile> should be loaded for the specified workflow instance. If a new <xref:System.Workflow.Runtime.Tracking.TrackingProfile> is required, it is returned in `profile`. If you want the run-time tracking infrastructure to stop tracking a workflow instance, your tracking service should return `true` and set `profile` equal to a null reference (`Nothing` in Visual Basic). Your tracking service can use `workflowType` or `workflowInstanceId` in whatever manner you choose to determine whether a tracking profile should be reloaded. For example, the <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> only uses `workflowInstanceId` to decide whether the tracking profile should be reloaded. TryReloadProfile is called by the run-time tracking infrastructure according to its own tracking semantics, or in response to the host or a service calling <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=fullName> on a workflow instance."
  example:
  - "The following example shows a basic implementation of the `TryReloadProfile` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#116](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#116)]\n [!code-vb[WF_Samples#116](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#116)]"
  syntax:
    content: protected abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);
    parameters:
    - id: workflowType
      type: System.Type
      description: "The <xref:System.Type> of the workflow instance."
    - id: workflowInstanceId
      type: System.Guid
      description: "The <xref:System.Guid> of the workflow instance."
    - id: profile
      type: System.Workflow.Runtime.Tracking.TrackingProfile
      description: "When this method returns, contains the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> to load. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a new <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> should be loaded; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingProfile&quot;></xref> is returned in <code>profile</code>."
  overload: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TrackingService()
  nameWithType: TrackingService.TrackingService()
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TrackingService()
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile(Guid)
  nameWithType: TrackingService.GetProfile(Guid)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Guid)
- uid: System.Workflow.Runtime.Tracking.TrackingProfile
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingProfile
  fullName: System.Workflow.Runtime.Tracking.TrackingProfile
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile(Type,Version)
  nameWithType: TrackingService.GetProfile(Type,Version)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetProfile(Type,Version)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetTrackingChannel(TrackingParameters)
  nameWithType: TrackingService.GetTrackingChannel(TrackingParameters)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(TrackingParameters)
- uid: System.Workflow.Runtime.Tracking.TrackingChannel
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingChannel
  nameWithType: TrackingChannel
  fullName: System.Workflow.Runtime.Tracking.TrackingChannel
- uid: System.Workflow.Runtime.Tracking.TrackingParameters
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingParameters
  nameWithType: TrackingParameters
  fullName: System.Workflow.Runtime.Tracking.TrackingParameters
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryGetProfile(Type,TrackingProfile)
  nameWithType: TrackingService.TryGetProfile(Type,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(Type,TrackingProfile)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryReloadProfile(Type,Guid,TrackingProfile)
  nameWithType: TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
  fullName: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(Type,Guid,TrackingProfile)
- uid: System.Workflow.Runtime.Tracking.TrackingService.#ctor*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TrackingService
  nameWithType: TrackingService.TrackingService
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetProfile
  nameWithType: TrackingService.GetProfile
- uid: System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: GetTrackingChannel
  nameWithType: TrackingService.GetTrackingChannel
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryGetProfile
  nameWithType: TrackingService.TryGetProfile
- uid: System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile*
  parent: System.Workflow.Runtime.Tracking.TrackingService
  isExternal: false
  name: TryReloadProfile
  nameWithType: TrackingService.TryReloadProfile
