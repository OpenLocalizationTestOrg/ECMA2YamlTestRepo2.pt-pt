### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SignatureDescription
  id: SignatureDescription
  children:
  - System.Security.Cryptography.SignatureDescription.#ctor
  - System.Security.Cryptography.SignatureDescription.#ctor(System.Security.SecurityElement)
  - System.Security.Cryptography.SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.SignatureDescription.CreateDigest
  - System.Security.Cryptography.SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  - System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  - System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  - System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  langs:
  - csharp
  name: SignatureDescription
  nameWithType: SignatureDescription
  fullName: System.Security.Cryptography.SignatureDescription
  type: Class
  summary: "Contains information about the properties of a digital signature."
  remarks: ''
  example:
  - "The following code example demonstrates how to use members of the SignatureDescription class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#2](~/add/codesnippet/csharp/t-system.security.crypto_125_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#2](~/add/codesnippet/visualbasic/t-system.security.crypto_125_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#2](~/add/codesnippet/cpp/t-system.security.crypto_125_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SignatureDescription
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: SignatureDescription()
  nameWithType: SignatureDescription.SignatureDescription()
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.SignatureDescription&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the default SignatureDescription constructor. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#1](~/add/codesnippet/csharp/m-system.security.crypto_62_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#1](~/add/codesnippet/visualbasic/m-system.security.crypto_62_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#1](~/add/codesnippet/cpp/m-system.security.crypto_62_1.cpp)]"
  syntax:
    content: public SignatureDescription ();
    parameters: []
  overload: System.Security.Cryptography.SignatureDescription.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.#ctor(System.Security.SecurityElement)
  id: '#ctor(System.Security.SecurityElement)'
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: SignatureDescription(SecurityElement)
  nameWithType: SignatureDescription.SignatureDescription(SecurityElement)
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription(SecurityElement)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.SignatureDescription&quot;></xref> class from the specified <xref href=&quot;System.Security.SecurityElement&quot;></xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to initialize a new <xref:System.Security.Cryptography.SignatureDescription> class using a  \n  \n <xref:System.Security.SecurityElement> containing the four algorithms. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#3](~/add/codesnippet/csharp/7a3058eb-2064-4abc-a909-_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#3](~/add/codesnippet/visualbasic/7a3058eb-2064-4abc-a909-_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#3](~/add/codesnippet/cpp/7a3058eb-2064-4abc-a909-_1.cpp)]"
  syntax:
    content: public SignatureDescription (System.Security.SecurityElement el);
    parameters:
    - id: el
      type: System.Security.SecurityElement
      description: "The <xref href=&quot;System.Security.SecurityElement&quot;></xref> from which to get the algorithms for the signature description."
  overload: System.Security.Cryptography.SignatureDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>el</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: CreateDeformatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Creates an <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;></xref> instance with the specified key using the <xref:System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm*> property."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CreateDeformatter method to create a DSA signature deformatter to verify the signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#4](~/add/codesnippet/csharp/c857fc56-7592-4cff-bd41-_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#4](~/add/codesnippet/visualbasic/c857fc56-7592-4cff-bd41-_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#4](~/add/codesnippet/cpp/c857fc56-7592-4cff-bd41-_1.cpp)]"
  syntax:
    content: public virtual System.Security.Cryptography.AsymmetricSignatureDeformatter CreateDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The key to use in the <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;></xref>."
    return:
      type: System.Security.Cryptography.AsymmetricSignatureDeformatter
      description: "The newly created <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;></xref> instance."
  overload: System.Security.Cryptography.SignatureDescription.CreateDeformatter*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.CreateDigest
  id: CreateDigest
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: CreateDigest()
  nameWithType: SignatureDescription.CreateDigest()
  fullName: System.Security.Cryptography.SignatureDescription.CreateDigest()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Creates a <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;></xref> instance using the <xref:System.Security.Cryptography.SignatureDescription.DigestAlgorithm*> property."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CreateDigest method to create a <xref:System.Security.Cryptography.HashAlgorithm> using the digest algorithm of the signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#10](~/add/codesnippet/csharp/m-system.security.crypto_119_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#10](~/add/codesnippet/visualbasic/m-system.security.crypto_119_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#10](~/add/codesnippet/cpp/m-system.security.crypto_119_1.cpp)]"
  syntax:
    content: public virtual System.Security.Cryptography.HashAlgorithm CreateDigest ();
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "The newly created <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;></xref> instance."
  overload: System.Security.Cryptography.SignatureDescription.CreateDigest*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: CreateFormatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Creates an <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureFormatter&quot;></xref> instance with the specified key using the <xref:System.Security.Cryptography.SignatureDescription.FormatterAlgorithm*> property."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CreateFormatter method to create a signature formatter for DSA encryption. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#5](~/add/codesnippet/csharp/7d2498cf-8c91-4ade-a56f-_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#5](~/add/codesnippet/visualbasic/7d2498cf-8c91-4ade-a56f-_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#5](~/add/codesnippet/cpp/7d2498cf-8c91-4ade-a56f-_1.cpp)]"
  syntax:
    content: public virtual System.Security.Cryptography.AsymmetricSignatureFormatter CreateFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The key to use in the <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureFormatter&quot;></xref>."
    return:
      type: System.Security.Cryptography.AsymmetricSignatureFormatter
      description: "The newly created <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureFormatter&quot;></xref> instance."
  overload: System.Security.Cryptography.SignatureDescription.CreateFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  id: DeformatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: DeformatterAlgorithm
  nameWithType: SignatureDescription.DeformatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Gets or sets the deformatter algorithm for the signature description."
  remarks: ''
  example:
  - "The following code example demonstrates how to set the DeformatterAlgorithm property with the RSAPKCS1 deformatter. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#8](~/add/codesnippet/csharp/p-system.security.crypto_44_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#8](~/add/codesnippet/visualbasic/p-system.security.crypto_44_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#8](~/add/codesnippet/cpp/p-system.security.crypto_44_1.cpp)]"
  syntax:
    content: public string DeformatterAlgorithm { get; set; }
    return:
      type: System.String
      description: "The deformatter algorithm for the signature description."
  overload: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SignatureDescription.DigestAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Gets or sets the digest algorithm for the signature description."
  remarks: ''
  example:
  - "The following code example demonstrates how to set the DigestAlgorithm property for RSA encryption using the SHA1 provider. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#6](~/add/codesnippet/csharp/p-system.security.crypto_113_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#6](~/add/codesnippet/visualbasic/p-system.security.crypto_113_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#6](~/add/codesnippet/cpp/p-system.security.crypto_113_1.cpp)]"
  syntax:
    content: public string DigestAlgorithm { get; set; }
    return:
      type: System.String
      description: "The digest algorithm for the signature description."
  overload: System.Security.Cryptography.SignatureDescription.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  id: FormatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: FormatterAlgorithm
  nameWithType: SignatureDescription.FormatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Gets or sets the formatter algorithm for the signature description."
  remarks: ''
  example:
  - "The following code example demonstrates how to set the FormatterAlgorithm property with the RSAPKCS1 formatter. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#9](~/add/codesnippet/csharp/p-system.security.crypto_3_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#9](~/add/codesnippet/visualbasic/p-system.security.crypto_3_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#9](~/add/codesnippet/cpp/p-system.security.crypto_3_1.cpp)]"
  syntax:
    content: public string FormatterAlgorithm { get; set; }
    return:
      type: System.String
      description: "The formatter algorithm for the signature description."
  overload: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  id: KeyAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: KeyAlgorithm
  nameWithType: SignatureDescription.KeyAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Gets or sets the key algorithm for the signature description."
  remarks: ''
  example:
  - "The following code example demonstrates how to set the KeyAlgorithm property for RSA encryption. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!code-cs[System.Security.Cryptography.SignatureDescription#7](~/add/codesnippet/csharp/p-system.security.crypto_71_1.cs)]\n [!code-vb[System.Security.Cryptography.SignatureDescription#7](~/add/codesnippet/visualbasic/p-system.security.crypto_71_1.vb)]\n [!code-cpp[System.Security.Cryptography.SignatureDescription#7](~/add/codesnippet/cpp/p-system.security.crypto_71_1.cpp)]"
  syntax:
    content: public string KeyAlgorithm { get; set; }
    return:
      type: System.String
      description: "The key algorithm for the signature description."
  overload: System.Security.Cryptography.SignatureDescription.KeyAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.SignatureDescription.#ctor
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: SignatureDescription()
  nameWithType: SignatureDescription.SignatureDescription()
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription()
- uid: System.Security.Cryptography.SignatureDescription.#ctor(System.Security.SecurityElement)
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: SignatureDescription(SecurityElement)
  nameWithType: SignatureDescription.SignatureDescription(SecurityElement)
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Cryptography.SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateDeformatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.CreateDigest
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateDigest()
  nameWithType: SignatureDescription.CreateDigest()
  fullName: System.Security.Cryptography.SignatureDescription.CreateDigest()
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateFormatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: DeformatterAlgorithm
  nameWithType: SignatureDescription.DeformatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignatureDescription.DigestAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: FormatterAlgorithm
  nameWithType: SignatureDescription.FormatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: KeyAlgorithm
  nameWithType: SignatureDescription.KeyAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.#ctor*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: SignatureDescription
  nameWithType: SignatureDescription.SignatureDescription
- uid: System.Security.Cryptography.SignatureDescription.CreateDeformatter*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateDeformatter
  nameWithType: SignatureDescription.CreateDeformatter
- uid: System.Security.Cryptography.SignatureDescription.CreateDigest*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateDigest
  nameWithType: SignatureDescription.CreateDigest
- uid: System.Security.Cryptography.SignatureDescription.CreateFormatter*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateFormatter
  nameWithType: SignatureDescription.CreateFormatter
- uid: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: DeformatterAlgorithm
  nameWithType: SignatureDescription.DeformatterAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.DigestAlgorithm*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignatureDescription.DigestAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: FormatterAlgorithm
  nameWithType: SignatureDescription.FormatterAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.KeyAlgorithm*
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: KeyAlgorithm
  nameWithType: SignatureDescription.KeyAlgorithm
