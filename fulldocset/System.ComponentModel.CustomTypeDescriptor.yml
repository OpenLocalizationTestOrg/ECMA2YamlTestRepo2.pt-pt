### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CustomTypeDescriptor
  id: CustomTypeDescriptor
  children:
  - System.ComponentModel.CustomTypeDescriptor.#ctor
  - System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  - System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - System.ComponentModel.CustomTypeDescriptor.GetClassName
  - System.ComponentModel.CustomTypeDescriptor.GetComponentName
  - System.ComponentModel.CustomTypeDescriptor.GetConverter
  - System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.CustomTypeDescriptor.GetEvents
  - System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.CustomTypeDescriptor.GetProperties
  - System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  name: CustomTypeDescriptor
  nameWithType: CustomTypeDescriptor
  fullName: System.ComponentModel.CustomTypeDescriptor
  type: Class
  summary: "Provides a simple default implementation of the <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;></xref> interface."
  remarks: "Like <xref:System.ComponentModel.TypeDescriptionProvider>, the CustomTypeDescriptor class relies on a parent object of type <xref:System.ComponentModel.ICustomTypeDescriptor> supplied during construction. This allows classes that derive from CustomTypeDescriptor to selectively override methods."
  syntax:
    content: 'public abstract class CustomTypeDescriptor : System.ComponentModel.ICustomTypeDescriptor'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ICustomTypeDescriptor
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: CustomTypeDescriptor()
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor()
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.CustomTypeDescriptor&quot;></xref> class."
  remarks: "This constructor is equivalent to calling the other <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A?displayProperty=fullName> constructor with a parameter that is `null`.       All methods of a <xref:System.ComponentModel.CustomTypeDescriptor> created with this constructor will return default values."
  syntax:
    content: protected CustomTypeDescriptor ();
    parameters: []
  overload: System.ComponentModel.CustomTypeDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  id: '#ctor(System.ComponentModel.ICustomTypeDescriptor)'
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: CustomTypeDescriptor(ICustomTypeDescriptor)
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.CustomTypeDescriptor&quot;></xref> class using a parent custom type descriptor."
  remarks: "If the `parent` parameter is `null`, all <xref:System.ComponentModel.CustomTypeDescriptor> methods will return default values. Otherwise, all <xref:System.ComponentModel.CustomTypeDescriptor> methods will delegate to the methods of `parent`.       Most <xref:System.ComponentModel.CustomTypeDescriptor> methods return `null` by default. The following table shows the return values for the methods that do not return `null` by default.      |Method|Default return value|   |------------|--------------------------|   |<xref:System.ComponentModel.CustomTypeDescriptor.GetAttributes%2A>|An empty attribute collection (<xref:System.ComponentModel.AttributeCollection.Empty?displayProperty=fullName>).|   |<xref:System.ComponentModel.CustomTypeDescriptor.GetConverter%2A>|The default <xref:System.ComponentModel.TypeConverter> instance.|   |<xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A>|An empty events collection (<xref:System.ComponentModel.EventDescriptorCollection.Empty?displayProperty=fullName>).|   |<xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A>|An empty property collection (<xref:System.ComponentModel.PropertyDescriptorCollection.Empty?displayProperty=fullName>).|"
  syntax:
    content: protected CustomTypeDescriptor (System.ComponentModel.ICustomTypeDescriptor parent);
    parameters:
    - id: parent
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "The parent custom type descriptor."
  overload: System.ComponentModel.CustomTypeDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetAttributes()
  nameWithType: CustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns a collection of custom attributes for the type represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed to the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetAttributes method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.AttributeCollection GetAttributes ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "An <xref href=&quot;System.ComponentModel.AttributeCollection&quot;></xref> containing the attributes for the type. The default is <xref href=&quot;System.ComponentModel.AttributeCollection&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetClassName()
  nameWithType: CustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetClassName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns the fully qualified name of the class represented by this type descriptor."
  remarks: "> [!NOTE] >  GetClassName is not a static method and thus, is not guaranteed to be thread-safe.       If a parent custom type descriptor was passed to the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetClassName method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual string GetClassName ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> containing the fully qualified class name of the type this type descriptor is describing. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetComponentName()
  nameWithType: CustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetComponentName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns the name of the class represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed to the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetComponentName method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual string GetComponentName ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> containing the name of the component instance this type descriptor is describing. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetComponentName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetConverter()
  nameWithType: CustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetConverter()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns a type converter for the type represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetConverter method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.TypeConverter GetConverter ();
    parameters: []
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> for the type represented by this type descriptor. The default is a newly created <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetConverter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent()
  nameWithType: CustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns the event descriptor for the default event of the object represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetDefaultEvent method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.EventDescriptor GetDefaultEvent ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptor
      description: "The <xref href=&quot;System.ComponentModel.EventDescriptor&quot;></xref> for the default event on the object represented by this type descriptor. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty()
  nameWithType: CustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns the property descriptor for the default property of the object represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetDefaultProperty method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor GetDefaultProperty ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> for the default property on the object represented by this type descriptor. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: CustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns an editor of the specified type that is to be associated with the class represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetEditor method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "The base type of the editor to retrieve."
    return:
      type: System.Object
      description: "An editor of the given type that is to be associated with the class represented by this type descriptor. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents()
  nameWithType: CustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns a collection of event descriptors for the object represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetEvents method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection GetEvents ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "An <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;></xref> containing the event descriptors for the object represented by this type descriptor. The default is <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents(Attribute[])
  nameWithType: CustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns a filtered collection of event descriptors for the object represented by this type descriptor."
  remarks: "You can use the `attributes` parameter to filter the collection that is returned.       If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetEvents method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection GetEvents (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "An array of attributes to use as a filter. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "An <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;></xref> containing the event descriptions for the object represented by this type descriptor. The default is <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties()
  nameWithType: CustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns a collection of property descriptors for the object represented by this type descriptor."
  remarks: "If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetProperties method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref> containing the property descriptions for the object represented by this type descriptor. The default is <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties(Attribute[])
  nameWithType: CustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns a filtered collection of property descriptors for the object represented by this type descriptor."
  remarks: "You can use the `attributes` parameter to filter the collection that is returned. For filtering rules, see <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>.       If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetProperties method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "An array of attributes to use as a filter. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref> containing the property descriptions for the object represented by this type descriptor. The default is <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns an object that contains the property described by the specified property descriptor."
  remarks: "If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the GetPropertyOwner method will call the parent&quot;s corresponding method."
  syntax:
    content: public virtual object GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
      description: "The property descriptor for which to retrieve the owning object."
    return:
      type: System.Object
      description: "An <xref:System.Object> that owns the given property specified by the type descriptor. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: CustomTypeDescriptor()
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor()
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor()
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: CustomTypeDescriptor(ICustomTypeDescriptor)
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetAttributes()
  nameWithType: CustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetAttributes()
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetClassName()
  nameWithType: CustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetClassName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetComponentName()
  nameWithType: CustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetComponentName()
- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetConverter()
  nameWithType: CustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetConverter()
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent()
  nameWithType: CustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent()
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty()
  nameWithType: CustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty()
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: CustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEditor(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEvents()
  nameWithType: CustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents()
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEvents(Attribute[])
  nameWithType: CustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents(Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetProperties()
  nameWithType: CustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetProperties(Attribute[])
  nameWithType: CustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties(Attribute[])
- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: CustomTypeDescriptor
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor
- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: CustomTypeDescriptor.GetAttributes
- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: CustomTypeDescriptor.GetClassName
- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: CustomTypeDescriptor.GetComponentName
- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: CustomTypeDescriptor.GetConverter
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: CustomTypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: CustomTypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: CustomTypeDescriptor.GetEditor
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: CustomTypeDescriptor.GetEvents
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: CustomTypeDescriptor.GetProperties
- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner*
  parent: System.ComponentModel.CustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner
  nameWithType: CustomTypeDescriptor.GetPropertyOwner
