### YamlMime:ManagedReference
items:
- uid: System.Resources.ResourceSet
  id: ResourceSet
  children:
  - System.Resources.ResourceSet.#ctor
  - System.Resources.ResourceSet.#ctor(System.IO.Stream)
  - System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  - System.Resources.ResourceSet.#ctor(System.String)
  - System.Resources.ResourceSet.Close
  - System.Resources.ResourceSet.Dispose
  - System.Resources.ResourceSet.Dispose(System.Boolean)
  - System.Resources.ResourceSet.GetDefaultReader
  - System.Resources.ResourceSet.GetDefaultWriter
  - System.Resources.ResourceSet.GetEnumerator
  - System.Resources.ResourceSet.GetObject(System.String)
  - System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  - System.Resources.ResourceSet.GetString(System.String)
  - System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  - System.Resources.ResourceSet.Reader
  - System.Resources.ResourceSet.ReadResources
  - System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.ResourceSet.Table
  langs:
  - csharp
  name: ResourceSet
  nameWithType: ResourceSet
  fullName: System.Resources.ResourceSet
  type: Class
  summary: "Armazena todos os recursos localizados para um idioma específico, ignorando todos os outras culturas, incluindo quaisquer regras de contingência.       **Nota de segurança**: chamar os métodos desta classe com dados não fidedignos é um risco de segurança. Chame os métodos na classe apenas com dados fidedignos. Para obter mais informações, consulte [riscos de segurança de dados não fidedignos](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)."
  remarks: "A classe de ResourceSet enumera através de um <xref:System.Resources.IResourceReader>, carregar cada nome e valor e armazene-os no <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Resources.IResourceReader> Personalizadas <xref:System.Resources.IResourceReader>pode ser utilizado.</xref:System.Resources.IResourceReader>       Pode instanciar um objeto de ResourceSet que representa os recursos de uma cultura específica ao chamar o <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=fullName>método.</xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=fullName>      > [!IMPORTANT] > Este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando tiver terminado com o tipo, deve eliminar-direta ou indiretamente. Para eliminar diretamente do tipo, chame o <xref:System.IDisposable.Dispose%2A>método um `try` / `catch` bloco.</xref:System.IDisposable.Dispose%2A> Para eliminar indiretamente dele, utilize uma construção de idioma, tais como `using` (em c#) ou `Using` (em Visual Basic). Para obter mais informações, consulte a secção &quot;Utilizar um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico de interface.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ResourceSet : IDisposable, System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor
  id: '#ctor'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet()
  nameWithType: ResourceSet.ResourceSet()
  fullName: System.Resources.ResourceSet.ResourceSet()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> classe com propriedades predefinidas."
  syntax:
    content: protected ResourceSet ();
    parameters: []
  overload: System.Resources.ResourceSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(Stream)
  nameWithType: ResourceSet.ResourceSet(Stream)
  fullName: System.Resources.ResourceSet.ResourceSet(Stream)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Cria uma nova instância do <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> classe a utilizar a predefinição sistema <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> que lê recursos de fluxo fornecido."
  syntax:
    content: public ResourceSet (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>dos recursos a ser lido.</xref:System.IO.Stream> O fluxo deve referir-se a um ficheiro de recursos existente."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> stream </code> não é legível."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  id: '#ctor(System.Resources.IResourceReader)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(IResourceReader)
  nameWithType: ResourceSet.ResourceSet(IResourceReader)
  fullName: System.Resources.ResourceSet.ResourceSet(IResourceReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Cria uma nova instância do <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> classe utilizando o leitor de recurso especificado."
  remarks: "Pode utilizar este construtor para suportar os formatos de recurso personalizado utilizando um fornecidos pelo utilizador <xref:System.Resources.IResourceReader>.</xref:System.Resources.IResourceReader>"
  syntax:
    content: public ResourceSet (System.Resources.IResourceReader reader);
    parameters:
    - id: reader
      type: System.Resources.IResourceReader
      description: "O leitor que será utilizado."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(String)
  nameWithType: ResourceSet.ResourceSet(String)
  fullName: System.Resources.ResourceSet.ResourceSet(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Cria uma nova instância do <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> classe a utilizar a predefinição sistema <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> que abre e lê recursos a partir do ficheiro especificado."
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_2_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_2_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_2_1.vb)]"
  syntax:
    content: public ResourceSet (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Ficheiro de recursos para leitura."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.Close
  id: Close
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Close()
  nameWithType: ResourceSet.Close()
  fullName: System.Resources.ResourceSet.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Fecha e liberta os recursos utilizados por este <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  remarks: "Todas as chamadas para os métodos no <xref:System.Resources.ResourceSet>após uma chamada para este método pode falhar.</xref:System.Resources.ResourceSet>       Feche pode em segurança chamado várias vezes.      > [!NOTE] > A implementação atual de chamadas de fecho <xref:System.Resources.ResourceSet.Dispose%2A>(`true`).</xref:System.Resources.ResourceSet.Dispose%2A>"
  example:
  - "The following code example uses the Close method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_15_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_15_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_15_1.vb)]"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Resources.ResourceSet.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Dispose
  id: Dispose
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ResourceSet.Dispose()
  fullName: System.Resources.ResourceSet.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Disposes dos recursos (que não seja memória) utilizados pela instância atual do <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  remarks: "É possível chamar <xref:System.Resources.ResourceSet.Dispose%2A>Quando tiver terminado de utilizando <xref:System.Resources.ResourceSet>.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A> O <xref:System.Resources.ResourceSet.Dispose%2A>método mantém o <xref:System.Resources.ResourceSet>num Estado não utilizável.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A> Após a chamada <xref:System.Resources.ResourceSet.Dispose%2A>, tem de libertar todas as referências ao <xref:System.Resources.ResourceSet>para a memória foi occupying pode ser recuperada através da recolha de lixo.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A>      > [!NOTE] > O método atual é a implementação de <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName> Esta implementação chama <xref:System.Resources.ResourceSet.Dispose%2A>(`true`).</xref:System.Resources.ResourceSet.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Resources.ResourceSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResourceSet.Dispose(Boolean)
  fullName: System.Resources.ResourceSet.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Versões recursos (que não seja memória) associados à instância atual, se for pedida a fechar internos objetos geridos."
  remarks: "Se o `dispose` parâmetro é `true`, o método atual liberta todos os recursos associados com o mesmo, bem como todos os objetos associados à mesma. Se `dispose` é `false`, o método atual liberta apenas os recursos atribuídos à mesma e ignora os objetos associados à mesma."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Indica se os objetos contidos na instância atual devem ser fechados explicitamente."
  overload: System.Resources.ResourceSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetDefaultReader
  id: GetDefaultReader
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetDefaultReader()
  nameWithType: ResourceSet.GetDefaultReader()
  fullName: System.Resources.ResourceSet.GetDefaultReader()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Devolve a classe do leitor de recursos preferencial para este tipos de <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  syntax:
    content: public virtual Type GetDefaultReader ();
    parameters: []
    return:
      type: System.Type
      description: "Devolve o <xref:System.Type>para o leitor de recursos preferencial para este tipo de <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Type>"
  overload: System.Resources.ResourceSet.GetDefaultReader*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetDefaultWriter
  id: GetDefaultWriter
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetDefaultWriter()
  nameWithType: ResourceSet.GetDefaultWriter()
  fullName: System.Resources.ResourceSet.GetDefaultWriter()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Devolve a classe de escritor de recursos preferencial para este tipos de <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  syntax:
    content: public virtual Type GetDefaultWriter ();
    parameters: []
    return:
      type: System.Type
      description: "Devolve o <xref:System.Type>para o escritor de recursos preferencial para este tipo de <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Type>"
  overload: System.Resources.ResourceSet.GetDefaultWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceSet.GetEnumerator()
  fullName: System.Resources.ResourceSet.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Devolve um <xref:System.Collections.IDictionaryEnumerator>que pode itere através de <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "Enumeradores permitem apenas ao ler os dados na coleção. Enumeradores não podem ser utilizados para modificar a colecção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento da coleção. <xref:System.Collections.IEnumerator.Reset%2A>também oferece o enumerador novamente para nesta posição.</xref:System.Collections.IEnumerator.Reset%2A> AT isto posicionar, chamar <xref:System.Collections.IEnumerator.Current%2A>emite uma exceção.</xref:System.Collections.IEnumerator.Current%2A> Por conseguinte, tem de chamar <xref:System.Collections.IEnumerator.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção de antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Devolve o mesmo objeto até ser <xref:System.Collections.IEnumerator.MoveNext%2A>ou <xref:System.Collections.IEnumerator.Reset%2A>é chamado.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Define <xref:System.Collections.IEnumerator.Current%2A>para o próximo elemento.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Após o final da colecção é passado, o enumerador está posicionado após o último elemento da coleção e chamar <xref:System.Collections.IEnumerator.MoveNext%2A>devolve `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Se a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A>devolvido `false`, chamar <xref:System.Collections.IEnumerator.Current%2A>emite uma exceção.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Para definir <xref:System.Collections.IEnumerator.Current%2A>para o primeiro elemento da coleção, pode chamar <xref:System.Collections.IEnumerator.Reset%2A>seguido <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permanece inalterada. Caso sejam feitas alterações à coleção, tais como adicionar, modificar ou eliminar elementos, o enumerador está irrevogavelmente inválido e a próxima chamada ou <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>emitir um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A>e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>irá devolver o elemento que está definido, mesmo que o enumerador já é invalidado.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Pode utilizar o <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=fullName>propriedade para aceder ao valor armazenado no elemento actual.</xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=fullName> Utilize o <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName>propriedade aceder à chave do elemento actual.</xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName> Utilize o <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>propriedade para aceder ao valor do elemento actual.</xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>       O enumerador não tem acesso exclusivo à coleção; Por conseguinte, a enumerar através de uma coleção intrinsecamente não é um procedimento seguro para thread. Mesmo quando uma coleção está sincronizada, outros threads ainda foi possível modificar a coleção, o que faz com que o enumerador acionar uma excepção. Para garantir a segurança de thread durante a enumeração, pode bloquear a coleção durante a enumeração de toda ou detetar exceções resultantes das alterações efetuadas por outros threads."
  example:
  - "The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`. Next, the GetEnumerator method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`. The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_5_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_5_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_5_1.vb)]"
  syntax:
    content: public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for this <xref href=&quot;System.Resources.ResourceSet&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Resources.ResourceSet.GetEnumerator*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O conjunto de recursos foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetObject(System.String)
  id: GetObject(System.String)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetObject(String)
  nameWithType: ResourceSet.GetObject(String)
  fullName: System.Resources.ResourceSet.GetObject(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Procura um objeto de recursos com o nome especificado."
  remarks: "O nome do objeto de recursos é sensível às maiúsculas e minúsculas. Para uma procura sensível, utilize <xref:System.Resources.ResourceSet.GetObject%2A>.</xref:System.Resources.ResourceSet.GetObject%2A>"
  syntax:
    content: public virtual object GetObject (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nome de maiúsculas e minúsculas do recurso para procurar."
    return:
      type: System.Object
      description: "O recurso pedido."
  overload: System.Resources.ResourceSet.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  id: GetObject(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetObject(String,Boolean)
  nameWithType: ResourceSet.GetObject(String,Boolean)
  fullName: System.Resources.ResourceSet.GetObject(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Procura de um objeto de recursos com o nome especificado sensível, de forma, se for pedida."
  remarks: "Se o valor da `ignoreCase` parâmetro é `true`, um recurso com o nome &quot;Recursos&quot; é equivalente ao recurso com o nome &quot;de recurso&quot;. Tenha em atenção, no entanto, se este método executa sempre comparações de cadeia sensível utilizando <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> A vantagem é que os resultados de comparações de cadeia sensível efetuadas através deste método são os mesmos em todos os computadores, independentemente da cultura. A desvantagem é que os resultados não são consistentes com as regras de maiúsculas e minúsculas de todas as culturas.       Por exemplo, turco alfabeto tem duas versões do caráter i: uma com um ponto e outro sem um ponto. Em turco, o caráter posso (Unicode 0049) é considerado a versão em maiúsculas de um caráter diferente ı (Unicode 0131). O caráter i (Unicode 0069) é considerado a versão em minúsculas do ainda outro caráter İ (Unicode 0130). De acordo com estas regras de maiúsculas e minúsculas, uma comparação de cadeia sensível dos carateres devem falhar i (Unicode 0069) e I (Unicode 0049) para a cultura &quot;tr-TR&quot; (Turco no Turquia). Utilizar o `GetObject` método com `ignoreCase` definido como `true`, esta comparação é concluída com êxito."
  syntax:
    content: public virtual object GetObject (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "Nome do recurso para procurar."
    - id: ignoreCase
      type: System.Boolean
      description: "Indica se as maiúsculas e minúsculas do nome especificado devem ser ignorada."
    return:
      type: System.Object
      description: "O recurso pedido."
  overload: System.Resources.ResourceSet.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetString(System.String)
  id: GetString(System.String)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetString(String)
  nameWithType: ResourceSet.GetString(String)
  fullName: System.Resources.ResourceSet.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Procura um <xref:System.String>recursos com o nome especificado.</xref:System.String>"
  syntax:
    content: public virtual string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nome do recurso para procurar."
    return:
      type: System.String
      description: "O valor de um recurso, se o valor for <xref:System.String>.</xref:System.String>"
  overload: System.Resources.ResourceSet.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O recurso especificado pela <code> name </code> não é um <xref:System.String>.</xref:System.String>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  id: GetString(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetString(String,Boolean)
  nameWithType: ResourceSet.GetString(String,Boolean)
  fullName: System.Resources.ResourceSet.GetString(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Procura um <xref:System.String>recursos com o nome especificado de uma forma sensível, se for pedida.</xref:System.String>"
  remarks: "Se o valor da `ignoreCase` parâmetro é `true`, um recurso com o nome &quot;Recursos&quot; é equivalente ao recurso com o nome &quot;de recurso&quot;. Tenha em atenção, no entanto, se este método executa sempre comparações de cadeia sensível utilizando <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> A vantagem é que os resultados de comparações de cadeia sensível efetuadas através deste método são os mesmos em todos os computadores, independentemente da cultura. A desvantagem é que os resultados não são consistentes com as regras de maiúsculas e minúsculas de todas as culturas.       Por exemplo, turco alfabeto tem duas versões do caráter i: uma com um ponto e outro sem um ponto. Em turco, o caráter posso (Unicode 0049) é considerado a versão em maiúsculas de um caráter diferente ı (Unicode 0131). O caráter i (Unicode 0069) é considerado a versão em minúsculas do ainda outro caráter İ (Unicode 0130). De acordo com estas regras de maiúsculas e minúsculas, uma comparação de cadeia sensível dos carateres devem falhar i (Unicode 0069) e I (Unicode 0049) para a cultura &quot;tr-TR&quot; (Turco no Turquia). Utilizar o `GetString` método com `ignoreCase` definido como `true`, esta comparação é concluída com êxito."
  syntax:
    content: public virtual string GetString (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "Nome do recurso para procurar."
    - id: ignoreCase
      type: System.Boolean
      description: "Indica se as maiúsculas e minúsculas de caso do nome especificado devem ser ignorada."
    return:
      type: System.String
      description: "O valor de um recurso, se o valor for <xref:System.String>.</xref:System.String>"
  overload: System.Resources.ResourceSet.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O recurso especificado pela <code> name </code> não é um <xref:System.String>.</xref:System.String>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Resources.ResourceSet.Reader
  id: Reader
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Reader
  nameWithType: ResourceSet.Reader
  fullName: System.Resources.ResourceSet.Reader
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Indica o <xref href=&quot;System.Resources.IResourceReader&quot;> </xref> utilizado para ler os recursos."
  syntax:
    content: protected System.Resources.IResourceReader Reader;
    return:
      type: System.Resources.IResourceReader
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.ReadResources
  id: ReadResources
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ReadResources()
  nameWithType: ResourceSet.ReadResources()
  fullName: System.Resources.ResourceSet.ReadResources()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Lê todos os recursos e armazena-os num <xref href=&quot;System.Collections.Hashtable&quot;> </xref> indicados a <xref href=&quot;System.Resources.ResourceSet.Table&quot;> </xref> propriedade."
  syntax:
    content: protected virtual void ReadResources ();
    parameters: []
  overload: System.Resources.ResourceSet.ReadResources*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Devolve um <xref:System.Collections.IEnumerator>objeto para evitar uma condição provável de antecipação com <xref uid=&quot;langword_csharp_Dispose&quot; name=&quot;Dispose&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IEnumerator> Este membro não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um enumerador de atual <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> objeto."
  overload: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Table
  id: Table
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Table
  nameWithType: ResourceSet.Table
  fullName: System.Resources.ResourceSet.Table
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "O <xref href=&quot;System.Collections.Hashtable&quot;> </xref> em que estão armazenados os recursos."
  syntax:
    content: protected System.Collections.Hashtable Table;
    return:
      type: System.Collections.Hashtable
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResourceSet.#ctor
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet()
  nameWithType: ResourceSet.ResourceSet()
  fullName: System.Resources.ResourceSet.ResourceSet()
- uid: System.Resources.ResourceSet.#ctor(System.IO.Stream)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(Stream)
  nameWithType: ResourceSet.ResourceSet(Stream)
  fullName: System.Resources.ResourceSet.ResourceSet(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(IResourceReader)
  nameWithType: ResourceSet.ResourceSet(IResourceReader)
  fullName: System.Resources.ResourceSet.ResourceSet(IResourceReader)
- uid: System.Resources.IResourceReader
  parent: System.Resources
  isExternal: false
  name: IResourceReader
  nameWithType: IResourceReader
  fullName: System.Resources.IResourceReader
- uid: System.Resources.ResourceSet.#ctor(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(String)
  nameWithType: ResourceSet.ResourceSet(String)
  fullName: System.Resources.ResourceSet.ResourceSet(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResourceSet.Close
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Close()
  nameWithType: ResourceSet.Close()
  fullName: System.Resources.ResourceSet.Close()
- uid: System.Resources.ResourceSet.Dispose
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose()
  nameWithType: ResourceSet.Dispose()
  fullName: System.Resources.ResourceSet.Dispose()
- uid: System.Resources.ResourceSet.Dispose(System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResourceSet.Dispose(Boolean)
  fullName: System.Resources.ResourceSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResourceSet.GetDefaultReader
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultReader()
  nameWithType: ResourceSet.GetDefaultReader()
  fullName: System.Resources.ResourceSet.GetDefaultReader()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Resources.ResourceSet.GetDefaultWriter
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultWriter()
  nameWithType: ResourceSet.GetDefaultWriter()
  fullName: System.Resources.ResourceSet.GetDefaultWriter()
- uid: System.Resources.ResourceSet.GetEnumerator
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceSet.GetEnumerator()
  fullName: System.Resources.ResourceSet.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.ResourceSet.GetObject(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject(String)
  nameWithType: ResourceSet.GetObject(String)
  fullName: System.Resources.ResourceSet.GetObject(String)
- uid: System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject(String,Boolean)
  nameWithType: ResourceSet.GetObject(String,Boolean)
  fullName: System.Resources.ResourceSet.GetObject(String,Boolean)
- uid: System.Resources.ResourceSet.GetString(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString(String)
  nameWithType: ResourceSet.GetString(String)
  fullName: System.Resources.ResourceSet.GetString(String)
- uid: System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString(String,Boolean)
  nameWithType: ResourceSet.GetString(String,Boolean)
  fullName: System.Resources.ResourceSet.GetString(String,Boolean)
- uid: System.Resources.ResourceSet.Reader
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Reader
  nameWithType: ResourceSet.Reader
  fullName: System.Resources.ResourceSet.Reader
- uid: System.Resources.ResourceSet.ReadResources
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ReadResources()
  nameWithType: ResourceSet.ReadResources()
  fullName: System.Resources.ResourceSet.ReadResources()
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResourceSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResourceSet.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.ResourceSet.Table
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Table
  nameWithType: ResourceSet.Table
  fullName: System.Resources.ResourceSet.Table
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Resources.ResourceSet.#ctor*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet
  nameWithType: ResourceSet.ResourceSet
- uid: System.Resources.ResourceSet.Close*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Close
  nameWithType: ResourceSet.Close
- uid: System.Resources.ResourceSet.Dispose*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose
  nameWithType: ResourceSet.Dispose
- uid: System.Resources.ResourceSet.GetDefaultReader*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultReader
  nameWithType: ResourceSet.GetDefaultReader
- uid: System.Resources.ResourceSet.GetDefaultWriter*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultWriter
  nameWithType: ResourceSet.GetDefaultWriter
- uid: System.Resources.ResourceSet.GetEnumerator*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceSet.GetEnumerator
- uid: System.Resources.ResourceSet.GetObject*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject
  nameWithType: ResourceSet.GetObject
- uid: System.Resources.ResourceSet.GetString*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString
  nameWithType: ResourceSet.GetString
- uid: System.Resources.ResourceSet.ReadResources*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ReadResources
  nameWithType: ResourceSet.ReadResources
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator
