### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  langs:
  - csharp
  name: SafeMemoryMappedViewHandle
  nameWithType: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  type: Class
  summary: "Provides a safe handle that represents a view of a block of unmanaged memory for random access."
  remarks: "Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle%2A?displayProperty=fullName> property to obtain the safe handle.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafeMemoryMappedViewHandle : System.Runtime.InteropServices.SafeBuffer
  inheritance:
  - System.Runtime.InteropServices.SafeBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeMemoryMappedViewHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.SafeBuffer
  isExternal: false
  name: System.Runtime.InteropServices.SafeBuffer
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeMemoryMappedViewHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle*
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafeMemoryMappedViewHandle.ReleaseHandle
