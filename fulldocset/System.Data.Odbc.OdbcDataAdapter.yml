### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcDataAdapter
  id: OdbcDataAdapter
  children:
  - System.Data.Odbc.OdbcDataAdapter.#ctor
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.RowUpdated
  - System.Data.Odbc.OdbcDataAdapter.RowUpdating
  - System.Data.Odbc.OdbcDataAdapter.SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  - System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
  type: Class
  summary: "Represents a set of data commands and a connection to a data source that are used to fill the <xref href=&quot;System.Data.DataSet&quot;></xref> and update the data source. This class cannot be inherited."
  remarks: "The OdbcDataAdapter serves as a bridge between a `DataSet` and data source for retrieving and saving data. The OdbcDataAdapter provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the data source into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.       When the OdbcDataAdapter fills a <xref:System.Data.DataSet>, it creates the required tables and columns for the returned data if they do not already exist. However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction>. You may also have the OdbcDataAdapter create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. For more information, see [Adding Existing Constraints to a DataSet](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  When you call the `Fill` method on a data source that does not have a primary key column, the OdbcDataAdapter tries to promote the unique constraint column to the primary key. In the process, the OdbcDataAdapter marks the unique constraint as not nullable. This behavior works unless there is a null value in the unique constraint column. If there is a null value, the `Fill` method fails with a constraint violation. To avoid this situation, do not allow null values in the unique constraint column.      > [!NOTE] >  Due to the limitations of native ODBC drivers, only one <xref:System.Data.DataTable> is ever returned when you call <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. This is true even when executing SQL batch statements from which multiple <xref:System.Data.DataTable> objects would be expected.       The OdbcDataAdapter also includes the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, and `TableMappings` properties to facilitate loading and updating of data."
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, OdbcDataAdapter, and <xref:System.Data.Odbc.OdbcConnection> to select records and populate a `DataSet` with the selected rows.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OdbcDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref> class."
  remarks: "When you create an instance of <xref:System.Data.Odbc.OdbcDataAdapter>, the following write-only and read-only properties are set to their default values, as shown in the table.      |Properties|Default value|   |----------------|-------------------|   |<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|   |<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|       You can change the value of any of these properties through a separate call to the property."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_2_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_2_1.vb)]"
  syntax:
    content: public OdbcDataAdapter ();
    parameters: []
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  id: '#ctor(System.Data.Odbc.OdbcCommand)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref> class with the specified SQL SELECT statement."
  remarks: "This implementation of the <xref:System.Data.Odbc.OdbcDataAdapter> constructor sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.       When you create an instance of <xref:System.Data.Odbc.OdbcDataAdapter>, the following write-only and read-only properties are set to their default values, as shown in the table.      |Properties|Initial value|   |----------------|-------------------|   |<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|   |<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|       You can change the value of any of these properties through a separate call to the property."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_6_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_6_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (System.Data.Odbc.OdbcCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.Odbc.OdbcCommand
      description: "An <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref> that is an SQL SELECT statement or stored procedure, and is set as the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*> property of the <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>."
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref> class with an SQL SELECT statement and an <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>."
  remarks: "This implementation of the <xref:System.Data.Odbc.OdbcDataAdapter> can be useful in an application that must call the `Fill` method for two or more <xref:System.Data.Odbc.OdbcDataAdapter> objects."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/visualbasic/d0ba4f92-5ec4-4c3a-b38b-_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/csharp/d0ba4f92-5ec4-4c3a-b38b-_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, System.Data.Odbc.OdbcConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "A string that is a SQL SELECT statement or stored procedure to be used by the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*> property of the <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>."
    - id: selectConnection
      type: System.Data.Odbc.OdbcConnection
      description: "An <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref> that represents the connection."
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref> class with an SQL SELECT statement and a connection string."
  remarks: "This overload of the <xref:System.Data.Odbc.OdbcDataAdapter> constructor uses the `selectConnectionString` parameter to set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property. However, it does not open the connection. You still must explicitly open the connection."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_1_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_1_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "A string that is a SQL SELECT statement or stored procedure to be used by the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*> property of the <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>."
    - id: selectConnectionString
      type: System.String
      description: "The connection string."
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "To be added."
    - id: command
      type: System.Data.IDbCommand
      description: "To be added."
    - id: statementType
      type: System.Data.StatementType
      description: "To be added."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "To be added."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "To be added."
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "To be added."
    - id: command
      type: System.Data.IDbCommand
      description: "To be added."
    - id: statementType
      type: System.Data.StatementType
      description: "To be added."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "To be added."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "To be added."
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets or sets an SQL statement or stored procedure used to delete records in the data source."
  remarks: "When the DeleteCommand property is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand>, the <xref:System.Data.Odbc.OdbcCommand> is not cloned. Instead, the DeleteCommand maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand>.       During an update operation, if DeleteCommand is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.Odbc.OdbcCommandBuilder> class to automatically generate the DeleteCommand, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the data source. To do this, set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>. The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>. For more information, see [Generating Commands with CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_2_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_2_1.cs)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand DeleteCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "An <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref> used during an update operation to delete records in the data source that correspond to deleted rows in the <xref href=&quot;System.Data.DataSet&quot;></xref>."
  overload: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets or sets an SQL statement or stored procedure used to insert new records into the data source."
  remarks: "When the InsertCommand property is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand> object, the <xref:System.Data.Odbc.OdbcCommand> is not cloned. Instead, InsertCommand maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand>.       During an update operation, if InsertCommand is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.Odbc.OdbcCommandBuilder> class to automatically generate InsertCommand, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the data source. To do this, set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>. The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>. For more information, see [Generating Commands with CommandBuilders](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> property of the <xref:System.Data.Odbc.OdbcCommand> object."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_0_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_0_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand InsertCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "An <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref> used during an update operation to insert records in the data source that correspond to new rows in the <xref href=&quot;System.Data.DataSet&quot;></xref>."
  overload: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "To be added."
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "To be added."
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Occurs during an update operation after a command is executed against the data source."
  remarks: "When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated. The order of execution is as follows:      1.  The values in the <xref:System.Data.DataRow> are moved to the parameter values.      2.  The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.      3.  The command executes.      4.  If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.      5.  If there are output parameters, they are placed in the <xref:System.Data.DataRow>.      6.  The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.      7.  <xref:System.Data.DataRow.AcceptChanges%2A> is called."
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.Odbc.OdbcRowUpdatedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Occurs during <xref:System.Data.Common.DbDataAdapter.Update*> before a command is executed against the data source."
  remarks: "When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated. The order of execution is as follows:      1.  The values in the <xref:System.Data.DataRow> are moved to the parameter values.      2.  The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.      3.  The command executes.      4.  If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.      5.  If there are output parameters, they are placed in the <xref:System.Data.DataRow>.      6.  The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.      7.  <xref:System.Data.DataRow.AcceptChanges%2A> is called."
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.Odbc.OdbcRowUpdatingEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets or sets an SQL statement or stored procedure used to select records in the data source."
  remarks: "When SelectCommand is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand>, the <xref:System.Data.Odbc.OdbcCommand> is not cloned. Instead, the SelectCommand maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand> object.       If SelectCommand returns no rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the SelectCommand and <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_3_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_3_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand SelectCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "An <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref> that is used during a fill operation to select records from data source for placement in the <xref href=&quot;System.Data.DataSet&quot;></xref>."
  overload: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "For a description of this member, see <xref:System.Data.IDbDataAdapter.DeleteCommand*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface."
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "An <xref href=&quot;System.Data.IDbCommand&quot;></xref> used during an update to delete records in the data source for deleted rows in the data set."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "For a description of this member, see <xref:System.Data.IDbDataAdapter.InsertCommand*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface."
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "An <xref href=&quot;System.Data.IDbCommand&quot;></xref> that is used during an update to insert records from a data source for placement in the data set."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "For a description of this member, see <xref:System.Data.IDbDataAdapter.SelectCommand*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface."
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "An <xref href=&quot;System.Data.IDbCommand&quot;></xref> that is used during an update to select records from a data source for placement in the data set."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "For a description of this member, see <xref:System.Data.IDbDataAdapter.UpdateCommand*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface."
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "An <xref href=&quot;System.Data.IDbCommand&quot;></xref> used during an update to update records in the data source for modified rows in the data set."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.ICloneable> interface."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A new <xref:System.Object> that is a copy of this instance."
  overload: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets or sets an SQL statement or stored procedure used to update records in the data source."
  remarks: "When UpdateCommand is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand>, the <xref:System.Data.Odbc.OdbcCommand> is not cloned. Instead, the UpdateCommand maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand> object.       During an update operation, if UpdateCommand is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.Odbc.OdbcCommandBuilder> class to automatically generate UpdateCommand, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the data source. To do this, set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>. The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>. For more information, see [Generating Commands with CommandBuilders](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> property of the <xref:System.Data.Odbc.OdbcCommand> object."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand UpdateCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "An <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref> used during an update operation to update records in the data source that correspond to modified rows in the <xref href=&quot;System.Data.DataSet&quot;></xref>."
  overload: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
- uid: System.Data.Odbc.OdbcRowUpdatedEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatedEventHandler
  nameWithType: OdbcRowUpdatedEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatedEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
- uid: System.Data.Odbc.OdbcRowUpdatingEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatingEventHandler
  nameWithType: OdbcRowUpdatingEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatingEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OdbcDataAdapter.OnRowUpdated
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OdbcDataAdapter.OnRowUpdating
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
