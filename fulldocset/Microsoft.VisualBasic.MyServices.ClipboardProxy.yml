### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy
  id: ClipboardProxy
  children:
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)
  langs:
  - csharp
  name: ClipboardProxy
  nameWithType: ClipboardProxy
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy
  type: Class
  summary: "Provides methods for manipulating the Clipboard."
  remarks: "Items moved or copied to the Clipboard persist even after the application is shut down.       Data on the Clipboard can be in any data format, also called a Clipboard format. For a list of predefined formats to use with the Clipboard, see <xref:System.Windows.Forms.DataFormats>. When an item is moved or copied to the Clipboard, items in other formats are cleared. To make other formats persist, use <xref:Microsoft.VisualBasic.VariantType>, which copies everything existing on the current Clipboard, including items pasted from other applications. Place data on the Clipboard in multiple formats to maximize the possibility that a target application, whose format requirements you might not know, can successfully retrieve the data.       Because all Windows applications share the system Clipboard, the contents may change when you switch to another application.       A class must be serializable for it to be put on the Clipboard. See [Serialization](~/add/includes/ajax-current-ext-md.md) for more information.       When accessing the Clipboard remotely, a <xref:System.Threading.ThreadStateException> is thrown unless the accessing thread operates in STA (single-threaded apartment) mode. To resolve this issue, set the `ThreadApartmentState` to `STA`. For more information, see <xref:System.STAThreadAttribute>.       For more information, see [Storing Data to and Reading from the Clipboard](~/add/includes/ajax-current-ext-md.md).      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example reads text from the Clipboard into the string `textOnClipboard`.  \n  \n [!code-vb[VbVbcnMyClipboard#6](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._26_1.vb)]  \n  \n This example will fail if there is no text on the Clipboard."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class ClipboardProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear
  id: Clear
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: Clear()
  nameWithType: ClipboardProxy.Clear()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Clears the Clipboard."
  remarks: "The <xref:System.Security.Permissions.UIPermission> class controls access to the Clipboard, and the associated <xref:System.Security.Permissions.UIPermissionClipboard> enumeration value indicates the level of access. For more information, see [Additional Security Considerations in Windows Forms](~/add/includes/ajax-current-ext-md.md).      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example clears the Clipboard.  \n  \n```  \nMy.Computer.Clipboard.Clear()  \n```  \n  \n This removes all data from the Clipboard."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio
  id: ContainsAudio
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsAudio()
  nameWithType: ClipboardProxy.ContainsAudio()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Indicates whether the Clipboard contains audio data."
  remarks: "## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example determines whether the Clipboard contains audio data and displays the result.  \n  \n [!code-vb[VbRefClipbd#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._6_1.vb)]"
  syntax:
    content: public bool ContainsAudio ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if audio data is stored on the Clipboard; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)
  id: ContainsData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsData(String)
  nameWithType: ClipboardProxy.ContainsData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Indicates whether the Clipboard contains data in the specified custom format."
  remarks: "If you have placed custom formatted data on the Clipboard, this method allows you to check the Clipboard for data in that format.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example checks for data in the custom format `specialFormat`.  \n  \n [!code-vb[VbRefClipbd#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._4_1.vb)]  \n  \n Replace `specialFormat` with the name of the custom format you wish to check."
  syntax:
    content: public bool ContainsData (string format);
    parameters:
    - id: format
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Name of the custom format to be checked. Required."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if data in the specified custom format is stored on the Clipboard; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList
  id: ContainsFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsFileDropList()
  nameWithType: ClipboardProxy.ContainsFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returns a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> indicating whether the Clipboard contains a file drop list."
  remarks: "A file drop list is a collection of strings containing path information for files.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example determines if there is a file drop list on the Clipboard and adds the list to the `ListBox``lstFiles` if they exist.  \n  \n [!code-vb[VbRefClipbd#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._144_1.vb)]  \n  \n This code will create an exception if there is no `ListBox` named `lstFiles`."
  syntax:
    content: public bool ContainsFileDropList ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if a file drop list is stored on the Clipboard; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage
  id: ContainsImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsImage()
  nameWithType: ClipboardProxy.ContainsImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Returns a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> indicating whether an image is stored on the Clipboard."
  remarks: "## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example checks to see if there is an image on the Clipboard and, if so, gets the image and adds it to `PictureBox1`.  \n  \n [!code-vb[VbRefClipbd#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._11_1.vb)]  \n  \n This example depends on the existence of a `PictureBox` named `PictureBox1`."
  syntax:
    content: public bool ContainsImage ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if an image is stored on the Clipboard; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText
  id: ContainsText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsText()
  nameWithType: ClipboardProxy.ContainsText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Determines if there is text on the Clipboard."
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example determines if HTML text is stored on the Clipboard and reads from the Clipboard if it does.  \n  \n [!code-vb[VbRefClipbd#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._247_1.vb)]"
  syntax:
    content: public bool ContainsText ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the Clipboard contains text; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)
  id: ContainsText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsText(TextDataFormat)
  nameWithType: ClipboardProxy.ContainsText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(TextDataFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Determines if there is text on the Clipboard."
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example determines if HTML text is stored on the Clipboard and reads from the Clipboard if it does.  \n  \n [!code-vb[VbRefClipbd#5](~/add/codesnippet/visualbasic/0c2485af-49f6-4d82-8653-_1.vb)]"
  syntax:
    content: public bool ContainsText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>. If specified, identifies what text format to be checked for. Required."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the Clipboard contains text; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream
  id: GetAudioStream
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetAudioStream()
  nameWithType: ClipboardProxy.GetAudioStream()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retrieves an audio stream from the Clipboard."
  remarks: "## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example retrieves an audio stream from the Clipboard and plays it.  \n  \n [!code-vb[VbRefClipbd#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._230_1.vb)]"
  syntax:
    content: public System.IO.Stream GetAudioStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> object containing audio data or <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> if the Clipboard does not contain any audio data."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)
  id: GetData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetData(String)
  nameWithType: ClipboardProxy.GetData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retrieves data in a custom format from the Clipboard."
  remarks: "## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example reads data in the format `specialformat` from the Clipboard and writes it to file.  \n  \n [!code-vb[VbRefClipbd#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._77_1.vb)]  \n  \n Replace `specialformat` with the custom data format you wish to retrieve."
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Name of the data format. Required."
    return:
      type: System.Object
      description: "An <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> representing the Clipboard data or <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> if the Clipboard does not contain any data that is in the specified format or can be converted to that format."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject
  id: GetDataObject
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetDataObject()
  nameWithType: ClipboardProxy.GetDataObject()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retrieves data from the Clipboard as an <xref href=&quot;System.Windows.Forms.IDataObject&quot;></xref>."
  remarks: "This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example reads data from the Clipboard in the form of an <xref:System.Windows.Forms.IDataObject> and then writes it to a file.  \n  \n [!code-vb[VbRefClipbd#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._224_1.vb)]  \n  \n Replace `C:\\mylogfile` with the name of the file to which you want to write."
  syntax:
    content: public System.Windows.Forms.IDataObject GetDataObject ();
    parameters: []
    return:
      type: System.Windows.Forms.IDataObject
      description: "An <xref href=&quot;System.Windows.Forms.IDataObject&quot;></xref> object that represents the data currently on the Clipboard, or <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> if there is no data on the Clipboard."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList
  id: GetFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetFileDropList()
  nameWithType: ClipboardProxy.GetFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retrieves a collection of strings representing file names from the Clipboard."
  remarks: "This method is available only for non-server applications.       A file drop list is a collection of strings containing path information for files.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example determines if there is a file drop list on the Clipboard and adds the list to the `ListBox``lstFiles` if they exist.  \n  \n [!code-vb[VbRefClipbd#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._180_1.vb)]  \n  \n This code creates an exception if there is no `ListBox` named `lstFiles`."
  syntax:
    content: public System.Collections.Specialized.StringCollection GetFileDropList ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref> containing file names or <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> if the Clipboard does not contain any data that is in the <xref href=&quot;System.Windows.Forms.DataFormats.FileDrop&quot;></xref> format or can be converted to that format."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage
  id: GetImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetImage()
  nameWithType: ClipboardProxy.GetImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retrieves an image from the Clipboard."
  remarks: "## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example checks to see if there is an image on the Clipboard before retrieving it and assigning it to `PictureBox1`.  \n  \n [!code-vb[VbRefClipbd#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._153_1.vb)]  \n  \n For this example to function correctly, there must be a `PictureBox` named `PictureBox1` on your form."
  syntax:
    content: public System.Drawing.Image GetImage ();
    parameters: []
    return:
      type: System.Drawing.Image
      description: "An <xref href=&quot;System.Drawing.Image&quot;></xref> representing the Clipboard image data or <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> if the Clipboard does not contain any data that is in the <xref href=&quot;System.Windows.Forms.DataFormats.Bitmap&quot;></xref> format or can be converted to that format."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText
  id: GetText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetText()
  nameWithType: ClipboardProxy.GetText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retrieves text from the Clipboard."
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example reads text from the Clipboard into the string `textOnClipboard`.  \n  \n [!code-vb[VbVbcnMyClipboard#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._64_1.vb)]  \n  \n This example fails if there is no text on the Clipboard."
  syntax:
    content: public string GetText ();
    parameters: []
    return:
      type: System.String
      description: "The Clipboard text data or an empty string if the Clipboard does not contain data in the <xref href=&quot;System.Windows.Forms.DataFormats.Text&quot;></xref> or <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref> format, depending on the operating system."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)
  id: GetText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetText(TextDataFormat)
  nameWithType: ClipboardProxy.GetText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(TextDataFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retrieves text from the Clipboard."
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example reads text from the Clipboard into the string `textOnClipboard`.  \n  \n [!code-vb[VbVbcnMyClipboard#6](~/add/codesnippet/visualbasic/7e88b6bf-806d-44fd-8218-_1.vb)]  \n  \n This example fails if there is no text on the Clipboard."
  syntax:
    content: public string GetText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>. If specified, identifies what text format should be retrieved. Default is <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>. Required."
    return:
      type: System.String
      description: "The Clipboard text data or an empty string if the Clipboard does not contain data in the specified format."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])
  id: SetAudio(System.Byte[])
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetAudio(Byte[])
  nameWithType: ClipboardProxy.SetAudio(Byte[])
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Byte[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes audio data to the Clipboard."
  remarks: "> [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example creates the byte array `musicReader`, reads the file `cool.wav` into it, and then writes it to the Clipboard.  \n  \n [!code-vb[VbRefClipbd#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._176_1.vb)]  \n  \n Replace `cool.wav` with the name and path of the file you wish to read."
  syntax:
    content: public void SetAudio (byte[] audioBytes);
    parameters:
    - id: audioBytes
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref> array. Audio data to be written to the Clipboard. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)
  id: SetAudio(System.IO.Stream)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetAudio(Stream)
  nameWithType: ClipboardProxy.SetAudio(Stream)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Stream)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes audio data to the Clipboard."
  remarks: "> [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example creates the byte array `musicReader`, reads the file `cool.wav` into it, and then writes it to the Clipboard.  \n  \n [!code-vb[VbRefClipbd#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._80_1.vb)]  \n  \n Replace `cool.wav` with the name and path of the file you wish to read."
  syntax:
    content: public void SetAudio (System.IO.Stream audioStream);
    parameters:
    - id: audioStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream> Audio data to be written to the clipboard. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: ClipboardProxy.SetData(String,Object)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes data in a custom format to the Clipboard."
  remarks: "> [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example writes the `DataObject``dataChunk` to the Clipboard in the custom format `specialFormat`.  \n  \n [!code-vb[VbVbcnMyClipboard#7](~/add/codesnippet/visualbasic/2a4557c6-ddce-4e27-83d4-_1.vb)]  \n  \n This example depends on the existence of the custom data format `specialFormat`."
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Format of data. Required."
    - id: data
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. Data object to be written to the Clipboard. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)
  id: SetDataObject(System.Windows.Forms.DataObject)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetDataObject(DataObject)
  nameWithType: ClipboardProxy.SetDataObject(DataObject)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(DataObject)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes a <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> to the Clipboard."
  remarks: "This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.      > [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example writes the data object `dataChunk` to the Clipboard.  \n  \n [!code-vb[VbVbcnMyClipboard#9](~/add/codesnippet/visualbasic/2227a0e7-a8f8-44bb-8836-_1.vb)]  \n  \n This example depends on the existence of the data object `dataChunk`."
  syntax:
    content: public void SetDataObject (System.Windows.Forms.DataObject data);
    parameters:
    - id: data
      type: System.Windows.Forms.DataObject
      description: "<xref href=&quot;System.Windows.Forms.DataObject&quot;></xref>. Data object to be written to the Clipboard. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)
  id: SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetFileDropList(StringCollection)
  nameWithType: ClipboardProxy.SetFileDropList(StringCollection)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(StringCollection)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes a collection of strings representing file paths to the Clipboard."
  remarks: "A file drop list is a collection of strings representing file names.      > [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example gets the collection of file names from **MyDocuments**, converts it to a file drop list, and writes it to the Clipboard.  \n  \n [!code-vb[VbRefClipbd#3](~/add/codesnippet/visualbasic/d3490fa1-b01d-4c61-801d-_1.vb)]"
  syntax:
    content: public void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Specialized.StringCollection
      description: "<xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>. List of file names. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)
  id: SetImage(System.Drawing.Image)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetImage(Image)
  nameWithType: ClipboardProxy.SetImage(Image)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(Image)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes an image to the Clipboard."
  remarks: "> [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example writes the image `coolPicture` to the Clipboard.  \n  \n [!code-vb[VbVbcnMyClipboard#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._130_1.vb)]  \n  \n This example depends on the existence of the image `coolPicture`."
  syntax:
    content: public void SetImage (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>. Image to be written. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)
  id: SetText(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetText(String)
  nameWithType: ClipboardProxy.SetText(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes text to the Clipboard."
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.       Previous Clipboard formats are not preserved.      > [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example writes the string `This is a test string.` to the Clipboard.  \n  \n [!code-vb[VbVbcnMyClipboard#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._215_1.vb)]"
  syntax:
    content: public void SetText (string text);
    parameters:
    - id: text
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Text to be written. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>text</code> is an empty string."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)
  id: SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetText(String,TextDataFormat)
  nameWithType: ClipboardProxy.SetText(String,TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String,TextDataFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Writes text to the Clipboard."
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.       Previous Clipboard formats are not preserved.      > [!IMPORTANT] >  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example writes the string `This is a test string.` to the Clipboard.  \n  \n [!code-vb[VbVbcnMyClipboard#1](~/add/codesnippet/visualbasic/6578074a-c4d2-435d-9e63-_1.vb)]"
  syntax:
    content: public void SetText (string text, System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: text
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Text to be written. Required."
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: "<xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>. Format to be used when writing text. Default is <xref href=&quot;System.Windows.Forms.TextDataFormat&quot;></xref>. Required."
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>text</code> is an empty string."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: Clear()
  nameWithType: ClipboardProxy.Clear()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear()
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsAudio()
  nameWithType: ClipboardProxy.ContainsAudio()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsData(String)
  nameWithType: ClipboardProxy.ContainsData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsFileDropList()
  nameWithType: ClipboardProxy.ContainsFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList()
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsImage()
  nameWithType: ClipboardProxy.ContainsImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage()
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsText()
  nameWithType: ClipboardProxy.ContainsText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText()
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsText(TextDataFormat)
  nameWithType: ClipboardProxy.ContainsText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(TextDataFormat)
- uid: System.Windows.Forms.TextDataFormat
  parent: System.Windows.Forms
  isExternal: false
  name: TextDataFormat
  nameWithType: TextDataFormat
  fullName: System.Windows.Forms.TextDataFormat
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetAudioStream()
  nameWithType: ClipboardProxy.GetAudioStream()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetData(String)
  nameWithType: ClipboardProxy.GetData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(String)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetDataObject()
  nameWithType: ClipboardProxy.GetDataObject()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject()
- uid: System.Windows.Forms.IDataObject
  parent: System.Windows.Forms
  isExternal: false
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetFileDropList()
  nameWithType: ClipboardProxy.GetFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList()
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetImage()
  nameWithType: ClipboardProxy.GetImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage()
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetText()
  nameWithType: ClipboardProxy.GetText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText()
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetText(TextDataFormat)
  nameWithType: ClipboardProxy.GetText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(TextDataFormat)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetAudio(Byte[])
  nameWithType: ClipboardProxy.SetAudio(Byte[])
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetAudio(Stream)
  nameWithType: ClipboardProxy.SetAudio(Stream)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Stream)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetData(String,Object)
  nameWithType: ClipboardProxy.SetData(String,Object)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(String,Object)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetDataObject(DataObject)
  nameWithType: ClipboardProxy.SetDataObject(DataObject)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(DataObject)
- uid: System.Windows.Forms.DataObject
  parent: System.Windows.Forms
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Windows.Forms.DataObject
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetFileDropList(StringCollection)
  nameWithType: ClipboardProxy.SetFileDropList(StringCollection)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(StringCollection)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetImage(Image)
  nameWithType: ClipboardProxy.SetImage(Image)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(Image)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetText(String)
  nameWithType: ClipboardProxy.SetText(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetText(String,TextDataFormat)
  nameWithType: ClipboardProxy.SetText(String,TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String,TextDataFormat)
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: Clear
  nameWithType: ClipboardProxy.Clear
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsAudio
  nameWithType: ClipboardProxy.ContainsAudio
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsData
  nameWithType: ClipboardProxy.ContainsData
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsFileDropList
  nameWithType: ClipboardProxy.ContainsFileDropList
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsImage
  nameWithType: ClipboardProxy.ContainsImage
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsText
  nameWithType: ClipboardProxy.ContainsText
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetAudioStream
  nameWithType: ClipboardProxy.GetAudioStream
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetData
  nameWithType: ClipboardProxy.GetData
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetDataObject
  nameWithType: ClipboardProxy.GetDataObject
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetFileDropList
  nameWithType: ClipboardProxy.GetFileDropList
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetImage
  nameWithType: ClipboardProxy.GetImage
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetText
  nameWithType: ClipboardProxy.GetText
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetAudio
  nameWithType: ClipboardProxy.SetAudio
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetData
  nameWithType: ClipboardProxy.SetData
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetDataObject
  nameWithType: ClipboardProxy.SetDataObject
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetFileDropList
  nameWithType: ClipboardProxy.SetFileDropList
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetImage
  nameWithType: ClipboardProxy.SetImage
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetText
  nameWithType: ClipboardProxy.SetText
