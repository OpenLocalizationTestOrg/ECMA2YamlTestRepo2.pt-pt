### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ChannelEndpointElement
  id: ChannelEndpointElement
  children:
  - System.ServiceModel.Configuration.ChannelEndpointElement.#ctor
  - System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)
  - System.ServiceModel.Configuration.ChannelEndpointElement.Address
  - System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration
  - System.ServiceModel.Configuration.ChannelEndpointElement.Binding
  - System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration
  - System.ServiceModel.Configuration.ChannelEndpointElement.Contract
  - System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration
  - System.ServiceModel.Configuration.ChannelEndpointElement.Headers
  - System.ServiceModel.Configuration.ChannelEndpointElement.Identity
  - System.ServiceModel.Configuration.ChannelEndpointElement.Kind
  - System.ServiceModel.Configuration.ChannelEndpointElement.Name
  - System.ServiceModel.Configuration.ChannelEndpointElement.Properties
  - System.ServiceModel.Configuration.ChannelEndpointElement.Reset(System.Configuration.ConfigurationElement)
  langs:
  - csharp
  name: ChannelEndpointElement
  nameWithType: ChannelEndpointElement
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement
  type: Class
  summary: "Provides options for configuring contract, binding, and address properties of the channel endpoint, which are used by clients to connect to service endpoints on the server. This class cannot be inherited."
  syntax:
    content: 'public sealed class ChannelEndpointElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: ChannelEndpointElement()
  nameWithType: ChannelEndpointElement.ChannelEndpointElement()
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.ChannelEndpointElement&quot;></xref> class."
  syntax:
    content: public ChannelEndpointElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)
  id: '#ctor(System.ServiceModel.EndpointAddress,System.String)'
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: ChannelEndpointElement(EndpointAddress,String)
  nameWithType: ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.ChannelEndpointElement&quot;></xref> class with the specified endpoint address and contract type."
  syntax:
    content: public ChannelEndpointElement (System.ServiceModel.EndpointAddress address, string contractType);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Specifies the address of the endpoint. The default is an empty string. The address must be an absolute URI."
    - id: contractType
      type: System.String
      description: "A string that indicates which contract this endpoint is exposing. The assembly must implement the contract type."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Address
  id: Address
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Address
  nameWithType: ChannelEndpointElement.Address
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Address
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Specifies the address of the endpoint."
  syntax:
    content: public Uri Address { get; set; }
    return:
      type: System.Uri
      description: "A URI that contains the address of the endpoint. The address must be an absolute URI."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Address*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration
  id: BehaviorConfiguration
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: BehaviorConfiguration
  nameWithType: ChannelEndpointElement.BehaviorConfiguration
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the behavior name of the behavior to be used to instantiate the endpoint."
  syntax:
    content: public string BehaviorConfiguration { get; set; }
    return:
      type: System.String
      description: "The behavior name of the behavior to be used to instantiate the endpoint. The behavior name must be in scope at the point the service is defined. The default is an empty string."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Binding
  id: Binding
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Binding
  nameWithType: ChannelEndpointElement.Binding
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Binding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the type of binding to use."
  syntax:
    content: public string Binding { get; set; }
    return:
      type: System.String
      description: "The type of binding to use. The type must have a registered configuration section in order to be referenced. The type is the registered by section name, rather than by the type name of the binding."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Binding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration
  id: BindingConfiguration
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: BindingConfiguration
  nameWithType: ChannelEndpointElement.BindingConfiguration
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the binding name of the binding to use when the endpoint is instantiated."
  syntax:
    content: public string BindingConfiguration { get; set; }
    return:
      type: System.String
      description: "The binding name of the binding to use when the endpoint is instantiated. The binding name must be in scope at the point the endpoint is defined. The default is an empty string."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Contract
  id: Contract
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Contract
  nameWithType: ChannelEndpointElement.Contract
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Contract
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the contract that this endpoint is exposing."
  syntax:
    content: public string Contract { get; set; }
    return:
      type: System.String
      description: "The contract this endpoint is exposing. The assembly must implement the contract type."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Contract*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration
  id: EndpointConfiguration
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: EndpointConfiguration
  nameWithType: ChannelEndpointElement.EndpointConfiguration
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the name of the standard endpoint that is set by the <xref:System.ServiceModel.Configuration.ChannelEndpointElement.Kind*> property, which references to the additional configuration information of this standard endpoint. The same name must be defined in the <xref href=&quot;System.ServiceModel.Configuration.StandardEndpointsSection&quot;></xref>."
  syntax:
    content: public string EndpointConfiguration { get; set; }
    return:
      type: System.String
      description: "A string that specifies the name of the standard endpoint."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Headers
  id: Headers
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Headers
  nameWithType: ChannelEndpointElement.Headers
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Headers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets a collection of address headers."
  syntax:
    content: public System.ServiceModel.Configuration.AddressHeaderCollectionElement Headers { get; }
    return:
      type: System.ServiceModel.Configuration.AddressHeaderCollectionElement
      description: "An <xref href=&quot;System.ServiceModel.Configuration.AddressHeaderCollectionElement&quot;></xref> that contains a collection of address headers."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Identity
  id: Identity
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Identity
  nameWithType: ChannelEndpointElement.Identity
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Identity
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets an identity that enables the authentication of an endpoint by other endpoints that are exchanging messages with it."
  syntax:
    content: public System.ServiceModel.Configuration.IdentityElement Identity { get; }
    return:
      type: System.ServiceModel.Configuration.IdentityElement
      description: "An <xref href=&quot;System.ServiceModel.Configuration.IdentityElement&quot;></xref> that contains configuration settings for enabling the authentication of an endpoint by other endpoints exchanging messages with it."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Kind
  id: Kind
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Kind
  nameWithType: ChannelEndpointElement.Kind
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Kind
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the type of standard endpoint applied. The type must be registered in the <xref uid=&quot;langword_csharp_&lt;extensions&gt;&quot; name=&quot;&lt;extensions&gt;&quot; href=&quot;&quot;></xref> section or in machine.config. If nothing is specified, a common channel endpoint is created."
  syntax:
    content: public string Kind { get; set; }
    return:
      type: System.String
      description: "A string that denotes the type of standard endpoint."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Kind*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Name
  id: Name
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Name
  nameWithType: ChannelEndpointElement.Name
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a unique identifier of an endpoint for a given contract."
  remarks: "The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "An endpoint for a given contract. The default is an empty string. The service model allows the user to define multiple clients for a given contract type. Each definition must be differentiated by a unique configuration name. If this property is omitted, the corresponding endpoint is used as the default endpoint associated with the specified contract type."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Properties
  nameWithType: ChannelEndpointElement.Properties
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ChannelEndpointElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "To be added."
  overload: System.ServiceModel.Configuration.ChannelEndpointElement.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: ChannelEndpointElement()
  nameWithType: ChannelEndpointElement.ChannelEndpointElement()
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement()
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor(System.ServiceModel.EndpointAddress,System.String)
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: ChannelEndpointElement(EndpointAddress,String)
  nameWithType: ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.ChannelEndpointElement(EndpointAddress,String)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Address
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Address
  nameWithType: ChannelEndpointElement.Address
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Address
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: BehaviorConfiguration
  nameWithType: ChannelEndpointElement.BehaviorConfiguration
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Binding
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Binding
  nameWithType: ChannelEndpointElement.Binding
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Binding
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: BindingConfiguration
  nameWithType: ChannelEndpointElement.BindingConfiguration
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Contract
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Contract
  nameWithType: ChannelEndpointElement.Contract
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Contract
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: EndpointConfiguration
  nameWithType: ChannelEndpointElement.EndpointConfiguration
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Headers
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Headers
  nameWithType: ChannelEndpointElement.Headers
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Headers
- uid: System.ServiceModel.Configuration.AddressHeaderCollectionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: AddressHeaderCollectionElement
  nameWithType: AddressHeaderCollectionElement
  fullName: System.ServiceModel.Configuration.AddressHeaderCollectionElement
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Identity
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Identity
  nameWithType: ChannelEndpointElement.Identity
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Identity
- uid: System.ServiceModel.Configuration.IdentityElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: IdentityElement
  nameWithType: IdentityElement
  fullName: System.ServiceModel.Configuration.IdentityElement
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Kind
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Kind
  nameWithType: ChannelEndpointElement.Kind
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Kind
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Name
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Name
  nameWithType: ChannelEndpointElement.Name
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Name
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Properties
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Properties
  nameWithType: ChannelEndpointElement.Properties
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ChannelEndpointElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement.Reset(ConfigurationElement)
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.#ctor*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: ChannelEndpointElement
  nameWithType: ChannelEndpointElement.ChannelEndpointElement
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Address*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Address
  nameWithType: ChannelEndpointElement.Address
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BehaviorConfiguration*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: BehaviorConfiguration
  nameWithType: ChannelEndpointElement.BehaviorConfiguration
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Binding*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Binding
  nameWithType: ChannelEndpointElement.Binding
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.BindingConfiguration*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: BindingConfiguration
  nameWithType: ChannelEndpointElement.BindingConfiguration
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Contract*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Contract
  nameWithType: ChannelEndpointElement.Contract
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.EndpointConfiguration*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: EndpointConfiguration
  nameWithType: ChannelEndpointElement.EndpointConfiguration
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Headers*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Headers
  nameWithType: ChannelEndpointElement.Headers
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Identity*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Identity
  nameWithType: ChannelEndpointElement.Identity
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Kind*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Kind
  nameWithType: ChannelEndpointElement.Kind
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Name*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Name
  nameWithType: ChannelEndpointElement.Name
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Properties*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Properties
  nameWithType: ChannelEndpointElement.Properties
- uid: System.ServiceModel.Configuration.ChannelEndpointElement.Reset*
  parent: System.ServiceModel.Configuration.ChannelEndpointElement
  isExternal: false
  name: Reset
  nameWithType: ChannelEndpointElement.Reset
