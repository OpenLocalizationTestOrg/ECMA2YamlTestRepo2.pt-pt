### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.WebScriptServiceHostFactory
  id: WebScriptServiceHostFactory
  children:
  - System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor
  - System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  langs:
  - csharp
  name: WebScriptServiceHostFactory
  nameWithType: WebScriptServiceHostFactory
  fullName: System.ServiceModel.Activation.WebScriptServiceHostFactory
  type: Class
  summary: "Adiciona automaticamente um ponto de final do ASP.NET AJAX para um serviço, sem necessidade de configuração, num ambiente de alojamento gerido que activa dinamicamente instâncias de anfitrião para o serviço em resposta a mensagens a receber."
  remarks: "Esta fábrica fornece uma forma para adicionar um ponto de final do ASP.NET AJAX a um serviço sem necessidade de configuração. O ponto final é adicionado para quaisquer outros pontos finais de que são definidas na configuração, se aplicável. Os ambientes de alojamento geridos que suportam este tipo de ativação de dinâmica de anfitrião são os serviços de informação Internet (IIS) e serviços de ativação de processos do Windows (WAS).       Para utilizar nesta fábrica, especifique o WebScriptServiceHostFactory no `Factory` atributo o [ @ServiceHost ](~/add/includes/ajax-current-ext-md.md) diretiva.       O ponto final do ASP.NET AJAX criado por esta fábrica está configurado com o <xref:System.ServiceModel.WebHttpBinding>e <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>, com todas as predefinições.</xref:System.ServiceModel.Description.WebScriptEnablingBehavior> </xref:System.ServiceModel.WebHttpBinding> O ponto final é criado um endereço relativo ao ficheiro. svc vazio. Se já a configuração de serviço define um ponto final neste endereço um <xref:System.InvalidOperationException>é acionada e o serviço não iniciar.</xref:System.InvalidOperationException>"
  example:
  - "Specify the WebScriptServiceHostFactory for the value of the `Factory` attribute in the [@ServiceHost](../Topic/@ServiceHost.md) directive to activate an ASP.NET AJAX endpoint for the `MyService` service as shown in the following example.  \n  \n```  \n<% @ServiceHost   \nService=\"MyService\"  \nLanguage=\"C#\"  \nDebug=\"true\"  \nFactory=\"WebScriptServiceHostFactory\"  \n%>  \n```"
  syntax:
    content: 'public class WebScriptServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory'
  inheritance:
  - System.ServiceModel.Activation.ServiceHostFactory
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.WebScriptServiceHostFactory
  langs:
  - csharp
  name: WebScriptServiceHostFactory()
  nameWithType: WebScriptServiceHostFactory.WebScriptServiceHostFactory()
  fullName: System.ServiceModel.Activation.WebScriptServiceHostFactory.WebScriptServiceHostFactory()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Activation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Activation.WebScriptServiceHostFactory&quot;> </xref> classe."
  remarks: "Normalmente, este construtor é chamado automaticamente pelo [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] como parte da ativação do serviço – é necessário chamar este método manualmente."
  syntax:
    content: public WebScriptServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  id: CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.WebScriptServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(Type,Uri[])
  nameWithType: WebScriptServiceHostFactory.CreateServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(Type,Uri[])
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Activation
  summary: "Cria uma classe derivada de <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> para um tipo de serviço com um endereço base específico que pode ser utilizado para ativar automaticamente a pontos finais do ASP.NET AJAX em determinados cenários especificado."
  remarks: "Normalmente, este método é denominado automaticamente pelo [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] como parte da ativação do serviço – é necessário chamar este método manualmente."
  syntax:
    content: protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço para o anfitrião."
    - id: baseAddresses
      type: System.Uri[]
      description: "O <xref:System.Array>do tipo <xref:System.Uri>que contenha os endereços base para o serviço alojado.</xref:System.Uri> </xref:System.Array>"
    return:
      type: System.ServiceModel.ServiceHost
      description: "A <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> para o tipo de serviço especificado com o endereço base especificado."
  overload: System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Outro serviço utiliza o mesmo endereço base ou outro ponto final está a utilizar o mesmo endereço como o ponto final do ASP.NET AJAX nesta fábrica está a tentar criar."
  platform:
  - net462
references:
- uid: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: System.ServiceModel.Activation.ServiceHostFactory
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.WebScriptServiceHostFactory
  isExternal: false
  name: WebScriptServiceHostFactory()
  nameWithType: WebScriptServiceHostFactory.WebScriptServiceHostFactory()
  fullName: System.ServiceModel.Activation.WebScriptServiceHostFactory.WebScriptServiceHostFactory()
- uid: System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.WebScriptServiceHostFactory
  isExternal: false
  name: CreateServiceHost(Type,Uri[])
  nameWithType: WebScriptServiceHostFactory.CreateServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(Type,Uri[])
- uid: System.ServiceModel.ServiceHost
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.WebScriptServiceHostFactory
  isExternal: false
  name: WebScriptServiceHostFactory
  nameWithType: WebScriptServiceHostFactory.WebScriptServiceHostFactory
- uid: System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.WebScriptServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: WebScriptServiceHostFactory.CreateServiceHost
