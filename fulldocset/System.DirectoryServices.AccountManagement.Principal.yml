### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.Principal
  id: Principal
  children:
  - System.DirectoryServices.AccountManagement.Principal.#ctor
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  langs:
  - csharp
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
  type: Class
  summary: "Encapsulates the account data and operations common to all security principals. This is the abstract base class from which all security principals are derived."
  remarks: "Custom extension classes that derive from this class can call this constructor from the derived class constructor to initialize the base class. For more information, see the [Principal Extensions](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) overview topic."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Name ( {Name} )")]

      public abstract class Principal : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Principal()
  nameWithType: Principal.Principal()
  fullName: System.DirectoryServices.AccountManagement.Principal.Principal()
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Initializes a new instance of the <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> class. This constructor is called by derived-class constructors to initialize the base class and is not intended to be called directly from your code."
  remarks: "Custom extension classes that derive from this class can call this constructor from the derived class constructor to initialize the base class. For more information, see the [Principal Extensions](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) overview topic."
  syntax:
    content: protected Principal ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  id: CheckDisposedOrDeleted
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: CheckDisposedOrDeleted()
  nameWithType: Principal.CheckDisposedOrDeleted()
  fullName: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Determines whether the <xref:System.DirectoryServices.AccountManagement.Principal.Dispose*> or <xref:System.DirectoryServices.AccountManagement.Principal.Delete*> methods have been called on this class. This method is called by classes that derive from this principal class."
  remarks: "This method checks whether the object has been disposed before it determines whether it has been deleted."
  syntax:
    content: protected void CheckDisposedOrDeleted ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref:System.DirectoryServices.AccountManagement.Principal.Dispose*> method has been called on this principal object."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.DirectoryServices.AccountManagement.Principal.Delete*> method has been called on this principal object."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Context
  id: Context
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Context
  nameWithType: Principal.Context
  fullName: System.DirectoryServices.AccountManagement.Principal.Context
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets a principal context that is associated with the principal."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalContext Context { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> object that contains the context associated with this principal."
  overload: System.DirectoryServices.AccountManagement.Principal.Context*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  id: ContextRaw
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ContextRaw
  nameWithType: Principal.ContextRaw
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets a principal context that is associated with this principal."
  syntax:
    content: protected System.DirectoryServices.AccountManagement.PrincipalContext ContextRaw { get; set; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> object that contains the context associated with this principal."
  overload: System.DirectoryServices.AccountManagement.Principal.ContextRaw*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType
  id: ContextType
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ContextType
  nameWithType: Principal.ContextType
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextType
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets the context type enumeraton value that specifies the type of principal context associated with this principal."
  remarks: "The context type is set on the principal context object in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor. The value stored in this class is associated with the <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType%2A> property."
  syntax:
    content: public System.DirectoryServices.AccountManagement.ContextType ContextType { get; }
    return:
      type: System.DirectoryServices.AccountManagement.ContextType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.ContextType&quot;></xref> enumeration value that specifies the context type."
  overload: System.DirectoryServices.AccountManagement.Principal.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Delete
  id: Delete
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Delete()
  nameWithType: Principal.Delete()
  fullName: System.DirectoryServices.AccountManagement.Principal.Delete()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Deletes the principal object from the store."
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object that is not persisted in the store.       The object has already been deleted.       The target context type must match the context type of the current principal."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Description
  id: Description
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Description
  nameWithType: Principal.Description
  fullName: System.DirectoryServices.AccountManagement.Principal.Description
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets or sets the description of the principal."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "The description text for this principal or null if there is no description."
  overload: System.DirectoryServices.AccountManagement.Principal.Description*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName
  id: DisplayName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: DisplayName
  nameWithType: Principal.DisplayName
  fullName: System.DirectoryServices.AccountManagement.Principal.DisplayName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets or sets the display name for this principal."
  syntax:
    content: public string DisplayName { get; set; }
    return:
      type: System.String
      description: "The display name for this principal or null if there is no display name."
  overload: System.DirectoryServices.AccountManagement.Principal.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose
  id: Dispose
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Dispose()
  nameWithType: Principal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.Principal.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Disposes the current instance of the <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object."
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  id: DistinguishedName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
  fullName: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets the distinguished name (DN) for this principal."
  syntax:
    content: public string DistinguishedName { get; }
    return:
      type: System.String
      description: "The DN for this principal or null if there is no DN."
  overload: System.DirectoryServices.AccountManagement.Principal.DistinguishedName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Principal.Equals(Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.Equals(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a Boolean value that specifies whether the supplied object is equal to the current object."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that is compared to the current instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the supplied object and current principal objects represent the same underlying principal in the store; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  id: ExtensionGet(System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ExtensionGet(String)
  nameWithType: Principal.ExtensionGet(String)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retrieves an attribute of an extended class object."
  syntax:
    content: protected object[] ExtensionGet (string attribute);
    parameters:
    - id: attribute
      type: System.String
      description: "The name of the attribute to retrieve."
    return:
      type: System.Object[]
      description: "Returns an array of objects, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no attribute exists with that name. See [System.DirectoryServices.AccountManagement Principle Extensions](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) for an example on using this function."
  overload: System.DirectoryServices.AccountManagement.Principal.ExtensionGet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  id: ExtensionSet(System.String,System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ExtensionSet(String,Object)
  nameWithType: Principal.ExtensionSet(String,Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(String,Object)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Sets the value of an attribute in an extended class."
  remarks: "See [System.DirectoryServices.AccountManagement Principle Extensions](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) for an example of this function."
  syntax:
    content: protected void ExtensionSet (string attribute, object value);
    parameters:
    - id: attribute
      type: System.String
      description: "The name of the attribute."
    - id: value
      type: System.Object
      description: "The object that contains the value of the attribute."
  overload: System.DirectoryServices.AccountManagement.Principal.ExtensionSet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a principal object that matches the specified identity value."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.Principal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> that specifies the server or domain against which operations are performed."
    - id: identityValue
      type: System.String
      description: "The identity of the principal. This parameter can be any format that is contained in the <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref> enumeration."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that matches the specified identity value and type, or null if no matches are found."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  exceptions:
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "Multiple principal objects matching the current object were found."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a principal object that matches the specified identity type, and value. This version of the FindByIdentity method determines the format of the identity value."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.Principal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> that specifies the server or domain against which operations are performed."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "An <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref> enumeration value that specifies the format of the `identityValue` parameter."
    - id: identityValue
      type: System.String
      description: "The identity of the principal. This parameter can be any format that is contained in the <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref> enumeration."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that matches the specified identity value and type or null if no matches are found."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Multiple principal objects matching the current object were found."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The identity type is not a valid <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref> enumeration value."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  id: FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentityWithType(PrincipalContext,Type,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a principal object that matches the specified identity type, and value. This method is called by the implementation of the derived-class **FindByIdentity** method to restrict the search to the derived class type and is not intended to be called directly from your code."
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.Principal FindByIdentityWithType (System.DirectoryServices.AccountManagement.PrincipalContext context, Type principalType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> that specifies the server or domain against which operations are performed."
    - id: principalType
      type: System.Type
      description: "The type of object for which results are returned. This must of type <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> or a type derived from the <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> class."
    - id: identityValue
      type: System.String
      description: "The identity of the principal."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that matches the specified identity value and type, or null if no matches are found."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a principal object that matches the specified identity type, and value. This method is called by the implementation of the derived-class **FindByIdentity** method to restrict the search to the derived class type and is not intended to be called directly from your code."
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.Principal FindByIdentityWithType (System.DirectoryServices.AccountManagement.PrincipalContext context, Type principalType, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> that specifies the server or domain against which operations are performed."
    - id: principalType
      type: System.Type
      description: "The type of object for which results are returned. This must of type <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> or a type derived from the <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> class."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "An <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref> enumeration value that specifies the type of the identity value."
    - id: identityValue
      type: System.String
      description: "The identity of the principal."
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that matches the specified identity value and type or null if no matches are found."
  overload: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups
  id: GetGroups
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetGroups()
  nameWithType: Principal.GetGroups()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a collection of group objects that specify the groups of which the current principal is a member."
  remarks: "This method returns only the groups of which the principal is directly a member; no recursive searches are performed. Recursive search results are available for user principal objects. For more information, see the <xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A> method.       The groups that are returned by this method may include groups from a different scope and store than the principal. For example, if the principal is an AD DS object that has a DN of &quot;CN=SpecialGroups,DC=Fabrikam,DC=com, the returned set can contain groups that belong to the &quot;CN=NormalGroups,DC=Fabrikam,DC=com.       If the current principal is an AD DS principal, the returned groups include the principals primary group, as indicated by the &quot;primaryGroupId&quot; attribute on the AD DS object."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetGroups ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "A collection of <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref> objects that specify the groups of which the current principal is a member."
  overload: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetGroups(PrincipalContext)
  nameWithType: Principal.GetGroups(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups(PrincipalContext)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a collection of group objects that the principal is a member of and that exist in the store provided by the specified context parameter."
  remarks: "This method returns only the groups of which the principal is directly a member; no recursive searches are performed. Recursive search results are available for user principal objects. For more information, see the <xref:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups%2A> method.       The groups that are returned by this method may include groups from a different scope and store than the principal. For example, if the principal is an AD DS object that has a DN of &quot;CN=SpecialGroups,DC=Fabrikam,DC=com, the returned set can contain groups that belong to the &quot;CN=NormalGroups,DC=Fabrikam,DC=com.       If the current principal is an AD DS principal, the returned groups include the principals primary group as indicated by the primary group ID attribute on the AD DS object."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetGroups (System.DirectoryServices.AccountManagement.PrincipalContext contextToQuery);
    parameters:
    - id: contextToQuery
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> object that specifies the context against which the query is performed.       When the context is located in another domain, the query is performed against the principal objects&quot; representation in the specified context."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "A collection of <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref> objects that specify the groups of which the current principal is a member."
  overload: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode
  id: GetHashCode
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Principal.GetHashCode()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetHashCode()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Retrieves the hash created from the contents of the principal object, suited for use in hashing algorithms and data structures like a hash table."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash code for the current principal."
  overload: System.DirectoryServices.AccountManagement.Principal.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  id: GetUnderlyingObject
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetUnderlyingObject()
  nameWithType: Principal.GetUnderlyingObject()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns the underlying <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref> object that provides the contact data for the principal object."
  syntax:
    content: public object GetUnderlyingObject ();
    parameters: []
    return:
      type: System.Object
      description: "The underlying <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref> object."
  overload: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject*
  exceptions:
  - type: system.InvalidOperationExtension
    commentId: T:system.InvalidOperationExtension
    description: "The current principal has not been persisted and does not have an associated <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref> object."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  id: GetUnderlyingObjectType
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: GetUnderlyingObjectType()
  nameWithType: Principal.GetUnderlyingObjectType()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns the underlying object type."
  syntax:
    content: public Type GetUnderlyingObjectType ();
    parameters: []
    return:
      type: System.Type
      description: "The underlying object type. For AD DS, AD LDS, and SAM the type is <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Guid
  id: Guid
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Guid
  nameWithType: Principal.Guid
  fullName: System.DirectoryServices.AccountManagement.Principal.Guid
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets the GUID associated with this principal."
  remarks: "This property will always return null when the <xref:System.DirectoryServices.AccountManagement.Principal.ContextType%2A> property is set to Machine."
  syntax:
    content: public Nullable<Guid> Guid { get; }
    return:
      type: System.Nullable{System.Guid}
      description: "The Nullable <xref:System.Guid> associated with this principal or null if there is no GUID."
  overload: System.DirectoryServices.AccountManagement.Principal.Guid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  id: IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: IsMemberOf(GroupPrincipal)
  nameWithType: Principal.IsMemberOf(GroupPrincipal)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(GroupPrincipal)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a Boolean value that specifies whether the principal is a member of the specified group."
  remarks: "If the current principal is an AD DS principal, the returned groups include the principal&quot;s primary group, as indicated by the primary group ID attribute on the AD DS object."
  syntax:
    content: public bool IsMemberOf (System.DirectoryServices.AccountManagement.GroupPrincipal group);
    parameters:
    - id: group
      type: System.DirectoryServices.AccountManagement.GroupPrincipal
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref> object for which principal membership is determined."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the principal is a member of the specified group; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref> specified in the group parameter could not be found."
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "More than one matching <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref> was found."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: IsMemberOf(PrincipalContext,IdentityType,String)
  nameWithType: Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a Boolean value that specifies whether the principal is a member of the group specified by identity type and value."
  remarks: "If the current principal is an AD DS principal, the returned groups include the principal&quot;s primary group, as indicated by the primary group ID attribute on the AD DS object."
  syntax:
    content: public bool IsMemberOf (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> that specifies the server or domain against which operations are performed."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;></xref> enumeration value that specifies the type of the identity value."
    - id: identityValue
      type: System.String
      description: "The identity of the group."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the principal is a member of the specified group; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "The identity type or value does not correspond to a <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref>."
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "More than one matching <xref href=&quot;System.DirectoryServices.AccountManagement.GroupPrincipal&quot;></xref> was found."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Name
  id: Name
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Name
  nameWithType: Principal.Name
  fullName: System.DirectoryServices.AccountManagement.Principal.Name
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets or sets the name of this principal."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the principal or null if the name attribute is not set."
  overload: System.DirectoryServices.AccountManagement.Principal.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The application tried to set the name to null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The underlying store does not support this property."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  id: SamAccountName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: SamAccountName
  nameWithType: Principal.SamAccountName
  fullName: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets or sets the SAM account name for this principal."
  syntax:
    content: public string SamAccountName { get; set; }
    return:
      type: System.String
      description: "The SAM account name for this principal or null if no name has been set."
  overload: System.DirectoryServices.AccountManagement.Principal.SamAccountName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The application tried to set the SAM account name to null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The application tried to set the SAM account name on a persisted principal."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Save
  id: Save
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Save()
  nameWithType: Principal.Save()
  fullName: System.DirectoryServices.AccountManagement.Principal.Save()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Saves the changes that were made on the principal object to the store. If this is a new principal object, this method inserts it into the store."
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.Principal.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The principal has not yet been associated with a <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> object.       This type of principal cannot be inserted in the store."
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "An exception occurred when saving changes tnso the store, or updating the group membership in the store."
  - type: System.DirectoryServices.AccountManagement.PrincipalExistsException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalExistsException
    description: "The principal already occurs in the store."
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "The password does not meet complexity requirements."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Save(PrincipalContext)
  nameWithType: Principal.Save(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.Save(PrincipalContext)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Saves the changes that were made on the principal object to the store. If this is a new principal object, this method inserts it into the specified context. If the principal has already been persisted, it is moved from the original context to the specified context."
  remarks: "If the specified principal context differs from the existing context, the principal is moved to the specified context, and the principal object no longer is located in the old location. If the specified context is identical to the existing context, this method saves the updates that were made on the principal object to the store. The context type of the specified context must be the same type as the current context type. This method may not be called by using the computer context type."
  syntax:
    content: public void Save (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> that specifies the server or domain against which operations are performed."
  overload: System.DirectoryServices.AccountManagement.Principal.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The principal has not yet been associated with a <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> object.       This type of principal cannot be inserted in the store."
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "An exception occurred when saving changes to the store, or updating the group membership in the store."
  - type: System.DirectoryServices.AccountManagement.PrincipalExistsException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalExistsException
    description: "The principal already occurs in the store."
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "The password does not meet complexity requirements."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.Sid
  id: Sid
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: Sid
  nameWithType: Principal.Sid
  fullName: System.DirectoryServices.AccountManagement.Principal.Sid
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets the Security ID (SID) of the principal."
  syntax:
    content: public System.Security.Principal.SecurityIdentifier Sid { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "The <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> for this principal or null if there is no SID."
  overload: System.DirectoryServices.AccountManagement.Principal.Sid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  id: StructuralObjectClass
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
  fullName: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets the structural object class directory attribute."
  syntax:
    content: public string StructuralObjectClass { get; }
    return:
      type: System.String
      description: "The structural object class directory attribute."
  overload: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.ToString
  id: ToString
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: ToString()
  nameWithType: Principal.ToString()
  fullName: System.DirectoryServices.AccountManagement.Principal.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a user friendly string representation of the current principal object."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string representation of the current <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object."
  overload: System.DirectoryServices.AccountManagement.Principal.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  id: UserPrincipalName
  parent: System.DirectoryServices.AccountManagement.Principal
  langs:
  - csharp
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
  fullName: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets or sets the user principal name (UPN) associated with this principal."
  remarks: "Setting this property to null removes the existing UPN, if one exists."
  syntax:
    content: public string UserPrincipalName { get; set; }
    return:
      type: System.String
      description: "The UPN associated with this principal or null if no if the UPN has not been set."
  overload: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName*
  exceptions:
  - type: System.Inval>DidOperationException
    commentId: T:System.Inval>DidOperationException
    description: "The underlying store does not support this property."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.DirectoryServices.AccountManagement.MultipleMatchesException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MultipleMatchesException
  nameWithType: MultipleMatchesException
  fullName: System.DirectoryServices.AccountManagement.MultipleMatchesException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: system.InvalidOperationExtension
  isExternal: true
  name: system.InvalidOperationExtension
- uid: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: NoMatchingPrincipalException
  nameWithType: NoMatchingPrincipalException
  fullName: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.DirectoryServices.AccountManagement.PrincipalExistsException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalExistsException
  nameWithType: PrincipalExistsException
  fullName: System.DirectoryServices.AccountManagement.PrincipalExistsException
- uid: System.DirectoryServices.AccountManagement.PasswordException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PasswordException
  nameWithType: PasswordException
  fullName: System.DirectoryServices.AccountManagement.PasswordException
- uid: System.Inval>DidOperationException
  isExternal: true
  name: System.Inval>DidOperationException
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Principal()
  nameWithType: Principal.Principal()
  fullName: System.DirectoryServices.AccountManagement.Principal.Principal()
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: CheckDisposedOrDeleted()
  nameWithType: Principal.CheckDisposedOrDeleted()
  fullName: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted()
- uid: System.DirectoryServices.AccountManagement.Principal.Context
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Context
  nameWithType: Principal.Context
  fullName: System.DirectoryServices.AccountManagement.Principal.Context
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextRaw
  nameWithType: Principal.ContextRaw
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextRaw
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextType
  nameWithType: Principal.ContextType
  fullName: System.DirectoryServices.AccountManagement.Principal.ContextType
- uid: System.DirectoryServices.AccountManagement.ContextType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: ContextType
  nameWithType: ContextType
  fullName: System.DirectoryServices.AccountManagement.ContextType
- uid: System.DirectoryServices.AccountManagement.Principal.Delete
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Delete()
  nameWithType: Principal.Delete()
  fullName: System.DirectoryServices.AccountManagement.Principal.Delete()
- uid: System.DirectoryServices.AccountManagement.Principal.Description
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Description
  nameWithType: Principal.Description
  fullName: System.DirectoryServices.AccountManagement.Principal.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DisplayName
  nameWithType: Principal.DisplayName
  fullName: System.DirectoryServices.AccountManagement.Principal.DisplayName
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Dispose()
  nameWithType: Principal.Dispose()
  fullName: System.DirectoryServices.AccountManagement.Principal.Dispose()
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
  fullName: System.DirectoryServices.AccountManagement.Principal.DistinguishedName
- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Equals(Object)
  nameWithType: Principal.Equals(Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionGet(String)
  nameWithType: Principal.ExtensionGet(String)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(String)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionSet(String,Object)
  nameWithType: Principal.ExtensionSet(String,Object)
  fullName: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(String,Object)
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,String)
- uid: System.DirectoryServices.AccountManagement.Principal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: Principal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentity(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext,Type,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  nameWithType: Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(PrincipalContext,Type,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups()
  nameWithType: Principal.GetGroups()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups(PrincipalContext)
  nameWithType: Principal.GetGroups(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.GetGroups(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetHashCode()
  nameWithType: Principal.GetHashCode()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObject()
  nameWithType: Principal.GetUnderlyingObject()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject()
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObjectType()
  nameWithType: Principal.GetUnderlyingObjectType()
  fullName: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType()
- uid: System.DirectoryServices.AccountManagement.Principal.Guid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Guid
  nameWithType: Principal.Guid
  fullName: System.DirectoryServices.AccountManagement.Principal.Guid
- uid: System.Nullable{System.Guid}
  parent: System
  isExternal: true
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Guid>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(GroupPrincipal)
  nameWithType: Principal.IsMemberOf(GroupPrincipal)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(GroupPrincipal)
- uid: System.DirectoryServices.AccountManagement.GroupPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: GroupPrincipal
  nameWithType: GroupPrincipal
  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf(PrincipalContext,IdentityType,String)
  nameWithType: Principal.IsMemberOf(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.Principal.Name
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Name
  nameWithType: Principal.Name
  fullName: System.DirectoryServices.AccountManagement.Principal.Name
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: SamAccountName
  nameWithType: Principal.SamAccountName
  fullName: System.DirectoryServices.AccountManagement.Principal.SamAccountName
- uid: System.DirectoryServices.AccountManagement.Principal.Save
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save()
  nameWithType: Principal.Save()
  fullName: System.DirectoryServices.AccountManagement.Principal.Save()
- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save(PrincipalContext)
  nameWithType: Principal.Save(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.Principal.Save(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.Principal.Sid
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Sid
  nameWithType: Principal.Sid
  fullName: System.DirectoryServices.AccountManagement.Principal.Sid
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
  fullName: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
- uid: System.DirectoryServices.AccountManagement.Principal.ToString
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ToString()
  nameWithType: Principal.ToString()
  fullName: System.DirectoryServices.AccountManagement.Principal.ToString()
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
  fullName: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
- uid: System.DirectoryServices.AccountManagement.Principal.#ctor*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Principal
  nameWithType: Principal.Principal
- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: CheckDisposedOrDeleted
  nameWithType: Principal.CheckDisposedOrDeleted
- uid: System.DirectoryServices.AccountManagement.Principal.Context*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Context
  nameWithType: Principal.Context
- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextRaw
  nameWithType: Principal.ContextRaw
- uid: System.DirectoryServices.AccountManagement.Principal.ContextType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ContextType
  nameWithType: Principal.ContextType
- uid: System.DirectoryServices.AccountManagement.Principal.Delete*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Delete
  nameWithType: Principal.Delete
- uid: System.DirectoryServices.AccountManagement.Principal.Description*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Description
  nameWithType: Principal.Description
- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DisplayName
  nameWithType: Principal.DisplayName
- uid: System.DirectoryServices.AccountManagement.Principal.Dispose*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Dispose
  nameWithType: Principal.Dispose
- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: DistinguishedName
  nameWithType: Principal.DistinguishedName
- uid: System.DirectoryServices.AccountManagement.Principal.Equals*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Equals
  nameWithType: Principal.Equals
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionGet
  nameWithType: Principal.ExtensionGet
- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ExtensionSet
  nameWithType: Principal.ExtensionSet
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentity
  nameWithType: Principal.FindByIdentity
- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: FindByIdentityWithType
  nameWithType: Principal.FindByIdentityWithType
- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetGroups
  nameWithType: Principal.GetGroups
- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetHashCode
  nameWithType: Principal.GetHashCode
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObject
  nameWithType: Principal.GetUnderlyingObject
- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: GetUnderlyingObjectType
  nameWithType: Principal.GetUnderlyingObjectType
- uid: System.DirectoryServices.AccountManagement.Principal.Guid*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Guid
  nameWithType: Principal.Guid
- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: IsMemberOf
  nameWithType: Principal.IsMemberOf
- uid: System.DirectoryServices.AccountManagement.Principal.Name*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Name
  nameWithType: Principal.Name
- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: SamAccountName
  nameWithType: Principal.SamAccountName
- uid: System.DirectoryServices.AccountManagement.Principal.Save*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Save
  nameWithType: Principal.Save
- uid: System.DirectoryServices.AccountManagement.Principal.Sid*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: Sid
  nameWithType: Principal.Sid
- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: StructuralObjectClass
  nameWithType: Principal.StructuralObjectClass
- uid: System.DirectoryServices.AccountManagement.Principal.ToString*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: ToString
  nameWithType: Principal.ToString
- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName*
  parent: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: UserPrincipalName
  nameWithType: Principal.UserPrincipalName
