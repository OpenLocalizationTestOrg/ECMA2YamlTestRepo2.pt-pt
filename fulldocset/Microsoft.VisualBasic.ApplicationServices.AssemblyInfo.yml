### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  id: AssemblyInfo
  children:
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  langs:
  - csharp
  name: AssemblyInfo
  nameWithType: AssemblyInfo
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  type: Class
  summary: "Provides properties for getting the information about the application, such as the version number, description, loaded assemblies, and so on."
  remarks: "Some of the properties exposed by the `My.Application.Info` object return the application&quot;s assembly information. To set the information in the application&quot;s assembly, you must use the **Assembly Information** dialog box, accessible from the **Application** pane of the **Project Designer**.       The `My.Application.Info` object provides functionality similar to the <xref:System.Diagnostics.FileVersionInfo> class but is scoped to give quick access to the most common properties.       Other properties, such as `LoadedAssemblies`, provide access to the current state of the application."
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public class AssemblyInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  id: '#ctor(System.Reflection.Assembly)'
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.AssemblyInfo&quot;></xref> class with the specified assembly information."
  syntax:
    content: public AssemblyInfo (System.Reflection.Assembly currentAssembly);
    parameters:
    - id: currentAssembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>. The assembly for which to obtain the information."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  id: AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the name, without the extension, of the assembly file for the application."
  remarks: "The `My.Application.Info.AssemblyName` property gets the name of the file containing the manifest.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.AssemblyName` property to display the name of the application.  \n  \n [!code-vb[VbVbalrMyApplication#20](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#20)]"
  syntax:
    content: public string AssemblyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> containing the file name."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  id: CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the company name associated with the application."
  remarks: "The `My.Application.Info.CompanyName` property gets the company name associated with the application.       You can change the company name by changing the value for **Company** in the **Assembly Information** dialog box, accessible from the **Application** pane of the **Project Designer**.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.CompanyName` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#21](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#21)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> that contains the company name associated with the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The assembly does not have an <xref:System.Reflection.AssemblyCompanyAttribute> attribute."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  id: Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the copyright notice associated with the application."
  remarks: "The `My.Application.Info.Copyright` property gets the copyright notice associated with the application.       You can change the copyright notice by changing the value for **Copyright** in the **Assembly Information** dialog box, accessible from the **Application** pane of the **Project Designer**.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.Copyright` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#22](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#22)]"
  syntax:
    content: public string Copyright { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> containing the copyright notice associated with the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The assembly does not have an <xref:System.Reflection.AssemblyCopyrightAttribute> attribute."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  id: Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the description associated with the application."
  remarks: "The `My.Application.Info.Description` property gets the description associated with the application.       You can change the description by changing the value for **Description** in the **Assembly Information** dialog box, accessible from the **Application** pane of the **Project Designer**.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.Description` property to display the description associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#23](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#23)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> containing the description associated with the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The assembly does not have an <xref:System.Reflection.AssemblyDescriptionAttribute> attribute."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  id: DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the directory where the application is stored."
  remarks: "The `My.Application.Info.DirectoryPath` property gets the directory where the application is stored.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.DirectoryPath` property to display the directory path where the application is stored.  \n  \n [!code-vb[VbVbalrMyApplication#24](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#24)]"
  syntax:
    content: public string DirectoryPath { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> that contains the directory where the application is stored."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  id: LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets a collection of all assemblies loaded by the application."
  remarks: "The `My.Application.Info.LoadedAssemblies` property is similar to the <xref:System.AppDomain.GetAssemblies%2A> method.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.LoadedAssemblies` property to display the assemblies loaded by the application.  \n  \n [!code-vb[VbVbalrMyApplication#25](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#25)]  \n  \n This example requires that your Windows Forms application has a <xref:System.Windows.Forms.ListBox> control named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly> LoadedAssemblies { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref:System.Reflection.Assembly> containing all the assemblies loaded by the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  exceptions:
  - type: System.AppDomainUnloadedException
    commentId: T:System.AppDomainUnloadedException
    description: "The application domain is not loaded."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  id: ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the product name associated with the application."
  remarks: "The `My.Application.Info.ProductName` property gets the product name associated with the application.       You can change the product name by changing the value for **Product** in the **Assembly Information** dialog box, accessible from the **Application** pane of the **Project Designer**.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.ProductName` property to display the product name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#26](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#26)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> containing the product name associated with the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The assembly does not have an <xref:System.Reflection.AssemblyProductAttribute> attribute."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  id: StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the current stack-trace information."
  remarks: "The `My.Application.Info.StackTrace` property lists method calls in reverse chronological order—that is, it describes the most recent method call first, and it lists each method call on the stack on a separate line. However, the `My.Application.Info.StackTrace` property might not report as many method calls as expected, due to code transformations that occur during optimization.       Typically, the stack-trace information is used for debugging applications.       The stack-trace information for each method call is formatted as follows:       &quot;at *FullClassName*.*MethodName*(*MethodParams*) in *FileName*:line *LineNumber* &quot;       The literal &quot;at&quot; is preceded by three spaces, and the literals &quot;in&quot; and &quot;:line&quot; are omitted if debug symbols are not available. The placeholders `FullClassName`, `MethodName`, `MethodParams`, `FileName`, and `LineNumber` are replaced by actual values, defined as follows:      |Part|Description|   |----------|-----------------|   |*FullClassName*|The full name of the class, including the namespace.|   |*MethodName*|The name of the method.|   |*MethodParams*|The list of parameter type/name pairs. Each pair is separated by a comma (,). This information is omitted if *MethodName* takes zero parameters.|   |*FileName*|The name of the source file where the *MethodName* method is declared. This information is omitted if debug symbols are not available.|   |*LineNumber*|The number of the line in *FileName* that contains the source code from *MethodName* for the instruction that is on the call stack. This information is omitted if debug symbols are not available.|       The `My.Applicaiton.Info.StackTrace` property provides functionality similar to the <xref:System.Environment.StackTrace%2A> property.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.StackTrace` property to display the stack trace of the application from the point at which the code executes.  \n  \n [!code-vb[VbVbalrMyApplication#27](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#27)]"
  syntax:
    content: public string StackTrace { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> containing the current stack-trace information. The return value can be <xref:System.String>."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The requested stack-trace information is out of range."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  id: Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the title associated with the application."
  remarks: "The `My.Application.Info.Title` property gets the title associated with the application.       You can change the title by changing the value for **Title** in the **Assembly Information** dialog box, accessible from the **Application** pane of the **Project Designer**.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.Title` property to display the title associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#28](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#28)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> containing the <xref:System.Reflection.AssemblyTitleAttribute> associated with the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The assembly does not have an <xref:System.Reflection.AssemblyTitleAttribute> attribute."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  id: Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the trademark notice associated with the application."
  remarks: "The `My.Application.Info.Trademark` property gets the trademark notice associated with the application.       You can change the trademark notice by changing the value for **Trademark** in the **Assembly Information** dialog box, accessible from the **Application** pane of the **Project Designer**.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.Trademark` property to display the trademark information associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#29](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#29)]"
  syntax:
    content: public string Trademark { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> containing the trademark notice associated with the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The assembly does not have an <xref:System.Reflection.AssemblyTrademarkAttribute> attribute."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  id: Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the version number of the application."
  remarks: "The `My.Application.Info.Version` property gets a <xref:System.Version> object containing the version number of the application. You can use the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, and <xref:System.Version.Revision%2A> properties of the <xref:System.Version> object to access specific version information about the application.       ClickOnce-deployed applications should use the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> property of the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> property.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "A <xref:System.Version> object containing the version number of the application."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The application does not have sufficient permissions to access the assembly version."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  id: WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Gets the amount of physical memory mapped to the process context."
  remarks: "The `My.Application.Info.WorkingSet` property has the same behavior as the <xref:System.Environment.WorkingSet%2A> property.      > [!NOTE] >  This property always returns zero for Windows 98 and Windows Millennium Edition.      ## Availability by Project Type      |Project type|Available|   |------------------|---------------|   |Windows Forms Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Forms Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Application.Info.WorkingSet` property to display the number of bytes of physical memory mapped to the application.  \n  \n [!code-vb[VbVbalrMyApplication#31](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#31)]"
  syntax:
    content: public long WorkingSet { get; }
    return:
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref> containing the number of bytes of physical memory mapped to the process context."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A situation in which partial trust exists and the user lacks necessary permissions."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AppDomainUnloadedException
  parent: System
  isExternal: false
  name: AppDomainUnloadedException
  nameWithType: AppDomainUnloadedException
  fullName: System.AppDomainUnloadedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Assembly>
  nameWithType: ReadOnlyCollection<Assembly>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo
  nameWithType: AssemblyInfo.AssemblyInfo
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
