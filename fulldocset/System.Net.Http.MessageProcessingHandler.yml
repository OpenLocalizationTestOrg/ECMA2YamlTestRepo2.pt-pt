### YamlMime:ManagedReference
items:
- uid: System.Net.Http.MessageProcessingHandler
  id: MessageProcessingHandler
  children:
  - System.Net.Http.MessageProcessingHandler.#ctor
  - System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)
  - System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)
  - System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  name: MessageProcessingHandler
  nameWithType: MessageProcessingHandler
  fullName: System.Net.Http.MessageProcessingHandler
  type: Class
  summary: "A base type for handlers which only do some small processing of request and/or response messages."
  remarks: "The actual creation of response messages is delegated to an inner handler. The MessageProcessingHandler is useful if the handler doesn&quot;t require asynchronous operations, because operations on request and response messages are fast.       The most common usage is to derive from this class and override the <xref:System.Net.Http.MessageProcessingHandler.ProcessRequest%2A> and  <xref:System.Net.Http.MessageProcessingHandler.ProcessResponse%2A> methods."
  syntax:
    content: 'public abstract class MessageProcessingHandler : System.Net.Http.DelegatingHandler'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  - System.Net.Http.DelegatingHandler
  implements: []
  inheritedMembers:
  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  - System.Net.Http.DelegatingHandler.InnerHandler
  - System.Net.Http.HttpMessageHandler.Dispose
  platform:
  - net462
- uid: System.Net.Http.MessageProcessingHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.MessageProcessingHandler
  langs:
  - csharp
  name: MessageProcessingHandler()
  nameWithType: MessageProcessingHandler.MessageProcessingHandler()
  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Creates an instance of a <xref href=&quot;System.Net.Http.MessageProcessingHandler&quot;></xref> class."
  syntax:
    content: protected MessageProcessingHandler ();
    parameters: []
  overload: System.Net.Http.MessageProcessingHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: System.Net.Http.MessageProcessingHandler
  langs:
  - csharp
  name: MessageProcessingHandler(HttpMessageHandler)
  nameWithType: MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)
  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Creates an instance of a <xref href=&quot;System.Net.Http.MessageProcessingHandler&quot;></xref> class with a specific inner handler."
  syntax:
    content: protected MessageProcessingHandler (System.Net.Http.HttpMessageHandler innerHandler);
    parameters:
    - id: innerHandler
      type: System.Net.Http.HttpMessageHandler
      description: "The inner handler which is responsible for processing the HTTP response messages."
  overload: System.Net.Http.MessageProcessingHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.MessageProcessingHandler
  langs:
  - csharp
  name: ProcessRequest(HttpRequestMessage,CancellationToken)
  nameWithType: MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Performs processing on each request sent to the server."
  remarks: "An application would override this method to implement custom processing of the HTTP request message before it is sent to the server."
  syntax:
    content: protected abstract System.Net.Http.HttpRequestMessage ProcessRequest (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "The HTTP request message to process."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A cancellation token that can be used by other objects or threads to receive notice of cancellation."
    return:
      type: System.Net.Http.HttpRequestMessage
      description: "The HTTP request message that was processed."
  overload: System.Net.Http.MessageProcessingHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)
  id: ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.MessageProcessingHandler
  langs:
  - csharp
  name: ProcessResponse(HttpResponseMessage,CancellationToken)
  nameWithType: MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)
  fullName: System.Net.Http.MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Perform processing on each response from the server."
  remarks: "An application would override this method to implement custom processing of the HTTP response message after it is received from the server."
  syntax:
    content: protected abstract System.Net.Http.HttpResponseMessage ProcessResponse (System.Net.Http.HttpResponseMessage response, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: response
      type: System.Net.Http.HttpResponseMessage
      description: "The HTTP response message to process."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A cancellation token that can be used by other objects or threads to receive notice of cancellation."
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "The HTTP response message that was processed."
  overload: System.Net.Http.MessageProcessingHandler.ProcessResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.MessageProcessingHandler
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Sends an HTTP request to the inner handler to send to the server as an asynchronous operation."
  remarks: "This operation does not block. This overridable implementation of SendAsync method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation."
  syntax:
    content: protected override sealed System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "The HTTP request message to send to the server."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A cancellation token that can be used by other objects or threads to receive notice of cancellation."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "The task object representing the asynchronous operation."
  overload: System.Net.Http.MessageProcessingHandler.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Net.Http.DelegatingHandler
  isExternal: false
  name: System.Net.Http.DelegatingHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.MessageProcessingHandler.#ctor
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: MessageProcessingHandler()
  nameWithType: MessageProcessingHandler.MessageProcessingHandler()
  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler()
- uid: System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: MessageProcessingHandler(HttpMessageHandler)
  nameWithType: MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)
  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: ProcessRequest(HttpRequestMessage,CancellationToken)
  nameWithType: MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: ProcessResponse(HttpResponseMessage,CancellationToken)
  nameWithType: MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)
  fullName: System.Net.Http.MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)
- uid: System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.Http.HttpResponseMessage>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.MessageProcessingHandler.#ctor*
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: MessageProcessingHandler
  nameWithType: MessageProcessingHandler.MessageProcessingHandler
- uid: System.Net.Http.MessageProcessingHandler.ProcessRequest*
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: MessageProcessingHandler.ProcessRequest
- uid: System.Net.Http.MessageProcessingHandler.ProcessResponse*
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: ProcessResponse
  nameWithType: MessageProcessingHandler.ProcessResponse
- uid: System.Net.Http.MessageProcessingHandler.SendAsync*
  parent: System.Net.Http.MessageProcessingHandler
  isExternal: false
  name: SendAsync
  nameWithType: MessageProcessingHandler.SendAsync
