### YamlMime:ManagedReference
items:
- uid: System.Configuration.StringValidator
  id: StringValidator
  children:
  - System.Configuration.StringValidator.#ctor(System.Int32)
  - System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)
  - System.Configuration.StringValidator.CanValidate(System.Type)
  - System.Configuration.StringValidator.Validate(System.Object)
  langs:
  - csharp
  name: StringValidator
  nameWithType: StringValidator
  fullName: System.Configuration.StringValidator
  type: Class
  summary: "Provides validation of a string."
  remarks: "The StringValidator class is used to ensure that a string meets specific criteria. The criteria for validation is established when an instance of the StringValidator class is created. There are three constructor overloads for the StringValidator class. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName> constructor with one parameter verifies the minimum acceptable length of the string being validated. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.       The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method."
  example:
  - "The following example demonstrates how to use the StringValidator type.  \n  \n [!code-cs[System.Configuration.StringValidator#1](~/add/codesnippet/csharp/t-system.configuration.s_0_1.cs)]\n [!code-vb[System.Configuration.StringValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.s_0_1.vb)]"
  syntax:
    content: 'public class StringValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: StringValidator(Int32)
  nameWithType: StringValidator.StringValidator(Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.StringValidator&quot;></xref> class, based on a supplied parameter."
  remarks: "The StringValidator constructor verifies the minimum acceptable length of the string being validated."
  syntax:
    content: public StringValidator (int minLength);
    parameters:
    - id: minLength
      type: System.Int32
      description: "An integer that specifies the minimum length of the string value."
  overload: System.Configuration.StringValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: StringValidator(Int32,Int32)
  nameWithType: StringValidator.StringValidator(Int32,Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.StringValidator&quot;></xref> class, based on supplied parameters."
  remarks: "This StringValidator constructor ensures that the string being verified adheres to both a minimum and a maximum length."
  syntax:
    content: public StringValidator (int minLength, int maxLength);
    parameters:
    - id: minLength
      type: System.Int32
      description: "An integer that specifies the minimum length of the string value."
    - id: maxLength
      type: System.Int32
      description: "An integer that specifies the maximum length of the string value."
  overload: System.Configuration.StringValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)
  id: '#ctor(System.Int32,System.Int32,System.String)'
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: StringValidator(Int32,Int32,String)
  nameWithType: StringValidator.StringValidator(Int32,Int32,String)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32,String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.StringValidator&quot;></xref> class, based on supplied parameters."
  remarks: "This StringValidator constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string."
  example:
  - "The following example demonstrates how to use this StringValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \n  \n [!code-cs[System.Configuration.StringValidator#2](~/add/codesnippet/csharp/53dd41c3-e827-4f95-a9a0-_1.cs)]\n [!code-vb[System.Configuration.StringValidator#2](~/add/codesnippet/visualbasic/53dd41c3-e827-4f95-a9a0-_1.vb)]"
  syntax:
    content: public StringValidator (int minLength, int maxLength, string invalidCharacters);
    parameters:
    - id: minLength
      type: System.Int32
      description: "An integer that specifies the minimum length of the string value."
    - id: maxLength
      type: System.Int32
      description: "An integer that specifies the maximum length of the string value."
    - id: invalidCharacters
      type: System.String
      description: "A string that represents invalid characters."
  overload: System.Configuration.StringValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: StringValidator.CanValidate(Type)
  fullName: System.Configuration.StringValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determines whether an object can be validated based on type."
  remarks: ''
  example:
  - "The following example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \n  \n [!code-cs[System.Configuration.StringValidator#3](~/add/codesnippet/csharp/m-system.configuration.s_7_1.cs)]\n [!code-vb[System.Configuration.StringValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.s_7_1.vb)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The object type."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>type</code> parameter matches a string; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.StringValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.StringValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.StringValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: StringValidator.Validate(Object)
  fullName: System.Configuration.StringValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determines whether the value of an object is valid."
  remarks: "The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object. The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created. The object to validate is passed as a parameter of the Validate method."
  example:
  - "The following example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \n  \n [!code-cs[System.Configuration.StringValidator#4](~/add/codesnippet/csharp/m-system.configuration.s_1_1.cs)]\n [!code-vb[System.Configuration.StringValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.s_1_1.vb)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object value."
  overload: System.Configuration.StringValidator.Validate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is less than <code>minValue</code> or greater than <code>maxValue</code> as defined in the constructor.  \n  \n \\- or -  \n  \n <code>value</code> contains invalid characters."
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.StringValidator.#ctor(System.Int32)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator(Int32)
  nameWithType: StringValidator.StringValidator(Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator(Int32,Int32)
  nameWithType: StringValidator.StringValidator(Int32,Int32)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32)
- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator(Int32,Int32,String)
  nameWithType: StringValidator.StringValidator(Int32,Int32,String)
  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.StringValidator.CanValidate(System.Type)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: StringValidator.CanValidate(Type)
  fullName: System.Configuration.StringValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.StringValidator.Validate(System.Object)
  parent: System.Configuration.StringValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: StringValidator.Validate(Object)
  fullName: System.Configuration.StringValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.StringValidator.#ctor*
  parent: System.Configuration.StringValidator
  isExternal: false
  name: StringValidator
  nameWithType: StringValidator.StringValidator
- uid: System.Configuration.StringValidator.CanValidate*
  parent: System.Configuration.StringValidator
  isExternal: false
  name: CanValidate
  nameWithType: StringValidator.CanValidate
- uid: System.Configuration.StringValidator.Validate*
  parent: System.Configuration.StringValidator
  isExternal: false
  name: Validate
  nameWithType: StringValidator.Validate
