### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.BooleanSwitch
  id: BooleanSwitch
  children:
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.BooleanSwitch.Enabled
  - System.Diagnostics.BooleanSwitch.OnValueChanged
  langs:
  - csharp
  name: BooleanSwitch
  nameWithType: BooleanSwitch
  fullName: System.Diagnostics.BooleanSwitch
  type: Class
  summary: "Provides a simple on/off switch that controls debugging and tracing output."
  remarks: "You can use a Boolean trace switch to enable or disable messages based on their importance. Use the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to get the current value of the switch.       You can enable or disable a BooleanSwitch through the application configuration file and then use the configured BooleanSwitch value in your application. Alternately, you can create a BooleanSwitch in your code and set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property directly to instrument a specific section of code.       To configure a BooleanSwitch, edit the configuration file that corresponds to the name of your application. Within this file, you can add or remove a switch, set a switch&quot;s value, or clear all the switches previously set by the application. The configuration file should be formatted like the following example.      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot;/>       </switches>     </system.diagnostics>   </configuration>   ```       This example configuration section defines a BooleanSwitch with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`. Within your application, you can use the configured switch value by creating a BooleanSwitch with the same name, as shown in the following code example.       [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)]  [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)]  [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs)]       By default, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set using the value specified in the configuration file. Configure the switch with a value of 0 to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `false`; configure the switch with a nonzero value to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `true`. If the BooleanSwitch constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property of the new switch is set to `false` by default.       You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.      -   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.      -   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.      > [!NOTE] >  These debug and trace compiler switches are not required when using the BooleanSwitch class in isolation. They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled.       For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>. For more information about configuring and using trace switches, see [Trace Switches](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  To improve performance, you can make BooleanSwitch members `static` in your class."
  example:
  - "The following example creates a BooleanSwitch and uses the switch to determine whether to print an error message. You create the switch at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_2.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.boo_2.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.boo_2.cs)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Boolean))]

      public class BooleanSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;></xref> class with the specified display name and description."
  remarks: "When you create a <xref:System.Diagnostics.BooleanSwitch>, the `displayName` parameter is used to find initial switch settings. If the constructor cannot find initial settings, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set to `false` (disabled).       To set the level of your <xref:System.Diagnostics.BooleanSwitch>, edit the configuration file corresponding to the name of your application. Within this file, you can add a switch and set its value, remove a switch, or clear all switches previously set by the application. The configuration file should be formatted like the following example:      ```   <configuration>       <system.diagnostics>          <switches>             <add name=&quot;mySwitch&quot; value=&quot;10&quot; />             <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />             <remove name=&quot;mySwitch&quot; />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```      > [!NOTE] >  The switches you created should be `static`."
  example:
  - "The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.boo_1.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/m-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/m-system.diagnostics.boo_1.cs)]"
  syntax:
    content: public BooleanSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "The name to display on a user interface."
    - id: description
      type: System.String
      description: "The description of the switch."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;></xref> class with the specified display name, description, and default switch value."
  remarks: "The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property. The `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference. For more information about constructor use, see the <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> constructor."
  syntax:
    content: public BooleanSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "The name to display on the user interface."
    - id: description
      type: System.String
      description: "The description of the switch."
    - id: defaultSwitchValue
      type: System.String
      description: "The default value of the switch."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.Enabled
  id: Enabled
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets or sets a value indicating whether the switch is enabled or disabled."
  remarks: "By default, this field is set to `false` (disabled). To enable the switch, assign this field the value of `true`. To disable the switch, assign the value to `false`.  The value of this property is determined by the value of the base class property <xref:System.Diagnostics.Switch.SwitchSetting%2A>.      > [!NOTE] >  This method uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> flag to prevent being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission. If your code can be called from partially trusted code, do not pass the user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation."
  example:
  - "The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.  \n  \n [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/cpp/p-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/csharp/p-system.diagnostics.boo_1.cs)]\n [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.boo_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the switch is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.BooleanSwitch.Enabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The caller does not have the correct permission."
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determines whether the new value of the <xref:System.Diagnostics.Switch.Value*> property can be parsed as a Boolean value."
  remarks: "The OnValueChanged method determines whether the new value is a valid string representation of a Boolean value (&quot;false&quot; or &quot;true&quot;). If so, the method sets the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property to 0 or 1.  Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property."
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.BooleanSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
- uid: System.Diagnostics.BooleanSwitch.Enabled
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
- uid: System.Diagnostics.BooleanSwitch.#ctor*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch
  nameWithType: BooleanSwitch.BooleanSwitch
- uid: System.Diagnostics.BooleanSwitch.Enabled*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: BooleanSwitch.OnValueChanged
