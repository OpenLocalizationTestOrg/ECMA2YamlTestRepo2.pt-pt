### YamlMime:ManagedReference
items:
- uid: System.Windows.WeakEventManager`2
  id: WeakEventManager`2
  children:
  - System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})
  - System.Windows.WeakEventManager`2.NewListenerList
  - System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})
  - System.Windows.WeakEventManager`2.StartListening(System.Object)
  - System.Windows.WeakEventManager`2.StopListening(System.Object)
  langs:
  - csharp
  name: WeakEventManager<TEventSource,TEventArgs>
  nameWithType: WeakEventManager<TEventSource,TEventArgs>
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>
  type: Class
  syntax:
    content: 'public class WeakEventManager<TEventSource,TEventArgs> : System.Windows.WeakEventManager where TEventArgs : EventArgs'
    typeParameters:
    - id: TEventSource
      description: "To be added."
    - id: TEventArgs
      description: "To be added."
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)
  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)
  - System.Windows.WeakEventManager.Item(System.Object)
  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.Windows.WeakEventManager.ReadLock
  - System.Windows.WeakEventManager.Remove(System.Object)
  - System.Windows.WeakEventManager.ScheduleCleanup
  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)
  - System.Windows.WeakEventManager.WriteLock
  platform:
  - net462
- uid: System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})
  id: AddHandler(`0,System.String,System.EventHandler{`1})
  parent: System.Windows.WeakEventManager`2
  langs:
  - csharp
  name: AddHandler(TEventSource,String,EventHandler<TEventArgs>)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static void AddHandler (TEventSource source, string eventName, EventHandler<TEventArgs> handler);
    parameters:
    - id: source
      type: TEventSource
      description: "To be added."
    - id: eventName
      type: System.String
      description: "To be added."
    - id: handler
      type: System.EventHandler{TEventArgs}
      description: "To be added."
  overload: System.Windows.WeakEventManager`2.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager`2.NewListenerList
  id: NewListenerList
  parent: System.Windows.WeakEventManager`2
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.NewListenerList()
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.NewListenerList()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "To be added."
  overload: System.Windows.WeakEventManager`2.NewListenerList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})
  id: RemoveHandler(`0,System.String,System.EventHandler{`1})
  parent: System.Windows.WeakEventManager`2
  langs:
  - csharp
  name: RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static void RemoveHandler (TEventSource source, string eventName, EventHandler<TEventArgs> handler);
    parameters:
    - id: source
      type: TEventSource
      description: "To be added."
    - id: eventName
      type: System.String
      description: "To be added."
    - id: handler
      type: System.EventHandler{TEventArgs}
      description: "To be added."
  overload: System.Windows.WeakEventManager`2.RemoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager`2.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Windows.WeakEventManager`2
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "To be added."
  overload: System.Windows.WeakEventManager`2.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WeakEventManager`2.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Windows.WeakEventManager`2
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "To be added."
  overload: System.Windows.WeakEventManager`2.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: AddHandler(TEventSource,String,EventHandler<TEventArgs>)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.AddHandler(TEventSource,String,EventHandler<TEventArgs>)
- uid: TEventSource
  isExternal: true
  name: TEventSource
  nameWithType: TEventSource
  fullName: TEventSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EventHandler{TEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<TEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEventArgs
    name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.WeakEventManager`2.NewListenerList
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: NewListenerList()
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.NewListenerList()
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.NewListenerList()
- uid: System.Windows.WeakEventManager.ListenerList
  parent: System.Windows
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.RemoveHandler(TEventSource,String,EventHandler<TEventArgs>)
- uid: System.Windows.WeakEventManager`2.StartListening(System.Object)
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: StartListening(Object)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StartListening(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.WeakEventManager`2.StopListening(System.Object)
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: StopListening(Object)
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)
  fullName: System.Windows.WeakEventManager<TEventSource,TEventArgs>.StopListening(Object)
- uid: System.Windows.WeakEventManager`2.AddHandler*
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: AddHandler
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.AddHandler
- uid: System.Windows.WeakEventManager`2.NewListenerList*
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: NewListenerList
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.NewListenerList
- uid: System.Windows.WeakEventManager`2.RemoveHandler*
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: RemoveHandler
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.RemoveHandler
- uid: System.Windows.WeakEventManager`2.StartListening*
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: StartListening
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StartListening
- uid: System.Windows.WeakEventManager`2.StopListening*
  parent: System.Windows.WeakEventManager`2
  isExternal: false
  name: StopListening
  nameWithType: WeakEventManager<TEventSource,TEventArgs>.StopListening
