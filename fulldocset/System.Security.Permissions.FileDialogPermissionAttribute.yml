### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileDialogPermissionAttribute
  id: FileDialogPermissionAttribute
  children:
  - System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission
  - System.Security.Permissions.FileDialogPermissionAttribute.Open
  - System.Security.Permissions.FileDialogPermissionAttribute.Save
  langs:
  - csharp
  name: FileDialogPermissionAttribute
  nameWithType: FileDialogPermissionAttribute
  fullName: System.Security.Permissions.FileDialogPermissionAttribute
  type: Class
  summary: "Allows security actions for <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;></xref> to be applied to code using declarative security. This class cannot be inherited."
  remarks: "The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class."
  example:
  - "The following code example demonstrates how to demand that the calling code have <xref:System.Security.Permissions.FileDialogPermission>. Demands are typically made in managed libraries (DLLs) to help protect methods or classes from potentially harmful code.  \n  \n [!code-cpp[Classic FileDialogPermissionAttribute Example#2](~/add/codesnippet/cpp/t-system.security.permis_1_1.cpp)]\n [!code-cs[Classic FileDialogPermissionAttribute Example#2](~/add/codesnippet/csharp/t-system.security.permis_1_1.cs)]\n [!code-vb[Classic FileDialogPermissionAttribute Example#2](~/add/codesnippet/visualbasic/t-system.security.permis_1_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileDialogPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: FileDialogPermissionAttribute(SecurityAction)
  nameWithType: FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Permissions.FileDialogPermissionAttribute&quot;></xref> class with the specified <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>."
  syntax:
    content: public FileDialogPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "One of the <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> values."
  overload: System.Security.Permissions.FileDialogPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: FileDialogPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns a new <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;></xref>."
  remarks: "This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;></xref> that corresponds to this attribute."
  overload: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Open
  id: Open
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: Open
  nameWithType: FileDialogPermissionAttribute.Open
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Open
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Gets or sets a value indicating whether permission to open files through the file dialog is declared."
  syntax:
    content: public bool Open { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if permission to open files through the file dialog is declared; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Permissions.FileDialogPermissionAttribute.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Save
  id: Save
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: Save
  nameWithType: FileDialogPermissionAttribute.Save
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Save
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Gets or sets a value indicating whether permission to save files through the file dialog is declared."
  syntax:
    content: public bool Save { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if permission to save files through the file dialog is declared; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Permissions.FileDialogPermissionAttribute.Save*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: FileDialogPermissionAttribute(SecurityAction)
  nameWithType: FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: FileDialogPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Open
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Open
  nameWithType: FileDialogPermissionAttribute.Open
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Open
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Save
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Save
  nameWithType: FileDialogPermissionAttribute.Save
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Save
- uid: System.Security.Permissions.FileDialogPermissionAttribute.#ctor*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: FileDialogPermissionAttribute
  nameWithType: FileDialogPermissionAttribute.FileDialogPermissionAttribute
- uid: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: FileDialogPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Open*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Open
  nameWithType: FileDialogPermissionAttribute.Open
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Save*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Save
  nameWithType: FileDialogPermissionAttribute.Save
