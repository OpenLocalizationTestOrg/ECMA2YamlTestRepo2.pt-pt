### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerParameters
  id: CompilerParameters
  children:
  - System.CodeDom.Compiler.CompilerParameters.#ctor
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  - System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  - System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  - System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  - System.CodeDom.Compiler.CompilerParameters.Evidence
  - System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  - System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  - System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  - System.CodeDom.Compiler.CompilerParameters.LinkedResources
  - System.CodeDom.Compiler.CompilerParameters.MainClass
  - System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  - System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  - System.CodeDom.Compiler.CompilerParameters.TempFiles
  - System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  - System.CodeDom.Compiler.CompilerParameters.UserToken
  - System.CodeDom.Compiler.CompilerParameters.WarningLevel
  - System.CodeDom.Compiler.CompilerParameters.Win32Resource
  langs:
  - csharp
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
  type: Class
  summary: "Representa os parâmetros utilizados para invocar um compilador."
  remarks: "Um objeto de CompilerParameters representa as definições e as opções para um <xref:System.CodeDom.Compiler.ICodeCompiler>interface.</xref:System.CodeDom.Compiler.ICodeCompiler>       Se estiver a compilar um programa executável, tem de definir o <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Quando o <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>está definido como `false`, o compilador irá gerar uma biblioteca de classe.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Por predefinição, um novo CompilerParameters é inicializado com o respetivo <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>propriedade definida como `false`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Se estiver a compilar um executável de um gráfico de CodeDOM um <xref:System.CodeDom.CodeEntryPointMethod>tem de ser definido no gráfico.</xref:System.CodeDom.CodeEntryPointMethod> Se existirem vários pontos de entrada do código, pode indicar a classe que define o ponto de entrada a utilizar ao definir o nome da classe para o <xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>       Pode especificar um nome de ficheiro para a assemblagem de saída no <xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A> Caso contrário, será utilizado um nome de ficheiro de saída predefinido. Para incluir informações de depuração numa assemblagem gerada, defina o <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> Se o seu projeto faz referência a assemblagens, tem de especificar os nomes de assemblagem como itens de um <xref:System.Collections.Specialized.StringCollection>definido como o <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A>propriedade CompilerParameters utilizado ao invocar a compilação.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A> </xref:System.Collections.Specialized.StringCollection>       Pode compilar uma assemblagem que é escritos na memória, em vez de disco, definindo o <xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A> Quando uma assemblagem é gerada na memória, o seu código pode obter uma referência à assemblagem gerada da <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>propriedade de <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> </xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> Se uma assemblagem é escritos no disco, pode obter o caminho para a assemblagem gerada da <xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>propriedade de <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> </xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>       Para especificar um nível de aviso no qual pretende parar a compilação, defina o <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>propriedade para um número inteiro que representa o nível de aviso no qual pretende parar a compilação.</xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> Também pode configurar o compilador para parar a compilação, se forem encontrados avisos definindo a <xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>       Para especificar uma cadeia de argumentos da linha de comandos personalizada a utilizar ao invocar o processo de compilação, defina a cadeia <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> Se um token de segurança Win32 é necessários para invocar o processo do compilador, especifique o token no <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> Para incluir os ficheiros de recursos do .NET Framework na assemblagem compilada, adicione os nomes dos ficheiros de recursos para o <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> Para fazer referência a recursos de .NET Framework na assemblagem outro, adicione os nomes dos ficheiros de recursos para o <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> Para incluir um ficheiro de recursos Win32 na assemblagem compilada, especifique o nome do ficheiro de recursos Win32 no <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>      > [!NOTE] > Esta classe contém um pedido de ligação e um pedido de herança ao nível da classe que se aplica a todos os membros. A <xref:System.Security.SecurityException>é acionada quando o chamador imediato ou classe derivada não tem permissão de fidedignidade total.</xref:System.Security.SecurityException> Para obter detalhes sobre as exigências de segurança, consulte [exigências de ligação](~/add/includes/ajax-current-ext-md.md) e [exigências de herança](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example builds a CodeDOM source graph for a simple Hello World program.  The source is then saved to a file, compiled into an executable, and run. The `CompileCode` method illustrates how to use the CompilerParameters class to specify various compiler settings and options.  \n  \n [!code-cpp[CompilerParametersExample#1](~/add/codesnippet/cpp/t-system.codedom.compile_3_1.cpp)]\n [!code-cs[CompilerParametersExample#1](~/add/codesnippet/csharp/t-system.codedom.compile_3_1.cs)]\n [!code-vb[CompilerParametersExample#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_3_1.vb)]"
  syntax:
    content: public class CompilerParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/m-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/m-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/m-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public CompilerParameters ();
    parameters: []
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe utilizando os nomes de assemblagem especificado."
  syntax:
    content: public CompilerParameters (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Os nomes das assemblagens para efeitos de referência."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  id: '#ctor(System.String[],System.String)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe utilizando os nomes de assemblagem especificado e o nome de ficheiro de saída."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Os nomes das assemblagens para efeitos de referência."
    - id: outputName
      type: System.String
      description: "O nome de ficheiro de saída."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  id: '#ctor(System.String[],System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe utilizando os nomes de assemblagem especificado, o nome de saída e um valor que indica se pretende incluir informações de depuração."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName, bool includeDebugInformation);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Os nomes das assemblagens para efeitos de referência."
    - id: outputName
      type: System.String
      description: "O nome de ficheiro de saída."
    - id: includeDebugInformation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir informações de depuração; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para excluir informações de depuração."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  id: CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define os argumentos da linha de comandos opcionais a utilizar ao invocar o compilador."
  remarks: "Um <xref:System.CodeDom.Compiler.ICodeCompiler>Esta cadeia na linha de comandos, incluem normalmente ao invocar um compilador da linha de comandos.</xref:System.CodeDom.Compiler.ICodeCompiler> Por predefinição, esta propriedade contém uma cadeia vazia."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_14_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_14_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_14_1.vb)]"
  syntax:
    content: public string CompilerOptions { get; set; }
    return:
      type: System.String
      description: "Os argumentos da linha de comandos adicionais para o compilador."
  overload: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  id: CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome do principal ou padrão assemblagem que contém tipos básicos, tais como <xref:System.Object>, <xref:System.String>, ou <xref:System.Int32>.</xref:System.Int32> </xref:System.String> </xref:System.Object>"
  remarks: "Se o valor desta propriedade é uma cadeia vazia ou `null`, o compilador utiliza a assemblagem de núcleos de predefinição. Dependendo da versão do compilador, a assemblagem de núcleos predefinido pode ser mscorlib.dll ou System.Runtime.dll um diretório de Framework ou o diretório de assemblagem de referência. Se o valor desta propriedade não está vazio, o modelo de objeto de documento de código (CodeDOM) referencia a assemblagem especificada explicitamente e emite opções do compilador que fazer com que o compilador para não fazer referência a assemblagens implicitamente durante a compilação... Para em compiladores que referenciam o core ou a assemblagem padrão apenas implicitamente por predefinição, esta propriedade pode ser utilizada no seu próprio. Para um em compiladores que implicitamente façam referência a assemblagens além para o principal ou a assemblagem padrão, utilizar esta opção pode exigir especificando entradas adicionais no <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>      > [!NOTE] > Um <xref:System.CodeDom.Compiler.ICodeCompiler>ou <xref:System.CodeDom.Compiler.CodeDomProvider>implementação pode optar por ignorar esta propriedade.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler>"
  syntax:
    content: public string CoreAssemblyFileName { get; set; }
    return:
      type: System.String
      description: "O nome da assemblagem principal que contém tipos básicos."
  overload: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  id: EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém os ficheiros de recursos do .NET Framework para incluir durante a compilação a saída de assemblagem."
  remarks: "Recursos incorporados são criados para o ficheiro de saída de assemblagem gerada. Incluindo os ficheiros utilizando esta propriedade é semelhante para o `/resource` argumento da linha de comandos suportado por muitas das compilers .NET Framework.       Em compiladores nem todas as suportam ficheiros de recursos do .NET Framework, pelo que deverá testar para este suporte ao chamar o <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>método com o sinalizador <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>       Adicione um ou mais caminhos de ficheiro de recursos de .NET Framework para o devolvido <xref:System.Collections.Specialized.StringCollection>para incorporar os recursos de ficheiro na assemblagem compilada.</xref:System.Collections.Specialized.StringCollection> Adicionar um duplicado ou resultados de caminho de ficheiro inválido no erros de compilação Certifique-se de que cada cadeia Especifica um caminho exclusivo para um ficheiro de recurso válido do .NET Framework.       Utilizar EmbeddedResources para incluir predefinido ou recursos de .NET Framework de idioma neutro para uma assemblagem; Utilize o <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>propriedade referenciar recursos do .NET Framework em assemblagens satélite.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_7_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_7_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection EmbeddedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Uma coleção que contém os caminhos de ficheiro de recursos do .NET Framework para incluir na assemblagem gerada."
  overload: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  id: Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Especifica um objeto de prova que representa as permissões de política de segurança para conceder a assemblagem compilada."
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; set; }
    return:
      type: System.Security.Policy.Evidence
      description: "Um objeto que representa as permissões de política de segurança para conceder a assemblagem compilada."
  overload: System.CodeDom.Compiler.CompilerParameters.Evidence*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  id: GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se pretende gerar um executável."
  remarks: "Se o valor desta propriedade é `false`, será gerado um DLL. Por predefinição, o valor desta propriedade é `false`."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_8_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_8_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_8_1.vb)]"
  syntax:
    content: public bool GenerateExecutable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se deve ser gerado um executável; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  id: GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se pretende gerar a saída na memória."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_1_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_1_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_1_1.vb)]"
  syntax:
    content: public bool GenerateInMemory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o compilador deve gerar o resultado na memória; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  id: IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se pretende incluir informações de depuração no executável compilado."
  syntax:
    content: public bool IncludeDebugInformation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as informações de depuração devem ser geradas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  id: LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém os ficheiros de recursos do .NET Framework que são referenciados na origem atual."
  remarks: "Ficheiros de recursos associados permitem à assemblagem referenciar recursos do .NET Framework sem incorporar os recursos reais na assemblagem. Os ficheiros utilizando esta propriedade de referência é semelhante para o `/linkresource` argumento da linha de comandos suportado por muitas das compilers .NET Framework.       Em compiladores nem todas as suportam ficheiros de recursos do .NET Framework, pelo que deverá testar para este suporte ao chamar o <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>método com o sinalizador <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>       Adicione um ou mais caminhos de ficheiro de recursos de .NET Framework para o devolvido <xref:System.Collections.Specialized.StringCollection>criar ligações para os recursos na assemblagem compilada.</xref:System.Collections.Specialized.StringCollection> Adicionar um duplicado ou resultados de caminho de ficheiro inválido no erros de compilação Certifique-se de que cada cadeia Especifica um caminho exclusivo para um ficheiro de recurso válido do .NET Framework.       Utilizar LinkedResources referenciar recursos do .NET Framework em assemblagens satélite, localizados para um idioma específico; Utilize o <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>propriedade para incorporar os recursos numa assemblagem compilada.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection LinkedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Uma coleção que contém os caminhos de ficheiro de recursos do .NET Framework que são referenciados pela origem."
  overload: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  id: MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome da classe principal."
  remarks: "A classe principal contém o ponto de entrada para o programa."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_13_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_13_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_13_1.vb)]"
  syntax:
    content: public string MainClass { get; set; }
    return:
      type: System.String
      description: "O nome da classe principal."
  overload: System.CodeDom.Compiler.CompilerParameters.MainClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  id: OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome da assemblagem de saída."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_6_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_6_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_6_1.vb)]"
  syntax:
    content: public string OutputAssembly { get; set; }
    return:
      type: System.String
      description: "O nome da assemblagem de saída."
  overload: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém as assemblagens que referida pelo projecto actual."
  remarks: "A coleção de cadeia deve ser composto ou incluem as assemblagens que referida pelo projecto actual. Adicionar nomes de ficheiro de assemblagem para o devolvido <xref:System.Collections.Specialized.StringCollection>para importar o manifesto de assemblagem e referenciar as informações de tipo de assemblagem no projeto atual.</xref:System.Collections.Specialized.StringCollection>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_9_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_9_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_9_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Uma coleção que contém os nomes de assemblagem que são referenciados por origem ao compilar."
  overload: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  id: TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define a coleção que contém os ficheiros temporários."
  remarks: "Os ficheiros temporários na coleção são mantidos ou eliminados após a conclusão da atividade do compilador com base no valor da <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>propriedade na coleção.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> O <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>propriedade é definida se a coleção é criada utilizando o <xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29>construtor com o `keepFiles` parâmetro definido como `true`.</xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29> </xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>      > [!NOTE] > Esta classe contém um pedido de ligação e um pedido de herança ao nível da classe que se aplica a todos os membros. A <xref:System.Security.SecurityException>é acionada quando o chamador imediato ou classe derivada não tem permissão de fidedignidade total.</xref:System.Security.SecurityException> Para obter detalhes sobre as exigências de segurança, consulte [exigências de ligação](~/add/includes/ajax-current-ext-md.md) e [exigências de herança](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_4_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_4_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_4_1.vb)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TempFiles { get; set; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "Uma coleção que contém os ficheiros temporários."
  overload: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  id: TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se se tratar de avisos como erros."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_5_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_5_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_5_1.vb)]"
  syntax:
    content: public bool TreatWarningsAsErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se devem ser tratados de avisos como erros; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  id: UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o token de utilizador a utilizar quando criar o processo do compilador."
  syntax:
    content: public IntPtr UserToken { get; set; }
    return:
      type: System.IntPtr
      description: "O token de utilizador a utilizar."
  overload: System.CodeDom.Compiler.CompilerParameters.UserToken*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  id: WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nível de aviso no qual o compilador interrompe a compilação."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_11_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_11_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_11_1.vb)]"
  syntax:
    content: public int WarningLevel { get; set; }
    return:
      type: System.Int32
      description: "O nível de aviso no qual o compilador interrompe a compilação."
  overload: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  id: Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome do ficheiro de um ficheiro de recursos Win32 para ligar à assemblagem compilada."
  remarks: "Ligar os ficheiros utilizando esta propriedade é semelhante para o `/winres` e `/winresource` argumentos da linha de comandos suportados por muitas das compilers .NET Framework.       Utilize Win32Resource para compilar um ficheiro de recursos Win32 à assemblagem. Utilize <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>ou <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>para compilar com ficheiros de recursos do .NET Framework.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> </xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>       Em compiladores nem todas as suportam ficheiros de recursos Win32, pelo que deverá testar um gerador de código para este suporte antes de associar um ficheiro de recursos ao chamar o <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>método com o sinalizador <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>"
  syntax:
    content: public string Win32Resource { get; set; }
    return:
      type: System.String
      description: "Um ficheiro de recursos Win32 que será ligado à assemblagem compilada."
  overload: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
