### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataControlField
  id: DataControlField
  children:
  - System.Web.UI.WebControls.DataControlField.#ctor
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlField.CreateField
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  langs:
  - csharp
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
  type: Class
  summary: "Serves as the base class for all data control field types, which represent a column of data in tabular data-bound controls such as <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref> and <xref href=&quot;System.Web.UI.WebControls.GridView&quot;></xref>."
  remarks: "The DataControlField class serves as the base class for all data control field types. Data control fields are used by data-bound controls to represent a field of data, similar to how a <xref:System.Web.UI.WebControls.DataGridColumn> object represents a type of column in the <xref:System.Web.UI.WebControls.DataGrid> control.       Use the classes that are derived from DataControlField to control how a field of data is displayed in a data-bound control such as <xref:System.Web.UI.WebControls.DetailsView> or <xref:System.Web.UI.WebControls.GridView>. The following table lists the different data control field types provided by ASP.NET.      |Column field type|Description|   |-----------------------|-----------------|   |<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source as text.|   |<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button in a data-bound control. Depending on the control, this allows you to display either a row or a column with a custom button control, such as an Add or a Remove button.|   |<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box in a data-bound control. This data control field type is commonly used to display fields with a Boolean value.|   |<xref:System.Web.UI.WebControls.CommandField>|Displays built-in command buttons to perform edit, insert, or delete operations in a data-bound control.|   |<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink. This data control field type allows you to bind a second field to the hyperlink&quot;s URL.|   |<xref:System.Web.UI.WebControls.ImageField>|Displays an image in a data-bound control.|   |<xref:System.Web.UI.WebControls.TemplateField>|Displays user-defined content in a data-bound control according to a specified template.|       You can also extend the DataControlField and <xref:System.Web.UI.WebControls.BoundField> classes to create your own data control field types.       The DataControlField class provides many properties that determine how user interface (UI) elements are presented in the data-bound control. Not every control uses every available data control field property when rendering a UI. For example, the <xref:System.Web.UI.WebControls.DetailsView> control, which displays the data control fields as rows, includes a header item for each data control field, but no footer item. Therefore, the <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> and <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> properties are ignored by the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> control, however, uses the <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> and <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> properties if the <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> property is set to `true`. Similarly, the data control field properties affect the presentation of UI elements depending on what the element is. The <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> property is always applied to the field. If the type derived from DataControlField contains a control, as in the <xref:System.Web.UI.WebControls.ButtonField> or <xref:System.Web.UI.WebControls.CheckBoxField> classes, the <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> property is applied to the field."
  example:
  - "The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from DataControlField, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.DetailsView> control has the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> property set to `false`, which enables it to display a subset of the data returned by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_1.aspx)]  \n  \n The following code example demonstrates how to extend the <xref:System.Web.UI.WebControls.BoundField> class to create a custom bound field that can be used in a <xref:System.Web.UI.WebControls.GridView> control. Similar to the <xref:System.Web.UI.WebControls.CheckBoxField> class, the `RadioButtonField` class represents a column of `true` or `false` data. However, although the data that the <xref:System.Web.UI.WebControls.CheckBoxField> class is bound to can be any set of `true` or `false` values, the set of data that the `RadioButtonField` class is bound to can have only one `true` value at any given time. This example demonstrates how to implement the <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> and <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> methods, two important methods of all classes derived from DataControlField.  \n  \n [!code-vb[Samples.AspNet.RadioButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_2.vb)]\n [!code-cs[Samples.AspNet.RadioButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_2.cs)]  \n  \n The following code example demonstrates how to use the `RadioButtonField` class, which is provided in the previous example, in a <xref:System.Web.UI.WebControls.GridView> control. In this example, the <xref:System.Web.UI.WebControls.GridView> control displays data for a sports team. The player data is maintained in a data table that includes an ID column, columns for the player names, and a true or false column that identifies the captain of the team. The `RadioButtonField` class is used to display which team member is the current team captain. The <xref:System.Web.UI.WebControls.GridView> control can be edited to choose a new team captain or to change other player information.  \n  \n [!code-cs[System.Web.UI.WebControls.DataControlField_4#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_3.aspx)]\n [!code-vb[System.Web.UI.WebControls.DataControlField_4#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("HeaderText")]

      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public abstract class DataControlField : System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: DataControlField()
  nameWithType: DataControlField.DataControlField()
  fullName: System.Web.UI.WebControls.DataControlField.DataControlField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> class."
  remarks: "Because the <xref:System.Web.UI.WebControls.DataControlField> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.DataControlField> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.DataControlField> class."
  syntax:
    content: protected DataControlField ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  id: AccessibleHeaderText
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: AccessibleHeaderText
  nameWithType: DataControlField.AccessibleHeaderText
  fullName: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets text that is rendered as the <xref uid=&quot;langword_csharp_AbbreviatedText&quot; name=&quot;AbbreviatedText&quot; href=&quot;&quot;></xref> property value in some controls."
  remarks: "The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the AccessibleHeaderText property is set.       The value of the AccessibleHeaderText property is stored in view state.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual string AccessibleHeaderText { get; set; }
    return:
      type: System.String
      description: "A string that represents abbreviated text read by screen readers. The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.CloneField
  id: CloneField
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: CloneField()
  nameWithType: DataControlField.CloneField()
  fullName: System.Web.UI.WebControls.DataControlField.CloneField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates a duplicate copy of the current <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>-derived object."
  remarks: "The CloneField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlFieldCollection.CloneFields%2A> method to create a copy of the current <xref:System.Web.UI.WebControls.DataControlField>-derived object."
  syntax:
    content: protected System.Web.UI.WebControls.DataControlField CloneField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "A duplicate copy of the current <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.CloneField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.Control
  id: Control
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: Control
  nameWithType: DataControlField.Control
  fullName: System.Web.UI.WebControls.DataControlField.Control
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a reference to the data control that the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object is associated with."
  remarks: "The Control reference is set when the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method is called."
  syntax:
    content: protected System.Web.UI.Control Control { get; }
    return:
      type: System.Web.UI.Control
      description: "The data control that owns the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ControlStyle
  id: ControlStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ControlStyle
  nameWithType: DataControlField.ControlStyle
  fullName: System.Web.UI.WebControls.DataControlField.ControlStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the style of any Web server controls contained by the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object."
  remarks: "The ControlStyle property governs the appearance of any Web server controls contained by types derived from <xref:System.Web.UI.WebControls.DataControlField>.       This property does not affect all derived types. The <xref:System.Web.UI.WebControls.BoundField> control, which typically displays text data and contains only <xref:System.Web.UI.WebControls.TextBox> controls, is only affected by the ControlStyle property when in <xref:System.Web.UI.WebControls.DataControlRowState> state. Web server controls such as <xref:System.Web.UI.WebControls.ButtonField> and <xref:System.Web.UI.WebControls.CheckBoxField> might be affected by the ControlStyle property, depending on the specific configuration of the control object instances contained by the field. For example, the <xref:System.Web.UI.WebControls.ButtonField> control can be rendered as a <xref:System.Web.UI.WebControls.LinkButton>, <xref:System.Web.UI.WebControls.ImageButton>, or <xref:System.Web.UI.WebControls.Button> object. Although a <xref:System.Web.UI.WebControls.LinkButton> control is affected by `font` attributes of the specified <xref:System.Web.UI.WebControls.Style> object, a <xref:System.Web.UI.WebControls.Button> control is not."
  example:
  - "The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from <xref:System.Web.UI.WebControls.DataControlField>, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The ControlStyle property of the <xref:System.Web.UI.WebControls.ButtonField> object is set and governs how the <xref:System.Web.UI.WebControls.LinkButton> control contained by the field is displayed.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_323_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_323_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style ControlStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> that governs the appearance of Web server controls contained by the field."
  overload: System.Web.UI.WebControls.DataControlField.ControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DataControlField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies the properties of the current <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>-derived object to the specified <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object."
  remarks: "The CopyProperties method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.UI.WebControls.DataControlField>-derived object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method."
  syntax:
    content: protected virtual void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> to which to copy the properties of the current <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DataControlField.CreateField()
  fullName: System.Web.UI.WebControls.DataControlField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "When overridden in a derived class, creates an empty <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>-derived object."
  remarks: "The CreateField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.UI.WebControls.DataControlField>-derived object to copy the properties of the current <xref:System.Web.UI.WebControls.DataControlField>-derived object into."
  syntax:
    content: protected abstract System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>-derived object."
  overload: System.Web.UI.WebControls.DataControlField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.DesignMode
  id: DesignMode
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: DesignMode
  nameWithType: DataControlField.DesignMode
  fullName: System.Web.UI.WebControls.DataControlField.DesignMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether a data control field is currently viewed in a design-time environment."
  remarks: "The DesignMode property exposes the <xref:System.Web.UI.Control.DesignMode%2A?displayProperty=fullName> property. The <xref:System.Web.UI.Control> instance that is passed to the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method is used."
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> is currently viewed in a design-time environment; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Extracts the value of the data control field from the current table cell and adds the value to the specified <xref:System.Collections.IDictionary> collection."
  remarks: "The ExtractValuesFromCell method is implemented by types derived from <xref:System.Web.UI.WebControls.DataControlField> to associate the current field with a value, if applicable. The field/value pair is stored in the `dictionary` collection that is passed to the method. The ExtractValuesFromCell method is called by the `ExtractRowValues` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to assemble a set of cells and their associated values. Implement this method when you are writing a class derived from <xref:System.Web.UI.WebControls.DataControlField> that displays user data or data-bound data. Not all derived types implement the ExtractValuesFromCell method, because not all fields display user data. For example, the <xref:System.Web.UI.WebControls.ButtonField> control displays a button and has no user data."
  example:
  - "The following code example demonstrates how to implement the ExtractValuesFromCell method for a control that derives from the <xref:System.Web.UI.WebControls.DataControlField> class. The `RadioButtonField` class renders a data-bound radio button for every row in a <xref:System.Web.UI.WebControls.GridView> control. When the ExtractValuesFromCell method is called, the method attempts to determine whether the current value of the <xref:System.Web.UI.WebControls.RadioButton> object contained in the cell is selected or cleared, and adds the value to the <xref:System.Collections.IDictionary> collection. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.DataControlField> class.  \n  \n [!code-vb[Samples.AspNet.RadioButtonField#2](~/add/codesnippet/visualbasic/2be9d6dc-be8d-4f63-afd4-_1.vb)]\n [!code-cs[Samples.AspNet.RadioButtonField#2](~/add/codesnippet/csharp/2be9d6dc-be8d-4f63-afd4-_1.cs)]"
  syntax:
    content: public virtual void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> that contains the text or controls of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the values of read-only fields are included in the `dictionary` collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DataControlField.FooterStyle
  fullName: System.Web.UI.WebControls.DataControlField.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the style of the footer of the data control field."
  remarks: "The FooterStyle property governs the appearance of any text displayed in the footer item of a type derived from <xref:System.Web.UI.WebControls.DataControlField>.      > [!NOTE] >  Some data-bound controls do not render a footer item for a data control field. For example, the <xref:System.Web.UI.WebControls.DetailsView> control displays its data control fields as rows. A footer item is not rendered for these data control fields. The FooterStyle property is ignored in these controls."
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref> that governs the appearance of the footer item of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: FooterText
  nameWithType: DataControlField.FooterText
  fullName: System.Web.UI.WebControls.DataControlField.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text that is displayed in the footer item of a data control field."
  remarks: "Use the FooterText property to add notes or comments to a data control field, or for other data related to the field.      > [!NOTE] >  Some data-bound controls do not render a footer item for a data control field. For example, the <xref:System.Web.UI.WebControls.DetailsView> control displays its data control fields as rows. A footer item is not rendered for these data control fields. The <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> property is ignored in these controls.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "A string that is displayed in the footer item of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  id: HeaderImageUrl
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: HeaderImageUrl
  nameWithType: DataControlField.HeaderImageUrl
  fullName: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL of an image that is displayed in the header item of a data control field."
  remarks: "Set the HeaderImageUrl property when you want an image displayed in the header item of a data control instead of header text.      > [!NOTE] >  If both the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> and HeaderImageUrl properties are set, the HeaderImageUrl property has precedence."
  example:
  - "The following code example demonstrates how to declaratively set the HeaderImageUrl property of a <xref:System.Web.UI.WebControls.ButtonField> column, which displays an image in the <xref:System.Web.UI.WebControls.GridView> control's column header instead of header text.  \n  \n [!code-cs[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_179_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_179_1.aspx)]"
  syntax:
    content: public virtual string HeaderImageUrl { get; set; }
    return:
      type: System.String
      description: "A string that represents a fully qualified or relative URL to an image that is displayed in the header item of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.HeaderImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DataControlField.HeaderStyle
  fullName: System.Web.UI.WebControls.DataControlField.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the style of the header of the data control field."
  remarks: "The HeaderStyle property governs the appearance of any text displayed in the header item of a type derived from <xref:System.Web.UI.WebControls.DataControlField>. The most common application of the HeaderStyle property is to alter the style of the column headers in a <xref:System.Web.UI.WebControls.GridView> control."
  example:
  - "The following code example demonstrates how to declaratively set the HeaderStyle property of a <xref:System.Web.UI.WebControls.HyperLinkField> column, which displays a yellow background color for the column header in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref> that governs the appearance of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> header item."
  overload: System.Web.UI.WebControls.DataControlField.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DataControlField.HeaderText
  fullName: System.Web.UI.WebControls.DataControlField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text that is displayed in the header item of a data control field."
  remarks: "Use the HeaderText property to identify a field in a data control with a friendly name. The most common application of the HeaderText property is to provide meaningful column names for data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.      > [!NOTE] >  If both the HeaderText and <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> properties are set, the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property has precedence.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to declaratively set the HeaderText properties of <xref:System.Web.UI.WebControls.BoundField> columns to display text in the column headers of a <xref:System.Web.UI.WebControls.GridView> control. This code example demonstrates a master-details scenario in which a <xref:System.Web.UI.WebControls.GridView> control is used to display a subset of data while the <xref:System.Web.UI.WebControls.DetailsView> control is used to display a larger set of data and insert new records. The example uses two <xref:System.Web.UI.WebControls.SqlDataSource> controls: one to populate the <xref:System.Web.UI.WebControls.GridView> control and one to populate the <xref:System.Web.UI.WebControls.DetailsView> control and insert data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_194_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_194_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "A string that is displayed in the header item of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: DataControlField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.DataControlField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Performs basic instance initialization for a data control field."
  remarks: "The control that the <xref:System.Web.UI.WebControls.DataControlField> object is associated with calls the Initialize method to initialize the field before it is added to a rows collection. Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the Initialize method in their `CreateChildControls` methods before calling other methods such as `CreateRow` to create specific rows with data.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to perform basic initialization for any <xref:System.Web.UI.WebControls.DataControlField> objects. Implement this method if your derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.DataControlFieldCell> objects with data or controls in the <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> method."
  syntax:
    content: public virtual bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "A value that indicates whether the control supports the sorting of columns of data."
    - id: control
      type: System.Web.UI.Control
      description: "The data control that owns the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
    return:
      type: System.Boolean
      description: "Always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adds text or controls to a cell&quot;s controls collection."
  remarks: "Types derived from <xref:System.Web.UI.WebControls.DataControlField> implement the InitializeCell method to add text and controls to a <xref:System.Web.UI.WebControls.DataControlFieldCell> object that belongs to a data control that uses tables to display a user interface (UI). These data controls create the complete table structure row by row when their respective `CreateChildControls` methods are called. The InitializeCell method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to initialize the cells of the table structure with data or controls. Implement this method when you are writing a class derived from <xref:System.Web.UI.WebControls.DataControlField>."
  example:
  - "The following code example demonstrates how to implement the InitializeCell method for a control that derives from the <xref:System.Web.UI.WebControls.DataControlField> class. The `RadioButtonField` class renders a data-bound radio button for every row in a <xref:System.Web.UI.WebControls.GridView> control. When the row is displaying data to a user and is not in edit mode, the <xref:System.Web.UI.WebControls.RadioButton> control is disabled. When the row is in edit mode, for example when the user chooses to update a row in the <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.RadioButton> control is rendered as enabled so that it can be clicked. This example uses bitwise AND operators, because the row state might be a combination of one or more <xref:System.Web.UI.WebControls.DataControlRowState> values.  \n  \n [!code-vb[Samples.AspNet.RadioButtonField#3](~/add/codesnippet/visualbasic/cb634f4d-ad7d-4bb0-a118-_1.vb)]\n [!code-cs[Samples.AspNet.RadioButtonField#3](~/add/codesnippet/csharp/cb634f4d-ad7d-4bb0-a118-_1.cs)]"
  syntax:
    content: public virtual void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> that contains the text or controls of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;></xref> values."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values, specifying the state of the row that contains the <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref>."
    - id: rowIndex
      type: System.Int32
      description: "The index of the row that the <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> is contained in."
  overload: System.Web.UI.WebControls.DataControlField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.InsertVisible
  id: InsertVisible
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: InsertVisible
  nameWithType: DataControlField.InsertVisible
  fullName: System.Web.UI.WebControls.DataControlField.InsertVisible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object is visible when its parent data-bound control is in insert mode."
  remarks: "A data-bound control is in insert mode when the state of the current display row is <xref:System.Web.UI.WebControls.DataControlRowState?displayProperty=fullName>.       The <xref:System.Web.UI.WebControls.DetailsView> control checks the value of this property before it renders a set of fields. If the InsertVisible property is `false`, the <xref:System.Web.UI.Control.Visible%2A> property of the <xref:System.Web.UI.WebControls.DetailsViewRow> object is set to `false`.       The value of the InsertVisible property is stored in view state."
  syntax:
    content: public virtual bool InsertVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the field is visible when its parent data-bound control is rendered in insert mode; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.InsertVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: DataControlField.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object is saving changes to its view state."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data source view is marked to save its state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ItemStyle
  id: ItemStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ItemStyle
  nameWithType: DataControlField.ItemStyle
  fullName: System.Web.UI.WebControls.DataControlField.ItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the style of any text-based content displayed by a data control field."
  remarks: "The ItemStyle property governs the appearance of any text data displayed by a type derived from <xref:System.Web.UI.WebControls.DataControlField>. For example, when you bind a <xref:System.Web.UI.WebControls.BoundField> control to text data, you can use the ItemStyle property to alter the appearance of the text that is displayed."
  example:
  - "The following code example demonstrates how to declaratively set the ItemStyle property on the <xref:System.Web.UI.WebControls.BoundField> objects used to display `FirstName` and `LastName` data in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.DetailsView> control has the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> property set to `false`, which enables it to display a subset of the data returned by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_820_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_820_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref> that governs the appearance of text displayed in a <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.ItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DataControlField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restores the data source view&quot;s previously saved view state."
  remarks: "This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).       This method restores view-state information for the <xref:System.Web.UI.WebControls.DataControlField> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.DataControlField.SaveViewState%2A> method."
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "An object that represents the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> state to restore."
  overload: System.Web.UI.WebControls.DataControlField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.OnFieldChanged
  id: OnFieldChanged
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: OnFieldChanged()
  nameWithType: DataControlField.OnFieldChanged()
  fullName: System.Web.UI.WebControls.DataControlField.OnFieldChanged()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises the <xref uid=&quot;langword_csharp_FieldChanged&quot; name=&quot;FieldChanged&quot; href=&quot;&quot;></xref> event."
  remarks: "The OnFieldChanged method raises an event signaling that the <xref:System.Web.UI.WebControls.DataControlField> object&quot;s state has changed. Changes to the following properties cause this event to be raised: <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>, <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>, <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>, <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>, <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>, and <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>. Derived type properties also raise this event when state changes occur. Web server controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> typically call the `DataBind` method in response to a field change event.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnFieldChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnFieldChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.OnFieldChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DataControlField.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the changes made to the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> view state since the time the page was posted back to the server."
  remarks: "This method is used primarily by control developers.       View state is the accumulation of the values of a server control&quot;s properties. These values are automatically placed in the server control&quot;s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property&quot;s value is then persisted to a string object after the save state stage of the server control life cycle.       When view state is saved, a string is returned to the client as a variable that is stored in an HTML `hidden` element. When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control&quot;s <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [ASP.NET View State Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "The object that contains the changes to the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> view state. If there is no view state associated with the object, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ShowHeader
  nameWithType: DataControlField.ShowHeader
  fullName: System.Web.UI.WebControls.DataControlField.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether the header item of a data control field is rendered."
  remarks: "Use the ShowHeader property to specify whether the header item is displayed in a <xref:System.Web.UI.WebControls.DataControlField> object."
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the header item of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> is rendered; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.SortExpression
  id: SortExpression
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DataControlField.SortExpression
  fullName: System.Web.UI.WebControls.DataControlField.SortExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a sort expression that is used by a data source control to sort data."
  remarks: "The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the SortExpression property is set.       The value of the SortExpression property is stored in view state."
  example:
  - "The following code example demonstrates how to use the SortExpression property to assign a sort expression to a data control field.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_407_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_407_1.aspx)]"
  syntax:
    content: public virtual string SortExpression { get; set; }
    return:
      type: System.String
      description: "A sort expression that is used by a data source control to sort data. The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.DataControlField.SortExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the schema associated with this <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object."
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "The schema associated with this <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object is saving changes to its view state."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> is saving changes to its view state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restores the data control field&quot;s previously saved view state."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that contains the saved view state values for the control."
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the changes made to the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> view state since the time the page was posted back to the server."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains the saved view state values for the control."
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Causes the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object to track changes to its view state so they can be stored in the control&quot;s <xref:System.Web.UI.WebControls.DataControlField.ViewState*> property and persisted across requests for the same page."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ToString
  id: ToString
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ToString()
  nameWithType: DataControlField.ToString()
  fullName: System.Web.UI.WebControls.DataControlField.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns a string that represents this <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object."
  remarks: "This method is implemented to return the value of the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> property, if the property is set. Otherwise, this method simply returns a string that represents the type of the data control field (for example, &quot;BoundField&quot;)."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents this <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DataControlField.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Causes the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object to track changes to its view state so they can be stored in the control&quot;s <xref:System.Web.UI.WebControls.DataControlField.ViewState*> property and persisted across requests for the same page."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DataControlField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that specifies whether the control validates client input."
  syntax:
    content: protected virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control validates client input; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: DataControlField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "When overridden in a derived class, signals that the controls contained by a field support callbacks."
  remarks: "The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.DataControlField> object support callbacks. The base implementation of this method has been implemented to throw a <xref:System.NotSupportedException> exception to indicate that callbacks are not supported.      > [!NOTE] >  This method is used primarily by control developers."
  syntax:
    content: public virtual void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The method is called on a default instance of the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> class."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ViewState
  id: ViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ViewState
  nameWithType: DataControlField.ViewState
  fullName: System.Web.UI.WebControls.DataControlField.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a dictionary of state information that allows you to save and restore the view state of a <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object across multiple requests for the same page."
  remarks: "A data control field&quot;s view state is the accumulation of all its property values. To preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the <xref:System.Web.UI.StateBag> class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see [ASP.NET View State Overview](~/add/includes/ajax-current-ext-md.md).       View state is enabled for all server controls by default, but there are circumstances when you will want to disable it. For more information, see [ASP.NET Performance Overview](~/add/includes/ajax-current-ext-md.md).       For more information about dictionaries and how to use them, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected System.Web.UI.StateBag ViewState { get; }
    return:
      type: System.Web.UI.StateBag
      description: "An instance of <xref href=&quot;System.Web.UI.StateBag&quot;></xref> that contains the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> view-state information."
  overload: System.Web.UI.WebControls.DataControlField.ViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.Visible
  id: Visible
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: Visible
  nameWithType: DataControlField.Visible
  fullName: System.Web.UI.WebControls.DataControlField.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether a data control field is rendered."
  remarks: "Use the Visible property to show or hide <xref:System.Web.UI.WebControls.DataControlField> objects in a data-bound control.       If the the Visible property is `false`, the data values are not displayed and do not make a round-trip to the client. If you want to round-trip the data for a field that is not visible, add the field name to the `DataKeyNames` property of the data-bound control."
  example:
  - "The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from <xref:System.Web.UI.WebControls.DataControlField>, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The Visible property of the <xref:System.Web.UI.WebControls.BoundField> object that displays the `EmployeeID` column is set to `false`, and the column is not rendered by the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_987_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_987_1.aspx)]"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> is rendered; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataControlField.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.DataControlField.#ctor
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DataControlField()
  nameWithType: DataControlField.DataControlField()
  fullName: System.Web.UI.WebControls.DataControlField.DataControlField()
- uid: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: AccessibleHeaderText
  nameWithType: DataControlField.AccessibleHeaderText
  fullName: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DataControlField.CloneField
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CloneField()
  nameWithType: DataControlField.CloneField()
  fullName: System.Web.UI.WebControls.DataControlField.CloneField()
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DataControlField.Control
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Control
  nameWithType: DataControlField.Control
  fullName: System.Web.UI.WebControls.DataControlField.Control
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.DataControlField.ControlStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ControlStyle
  nameWithType: DataControlField.ControlStyle
  fullName: System.Web.UI.WebControls.DataControlField.ControlStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DataControlField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField.CreateField
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CreateField()
  nameWithType: DataControlField.CreateField()
  fullName: System.Web.UI.WebControls.DataControlField.CreateField()
- uid: System.Web.UI.WebControls.DataControlField.DesignMode
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DesignMode
  nameWithType: DataControlField.DesignMode
  fullName: System.Web.UI.WebControls.DataControlField.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.DataControlField.FooterStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterStyle
  nameWithType: DataControlField.FooterStyle
  fullName: System.Web.UI.WebControls.DataControlField.FooterStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DataControlField.FooterText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterText
  nameWithType: DataControlField.FooterText
  fullName: System.Web.UI.WebControls.DataControlField.FooterText
- uid: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderImageUrl
  nameWithType: DataControlField.HeaderImageUrl
  fullName: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
- uid: System.Web.UI.WebControls.DataControlField.HeaderStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderStyle
  nameWithType: DataControlField.HeaderStyle
  fullName: System.Web.UI.WebControls.DataControlField.HeaderStyle
- uid: System.Web.UI.WebControls.DataControlField.HeaderText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderText
  nameWithType: DataControlField.HeaderText
  fullName: System.Web.UI.WebControls.DataControlField.HeaderText
- uid: System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: DataControlField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.DataControlField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataControlField.InsertVisible
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InsertVisible
  nameWithType: DataControlField.InsertVisible
  fullName: System.Web.UI.WebControls.DataControlField.InsertVisible
- uid: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IsTrackingViewState
  nameWithType: DataControlField.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.ItemStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ItemStyle
  nameWithType: DataControlField.ItemStyle
  fullName: System.Web.UI.WebControls.DataControlField.ItemStyle
- uid: System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DataControlField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DataControlField.OnFieldChanged
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: OnFieldChanged()
  nameWithType: DataControlField.OnFieldChanged()
  fullName: System.Web.UI.WebControls.DataControlField.OnFieldChanged()
- uid: System.Web.UI.WebControls.DataControlField.SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SaveViewState()
  nameWithType: DataControlField.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.SaveViewState()
- uid: System.Web.UI.WebControls.DataControlField.ShowHeader
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ShowHeader
  nameWithType: DataControlField.ShowHeader
  fullName: System.Web.UI.WebControls.DataControlField.ShowHeader
- uid: System.Web.UI.WebControls.DataControlField.SortExpression
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SortExpression
  nameWithType: DataControlField.SortExpression
  fullName: System.Web.UI.WebControls.DataControlField.SortExpression
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.DataControlField.ToString
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ToString()
  nameWithType: DataControlField.ToString()
  fullName: System.Web.UI.WebControls.DataControlField.ToString()
- uid: System.Web.UI.WebControls.DataControlField.TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: TrackViewState()
  nameWithType: DataControlField.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.TrackViewState()
- uid: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DataControlField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: DataControlField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.DataControlField.ViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ViewState
  nameWithType: DataControlField.ViewState
  fullName: System.Web.UI.WebControls.DataControlField.ViewState
- uid: System.Web.UI.StateBag
  parent: System.Web.UI
  isExternal: false
  name: StateBag
  nameWithType: StateBag
  fullName: System.Web.UI.StateBag
- uid: System.Web.UI.WebControls.DataControlField.Visible
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Visible
  nameWithType: DataControlField.Visible
  fullName: System.Web.UI.WebControls.DataControlField.Visible
- uid: System.Web.UI.WebControls.DataControlField.#ctor*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField.DataControlField
- uid: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: AccessibleHeaderText
  nameWithType: DataControlField.AccessibleHeaderText
- uid: System.Web.UI.WebControls.DataControlField.CloneField*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CloneField
  nameWithType: DataControlField.CloneField
- uid: System.Web.UI.WebControls.DataControlField.Control*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Control
  nameWithType: DataControlField.Control
- uid: System.Web.UI.WebControls.DataControlField.ControlStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ControlStyle
  nameWithType: DataControlField.ControlStyle
- uid: System.Web.UI.WebControls.DataControlField.CopyProperties*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CopyProperties
  nameWithType: DataControlField.CopyProperties
- uid: System.Web.UI.WebControls.DataControlField.CreateField*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CreateField
  nameWithType: DataControlField.CreateField
- uid: System.Web.UI.WebControls.DataControlField.DesignMode*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DesignMode
  nameWithType: DataControlField.DesignMode
- uid: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DataControlField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.DataControlField.FooterStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterStyle
  nameWithType: DataControlField.FooterStyle
- uid: System.Web.UI.WebControls.DataControlField.FooterText*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterText
  nameWithType: DataControlField.FooterText
- uid: System.Web.UI.WebControls.DataControlField.HeaderImageUrl*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderImageUrl
  nameWithType: DataControlField.HeaderImageUrl
- uid: System.Web.UI.WebControls.DataControlField.HeaderStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderStyle
  nameWithType: DataControlField.HeaderStyle
- uid: System.Web.UI.WebControls.DataControlField.HeaderText*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderText
  nameWithType: DataControlField.HeaderText
- uid: System.Web.UI.WebControls.DataControlField.Initialize*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Initialize
  nameWithType: DataControlField.Initialize
- uid: System.Web.UI.WebControls.DataControlField.InitializeCell*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InitializeCell
  nameWithType: DataControlField.InitializeCell
- uid: System.Web.UI.WebControls.DataControlField.InsertVisible*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InsertVisible
  nameWithType: DataControlField.InsertVisible
- uid: System.Web.UI.WebControls.DataControlField.IsTrackingViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IsTrackingViewState
  nameWithType: DataControlField.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.ItemStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ItemStyle
  nameWithType: DataControlField.ItemStyle
- uid: System.Web.UI.WebControls.DataControlField.LoadViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: LoadViewState
  nameWithType: DataControlField.LoadViewState
- uid: System.Web.UI.WebControls.DataControlField.OnFieldChanged*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: OnFieldChanged
  nameWithType: DataControlField.OnFieldChanged
- uid: System.Web.UI.WebControls.DataControlField.SaveViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SaveViewState
  nameWithType: DataControlField.SaveViewState
- uid: System.Web.UI.WebControls.DataControlField.ShowHeader*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ShowHeader
  nameWithType: DataControlField.ShowHeader
- uid: System.Web.UI.WebControls.DataControlField.SortExpression*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SortExpression
  nameWithType: DataControlField.SortExpression
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.DataControlField.ToString*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ToString
  nameWithType: DataControlField.ToString
- uid: System.Web.UI.WebControls.DataControlField.TrackViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: TrackViewState
  nameWithType: DataControlField.TrackViewState
- uid: System.Web.UI.WebControls.DataControlField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DataControlField.ValidateRequestMode
- uid: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: DataControlField.ValidateSupportsCallback
- uid: System.Web.UI.WebControls.DataControlField.ViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ViewState
  nameWithType: DataControlField.ViewState
- uid: System.Web.UI.WebControls.DataControlField.Visible*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Visible
  nameWithType: DataControlField.Visible
