### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService
  id: ComponentSerializationService
  children:
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  langs:
  - csharp
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService
  type: Class
  summary: "Provides the base class for serializing a set of components or serializable objects into a serialization store."
  remarks: "The ComponentSerializationService serializes a set of components or serializable objects into a serialization store. The store can then be deserialized later. The ComponentSerializationService class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects. For example, you can choose to serialize only selected properties for an object.       This class is `abstract`. Typically, a <xref:System.ComponentModel.Design.Serialization.DesignerLoader> will provide a concrete implementation of this class and add it as a service to its <xref:System.ComponentModel.Design.DesignSurface>. This allows objects to be serialized in the format best suited for them.       The ComponentSerializationService class replaces the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility."
  syntax:
    content: public abstract class ComponentSerializationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Design.Serialization.ComponentSerializationService&quot;></xref> class."
  syntax:
    content: protected ComponentSerializationService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  id: CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Creates a new <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref>."
  remarks: "Multiple objects can be serialized into the same serialization store. When you are finished with the store, you can call its <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> or <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> method. Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.       The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects."
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();
    parameters: []
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "A new created serialization store."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes the given store to produce a collection of objects."
  remarks: "This method deserializes `store` to produce a collection of objects contained within it. Objects are deserialized in the same order in which they were serialized."
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to deserialize."
    return:
      type: System.Collections.ICollection
      description: "A collection of objects created according to the stored state."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> does not contain data in a format the serialization container can process."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes the given store and populates the given <xref href=&quot;System.ComponentModel.IContainer&quot;></xref> with deserialized <xref href=&quot;System.ComponentModel.IComponent&quot;></xref> objects."
  remarks: "This method deserializes `store` to produce a collection of objects contained within it. Objects are deserialized in the same order in which they were serialized.       Created objects that implement <xref:System.ComponentModel.IComponent> are added to `container`."
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to deserialize."
    - id: container
      type: System.ComponentModel.IContainer
      description: "The <xref href=&quot;System.ComponentModel.IContainer&quot;></xref> to which <xref href=&quot;System.ComponentModel.IComponent&quot;></xref> objects will be added."
    return:
      type: System.Collections.ICollection
      description: "A collection of objects created according to the stored state."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> does not contain data in a format the serialization container can process."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes the given <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to the given container."
  remarks: "The DeserializeTo method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container. As a result, the caller can create in advance an object however it sees fit. If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created. If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`. Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to deserialize."
    - id: container
      type: System.ComponentModel.IContainer
      description: "The container to which <xref href=&quot;System.ComponentModel.IComponent&quot;></xref> objects will be added."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> does not contain data in a format the serialization container can process."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes the given <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to the given container, optionally validating recycled types."
  remarks: "The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container. As a result, the caller can create in advance an object however it sees fit. If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created. If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`. Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to deserialize."
    - id: container
      type: System.ComponentModel.IContainer
      description: "The container to which <xref href=&quot;System.ComponentModel.IComponent&quot;></xref> objects will be added."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to guarantee that the deserialization will only work if applied to an object of the same type."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> does not contain data in a format the serialization container can process."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Deserializes the given <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to the given container, optionally applying default property values."
  remarks: "The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container. As a result, the caller can create in advance an object however it sees fit. If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created. If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`. Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used."
  syntax:
    content: public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to deserialize."
    - id: container
      type: System.ComponentModel.IContainer
      description: "The container to which <xref href=&quot;System.ComponentModel.IComponent&quot;></xref> objects will be added."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to guarantee that the deserialization will only work if applied to an object of the same type."
    - id: applyDefaults
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the default property values should be applied."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> does not contain data in a format the serialization container can process."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  id: LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Loads a <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> from a stream."
  remarks: "You can use the returned store to deserialize objects by passing it to one of the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> methods."
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The <xref:System.IO.Stream> from which the store will be loaded."
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "A new <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> instance."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>stream</code> does not contain data saved by a previous call to <xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializes the given object to the given <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref>."
  remarks: "The store can be used to serialize more than one object by calling this method more than once."
  syntax:
    content: public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to which the state of `value` will be written."
    - id: value
      type: System.Object
      description: "The object to serialize."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> is closed, or <code>store</code> is not a supported type of serialization store. Use a store returned by <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializes the given object, accounting for default property values."
  remarks: "Standard serialization, as implemented through the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> method, only serializes values that differ from the component&quot;s default state. This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization. If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.       The SerializeAbsolute method does not use this shortcut. It serializes all properties of the source object so that deserialization can restore all the object&quot;s properties, regardless of default state.       This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change. In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values."
  syntax:
    content: public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to which the state of `value` will be serialized."
    - id: value
      type: System.Object
      description: "The object to serialize."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> is closed, or <code>store</code> is not a supported type of serialization store. Use a store returned by <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializes the given member on the given object."
  remarks: "The SerializeMember method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store. In general, the member should be a property or an event."
  syntax:
    content: public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to which the state of `member` will be serialized."
    - id: owningObject
      type: System.Object
      description: "The object to which `member` is attached."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref> specifying the member to serialize."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> is closed, or <code>store</code> is not a supported type of serialization store. Use a store returned by <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializes the given member on the given object, accounting for the default property value."
  remarks: "The SerializeMemberAbsolute method serializes the `member` on `owningObject`, even if `member` contains the default property value.       Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts. For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired. The SerializeMemberAbsolute method takes this into account and would clear the state of the property in this case."
  syntax:
    content: public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "The <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;></xref> to which the state of `member` will be serialized."
    - id: owningObject
      type: System.Object
      description: "The object to which `member` is attached."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "The member to serialize."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code> is closed, or <code>store</code> is not a supported type of serialization store. Use a store returned by <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
- uid: System.ComponentModel.Design.Serialization.SerializationStore
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: SerializationStore
  nameWithType: SerializationStore
  fullName: System.ComponentModel.Design.Serialization.SerializationStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService.ComponentSerializationService
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore
  nameWithType: ComponentSerializationService.CreateStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize
  nameWithType: ComponentSerializationService.Deserialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo
  nameWithType: ComponentSerializationService.DeserializeTo
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore
  nameWithType: ComponentSerializationService.LoadStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize
  nameWithType: ComponentSerializationService.Serialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute
  nameWithType: ComponentSerializationService.SerializeAbsolute
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember
  nameWithType: ComponentSerializationService.SerializeMember
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute
