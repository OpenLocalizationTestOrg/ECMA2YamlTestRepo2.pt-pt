### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  id: SynchronizationAttribute
  children:
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Boolean)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32,System.Boolean)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  langs:
  - csharp
  name: SynchronizationAttribute
  nameWithType: SynchronizationAttribute
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  type: Class
  summary: "Impõe um domínio de sincronização para o contexto atual e todos os contextos que partilham a mesma instância."
  remarks: "When this attribute is applied to an object, only one thread can be executing in all contexts that share an instance of this property. This is done by contributing sinks that intercept and serialize incoming calls for the respective contexts. If the property is marked for reentry, then callouts are intercepted too. The callout interception allows other waiting threads to enter the synchronization domain for maximal throughput.  \n  \n> [!NOTE]\n>  There are two classes named `SynchronizationAttribute` : one in the <xref:System.Runtime.Remoting.Contexts> namespace, and the other in the <xref:System.EnterpriseServices> namespace. The <xref:System.EnterpriseServices.SynchronizationAttribute?displayProperty=fullName> class supports only synchronous calls, and can be used only with serviced components. (For more information on serviced components, see [&#91;\\<topic://cpconservicedcomponentoverview>&#93;](http://msdn.microsoft.com/en-us/5133a620-9c8c-47bd-8e36-130e722fe463).) The SynchronizationAttribute supports both synchronous and asynchronous calls, and can be used only with context bound objects. (For more information on context bound objects, see the <xref:System.ContextBoundObject> class.)  \n  \n> [!NOTE]\n>  This class makes a link demand and an inheritance demand at the class level. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission. For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following code example demonstrates the use of the SynchronizationAttribute. For the complete example code, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.  \n  \n [!code-cpp[AsyncResult.NewExamples#2](~/add/codesnippet/cpp/t-system.runtime.remotin_11_1.cpp)]\n [!code-vb[AsyncResult.NewExamples#2](~/add/codesnippet/visualbasic/t-system.runtime.remotin_11_1.vb)]\n [!code-cs[AsyncResult.NewExamples#2](~/add/codesnippet/csharp/t-system.runtime.remotin_11_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class SynchronizationAttribute : System.Runtime.Remoting.Contexts.ContextAttribute, System.Runtime.Remoting.Contexts.IContributeClientContextSink, System.Runtime.Remoting.Contexts.IContributeServerContextSink
  inheritance:
  - System.Attribute
  - System.Runtime.Remoting.Contexts.ContextAttribute
  implements:
  - System.Runtime.Remoting.Contexts.IContributeClientContextSink
  - System.Runtime.Remoting.Contexts.IContributeServerContextSink
  inheritedMembers:
  - System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName
  - System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)
  - System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode
  - System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.ContextAttribute.Name
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute()
  nameWithType: SynchronizationAttribute.SynchronizationAttribute()
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> classe com valores predefinidos."
  syntax:
    content: public SynchronizationAttribute ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute(Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> classe com um valor de Booleano indicando se reentry é necessária."
  remarks: "Se for necessário, o reentry callouts fora do <xref:System.Runtime.Remoting.Contexts.Context>para que é aplicado o atributo atual tem de ser intercetado e serializado.</xref:System.Runtime.Remoting.Contexts.Context>"
  syntax:
    content: public SynchronizationAttribute (bool reEntrant);
    parameters:
    - id: reEntrant
      type: System.Boolean
      description: "Um valor de Booleano indicando se reentry é necessária."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute(Int32)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> classe com um sinalizador que indica o comportamento do objeto ao qual este atributo é aplicado."
  remarks: "O `flag` parâmetro tem de ser um <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED>, ou <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW>.</xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>"
  syntax:
    content: public SynchronizationAttribute (int flag);
    parameters:
    - id: flag
      type: System.Int32
      description: "Um número inteiro que indica o comportamento do objeto ao qual este atributo é aplicado."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> flag </code> parâmetro não era um dos sinalizadores definidos."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute(Int32,Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> classe com um sinalizador que indica o comportamento do objeto ao qual este atributo é aplicado e um valor de Booleano indicando se reentry é necessária."
  remarks: "O `flag` parâmetro tem de ser um <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED>, ou <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW>.</xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>"
  syntax:
    content: public SynchronizationAttribute (int flag, bool reEntrant);
    parameters:
    - id: flag
      type: System.Int32
      description: "Um número inteiro que indica o comportamento do objeto ao qual este atributo é aplicado."
    - id: reEntrant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se é necessário o reentry e callouts tem de ser intercetados e serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> flag </code> parâmetro não era um dos sinalizadores definidos."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: GetClientContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetClientContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Cria um receptor de chamada e encadeia-lo à frente da cadeia fornecida de sinks no limite de contexto no final de uma chamada remota de cliente."
  remarks: "O método atual é uma implementação de <xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A?displayProperty=fullName>.</xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de sinks compostas até ao momento."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de sink composto com o sink de chamada de novo."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  id: GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: GetPropertiesForNewContext(IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Adiciona o <xref uid=&quot;langword_csharp_Synchronized&quot; name=&quot;Synchronized&quot; href=&quot;&quot;> </xref> propriedade contexto especificado <xref href=&quot;System.Runtime.Remoting.Activation.IConstructionCallMessage&quot;> </xref>."
  syntax:
    content: public override void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);
    parameters:
    - id: ctorMsg
      type: System.Runtime.Remoting.Activation.IConstructionCallMessage
      description: "O <xref href=&quot;System.Runtime.Remoting.Activation.IConstructionCallMessage&quot;> </xref> ao qual pretende adicionar a propriedade."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: GetServerContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Cria um receptor de emissão sincronizados e encadeia-lo à frente da cadeia fornecida de sinks no limite de contexto no final de uma chamada remota de servidor."
  remarks: "O método atual é uma implementação de <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A?displayProperty=fullName>.</xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de sinks compostas até ao momento."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de receptores composto com o novo sincronizado sink de emissão."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  id: IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: IsContextOK(Context,IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Devolve um valor booleano que indica se o parâmetro de contexto cumpre os requisitos do atributo de contexto."
  syntax:
    content: public override bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage msg);
    parameters:
    - id: ctx
      type: System.Runtime.Remoting.Contexts.Context
      description: "O contexto de verificação."
    - id: msg
      type: System.Runtime.Remoting.Activation.IConstructionCallMessage
      description: "Informações recolhidas durante a construção de objeto context vinculadas marcado por este atributo. O <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> podem inspecionar, adicionar e remover propriedades de contexto ao determinar se o contexto é aceitável para o mesmo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o contexto transmitido está OK; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>ctx</code> or <code>msg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  id: IsReEntrant
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: IsReEntrant
  nameWithType: SynchronizationAttribute.IsReEntrant
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Obtém ou define um valor de Booleano indicando se reentry é necessária."
  remarks: "Se for necessário, o reentry callouts fora do <xref:System.Runtime.Remoting.Contexts.Context>para que é aplicado o atributo atual tem de ser intercetado e serializado.</xref:System.Runtime.Remoting.Contexts.Context>"
  syntax:
    content: public virtual bool IsReEntrant { get; }
    return:
      type: System.Boolean
      description: "Um valor de Booleano indicando se reentry é necessária."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  id: Locked
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: Locked
  nameWithType: SynchronizationAttribute.Locked
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Obtém ou define um valor booleano que indica se o <xref href=&quot;System.Runtime.Remoting.Contexts.Context&quot;> </xref> implementar esta instância do <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> está bloqueado."
  remarks: "Quando um sincronizados <xref:System.Runtime.Remoting.Contexts.Context>está bloqueada, só o thread atualmente em execução no mesmo tem acesso a objetos <xref:System.Runtime.Remoting.Contexts.Context>.</xref:System.Runtime.Remoting.Contexts.Context> </xref:System.Runtime.Remoting.Contexts.Context>"
  syntax:
    content: public virtual bool Locked { get; set; }
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se o <xref href=&quot;System.Runtime.Remoting.Contexts.Context&quot;> </xref> implementar esta instância do <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> está bloqueado."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  id: NOT_SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: NOT_SUPPORTED
  nameWithType: SynchronizationAttribute.NOT_SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Indica que a classe a que este atributo é aplicado não é possível criar um contexto que tenha a sincronização. Este campo é constante."
  syntax:
    content: public const int NOT_SUPPORTED = 1;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  id: REQUIRED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: REQUIRED
  nameWithType: SynchronizationAttribute.REQUIRED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Indica que a classe a que este atributo é aplicado tem de ser criada num contexto que tenha a sincronização. Este campo é constante."
  syntax:
    content: public const int REQUIRED = 4;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  id: REQUIRES_NEW
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: REQUIRES_NEW
  nameWithType: SynchronizationAttribute.REQUIRES_NEW
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Indica que a classe a que este atributo é aplicado tem de ser criada num contexto com uma nova instância da propriedade sincronização cada vez. Este campo é constante."
  syntax:
    content: public const int REQUIRES_NEW = 8;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  id: SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SUPPORTED
  nameWithType: SynchronizationAttribute.SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Indica que a classe a que este atributo é aplicado não depende se a sincronização tem de contexto. Este campo é constante."
  syntax:
    content: public const int SUPPORTED = 2;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: System.Runtime.Remoting.Contexts.ContextAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute()
  nameWithType: SynchronizationAttribute.SynchronizationAttribute()
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute()
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Boolean)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute(Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute(Int32)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32,System.Boolean)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute(Int32,Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetClientContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetClientContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetPropertiesForNewContext(IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage
  parent: System.Runtime.Remoting.Activation
  isExternal: false
  name: IConstructionCallMessage
  nameWithType: IConstructionCallMessage
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetServerContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(IMessageSink)
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsContextOK(Context,IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
- uid: System.Runtime.Remoting.Contexts.Context
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsReEntrant
  nameWithType: SynchronizationAttribute.IsReEntrant
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: Locked
  nameWithType: SynchronizationAttribute.Locked
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: NOT_SUPPORTED
  nameWithType: SynchronizationAttribute.NOT_SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: REQUIRED
  nameWithType: SynchronizationAttribute.REQUIRED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: REQUIRES_NEW
  nameWithType: SynchronizationAttribute.REQUIRES_NEW
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SUPPORTED
  nameWithType: SynchronizationAttribute.SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute
  nameWithType: SynchronizationAttribute.SynchronizationAttribute
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetClientContextSink
  nameWithType: SynchronizationAttribute.GetClientContextSink
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetPropertiesForNewContext
  nameWithType: SynchronizationAttribute.GetPropertiesForNewContext
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetServerContextSink
  nameWithType: SynchronizationAttribute.GetServerContextSink
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsContextOK
  nameWithType: SynchronizationAttribute.IsContextOK
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsReEntrant
  nameWithType: SynchronizationAttribute.IsReEntrant
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: Locked
  nameWithType: SynchronizationAttribute.Locked
