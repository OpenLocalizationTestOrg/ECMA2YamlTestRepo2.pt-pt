### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeResolutionService
  id: ITypeResolutionService
  children:
  - System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)
  - System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)
  - System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)
  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)
  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)
  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)
  - System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)
  langs:
  - csharp
  name: ITypeResolutionService
  nameWithType: ITypeResolutionService
  fullName: System.ComponentModel.Design.ITypeResolutionService
  type: Interface
  summary: "Provides an interface to retrieve an assembly or type by name."
  remarks: "This service is used to load types at design time."
  example:
  - "The following example control provides an interface to call methods of the ITypeResolutionService from design mode.  \n  \n [!code-cs[ITypeResolutionServiceExample#1](~/add/codesnippet/csharp/t-system.componentmodel._143_1.cs)]\n [!code-cpp[ITypeResolutionServiceExample#1](~/add/codesnippet/cpp/t-system.componentmodel._143_1.cpp)]\n [!code-vb[ITypeResolutionServiceExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._143_1.vb)]"
  syntax:
    content: public interface ITypeResolutionService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)
  id: GetAssembly(System.Reflection.AssemblyName)
  parent: System.ComponentModel.Design.ITypeResolutionService
  langs:
  - csharp
  name: GetAssembly(AssemblyName)
  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the requested assembly."
  syntax:
    content: public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "The name of the assembly to retrieve."
    return:
      type: System.Reflection.Assembly
      description: "An instance of the requested assembly, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no assembly can be located."
  overload: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)
  id: GetAssembly(System.Reflection.AssemblyName,System.Boolean)
  parent: System.ComponentModel.Design.ITypeResolutionService
  langs:
  - csharp
  name: GetAssembly(AssemblyName,Boolean)
  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName,Boolean)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the requested assembly."
  syntax:
    content: public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name, bool throwOnError);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "The name of the assembly to retrieve."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, and this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the assembly cannot be located."
    return:
      type: System.Reflection.Assembly
      description: "An instance of the requested assembly, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no assembly can be located."
  overload: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)
  id: GetPathOfAssembly(System.Reflection.AssemblyName)
  parent: System.ComponentModel.Design.ITypeResolutionService
  langs:
  - csharp
  name: GetPathOfAssembly(AssemblyName)
  nameWithType: ITypeResolutionService.GetPathOfAssembly(AssemblyName)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(AssemblyName)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the path to the file from which the assembly was loaded."
  syntax:
    content: public string GetPathOfAssembly (System.Reflection.AssemblyName name);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "The name of the assembly."
    return:
      type: System.String
      description: "The path to the file from which the assembly was loaded."
  overload: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.ITypeResolutionService
  langs:
  - csharp
  name: GetType(String)
  nameWithType: ITypeResolutionService.GetType(String)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Loads a type with the specified name."
  syntax:
    content: public Type GetType (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies."
    return:
      type: System.Type
      description: "An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no type can be found."
  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.ComponentModel.Design.ITypeResolutionService
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: ITypeResolutionService.GetType(String,Boolean)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Loads a type with the specified name."
  remarks: "If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception."
  syntax:
    content: public Type GetType (string name, bool throwOnError);
    parameters:
    - id: name
      type: System.String
      description: "The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, and this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the assembly cannot be located."
    return:
      type: System.Type
      description: "An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no type can be found."
  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.ITypeResolutionService
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: ITypeResolutionService.GetType(String,Boolean,Boolean)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Loads a type with the specified name."
  remarks: "If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception."
  syntax:
    content: public Type GetType (string name, bool throwOnError, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, and this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the assembly cannot be located."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to ignore case when searching for types; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Type
      description: "An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no type can be found."
  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)
  id: ReferenceAssembly(System.Reflection.AssemblyName)
  parent: System.ComponentModel.Design.ITypeResolutionService
  langs:
  - csharp
  name: ReferenceAssembly(AssemblyName)
  nameWithType: ITypeResolutionService.ReferenceAssembly(AssemblyName)
  fullName: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(AssemblyName)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adds a reference to the specified assembly."
  remarks: "Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly."
  syntax:
    content: public void ReferenceAssembly (System.Reflection.AssemblyName name);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "An <xref:System.Reflection.AssemblyName> that indicates the assembly to reference."
  overload: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetAssembly(AssemblyName)
  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetAssembly(AssemblyName,Boolean)
  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName,Boolean)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetPathOfAssembly(AssemblyName)
  nameWithType: ITypeResolutionService.GetPathOfAssembly(AssemblyName)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(AssemblyName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetType(String)
  nameWithType: ITypeResolutionService.GetType(String)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: ITypeResolutionService.GetType(String,Boolean)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean)
- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: ITypeResolutionService.GetType(String,Boolean,Boolean)
  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean,Boolean)
- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: ReferenceAssembly(AssemblyName)
  nameWithType: ITypeResolutionService.ReferenceAssembly(AssemblyName)
  fullName: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(AssemblyName)
- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetAssembly
  nameWithType: ITypeResolutionService.GetAssembly
- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly*
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetPathOfAssembly
  nameWithType: ITypeResolutionService.GetPathOfAssembly
- uid: System.ComponentModel.Design.ITypeResolutionService.GetType*
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: GetType
  nameWithType: ITypeResolutionService.GetType
- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly*
  parent: System.ComponentModel.Design.ITypeResolutionService
  isExternal: false
  name: ReferenceAssembly
  nameWithType: ITypeResolutionService.ReferenceAssembly
