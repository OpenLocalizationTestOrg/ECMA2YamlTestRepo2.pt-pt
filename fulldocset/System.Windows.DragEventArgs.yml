### YamlMime:ManagedReference
items:
- uid: System.Windows.DragEventArgs
  id: DragEventArgs
  children:
  - System.Windows.DragEventArgs.AllowedEffects
  - System.Windows.DragEventArgs.Data
  - System.Windows.DragEventArgs.Effects
  - System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.DragEventArgs.KeyStates
  langs:
  - csharp
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.DragEventArgs
  type: Class
  summary: "Contém argumentos relevantes para todos os eventos de arrastar e largar (<xref:System.Windows.DragDrop.DragEnter>, <xref:System.Windows.DragDrop.DragLeave>, <xref:System.Windows.DragDrop.DragOver>, e <xref:System.Windows.DragDrop.Drop>).</xref:System.Windows.DragDrop.Drop> </xref:System.Windows.DragDrop.DragOver> </xref:System.Windows.DragDrop.DragLeave> </xref:System.Windows.DragDrop.DragEnter>"
  syntax:
    content: 'public sealed class DragEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.DragEventArgs.AllowedEffects
  id: AllowedEffects
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: System.Windows.DragEventArgs.AllowedEffects
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém um membro do <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> enumeração que especifica as operações são permitidas pelo originador do evento de arrastar."
  remarks: "Quando é iniciada uma operação de arrastar e largar ao chamar o <xref:System.Windows.DragDrop.DoDragDrop%2A>método, são especificadas operações permitidas com um membro com o <xref:System.Windows.DragDropEffects>enumeração.</xref:System.Windows.DragDropEffects> </xref:System.Windows.DragDrop.DoDragDrop%2A> Por exemplo, ao arrastar um ficheiro só de leitura a sessão do iniciador de arrastar deve indicar que o ficheiro pode ser copiado, mas não mover.  Antes de tentar efetuar uma operação num arrastadas dados, examine esta propriedade para se certificar de que a operação é permitida."
  syntax:
    content: public System.Windows.DragDropEffects AllowedEffects { get; }
    return:
      type: System.Windows.DragDropEffects
      description: "Um membro do <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> enumeração que especifica as operações são permitidas pelo originador do evento de arrastar."
  overload: System.Windows.DragEventArgs.AllowedEffects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.Data
  id: Data
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: System.Windows.DragEventArgs.Data
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém um objeto de dados que contém os dados associados o eventos de arrastar correspondente."
  syntax:
    content: public System.Windows.IDataObject Data { get; }
    return:
      type: System.Windows.IDataObject
      description: "Um objeto de dados que contém os dados associados o eventos de arrastar correspondente..."
  overload: System.Windows.DragEventArgs.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.Effects
  id: Effects
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: System.Windows.DragEventArgs.Effects
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém ou define a operação de arrastar e largar de destino."
  remarks: "Por predefinição, o efeito especificado nesta propriedade determina o cursor do rato para o destino de uma operação de arrastar e largar. Isto é útil para fornecer comentários para o utilizador sobre a operação que irá ocorrer quando o objeto correspondente é removido."
  syntax:
    content: public System.Windows.DragDropEffects Effects { get; set; }
    return:
      type: System.Windows.DragDropEffects
      description: "Um membro do <xref href=&quot;System.Windows.DragDropEffects&quot;> </xref> enumeração especificar a operação de arrastar e largar de destino."
  overload: System.Windows.DragEventArgs.Effects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: DragEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Devolve um ponto de largar é relativo para uma determinada <xref href=&quot;System.Windows.IInputElement&quot;> </xref>."
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "Um <xref href=&quot;System.Windows.IInputElement&quot;> </xref> objeto para o qual pretende obter um ponto de largar relativo."
    return:
      type: System.Windows.Point
      description: "Um ponto de largar relativo para o elemento especificado na <code> relativeTo </code>."
  overload: System.Windows.DragEventArgs.GetPosition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Raised when <code>relativeTo</code> is **null**."
  platform:
  - net462
- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "A adicionar."
    - id: genericTarget
      type: System.Object
      description: "A adicionar."
  overload: System.Windows.DragEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DragEventArgs.KeyStates
  id: KeyStates
  parent: System.Windows.DragEventArgs
  langs:
  - csharp
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
  fullName: System.Windows.DragEventArgs.KeyStates
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém uma enumeração de sinalizador que indica o estado atual da mudança, CTRL e chaves de ALT, bem como o estado dos botões de rato."
  remarks: "O efeito de uma operação de arrastar e largar pode ser ajustado dependendo do Estado de uma chave específica. Por exemplo, dados podem ser copiados ou movidos, dependendo se são premidas as teclas CTRL ou SHIFT durante a operação de arrastar e largar."
  syntax:
    content: public System.Windows.DragDropKeyStates KeyStates { get; }
    return:
      type: System.Windows.DragDropKeyStates
      description: "Um ou mais membros do <xref href=&quot;System.Windows.DragDropKeyStates&quot;> </xref> sinalizador enumeração."
  overload: System.Windows.DragEventArgs.KeyStates*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.DragEventArgs.AllowedEffects
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: System.Windows.DragEventArgs.AllowedEffects
- uid: System.Windows.DragDropEffects
  parent: System.Windows
  isExternal: false
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: System.Windows.DragDropEffects
- uid: System.Windows.DragEventArgs.Data
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: System.Windows.DragEventArgs.Data
- uid: System.Windows.IDataObject
  parent: System.Windows
  isExternal: false
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.IDataObject
- uid: System.Windows.DragEventArgs.Effects
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: System.Windows.DragEventArgs.Effects
- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: DragEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DragEventArgs.KeyStates
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
  fullName: System.Windows.DragEventArgs.KeyStates
- uid: System.Windows.DragDropKeyStates
  parent: System.Windows
  isExternal: false
  name: DragDropKeyStates
  nameWithType: DragDropKeyStates
  fullName: System.Windows.DragDropKeyStates
- uid: System.Windows.DragEventArgs.AllowedEffects*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
- uid: System.Windows.DragEventArgs.Data*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Data
  nameWithType: DragEventArgs.Data
- uid: System.Windows.DragEventArgs.Effects*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: Effects
  nameWithType: DragEventArgs.Effects
- uid: System.Windows.DragEventArgs.GetPosition*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: GetPosition
  nameWithType: DragEventArgs.GetPosition
- uid: System.Windows.DragEventArgs.InvokeEventHandler*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: DragEventArgs.InvokeEventHandler
- uid: System.Windows.DragEventArgs.KeyStates*
  parent: System.Windows.DragEventArgs
  isExternal: false
  name: KeyStates
  nameWithType: DragEventArgs.KeyStates
