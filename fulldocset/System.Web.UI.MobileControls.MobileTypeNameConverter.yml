### YamlMime:ManagedReference
items:
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter
  id: MobileTypeNameConverter
  children:
  - System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor
  - System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: MobileTypeNameConverter
  nameWithType: MobileTypeNameConverter
  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter
  type: Class
  summary: "Converte o valor de um objeto de um tipo de dados diferentes. Esta classe não pode ser herdada. Para obter informações sobre como desenvolver aplicações móveis do ASP.NET, consulte o [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) do Web site."
  remarks: "Mais genérico <xref:System.Configuration.TypeNameConverter>classe não procurar os nomes de tipos na assemblagem móvel.</xref:System.Configuration.TypeNameConverter> Por conseguinte, a classe de MobileTypeNameConverter foi criada para permitir a conversão de nome de tipo em espaços de nomes relacionadas com mobile."
  syntax:
    content: >-
      [System.Obsolete("The System.Web.Mobile.dll assembly has been deprecated and should no longer be used. For information about how to develop ASP.NET mobile applications, see http://go.microsoft.com/fwlink/?LinkId=157231.")]

      public sealed class MobileTypeNameConverter : System.Configuration.ConfigurationConverterBase
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.Configuration.ConfigurationConverterBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  platform:
  - net462
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  langs:
  - csharp
  name: MobileTypeNameConverter()
  nameWithType: MobileTypeNameConverter.MobileTypeNameConverter()
  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.MobileTypeNameConverter()
  type: Constructor
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.MobileControls.MobileTypeNameConverter&quot;> </xref> classe. Esta API está obsoleta. Para obter informações sobre como desenvolver aplicações móveis do ASP.NET, consulte o [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) do Web site."
  syntax:
    content: public MobileTypeNameConverter ();
    parameters: []
  overload: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Converte o objecto fornecido para o tipo deste conversor, utilizando as informações de contexto e cultura especificada. Esta API está obsoleta. Para obter informações sobre como desenvolver aplicações móveis do ASP.NET, consulte o [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) do Web site."
  remarks: "Esta implementação do ConvertFrom casts `data` como uma cadeia e, em seguida, chama o <xref:System.Type.GetType%2A>método no mesmo.</xref:System.Type.GetType%2A> O resultado, uma nova <xref:System.Type>, em seguida, é devolvido.</xref:System.Type> No entanto, se o resultado é `null`, será emitida uma exceção."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "O <xref:System.Globalization.CultureInfo>para utilizar como a cultura atual.</xref:System.Globalization.CultureInfo>"
    - id: data
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Calling <xref:System.Type.GetType*> on <code>data</code> returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Type.GetType*>"
  platform:
  - net462
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Converte o objeto do valor indicado para o tipo especificado, utilizando as informações de contexto e cultura especificada. Esta API está obsoleta. Para obter informações sobre como desenvolver aplicações móveis do ASP.NET, consulte o [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) do Web site."
  remarks: "Esta implementação do ConvertTo utiliza o `as` operador para converter o `value` para um <xref:System.Type>e, em seguida, devolve a <xref:System.Type.FullName%2A>propriedade desse objeto.</xref:System.Type.FullName%2A> </xref:System.Type>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type targetType);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é transmitida atual é assumida cultura."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    - id: targetType
      type: System.Type
      description: "O <xref:System.Type>para converter o `value` parâmetro.</xref:System.Type>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>Não é possível converter um tipo."
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: System.Configuration.ConfigurationConverterBase
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  isExternal: false
  name: MobileTypeNameConverter()
  nameWithType: MobileTypeNameConverter.MobileTypeNameConverter()
  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.MobileTypeNameConverter()
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.#ctor*
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  isExternal: false
  name: MobileTypeNameConverter
  nameWithType: MobileTypeNameConverter.MobileTypeNameConverter
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertFrom*
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: MobileTypeNameConverter.ConvertFrom
- uid: System.Web.UI.MobileControls.MobileTypeNameConverter.ConvertTo*
  parent: System.Web.UI.MobileControls.MobileTypeNameConverter
  isExternal: false
  name: ConvertTo
  nameWithType: MobileTypeNameConverter.ConvertTo
