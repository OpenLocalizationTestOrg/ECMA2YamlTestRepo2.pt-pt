### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Fornece uma representação gerida de um Win32 `OVERLAPPED` estrutura, incluindo métodos para transferir informações a partir de uma instância de Overlapped para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  remarks: "O <xref:System.Threading.Overlapped.Pack%2A>e <xref:System.Threading.Overlapped.UnsafePack%2A>métodos de transferem de informações de um objeto de Overlapped para um <xref:System.Threading.NativeOverlapped>e/s de ficheiros de estrutura que pode ser transmitida para funções da Win32 API para assíncrona.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> As <xref:System.Threading.Overlapped.Unpack%2A>informações do método transferências a partir de uma <xref:System.Threading.NativeOverlapped>estrutura para uma instância de classe Overlapped.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       As alterações às propriedades de um objeto de Overlapped afetam associado <xref:System.Threading.NativeOverlapped>estrutura e vice versa.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicializa uma instância nova, vazia do <xref href=&quot;System.Threading.Overlapped&quot;> </xref> classe."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Threading.Overlapped&quot;> </xref> posicionar de classe com o ficheiro especificado, o identificador de número inteiro de 32 bits para um evento que está marcado depois de concluída a operação de e/s e uma interface através do qual pode devolver resultados da operação."
  remarks: "Utilize a <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>propriedade para obter o identificador de qualquer evento de sincronização gerido que derive da <xref:System.Threading.WaitHandle>classe.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       A implementação de <xref:System.IAsyncResult>fornece informações de estado sobre a operação de e/s.</xref:System.IAsyncResult> Transmita-o para o construtor no `ar` parâmetro e recuperá-lo mais tarde com a <xref:System.Threading.Overlapped.AsyncResult%2A>propriedade.</xref:System.Threading.Overlapped.AsyncResult%2A> Se não for especificado um método de chamada de retorno para a <xref:System.Threading.Overlapped.Pack%2A>ou <xref:System.Threading.Overlapped.UnsafePack%2A>a chamada de retorno do método, pode obter o <xref:System.IAsyncResult>por unpacking o <xref:System.Threading.NativeOverlapped>estrutura recebe.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "A palavra baixa da posição do ficheiro no qual pretende iniciar a transferência."
    - id: offsetHi
      type: System.Int32
      description: "A palavra elevada da posição do ficheiro no qual pretende iniciar a transferência."
    - id: hEvent
      type: System.Int32
      description: "O identificador a um evento que está marcado depois de concluída a operação de e/s."
    - id: ar
      type: System.IAsyncResult
      description: "Um objeto que implementa o <xref:System.IAsyncResult>interface e fornece informações de estado sobre a operação de e/s.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Threading.Overlapped&quot;> </xref> posicionar de classe com o ficheiro especificado, o identificador de um evento que está marcado depois de concluída a operação de e/s e uma interface através do qual pode devolver resultados da operação."
  remarks: "Para obter o identificador de um objeto de sincronização gerido que derive o <xref:System.Threading.WaitHandle>classe, utilize o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>propriedade para obter um <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>de objeto e, em seguida, chame o <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>método.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       A implementação de <xref:System.IAsyncResult>fornece informações de estado sobre a operação de e/s.</xref:System.IAsyncResult> Transmita-o para o construtor no `ar` parâmetro e recuperá-lo mais tarde com a <xref:System.Threading.Overlapped.AsyncResult%2A>propriedade.</xref:System.Threading.Overlapped.AsyncResult%2A> Se não for especificado um método de chamada de retorno para a <xref:System.Threading.Overlapped.Pack%2A>ou <xref:System.Threading.Overlapped.UnsafePack%2A>a chamada de retorno do método, pode obter o <xref:System.IAsyncResult>por unpacking o <xref:System.Threading.NativeOverlapped>estrutura recebe.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "A palavra baixa da posição do ficheiro no qual pretende iniciar a transferência."
    - id: offsetHi
      type: System.Int32
      description: "A palavra elevada da posição do ficheiro no qual pretende iniciar a transferência."
    - id: hEvent
      type: System.IntPtr
      description: "O identificador a um evento que está marcado depois de concluída a operação de e/s."
    - id: ar
      type: System.IAsyncResult
      description: "Um objeto que implementa o <xref:System.IAsyncResult>interface e fornece informações de estado sobre a operação de e/s.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define o objeto que fornece informações de estado sobre a operação de e/s."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Um objeto que implementa o <xref:System.IAsyncResult>interface.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define o identificador de número inteiro de 32 bits como um evento de sincronização que está marcado quando a operação de e/s foi concluída."
  remarks: "Esta propriedade não pode ser utilizada em plataformas de 64 bits. Utilize o <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>propriedade em vez disso.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       Utilize a <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>propriedade para obter o identificador de qualquer evento de sincronização gerido que derive da <xref:System.Threading.WaitHandle>classe.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que representa o identificador do evento de sincronização.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define o identificador para o evento de sincronização que está marcado depois de concluída a operação de e/s."
  remarks: "Para obter o identificador de um objeto de sincronização gerido que derive o <xref:System.Threading.WaitHandle>classe, utilize o <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>propriedade para obter um <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>de objeto e, em seguida, chame o <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>método.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que representa o identificador do evento.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Liberta memória não gerida associada uma estrutura sobreposta nativa atribuída pelo <xref:System.Threading.Overlapped.Pack*>método.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "Tem de chamar o método Free exatamente uma vez em cada <xref:System.Threading.NativeOverlapped>ponteiro receber o <xref:System.Threading.Overlapped.Pack%2A>método.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Se não a chamar o método Free, será de fuga de memória. Se chamar o método Free mais do que uma vez, a memória irá estar danificada."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Um ponteiro para o <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura para ser libertado."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define a palavra de ordem de elevado da posição de ficheiro no qual pretende iniciar a transferência. A posição do ficheiro é um deslocamento de byte desde o início do ficheiro."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>representando o word elevada da posição do ficheiro.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém ou define a palavra de ordem de baixo da posição de ficheiro no qual pretende iniciar a transferência. A posição do ficheiro é um deslocamento de byte desde o início do ficheiro."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>representando o word baixa da posição do ficheiro.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes de instância atual para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura, especificando o delegado para ser invocado quando a operação de e/s assíncrona for concluída."
  remarks: "O apontador não gerido devolvido por este método pode ser transferido para o sistema operativo em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixo na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > O chamador é responsável por afixação a memória intermédia. Se o domínio de aplicação for descarregado, no entanto, o identificador da memória intermédia afixado é destruído e a memória intermédia é lançada, deixando a operação de e/s ao escrever para o endereço freed. Por este motivo, é melhor utilizar o <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>sobrecarga de método em que o tempo de execução pins a memória intermédia.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de chamada de retorno invocado quando a operação de e/s assíncrona for concluída."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um apontador não gerido para uma <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já foi packed."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes de instância atual para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura, especificando um delegado que é invocado quando a operação de e/s assíncrona for concluída e um objeto gerido que funciona como uma memória intermédia."
  remarks: "O apontador não gerido devolvido por este método pode ser transferido para o sistema operativo em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixo na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       A memória intermédia ou memórias intermédias especificadas no `userData` tem de ser as mesmas transmitido para a função de sistema operativo não gerida que efetua a e/s assíncrona.      > [!NOTE] > O tempo de execução pins a memória intermédia ou memórias intermédias especificadas no `userData` durante a operação de e/s. Se o domínio de aplicação for descarregado, o tempo de execução mantém a memória afixada até concluir a operação de e/s."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de chamada de retorno invocado quando a operação de e/s assíncrona for concluída."
    - id: userData
      type: System.Object
      description: "Um objeto ou a matriz de objetos que representa a memória intermédia de entrada ou saída para a operação. Cada objeto representa uma memória intermédia, por exemplo, uma matriz de bytes."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um apontador não gerido para uma <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já foi packed."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Descompacta não gerido especificado <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura para uma gerido <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objeto."
  remarks: "O <xref:System.Threading.NativeOverlapped>estrutura não é libertada da memória física enquanto tem de chamar o <xref:System.Threading.Overlapped.Free%2A>método.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Um apontador não gerido para uma <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
    return:
      type: System.Threading.Overlapped
      description: "Um <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objeto que contém as informações descompactado na estrutura nativa de."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes de instância atual para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura especificando o delegado para invocar quando a operação de e/s assíncrona for concluída. Não é propagar a pilha de chamada."
  remarks: "O apontador não gerido devolvido por este método pode ser transferido para o sistema operativo em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixo na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       O chamador é responsável por afixação a memória intermédia. Se o domínio de aplicação for descarregado, no entanto, o identificador da memória intermédia afixado é destruído e a memória intermédia é lançada, deixando a operação de e/s ao escrever para o endereço freed. Por este motivo, é melhor utilizar o <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>sobrecarga de método em que o tempo de execução pins a memória intermédia.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Using a <xref:System.Threading.Overlapped.UnsafePack%2A>método inadvertidamente foi possível abrir um negro de segurança.</xref:System.Threading.Overlapped.UnsafePack%2A> O código de bases de segurança de acesso que verifica a respetiva permissão nas permissões de todos os chamadores na pilha. O <xref:System.Threading.Overlapped.UnsafePack%2A>método não propagar a pilha de chamada.</xref:System.Threading.Overlapped.UnsafePack%2A> Código malicioso poderão exploram esta opção para evitar verificações de permissão."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de chamada de retorno invocado quando a operação de e/s assíncrona for concluída."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um apontador não gerido para uma <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já foi packed."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Pacotes de instância atual para um <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura, especificando o delegado para invocar quando a operação de e/s assíncrona foi concluída e o objeto que funciona como uma memória intermédia. Não é propagar a pilha de chamada."
  remarks: "O apontador não gerido devolvido por este método pode ser transferido para o sistema operativo em operações de e/s sobrepostas. O <xref:System.Threading.NativeOverlapped>estrutura é fixo na memória física até <xref:System.Threading.Overlapped.Unpack%2A>é chamado.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       A memória intermédia ou memórias intermédias especificadas no `userData` tem de ser as mesmas transmitido para a função de sistema operativo não gerida que efetua a e/s assíncrona.       O tempo de execução pins a memória intermédia ou memórias intermédias especificadas no`userData` durante a operação de e/s. Se o domínio de aplicação for descarregado, o tempo de execução mantém a memória afixada até concluir a operação de e/s.      > [!CAUTION] > Utilizando o UnsafePack método foi inadvertidamente abrir um negro de segurança. O código de bases de segurança de acesso que verifica a respetiva permissão nas permissões de todos os chamadores na pilha. O método UnsafePack não propagar a pilha de chamada. Código malicioso poderão exploram esta opção para evitar verificações de permissão."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Um <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegado que representa o método de chamada de retorno invocado quando a operação de e/s assíncrona for concluída."
    - id: userData
      type: System.Object
      description: "Um objeto ou a matriz de objetos que representa a memória intermédia de entrada ou saída para a operação. Cada objeto representa uma memória intermédia, por exemplo, uma matriz de bytes."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Um apontador não gerido para uma <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> estrutura."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Threading.Overlapped&quot;> </xref> já é packed."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
