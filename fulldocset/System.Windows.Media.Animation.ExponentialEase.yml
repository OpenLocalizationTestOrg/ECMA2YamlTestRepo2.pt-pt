### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.ExponentialEase
  id: ExponentialEase
  children:
  - System.Windows.Media.Animation.ExponentialEase.#ctor
  - System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore
  - System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)
  - System.Windows.Media.Animation.ExponentialEase.Exponent
  - System.Windows.Media.Animation.ExponentialEase.ExponentProperty
  langs:
  - csharp
  name: ExponentialEase
  nameWithType: ExponentialEase
  fullName: System.Windows.Media.Animation.ExponentialEase
  type: Class
  summary: "Represents an easing function that creates an animation that accelerates and/or decelerates using an exponential formula."
  remarks: "You can control whether the animation accelerates, decelerates or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> where *f*(*t*) represents the animation progress and *t* represents time.       ![ExponentialEase graphs of different easingmodes.](~/add/media/exponentialease-graph.png &quot;ExponentialEase graphs of different easingmodes.&quot;)       The formula used for this function is the following.       ![Mathematical formula for ExponentialEase](~/add/media/exponentialease-formula.png &quot;Mathematical formula for ExponentialEase&quot;)       Using the formula above, the following graph illustrates the effect of several different values for the <xref:System.Windows.Media.Animation.ExponentialEase.Exponent%2A> property:       ![Exponential Ease for three Exponent values](~/add/media/expo-easeproperty.png &quot;Exponential Ease for three Exponent values&quot;)       There are several other easing functions besides ExponentialEase which you can explore using the following Silverlight sample.       [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)       In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.      <a name=&quot;xamlObjectElementUsage_ExponentialEase&quot;></a>    ## XAML Object Element Usage      ```   <ExponentialEase .../>   ```"
  example:
  - "The following example applies a ExponentialEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \n  \n [!code-xml[ExponentialEase#ExponentialEase](~/add/codesnippet/xaml/exponentialease/window1.xaml#exponentialease)]\n [!code-xml[ExponentialEase#ExponentialEase](~/add/codesnippet/xaml/t-system.windows.media.a_12_1.xaml)]"
  syntax:
    content: 'public class ExponentialEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.ExponentialEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.ExponentialEase
  langs:
  - csharp
  name: ExponentialEase()
  nameWithType: ExponentialEase.ExponentialEase()
  fullName: System.Windows.Media.Animation.ExponentialEase.ExponentialEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.Animation.ExponentialEase&quot;></xref> class."
  syntax:
    content: public ExponentialEase ();
    parameters: []
  overload: System.Windows.Media.Animation.ExponentialEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.ExponentialEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ExponentialEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Creates a new instance of the <xref href=&quot;System.Windows.Freezable&quot;></xref> derived class. When creating a derived class, you must override this method."
  remarks: "Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object."
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "The new instance."
  overload: System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.ExponentialEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: ExponentialEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.ExponentialEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Provides the logic portion of the easing function that you can override to produce the <xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;></xref> mode of the custom easing function."
  remarks: "This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.       You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode> and <xref:System.Windows.Media.Animation.EasingMode> cases."
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "Normalized time (progress) of the animation."
    return:
      type: System.Double
      description: "A double that represents the transformed progress."
  overload: System.Windows.Media.Animation.ExponentialEase.EaseInCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ExponentialEase.Exponent
  id: Exponent
  parent: System.Windows.Media.Animation.ExponentialEase
  langs:
  - csharp
  name: Exponent
  nameWithType: ExponentialEase.Exponent
  fullName: System.Windows.Media.Animation.ExponentialEase.Exponent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Gets or sets the exponent used to determine the interpolation of the animation."
  remarks: "[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ExponentialEase.ExponentProperty>       The formula used by <xref:System.Windows.Media.Animation.ExponentialEase> is the following.       ![Mathematical formula for ExponentialEase](~/add/media/exponentialease-formula.png &quot;Mathematical formula for ExponentialEase&quot;)       Using the previous formula, the following graph illustrates the effect of several different values for the Exponent property:       ![Exponential Ease for three Exponent values](~/add/media/expo-easeproperty.png &quot;Exponential Ease for three Exponent values&quot;)      <a name=&quot;xamlAttributeUsage_Exponent&quot;></a>    ## XAML Attribute Usage      ```   <object Exponent=&quot;double&quot; .../>   ```"
  syntax:
    content: public double Exponent { get; set; }
    return:
      type: System.Double
      description: "The exponent used to determine the interpolation of the animation. The default is 2."
  overload: System.Windows.Media.Animation.ExponentialEase.Exponent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ExponentialEase.ExponentProperty
  id: ExponentProperty
  parent: System.Windows.Media.Animation.ExponentialEase
  langs:
  - csharp
  name: ExponentProperty
  nameWithType: ExponentialEase.ExponentProperty
  fullName: System.Windows.Media.Animation.ExponentialEase.ExponentProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Identifies the <xref:System.Windows.Media.Animation.ExponentialEase.Exponent*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ExponentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.ExponentialEase.#ctor
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: ExponentialEase()
  nameWithType: ExponentialEase.ExponentialEase()
  fullName: System.Windows.Media.Animation.ExponentialEase.ExponentialEase()
- uid: System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ExponentialEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: ExponentialEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.ExponentialEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.ExponentialEase.Exponent
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: Exponent
  nameWithType: ExponentialEase.Exponent
  fullName: System.Windows.Media.Animation.ExponentialEase.Exponent
- uid: System.Windows.Media.Animation.ExponentialEase.ExponentProperty
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: ExponentProperty
  nameWithType: ExponentialEase.ExponentProperty
  fullName: System.Windows.Media.Animation.ExponentialEase.ExponentProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.ExponentialEase.#ctor*
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: ExponentialEase
  nameWithType: ExponentialEase.ExponentialEase
- uid: System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ExponentialEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.ExponentialEase.EaseInCore*
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: EaseInCore
  nameWithType: ExponentialEase.EaseInCore
- uid: System.Windows.Media.Animation.ExponentialEase.Exponent*
  parent: System.Windows.Media.Animation.ExponentialEase
  isExternal: false
  name: Exponent
  nameWithType: ExponentialEase.Exponent
