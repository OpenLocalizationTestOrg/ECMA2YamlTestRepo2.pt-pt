### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HashAlgorithmName
  id: HashAlgorithmName
  children:
  - System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  - System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.GetHashCode
  - System.Security.Cryptography.HashAlgorithmName.MD5
  - System.Security.Cryptography.HashAlgorithmName.Name
  - System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.HashAlgorithmName.SHA1
  - System.Security.Cryptography.HashAlgorithmName.SHA256
  - System.Security.Cryptography.HashAlgorithmName.SHA384
  - System.Security.Cryptography.HashAlgorithmName.SHA512
  - System.Security.Cryptography.HashAlgorithmName.ToString
  langs:
  - csharp
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
  type: Struct
  summary: "Especifica o nome de um algoritmo de hash criptográfico."
  remarks: "A estrutura de HashAlgorithmName inclui algumas estáticas propriedades que devolvem os nomes de algoritmo de hash predefinido, bem como um <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A>propriedade que pode representar um nome de algoritmo hash personalizadas como uma cadeia de tipo seguro.</xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> Os nomes de algoritmo de hash diferenciam maiúsculas de minúsculas.       Algoritmos assimétricos implementados através da API de CNG (próxima geração criptográfica) da Microsoft interpretar o valor de cadeia subjacente como um [identificador de algoritmo CNG](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).       Algoritmos assimétricos implementados com outras tecnologias:-tem reconhecer, pelo menos, &quot;MD5&quot;, &quot;SHA1&quot;, &quot;SHA256&quot;, &quot;SHA384&quot; e &quot;SHA512&quot;.      -Deve reconhecer adicionais CNG identificadores para qualquer algoritmos de hash adicionais que suportam."
  syntax:
    content: 'public struct HashAlgorithmName : IEquatable<System.Security.Cryptography.HashAlgorithmName>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Security.Cryptography.HashAlgorithmName>
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: HashAlgorithmName(String)
  nameWithType: HashAlgorithmName.HashAlgorithmName(String)
  fullName: System.Security.Cryptography.HashAlgorithmName.HashAlgorithmName(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> estrutura com um nome personalizado."
  remarks: "O construtor não efetua nenhuma validação `name`."
  syntax:
    content: public HashAlgorithmName (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do algoritmo hash personalizado."
  overload: System.Security.Cryptography.HashAlgorithmName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: HashAlgorithmName.Equals(Object)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Devolve um valor que indica se a instância atual e um objeto especificado são iguais."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto comparar com a instância atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> é um <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> objeto e a respetiva <xref:System.Security.Cryptography.HashAlgorithmName.Name*>propriedade é igual da instância atual.</xref:System.Security.Cryptography.HashAlgorithmName.Name*> A comparação é ordinal e maiúsculas e minúsculas."
  overload: System.Security.Cryptography.HashAlgorithmName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  id: Equals(System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: Equals(HashAlgorithmName)
  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Devolve um valor que indica se duas <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> instâncias são iguais."
  syntax:
    content: public bool Equals (System.Security.Cryptography.HashAlgorithmName other);
    parameters:
    - id: other
      type: System.Security.Cryptography.HashAlgorithmName
      description: "O objeto comparar com a instância atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Security.Cryptography.HashAlgorithmName.Name*>propriedade <code> other </code> é igual da instância atual.</xref:System.Security.Cryptography.HashAlgorithmName.Name*> A comparação é ordinal e maiúsculas e minúsculas."
  overload: System.Security.Cryptography.HashAlgorithmName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: HashAlgorithmName.GetHashCode()
  fullName: System.Security.Cryptography.HashAlgorithmName.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Devolve o código hash para a instância atual."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash para a instância atual, ou 0 se não <code> name </code> foi fornecido um valor para o <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> construtor."
  overload: System.Security.Cryptography.HashAlgorithmName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.MD5
  id: MD5
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: MD5
  nameWithType: HashAlgorithmName.MD5
  fullName: System.Security.Cryptography.HashAlgorithmName.MD5
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um nome do algoritmo hash que representa &quot;MD5&quot;."
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName MD5 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Um nome do algoritmo hash que representa &quot;MD5&quot;."
  overload: System.Security.Cryptography.HashAlgorithmName.MD5*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.Name
  id: Name
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: Name
  nameWithType: HashAlgorithmName.Name
  fullName: System.Security.Cryptography.HashAlgorithmName.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém a representação de cadeia subjacente do nome do algoritmo."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A representação de cadeia do nome do algoritmo, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou &lt;xref:System.String?displayProperty=fullName&gt; esteja disponível nenhum algoritmo de hash."
  overload: System.Security.Cryptography.HashAlgorithmName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  id: op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: op_Equality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Determina se dois especificadas <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> objetos são iguais."
  remarks: "O método de igualdade define a operação do operador de igualdade para <xref:System.Security.Cryptography.HashAlgorithmName>valores.</xref:System.Security.Cryptography.HashAlgorithmName>"
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);
    parameters:
    - id: left
      type: System.Security.Cryptography.HashAlgorithmName
      description: "O objeto primeiro a comparar."
    - id: right
      type: System.Security.Cryptography.HashAlgorithmName
      description: "O objecto de segundo a comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both <code>left</code> and <code>right</code> have the same <xref:System.Security.Cryptography.HashAlgorithmName.Name*> value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Security.Cryptography.HashAlgorithmName.Name*>"
  overload: System.Security.Cryptography.HashAlgorithmName.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  id: op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: op_Inequality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Determina se dois especificadas <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> objetos não são iguais."
  remarks: "O método Inequality define a operação do operador inequality para <xref:System.Security.Cryptography.HashAlgorithmName>valores.</xref:System.Security.Cryptography.HashAlgorithmName>"
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);
    parameters:
    - id: left
      type: System.Security.Cryptography.HashAlgorithmName
      description: "O objeto primeiro a comparar."
    - id: right
      type: System.Security.Cryptography.HashAlgorithmName
      description: "O objecto de segundo a comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se ambos os <code> left </code> e <code> right </code> não têm o mesmo <xref:System.Security.Cryptography.HashAlgorithmName.Name*>valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.HashAlgorithmName.Name*>"
  overload: System.Security.Cryptography.HashAlgorithmName.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA1
  id: SHA1
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA1
  nameWithType: HashAlgorithmName.SHA1
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA1
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um nome do algoritmo hash que representa &quot;SHA1&quot;."
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA1 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Um nome do algoritmo hash que representa &quot;SHA1&quot;."
  overload: System.Security.Cryptography.HashAlgorithmName.SHA1*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA256
  id: SHA256
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA256
  nameWithType: HashAlgorithmName.SHA256
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA256
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um nome do algoritmo hash que representa &quot;SHA256&quot;."
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA256 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Um nome do algoritmo hash que representa &quot;SHA256&quot;."
  overload: System.Security.Cryptography.HashAlgorithmName.SHA256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA384
  id: SHA384
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA384
  nameWithType: HashAlgorithmName.SHA384
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA384
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um nome do algoritmo hash que representa &quot;SHA384&quot;."
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA384 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Um nome do algoritmo hash que representa &quot;SHA384&quot;."
  overload: System.Security.Cryptography.HashAlgorithmName.SHA384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.SHA512
  id: SHA512
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: SHA512
  nameWithType: HashAlgorithmName.SHA512
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA512
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um nome do algoritmo hash que representa &quot;SHA512&quot;."
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithmName SHA512 { get; }
    return:
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Um nome do algoritmo hash que representa &quot;SHA512&quot;."
  overload: System.Security.Cryptography.HashAlgorithmName.SHA512*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HashAlgorithmName.ToString
  id: ToString
  parent: System.Security.Cryptography.HashAlgorithmName
  langs:
  - csharp
  name: ToString()
  nameWithType: HashAlgorithmName.ToString()
  fullName: System.Security.Cryptography.HashAlgorithmName.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Devolve a representação de cadeia de atual <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> instância."
  remarks: "O método ToString devolve o <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A>propriedade, se foi atribuído.</xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> Caso contrário, devolve <xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A representação de cadeia de atual <xref href=&quot;System.Security.Cryptography.HashAlgorithmName&quot;> </xref> instância."
  overload: System.Security.Cryptography.HashAlgorithmName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: HashAlgorithmName(String)
  nameWithType: HashAlgorithmName.HashAlgorithmName(String)
  fullName: System.Security.Cryptography.HashAlgorithmName.HashAlgorithmName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Equals(Object)
  nameWithType: HashAlgorithmName.Equals(Object)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Equals(HashAlgorithmName)
  nameWithType: HashAlgorithmName.Equals(HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.Equals(HashAlgorithmName)
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: GetHashCode()
  nameWithType: HashAlgorithmName.GetHashCode()
  fullName: System.Security.Cryptography.HashAlgorithmName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithmName.MD5
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: MD5
  nameWithType: HashAlgorithmName.MD5
  fullName: System.Security.Cryptography.HashAlgorithmName.MD5
- uid: System.Security.Cryptography.HashAlgorithmName.Name
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Name
  nameWithType: HashAlgorithmName.Name
  fullName: System.Security.Cryptography.HashAlgorithmName.Name
- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Equality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Equality(HashAlgorithmName,HashAlgorithmName)
- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Inequality(HashAlgorithmName,HashAlgorithmName)
  nameWithType: HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
  fullName: System.Security.Cryptography.HashAlgorithmName.op_Inequality(HashAlgorithmName,HashAlgorithmName)
- uid: System.Security.Cryptography.HashAlgorithmName.SHA1
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA1
  nameWithType: HashAlgorithmName.SHA1
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA1
- uid: System.Security.Cryptography.HashAlgorithmName.SHA256
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA256
  nameWithType: HashAlgorithmName.SHA256
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA256
- uid: System.Security.Cryptography.HashAlgorithmName.SHA384
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA384
  nameWithType: HashAlgorithmName.SHA384
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA384
- uid: System.Security.Cryptography.HashAlgorithmName.SHA512
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA512
  nameWithType: HashAlgorithmName.SHA512
  fullName: System.Security.Cryptography.HashAlgorithmName.SHA512
- uid: System.Security.Cryptography.HashAlgorithmName.ToString
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: ToString()
  nameWithType: HashAlgorithmName.ToString()
  fullName: System.Security.Cryptography.HashAlgorithmName.ToString()
- uid: System.Security.Cryptography.HashAlgorithmName.#ctor*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName.HashAlgorithmName
- uid: System.Security.Cryptography.HashAlgorithmName.Equals*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Equals
  nameWithType: HashAlgorithmName.Equals
- uid: System.Security.Cryptography.HashAlgorithmName.GetHashCode*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: GetHashCode
  nameWithType: HashAlgorithmName.GetHashCode
- uid: System.Security.Cryptography.HashAlgorithmName.MD5*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: MD5
  nameWithType: HashAlgorithmName.MD5
- uid: System.Security.Cryptography.HashAlgorithmName.Name*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: Name
  nameWithType: HashAlgorithmName.Name
- uid: System.Security.Cryptography.HashAlgorithmName.op_Equality*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Equality
  nameWithType: HashAlgorithmName.op_Equality
- uid: System.Security.Cryptography.HashAlgorithmName.op_Inequality*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: op_Inequality
  nameWithType: HashAlgorithmName.op_Inequality
- uid: System.Security.Cryptography.HashAlgorithmName.SHA1*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA1
  nameWithType: HashAlgorithmName.SHA1
- uid: System.Security.Cryptography.HashAlgorithmName.SHA256*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA256
  nameWithType: HashAlgorithmName.SHA256
- uid: System.Security.Cryptography.HashAlgorithmName.SHA384*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA384
  nameWithType: HashAlgorithmName.SHA384
- uid: System.Security.Cryptography.HashAlgorithmName.SHA512*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: SHA512
  nameWithType: HashAlgorithmName.SHA512
- uid: System.Security.Cryptography.HashAlgorithmName.ToString*
  parent: System.Security.Cryptography.HashAlgorithmName
  isExternal: false
  name: ToString
  nameWithType: HashAlgorithmName.ToString
