### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ImageField
  id: ImageField
  children:
  - System.Web.UI.WebControls.ImageField.#ctor
  - System.Web.UI.WebControls.ImageField.AlternateText
  - System.Web.UI.WebControls.ImageField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.ImageField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.ImageField.CreateField
  - System.Web.UI.WebControls.ImageField.DataAlternateTextField
  - System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString
  - System.Web.UI.WebControls.ImageField.DataImageUrlField
  - System.Web.UI.WebControls.ImageField.DataImageUrlFormatString
  - System.Web.UI.WebControls.ImageField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.ImageField.FormatImageUrlValue(System.Object)
  - System.Web.UI.WebControls.ImageField.GetDesignTimeValue
  - System.Web.UI.WebControls.ImageField.GetFormattedAlternateText(System.Web.UI.Control)
  - System.Web.UI.WebControls.ImageField.GetValue(System.Web.UI.Control,System.String,System.ComponentModel.PropertyDescriptor@)
  - System.Web.UI.WebControls.ImageField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.ImageField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.ImageField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.ImageField.NullDisplayText
  - System.Web.UI.WebControls.ImageField.NullImageUrl
  - System.Web.UI.WebControls.ImageField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.ImageField.ReadOnly
  - System.Web.UI.WebControls.ImageField.ThisExpression
  - System.Web.UI.WebControls.ImageField.ValidateSupportsCallback
  langs:
  - csharp
  name: ImageField
  nameWithType: ImageField
  fullName: System.Web.UI.WebControls.ImageField
  type: Class
  summary: "Represents a field that is displayed as an image in a data-bound control."
  remarks: "The ImageField class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display an image for each record displayed. The ImageField object is displayed differently depending on the data-bound control in which it is used. For example, the <xref:System.Web.UI.WebControls.GridView> control displays an ImageField object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.       To display images, you must bind an ImageField object to a field from a data source that contains the URL of an image. This is accomplished by setting the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property. The URL value can be formatted by using the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlFormatString%2A> property. Each image can also have alternate text associated with it. This text is displayed when an image cannot be loaded, or is unavailable. Browsers that support the ToolTips feature also display this text as a ToolTip. You can specify the alternate text for a displayed image by using one of the following methods:      -   Use the <xref:System.Web.UI.WebControls.ImageField.AlternateText%2A> property to specify alternate text that applies to all images.      -   Use the <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextField%2A> property to bind a field from a data source to the <xref:System.Web.UI.WebControls.Image.AlternateText%2A> property of each image. This allows you to have different alternate text for each image displayed. When binding data, you can optionally format the alternate text by using the <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString%2A> property.       When the URL value for an image is `null`, an image cannot be displayed. You can display an alternate image for `null` field values by setting the <xref:System.Web.UI.WebControls.ImageField.NullImageUrl%2A> property. Instead of an alternate image, you can display alternate text by setting the <xref:System.Web.UI.WebControls.ImageField.NullDisplayText%2A> property.       By default, all declared fields are displayed in a data-bound control. You can hide an ImageField object in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`.       You can customize the header and footer sections of an ImageField object. To display a caption in the header or footer section, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively. To display an image in the header section instead of text, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property. The header section can be hidden in the ImageField object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`.      > [!NOTE] >  Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control. These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual data-bound field. To show or hide the entire header section of a data-bound control, use the control&quot;s `ShowHeader` property (if available).       You also can customize the appearance of the ImageField object (font color, background color, and so on) by setting the style properties for the different parts of the field. The following table lists the different style properties.      |Style property|Description|   |--------------------|-----------------|   |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|The style settings for the child Web server controls of the ImageField object.|   |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|The style settings for the footer section of the ImageField object.|   |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|The style settings for the header section of the ImageField object.|   |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|The style settings for the data items in the ImageField object.|"
  example:
  - "The following example demonstrates how to use an ImageField object in a <xref:System.Web.UI.WebControls.GridView> control to display an image.  \n  \n [!code-vb[ImageField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_116_1.aspx)]\n [!code-cs[ImageField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_116_1.aspx)]"
  syntax:
    content: 'public class ImageField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: ImageField()
  nameWithType: ImageField.ImageField()
  fullName: System.Web.UI.WebControls.ImageField.ImageField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.ImageField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.       To dynamically add an <xref:System.Web.UI.WebControls.ImageField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.ImageField> object, set its properties, and then add it to the data-bound control&quot;s field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.ImageField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.      > [!NOTE] >  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate. Statically declaring all your fields reduces the size of the view state for the parent data-bound control."
  example:
  - "The following example demonstrates how to use this constructor to dynamically add an <xref:System.Web.UI.WebControls.ImageField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ImageFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_139_1.aspx)]\n [!code-cs[ImageFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_139_1.aspx)]"
  syntax:
    content: public ImageField ();
    parameters: []
  overload: System.Web.UI.WebControls.ImageField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.AlternateText
  id: AlternateText
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: AlternateText
  nameWithType: ImageField.AlternateText
  fullName: System.Web.UI.WebControls.ImageField.AlternateText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the alternate text displayed for an image in the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object."
  remarks: "Use the AlternateText property to specify the alternate text for the images displayed in an <xref:System.Web.UI.WebControls.ImageField> object. The alternate text is displayed when an image cannot be loaded or is unavailable. Browsers that support the ToolTips feature also display this text as a ToolTip.      > [!NOTE] >  When this property is set, all images displayed in an <xref:System.Web.UI.WebControls.ImageField> object share the same alternate text. As an alternative, you can bind the alternate text to a field in a data source by setting the <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextField%2A> property instead of this property. This allows you to have different alternate text for each image displayed. If both the AlternateText and <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextField%2A> properties are set, the <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextField%2A> property takes precedence.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the AlternateText property to specify the alternate text for all images displayed in an <xref:System.Web.UI.WebControls.ImageField> object.  \n  \n [!code-vb[ImageField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1091_1.aspx)]\n [!code-cs[ImageField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1091_1.aspx)]"
  syntax:
    content: public virtual string AlternateText { get; set; }
    return:
      type: System.String
      description: "The alternate text for an image displayed in the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.ImageField.AlternateText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: ImageField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.ImageField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether empty string (&quot;&quot;) values are converted to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when the field values are returned from the data source."
  remarks: "Sometimes the user may enter an empty string for a field value when updating or inserting records. Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the data source      > [!NOTE] >  The <xref:System.Web.UI.WebControls.ImageField> class displays `null` as empty strings by default. To display a different value, set the <xref:System.Web.UI.WebControls.ImageField.NullDisplayText%2A> property."
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref:System.String.Empty> values should be converted to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: ImageField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ImageField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies the properties of the current <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object to the specified object."
  remarks: "The CopyProperties method is called by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.UI.WebControls.ImageField> object to another."
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>-derived object that receives the copy."
  overload: System.Web.UI.WebControls.ImageField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: CreateField()
  nameWithType: ImageField.CreateField()
  fullName: System.Web.UI.WebControls.ImageField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns a new instance of the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> class."
  remarks: "The CreateField method is called by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create a new instance of the <xref:System.Web.UI.WebControls.ImageField> class."
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "A new instance of the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> class."
  overload: System.Web.UI.WebControls.ImageField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.DataAlternateTextField
  id: DataAlternateTextField
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: DataAlternateTextField
  nameWithType: ImageField.DataAlternateTextField
  fullName: System.Web.UI.WebControls.ImageField.DataAlternateTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the name of the field from the data source that contains the values to bind to the <xref:System.Web.UI.WebControls.Image.AlternateText*> property of each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object."
  remarks: "Use the DataAlternateTextField property to specify the name of the filed from the data source that contains the values to bind to the <xref:System.Web.UI.WebControls.Image.AlternateText%2A> property of each image in an <xref:System.Web.UI.WebControls.ImageField> object. The enables you to have different alternate text for each image displayed. The alternate text is displayed when an image cannot be loaded or is unavailable. Browsers that support the ToolTips feature also display this text as a ToolTip.      > [!NOTE] >  You can specify alternate text that applies to all images by setting the <xref:System.Web.UI.WebControls.ImageField.AlternateText%2A> property instead of this property. If both the <xref:System.Web.UI.WebControls.ImageField.AlternateText%2A> and DataAlternateTextField properties are set, the DataAlternateTextField field takes precedence."
  example:
  - "The following example code demonstrates how to use the DataAlternateTextField property to specify the name of the field from the data source that contains the values to bind to the <xref:System.Web.UI.WebControls.Image.AlternateText%2A> property of each image in an <xref:System.Web.UI.WebControls.ImageField> object.  \n  \n [!code-vb[ImageFieldAlternateTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1106_1.aspx)]\n [!code-cs[ImageFieldAlternateTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1106_1.aspx)]"
  syntax:
    content: public virtual string DataAlternateTextField { get; set; }
    return:
      type: System.String
      description: "The name of the field to bind the <xref:System.Web.UI.WebControls.Image.AlternateText*> property of each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object."
  overload: System.Web.UI.WebControls.ImageField.DataAlternateTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString
  id: DataAlternateTextFormatString
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: DataAlternateTextFormatString
  nameWithType: ImageField.DataAlternateTextFormatString
  fullName: System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the string that specifies the format in which the alternate text for each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object is rendered."
  remarks: "Use the DataAlternateTextFormatString property to specify a custom format for the alternate text values of the images displayed in an <xref:System.Web.UI.WebControls.ImageField> object.      > [!NOTE] >  The format string is applied only when the <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextField%2A> property is set. It is not applied when the <xref:System.Web.UI.WebControls.ImageField.AlternateText%2A> property is set.       This is useful when you need to modify the original value contained in the field. If the DataAlternateTextFormatString property is not set, the alternate text values do not get any special formatting.       The format string can be any literal string and usually contains a placeholder for the field&quot;s value. For example, in the format string &quot;Item Value: {0}&quot;, the &quot;{0}&quot; placeholder is replaced with the value of the fields specified by the <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextField%2A> property. The rest of the format string is displayed as literal text.      > [!NOTE] >  If the format string does not include a placeholder, the field&quot;s value from the data source is not included in the final display text.       The placeholder consists of two parts separated by a colon (&quot;:&quot;) and wrapped in braces (&quot;{}&quot;), in the form `{A:Bxx}`. The value before the colon (`A` in the general example) specifies the field value&quot;s index in a zero-based list of parameters.      > [!NOTE] >  This parameter is part of the formatting syntax. Because there is only one field value in each cell, this value can only be set to 0.       The colon and the values after the colon are optional. The character after the colon (`B` in the general example) specifies the format in which to display the value. The following table lists the common formats.      |Format character|Description|   |----------------------|-----------------|   |`C`|Displays numeric values in currency format.|   |`D`|Displays numeric values in decimal format.|   |`E`|Displays numeric values in scientific (exponential) format.|   |`F`|Displays numeric values in fixed format.|   |`G`|Displays numeric values in general format.|   |`N`|Displays numeric values in number format.|   |`X`|Displays numeric values in hexadecimal format.|      > [!NOTE] >  The format characters are not case sensitive, except for `X`, which displays the hexadecimal characters in the case specified.       The value after the format character (xx in the general example) specifies the number of significant digits or decimal places to display. For example, the format string &quot;{0:F2}&quot; displays a fixed-point number with 2 decimal places.       For more information on formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the DataAlternateTextFormatString property to apply a custom format to the alternate text values for the images in an <xref:System.Web.UI.WebControls.ImageField> object.  \n  \n [!code-vb[ImageFieldAlternateTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_53_1.aspx)]\n [!code-cs[ImageFieldAlternateTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_53_1.aspx)]"
  syntax:
    content: public virtual string DataAlternateTextFormatString { get; set; }
    return:
      type: System.String
      description: "A string that specifies the format in which the alternate text for each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object is rendered. The default is an empty string (&quot;&quot;), which indicates that now special formatting is applied to the alternate text."
  overload: System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.DataImageUrlField
  id: DataImageUrlField
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: DataImageUrlField
  nameWithType: ImageField.DataImageUrlField
  fullName: System.Web.UI.WebControls.ImageField.DataImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the name of the field from the data source that contains the values to bind to the <xref:System.Web.UI.MobileControls.Image.ImageUrl*> property of each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object."
  remarks: "Use the DataImageUrlField property to specify the name of the field to bind to the <xref:System.Web.UI.MobileControls.Image.ImageUrl%2A> property of each image in an <xref:System.Web.UI.WebControls.ImageField> object. The specified field must contain the URLs for the images to display in the <xref:System.Web.UI.WebControls.ImageField> object. You can optionally format the URL values by setting the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlFormatString%2A> property.      > [!NOTE] >  When the filed value is `null`, an image cannot be displayed. You can display an alternate image for `null` field values by setting the <xref:System.Web.UI.WebControls.ImageField.NullImageUrl%2A> property. Instead of an alternate image, you can display alternate text by setting the <xref:System.Web.UI.WebControls.ImageField.NullDisplayText%2A> property."
  example:
  - "The following example code demonstrates how to use the DataImageUrlField property to specify the name of the field to bind to the <xref:System.Web.UI.MobileControls.Image.ImageUrl%2A> property of each image in an <xref:System.Web.UI.WebControls.ImageField> object.  \n  \n [!code-cs[ImageFieldImageUrlFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_492_1.aspx)]\n [!code-vb[ImageFieldImageUrlFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_492_1.aspx)]"
  syntax:
    content: public virtual string DataImageUrlField { get; set; }
    return:
      type: System.String
      description: "The name of the field to bind to the <xref:System.Web.UI.MobileControls.Image.ImageUrl*> property of each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object."
  overload: System.Web.UI.WebControls.ImageField.DataImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.DataImageUrlFormatString
  id: DataImageUrlFormatString
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: DataImageUrlFormatString
  nameWithType: ImageField.DataImageUrlFormatString
  fullName: System.Web.UI.WebControls.ImageField.DataImageUrlFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the string that specifies the format in which the URL for each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object is rendered."
  remarks: "Use the DataImageUrlFormatString property to specify a custom format for the URLs of the images displayed in an <xref:System.Web.UI.WebControls.ImageField> object. This is useful when you need to generate a URL, such as when the <xref:System.Web.UI.WebControls.ImageField> object simply contains the file name. If the DataImageUrlFormatString property is not set, the URL values do not get any special formatting.       The format string can be any literal string and usually contains a placeholder for the field&quot;s value. For example, in the format string &quot;Item Value: {0}&quot;, the &quot;{0}&quot; placeholder is replaced with the value of the fields specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property. The rest of the format string is displayed as literal text.      > [!NOTE] >  If the format string does not include a placeholder, the field&quot;s value from the data source is not included in the final display text.       The placeholder consists of two parts separated by a colon (&quot;:&quot;) and wrapped in braces (&quot;{}&quot;), in the form `{A:Bxx}`. The value before the colon (`A` in the general example) specifies the field value&quot;s index in a zero-based list of parameters.      > [!NOTE] >  This parameter is part of the formatting syntax. Because there is only one field value in each cell, this value can only be set to 0.       The colon and the values after the colon are optional. The character after the colon (`B` in the general example) specifies the format in which to display the value. The following table lists the common formats.      |Format character|Description|   |----------------------|-----------------|   |`C`|Displays numeric values in currency format.|   |`D`|Displays numeric values in decimal format.|   |`E`|Displays numeric values in scientific (exponential) format.|   |`F`|Displays numeric values in fixed format.|   |`G`|Displays numeric values in general format.|   |`N`|Displays numeric values in number format.|   |`X`|Displays numeric values in hexadecimal format.|      > [!NOTE] >  The format characters are not case sensitive, except for `X`, which displays the hexadecimal characters in the case specified.       The value after the format character (xx in the general example) specifies the number of significant digits or decimal places to display. For example, the format string &quot;{0:F2}&quot; displays a fixed-point number with 2 decimal places.       For more information on formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use the DataImageUrlFormatString property to apply a custom format to the URL values for the images in an <xref:System.Web.UI.WebControls.ImageField> object.  \n  \n [!code-cs[ImageFieldImageUrlFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1219_1.aspx)]\n [!code-vb[ImageFieldImageUrlFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1219_1.aspx)]"
  syntax:
    content: public virtual string DataImageUrlFormatString { get; set; }
    return:
      type: System.String
      description: "A string that specifies the format in which the URL for each image in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object is rendered. The default is the empty string (&quot;&quot;) , which indicates that no special formatting is applied to the URLs."
  overload: System.Web.UI.WebControls.ImageField.DataImageUrlFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: ImageField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.ImageField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fills the specified <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref> object with the values from the specified <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> object."
  remarks: "The ExtractValuesFromCell method is a helper method used to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.DataControlFieldCell> object in an <xref:System.Web.UI.WebControls.ImageField> object.      > [!NOTE] >  This method is used primarily by control developers.       This method does not have a return value. Instead, the field values are returned by reference through the <xref:System.Collections.Specialized.IOrderedDictionary> object passed in for the `dictionary` parameter. After the method has been called, iterate through the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values.      > [!NOTE] >  To include the read-only field values in the <xref:System.Web.UI.WebControls.DataControlFieldCell> object, pass in `true` for the `includeReadOnly` parameter."
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref> used to store the values of the specified cell."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> that contains the values to retrieve."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to include the values of read-only fields; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.FormatImageUrlValue(System.Object)
  id: FormatImageUrlValue(System.Object)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: FormatImageUrlValue(Object)
  nameWithType: ImageField.FormatImageUrlValue(Object)
  fullName: System.Web.UI.WebControls.ImageField.FormatImageUrlValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Applies the format specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlFormatString*> property to a field value."
  remarks: "The FormatImageUrlValue method is a helper method used by the <xref:System.Web.UI.WebControls.ImageField> class to apply the format specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlFormatString%2A> property to a field value."
  syntax:
    content: protected virtual string FormatImageUrlValue (object dataValue);
    parameters:
    - id: dataValue
      type: System.Object
      description: "The value to transform."
    return:
      type: System.String
      description: "The transformed value."
  overload: System.Web.UI.WebControls.ImageField.FormatImageUrlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: ImageField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.ImageField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retrieves the value used for a field&quot;s value when rendering the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object in a designer."
  remarks: "The GetDesignTimeValue method is a helper method used by the <xref:System.Web.UI.WebControls.ImageField> class to determine what value to display for a field when rendering an <xref:System.Web.UI.WebControls.ImageField> object in a designer. If real data cannot be retrieved from the data source at design time, the value returned by this method is displayed instead."
  syntax:
    content: protected virtual string GetDesignTimeValue ();
    parameters: []
    return:
      type: System.String
      description: "The value to display in the designer as the field&quot;s value."
  overload: System.Web.UI.WebControls.ImageField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.GetFormattedAlternateText(System.Web.UI.Control)
  id: GetFormattedAlternateText(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: GetFormattedAlternateText(Control)
  nameWithType: ImageField.GetFormattedAlternateText(Control)
  fullName: System.Web.UI.WebControls.ImageField.GetFormattedAlternateText(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Applies the format specified by the <xref:System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString*> property to the alternate text value contained in the specified <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
  remarks: "The GetFormattedAlternateText method is a helper method used by the <xref:System.Web.UI.WebControls.ImageField> class to apply the format specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlFormatString%2A> property to the alternate text value. The alternate text value is contained in the <xref:System.Web.UI.Control> object specified by the `controlContainer` parameter."
  syntax:
    content: protected virtual string GetFormattedAlternateText (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> that contains the alternate text value to transform."
    return:
      type: System.String
      description: "The transformed value."
  overload: System.Web.UI.WebControls.ImageField.GetFormattedAlternateText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.GetValue(System.Web.UI.Control,System.String,System.ComponentModel.PropertyDescriptor@)
  id: GetValue(System.Web.UI.Control,System.String,System.ComponentModel.PropertyDescriptor@)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: GetValue(Control,String,PropertyDescriptor)
  nameWithType: ImageField.GetValue(Control,String,PropertyDescriptor)
  fullName: System.Web.UI.WebControls.ImageField.GetValue(Control,String,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retrieves the value of the specified field from the specified control."
  remarks: "The GetValue method is a helper method used by the <xref:System.Web.UI.WebControls.ImageField> object to determine the value of the specified field."
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer, string fieldName, ref System.ComponentModel.PropertyDescriptor cachedDescriptor);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> that contains the field value."
    - id: fieldName
      type: System.String
      description: "The name of the field for which to retrieve the value."
    - id: cachedDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>, passed by reference, that represents the properties of the field."
    return:
      type: System.Object
      description: "The value of the specified field."
  overload: System.Web.UI.WebControls.ImageField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The data item associated with the container control is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The field specified by the <code>fieldName</code> parameter could not be found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: ImageField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ImageField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object."
  remarks: "The Initialize method is called by the data control with which the <xref:System.Web.UI.WebControls.ImageField> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a field collection. Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the Initialize method in their `CreateChildControls` methods before other methods such as `CreateRow` are called to create specific rows with data.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to perform basic initialization for an <xref:System.Web.UI.WebControls.ImageField> object. Implement this method if your <xref:System.Web.UI.WebControls.ImageField>-derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.DataControlFieldCell> objects with data or controls in the <xref:System.Web.UI.WebControls.ImageField.InitializeCell%2A> method."
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if sorting is supported; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: control
      type: System.Web.UI.Control
      description: "The data control that contains the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref>."
    return:
      type: System.Boolean
      description: "Always returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ImageField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ImageField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes the specified <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> object with the specified cell type, row state, and row index."
  remarks: "The InitializeCell method is implemented by <xref:System.Web.UI.WebControls.ImageField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.DataControlFieldCell> object of a data control that uses tables to display a user interface (UI). These data controls create the complete table structure row-by-row when the control&quot;s `CreateChildControls` method is called. The InitializeCell method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.DataControlFieldCell> objects to initialize the cells of the table structure with data or controls. Implement this method when you are writing an <xref:System.Web.UI.WebControls.ImageField>-derived class."
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> to initialize."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;></xref> values."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values."
    - id: rowIndex
      type: System.Int32
      description: "The zero-based index of the row."
  overload: System.Web.UI.WebControls.ImageField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: ImageField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.ImageField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes the specified <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> object with the specified row state."
  remarks: "The InitializeDataCell method is a helper method used by the <xref:System.Web.UI.WebControls.ImageField> class to initialize a cell in an <xref:System.Web.UI.WebControls.ImageField> object."
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> to initialize."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values."
  overload: System.Web.UI.WebControls.ImageField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: ImageField.NullDisplayText
  fullName: System.Web.UI.WebControls.ImageField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object when the value of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "When the value of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property is `null`, an image cannot be displayed in an <xref:System.Web.UI.WebControls.ImageField> object. Use the NullDisplayText property to specify the text to display in the image&quot;s place. The text usually indicates that the normal image is not available or cannot be found.      > [!NOTE] >  As an alternative, you can display an alternate image when the field value is `null` by setting the <xref:System.Web.UI.WebControls.ImageField.NullImageUrl%2A> property instead of this property. If the <xref:System.Web.UI.WebControls.ImageField.NullImageUrl%2A> and NullDisplayText properties are both set, the <xref:System.Web.UI.WebControls.ImageField.NullImageUrl%2A> property has precedence.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the NullDisplayText property to specify the text to display when the value of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property is `null`.  \n  \n [!code-vb[ImageField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_219_1.aspx)]\n [!code-cs[ImageField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_219_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "The text to display when the value of a field is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.ImageField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.NullImageUrl
  id: NullImageUrl
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: NullImageUrl
  nameWithType: ImageField.NullImageUrl
  fullName: System.Web.UI.WebControls.ImageField.NullImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an alternate image displayed in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object when the value of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "When the value of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property is `null`, an image cannot be displayed in an <xref:System.Web.UI.WebControls.ImageField> object. Use the NullImageUrl property to specify the URL to an alternate image to display. The alternate image is usually an image that indicates that the normal image is not available or cannot be found.      > [!NOTE] >  As an alternative, you can simply display text when the field value is `null` by setting the <xref:System.Web.UI.WebControls.ImageField.NullDisplayText%2A> property instead of this property. If the NullImageUrl and <xref:System.Web.UI.WebControls.ImageField.NullDisplayText%2A> properties are both set, the NullImageUrl property has precedence."
  example:
  - "The following example demonstrates how to use the NullImageUrl property to specify the URL to an alternate image to display when the value of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property is `null`.  \n  \n [!code-vb[ImageFieldNullImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1128_1.aspx)]\n [!code-cs[ImageFieldNullImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1128_1.aspx)]"
  syntax:
    content: public virtual string NullImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an alternate image displayed when the value of a field is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.ImageField.NullImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: ImageField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.ImageField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Binds the value of a field to the <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object."
  remarks: "The OnDataBindField method is a helper method used by the <xref:System.Web.UI.WebControls.ImageField> class to bind the value of a field in the data source to a corresponding cell in an <xref:System.Web.UI.WebControls.ImageField> object."
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "The source of the event."
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Web.UI.WebControls.ImageField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object contains a control that is not a <xref href=&quot;System.Web.UI.WebControls.TextBox&quot;></xref> control in edit mode and is not an <xref href=&quot;System.Web.UI.WebControls.Image&quot;></xref> control with a <xref href=&quot;System.Web.UI.WebControls.Label&quot;></xref> control in read-only mode."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: ImageField.ReadOnly
  fullName: System.Web.UI.WebControls.ImageField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether the values of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField*> property can be modified in edit mode."
  remarks: "By default, the values of the field specified by the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property can be modified by the user when a data-bound control is in edit mode. To prevent the user from changing the values of the field, set this property to `true`.      > [!NOTE] >  In an <xref:System.Web.UI.WebControls.ImageField> object, the <xref:System.Web.UI.WebControls.ImageField.DataImageUrlField%2A> property usually contains the name of the field that contains the URLs to the images displayed in the object."
  example:
  - "The following example demonstrates how to use the ReadOnly property to indicate that the field values that represent the URLs to the images displayed in an <xref:System.Web.UI.WebControls.ImageField> object cannot be modified in edit mode.  \n  \n [!code-cs[ImageFieldReadOnly#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1234_1.aspx)]\n [!code-vb[ImageFieldReadOnly#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1234_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the field values cannot be modified in edit mode; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: ImageField.ThisExpression
  fullName: System.Web.UI.WebControls.ImageField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Represents the &quot;this&quot; expression."
  remarks: "The ThisExpression field is used to indicate that the <xref:System.Web.UI.WebControls.ImageField> object should bind to the data source itself rather than a filed of the data source. In this case, the value returned by the object&quot;s <xref:System.Object.ToString%2A> method will be displayed in the field."
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ImageField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: ImageField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ImageField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the controls contained in an <xref href=&quot;System.Web.UI.WebControls.ImageField&quot;></xref> object support callbacks."
  remarks: "The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in an <xref:System.Web.UI.WebControls.ImageField> object support callbacks. This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.      > [!NOTE] >  This method is used primarily by control developers."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.ImageField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.ImageField.#ctor
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ImageField()
  nameWithType: ImageField.ImageField()
  fullName: System.Web.UI.WebControls.ImageField.ImageField()
- uid: System.Web.UI.WebControls.ImageField.AlternateText
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: AlternateText
  nameWithType: ImageField.AlternateText
  fullName: System.Web.UI.WebControls.ImageField.AlternateText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ImageField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: ImageField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.ImageField.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ImageField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: ImageField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ImageField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.ImageField.CreateField
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: CreateField()
  nameWithType: ImageField.CreateField()
  fullName: System.Web.UI.WebControls.ImageField.CreateField()
- uid: System.Web.UI.WebControls.ImageField.DataAlternateTextField
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataAlternateTextField
  nameWithType: ImageField.DataAlternateTextField
  fullName: System.Web.UI.WebControls.ImageField.DataAlternateTextField
- uid: System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataAlternateTextFormatString
  nameWithType: ImageField.DataAlternateTextFormatString
  fullName: System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString
- uid: System.Web.UI.WebControls.ImageField.DataImageUrlField
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataImageUrlField
  nameWithType: ImageField.DataImageUrlField
  fullName: System.Web.UI.WebControls.ImageField.DataImageUrlField
- uid: System.Web.UI.WebControls.ImageField.DataImageUrlFormatString
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataImageUrlFormatString
  nameWithType: ImageField.DataImageUrlFormatString
  fullName: System.Web.UI.WebControls.ImageField.DataImageUrlFormatString
- uid: System.Web.UI.WebControls.ImageField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: ImageField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.ImageField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.ImageField.FormatImageUrlValue(System.Object)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: FormatImageUrlValue(Object)
  nameWithType: ImageField.FormatImageUrlValue(Object)
  fullName: System.Web.UI.WebControls.ImageField.FormatImageUrlValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ImageField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: ImageField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.ImageField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.ImageField.GetFormattedAlternateText(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: GetFormattedAlternateText(Control)
  nameWithType: ImageField.GetFormattedAlternateText(Control)
  fullName: System.Web.UI.WebControls.ImageField.GetFormattedAlternateText(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ImageField.GetValue(System.Web.UI.Control,System.String,System.ComponentModel.PropertyDescriptor@)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: GetValue(Control,String,PropertyDescriptor)
  nameWithType: ImageField.GetValue(Control,String,PropertyDescriptor)
  fullName: System.Web.UI.WebControls.ImageField.GetValue(Control,String,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Web.UI.WebControls.ImageField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: ImageField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ImageField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.ImageField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ImageField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ImageField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ImageField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: ImageField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.ImageField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.ImageField.NullDisplayText
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: NullDisplayText
  nameWithType: ImageField.NullDisplayText
  fullName: System.Web.UI.WebControls.ImageField.NullDisplayText
- uid: System.Web.UI.WebControls.ImageField.NullImageUrl
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: NullImageUrl
  nameWithType: ImageField.NullImageUrl
  fullName: System.Web.UI.WebControls.ImageField.NullImageUrl
- uid: System.Web.UI.WebControls.ImageField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: ImageField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.ImageField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.ImageField.ReadOnly
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ReadOnly
  nameWithType: ImageField.ReadOnly
  fullName: System.Web.UI.WebControls.ImageField.ReadOnly
- uid: System.Web.UI.WebControls.ImageField.ThisExpression
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ThisExpression
  nameWithType: ImageField.ThisExpression
  fullName: System.Web.UI.WebControls.ImageField.ThisExpression
- uid: System.Web.UI.WebControls.ImageField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: ImageField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ImageField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.ImageField.#ctor*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ImageField
  nameWithType: ImageField.ImageField
- uid: System.Web.UI.WebControls.ImageField.AlternateText*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: AlternateText
  nameWithType: ImageField.AlternateText
- uid: System.Web.UI.WebControls.ImageField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: ImageField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.ImageField.CopyProperties*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: CopyProperties
  nameWithType: ImageField.CopyProperties
- uid: System.Web.UI.WebControls.ImageField.CreateField*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: CreateField
  nameWithType: ImageField.CreateField
- uid: System.Web.UI.WebControls.ImageField.DataAlternateTextField*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataAlternateTextField
  nameWithType: ImageField.DataAlternateTextField
- uid: System.Web.UI.WebControls.ImageField.DataAlternateTextFormatString*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataAlternateTextFormatString
  nameWithType: ImageField.DataAlternateTextFormatString
- uid: System.Web.UI.WebControls.ImageField.DataImageUrlField*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataImageUrlField
  nameWithType: ImageField.DataImageUrlField
- uid: System.Web.UI.WebControls.ImageField.DataImageUrlFormatString*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: DataImageUrlFormatString
  nameWithType: ImageField.DataImageUrlFormatString
- uid: System.Web.UI.WebControls.ImageField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: ImageField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.ImageField.FormatImageUrlValue*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: FormatImageUrlValue
  nameWithType: ImageField.FormatImageUrlValue
- uid: System.Web.UI.WebControls.ImageField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: ImageField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.ImageField.GetFormattedAlternateText*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: GetFormattedAlternateText
  nameWithType: ImageField.GetFormattedAlternateText
- uid: System.Web.UI.WebControls.ImageField.GetValue*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: GetValue
  nameWithType: ImageField.GetValue
- uid: System.Web.UI.WebControls.ImageField.Initialize*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: Initialize
  nameWithType: ImageField.Initialize
- uid: System.Web.UI.WebControls.ImageField.InitializeCell*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: InitializeCell
  nameWithType: ImageField.InitializeCell
- uid: System.Web.UI.WebControls.ImageField.InitializeDataCell*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: InitializeDataCell
  nameWithType: ImageField.InitializeDataCell
- uid: System.Web.UI.WebControls.ImageField.NullDisplayText*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: NullDisplayText
  nameWithType: ImageField.NullDisplayText
- uid: System.Web.UI.WebControls.ImageField.NullImageUrl*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: NullImageUrl
  nameWithType: ImageField.NullImageUrl
- uid: System.Web.UI.WebControls.ImageField.OnDataBindField*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: OnDataBindField
  nameWithType: ImageField.OnDataBindField
- uid: System.Web.UI.WebControls.ImageField.ReadOnly*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ReadOnly
  nameWithType: ImageField.ReadOnly
- uid: System.Web.UI.WebControls.ImageField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.ImageField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: ImageField.ValidateSupportsCallback
