### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  id: ObjectDataSourceObjectEventHandler
  langs:
  - csharp
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  type: Delegate
  summary: "Representa o método que irá processar a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&quot;> </xref> e <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo."
  remarks: 'Quando cria um delegado ObjectDataSourceObjectEventHandler, identifique o método que irá processar o evento. Para associar o evento com o processador de eventos, adicione uma instância do delegado para o evento. O processador de eventos é chamado sempre que o evento ocorre, a menos que remova o delegado. Para obter mais informações sobre os delegados do processador de eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible or appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected, and in others it might not initialize the business object to a desired state. Whatever the reason, you can instantiate the business object yourself and set the instance to the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_274_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_274_1.aspx)]  \n  \n The following code example demonstrates the example basic business object used in the preceding example.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_274_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_274_2.vb)]"
  syntax:
    content: public delegate void ObjectDataSourceObjectEventHandler(object sender, ObjectDataSourceEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
