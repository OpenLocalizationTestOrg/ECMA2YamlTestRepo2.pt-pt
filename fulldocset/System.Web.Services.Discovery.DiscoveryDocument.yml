### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Discovery.DiscoveryDocument
  id: DiscoveryDocument
  children:
  - System.Web.Services.Discovery.DiscoveryDocument.#ctor
  - System.Web.Services.Discovery.DiscoveryDocument.CanRead(System.Xml.XmlReader)
  - System.Web.Services.Discovery.DiscoveryDocument.Namespace
  - System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.Stream)
  - System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.TextReader)
  - System.Web.Services.Discovery.DiscoveryDocument.Read(System.Xml.XmlReader)
  - System.Web.Services.Discovery.DiscoveryDocument.References
  - System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.Stream)
  - System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.TextWriter)
  - System.Web.Services.Discovery.DiscoveryDocument.Write(System.Xml.XmlWriter)
  langs:
  - csharp
  name: DiscoveryDocument
  nameWithType: DiscoveryDocument
  fullName: System.Web.Services.Discovery.DiscoveryDocument
  type: Class
  summary: "Representa um documento de identificação. Esta classe não pode ser herdada."
  remarks: "Deteção de serviços Web de XML envolve a deteção de serviços de XML Web disponíveis,-lhe fornecido um URL. O URL, normalmente, aponta para um documento de deteção, o que normalmente com a extensão de nome de ficheiro de a.disco. O documento de deteção, o que é um documento XML, contém referências para obter informações sobre o existance dos serviços Web de XML, como uma descrição de serviço, o esquema de linguagem de definição de esquema de XML (XSD) ou outro documento de identificação. Esta classe representa o conteúdo do documento de identificação; onde o <xref:System.Web.Services.Discovery.DiscoveryDocument.References%2A>propriedade contém uma lista de referências contidos no documento de identificação.</xref:System.Web.Services.Discovery.DiscoveryDocument.References%2A>"
  example:
  - "The following code example reads a discovery document from a file using the <xref:System.Web.Services.Discovery.DiscoveryDocument.Read%2A> and writes it back out to file using the <xref:System.Web.Services.Discovery.DiscoveryDocument.Write%2A> method.  \n  \n [!code-cs[DiscoveryDocument#1](~/add/codesnippet/csharp/t-system.web.services.di_7_1.cs)]\n [!code-vb[DiscoveryDocument#1](~/add/codesnippet/visualbasic/t-system.web.services.di_7_1.vb)]\n [!code-cpp[DiscoveryDocument#1](~/add/codesnippet/cpp/t-system.web.services.di_7_1.cpp)]"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlRoot("discovery", Namespace="http://schemas.xmlsoap.org/disco/")]

      public sealed class DiscoveryDocument
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.#ctor
  id: '#ctor'
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: DiscoveryDocument()
  nameWithType: DiscoveryDocument.DiscoveryDocument()
  fullName: System.Web.Services.Discovery.DiscoveryDocument.DiscoveryDocument()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> classe."
  syntax:
    content: public DiscoveryDocument ();
    parameters: []
  overload: System.Web.Services.Discovery.DiscoveryDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.CanRead(System.Xml.XmlReader)
  id: CanRead(System.Xml.XmlReader)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: CanRead(XmlReader)
  nameWithType: DiscoveryDocument.CanRead(XmlReader)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.CanRead(XmlReader)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Devolve um valor que indica se transmitido <xref:System.Xml.XmlReader>pode ser anulada a serialização uma <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: ''
  example:
  - "The following code example reads in the contents of a discovery document, if the CanRead property is `true`.  \n  \n [!code-cs[DiscoveryDocument_DiscoveryDocument#3](~/add/codesnippet/csharp/m-system.web.services.di_4_1.cs)]\n [!code-vb[DiscoveryDocument_DiscoveryDocument#3](~/add/codesnippet/visualbasic/m-system.web.services.di_4_1.vb)]\n [!code-cpp[DiscoveryDocument_DiscoveryDocument#3](~/add/codesnippet/cpp/m-system.web.services.di_4_1.cpp)]"
  syntax:
    content: public static bool CanRead (System.Xml.XmlReader xmlReader);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "O <xref:System.Xml.XmlReader>que é testada se pode ser anulada a serialização uma <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>.</xref:System.Xml.XmlReader>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Xml.XmlReader>pode ser anulada a serialização uma <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.Namespace
  id: Namespace
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: Namespace
  nameWithType: DiscoveryDocument.Namespace
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Namespace
  type: Field
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Espaço de nomes do elemento XML de deteção de um documento de deteção."
  remarks: "Um documento de identificação contém referências a documentos que descrevem os serviços Web. Estas referências são elementos XML contidos dentro de um elemento XML de deteção. Esse elemento XML de deteção é um membro do espaço de nomes XML especificado pela constante de espaço de nomes."
  example:
  - "The following code example displays the XML namespace associated with the discovery XML element of a discovery document.  \n  \n [!code-cs[DiscoveryDocument_DiscoveryDocument#2](~/add/codesnippet/csharp/f-system.web.services.di_0_1.cs)]\n [!code-vb[DiscoveryDocument_DiscoveryDocument#2](~/add/codesnippet/visualbasic/f-system.web.services.di_0_1.vb)]\n [!code-cpp[DiscoveryDocument_DiscoveryDocument#2](~/add/codesnippet/cpp/f-system.web.services.di_0_1.cpp)]"
  syntax:
    content: public const string Namespace;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.Stream)
  id: Read(System.IO.Stream)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: Read(Stream)
  nameWithType: DiscoveryDocument.Read(Stream)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Read(Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Lê e devolve um <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> de transmitido <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  syntax:
    content: public static System.Web.Services.Discovery.DiscoveryDocument Read (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>do qual é possível ler o <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>.</xref:System.IO.Stream>"
    return:
      type: System.Web.Services.Discovery.DiscoveryDocument
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> que contém o conteúdo de um documento de deteção do transmitido <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.TextReader)
  id: Read(System.IO.TextReader)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: Read(TextReader)
  nameWithType: DiscoveryDocument.Read(TextReader)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Read(TextReader)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Lê e devolve um <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> de transmitido <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: ''
  example:
  - "The following code example reads the discovery document from \" `http://localhost/example_Write2_cs.vsdisco` \" into a <xref:System.Xml.XmlTextReader>.  \n  \n [!code-cpp[DiscoveryDocument_Write2#1](~/add/codesnippet/cpp/m-system.web.services.di_15_1.cpp)]\n [!code-cs[DiscoveryDocument_Write2#1](~/add/codesnippet/csharp/m-system.web.services.di_15_1.cs)]\n [!code-vb[DiscoveryDocument_Write2#1](~/add/codesnippet/visualbasic/m-system.web.services.di_15_1.vb)]"
  syntax:
    content: public static System.Web.Services.Discovery.DiscoveryDocument Read (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "O <xref:System.IO.TextReader>do qual é possível ler o <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>.</xref:System.IO.TextReader>"
    return:
      type: System.Web.Services.Discovery.DiscoveryDocument
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> que contém o conteúdo de um documento de deteção do transmitido <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.Read(System.Xml.XmlReader)
  id: Read(System.Xml.XmlReader)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: Read(XmlReader)
  nameWithType: DiscoveryDocument.Read(XmlReader)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Read(XmlReader)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Lê e devolve um <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> de transmitido <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: ''
  example:
  - "The following code example reads in the contents of a discovery document, if the <xref:System.Web.Services.Discovery.DiscoveryDocument.CanRead%2A> property is `true`.  \n  \n [!code-cs[DiscoveryDocument_DiscoveryDocument#4](~/add/codesnippet/csharp/m-system.web.services.di_14_1.cs)]\n [!code-vb[DiscoveryDocument_DiscoveryDocument#4](~/add/codesnippet/visualbasic/m-system.web.services.di_14_1.vb)]\n [!code-cpp[DiscoveryDocument_DiscoveryDocument#4](~/add/codesnippet/cpp/m-system.web.services.di_14_1.cpp)]"
  syntax:
    content: public static System.Web.Services.Discovery.DiscoveryDocument Read (System.Xml.XmlReader xmlReader);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "O <xref:System.Xml.XmlReader>do qual é possível ler o <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref>.</xref:System.Xml.XmlReader>"
    return:
      type: System.Web.Services.Discovery.DiscoveryDocument
      description: "A <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> que contém o conteúdo de um documento de deteção do transmitido <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.References
  id: References
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: References
  nameWithType: DiscoveryDocument.References
  fullName: System.Web.Services.Discovery.DiscoveryDocument.References
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Uma lista de referências contidos no documento de identificação."
  remarks: "Um documento de identificação contém referências para obter informações sobre a existência de serviços Web de XML. Estas referências podem referir-se descrições de serviço, esquemas XSD ou outros documentos de deteção. A propriedade de referências contém uma lista destas referências."
  example:
  - "The following code example enumerates over the references for a discovery document.  \n  \n [!code-cs[DiscoveryDocument_DiscoveryDocument#5](~/add/codesnippet/csharp/p-system.web.services.di_25_1.cs)]\n [!code-vb[DiscoveryDocument_DiscoveryDocument#5](~/add/codesnippet/visualbasic/p-system.web.services.di_25_1.vb)]\n [!code-cpp[DiscoveryDocument_DiscoveryDocument#5](~/add/codesnippet/cpp/p-system.web.services.di_25_1.cpp)]"
  syntax:
    content: public System.Collections.IList References { get; }
    return:
      type: System.Collections.IList
      description: "Um <xref:System.Collections.IList>que contém as referências no documento de identificação.</xref:System.Collections.IList>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.References*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.Stream)
  id: Write(System.IO.Stream)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: Write(Stream)
  nameWithType: DiscoveryDocument.Write(Stream)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Write(Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Escreve este <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> para transmitido <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: ''
  example:
  - "The following code example writes a discovery document out to a file named `log.txt` using the <xref:System.Web.Services.Discovery.DiscoveryDocument.Write%2A> method.  \n  \n [!code-cs[DiscoveryDocument_Write1#1](~/add/codesnippet/csharp/m-system.web.services.di_8_1.cs)]\n [!code-cpp[DiscoveryDocument_Write1#1](~/add/codesnippet/cpp/m-system.web.services.di_8_1.cpp)]\n [!code-vb[DiscoveryDocument_Write1#1](~/add/codesnippet/visualbasic/m-system.web.services.di_8_1.vb)]"
  syntax:
    content: public void Write (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>para que esta <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> é escrito.</xref:System.IO.Stream>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.TextWriter)
  id: Write(System.IO.TextWriter)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: Write(TextWriter)
  nameWithType: DiscoveryDocument.Write(TextWriter)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Write(TextWriter)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Escreve este <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> para transmitido <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: ''
  example:
  - "The following code example writes a discovery document into a <xref:System.Xml.XmlTextWriter>.  \n  \n [!code-cpp[DiscoveryDocument_Write2#1](~/add/codesnippet/cpp/m-system.web.services.di_18_1.cpp)]\n [!code-cs[DiscoveryDocument_Write2#1](~/add/codesnippet/csharp/m-system.web.services.di_18_1.cs)]\n [!code-vb[DiscoveryDocument_Write2#1](~/add/codesnippet/visualbasic/m-system.web.services.di_18_1.vb)]"
  syntax:
    content: public void Write (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>para que esta <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> é escrito.</xref:System.IO.TextWriter>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryDocument.Write(System.Xml.XmlWriter)
  id: Write(System.Xml.XmlWriter)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  langs:
  - csharp
  name: Write(XmlWriter)
  nameWithType: DiscoveryDocument.Write(XmlWriter)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Write(XmlWriter)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "Escreve este <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> para transmitido <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: ''
  example:
  - "The following code example writes a discovery document into a <xref:System.Xml.XmlTextWriter>.  \n  \n [!code-cpp[DiscoveryDocument_Write2#1](~/add/codesnippet/cpp/m-system.web.services.di_19_1.cpp)]\n [!code-cs[DiscoveryDocument_Write2#1](~/add/codesnippet/csharp/m-system.web.services.di_19_1.cs)]\n [!code-vb[DiscoveryDocument_Write2#1](~/add/codesnippet/visualbasic/m-system.web.services.di_19_1.vb)]"
  syntax:
    content: public void Write (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>para que esta <xref href=&quot;System.Web.Services.Discovery.DiscoveryDocument&quot;> </xref> é escrito.</xref:System.Xml.XmlWriter>"
  overload: System.Web.Services.Discovery.DiscoveryDocument.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Discovery.DiscoveryDocument.#ctor
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: DiscoveryDocument()
  nameWithType: DiscoveryDocument.DiscoveryDocument()
  fullName: System.Web.Services.Discovery.DiscoveryDocument.DiscoveryDocument()
- uid: System.Web.Services.Discovery.DiscoveryDocument.CanRead(System.Xml.XmlReader)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: CanRead(XmlReader)
  nameWithType: DiscoveryDocument.CanRead(XmlReader)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.CanRead(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.Services.Discovery.DiscoveryDocument.Namespace
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Namespace
  nameWithType: DiscoveryDocument.Namespace
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Namespace
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.Stream)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Read(Stream)
  nameWithType: DiscoveryDocument.Read(Stream)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Read(Stream)
- uid: System.Web.Services.Discovery.DiscoveryDocument
  parent: System.Web.Services.Discovery
  isExternal: false
  name: DiscoveryDocument
  nameWithType: DiscoveryDocument
  fullName: System.Web.Services.Discovery.DiscoveryDocument
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.TextReader)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Read(TextReader)
  nameWithType: DiscoveryDocument.Read(TextReader)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Read(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.Services.Discovery.DiscoveryDocument.Read(System.Xml.XmlReader)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Read(XmlReader)
  nameWithType: DiscoveryDocument.Read(XmlReader)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Read(XmlReader)
- uid: System.Web.Services.Discovery.DiscoveryDocument.References
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: References
  nameWithType: DiscoveryDocument.References
  fullName: System.Web.Services.Discovery.DiscoveryDocument.References
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.Stream)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Write(Stream)
  nameWithType: DiscoveryDocument.Write(Stream)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Write(Stream)
- uid: System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.TextWriter)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Write(TextWriter)
  nameWithType: DiscoveryDocument.Write(TextWriter)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Write(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Services.Discovery.DiscoveryDocument.Write(System.Xml.XmlWriter)
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Write(XmlWriter)
  nameWithType: DiscoveryDocument.Write(XmlWriter)
  fullName: System.Web.Services.Discovery.DiscoveryDocument.Write(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.Services.Discovery.DiscoveryDocument.#ctor*
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: DiscoveryDocument
  nameWithType: DiscoveryDocument.DiscoveryDocument
- uid: System.Web.Services.Discovery.DiscoveryDocument.CanRead*
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: CanRead
  nameWithType: DiscoveryDocument.CanRead
- uid: System.Web.Services.Discovery.DiscoveryDocument.Read*
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Read
  nameWithType: DiscoveryDocument.Read
- uid: System.Web.Services.Discovery.DiscoveryDocument.References*
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: References
  nameWithType: DiscoveryDocument.References
- uid: System.Web.Services.Discovery.DiscoveryDocument.Write*
  parent: System.Web.Services.Discovery.DiscoveryDocument
  isExternal: false
  name: Write
  nameWithType: DiscoveryDocument.Write
