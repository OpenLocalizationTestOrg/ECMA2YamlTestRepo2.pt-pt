### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform
  id: XmlDecryptionTransform
  children:
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  langs:
  - csharp
  name: XmlDecryptionTransform
  nameWithType: XmlDecryptionTransform
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform
  type: Class
  summary: "Specifies the order of XML Digital Signature and XML Encryption operations when both are performed on the same document."
  remarks: "The XmlDecryptionTransform class provides a transform that determines the order of XML Digital Signature and XML Encryption operations when both are performed on the same document.       Use the XmlDecryptionTransform class whenever you need to perform XML encryption and apply an XML digital signature to the same XML document.       You must pass an <xref:System.Security.Cryptography.Xml.EncryptedXml> object to the <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A> property that contains the necessary key information to decrypt the document."
  syntax:
    content: 'public class XmlDecryptionTransform : System.Security.Cryptography.Xml.Transform'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.Transform
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: XmlDecryptionTransform()
  nameWithType: XmlDecryptionTransform.XmlDecryptionTransform()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.XmlDecryptionTransform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> class."
  syntax:
    content: public XmlDecryptionTransform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)
  id: AddExceptUri(System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: AddExceptUri(String)
  nameWithType: XmlDecryptionTransform.AddExceptUri(String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adds a Uniform Resource Identifier (URI) to exclude from processing."
  syntax:
    content: public void AddExceptUri (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "A Uniform Resource Identifier (URI) to exclude from processing"
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: XmlDecryptionTransform.EncryptedXml
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets an <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;></xref> object that contains information about the keys necessary to decrypt an XML document."
  remarks: "You must pass an <xref:System.Security.Cryptography.Xml.EncryptedXml> object to the EncryptedXml property that contains the necessary key information to decrypt the document."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "An <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;></xref> object that contains information about the keys necessary to decrypt an XML document."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: XmlDecryptionTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns an XML representation of the parameters of an <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object that are suitable to be included as subelements of an XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  syntax:
    content: protected override System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object in an XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: XmlDecryptionTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the output of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref> object."
  syntax:
    content: public override object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "The output of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A decryption key could not be found."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: XmlDecryptionTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the output of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref> object."
  syntax:
    content: public override object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type of the output to return. <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> is the only valid type for this parameter."
    return:
      type: System.Object
      description: "The output of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>type</code> parameter is not an <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> object."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: InputTypes
  nameWithType: XmlDecryptionTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets an array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*> method of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object."
  remarks: "The array returned by the InputTypes property must contain at least one element because every <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> object must accept at least one type as valid input.       An <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> object typically accepts one or more of the following types as input: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, or <xref:System.Xml.XmlNodeList>."
  syntax:
    content: public override Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "An array of valid input types for the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object; you can pass only objects of one of these types to the <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*> method of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)
  id: IsTargetElement(System.Xml.XmlElement,System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: IsTargetElement(XmlElement,String)
  nameWithType: XmlDecryptionTransform.IsTargetElement(XmlElement,String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(XmlElement,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determines whether the ID attribute of an <xref href=&quot;System.Xml.XmlElement&quot;></xref> object matches a specified value."
  syntax:
    content: protected virtual bool IsTargetElement (System.Xml.XmlElement inputElement, string idValue);
    parameters:
    - id: inputElement
      type: System.Xml.XmlElement
      description: "An <xref href=&quot;System.Xml.XmlElement&quot;></xref> object with an ID attribute to compare with `idValue`."
    - id: idValue
      type: System.String
      description: "The value to compare with the ID attribute of `inputElement`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the ID attribute of the <code>inputElement</code> parameter matches the <code>idValue</code> parameter; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Parses the specified <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> object as transform-specific content of a <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element and configures the internal state of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object to match the <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  remarks: "This method is used to process subelements of a `<Transform>` element."
  syntax:
    content: public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "An <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> object that specifies transform-specific content for the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <code>nodeList</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The Uniform Resource Identifier (URI) value of an <xref href=&quot;System.Xml.XmlNode&quot;></xref> object in <code>nodeList</code> was not found.       -or-       The length of the URI value of an <xref href=&quot;System.Xml.XmlNode&quot;></xref> object in <code>nodeList</code> is 0.       -or-       The first character of the URI value of an <xref href=&quot;System.Xml.XmlNode&quot;></xref> object in <code>nodeList</code> is not &quot;#&quot;."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: XmlDecryptionTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, loads the specified input into the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object."
  remarks: "The type of the input object must be one of the types in the <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A> property."
  syntax:
    content: public override void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The input to load into the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: XmlDecryptionTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets an array of types that are possible outputs from the <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*> methods of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object."
  remarks: "The array returned by the OutputTypes property must contain at least one element because every transform must generate at least one type as output."
  syntax:
    content: public override Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "An array of valid output types for the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object; only objects of one of these types are returned from the <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*> methods of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: System.Security.Cryptography.Xml.Transform
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: XmlDecryptionTransform()
  nameWithType: XmlDecryptionTransform.XmlDecryptionTransform()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.XmlDecryptionTransform()
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: AddExceptUri(String)
  nameWithType: XmlDecryptionTransform.AddExceptUri(String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: EncryptedXml
  nameWithType: XmlDecryptionTransform.EncryptedXml
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetInnerXml()
  nameWithType: XmlDecryptionTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetOutput()
  nameWithType: XmlDecryptionTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: XmlDecryptionTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDecryptionTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: IsTargetElement(XmlElement,String)
  nameWithType: XmlDecryptionTransform.IsTargetElement(XmlElement,String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(XmlElement,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: XmlDecryptionTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDecryptionTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: XmlDecryptionTransform
  nameWithType: XmlDecryptionTransform.XmlDecryptionTransform
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: AddExceptUri
  nameWithType: XmlDecryptionTransform.AddExceptUri
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: EncryptedXml
  nameWithType: XmlDecryptionTransform.EncryptedXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetInnerXml
  nameWithType: XmlDecryptionTransform.GetInnerXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetOutput
  nameWithType: XmlDecryptionTransform.GetOutput
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDecryptionTransform.InputTypes
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: IsTargetElement
  nameWithType: XmlDecryptionTransform.IsTargetElement
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInnerXml
  nameWithType: XmlDecryptionTransform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInput
  nameWithType: XmlDecryptionTransform.LoadInput
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDecryptionTransform.OutputTypes
