### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Reference
  id: Reference
  children:
  - System.Security.Cryptography.Xml.Reference.#ctor
  - System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  - System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  - System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.Reference.DigestMethod
  - System.Security.Cryptography.Xml.Reference.DigestValue
  - System.Security.Cryptography.Xml.Reference.GetXml
  - System.Security.Cryptography.Xml.Reference.Id
  - System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.Reference.TransformChain
  - System.Security.Cryptography.Xml.Reference.Type
  - System.Security.Cryptography.Xml.Reference.Uri
  langs:
  - csharp
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
  type: Class
  summary: "Represents the <xref uid=&quot;langword_csharp_&lt;reference&gt;&quot; name=&quot;&lt;reference&gt;&quot; href=&quot;&quot;></xref> element of an XML signature."
  remarks: "The Reference object represents the <`reference`> element of an XML digital signature defined by the XML digital signature specification.       Use the Reference object to specify the following information:      -   The digest algorithm used to sign of the data object.  This value is required.      -   The Uniform Resource Identifier (URI) of the data object to sign. The URI can specify a file path or specific elements within an XML document.  This value is required.      -   A chain of transforms to apply before generating the digest. This value is optional.      -   The type of object to sign.  This value is optional.      -   A unique identifier used to reference the current `<reference>` element.  This value is optional.       For more information about the <`reference`> element, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the Reference object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/t-system.security.crypto_86_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/t-system.security.crypto_86_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_86_1.vb)]"
  syntax:
    content: public class Reference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Security.Cryptography.Xml.Reference.Reference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref> class with default properties."
  remarks: ''
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_16_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_16_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_16_1.vb)]  \n  \n The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_16_2.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_16_2.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_16_2.cpp)]"
  syntax:
    content: public Reference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference(Stream)
  nameWithType: Reference.Reference(Stream)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(Stream)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref> class with a hash value of the specified <xref:System.IO.Stream>."
  remarks: "This constructor initializes the <xref:System.Security.Cryptography.Xml.Reference> object to the hash value that corresponds to the `stream` parameter."
  syntax:
    content: public Reference (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The <xref:System.IO.Stream> with which to initialize the new instance of <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref> class with the specified <xref:System.Uri>."
  remarks: "This constructor initializes the <xref:System.Security.Cryptography.Xml.Reference> object to the data at the URI with special processing for `&quot;&quot;`, `#xpointer(/)`, and `#xxxx`."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Reference> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_34_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_34_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_34_1.cpp)]"
  syntax:
    content: public Reference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "The <xref:System.Uri> with which to initialize the new instance of <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  id: AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: AddTransform(Transform)
  nameWithType: Reference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.Reference.AddTransform(Transform)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adds a <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object to the list of transforms to be performed on the data before passing it to the digest algorithm."
  remarks: "The AddTransform method modifies the `<Transform>` element and associated subelements of an XML digital signature.       Transforms are applied in the order in which they were added. If no transforms are specified, the minimum required transforms are added automatically.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/c6da303c-11bb-4549-9dc7-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/c6da303c-11bb-4549-9dc7-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/c6da303c-11bb-4549-9dc7-_1.vb)]  \n  \n The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/c6da303c-11bb-4549-9dc7-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/c6da303c-11bb-4549-9dc7-_2.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/c6da303c-11bb-4549-9dc7-_2.cpp)]"
  syntax:
    content: public void AddTransform (System.Security.Cryptography.Xml.Transform transform);
    parameters:
    - id: transform
      type: System.Security.Cryptography.Xml.Transform
      description: "The transform to be added to the list of transforms."
  overload: System.Security.Cryptography.Xml.Reference.AddTransform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>transform</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod
  id: DigestMethod
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: DigestMethod
  nameWithType: Reference.DigestMethod
  fullName: System.Security.Cryptography.Xml.Reference.DigestMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the digest method Uniform Resource Identifier (URI) of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  remarks: "The DigestMethod property uses a URI string to represent the <`DigestMethod`> element of an XML digital signature.       The digest method is the algorithm used to hash the <xref:System.Security.Cryptography.Xml.Reference>. The default algorithm is <xref:System.Security.Cryptography.SHA1>.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public string DigestMethod { get; set; }
    return:
      type: System.String
      description: "The digest method URI of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>. The default value is &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;."
  overload: System.Security.Cryptography.Xml.Reference.DigestMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.DigestValue
  id: DigestValue
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: DigestValue
  nameWithType: Reference.DigestValue
  fullName: System.Security.Cryptography.Xml.Reference.DigestValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the digest value of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  remarks: "The DigestValue property uses an array of bytes to represent the <`DigestValue`> element of an XML digital signature.       The DigestValue property contains the Base 64 encoded value of the digest of the object described by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property.       The DigestValue property is automatically populated with the appropriate value whenever you make a call to <xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public byte[] DigestValue { get; set; }
    return:
      type: System.Byte[]
      description: "The digest value of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Reference.DigestValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: GetXml()
  nameWithType: Reference.GetXml()
  fullName: System.Security.Cryptography.Xml.Reference.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the XML representation of the <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "The XML representation of the <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Reference.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref:System.Security.Cryptography.Xml.Reference.DigestMethod*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Cryptography.Xml.Reference.DigestValue*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Id
  id: Id
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Id
  nameWithType: Reference.Id
  fullName: System.Security.Cryptography.Xml.Reference.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the ID of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  remarks: "Use the Id property to add a string ID to the XML representation of the current <xref:System.Security.Cryptography.Xml.Reference> element. The ID is used to reference the <xref:System.Security.Cryptography.Xml.Reference> element from another location."
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "The ID of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Reference.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: Reference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Reference.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Loads a <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref> state from an XML element."
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "The XML element from which to load the <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref> state."
  overload: System.Security.Cryptography.Xml.Reference.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <code>value</code> parameter does not contain any transforms.       -or-       The <code>value</code> parameter contains an unknown transform."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.TransformChain
  id: TransformChain
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: TransformChain
  nameWithType: Reference.TransformChain
  fullName: System.Security.Cryptography.Xml.Reference.TransformChain
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets the transform chain of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  remarks: "The TransformChain property represents the <`Transform`> element and associated subelements of an XML digital signature.       The transform chain is an ordered list of transforms. The output of these transforms constitutes the input to the hash algorithm specified in the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property.       For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }
    return:
      type: System.Security.Cryptography.Xml.TransformChain
      description: "The transform chain of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Reference.TransformChain*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Type
  id: Type
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Type
  nameWithType: Reference.Type
  fullName: System.Security.Cryptography.Xml.Reference.Type
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the type of the object being signed."
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "The type of the object being signed."
  overload: System.Security.Cryptography.Xml.Reference.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Uri
  id: Uri
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Uri
  nameWithType: Reference.Uri
  fullName: System.Security.Cryptography.Xml.Reference.Uri
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref:System.Uri> of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  remarks: "The Uri property uses a string Uniform Resource Identifier (URI) to represent the <`URI`> element of an XML digital signature.  \n  \n Use the Uri property to specify the location of a document to sign, and to specify which element of the current XML document to sign or to indicate that the entire document should be signed.  \n  \n To successfully create an XML digital signature, you must set the Uri property. The following table describes the values that you can pass to the Uri property.  \n  \n|Object to sign|Value passed to the Uri property|  \n|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  \n|An entire XML document using an enveloped signature.|An empty string: \"\"|  \n|A specific element within an XML document using an enveloped signature.|The name of an XML element identified by an attribute name ID. The string should take the following form where `IDname` is the name of a valid attribute name ID:<br /><br /> \"#Idname\"|  \n|A file using a detached signature.|The URI of a file: \"c:\\data.jpg\" or \"c:\\data.xml\".|  \n  \n For more information about XML digital signatures, see the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/)."
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_25_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_25_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_25_1.vb)]"
  syntax:
    content: public string Uri { get; set; }
    return:
      type: System.String
      description: "The <xref:System.Uri> of the current <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Reference.Uri*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.Reference.#ctor
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Security.Cryptography.Xml.Reference.Reference()
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference(Stream)
  nameWithType: Reference.Reference(Stream)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: AddTransform(Transform)
  nameWithType: Reference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.Reference.AddTransform(Transform)
- uid: System.Security.Cryptography.Xml.Transform
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestMethod
  nameWithType: Reference.DigestMethod
  fullName: System.Security.Cryptography.Xml.Reference.DigestMethod
- uid: System.Security.Cryptography.Xml.Reference.DigestValue
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestValue
  nameWithType: Reference.DigestValue
  fullName: System.Security.Cryptography.Xml.Reference.DigestValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Reference.GetXml
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: GetXml()
  nameWithType: Reference.GetXml()
  fullName: System.Security.Cryptography.Xml.Reference.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Reference.Id
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Id
  nameWithType: Reference.Id
  fullName: System.Security.Cryptography.Xml.Reference.Id
- uid: System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: Reference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Reference.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.Reference.TransformChain
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: TransformChain
  nameWithType: Reference.TransformChain
  fullName: System.Security.Cryptography.Xml.Reference.TransformChain
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.Reference.Type
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Type
  nameWithType: Reference.Type
  fullName: System.Security.Cryptography.Xml.Reference.Type
- uid: System.Security.Cryptography.Xml.Reference.Uri
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Uri
  nameWithType: Reference.Uri
  fullName: System.Security.Cryptography.Xml.Reference.Uri
- uid: System.Security.Cryptography.Xml.Reference.#ctor*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference
  nameWithType: Reference.Reference
- uid: System.Security.Cryptography.Xml.Reference.AddTransform*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: AddTransform
  nameWithType: Reference.AddTransform
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestMethod
  nameWithType: Reference.DigestMethod
- uid: System.Security.Cryptography.Xml.Reference.DigestValue*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestValue
  nameWithType: Reference.DigestValue
- uid: System.Security.Cryptography.Xml.Reference.GetXml*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: GetXml
  nameWithType: Reference.GetXml
- uid: System.Security.Cryptography.Xml.Reference.Id*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Id
  nameWithType: Reference.Id
- uid: System.Security.Cryptography.Xml.Reference.LoadXml*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: LoadXml
  nameWithType: Reference.LoadXml
- uid: System.Security.Cryptography.Xml.Reference.TransformChain*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: TransformChain
  nameWithType: Reference.TransformChain
- uid: System.Security.Cryptography.Xml.Reference.Type*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Type
  nameWithType: Reference.Type
- uid: System.Security.Cryptography.Xml.Reference.Uri*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Uri
  nameWithType: Reference.Uri
