### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaType
  id: XmlSchemaType
  children:
  - System.Xml.Schema.XmlSchemaType.#ctor
  - System.Xml.Schema.XmlSchemaType.BaseSchemaType
  - System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
  - System.Xml.Schema.XmlSchemaType.Datatype
  - System.Xml.Schema.XmlSchemaType.DerivedBy
  - System.Xml.Schema.XmlSchemaType.Final
  - System.Xml.Schema.XmlSchemaType.FinalResolved
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)
  - System.Xml.Schema.XmlSchemaType.IsMixed
  - System.Xml.Schema.XmlSchemaType.Name
  - System.Xml.Schema.XmlSchemaType.QualifiedName
  - System.Xml.Schema.XmlSchemaType.TypeCode
  langs:
  - csharp
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
  type: Class
  summary: "The base class for all simple types and complex types."
  remarks: ''
  example:
  - See the <xref:System.Xml.Schema.XmlSchemaSimpleType> class and the <xref:System.Xml.Schema.XmlSchemaComplexType> class for an example using this class.
  syntax:
    content: 'public class XmlSchemaType : System.Xml.Schema.XmlSchemaAnnotated'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: XmlSchemaType()
  nameWithType: XmlSchemaType.XmlSchemaType()
  fullName: System.Xml.Schema.XmlSchemaType.XmlSchemaType()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> class."
  syntax:
    content: public XmlSchemaType ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.BaseSchemaType
  id: BaseSchemaType
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: BaseSchemaType
  nameWithType: XmlSchemaType.BaseSchemaType
  fullName: System.Xml.Schema.XmlSchemaType.BaseSchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the post-compilation object type or the built-in XML Schema Definition Language (XSD) data type, simpleType element, or complexType element. This is a post-schema-compilation infoset property."
  remarks: "The complexType is derived from the type specified by the base value. The base value must be a QName.      > [!IMPORTANT] >  The BaseSchemaType property is obsolete and has been replaced by the <xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A> property."
  syntax:
    content: public object BaseSchemaType { get; }
    return:
      type: System.Object
      description: "The built-in XSD data type, simpleType element, or complexType element."
  overload: System.Xml.Schema.XmlSchemaType.BaseSchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
  id: BaseXmlSchemaType
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: BaseXmlSchemaType
  nameWithType: XmlSchemaType.BaseXmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the post-compilation value for the base type of this schema type."
  remarks: "The BaseXmlSchemaType property always has a value, because all schema types have a base type. This value is set upon schema compilation, making it a part of the post-schema-compilation infoset."
  syntax:
    content: public System.Xml.Schema.XmlSchemaType BaseXmlSchemaType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "An <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object representing the base type of this schema type."
  overload: System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.Datatype
  id: Datatype
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: Datatype
  nameWithType: XmlSchemaType.Datatype
  fullName: System.Xml.Schema.XmlSchemaType.Datatype
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the post-compilation value for the data type of the complex type."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDatatype Datatype { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDatatype
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref> post-schema-compilation value."
  overload: System.Xml.Schema.XmlSchemaType.Datatype*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.DerivedBy
  id: DerivedBy
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: DerivedBy
  nameWithType: XmlSchemaType.DerivedBy
  fullName: System.Xml.Schema.XmlSchemaType.DerivedBy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the post-compilation information on how this element was derived from its base type."
  remarks: "The following table shows the values that this property can contain.      |<xref:System.Xml.Schema.XmlSchemaDerivationMethod> value|Description|   |----------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|No derivation method specified.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Derived by Substitution.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Derived by Extension.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Derived by Restriction.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Derived by List.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Derived by Union.|"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod DerivedBy { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "One of the valid <xref href=&quot;System.Xml.Schema.XmlSchemaDerivationMethod&quot;></xref> values."
  overload: System.Xml.Schema.XmlSchemaType.DerivedBy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.Final
  id: Final
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: Final
  nameWithType: XmlSchemaType.Final
  fullName: System.Xml.Schema.XmlSchemaType.Final
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the final attribute of the type derivation that indicates if further derivations are allowed."
  remarks: "The following table shows the values that this property can contain for simple type.      |<xref:System.Xml.Schema.XmlSchemaDerivationMethod> value|Description|   |----------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Overrides the schema `blockDefault` setting allowing any derivations by restriction, extension, or substitution to take place.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|No derivation method is specified. This is the default. Derivation rules are taken from the schema blockDefault setting.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Cannot be replaced by a type derived by Substitution.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Cannot be replaced by a type derived by Extension.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Cannot be replaced by a type derived by Restriction.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|`#all`. Cannot be replaced by a type derived by any derivation method.|       The following table shows the values that this property can contain for complex type.      |<xref:System.Xml.Schema.XmlSchemaDerivationMethod> value|Description|   |----------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Overrides the schema `blockDefault` setting allowing any derivations by restriction, extension, or substitution to take place.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|No derivation method is specified. This is the default. Derivation rules are taken from the schema `blockDefault` setting.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Cannot be replaced by a type derived by Substitution.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Cannot be replaced by a type derived by Extension.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|Cannot be replaced by a type derived by Restriction.|   |<xref:System.Xml.Schema.XmlSchemaDerivationMethod>|`#all`. Cannot be replaced by a type derived by any derivation method.|"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Final { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "One of the valid <xref href=&quot;System.Xml.Schema.XmlSchemaDerivationMethod&quot;></xref> values. The default is <xref href=&quot;System.Xml.Schema.XmlSchemaDerivationMethod&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaType.Final*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.FinalResolved
  id: FinalResolved
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: FinalResolved
  nameWithType: XmlSchemaType.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaType.FinalResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the post-compilation value of the <xref:System.Xml.Schema.XmlSchemaType.Final*> property."
  remarks: "This value indicates how the type is restricted when the type is extended through restriction. If the type is marked as `final`, this type cannot be extended."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "The post-compilation value of the <xref:System.Xml.Schema.XmlSchemaType.Final*> property. The default is the <xref uid=&quot;langword_csharp_finalDefault&quot; name=&quot;finalDefault&quot; href=&quot;&quot;></xref> attribute value of the <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref> element."
  overload: System.Xml.Schema.XmlSchemaType.FinalResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)
  id: GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: GetBuiltInComplexType(XmlTypeCode)
  nameWithType: XmlSchemaType.GetBuiltInComplexType(XmlTypeCode)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(XmlTypeCode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returns an <xref href=&quot;System.Xml.Schema.XmlSchemaComplexType&quot;></xref> that represents the built-in complex type of the complex type specified."
  syntax:
    content: public static System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType (System.Xml.Schema.XmlTypeCode typeCode);
    parameters:
    - id: typeCode
      type: System.Xml.Schema.XmlTypeCode
      description: "One of the <xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;></xref> values representing the complex type."
    return:
      type: System.Xml.Schema.XmlSchemaComplexType
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaComplexType&quot;></xref> that represents the built-in complex type."
  overload: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)
  id: GetBuiltInComplexType(System.Xml.XmlQualifiedName)
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: GetBuiltInComplexType(XmlQualifiedName)
  nameWithType: XmlSchemaType.GetBuiltInComplexType(XmlQualifiedName)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returns an <xref href=&quot;System.Xml.Schema.XmlSchemaComplexType&quot;></xref> that represents the built-in complex type of the complex type specified by qualified name."
  syntax:
    content: public static System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType (System.Xml.XmlQualifiedName qualifiedName);
    parameters:
    - id: qualifiedName
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> of the complex type."
    return:
      type: System.Xml.Schema.XmlSchemaComplexType
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaComplexType&quot;></xref> that represents the built-in complex type."
  overload: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref:System.Xml.XmlQualifiedName> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)
  id: GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: GetBuiltInSimpleType(XmlTypeCode)
  nameWithType: XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returns an <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;></xref> that represents the built-in simple type of the specified simple type."
  remarks: "You cannot directly serialize the built-in type. If you need to serialize the type, create a new simple type which derives from the built-in type and serialize the simple type."
  example:
  - "The following example shows how to create the type and add it to the schema.  \n  \n [!code-vb[XmlSchemaType#1](~/add/codesnippet/visualbasic/9673f94d-cae3-4f8a-93ad-_1.vb)]\n [!code-cs[XmlSchemaType#1](~/add/codesnippet/csharp/9673f94d-cae3-4f8a-93ad-_1.cs)]"
  syntax:
    content: public static System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType (System.Xml.Schema.XmlTypeCode typeCode);
    parameters:
    - id: typeCode
      type: System.Xml.Schema.XmlTypeCode
      description: "One of the <xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;></xref> values representing the simple type."
    return:
      type: System.Xml.Schema.XmlSchemaSimpleType
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;></xref> that represents the built-in simple type."
  overload: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)
  id: GetBuiltInSimpleType(System.Xml.XmlQualifiedName)
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: GetBuiltInSimpleType(XmlQualifiedName)
  nameWithType: XmlSchemaType.GetBuiltInSimpleType(XmlQualifiedName)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returns an <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;></xref> that represents the built-in simple type of the simple type that is specified by the qualified name."
  remarks: "You cannot directly serialize the built-in type. If you need to serialize the type, create a new simple type which derives from the built-in type and serialize the simple type."
  example:
  - "The following example shows how to create the type and add it to the schema.  \n  \n [!code-vb[XmlSchemaType#1](~/add/codesnippet/visualbasic/ef089bf4-b246-469c-b6a4-_1.vb)]\n [!code-cs[XmlSchemaType#1](~/add/codesnippet/csharp/ef089bf4-b246-469c-b6a4-_1.cs)]"
  syntax:
    content: public static System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType (System.Xml.XmlQualifiedName qualifiedName);
    parameters:
    - id: qualifiedName
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> of the simple type."
    return:
      type: System.Xml.Schema.XmlSchemaSimpleType
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;></xref> that represents the built-in simple type."
  overload: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref:System.Xml.XmlQualifiedName> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)
  id: IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: IsDerivedFrom(XmlSchemaType,XmlSchemaType,XmlSchemaDerivationMethod)
  nameWithType: XmlSchemaType.IsDerivedFrom(XmlSchemaType,XmlSchemaType,XmlSchemaDerivationMethod)
  fullName: System.Xml.Schema.XmlSchemaType.IsDerivedFrom(XmlSchemaType,XmlSchemaType,XmlSchemaDerivationMethod)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Returns a value indicating if the derived schema type specified is derived from the base schema type specified"
  remarks: ''
  example:
  - "The following is an example of the IsDerivedFrom method.  \n  \n```c#  \nXmlSchemaType xsdInteger = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer);  \nXmlSchemaType xsdPositiveInteger = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger);  \n  \n// true  \nConsole.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.None));  \n  \n// false  \nConsole.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.Restriction));  \n```  \n  \n```vb#  \nDim xsdInteger As XmlSchemaType = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer)  \nDim xsdPositiveInteger As XmlSchemaType = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger)  \n  \n' True  \nConsole.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.None))  \n  \n' False  \nConsole.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.Restriction))  \n```"
  syntax:
    content: public static bool IsDerivedFrom (System.Xml.Schema.XmlSchemaType derivedType, System.Xml.Schema.XmlSchemaType baseType, System.Xml.Schema.XmlSchemaDerivationMethod except);
    parameters:
    - id: derivedType
      type: System.Xml.Schema.XmlSchemaType
      description: "The derived <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> to test."
    - id: baseType
      type: System.Xml.Schema.XmlSchemaType
      description: "The base <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> to test the derived <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> against."
    - id: except
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "One of the <xref href=&quot;System.Xml.Schema.XmlSchemaDerivationMethod&quot;></xref> values representing a type derivation method to exclude from testing."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the derived type is derived from the base type; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaType.IsDerivedFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.IsMixed
  id: IsMixed
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: IsMixed
  nameWithType: XmlSchemaType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaType.IsMixed
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets a value indicating if this type has a mixed content model. This property is only valid in a complex type."
  remarks: "This virtual method is overridden in derived classes."
  syntax:
    content: public virtual bool IsMixed { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the type has a mixed content model; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaType.IsMixed*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.Name
  id: Name
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: Name
  nameWithType: XmlSchemaType.Name
  fullName: System.Xml.Schema.XmlSchemaType.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the name of the type."
  remarks: "The name must be an no-colon name (NCName) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification. If specified, the name must be unique among all `simpleType` and `complexType` elements."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the type."
  overload: System.Xml.Schema.XmlSchemaType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.QualifiedName
  id: QualifiedName
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: QualifiedName
  nameWithType: XmlSchemaType.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaType.QualifiedName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the qualified name for the type built from the <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;></xref> attribute of this type. This is a post-schema-compilation property."
  syntax:
    content: public System.Xml.XmlQualifiedName QualifiedName { get; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> for the type built from the <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;></xref> attribute of this type."
  overload: System.Xml.Schema.XmlSchemaType.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaType.TypeCode
  id: TypeCode
  parent: System.Xml.Schema.XmlSchemaType
  langs:
  - csharp
  name: TypeCode
  nameWithType: XmlSchemaType.TypeCode
  fullName: System.Xml.Schema.XmlSchemaType.TypeCode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the <xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;></xref> of the type."
  syntax:
    content: public System.Xml.Schema.XmlTypeCode TypeCode { get; }
    return:
      type: System.Xml.Schema.XmlTypeCode
      description: "One of the <xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;></xref> values."
  overload: System.Xml.Schema.XmlSchemaType.TypeCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaAnnotated
  isExternal: false
  name: System.Xml.Schema.XmlSchemaAnnotated
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaType.#ctor
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: XmlSchemaType()
  nameWithType: XmlSchemaType.XmlSchemaType()
  fullName: System.Xml.Schema.XmlSchemaType.XmlSchemaType()
- uid: System.Xml.Schema.XmlSchemaType.BaseSchemaType
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: BaseSchemaType
  nameWithType: XmlSchemaType.BaseSchemaType
  fullName: System.Xml.Schema.XmlSchemaType.BaseSchemaType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: BaseXmlSchemaType
  nameWithType: XmlSchemaType.BaseXmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaType.Datatype
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: Datatype
  nameWithType: XmlSchemaType.Datatype
  fullName: System.Xml.Schema.XmlSchemaType.Datatype
- uid: System.Xml.Schema.XmlSchemaDatatype
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaType.DerivedBy
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: DerivedBy
  nameWithType: XmlSchemaType.DerivedBy
  fullName: System.Xml.Schema.XmlSchemaType.DerivedBy
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaType.Final
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: Final
  nameWithType: XmlSchemaType.Final
  fullName: System.Xml.Schema.XmlSchemaType.Final
- uid: System.Xml.Schema.XmlSchemaType.FinalResolved
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaType.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaType.FinalResolved
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: GetBuiltInComplexType(XmlTypeCode)
  nameWithType: XmlSchemaType.GetBuiltInComplexType(XmlTypeCode)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(XmlTypeCode)
- uid: System.Xml.Schema.XmlSchemaComplexType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType
  fullName: System.Xml.Schema.XmlSchemaComplexType
- uid: System.Xml.Schema.XmlTypeCode
  parent: System.Xml.Schema
  isExternal: false
  name: XmlTypeCode
  nameWithType: XmlTypeCode
  fullName: System.Xml.Schema.XmlTypeCode
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: GetBuiltInComplexType(XmlQualifiedName)
  nameWithType: XmlSchemaType.GetBuiltInComplexType(XmlQualifiedName)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: GetBuiltInSimpleType(XmlTypeCode)
  nameWithType: XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode)
- uid: System.Xml.Schema.XmlSchemaSimpleType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSimpleType
  nameWithType: XmlSchemaSimpleType
  fullName: System.Xml.Schema.XmlSchemaSimpleType
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: GetBuiltInSimpleType(XmlQualifiedName)
  nameWithType: XmlSchemaType.GetBuiltInSimpleType(XmlQualifiedName)
  fullName: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(XmlQualifiedName)
- uid: System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: IsDerivedFrom(XmlSchemaType,XmlSchemaType,XmlSchemaDerivationMethod)
  nameWithType: XmlSchemaType.IsDerivedFrom(XmlSchemaType,XmlSchemaType,XmlSchemaDerivationMethod)
  fullName: System.Xml.Schema.XmlSchemaType.IsDerivedFrom(XmlSchemaType,XmlSchemaType,XmlSchemaDerivationMethod)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaType.IsMixed
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaType.IsMixed
- uid: System.Xml.Schema.XmlSchemaType.Name
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: Name
  nameWithType: XmlSchemaType.Name
  fullName: System.Xml.Schema.XmlSchemaType.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaType.QualifiedName
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaType.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaType.QualifiedName
- uid: System.Xml.Schema.XmlSchemaType.TypeCode
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaType.TypeCode
  fullName: System.Xml.Schema.XmlSchemaType.TypeCode
- uid: System.Xml.Schema.XmlSchemaType.#ctor*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaType.BaseSchemaType*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: BaseSchemaType
  nameWithType: XmlSchemaType.BaseSchemaType
- uid: System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: BaseXmlSchemaType
  nameWithType: XmlSchemaType.BaseXmlSchemaType
- uid: System.Xml.Schema.XmlSchemaType.Datatype*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: Datatype
  nameWithType: XmlSchemaType.Datatype
- uid: System.Xml.Schema.XmlSchemaType.DerivedBy*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: DerivedBy
  nameWithType: XmlSchemaType.DerivedBy
- uid: System.Xml.Schema.XmlSchemaType.Final*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: Final
  nameWithType: XmlSchemaType.Final
- uid: System.Xml.Schema.XmlSchemaType.FinalResolved*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaType.FinalResolved
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: GetBuiltInComplexType
  nameWithType: XmlSchemaType.GetBuiltInComplexType
- uid: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: GetBuiltInSimpleType
  nameWithType: XmlSchemaType.GetBuiltInSimpleType
- uid: System.Xml.Schema.XmlSchemaType.IsDerivedFrom*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: IsDerivedFrom
  nameWithType: XmlSchemaType.IsDerivedFrom
- uid: System.Xml.Schema.XmlSchemaType.IsMixed*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaType.IsMixed
- uid: System.Xml.Schema.XmlSchemaType.Name*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: Name
  nameWithType: XmlSchemaType.Name
- uid: System.Xml.Schema.XmlSchemaType.QualifiedName*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaType.QualifiedName
- uid: System.Xml.Schema.XmlSchemaType.TypeCode*
  parent: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaType.TypeCode
