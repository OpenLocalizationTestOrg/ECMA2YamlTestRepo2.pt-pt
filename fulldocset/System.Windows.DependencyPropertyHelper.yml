### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyHelper
  id: DependencyPropertyHelper
  children:
  - System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  langs:
  - csharp
  name: DependencyPropertyHelper
  nameWithType: DependencyPropertyHelper
  fullName: System.Windows.DependencyPropertyHelper
  type: Class
  summary: "Fornece um método de programa auxiliar único (<xref:System.Windows.DependencyPropertyHelper.GetValueSource*>) que indica a origem de sistema de propriedade para o valor Efetivo de uma propriedade de dependência.</xref:System.Windows.DependencyPropertyHelper.GetValueSource*>"
  remarks: "O[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] propriedade sistema é relativamente complexo e baseia-se na rationalizing os valores que potencialmente ser proveniente de uma variedade de entradas, com base numa precedência da determinação de valor estabelecida. Porque estas origens potencialmente provir do código de tempo de execução, a partir do markup compilado, ou mesmo a partir de definições de utilizador de tempo de execução, pode ser útil de saber exatamente qual participante no sistema de valor de propriedade de dependência estabelecer o valor de obter ao chamar <xref:System.Windows.DependencyObject.GetValue%2A>durante a execução nessa propriedade.</xref:System.Windows.DependencyObject.GetValue%2A> Se o valor provém de uma origem diferente que pretendia, poderá ter de ajustar algum aspeto da sua aplicação. A origem de valor pode ser um estilo, um tema, um valor local, uma animação, um enlace ou um valor com base em tempo de execução, tais como definições de sistema através de temas ou recursos do sistema. Para obter mais informações, consulte [precedência de valor de propriedade de dependência](~/add/includes/ajax-current-ext-md.md).       Outro mecanismo que os relatórios na propriedade em geral, em vez de uma instância específica da propriedade de um objeto é os metadados de propriedade. Os metadados de propriedade são findable chamando <xref:System.Windows.DependencyProperty.GetMetadata%2A>e examinar o devolvido <xref:System.Windows.PropertyMetadata>(ou uma das várias classes derivadas possíveis castable para que os metadados da propriedade devolvido).</xref:System.Windows.PropertyMetadata> </xref:System.Windows.DependencyProperty.GetMetadata%2A>"
  syntax:
    content: public static class DependencyPropertyHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.DependencyPropertyHelper
  langs:
  - csharp
  name: GetValueSource(DependencyObject,DependencyProperty)
  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve uma estrutura que comunica vários metadados e propriedade sistema as características de uma propriedade de dependência especificado numa determinada <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "Deve chamar este método num contexto de forma a que o enlace tardio participantes na determinação de valor de propriedade são capazes agir sobre uma propriedade. Por exemplo, os enlaces poderão não estar ativos uma propriedade, a menos que são carregados todos os elementos de participante na árvore de elemento e o enlace assíncrono é propagado e o objeto de origem do enlace está ligado. Da mesma forma, recursos, incluindo todos os dicionários de tema necessário devem estar disponíveis."
  syntax:
    content: public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "O elemento que contém o `dependencyProperty` para informações de relatório."
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "O identificador para a propriedade de dependência para informações de relatório."
    return:
      type: System.Windows.ValueSource
      description: "A <xref href=&quot;System.Windows.ValueSource&quot;> </xref> estrutura que reporta a informações específicas."
  overload: System.Windows.DependencyPropertyHelper.GetValueSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.DependencyPropertyHelper
  isExternal: false
  name: GetValueSource(DependencyObject,DependencyProperty)
  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.DependencyPropertyHelper.GetValueSource*
  parent: System.Windows.DependencyPropertyHelper
  isExternal: false
  name: GetValueSource
  nameWithType: DependencyPropertyHelper.GetValueSource
