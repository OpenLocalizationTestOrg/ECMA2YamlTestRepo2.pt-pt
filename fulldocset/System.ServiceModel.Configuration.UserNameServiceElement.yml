### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.UserNameServiceElement
  id: UserNameServiceElement
  children:
  - System.ServiceModel.Configuration.UserNameServiceElement.#ctor
  - System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime
  - System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens
  - System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)
  - System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType
  - System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups
  - System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens
  - System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName
  - System.ServiceModel.Configuration.UserNameServiceElement.Properties
  - System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode
  langs:
  - csharp
  name: UserNameServiceElement
  nameWithType: UserNameServiceElement
  fullName: System.ServiceModel.Configuration.UserNameServiceElement
  type: Class
  summary: "Represents a configuration element that specifies a service&quot;s credentials based on username and password. This class cannot be inherited."
  syntax:
    content: 'public sealed class UserNameServiceElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: UserNameServiceElement()
  nameWithType: UserNameServiceElement.UserNameServiceElement()
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNameServiceElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.UserNameServiceElement&quot;></xref> class."
  syntax:
    content: public UserNameServiceElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.UserNameServiceElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime
  id: CachedLogonTokenLifetime
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: CachedLogonTokenLifetime
  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum length of time a token is cached."
  syntax:
    content: public TimeSpan CachedLogonTokenLifetime { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the maximum length of time a token is cached`.`"
  overload: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens
  id: CacheLogonTokens
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: CacheLogonTokens
  nameWithType: UserNameServiceElement.CacheLogonTokens
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that indicates whether logon tokens are cached."
  syntax:
    content: public bool CacheLogonTokens { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if logon tokens are cached; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)
  id: Copy(System.ServiceModel.Configuration.UserNameServiceElement)
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: Copy(UserNameServiceElement)
  nameWithType: UserNameServiceElement.Copy(UserNameServiceElement)
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Copy(UserNameServiceElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Copies the content of the specified configuration element to this configuration element."
  syntax:
    content: public void Copy (System.ServiceModel.Configuration.UserNameServiceElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.UserNameServiceElement
      description: "The configuration element to be copied."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.Copy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration file is read-only."
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType
  id: CustomUserNamePasswordValidatorType
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: CustomUserNamePasswordValidatorType
  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the type of custom username password validator used."
  syntax:
    content: public string CustomUserNamePasswordValidatorType { get; set; }
    return:
      type: System.String
      description: "The type of custom username password validator used."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups
  id: IncludeWindowsGroups
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: IncludeWindowsGroups
  nameWithType: UserNameServiceElement.IncludeWindowsGroups
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that indicates whether Windows groups are included in the security context."
  remarks: "Setting this property to `true` has a performance impact as it results in a full group expansion. Set this property to `false` if you do not need to establish the list of groups a user belongs to."
  syntax:
    content: public bool IncludeWindowsGroups { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if Windows groups are included in the security context; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens
  id: MaxCachedLogonTokens
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: MaxCachedLogonTokens
  nameWithType: UserNameServiceElement.MaxCachedLogonTokens
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum number of logon tokens to cache."
  syntax:
    content: public int MaxCachedLogonTokens { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of logon tokens to cache."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName
  id: MembershipProviderName
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: MembershipProviderName
  nameWithType: UserNameServiceElement.MembershipProviderName
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a string that specifies the name of a member provider that provides password validation logic."
  remarks: "When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default. It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic."
  syntax:
    content: public string MembershipProviderName { get; set; }
    return:
      type: System.String
      description: "The name of a member provider that provides password validation logic."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: Properties
  nameWithType: UserNameServiceElement.Properties
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode
  id: UserNamePasswordValidationMode
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  langs:
  - csharp
  name: UserNamePasswordValidationMode
  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the manner in which username password is validated."
  syntax:
    content: public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }
    return:
      type: System.ServiceModel.Security.UserNamePasswordValidationMode
      description: "A valid <xref href=&quot;System.ServiceModel.Security.UserNamePasswordValidationMode&quot;></xref> value."
  overload: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: UserNameServiceElement()
  nameWithType: UserNameServiceElement.UserNameServiceElement()
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNameServiceElement()
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: CachedLogonTokenLifetime
  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: CacheLogonTokens
  nameWithType: UserNameServiceElement.CacheLogonTokens
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: Copy(UserNameServiceElement)
  nameWithType: UserNameServiceElement.Copy(UserNameServiceElement)
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Copy(UserNameServiceElement)
- uid: System.ServiceModel.Configuration.UserNameServiceElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: UserNameServiceElement
  nameWithType: UserNameServiceElement
  fullName: System.ServiceModel.Configuration.UserNameServiceElement
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: CustomUserNamePasswordValidatorType
  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: IncludeWindowsGroups
  nameWithType: UserNameServiceElement.IncludeWindowsGroups
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups
- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: MaxCachedLogonTokens
  nameWithType: UserNameServiceElement.MaxCachedLogonTokens
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: MembershipProviderName
  nameWithType: UserNameServiceElement.MembershipProviderName
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName
- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: Properties
  nameWithType: UserNameServiceElement.Properties
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: UserNamePasswordValidationMode
  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode
  fullName: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode
- uid: System.ServiceModel.Security.UserNamePasswordValidationMode
  parent: System.ServiceModel.Security
  isExternal: false
  name: UserNamePasswordValidationMode
  nameWithType: UserNamePasswordValidationMode
  fullName: System.ServiceModel.Security.UserNamePasswordValidationMode
- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: UserNameServiceElement
  nameWithType: UserNameServiceElement.UserNameServiceElement
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: CachedLogonTokenLifetime
  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: CacheLogonTokens
  nameWithType: UserNameServiceElement.CacheLogonTokens
- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: Copy
  nameWithType: UserNameServiceElement.Copy
- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: CustomUserNamePasswordValidatorType
  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType
- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: IncludeWindowsGroups
  nameWithType: UserNameServiceElement.IncludeWindowsGroups
- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: MaxCachedLogonTokens
  nameWithType: UserNameServiceElement.MaxCachedLogonTokens
- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: MembershipProviderName
  nameWithType: UserNameServiceElement.MembershipProviderName
- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: Properties
  nameWithType: UserNameServiceElement.Properties
- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode*
  parent: System.ServiceModel.Configuration.UserNameServiceElement
  isExternal: false
  name: UserNamePasswordValidationMode
  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode
