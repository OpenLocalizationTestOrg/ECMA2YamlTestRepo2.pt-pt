### YamlMime:ManagedReference
items:
- uid: System.Messaging.BinaryMessageFormatter
  id: BinaryMessageFormatter
  children:
  - System.Messaging.BinaryMessageFormatter.#ctor
  - System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  - System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.Clone
  - System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.TopObjectFormat
  - System.Messaging.BinaryMessageFormatter.TypeFormat
  - System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter
  fullName: System.Messaging.BinaryMessageFormatter
  type: Class
  summary: "Serializa ou deserializes um objeto ou um gráfico completo dos objetos ligados, de ou para o corpo de uma mensagem de colocação de mensagens em fila, utilizando um formato binário."
  remarks: "O BinaryMessageFormatter é muito eficiente e pode ser utilizado para serializar maior parte dos objetos. O resultado é muito compact e rápido para analisar, mas não permite para aproximadamente ligado conjugados mensagens como o <xref:System.Messaging.XmlMessageFormatter>does.</xref:System.Messaging.XmlMessageFormatter> Aproximadamente ligado conjugadas significa que o cliente e o servidor independentemente podem versão o tipo que seja enviado e recebido.       Quando a aplicação envia uma mensagem para a fila utilizando uma instância do <xref:System.Messaging.MessageQueue>classe, o formatador serializa o objeto para uma transmissão em fluxo e insere-lo no corpo da mensagem.</xref:System.Messaging.MessageQueue> Ao ler a partir de uma fila utilizando um <xref:System.Messaging.MessageQueue>o formatador deserializes os dados da mensagem para a <xref:System.Messaging.Message.Body%2A>propriedade de <xref:System.Messaging.Message>.</xref:System.Messaging.Message> </xref:System.Messaging.Message.Body%2A> </xref:System.Messaging.MessageQueue>       BinaryMessageFormatter fornece débito mais rápido do que o <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> Utilize o BinaryMessageFormatter quando velocidade pura em vez de aproximadamente ligado conjugados mensagens for pretendida."
  example:
  - >-
    [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/t-system.messaging.binar_1.cpp)]
     [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/t-system.messaging.binar_1.cs)]
     [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/t-system.messaging.binar_1.vb)]
  syntax:
    content: 'public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> classe sem especificar um estilo de tipo ou o estilo de assemblagem do objecto de nível superior."
  remarks: "Tem de especificar valores para o <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>propriedade (que define o modo como o objeto de raiz num gráfico é disposto) e o <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>propriedade (que define a forma como as descrições de tipo de objeto são apresentadas) antes de utilizar uma instância do <xref:System.Messaging.BinaryMessageFormatter>classe para serializar e enviar uma mensagem.</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>"
  syntax:
    content: public BinaryMessageFormatter ();
    parameters: []
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  id: '#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> classe, especificando os formatos de objeto raiz e as descrições de tipo."
  syntax:
    content: public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);
    parameters:
    - id: topObjectFormat
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "Determina a forma como o objeto superior (raiz) de um gráfico é apresentado no fluxo serializado."
    - id: typeFormat
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "Determina a forma como as descrições de tipo são apresentadas no fluxo serializado."
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Determina se o formatador pode anular a serialização o conteúdo da mensagem."
  remarks: "CanRead devolve `false` se o corpo da mensagem não é um objeto binário.       No computador de receção, CanRead devolve `true` se a assemblagem para a classe cuja serialização será anulada existe localmente. A assemblagem deve estar presente na cache de assemblagem global ou ser ligada à aplicação (por exemplo, se o objeto representa uma classe personalizada)."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "O <xref href=&quot;System.Messaging.Message&quot;> </xref> inspecionar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o formatador de mensagem binária pode anular a serialização da mensagem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.BinaryMessageFormatter.CanRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Cria uma instância do <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> classe cuja leitura/escrita propriedades (de raiz objeto e do tipo Descrição formatos) são os mesmos que atual <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>."
  remarks: "Este método cria uma cópia da formatador e inicializa a todas as suas propriedades para os valores de <xref:System.Messaging.BinaryMessageFormatter>.</xref:System.Messaging.BinaryMessageFormatter> É utilizado para escalabilidade, mas não garante a leitura ou escrita segurança de thread."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um objeto cujas propriedades são idênticas deste <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>, mas cujo metadados não especifica que seja uma instância de classe formatador."
  overload: System.Messaging.BinaryMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Lê o conteúdo da mensagem especificada e cria um objeto que contém a mensagem de serialização anulada."
  remarks: "> [!IMPORTANT]> Chamar este método com dados não fidedignos é um risco de segurança. Chame este método apenas com dados fidedignos. Para obter mais informações, consulte [riscos de segurança de dados não fidedignos](http://go.microsoft.com/fwlink/?LinkId=330378).       O corpo da mensagem tem de estar no formato binário e o serializador mesmo tem de ser utilizado para anular a serialização da mensagem que inicialmente serializado-lo. Se o corpo representa uma classe personalizada, a assemblagem para essa classe tem de existir localmente."
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "O <xref href=&quot;System.Messaging.Message&quot;> </xref>, no formato binário, anular a serialização."
    return:
      type: System.Object
      description: "A mensagem de serialização anulada."
  overload: System.Messaging.BinaryMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A mensagem <xref:System.Messaging.Message.BodyType*>propriedade não indicar um objecto binário.</xref:System.Messaging.Message.BodyType*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  id: TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um valor que define a forma como o objeto superior (raiz) de um gráfico é anular a serialização relativamente a localizar e carregar a assemblagem."
  remarks: "Atualmente, deve aceitar o valor predefinido, `AssemblyStyle`."
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "Um do <xref href=&quot;System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&quot;> </xref> valores que define o comportamento de anulação da serialização."
  overload: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  id: TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um valor que define a forma como as descrições de tipo são apresentadas no fluxo serializado."
  remarks: "Atualmente, deve aceitar o valor predefinido, `TypesWhenNeeded`."
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "A <xref href=&quot;System.Runtime.Serialization.Formatters.FormatterTypeStyle&quot;> </xref> que define o tipo de formato da descrição."
  overload: System.Messaging.BinaryMessageFormatter.TypeFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Serializa um objeto para o corpo da mensagem."
  remarks: "O formato de objecto de nível superior e o formato de tipo não tem de ser especificados ao escrever para a fila, conforme necessário durante a leitura. O <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>e <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>Propriedades apenas são utilizadas pelo formatador quando anular a serialização de uma mensagem.</xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>       O <xref:System.Messaging.BinaryMessageFormatter>pode serializar a maior parte dos objetos, mas o resultado não está integrado aproximadamente ligado.</xref:System.Messaging.BinaryMessageFormatter> No entanto, é compact, pelo formatador é eficiente de objetos grandes."
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "O <xref href=&quot;System.Messaging.Message&quot;> </xref> cujo <xref:System.Messaging.Message.Body*>propriedade irá conter o objeto serializado.</xref:System.Messaging.Message.Body*>"
    - id: obj
      type: System.Object
      description: "O objeto a ser serializado para o corpo da mensagem."
  overload: System.Messaging.BinaryMessageFormatter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
- uid: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterAssemblyStyle
  nameWithType: FormatterAssemblyStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
- uid: System.Runtime.Serialization.Formatters.FormatterTypeStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterTypeStyle
  nameWithType: FormatterTypeStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterTypeStyle
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.BinaryMessageFormatter.Clone
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
- uid: System.Messaging.BinaryMessageFormatter.#ctor*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter
- uid: System.Messaging.BinaryMessageFormatter.CanRead*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: BinaryMessageFormatter.CanRead
- uid: System.Messaging.BinaryMessageFormatter.Clone*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: BinaryMessageFormatter.Clone
- uid: System.Messaging.BinaryMessageFormatter.Read*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read
  nameWithType: BinaryMessageFormatter.Read
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write
  nameWithType: BinaryMessageFormatter.Write
