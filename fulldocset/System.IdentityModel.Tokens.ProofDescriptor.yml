### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.ProofDescriptor
  id: ProofDescriptor
  children:
  - System.IdentityModel.Tokens.ProofDescriptor.#ctor
  - System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  - System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier
  langs:
  - csharp
  name: ProofDescriptor
  nameWithType: ProofDescriptor
  fullName: System.IdentityModel.Tokens.ProofDescriptor
  type: Class
  summary: "A classe base para o <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> e <xref href=&quot;System.IdentityModel.Tokens.AsymmetricProofDescriptor&quot;> </xref> classes."
  syntax:
    content: public abstract class ProofDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ProofDescriptor.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.ProofDescriptor
  langs:
  - csharp
  name: ProofDescriptor()
  nameWithType: ProofDescriptor.ProofDescriptor()
  fullName: System.IdentityModel.Tokens.ProofDescriptor.ProofDescriptor()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Chamado a partir de construtores em classes derivadas para inicializar o <xref href=&quot;System.IdentityModel.Tokens.ProofDescriptor&quot;> </xref> classe."
  syntax:
    content: protected ProofDescriptor ();
    parameters: []
  overload: System.IdentityModel.Tokens.ProofDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  id: ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.ProofDescriptor
  langs:
  - csharp
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Define as propriedades adequadas no RSTR, de acordo com as propriedades da instância atual do descritor de prova."
  syntax:
    content: public abstract void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);
    parameters:
    - id: response
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "O objeto RSTR a ser modificado por este descritor de prova."
  overload: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier
  id: KeyIdentifier
  parent: System.IdentityModel.Tokens.ProofDescriptor
  langs:
  - csharp
  name: KeyIdentifier
  nameWithType: ProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Quando implementada numa classe derivada, obtém o identificador da chave que pode ser utilizado dentro de tokens emitidos para definir a chave."
  remarks: "A chave pode ser simétrico ou assimétrico. Se a chave simétrica, o identificador é, normalmente, o segredo binário ou chave encriptada. Se a chave assimétrica, o identificador é, normalmente, o identificador da chave do `<wst:UseKey>` elemento dentro de um `wst:RequestSecurityToken` mensagem (RST); a chave pública."
  syntax:
    content: public abstract System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "O identificador da chave."
  overload: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.ProofDescriptor.#ctor
  parent: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: ProofDescriptor()
  nameWithType: ProofDescriptor.ProofDescriptor()
  fullName: System.IdentityModel.Tokens.ProofDescriptor.ProofDescriptor()
- uid: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier
  parent: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: ProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.ProofDescriptor.#ctor*
  parent: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: ProofDescriptor
  nameWithType: ProofDescriptor.ProofDescriptor
- uid: System.IdentityModel.Tokens.ProofDescriptor.ApplyTo*
  parent: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: ApplyTo
  nameWithType: ProofDescriptor.ApplyTo
- uid: System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier*
  parent: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: ProofDescriptor.KeyIdentifier
