### YamlMime:ManagedReference
items:
- uid: System.Activities.WorkflowApplicationInstance
  id: WorkflowApplicationInstance
  children:
  - System.Activities.WorkflowApplicationInstance.Abandon
  - System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)
  - System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)
  - System.Activities.WorkflowApplicationInstance.DefinitionIdentity
  - System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)
  - System.Activities.WorkflowApplicationInstance.InstanceId
  - System.Activities.WorkflowApplicationInstance.InstanceStore
  langs:
  - csharp
  name: WorkflowApplicationInstance
  nameWithType: WorkflowApplicationInstance
  fullName: System.Activities.WorkflowApplicationInstance
  type: Class
  summary: "Specifies information about a workflow application instance."
  remarks: "This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.       [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].       [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.       [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.       [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint.       [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.       [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition."
  syntax:
    content: public class WorkflowApplicationInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.Abandon
  id: Abandon
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: Abandon()
  nameWithType: WorkflowApplicationInstance.Abandon()
  fullName: System.Activities.WorkflowApplicationInstance.Abandon()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Causes the state machine to transition to the abandoned state."
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Activities.WorkflowApplicationInstance.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)
  id: Abandon(System.TimeSpan)
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: Abandon(TimeSpan)
  nameWithType: WorkflowApplicationInstance.Abandon(TimeSpan)
  fullName: System.Activities.WorkflowApplicationInstance.Abandon(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Causes the state machine to transition to the abandoned state with the specified timeout value."
  syntax:
    content: public void Abandon (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation complete."
  overload: System.Activities.WorkflowApplicationInstance.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)
  id: BeginAbandon(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: BeginAbandon(AsyncCallback,Object)
  nameWithType: WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Begins an asynchronous abandon operation."
  syntax:
    content: public IAsyncResult BeginAbandon (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "The user-defined state data."
    return:
      type: System.IAsyncResult
      description: "An asynchronous abandon operation."
  overload: System.Activities.WorkflowApplicationInstance.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Begins an asynchronous abandon operation."
  syntax:
    content: public IAsyncResult BeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout that contains the reason for the abandon operation."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "The user-defined state data."
    return:
      type: System.IAsyncResult
      description: "An asynchronous abandon operation."
  overload: System.Activities.WorkflowApplicationInstance.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)
  id: CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)
  nameWithType: WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)
  fullName: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a value that indicates whether the WorkflowApplicationInstance can apply update."
  syntax:
    content: public bool CanApplyUpdate (System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, out System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate> activitiesBlockingUpdate);
    parameters:
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "Updates a map."
    - id: activitiesBlockingUpdate
      type: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
      description: "The activities blocking update."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the WorkflowApplicationInstance can apply update; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.WorkflowApplicationInstance.CanApplyUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.DefinitionIdentity
  id: DefinitionIdentity
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: DefinitionIdentity
  nameWithType: WorkflowApplicationInstance.DefinitionIdentity
  fullName: System.Activities.WorkflowApplicationInstance.DefinitionIdentity
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets or sets the definition identity of the workflow."
  syntax:
    content: public System.Activities.WorkflowIdentity DefinitionIdentity { get; }
    return:
      type: System.Activities.WorkflowIdentity
      description: "The definition identity of the workflow."
  overload: System.Activities.WorkflowApplicationInstance.DefinitionIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)
  id: EndAbandon(System.IAsyncResult)
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: EndAbandon(IAsyncResult)
  nameWithType: WorkflowApplicationInstance.EndAbandon(IAsyncResult)
  fullName: System.Activities.WorkflowApplicationInstance.EndAbandon(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Completes an asynchronous abandon operation."
  syntax:
    content: public void EndAbandon (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "The IAsyncResult returned by a call to one of the BeginAbandon methods."
  overload: System.Activities.WorkflowApplicationInstance.EndAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.InstanceId
  id: InstanceId
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: InstanceId
  nameWithType: WorkflowApplicationInstance.InstanceId
  fullName: System.Activities.WorkflowApplicationInstance.InstanceId
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the unique identifier of the workflow instance."
  syntax:
    content: public Guid InstanceId { get; }
    return:
      type: System.Guid
      description: "The unique identifier of the workflow instance."
  overload: System.Activities.WorkflowApplicationInstance.InstanceId*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowApplicationInstance.InstanceStore
  id: InstanceStore
  parent: System.Activities.WorkflowApplicationInstance
  langs:
  - csharp
  name: InstanceStore
  nameWithType: WorkflowApplicationInstance.InstanceStore
  fullName: System.Activities.WorkflowApplicationInstance.InstanceStore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets or sets an object that provides access to the persisted state of the current instance of the workflow application."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceStore
      description: "An object that provides access to the persisted state of the current instance of the workflow application."
  overload: System.Activities.WorkflowApplicationInstance.InstanceStore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.WorkflowApplicationInstance.Abandon
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: Abandon()
  nameWithType: WorkflowApplicationInstance.Abandon()
  fullName: System.Activities.WorkflowApplicationInstance.Abandon()
- uid: System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: Abandon(TimeSpan)
  nameWithType: WorkflowApplicationInstance.Abandon(TimeSpan)
  fullName: System.Activities.WorkflowApplicationInstance.Abandon(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: BeginAbandon(AsyncCallback,Object)
  nameWithType: WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.WorkflowApplicationInstance.BeginAbandon(TimeSpan,AsyncCallback,Object)
- uid: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)
  nameWithType: WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)
  fullName: System.Activities.WorkflowApplicationInstance.CanApplyUpdate(DynamicUpdateMap,IList<ActivityBlockingUpdate>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.DynamicUpdate.DynamicUpdateMap
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: DynamicUpdateMap
  nameWithType: DynamicUpdateMap
  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap
- uid: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ActivityBlockingUpdate>
  nameWithType: IList<ActivityBlockingUpdate>
  fullName: System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate
    name: ActivityBlockingUpdate
    nameWithType: ActivityBlockingUpdate
    fullName: ActivityBlockingUpdate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowApplicationInstance.DefinitionIdentity
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowApplicationInstance.DefinitionIdentity
  fullName: System.Activities.WorkflowApplicationInstance.DefinitionIdentity
- uid: System.Activities.WorkflowIdentity
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentity
  nameWithType: WorkflowIdentity
  fullName: System.Activities.WorkflowIdentity
- uid: System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: EndAbandon(IAsyncResult)
  nameWithType: WorkflowApplicationInstance.EndAbandon(IAsyncResult)
  fullName: System.Activities.WorkflowApplicationInstance.EndAbandon(IAsyncResult)
- uid: System.Activities.WorkflowApplicationInstance.InstanceId
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: InstanceId
  nameWithType: WorkflowApplicationInstance.InstanceId
  fullName: System.Activities.WorkflowApplicationInstance.InstanceId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.WorkflowApplicationInstance.InstanceStore
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: InstanceStore
  nameWithType: WorkflowApplicationInstance.InstanceStore
  fullName: System.Activities.WorkflowApplicationInstance.InstanceStore
- uid: System.Runtime.DurableInstancing.InstanceStore
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceStore
  nameWithType: InstanceStore
  fullName: System.Runtime.DurableInstancing.InstanceStore
- uid: System.Activities.WorkflowApplicationInstance.Abandon*
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: Abandon
  nameWithType: WorkflowApplicationInstance.Abandon
- uid: System.Activities.WorkflowApplicationInstance.BeginAbandon*
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: BeginAbandon
  nameWithType: WorkflowApplicationInstance.BeginAbandon
- uid: System.Activities.WorkflowApplicationInstance.CanApplyUpdate*
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: CanApplyUpdate
  nameWithType: WorkflowApplicationInstance.CanApplyUpdate
- uid: System.Activities.WorkflowApplicationInstance.DefinitionIdentity*
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowApplicationInstance.DefinitionIdentity
- uid: System.Activities.WorkflowApplicationInstance.EndAbandon*
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: EndAbandon
  nameWithType: WorkflowApplicationInstance.EndAbandon
- uid: System.Activities.WorkflowApplicationInstance.InstanceId*
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: InstanceId
  nameWithType: WorkflowApplicationInstance.InstanceId
- uid: System.Activities.WorkflowApplicationInstance.InstanceStore*
  parent: System.Activities.WorkflowApplicationInstance
  isExternal: false
  name: InstanceStore
  nameWithType: WorkflowApplicationInstance.InstanceStore
