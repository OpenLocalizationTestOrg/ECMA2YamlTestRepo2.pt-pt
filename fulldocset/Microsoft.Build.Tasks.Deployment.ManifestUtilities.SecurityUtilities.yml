### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  id: SecurityUtilities
  children:
  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])
  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])
  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)
  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)
  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)
  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)
  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)
  langs:
  - csharp
  name: SecurityUtilities
  nameWithType: SecurityUtilities
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  type: Class
  summary: "Provides a set of utility functions for manipulating security permision sets and signing."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public static class SecurityUtilities
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])
  id: ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  langs:
  - csharp
  name: ComputeZonePermissionSet(String,PermissionSet,String[])
  nameWithType: SecurityUtilities.ComputeZonePermissionSet(String,PermissionSet,String[])
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(String,PermissionSet,String[])
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  summary: "Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions."
  syntax:
    content: public static System.Security.PermissionSet ComputeZonePermissionSet (string targetZone, System.Security.PermissionSet includedPermissionSet, string[] excludedPermissions);
    parameters:
    - id: targetZone
      type: System.String
      description: "Specifies a zone default permission set, which is obtained from machine policy. Valid values are <xref uid=&quot;langword_csharp_Internet&quot; name=&quot;Internet&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_LocalIntranet&quot; name=&quot;LocalIntranet&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Custom&quot; name=&quot;Custom&quot; href=&quot;&quot;></xref>. If <xref uid=&quot;langword_csharp_Custom&quot; name=&quot;Custom&quot; href=&quot;&quot;></xref> is specified, the generated permission set is based only on the `includedPermissionSet` parameter."
    - id: includedPermissionSet
      type: System.Security.PermissionSet
      description: "A <xref:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet*> object containing the set of permissions to be explicitly included in the generated permission set. Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of `targetZone` or `excludedPermissions` parameters."
    - id: excludedPermissions
      type: System.String[]
      description: "An array of permission identity strings to be excluded from the zone default permission set. Permission identity strings can be computed using the <xref:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList*> method. This parameter is ignored if `targetZone` is not <xref uid=&quot;langword_csharp_Internet&quot; name=&quot;Internet&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_LocalIntranet&quot; name=&quot;LocalIntranet&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Security.PermissionSet
      description: "Returns the generated permission set."
  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])
  id: IdentityListToPermissionSet(System.String[])
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  langs:
  - csharp
  name: IdentityListToPermissionSet(String[])
  nameWithType: SecurityUtilities.IdentityListToPermissionSet(String[])
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(String[])
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  summary: "Converts an array of permission identity strings to a permission set object."
  syntax:
    content: public static System.Security.PermissionSet IdentityListToPermissionSet (string[] ids);
    parameters:
    - id: ids
      type: System.String[]
      description: "An array of permission identity strings."
    return:
      type: System.Security.PermissionSet
      description: "Returns the converted permission set."
  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)
  id: PermissionSetToIdentityList(System.Security.PermissionSet)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  langs:
  - csharp
  name: PermissionSetToIdentityList(PermissionSet)
  nameWithType: SecurityUtilities.PermissionSetToIdentityList(PermissionSet)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(PermissionSet)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  summary: "Converts a permission set object to an array of permission identity strings."
  syntax:
    content: public static string[] PermissionSetToIdentityList (System.Security.PermissionSet permissionSet);
    parameters:
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "The input permission set to be converted."
    return:
      type: System.String[]
      description: "Returns an array of permission identity strings."
  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)
  id: SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  langs:
  - csharp
  name: SignFile(X509Certificate2,Uri,String)
  nameWithType: SecurityUtilities.SignFile(X509Certificate2,Uri,String)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(X509Certificate2,Uri,String)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  summary: "Signs a ClickOnce manifest or PE file."
  remarks: "This function can only sign a PE file if the X509Certificate2 parameter represents a certificate in the current user&quot;s personal certificate store.       This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] to be installed."
  syntax:
    content: public static void SignFile (System.Security.Cryptography.X509Certificates.X509Certificate2 cert, Uri timestampUrl, string path);
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "The certificate to be used to sign the file."
    - id: timestampUrl
      type: System.Uri
      description: "Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp."
    - id: path
      type: System.String
      description: "The name of the file to sign."
  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)
  id: SignFile(System.String,System.Uri,System.String)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  langs:
  - csharp
  name: SignFile(String,Uri,String)
  nameWithType: SecurityUtilities.SignFile(String,Uri,String)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(String,Uri,String)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  summary: "Signs a ClickOnce manifest or PE file."
  remarks: "This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] to be installed."
  syntax:
    content: public static void SignFile (string certThumbprint, Uri timestampUrl, string path);
    parameters:
    - id: certThumbprint
      type: System.String
      description: "Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store."
    - id: timestampUrl
      type: System.Uri
      description: "Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp."
    - id: path
      type: System.String
      description: "The name of the file to sign."
  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)
  id: SignFile(System.String,System.Security.SecureString,System.Uri,System.String)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  langs:
  - csharp
  name: SignFile(String,SecureString,Uri,String)
  nameWithType: SecurityUtilities.SignFile(String,SecureString,Uri,String)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(String,SecureString,Uri,String)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  summary: "Signs a ClickOnce manifest."
  remarks: "This function is only for signing a manifest, not a PE file."
  syntax:
    content: public static void SignFile (string certPath, System.Security.SecureString certPassword, Uri timestampUrl, string path);
    parameters:
    - id: certPath
      type: System.String
      description: "The certificate to be used to sign the file. The certificate must contain a private key. The <xref uid=&quot;langword_csharp_KeyUsage&quot; name=&quot;KeyUsage&quot; href=&quot;&quot;></xref> extension is optional, but if it is present, <xref uid=&quot;langword_csharp_DigitalSignature&quot; name=&quot;DigitalSignature&quot; href=&quot;&quot;></xref> must be set to <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>. The <xref uid=&quot;langword_csharp_EnhancedKeyUsage&quot; name=&quot;EnhancedKeyUsage&quot; href=&quot;&quot;></xref> extension is also optional, but if it is present, the certificate must contain object identifier (OID) support."
    - id: certPassword
      type: System.Security.SecureString
      description: "The certificate password."
    - id: timestampUrl
      type: System.Uri
      description: "Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp."
    - id: path
      type: System.String
      description: "The name of the file to sign."
  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)
  id: XmlToPermissionSet(System.Xml.XmlElement)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  langs:
  - csharp
  name: XmlToPermissionSet(XmlElement)
  nameWithType: SecurityUtilities.XmlToPermissionSet(XmlElement)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(XmlElement)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities
  summary: "Converts an XML element to a permission set object."
  remarks: "Converts an <xref:System.Xml.XmlElement> object to a <xref:System.Security.PermissionSet> object."
  syntax:
    content: public static System.Security.PermissionSet XmlToPermissionSet (System.Xml.XmlElement element);
    parameters:
    - id: element
      type: System.Xml.XmlElement
      description: "An XML representation of the permission set."
    return:
      type: System.Security.PermissionSet
      description: "The converted permission set object."
  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: ComputeZonePermissionSet(String,PermissionSet,String[])
  nameWithType: SecurityUtilities.ComputeZonePermissionSet(String,PermissionSet,String[])
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(String,PermissionSet,String[])
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: IdentityListToPermissionSet(String[])
  nameWithType: SecurityUtilities.IdentityListToPermissionSet(String[])
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(String[])
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: PermissionSetToIdentityList(PermissionSet)
  nameWithType: SecurityUtilities.PermissionSetToIdentityList(PermissionSet)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(PermissionSet)
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: SignFile(X509Certificate2,Uri,String)
  nameWithType: SecurityUtilities.SignFile(X509Certificate2,Uri,String)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(X509Certificate2,Uri,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: SignFile(String,Uri,String)
  nameWithType: SecurityUtilities.SignFile(String,Uri,String)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(String,Uri,String)
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: SignFile(String,SecureString,Uri,String)
  nameWithType: SecurityUtilities.SignFile(String,SecureString,Uri,String)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(String,SecureString,Uri,String)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: XmlToPermissionSet(XmlElement)
  nameWithType: SecurityUtilities.XmlToPermissionSet(XmlElement)
  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet*
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: ComputeZonePermissionSet
  nameWithType: SecurityUtilities.ComputeZonePermissionSet
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet*
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: IdentityListToPermissionSet
  nameWithType: SecurityUtilities.IdentityListToPermissionSet
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList*
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: PermissionSetToIdentityList
  nameWithType: SecurityUtilities.PermissionSetToIdentityList
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: SignFile
  nameWithType: SecurityUtilities.SignFile
- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet*
  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities
  isExternal: false
  name: XmlToPermissionSet
  nameWithType: SecurityUtilities.XmlToPermissionSet
