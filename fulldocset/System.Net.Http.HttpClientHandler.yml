### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpClientHandler
  id: HttpClientHandler
  children:
  - System.Net.Http.HttpClientHandler.#ctor
  - System.Net.Http.HttpClientHandler.AllowAutoRedirect
  - System.Net.Http.HttpClientHandler.AutomaticDecompression
  - System.Net.Http.HttpClientHandler.ClientCertificateOptions
  - System.Net.Http.HttpClientHandler.CookieContainer
  - System.Net.Http.HttpClientHandler.Credentials
  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  - System.Net.Http.HttpClientHandler.PreAuthenticate
  - System.Net.Http.HttpClientHandler.Proxy
  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  - System.Net.Http.HttpClientHandler.SupportsProxy
  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  - System.Net.Http.HttpClientHandler.UseCookies
  - System.Net.Http.HttpClientHandler.UseDefaultCredentials
  - System.Net.Http.HttpClientHandler.UseProxy
  langs:
  - csharp
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
  type: Class
  summary: "O processador de mensagens predefinido utilizado por <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref>."
  remarks: "A classe de HttpClientHandler e classes derivadas de-permitem que os programadores configurar uma variedade de opções vão de proxies a autenticação."
  example:
  - '[!code-cs[System.Net.Http.HttpClientHandler#1](~/add/codesnippet/csharp/t-system.net.http.httpcl_0_1.cs)]'
  syntax:
    content: 'public class HttpClientHandler : System.Net.Http.HttpMessageHandler'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpMessageHandler.Dispose
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: HttpClientHandler()
  nameWithType: HttpClientHandler.HttpClientHandler()
  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Cria uma instância de um <xref href=&quot;System.Net.Http.HttpClientHandler&quot;> </xref> classe."
  syntax:
    content: public HttpClientHandler ();
    parameters: []
  overload: System.Net.Http.HttpClientHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define um valor que indica se o processador deve seguir as respostas de redirecionamento."
  remarks: "Definir AllowAutoRedirect `true` se pretender que o processador automaticamente seguir cabeçalhos de redirecionamento de HTTP para a nova localização do recurso. O número máximo de redirecionamentos a seguir é definido pelo <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>propriedade.</xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>       Se AllowAutoRedirect estiver definido como `false`, são devolvidas todas as respostas de HTTP com um código de estado HTTP de 300 a 399 à aplicação.       O cabeçalho de autorização é apagado em redirecionamentos automática e o processador este tenta automaticamente novamente autenticado para localização redirecionada. Na prática, isto significa que uma aplicação não é possível colocar informações de autenticação personalizado para o cabeçalho de autorização, se for possível encontrar o redirecionamento. Em vez disso, a aplicação tem de implementar e registar um módulo de autenticação personalizado."
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o se o processador deve seguir as respostas de redirecionamento; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.AllowAutoRedirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  id: AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define o tipo do método de descompressão utilizado pelo processador na descompressão automática da resposta de conteúdo HTTP."
  syntax:
    content: public System.Net.DecompressionMethods AutomaticDecompression { get; set; }
    return:
      type: System.Net.DecompressionMethods
      description: "O método de descompressão automática utilizado pelo processador. O valor predefinido é <xref:System.Net.DecompressionMethods>.</xref:System.Net.DecompressionMethods>"
  overload: System.Net.Http.HttpClientHandler.AutomaticDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  id: ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define um valor que indica se o certificado é selecionado automaticamente do arquivo de certificados ou se o autor da chamada é permitida num certificado de cliente específico."
  syntax:
    content: public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }
    return:
      type: System.Net.Http.ClientCertificateOption
      description: "A coleção de certificados de segurança associados este processador."
  overload: System.Net.Http.HttpClientHandler.ClientCertificateOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  id: CookieContainer
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: System.Net.Http.HttpClientHandler.CookieContainer
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define o contentor de cookie utilizado para armazenar os cookies de servidor pelo processador."
  remarks: "A propriedade CookieContainer fornece uma instância do <xref:System.Net.CookieContainer>classe que contém os cookies associados a este processador.</xref:System.Net.CookieContainer>       Se o <xref:System.Net.Http.HttpClientHandler.UseCookies%2A>propriedade é `true`, a propriedade CookieContainer representa o contentor de cookie utilizado para armazenar os cookies de servidor.</xref:System.Net.Http.HttpClientHandler.UseCookies%2A> O utilizador pode definir cookies personalizados antes de enviar pedidos utilizando esta propriedade. Se o <xref:System.Net.Http.HttpClientHandler.UseCookies%2A>propriedade é falsa e o utilizador adiciona cookies para CookieContainer, os cookies são ignorados e não enviados para o servidor.</xref:System.Net.Http.HttpClientHandler.UseCookies%2A> Definir o CookieContainer para `null` irá gerar uma exceção."
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "O contentor de cookie utilizado para armazenar os cookies de servidor pelo processador."
  overload: System.Net.Http.HttpClientHandler.CookieContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.Credentials
  id: Credentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: System.Net.Http.HttpClientHandler.Credentials
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define a informação de autenticação utilizada por este processador."
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "As credenciais de autenticação associadas com o processador. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpClientHandler.Dispose(Boolean)
  fullName: System.Net.Http.HttpClientHandler.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.Net.Http.HttpClientHandler&quot;> </xref> e opcionalmente disposes dos recursos geridos."
  remarks: "Este método é denominado pelo público `Dispose()` método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca protegida `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.Net.Http.HttpClientHandler>referências.</xref:System.Net.Http.HttpClientHandler> Este método invoca o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> às versões apenas não gerido recursos."
  overload: System.Net.Http.HttpClientHandler.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  id: MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define o número máximo de redirecionamentos que se segue o processador."
  remarks: "A propriedade MaxAutomaticRedirections define o número máximo de redirecionamentos para o pedido a seguir caso o <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>propriedade é `true`.</xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>"
  syntax:
    content: public int MaxAutomaticRedirections { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de respostas de redirecionamento que se segue o processador de mensagens em fila. O valor predefinido é 50."
  overload: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  id: MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define o tamanho do conteúdo da memória intermédia de máximo de pedido utilizado pelo processador."
  remarks: "Uma aplicação pode definir a propriedade de MaxRequestContentBufferSize para um valor inferior para limitar o tamanho da memória intermédia pedido. Se o tamanho do conteúdo pedido for superior à propriedade MaxRequestContentBufferSize, é emitida uma exceção."
  syntax:
    content: public long MaxRequestContentBufferSize { get; set; }
    return:
      type: System.Int64
      description: "O tamanho de memória intermédia de conteúdo do pedido máximo em bytes. O valor predefinido é 2 gigabytes."
  overload: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define um valor que indica se o processador envia um cabeçalho de autorização com o pedido."
  remarks: "Depois de um pedido de cliente específico <xref:System.Uri>é autenticadas com êxito, se a propriedade PreAuthenticate for `true` e as credenciais são fornecidas, <xref:System.Net.Http.HttpClientHandler>correspondências face à lista de credencial fornecido no <xref:System.Net.Http.HttpClientHandler.Credentials%2A>propriedade.</xref:System.Net.Http.HttpClientHandler.Credentials%2A> </xref:System.Net.Http.HttpClientHandler> </xref:System.Uri> O cabeçalho de autorização é enviado com cada pedido para qualquer <xref:System.Uri>que corresponda ao especificada <xref:System.Uri>até a último barra.</xref:System.Uri> </xref:System.Uri>       Se o cliente pediu para específico <xref:System.Uri>é autenticado não com êxito, o pedido utiliza os procedimentos de autenticação padrão.</xref:System.Uri>       Com exceção do primeiro pedido, a propriedade PreAuthenticate indica se pretende enviar informações de autenticação com os pedidos subsequentes para um <xref:System.Uri>que corresponda ao especificada <xref:System.Uri>até a último barra sem aguardar para ser solicitados pelo servidor.</xref:System.Uri> </xref:System.Uri>"
  syntax:
    content: public bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>o processador enviar um cabeçalho de autorização de HTTP com pedidos após a autenticação realização; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.PreAuthenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.Proxy
  id: Proxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: System.Net.Http.HttpClientHandler.Proxy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define as informações de proxy utilizadas pelo processador."
  remarks: "The Proxy property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the Proxy property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.  \n  \n The local computer or application config file may specify that a default proxy be used. If the Proxy property is specified, then the proxy settings from the Proxy property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the Proxy property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.\\*\". So a URL of \" http://nt.com\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:  \n  \n1.  The destination contains a flat name (no dots in the URL).  \n  \n2.  The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.  \n  \n3.  The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>)."
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "As informações de proxy utilizadas pelo processador. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Cria uma instância do <xref href=&quot;System.Net.Http.HttpResponseMessage&quot;> </xref> com base nas informações fornecidas a <xref href=&quot;System.Net.Http.HttpRequestMessage&quot;> </xref> como uma operação que não irá bloquear."
  remarks: "Esta operação é não bloquear. Devolve uma instância de <xref:System.Threading.Tasks.Task%601>para representar a operação assíncrona.</xref:System.Threading.Tasks.Task%601> Quando a operação for concluída, <xref:System.Threading.Tasks.Task%601.Result%2A>contém a mensagem de resposta.</xref:System.Threading.Tasks.Task%601.Result%2A>"
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "A mensagem de pedido HTTP."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Um token de cancelamento para cancelar a operação."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.Http.HttpClientHandler.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  id: SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém um valor que indica se o processador suporta descompressão de conteúdo de resposta automática."
  syntax:
    content: public virtual bool SupportsAutomaticDecompression { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o se o processador suporta descompressão de conteúdo de resposta automática; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  id: SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: System.Net.Http.HttpClientHandler.SupportsProxy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém um valor que indica se o processador suporta as definições de proxy."
  syntax:
    content: public virtual bool SupportsProxy { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o se o processador suporta as definições de proxy caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.SupportsProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  id: SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém um valor que indica se o processador suporta definições de configuração para o <> </> *> e <> </> *> propriedades."
  syntax:
    content: public virtual bool SupportsRedirectConfiguration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o se o processador de definições de configuração para suportar o <> </> *> e <> </> *> propriedades; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.UseCookies
  id: UseCookies
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: System.Net.Http.HttpClientHandler.UseCookies
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define um valor que indica se o processador utiliza o <xref:System.Net.Http.HttpClientHandler.CookieContainer*>propriedade para armazenar os cookies de servidor e utiliza estes cookies quando enviar pedidos.</xref:System.Net.Http.HttpClientHandler.CookieContainer*>"
  syntax:
    content: public bool UseCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o se o processador suporta utiliza o <xref:System.Net.Http.HttpClientHandler.CookieContainer*>propriedade para armazenar os cookies de servidor e utiliza estes cookies quando enviar pedidos; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.Http.HttpClientHandler.CookieContainer*> O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.UseCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define um valor que controla se as credenciais predefinidas são enviadas com pedidos pelo processador."
  remarks: "Defina esta propriedade como `true` quando os pedidos efetuados pelo <xref:System.Net.Http.HttpClientHandler>objecto deve, se for pedida pelo servidor, ser autenticado utilizando as credenciais do utilizador atualmente com sessão iniciada.</xref:System.Net.Http.HttpClientHandler> Para aplicações de cliente, este é o comportamento pretendido na maioria dos cenários. Para aplicações de camada média, tais como aplicações do ASP.NET, em vez de utilizar esta propriedade, normalmente iria definir o <xref:System.Net.Http.HttpClientHandler.Credentials%2A>propriedade para as credenciais do cliente em cujo nome é efetuado o pedido.</xref:System.Net.Http.HttpClientHandler.Credentials%2A>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se forem utilizadas as credenciais predefinidas; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.UseDefaultCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.UseProxy
  id: UseProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: System.Net.Http.HttpClientHandler.UseProxy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Obtém ou define um valor que indica se o processador utiliza um proxy para pedidos."
  syntax:
    content: public bool UseProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o processador deve utilizar um proxy para pedidos; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.UseProxy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpMessageHandler
  isExternal: false
  name: System.Net.Http.HttpMessageHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.HttpClientHandler.#ctor
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: HttpClientHandler()
  nameWithType: HttpClientHandler.HttpClientHandler()
  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression
- uid: System.Net.DecompressionMethods
  parent: System.Net
  isExternal: true
  name: DecompressionMethods
  nameWithType: DecompressionMethods
  fullName: System.Net.DecompressionMethods
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions
- uid: System.Net.Http.ClientCertificateOption
  parent: System.Net.Http
  isExternal: false
  name: ClientCertificateOption
  nameWithType: ClientCertificateOption
  fullName: System.Net.Http.ClientCertificateOption
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: System.Net.Http.HttpClientHandler.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.Http.HttpClientHandler.Credentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: System.Net.Http.HttpClientHandler.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpClientHandler.Dispose(Boolean)
  fullName: System.Net.Http.HttpClientHandler.Dispose(Boolean)
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate
- uid: System.Net.Http.HttpClientHandler.Proxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: System.Net.Http.HttpClientHandler.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.Http.HttpResponseMessage>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: System.Net.Http.HttpClientHandler.SupportsProxy
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
- uid: System.Net.Http.HttpClientHandler.UseCookies
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: System.Net.Http.HttpClientHandler.UseCookies
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials
- uid: System.Net.Http.HttpClientHandler.UseProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: System.Net.Http.HttpClientHandler.UseProxy
- uid: System.Net.Http.HttpClientHandler.#ctor*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: HttpClientHandler
  nameWithType: HttpClientHandler.HttpClientHandler
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
- uid: System.Net.Http.HttpClientHandler.CookieContainer*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
- uid: System.Net.Http.HttpClientHandler.Credentials*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
- uid: System.Net.Http.HttpClientHandler.Dispose*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Dispose
  nameWithType: HttpClientHandler.Dispose
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
- uid: System.Net.Http.HttpClientHandler.Proxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
- uid: System.Net.Http.HttpClientHandler.SendAsync*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SendAsync
  nameWithType: HttpClientHandler.SendAsync
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.SupportsProxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
- uid: System.Net.Http.HttpClientHandler.UseCookies*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
- uid: System.Net.Http.HttpClientHandler.UseProxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
