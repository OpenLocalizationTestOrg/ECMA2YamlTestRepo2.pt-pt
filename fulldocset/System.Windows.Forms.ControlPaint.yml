### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ControlPaint
  id: ControlPaint
  children:
  - System.Windows.Forms.ControlPaint.ContrastControlDark
  - System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)
  - System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)
  - System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)
  - System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)
  - System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)
  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)
  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)
  - System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  - System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)
  - System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)
  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)
  - System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)
  - System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  - System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)
  - System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)
  - System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)
  - System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)
  langs:
  - csharp
  name: ControlPaint
  nameWithType: ControlPaint
  fullName: System.Windows.Forms.ControlPaint
  type: Class
  summary: "Provides methods used to paint common Windows controls and their elements. This class cannot be inherited."
  remarks: "The methods contained in the ControlPaint class enable you to draw your own controls or elements of controls. You can control the drawing of your own controls if the <xref:System.Windows.Forms.ControlStyles> bit is set to `true` for the control. You can get or set the style bits by calling the <xref:System.Windows.Forms.Control.GetStyle%2A> or <xref:System.Windows.Forms.Control.SetStyle%2A> methods. You can set multiple style bits for any control. The <xref:System.Windows.Forms.ControlStyles> enumeration members can be combined with bitwise operations."
  example:
  - "The following code example uses one of the ControlPaint constructors to draw a flat <xref:System.Windows.Forms.Button> control.  \n  \n [!code-cs[ButtonState#2](~/add/codesnippet/csharp/t-system.windows.forms.c_11_1.cs)]\n [!code-vb[ButtonState#2](~/add/codesnippet/visualbasic/t-system.windows.forms.c_11_1.vb)]\n [!code-cpp[ButtonState#2](~/add/codesnippet/cpp/t-system.windows.forms.c_11_1.cpp)]"
  syntax:
    content: public sealed class ControlPaint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.ContrastControlDark
  id: ContrastControlDark
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: ContrastControlDark
  nameWithType: ControlPaint.ContrastControlDark
  fullName: System.Windows.Forms.ControlPaint.ContrastControlDark
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the color to use as the <xref:System.Drawing.SystemColors.ControlDark*> color."
  remarks: "If the user has enabled the <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> mode, this property is set to <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=fullName>; otherwise, it is set to <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName>."
  syntax:
    content: public static System.Drawing.Color ContrastControlDark { get; }
    return:
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to use as the <xref:System.Drawing.SystemColors.ControlDark*> color."
  overload: System.Windows.Forms.ControlPaint.ContrastControlDark*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)
  id: CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: CreateHBitmap16Bit(Bitmap,Color)
  nameWithType: ControlPaint.CreateHBitmap16Bit(Bitmap,Color)
  fullName: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(Bitmap,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a 16-bit color bitmap."
  syntax:
    content: public static IntPtr CreateHBitmap16Bit (System.Drawing.Bitmap bitmap, System.Drawing.Color background);
    parameters:
    - id: bitmap
      type: System.Drawing.Bitmap
      description: "The <xref href=&quot;System.Drawing.Bitmap&quot;></xref> to create."
    - id: background
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background."
    return:
      type: System.IntPtr
      description: "An <xref:System.IntPtr> representing the handle to the bitmap."
  overload: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)
  id: CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: CreateHBitmapColorMask(Bitmap,IntPtr)
  nameWithType: ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)
  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a Win32 <xref uid=&quot;langword_csharp_HBITMAP&quot; name=&quot;HBITMAP&quot; href=&quot;&quot;></xref> out of the image."
  remarks: "You are responsible for de-allocating the `HBITMAP`. If the image uses transparency, the background will be filled with the specified color."
  syntax:
    content: public static IntPtr CreateHBitmapColorMask (System.Drawing.Bitmap bitmap, IntPtr monochromeMask);
    parameters:
    - id: bitmap
      type: System.Drawing.Bitmap
      description: "The <xref href=&quot;System.Drawing.Bitmap&quot;></xref> to create."
    - id: monochromeMask
      type: System.IntPtr
      description: "A pointer to the monochrome mask."
    return:
      type: System.IntPtr
      description: "An <xref:System.IntPtr> representing the handle to the bitmap."
  overload: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)
  id: CreateHBitmapTransparencyMask(System.Drawing.Bitmap)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: CreateHBitmapTransparencyMask(Bitmap)
  nameWithType: ControlPaint.CreateHBitmapTransparencyMask(Bitmap)
  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(Bitmap)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent."
  remarks: "You are responsible for de-allocating the bitmap."
  syntax:
    content: public static IntPtr CreateHBitmapTransparencyMask (System.Drawing.Bitmap bitmap);
    parameters:
    - id: bitmap
      type: System.Drawing.Bitmap
      description: "The <xref href=&quot;System.Drawing.Bitmap&quot;></xref> to create the transparency mask for."
    return:
      type: System.IntPtr
      description: "The handle to the <xref href=&quot;System.Drawing.Bitmap&quot;></xref> mask."
  overload: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)
  id: Dark(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: Dark(Color)
  nameWithType: ControlPaint.Dark(Color)
  fullName: System.Windows.Forms.ControlPaint.Dark(Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new dark color object for the control from the specified color."
  remarks: "If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color&quot;s luminosity value is decreased."
  syntax:
    content: public static System.Drawing.Color Dark (System.Drawing.Color baseColor);
    parameters:
    - id: baseColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to be darkened."
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the dark color on the control."
  overload: System.Windows.Forms.ControlPaint.Dark*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)
  id: Dark(System.Drawing.Color,System.Single)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: Dark(Color,Single)
  nameWithType: ControlPaint.Dark(Color,Single)
  fullName: System.Windows.Forms.ControlPaint.Dark(Color,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new dark color object for the control from the specified color and darkens it by the specified percentage."
  remarks: "If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=fullName> color; otherwise, the color&quot;s luminosity value is decreased."
  syntax:
    content: public static System.Drawing.Color Dark (System.Drawing.Color baseColor, float percOfDarkDark);
    parameters:
    - id: baseColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to be darkened."
    - id: percOfDarkDark
      type: System.Single
      description: "The percentage to darken the specified <xref href=&quot;System.Drawing.Color&quot;></xref>."
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represent the dark color on the control."
  overload: System.Windows.Forms.ControlPaint.Dark*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)
  id: DarkDark(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DarkDark(Color)
  nameWithType: ControlPaint.DarkDark(Color)
  fullName: System.Windows.Forms.ControlPaint.DarkDark(Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new dark color object for the control from the specified color."
  remarks: "If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=fullName> color; otherwise, the color&quot;s luminosity value is increased."
  syntax:
    content: public static System.Drawing.Color DarkDark (System.Drawing.Color baseColor);
    parameters:
    - id: baseColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to be darkened."
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the dark color on the control."
  overload: System.Windows.Forms.ControlPaint.DarkDark*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)
  id: DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)
  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control."
  remarks: ''
  example:
  - "The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/cc6d0e3e-2961-4c4b-9743-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/cc6d0e3e-2961-4c4b-9743-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/cc6d0e3e-2961-4c4b-9743-_1.cs)]"
  syntax:
    content: public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color color, System.Windows.Forms.ButtonBorderStyle style);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the border."
    - id: color
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the border."
    - id: style
      type: System.Windows.Forms.ButtonBorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.ButtonBorderStyle&quot;></xref> values that specifies the style of the border."
  overload: System.Windows.Forms.ControlPaint.DrawBorder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)
  id: DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)
  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a border on a button-style control with the specified styles, colors, and border widths; on the specified graphics surface; and within the specified bounds."
  remarks: ''
  example:
  - "The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/64eea492-703b-4fc4-9757-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/64eea492-703b-4fc4-9757-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/64eea492-703b-4fc4-9757-_1.cs)]"
  syntax:
    content: public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color leftColor, int leftWidth, System.Windows.Forms.ButtonBorderStyle leftStyle, System.Drawing.Color topColor, int topWidth, System.Windows.Forms.ButtonBorderStyle topStyle, System.Drawing.Color rightColor, int rightWidth, System.Windows.Forms.ButtonBorderStyle rightStyle, System.Drawing.Color bottomColor, int bottomWidth, System.Windows.Forms.ButtonBorderStyle bottomStyle);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the border."
    - id: leftColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the left of the border."
    - id: leftWidth
      type: System.Int32
      description: "The width of the left border."
    - id: leftStyle
      type: System.Windows.Forms.ButtonBorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.ButtonBorderStyle&quot;></xref> values that specifies the style of the left border."
    - id: topColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the top of the border."
    - id: topWidth
      type: System.Int32
      description: "The width of the top border."
    - id: topStyle
      type: System.Windows.Forms.ButtonBorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.ButtonBorderStyle&quot;></xref> values that specifies the style of the top border."
    - id: rightColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the right of the border."
    - id: rightWidth
      type: System.Int32
      description: "The width of the right border."
    - id: rightStyle
      type: System.Windows.Forms.ButtonBorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.ButtonBorderStyle&quot;></xref> values that specifies the style of the right border."
    - id: bottomColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the bottom of the border."
    - id: bottomWidth
      type: System.Int32
      description: "The width of the bottom border."
    - id: bottomStyle
      type: System.Windows.Forms.ButtonBorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.ButtonBorderStyle&quot;></xref> values that specifies the style of the bottom border."
  overload: System.Windows.Forms.ControlPaint.DrawBorder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder3D(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control."
  remarks: "The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border."
  example:
  - "The following code example demonstrates the use of one of the DrawBorder3D methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/b906e340-a237-41a6-b278-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/b906e340-a237-41a6-b278-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/b906e340-a237-41a6-b278-_1.cs)]"
  syntax:
    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the border."
  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)
  id: DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control."
  remarks: ''
  example:
  - "The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/85d5ee3c-d367-492f-8b37-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/85d5ee3c-d367-492f-8b37-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/85d5ee3c-d367-492f-8b37-_1.cs)]"
  syntax:
    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the border."
    - id: style
      type: System.Windows.Forms.Border3DStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.Border3DStyle&quot;></xref> values that specifies the style of the border."
  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  id: DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control."
  remarks: ''
  example:
  - "The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/d65a87bc-f407-4afc-b213-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/d65a87bc-f407-4afc-b213-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/d65a87bc-f407-4afc-b213-_1.cs)]"
  syntax:
    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the border."
    - id: style
      type: System.Windows.Forms.Border3DStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.Border3DStyle&quot;></xref> values that specifies the style of the border."
    - id: sides
      type: System.Windows.Forms.Border3DSide
      description: "One of the <xref href=&quot;System.Windows.Forms.Border3DSide&quot;></xref> values that specifies the side of the rectangle to draw the border on."
  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control."
  remarks: "The <xref:System.Windows.Forms.Border3DStyle?displayProperty=fullName> style is used by default to draw the border."
  example:
  - "The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/d991b3c5-c5fb-4e0b-a08a-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/d991b3c5-c5fb-4e0b-a08a-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/d991b3c5-c5fb-4e0b-a08a-_1.cs)]"
  syntax:
    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the top left of the border rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the top left of the border rectangle."
    - id: width
      type: System.Int32
      description: "The width of the border rectangle."
    - id: height
      type: System.Int32
      description: "The height of the border rectangle."
  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)
  id: DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control."
  remarks: ''
  example:
  - "The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/a6b15ad3-2d4f-400c-addf-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/a6b15ad3-2d4f-400c-addf-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/a6b15ad3-2d4f-400c-addf-_1.cs)]"
  syntax:
    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the top left of the border rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the top left of the border rectangle."
    - id: width
      type: System.Int32
      description: "The width of the border rectangle."
    - id: height
      type: System.Int32
      description: "The height of the border rectangle."
    - id: style
      type: System.Windows.Forms.Border3DStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.Border3DStyle&quot;></xref> values that specifies the style of the border."
  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  id: DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control."
  remarks: ''
  example:
  - "The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods. To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/cpp/583dbfc9-5548-498e-b2d2-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/visualbasic/583dbfc9-5548-498e-b2d2-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#2](~/add/codesnippet/csharp/583dbfc9-5548-498e-b2d2-_1.cs)]"
  syntax:
    content: public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the top left of the border rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the top left of the border rectangle."
    - id: width
      type: System.Int32
      description: "The width of the border rectangle."
    - id: height
      type: System.Int32
      description: "The height of the border rectangle."
    - id: style
      type: System.Windows.Forms.Border3DStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.Border3DStyle&quot;></xref> values that specifies the style of the border."
    - id: sides
      type: System.Windows.Forms.Border3DSide
      description: "The <xref href=&quot;System.Windows.Forms.Border3DSide&quot;></xref> of the rectangle to draw the border on."
  overload: System.Windows.Forms.ControlPaint.DrawBorder3D*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  id: DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawButton(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the button."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the button in."
  overload: System.Windows.Forms.ControlPaint.DrawButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  id: DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds."
  remarks: ''
  example:
  - >-
    [!code-cs[ButtonState#2](~/add/codesnippet/csharp/a2ff305b-bc06-44a2-8b27-_1.cs)]
     [!code-vb[ButtonState#2](~/add/codesnippet/visualbasic/a2ff305b-bc06-44a2-8b27-_1.vb)]
     [!code-cpp[ButtonState#2](~/add/codesnippet/cpp/a2ff305b-bc06-44a2-8b27-_1.cpp)]
  syntax:
    content: public static void DrawButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the button."
    - id: height
      type: System.Int32
      description: "The height of the button."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the button in."
  overload: System.Windows.Forms.ControlPaint.DrawButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  id: DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)
  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the DrawCaptionButton method and the <xref:System.Windows.Forms.CaptionButton> enumeration. To run this example, paste the following code in a form containing a Button named `Button1`. The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/cpp/557d559e-60e6-477f-98b7-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/visualbasic/557d559e-60e6-477f-98b7-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/csharp/557d559e-60e6-477f-98b7-_1.cs)]"
  syntax:
    content: public static void DrawCaptionButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the caption button."
    - id: button
      type: System.Windows.Forms.CaptionButton
      description: "One of the <xref href=&quot;System.Windows.Forms.CaptionButton&quot;></xref> values that specifies the type of caption button to draw."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the button in."
  overload: System.Windows.Forms.ControlPaint.DrawCaptionButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  id: DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)
  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> method and the <xref:System.Windows.Forms.CaptionButton> enumeration. To run this example, paste the following code in a form containing a <xref:System.Windows.Forms.Button> named `Button1`. The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces. Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.  \n  \n [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/cpp/7e5c38fb-727e-4f02-85c3-_1.cpp)]\n [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/visualbasic/7e5c38fb-727e-4f02-85c3-_1.vb)]\n [!code-cs[System.Windows.Forms.ControlPaintMembers#1](~/add/codesnippet/csharp/7e5c38fb-727e-4f02-85c3-_1.cs)]"
  syntax:
    content: public static void DrawCaptionButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the top left of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the top left of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the drawing rectangle."
    - id: height
      type: System.Int32
      description: "The height of the drawing rectangle."
    - id: button
      type: System.Windows.Forms.CaptionButton
      description: "One of the <xref href=&quot;System.Windows.Forms.CaptionButton&quot;></xref> values that specifies the type of caption button to draw."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the button in."
  overload: System.Windows.Forms.ControlPaint.DrawCaptionButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  id: DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawCheckBox(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the check box."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the check box in."
  overload: System.Windows.Forms.ControlPaint.DrawCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  id: DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the check box."
    - id: height
      type: System.Int32
      description: "The height of the check box."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the check box in."
  overload: System.Windows.Forms.ControlPaint.DrawCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  id: DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawComboButton(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawComboButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the combo box."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the combo box in."
  overload: System.Windows.Forms.ControlPaint.DrawComboButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  id: DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawComboButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the top left of the border rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the top left of the border rectangle."
    - id: width
      type: System.Int32
      description: "The width of the combo box."
    - id: height
      type: System.Int32
      description: "The height of the combo box."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the combo box in."
  overload: System.Windows.Forms.ControlPaint.DrawComboButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawContainerGrabHandle(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds."
  remarks: "Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers. The manipulation can consist of actions such as sizing and moving."
  syntax:
    content: public static void DrawContainerGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the grab handle glyph."
  overload: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawFocusRectangle(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a focus rectangle on the specified graphics surface and within the specified bounds."
  remarks: "A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus."
  example:
  - "The following code example demonstrates using the DrawFocusRectangle method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=fullName> property. To run this example, paste the following code in a form. Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.  \n  \n [!code-vb[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/visualbasic/36084c50-977a-4441-b9ae-_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/cpp/36084c50-977a-4441-b9ae-_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/csharp/36084c50-977a-4441-b9ae-_1.cs)]"
  syntax:
    content: public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the grab handle glyph."
  overload: System.Windows.Forms.ControlPaint.DrawFocusRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  id: DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawFocusRectangle(Graphics,Rectangle,Color,Color)
  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a focus rectangle on the specified graphics surface and within the specified bounds."
  remarks: "A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=fullName> property. To run this example, paste the following code in a form. Add two buttons named `Button1` and Button2 to the form and ensure all events are connected to their event handlers.  \n  \n [!code-vb[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/visualbasic/a69c559a-f64e-4e3f-94ab-_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/cpp/a69c559a-f64e-4e3f-94ab-_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/csharp/a69c559a-f64e-4e3f-94ab-_1.cs)]"
  syntax:
    content: public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Drawing.Color foreColor, System.Drawing.Color backColor);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the grab handle glyph."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> that is the foreground color of the object to draw the focus rectangle on."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> that is the background color of the object to draw the focus rectangle on."
  overload: System.Windows.Forms.ControlPaint.DrawFocusRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)
  id: DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)
  nameWithType: ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)
  fullName: System.Windows.Forms.ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style."
  remarks: "Grab handles are used by objects to indicate to the user that the user can directly manipulate the object. The manipulation can consist of actions such as sizing and moving."
  syntax:
    content: public static void DrawGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary, bool enabled);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the grab handle glyph."
    - id: primary
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to draw the handle as a primary grab handle; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: enabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to draw the handle in an enabled state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ControlPaint.DrawGrabHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)
  id: DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawGrid(Graphics,Rectangle,Size,Color)
  nameWithType: ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color."
  remarks: "The `backColor` parameter is used to calculate the fill color of the dots so that the grid is always visible against the background."
  syntax:
    content: public static void DrawGrid (System.Drawing.Graphics graphics, System.Drawing.Rectangle area, System.Drawing.Size pixelsBetweenDots, System.Drawing.Color backColor);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: area
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the grid."
    - id: pixelsBetweenDots
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref> that specified the height and width between the dots of the grid."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the grid."
  overload: System.Windows.Forms.ControlPaint.DrawGrid*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)
  id: DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawImageDisabled(Graphics,Image,Int32,Int32,Color)
  nameWithType: ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified image in a disabled state."
  remarks: "The `background` parameter is used to calculate the fill color of the disabled image so that it is always visible against the background."
  syntax:
    content: public static void DrawImageDisabled (System.Drawing.Graphics graphics, System.Drawing.Image image, int x, int y, System.Drawing.Color background);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: image
      type: System.Drawing.Image
      description: "The <xref href=&quot;System.Drawing.Image&quot;></xref> to draw."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the top left of the border image."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the top left of the border image."
    - id: background
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the image."
  overload: System.Windows.Forms.ControlPaint.DrawImageDisabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)
  id: DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawLockedFrame(Graphics,Rectangle,Boolean)
  nameWithType: ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)
  fullName: System.Windows.Forms.ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface. Specifies whether to draw the frame with the primary selected colors."
  syntax:
    content: public static void DrawLockedFrame (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the frame."
    - id: primary
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to draw this frame with the colors used for the primary selection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ControlPaint.DrawLockedFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)
  id: DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface."
  remarks: "When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."
  syntax:
    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the glyph."
    - id: glyph
      type: System.Windows.Forms.MenuGlyph
      description: "One of the <xref href=&quot;System.Windows.Forms.MenuGlyph&quot;></xref> values that specifies the image to draw."
  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  id: DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface, replacing <xref:System.Drawing.Color.White*> with the color specified in the <code>backColor</code> parameter and replacing <xref:System.Drawing.Color.Black*> with the color specified in the <code>foreColor</code> parameter."
  remarks: "When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."
  syntax:
    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the glyph."
    - id: glyph
      type: System.Windows.Forms.MenuGlyph
      description: "One of the <xref href=&quot;System.Windows.Forms.MenuGlyph&quot;></xref> values that specifies the image to draw."
    - id: foreColor
      type: System.Drawing.Color
      description: "The color that replaces <xref:System.Drawing.Color.White*> as the foreground color."
    - id: backColor
      type: System.Drawing.Color
      description: "The color that replaces <xref:System.Drawing.Color.Black*> as the background color."
  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)
  id: DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface."
  remarks: "When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to true, you call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."
  syntax:
    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the menu glyph."
    - id: height
      type: System.Int32
      description: "The height of the menu glyph."
    - id: glyph
      type: System.Windows.Forms.MenuGlyph
      description: "One of the <xref href=&quot;System.Windows.Forms.MenuGlyph&quot;></xref> values that specifies the image to draw."
  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  id: DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified menu glyph on a menu item control within the specified coordinates, height, and width on the specified surface, replacing <xref:System.Drawing.Color.White*> with the color specified in the <code>backColor</code> parameter and replacing <xref:System.Drawing.Color.Black*> with the color specified in the <code>foreColor</code> parameter."
  remarks: "When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove. For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=fullName> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>."
  syntax:
    content: public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the menu glyph."
    - id: height
      type: System.Int32
      description: "The height of the menu glyph."
    - id: glyph
      type: System.Windows.Forms.MenuGlyph
      description: "One of the <xref href=&quot;System.Windows.Forms.MenuGlyph&quot;></xref> values that specifies the image to draw."
    - id: foreColor
      type: System.Drawing.Color
      description: "The color that replaces <xref:System.Drawing.Color.White*> as the foreground color."
    - id: backColor
      type: System.Drawing.Color
      description: "The color that replaces <xref:System.Drawing.Color.Black*> as the background color."
  overload: System.Windows.Forms.ControlPaint.DrawMenuGlyph*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  id: DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawMixedCheckBox(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the check box."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the check box in."
  overload: System.Windows.Forms.ControlPaint.DrawMixedCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  id: DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the check box."
    - id: height
      type: System.Int32
      description: "The height of the check box."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the check box in."
  overload: System.Windows.Forms.ControlPaint.DrawMixedCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  id: DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawRadioButton(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawRadioButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the radio button."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the radio button in."
  overload: System.Windows.Forms.ControlPaint.DrawRadioButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  id: DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawRadioButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the radio button."
    - id: height
      type: System.Int32
      description: "The height of the radio button."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the radio button in."
  overload: System.Windows.Forms.ControlPaint.DrawRadioButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)
  id: DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawReversibleFrame(Rectangle,Color,FrameStyle)
  nameWithType: ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state."
  remarks: "The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.       The results of this method can be reversed by drawing the same frame again. Drawing a frame using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=fullName>, and the DrawReversibleFrame members. To run the example, paste the following code in a form called `Form1` containing several controls. This example requires that the mouse events are connected to the event handlers defined in the example.  \n  \n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/6607ae2e-2ccb-4180-80fa-_1.cs)]\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/6607ae2e-2ccb-4180-80fa-_1.cpp)]\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/6607ae2e-2ccb-4180-80fa-_1.vb)]"
  syntax:
    content: public static void DrawReversibleFrame (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor, System.Windows.Forms.FrameStyle style);
    parameters:
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the rectangle to draw, in screen coordinates."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the frame."
    - id: style
      type: System.Windows.Forms.FrameStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.FrameStyle&quot;></xref> values that specifies the style of the frame."
  overload: System.Windows.Forms.ControlPaint.DrawReversibleFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)
  id: DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawReversibleLine(Point,Point,Color)
  nameWithType: ControlPaint.DrawReversibleLine(Point,Point,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawReversibleLine(Point,Point,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a reversible line on the screen within the specified starting and ending points and with the specified background color."
  remarks: "The `backColor` parameter is used to calculate the fill color of the line so that it is always visible against the background.       The results of this method can be reversed by drawing the same line again. Drawing a line using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors."
  example:
  - "The following code example demonstrates using the DrawReversibleLine and <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=fullName> methods. To run the example, paste the following code in a form. Add a button named `Button3` to the form and ensure all events are connected to their event handlers.  \n  \n [!code-vb[System.Windows.Forms.ControlPaint1#3](~/add/codesnippet/visualbasic/0bedfc01-f152-4be8-90d9-_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlPaint1#3](~/add/codesnippet/cpp/0bedfc01-f152-4be8-90d9-_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlPaint1#3](~/add/codesnippet/csharp/0bedfc01-f152-4be8-90d9-_1.cs)]"
  syntax:
    content: public static void DrawReversibleLine (System.Drawing.Point start, System.Drawing.Point end, System.Drawing.Color backColor);
    parameters:
    - id: start
      type: System.Drawing.Point
      description: "The starting <xref href=&quot;System.Drawing.Point&quot;></xref> of the line, in screen coordinates."
    - id: end
      type: System.Drawing.Point
      description: "The ending <xref href=&quot;System.Drawing.Point&quot;></xref> of the line, in screen coordinates."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the line."
  overload: System.Windows.Forms.ControlPaint.DrawReversibleLine*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  id: DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)
  nameWithType: ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawScrollButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the glyph."
    - id: button
      type: System.Windows.Forms.ScrollButton
      description: "One of the <xref href=&quot;System.Windows.Forms.ScrollButton&quot;></xref> values that specifies the type of scroll arrow to draw."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the scroll button in."
  overload: System.Windows.Forms.ControlPaint.DrawScrollButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  id: DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)
  nameWithType: ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds."
  syntax:
    content: public static void DrawScrollButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the drawing rectangle."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the drawing rectangle."
    - id: width
      type: System.Int32
      description: "The width of the scroll button."
    - id: height
      type: System.Int32
      description: "The height of the scroll button."
    - id: button
      type: System.Windows.Forms.ScrollButton
      description: "One of the <xref href=&quot;System.Windows.Forms.ScrollButton&quot;></xref> values that specifies the type of scroll arrow to draw."
    - id: state
      type: System.Windows.Forms.ButtonState
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.ButtonState&quot;></xref> values that specifies the state to draw the scroll button in."
  overload: System.Windows.Forms.ControlPaint.DrawScrollButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)
  id: DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)
  nameWithType: ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color."
  remarks: "A selection frame is a frame that is drawn around a selected component at design time.       The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.       If the `active` parameter is set to `true`, the selection frame is drawn as a set of hatch marks indicating that the component has been activated; otherwise, the selection frame is drawn with a dotted pattern or nothing, depending on the implementation."
  syntax:
    content: public static void DrawSelectionFrame (System.Drawing.Graphics graphics, bool active, System.Drawing.Rectangle outsideRect, System.Drawing.Rectangle insideRect, System.Drawing.Color backColor);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: active
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to draw the selection frame in an active state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: outsideRect
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the outer boundary of the selection frame."
    - id: insideRect
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the inner boundary of the selection frame."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the frame."
  overload: System.Windows.Forms.ControlPaint.DrawSelectionFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)
  id: DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawSizeGrip(Graphics,Color,Rectangle)
  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface."
  remarks: "The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.       When you define a sizable window, you can include a size grip. A size grip is a special handle that enables the user to resize a window."
  syntax:
    content: public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, System.Drawing.Rectangle bounds);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background used to determine the colors of the size grip."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the size grip."
  overload: System.Windows.Forms.ControlPaint.DrawSizeGrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)
  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface."
  remarks: "The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.       When you define a sizable window, you can include a size grip. A size grip is a special handle that enables the user to resize a window."
  syntax:
    content: public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, int x, int y, int width, int height);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background used to determine the colors of the size grip."
    - id: x
      type: System.Int32
      description: "The x-coordinate of the upper left corner of the size grip."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the upper left corner of the size grip."
    - id: width
      type: System.Int32
      description: "The width of the size grip."
    - id: height
      type: System.Int32
      description: "The height of the size grip."
  overload: System.Windows.Forms.ControlPaint.DrawSizeGrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)
  nameWithType: ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)
  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified string in a disabled state on the specified graphics surface; within the specified bounds; and in the specified font, color, and format."
  syntax:
    content: public static void DrawStringDisabled (System.Drawing.Graphics graphics, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: s
      type: System.String
      description: "The string to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to draw the string with."
    - id: color
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the string."
    - id: layoutRectangle
      type: System.Drawing.RectangleF
      description: "The <xref href=&quot;System.Drawing.RectangleF&quot;></xref> that represents the dimensions of the string."
    - id: format
      type: System.Drawing.StringFormat
      description: "The <xref href=&quot;System.Drawing.StringFormat&quot;></xref> to apply to the string."
  overload: System.Windows.Forms.ControlPaint.DrawStringDisabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)
  id: DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)
  nameWithType: ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)
  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format, using the specified GDI-based <xref href=&quot;System.Windows.Forms.TextRenderer&quot;></xref>."
  syntax:
    content: public static void DrawStringDisabled (System.Drawing.IDeviceContext dc, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.Rectangle layoutRectangle, System.Windows.Forms.TextFormatFlags format);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The GDI-based <xref href=&quot;System.Windows.Forms.TextRenderer&quot;></xref>."
    - id: s
      type: System.String
      description: "The string to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to draw the string with."
    - id: color
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the string."
    - id: layoutRectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.RectangleF&quot;></xref> that represents the dimensions of the string."
    - id: format
      type: System.Windows.Forms.TextFormatFlags
      description: "The <xref href=&quot;System.Drawing.StringFormat&quot;></xref> to apply to the string."
  overload: System.Windows.Forms.ControlPaint.DrawStringDisabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: DrawVisualStyleBorder(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a border in the style appropriate for disabled items."
  syntax:
    content: public static void DrawVisualStyleBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the border."
  overload: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)
  id: FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: FillReversibleRectangle(Rectangle,Color)
  nameWithType: ControlPaint.FillReversibleRectangle(Rectangle,Color)
  fullName: System.Windows.Forms.ControlPaint.FillReversibleRectangle(Rectangle,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a filled, reversible rectangle on the screen."
  remarks: "The `backColor` parameter is used to calculate the fill color of the rectangle so that it is always visible against the background.       The results of this method can be reversed by drawing the same rectangle again. Drawing a rectangle using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors."
  example:
  - "The following code example demonstrates using the FillReversibleRectangle method. To run the example, paste the following code in a form. Add a button named `Button2` to the form and ensure all events are connected to their event handlers.  \n  \n [!code-vb[System.Windows.Forms.ControlPaint1#1](~/add/codesnippet/visualbasic/b8d430b4-e39e-4a64-a0d6-_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlPaint1#1](~/add/codesnippet/cpp/b8d430b4-e39e-4a64-a0d6-_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlPaint1#1](~/add/codesnippet/csharp/b8d430b4-e39e-4a64-a0d6-_1.cs)]"
  syntax:
    content: public static void FillReversibleRectangle (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor);
    parameters:
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the dimensions of the rectangle to fill, in screen coordinates."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> of the background behind the fill."
  overload: System.Windows.Forms.ControlPaint.FillReversibleRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)
  id: Light(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: Light(Color)
  nameWithType: ControlPaint.Light(Color)
  fullName: System.Windows.Forms.ControlPaint.Light(Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new light color object for the control from the specified color."
  remarks: "If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color&quot;s luminosity value is decreased."
  syntax:
    content: public static System.Drawing.Color Light (System.Drawing.Color baseColor);
    parameters:
    - id: baseColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to be lightened."
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the light color on the control."
  overload: System.Windows.Forms.ControlPaint.Light*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)
  id: Light(System.Drawing.Color,System.Single)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: Light(Color,Single)
  nameWithType: ControlPaint.Light(Color,Single)
  fullName: System.Windows.Forms.ControlPaint.Light(Color,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new light color object for the control from the specified color and lightens it by the specified percentage."
  remarks: "If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=fullName> color; otherwise, the color&quot;s luminosity value is decreased."
  syntax:
    content: public static System.Drawing.Color Light (System.Drawing.Color baseColor, float percOfLightLight);
    parameters:
    - id: baseColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to be lightened."
    - id: percOfLightLight
      type: System.Single
      description: "The percentage to lighten the specified <xref href=&quot;System.Drawing.Color&quot;></xref>."
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the light color on the control."
  overload: System.Windows.Forms.ControlPaint.Light*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)
  id: LightLight(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  langs:
  - csharp
  name: LightLight(Color)
  nameWithType: ControlPaint.LightLight(Color)
  fullName: System.Windows.Forms.ControlPaint.LightLight(Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new light color object for the control from the specified color."
  remarks: "If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=fullName> color; otherwise, the color&quot;s luminosity value is increased."
  syntax:
    content: public static System.Drawing.Color LightLight (System.Drawing.Color baseColor);
    parameters:
    - id: baseColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to be lightened."
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the light color on the control."
  overload: System.Windows.Forms.ControlPaint.LightLight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.ControlPaint.ContrastControlDark
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: ContrastControlDark
  nameWithType: ControlPaint.ContrastControlDark
  fullName: System.Windows.Forms.ControlPaint.ContrastControlDark
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: CreateHBitmap16Bit(Bitmap,Color)
  nameWithType: ControlPaint.CreateHBitmap16Bit(Bitmap,Color)
  fullName: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(Bitmap,Color)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: CreateHBitmapColorMask(Bitmap,IntPtr)
  nameWithType: ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)
  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(Bitmap,IntPtr)
- uid: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: CreateHBitmapTransparencyMask(Bitmap)
  nameWithType: ControlPaint.CreateHBitmapTransparencyMask(Bitmap)
  fullName: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(Bitmap)
- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: Dark(Color)
  nameWithType: ControlPaint.Dark(Color)
  fullName: System.Windows.Forms.ControlPaint.Dark(Color)
- uid: System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: Dark(Color,Single)
  nameWithType: ControlPaint.Dark(Color,Single)
  fullName: System.Windows.Forms.ControlPaint.Dark(Color,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DarkDark(Color)
  nameWithType: ControlPaint.DarkDark(Color)
  fullName: System.Windows.Forms.ControlPaint.DarkDark(Color)
- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)
  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,ButtonBorderStyle)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ButtonBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: ButtonBorderStyle
  nameWithType: ButtonBorderStyle
  fullName: System.Windows.Forms.ButtonBorderStyle
- uid: System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)
  nameWithType: ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder(Graphics,Rectangle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle,Color,Int32,ButtonBorderStyle)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder3D(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle)
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle)
- uid: System.Windows.Forms.Border3DStyle
  parent: System.Windows.Forms
  isExternal: false
  name: Border3DStyle
  nameWithType: Border3DStyle
  fullName: System.Windows.Forms.Border3DStyle
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Rectangle,Border3DStyle,Border3DSide)
- uid: System.Windows.Forms.Border3DSide
  parent: System.Windows.Forms
  isExternal: false
  name: Border3DSide
  nameWithType: Border3DSide
  fullName: System.Windows.Forms.Border3DSide
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle)
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)
  nameWithType: ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)
  fullName: System.Windows.Forms.ControlPaint.DrawBorder3D(Graphics,Int32,Int32,Int32,Int32,Border3DStyle,Border3DSide)
- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawButton(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Rectangle,ButtonState)
- uid: System.Windows.Forms.ButtonState
  parent: System.Windows.Forms
  isExternal: false
  name: ButtonState
  nameWithType: ButtonState
  fullName: System.Windows.Forms.ButtonState
- uid: System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)
  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Rectangle,CaptionButton,ButtonState)
- uid: System.Windows.Forms.CaptionButton
  parent: System.Windows.Forms
  isExternal: false
  name: CaptionButton
  nameWithType: CaptionButton
  fullName: System.Windows.Forms.CaptionButton
- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)
  nameWithType: ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCaptionButton(Graphics,Int32,Int32,Int32,Int32,CaptionButton,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawCheckBox(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Rectangle,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawComboButton(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Rectangle,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawComboButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawContainerGrabHandle(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(Graphics,Rectangle)
- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawFocusRectangle(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle)
- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawFocusRectangle(Graphics,Rectangle,Color,Color)
  nameWithType: ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawFocusRectangle(Graphics,Rectangle,Color,Color)
- uid: System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)
  nameWithType: ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)
  fullName: System.Windows.Forms.ControlPaint.DrawGrabHandle(Graphics,Rectangle,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawGrid(Graphics,Rectangle,Size,Color)
  nameWithType: ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawGrid(Graphics,Rectangle,Size,Color)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawImageDisabled(Graphics,Image,Int32,Int32,Color)
  nameWithType: ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawImageDisabled(Graphics,Image,Int32,Int32,Color)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawLockedFrame(Graphics,Rectangle,Boolean)
  nameWithType: ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)
  fullName: System.Windows.Forms.ControlPaint.DrawLockedFrame(Graphics,Rectangle,Boolean)
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph)
- uid: System.Windows.Forms.MenuGlyph
  parent: System.Windows.Forms
  isExternal: false
  name: MenuGlyph
  nameWithType: MenuGlyph
  fullName: System.Windows.Forms.MenuGlyph
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Rectangle,MenuGlyph,Color,Color)
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph)
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)
  nameWithType: ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawMenuGlyph(Graphics,Int32,Int32,Int32,Int32,MenuGlyph,Color,Color)
- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMixedCheckBox(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Rectangle,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawMixedCheckBox(Graphics,Int32,Int32,Int32,Int32,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawRadioButton(Graphics,Rectangle,ButtonState)
  nameWithType: ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Rectangle,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  nameWithType: ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawRadioButton(Graphics,Int32,Int32,Int32,Int32,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawReversibleFrame(Rectangle,Color,FrameStyle)
  nameWithType: ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)
  fullName: System.Windows.Forms.ControlPaint.DrawReversibleFrame(Rectangle,Color,FrameStyle)
- uid: System.Windows.Forms.FrameStyle
  parent: System.Windows.Forms
  isExternal: false
  name: FrameStyle
  nameWithType: FrameStyle
  fullName: System.Windows.Forms.FrameStyle
- uid: System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawReversibleLine(Point,Point,Color)
  nameWithType: ControlPaint.DrawReversibleLine(Point,Point,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawReversibleLine(Point,Point,Color)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)
  nameWithType: ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Rectangle,ScrollButton,ButtonState)
- uid: System.Windows.Forms.ScrollButton
  parent: System.Windows.Forms
  isExternal: false
  name: ScrollButton
  nameWithType: ScrollButton
  fullName: System.Windows.Forms.ScrollButton
- uid: System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)
  nameWithType: ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)
  fullName: System.Windows.Forms.ControlPaint.DrawScrollButton(Graphics,Int32,Int32,Int32,Int32,ScrollButton,ButtonState)
- uid: System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)
  nameWithType: ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)
  fullName: System.Windows.Forms.ControlPaint.DrawSelectionFrame(Graphics,Boolean,Rectangle,Rectangle,Color)
- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawSizeGrip(Graphics,Color,Rectangle)
  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Rectangle)
- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)
  nameWithType: ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ControlPaint.DrawSizeGrip(Graphics,Color,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)
  nameWithType: ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)
  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(Graphics,String,Font,Color,RectangleF,StringFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.StringFormat
  parent: System.Drawing
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)
  nameWithType: ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)
  fullName: System.Windows.Forms.ControlPaint.DrawStringDisabled(IDeviceContext,String,Font,Color,Rectangle,TextFormatFlags)
- uid: System.Drawing.IDeviceContext
  parent: System.Drawing
  isExternal: false
  name: IDeviceContext
  nameWithType: IDeviceContext
  fullName: System.Drawing.IDeviceContext
- uid: System.Windows.Forms.TextFormatFlags
  parent: System.Windows.Forms
  isExternal: false
  name: TextFormatFlags
  nameWithType: TextFormatFlags
  fullName: System.Windows.Forms.TextFormatFlags
- uid: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawVisualStyleBorder(Graphics,Rectangle)
  nameWithType: ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)
  fullName: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(Graphics,Rectangle)
- uid: System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: FillReversibleRectangle(Rectangle,Color)
  nameWithType: ControlPaint.FillReversibleRectangle(Rectangle,Color)
  fullName: System.Windows.Forms.ControlPaint.FillReversibleRectangle(Rectangle,Color)
- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: Light(Color)
  nameWithType: ControlPaint.Light(Color)
  fullName: System.Windows.Forms.ControlPaint.Light(Color)
- uid: System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: Light(Color,Single)
  nameWithType: ControlPaint.Light(Color,Single)
  fullName: System.Windows.Forms.ControlPaint.Light(Color,Single)
- uid: System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: LightLight(Color)
  nameWithType: ControlPaint.LightLight(Color)
  fullName: System.Windows.Forms.ControlPaint.LightLight(Color)
- uid: System.Windows.Forms.ControlPaint.ContrastControlDark*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: ContrastControlDark
  nameWithType: ControlPaint.ContrastControlDark
- uid: System.Windows.Forms.ControlPaint.CreateHBitmap16Bit*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: CreateHBitmap16Bit
  nameWithType: ControlPaint.CreateHBitmap16Bit
- uid: System.Windows.Forms.ControlPaint.CreateHBitmapColorMask*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: CreateHBitmapColorMask
  nameWithType: ControlPaint.CreateHBitmapColorMask
- uid: System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: CreateHBitmapTransparencyMask
  nameWithType: ControlPaint.CreateHBitmapTransparencyMask
- uid: System.Windows.Forms.ControlPaint.Dark*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: Dark
  nameWithType: ControlPaint.Dark
- uid: System.Windows.Forms.ControlPaint.DarkDark*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DarkDark
  nameWithType: ControlPaint.DarkDark
- uid: System.Windows.Forms.ControlPaint.DrawBorder*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder
  nameWithType: ControlPaint.DrawBorder
- uid: System.Windows.Forms.ControlPaint.DrawBorder3D*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawBorder3D
  nameWithType: ControlPaint.DrawBorder3D
- uid: System.Windows.Forms.ControlPaint.DrawButton*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawButton
  nameWithType: ControlPaint.DrawButton
- uid: System.Windows.Forms.ControlPaint.DrawCaptionButton*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawCaptionButton
  nameWithType: ControlPaint.DrawCaptionButton
- uid: System.Windows.Forms.ControlPaint.DrawCheckBox*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawCheckBox
  nameWithType: ControlPaint.DrawCheckBox
- uid: System.Windows.Forms.ControlPaint.DrawComboButton*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawComboButton
  nameWithType: ControlPaint.DrawComboButton
- uid: System.Windows.Forms.ControlPaint.DrawContainerGrabHandle*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawContainerGrabHandle
  nameWithType: ControlPaint.DrawContainerGrabHandle
- uid: System.Windows.Forms.ControlPaint.DrawFocusRectangle*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawFocusRectangle
  nameWithType: ControlPaint.DrawFocusRectangle
- uid: System.Windows.Forms.ControlPaint.DrawGrabHandle*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawGrabHandle
  nameWithType: ControlPaint.DrawGrabHandle
- uid: System.Windows.Forms.ControlPaint.DrawGrid*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawGrid
  nameWithType: ControlPaint.DrawGrid
- uid: System.Windows.Forms.ControlPaint.DrawImageDisabled*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawImageDisabled
  nameWithType: ControlPaint.DrawImageDisabled
- uid: System.Windows.Forms.ControlPaint.DrawLockedFrame*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawLockedFrame
  nameWithType: ControlPaint.DrawLockedFrame
- uid: System.Windows.Forms.ControlPaint.DrawMenuGlyph*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMenuGlyph
  nameWithType: ControlPaint.DrawMenuGlyph
- uid: System.Windows.Forms.ControlPaint.DrawMixedCheckBox*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawMixedCheckBox
  nameWithType: ControlPaint.DrawMixedCheckBox
- uid: System.Windows.Forms.ControlPaint.DrawRadioButton*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawRadioButton
  nameWithType: ControlPaint.DrawRadioButton
- uid: System.Windows.Forms.ControlPaint.DrawReversibleFrame*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawReversibleFrame
  nameWithType: ControlPaint.DrawReversibleFrame
- uid: System.Windows.Forms.ControlPaint.DrawReversibleLine*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawReversibleLine
  nameWithType: ControlPaint.DrawReversibleLine
- uid: System.Windows.Forms.ControlPaint.DrawScrollButton*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawScrollButton
  nameWithType: ControlPaint.DrawScrollButton
- uid: System.Windows.Forms.ControlPaint.DrawSelectionFrame*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawSelectionFrame
  nameWithType: ControlPaint.DrawSelectionFrame
- uid: System.Windows.Forms.ControlPaint.DrawSizeGrip*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawSizeGrip
  nameWithType: ControlPaint.DrawSizeGrip
- uid: System.Windows.Forms.ControlPaint.DrawStringDisabled*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawStringDisabled
  nameWithType: ControlPaint.DrawStringDisabled
- uid: System.Windows.Forms.ControlPaint.DrawVisualStyleBorder*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: DrawVisualStyleBorder
  nameWithType: ControlPaint.DrawVisualStyleBorder
- uid: System.Windows.Forms.ControlPaint.FillReversibleRectangle*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: FillReversibleRectangle
  nameWithType: ControlPaint.FillReversibleRectangle
- uid: System.Windows.Forms.ControlPaint.Light*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: Light
  nameWithType: ControlPaint.Light
- uid: System.Windows.Forms.ControlPaint.LightLight*
  parent: System.Windows.Forms.ControlPaint
  isExternal: false
  name: LightLight
  nameWithType: ControlPaint.LightLight
