### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.FocusManager
  id: FocusManager
  children:
  - System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.FocusedElementProperty
  - System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GotFocusEvent
  - System.Windows.Input.FocusManager.IsFocusScopeProperty
  - System.Windows.Input.FocusManager.LostFocusEvent
  - System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  - System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  langs:
  - csharp
  name: FocusManager
  nameWithType: FocusManager
  fullName: System.Windows.Input.FocusManager
  type: Class
  summary: "Fornece um conjunto de métodos estáticos, propriedades anexadas e eventos para determinar e definir âmbitos de foco e para definir o elemento focado no âmbito."
  remarks: "No [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] existem dois conceitos que dizem respeito à foco: teclado foco e lógico foco.       Diz respeito foco do teclado para o elemento que está atualmente a receber a introdução por teclado.  Podem existir apenas um elemento com o foco do teclado.  Este elemento com o foco do teclado tem <xref:System.Windows.IInputElement.IsKeyboardFocused%2A>definido como `true`.</xref:System.Windows.IInputElement.IsKeyboardFocused%2A>  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>Devolve o elemento com o foco do teclado.</xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>       Foco lógico diz respeito à <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>dentro de um âmbito específico de foco.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       Um âmbito de foco é um elemento de contentor que monitoriza o <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>no seu âmbito.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Por predefinição, o <xref:System.Windows.Window>classe é um âmbito de foco, dado que estão a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar>classes.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Tem um elemento que é um âmbito de foco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>definido como `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Podem existir vários elementos com lógico foco, mas só pode existir um elemento com o foco lógico dentro de um âmbito único foco.  Um elemento com o foco lógico não necessariamente tem foco do teclado, mas um elemento com o foco do teclado terão lógico foco.  É possível definir um âmbito de foco dentro de um âmbito de foco.  Neste caso, o âmbito de foco principal e âmbito subordinado foco podem ter um <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       O cenário seguinte ilustra como o foco do teclado e o foco lógico alteram num [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] aplicações que tenham um <xref:System.Windows.Window>com um <xref:System.Windows.Controls.TextBox>e um <xref:System.Windows.Controls.Menu>que tenha um <xref:System.Windows.Controls.MenuItem>.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window>  Quando o foco do teclado muda do <xref:System.Windows.Controls.TextBox>para o <xref:System.Windows.Controls.MenuItem>, a <xref:System.Windows.Controls.TextBox>foco do teclado perdas, mas mantém o foco lógico para o <xref:System.Windows.Window>focar-se de âmbito.</xref:System.Windows.Window> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.TextBox>  O <xref:System.Windows.Controls.MenuItem>obtém o foco do teclado e obtém o foco lógico para o <xref:System.Windows.Controls.Menu>focar-se de âmbito.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>  Quando o foco do teclado devolve a raiz <xref:System.Windows.Window>o elemento no <xref:System.Windows.Window>âmbito de foco com foco lógico irá obter o foco do teclado, que neste caso é <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Window>  O <xref:System.Windows.Controls.TextBox>tem agora o foco do teclado e lógico foco.</xref:System.Windows.Controls.TextBox>  O <xref:System.Windows.Controls.MenuItem>perde o foco do teclado, mas mantém o foco lógico para o <xref:System.Windows.Controls.Menu>focar-se de âmbito.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>       O valor predefinido de <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>num <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, e <xref:System.Windows.Controls.ContextMenu>é `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Para obter mais informações sobre o foco, consulte o [descrição geral de entrada](~/add/includes/ajax-current-ext-md.md) e [descrição geral de foco](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static class FocusManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Adiciona um processador para o <xref:System.Windows.Input.FocusManager.GotFocus>anexados a eventos.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta para este evento."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "O processador de eventos a adicionar."
  overload: System.Windows.Input.FocusManager.AddGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Adiciona um processador para o <xref:System.Windows.Input.FocusManager.LostFocus>anexados a eventos.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta para este evento."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "O processador de eventos a adicionar."
  overload: System.Windows.Input.FocusManager.AddLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  id: FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifica o <xref:System.Windows.Input.FocusManager.FocusedElement*>anexado propriedade.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusedElementProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  id: GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Obtém o elemento com o foco lógico dentro do âmbito de foco especificado."
  remarks: "O <xref:System.Windows.Input.FocusManager.FocusedElement%2A>é o elemento que tem foco lógico para um âmbito específico de foco.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Este objeto pode ou não pode ter o foco do teclado.  Foco do teclado refere-se para o elemento que recebe a introdução por teclado.  Para obter mais informações sobre o foco, o foco do teclado e o foco lógico, consulte o [descrição geral de entrada](~/add/includes/ajax-current-ext-md.md).       Se `element` não é um âmbito de foco, este método irá devolver `null`.       Utilize <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, para especificar o elemento com o foco lógico dentro de um âmbito de foco especificado.</xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>"
  example:
  - "The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the GetFocusedElement.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O elemento com o foco lógico no âmbito de foco especificado."
    return:
      type: System.Windows.IInputElement
      description: "O elemento no âmbito de foco especificado com o foco lógico."
  overload: System.Windows.Input.FocusManager.GetFocusedElement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  id: GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Determina o predecessor do elemento especificado que tenha mais próximo <xref:System.Windows.Input.FocusManager.IsFocusScope*>definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "O valor predefinido de <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>num <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>é `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Um âmbito de foco é um elemento de contentor que monitoriza o <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>no seu âmbito.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Por predefinição, o <xref:System.Windows.Window>classe é um âmbito de foco, dado que estão a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar>classes.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Tem um elemento que é um âmbito de foco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>definido como `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Para obter mais informações sobre o foco, o foco do teclado e o foco lógico, consulte o [descrição geral de entrada](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O elemento para obter o âmbito foco mais próximo."
    return:
      type: System.Windows.DependencyObject
      description: "O âmbito de foco para o elemento especificado."
  overload: System.Windows.Input.FocusManager.GetFocusScope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  id: GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Determina se especificado <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> é um âmbito de foco."
  remarks: "Um âmbito de foco é um elemento de contentor que monitoriza o <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>no seu âmbito.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Por predefinição, o <xref:System.Windows.Window>classe é um âmbito de foco, dado que estão a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar>classes.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Tem um elemento que é um âmbito de foco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>definido como `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Para obter mais informações sobre o foco, o foco do teclado e o foco lógico, consulte o [descrição geral de entrada](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static bool GetIsFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O elemento a partir do qual é possível ler a propriedade anexada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Windows.Input.FocusManager.IsFocusScope*>está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> no elemento especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  overload: System.Windows.Input.FocusManager.GetIsFocusScope*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifica o <xref:System.Windows.Input.FocusManager.GotFocus>anexados a eventos.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  id: IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifica o <xref:System.Windows.Input.FocusManager.IsFocusScope*>anexado propriedade.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "O valor predefinido de <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>num <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>é `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Um âmbito de foco é um elemento de contentor que monitoriza o <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>no seu âmbito.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Por predefinição, o <xref:System.Windows.Window>classe é um âmbito de foco, dado que estão a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar>classes.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Tem um elemento que é um âmbito de foco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>definido como `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Para obter mais informações sobre o foco, o foco do teclado e o foco lógico, consulte o [descrição geral de entrada](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifica o <xref:System.Windows.Input.FocusManager.LostFocus>anexados a eventos.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Remove um processador para o <xref:System.Windows.Input.FocusManager.GotFocus>anexados a eventos.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta para este evento."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "O processador de eventos a serem removidos."
  overload: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Remove um processador para o <xref:System.Windows.Input.FocusManager.LostFocus>anexados a eventos.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O <xref href=&quot;System.Windows.UIElement&quot;> </xref> ou <xref href=&quot;System.Windows.ContentElement&quot;> </xref> que escuta para este evento."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "O processador de eventos a serem removidos."
  overload: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  id: SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Define lógica focar-se no elemento especificado."
  remarks: "O <xref:System.Windows.Input.FocusManager.FocusedElement%2A>é o elemento que tem foco lógico para o âmbito de foco específico.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Este objeto pode ou não pode ter o foco do teclado.  Foco do teclado refere-se para o elemento que recebe a introdução por teclado.  Para obter mais informações sobre o foco, o foco do teclado e o foco lógico, consulte o [descrição geral de entrada](~/add/includes/ajax-current-ext-md.md).       É possível especificar um âmbito de foco que é um predecessor do âmbito que do elemento está no foco.  Por exemplo, se um <xref:System.Windows.Controls.StackPanel>é um âmbito de foco e o respetivo principal <xref:System.Windows.Window>é um âmbito de foco, um <xref:System.Windows.Controls.TextBox>subordinado do <xref:System.Windows.Controls.StackPanel>poderia especificar o <xref:System.Windows.Window>como âmbito de foco ao chamar SetFocusedElement.</xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel>  O <xref:System.Windows.Controls.TextBox>é, em seguida, <xref:System.Windows.Input.FocusManager.FocusedElement%2A>para ambos os <xref:System.Windows.Window>focar-se de âmbito e o <xref:System.Windows.Controls.StackPanel>focar-se de âmbito.</xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.FocusedElement%2A> </xref:System.Windows.Controls.TextBox>       SetFocusedElement proporcionará o foco de lógica de elemento especificado no âmbito de foco especificado e tentará dar o foco do teclado elemento."
  example:
  - "The following example sets the element with logical focus by using the SetFocusedElement and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O âmbito de foco no qual pretende efetuar o elemento especificado <xref:System.Windows.Input.FocusManager.FocusedElement*>.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
    - id: value
      type: System.Windows.IInputElement
      description: "O elemento para dar o foco lógico para."
  overload: System.Windows.Input.FocusManager.SetFocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  id: SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Define o especificado <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> como um âmbito de foco."
  remarks: "Um âmbito de foco é um elemento de contentor que monitoriza o <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>no seu âmbito.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Por predefinição, o <xref:System.Windows.Window>classe é um âmbito de foco, dado que estão a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, e <xref:System.Windows.Controls.ToolBar>classes.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Tem um elemento que é um âmbito de foco <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>definido como `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Para obter mais informações sobre o foco, o foco do teclado e o foco lógico, consulte o [descrição geral de entrada](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The follow example makes an element a focus scope by using SetIsFocusScope.  \n  \n [!code-cs[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focussetisfocusscope)]\n [!code-vb[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focussetisfocusscope)]"
  syntax:
    content: public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "O elemento para tornar um âmbito de foco."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se `element` é um âmbito de foco; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.FocusManager.SetIsFocusScope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler
  nameWithType: FocusManager.AddGotFocusHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler
  nameWithType: FocusManager.AddLostFocusHandler
- uid: System.Windows.Input.FocusManager.GetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement
  nameWithType: FocusManager.GetFocusedElement
- uid: System.Windows.Input.FocusManager.GetFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope
  nameWithType: FocusManager.GetFocusScope
- uid: System.Windows.Input.FocusManager.GetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope
  nameWithType: FocusManager.GetIsFocusScope
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler
  nameWithType: FocusManager.RemoveGotFocusHandler
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler
  nameWithType: FocusManager.RemoveLostFocusHandler
- uid: System.Windows.Input.FocusManager.SetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement
  nameWithType: FocusManager.SetFocusedElement
- uid: System.Windows.Input.FocusManager.SetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope
  nameWithType: FocusManager.SetIsFocusScope
