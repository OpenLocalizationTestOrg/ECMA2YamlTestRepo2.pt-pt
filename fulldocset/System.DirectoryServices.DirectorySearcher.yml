### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySearcher
  id: DirectorySearcher
  children:
  - System.DirectoryServices.DirectorySearcher.#ctor
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.Asynchronous
  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  - System.DirectoryServices.DirectorySearcher.CacheResults
  - System.DirectoryServices.DirectorySearcher.ClientTimeout
  - System.DirectoryServices.DirectorySearcher.DerefAlias
  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  - System.DirectoryServices.DirectorySearcher.ExtendedDN
  - System.DirectoryServices.DirectorySearcher.Filter
  - System.DirectoryServices.DirectorySearcher.FindAll
  - System.DirectoryServices.DirectorySearcher.FindOne
  - System.DirectoryServices.DirectorySearcher.PageSize
  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  - System.DirectoryServices.DirectorySearcher.ReferralChasing
  - System.DirectoryServices.DirectorySearcher.SearchRoot
  - System.DirectoryServices.DirectorySearcher.SearchScope
  - System.DirectoryServices.DirectorySearcher.SecurityMasks
  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  - System.DirectoryServices.DirectorySearcher.SizeLimit
  - System.DirectoryServices.DirectorySearcher.Sort
  - System.DirectoryServices.DirectorySearcher.Tombstone
  - System.DirectoryServices.DirectorySearcher.VirtualListView
  langs:
  - csharp
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
  type: Class
  summary: "Efetua consultas em relação a serviços de domínio do Active Directory."
  remarks: "Utilize um objeto de DirectorySearcher para procurar e executar consultas em relação a uma hierarquia de serviços de domínio do Active Directory utilizando o acesso protocolo LDAP (Lightweight Directory). LDAP é o único fornecido pelo sistema Interfaces de serviço do Active Directory (ADSI) fornecedor que suporte a pesquisa de diretório. Um administrador pode tornar, alter e eliminar objetos que se encontram na hierarquia. Para obter mais informações, consulte [utilizando System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).       Quando cria uma instância de DirectorySearcher, especifique a que pretende obter de raiz e uma lista opcional de propriedades a obter. O <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>propriedade permite-lhe definir as propriedades adicionais para efetuar as seguintes tarefas:-colocar em Cache os resultados da pesquisa no computador local.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> Definir o <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>propriedade `true` para armazenar informações de diretório no computador local.</xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> As atualizações são efetuadas a esta cache local e consolidadas para serviços de domínio do Active Directory apenas quando o <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>método é chamado.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>      -Especifique o período de tempo para procurar, utilizando o <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>propriedade.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>      -Obter apenas os nomes de atributos. Definir o <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>propriedade `true` obter apenas os nomes dos atributos para a qual foram atribuídos valores.</xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>      -Execute uma pesquisa paginada. Definir o <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>propriedade para especificar o número máximo de objetos que são devolvidos numa pesquisa paginada.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> Se não pretender efetuar uma pesquisa paginada, defina o <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>propriedade ao predefinido de zero.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>      -Especifique o número máximo de entradas para devolver, utilizando o <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>propriedade.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> Se definir o <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>propriedade ao predefinido de zero, a predefinição de determinar o servidor é 1000 entradas.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>      > [!NOTE] > Se o número máximo de entradas devolvidas e os limites de tempo exceder as limitações que estão definidas no servidor, as definições do servidor substituem as definições de componente.       Para obter uma lista de valores de propriedade inicial para uma instância da classe DirectorySearcher, consulte o <xref:System.DirectoryServices.DirectorySearcher.%23ctor>construtor.</xref:System.DirectoryServices.DirectorySearcher.%23ctor>      > [!NOTE] > Presume-se que tem uma compreensão geral dos serviços de domínio do Active Directory antes de utilizar esta classe. Para obter mais informações, consulte o <xref:System.DirectoryServices?displayProperty=fullName>Descrição geral.</xref:System.DirectoryServices?displayProperty=fullName>"
  syntax:
    content: >-
      [System.DirectoryServices.DSDescription("DirectorySearcherDesc")]

      public class DirectorySearcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe com valores predefinidos."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial do <xref:System.DirectoryServices.DirectorySearcher>objeto.</xref:System.DirectoryServices.DirectorySearcher>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Uma referência nula (`Nothing` no Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Um objeto de <xref:System.Collections.Specialized.StringCollection>vazio |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher ();
    parameters: []
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  id: '#ctor(System.DirectoryServices.DirectoryEntry)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe utilizando a raiz de pesquisa especificada."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial do <xref:System.DirectoryServices.DirectorySearcher>objeto.</xref:System.DirectoryServices.DirectorySearcher>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *) &quot;|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Um objeto de <xref:System.Collections.Specialized.StringCollection>vazio |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "O nó da hierarquia de serviços de domínio do Active Directory onde é iniciada a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe com o filtro de pesquisa especificada."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial do <xref:System.DirectoryServices.DirectorySearcher>objeto.</xref:System.DirectoryServices.DirectorySearcher>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Uma referência nula (`Nothing` no Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Um objeto de <xref:System.Collections.Specialized.StringCollection>vazio |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter);
    parameters:
    - id: filter
      type: System.String
      description: "A cadeia de filtro de pesquisa no formato de acesso protocolo LDAP (Lightweight Directory). O <xref:System.DirectoryServices.DirectorySearcher.Filter*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe com o filtro de pesquisa de raiz e de pesquisa especificada."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial do <xref:System.DirectoryServices.DirectorySearcher>objeto.</xref:System.DirectoryServices.DirectorySearcher>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Um objeto de <xref:System.Collections.Specialized.StringCollection>vazio. |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "O nó da hierarquia de serviços de domínio do Active Directory onde é iniciada a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "A cadeia de filtro de pesquisa no formato de acesso protocolo LDAP (Lightweight Directory). O <xref:System.DirectoryServices.DirectorySearcher.Filter*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe com o filtro de pesquisa especificado e propriedades a obter."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial do <xref:System.DirectoryServices.DirectorySearcher>objeto.</xref:System.DirectoryServices.DirectorySearcher>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Uma referência nula (`Nothing` no Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad);
    parameters:
    - id: filter
      type: System.String
      description: "A cadeia de filtro de pesquisa no formato de acesso protocolo LDAP (Lightweight Directory). O <xref:System.DirectoryServices.DirectorySearcher.Filter*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "O conjunto de propriedades a obter durante a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe com a raiz de pesquisa especificado, filtro de pesquisa e propriedades a obter..."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial do <xref:System.DirectoryServices.DirectorySearcher>objeto.</xref:System.DirectoryServices.DirectorySearcher>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "O nó da hierarquia de serviços de domínio do Active Directory onde é iniciada a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "A cadeia de filtro de pesquisa no formato de acesso protocolo LDAP (Lightweight Directory). O <xref:System.DirectoryServices.DirectorySearcher.Filter*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "O conjunto de propriedades que são obtidos durante a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> filtrar de classe com a pesquisa especificada, as propriedades a obter e âmbito da procura."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial do <xref:System.DirectoryServices.DirectorySearcher>objeto.</xref:System.DirectoryServices.DirectorySearcher>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Uma referência nula (`Nothing` no Visual Basic) |</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: filter
      type: System.String
      description: "A cadeia de filtro de pesquisa no formato de acesso protocolo LDAP (Lightweight Directory). O <xref:System.DirectoryServices.DirectorySearcher.Filter*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "O conjunto de propriedades a obter durante a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "O âmbito da pesquisa de ocupação observado pelo servidor. O <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> propriedade é inicializada para este valor."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> classe com a raiz de pesquisa especificado, filtro de pesquisa, as propriedades a obter e âmbito da procura."
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "O nó da hierarquia de serviços de domínio do Active Directory onde é iniciada a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "A cadeia de filtro de pesquisa no formato de acesso protocolo LDAP (Lightweight Directory). O <xref:System.DirectoryServices.DirectorySearcher.Filter*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "O conjunto de propriedades a obter durante a pesquisa. O <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>propriedade é inicializada para este valor.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "O âmbito da pesquisa de ocupação observado pelo servidor. O <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> propriedade é inicializada para este valor."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  id: Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica se a procura é efetuada no modo assíncrono."
  remarks: "Uma pesquisa assíncrona pode mostrar os resultados como estes forem detetados ao procurar em simultâneo resultados adicionais. Isto é útil para tarefas como preencher caixas de listagem.       A predefinição para esta propriedade é `false`."
  example:
  - "The following C# example shows how to create an asynchronous search.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n//Set the Asynchronous property to true.  \nsrc.Asynchronous = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Asynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a pesquisa é assíncrona; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário."
  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  id: AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define o nome a apresentar do atributo de nome único para procurar no LDAP. Apenas um atributo pode ser utilizado para este tipo de pesquisa."
  remarks: "O atributo que esta propriedade está definida como tem de ser um atributo de nome único, como o membro ou está. O atributo pode ser único ou com múltiplos valores. Para obter mais informações, consulte os tópicos de adschema &quot;[membro](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)&quot;e&quot;[gerido por](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)&quot; na biblioteca do MSDN em [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       A pesquisa é executada nos objectos que são identificados pelo nome distinto que é especificado no atributo do objeto de base. Por exemplo, se o objeto de base é uma classe de grupo adschema e o AttributeScopeQuery está definido como &quot;membro&quot;, em seguida, a pesquisa será efetuada em relação a todos os objetos que são membros do grupo. Para obter mais informações, consulte o tópico de classe de &quot;Grupo de&quot; adschema na biblioteca do MSDN em [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       Quando a propriedade AttributeScopeQuery é utilizada, a <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>propriedade tem de ser definida como <xref:System.DirectoryServices.SearchScope>.</xref:System.DirectoryServices.SearchScope> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> Se a <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>propriedade está definida como qualquer outro valor, a definição de AttributeScopeQuery propriedade irá gerar um <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>       Para obter mais informações, consulte o tópico &quot;Efetuar um atributo âmbito consulta&quot; na biblioteca do MSDN em [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library))."
  example:
  - "The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \n  \n```c#  \nusing System.DirectoryServices;  \nDirectoryEntry group = new DirectoryEntry(\"LDAP://CN=MyGroup, …\");  \nDirectorySearcher src = new DirectorySearcher(group \"(&(objectClass=user)(objectCategory=Person))\");  \nsrc.AttributeScopedQuery = \"member\";  \nsrc.PropertiesToLoad.Add(\"sn\");  \nsrc.PropertiesToLoad.Add(\"givenName\");  \nsrc.PropertiesToLoad.Add(\"telephoneNumber\");  \nforeach(SearchResult res in src.FindAll())  \n{  \n    Console.WriteLine(\"…\");  \n}  \n```"
  syntax:
    content: public string AttributeScopeQuery { get; set; }
    return:
      type: System.String
      description: "O LDAP nome a apresentar de atributo para efetuar a pesquisa em relação a, ou uma cadeia vazia sem consulta de âmbito de atributo está definida."
  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref:System.DirectoryServices.DirectorySearcher.SearchScope*>propriedade está definida como um valor diferente de <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>.</xref:System.DirectoryServices.DirectorySearcher.SearchScope*>"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  id: CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica se o resultado é colocado em cache no computador cliente."
  remarks: "Se a pesquisa devolve um conjunto de resultados grande, a pesquisa será mais eficiente se esta propriedade estiver definida como `false` para evitar a transferência do resultado definido para o computador cliente.  Se o fizer, no entanto, não será possível enumerar os resultados duas vezes, porque o <xref:System.DirectoryServices.SearchResultCollection>objeto cria um novo objeto de enumerador sempre que é chamado.</xref:System.DirectoryServices.SearchResultCollection>"
  syntax:
    content: public bool CacheResults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o resultado é colocado em cache no computador cliente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.CacheResults*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  id: ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define a quantidade máxima de tempo que o cliente aguarda que o servidor devolver resultados. Se o servidor não responder dentro desta vez, a pesquisa foi abortada e não existem resultados são devolvidos."
  remarks: "A resolução mínima desta propriedade é um segundo. Frações de segundos são ignoradas.       Se o <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>é alcançado antes do cliente exceder o tempo limite, o servidor devolve os resultados e o cliente deixa de espera.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> O limite de tempo máximo de servidor é de 120 segundos."
  syntax:
    content: public TimeSpan ClientTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>estrutura que contém a quantidade máxima de tempo para o cliente deve aguardar para que o servidor devolver resultados.</xref:System.TimeSpan>       O valor predefinido é de-1 segundo, o que significa a aguardar indefinidamente."
  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  id: DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica como os aliases de objetos que sejam encontrados durante uma pesquisa devem ser resolvidos."
  remarks: ''
  example:
  - "The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \n  \n```  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n// Set DerefAlias to Always.  \nsrc.DerefAlias = DerefenceAlias.Always;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }
    return:
      type: System.DirectoryServices.DereferenceAlias
      description: "A <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref> valor que especifica o comportamento no qual estão dereferenced aliases. A predefinição para esta propriedade é <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  id: DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um objecto que representa o controlo de sincronização de diretório a utilizar com a pesquisa."
  remarks: "O controlo de sincronização de diretórios, geralmente referido como o controlo de DirSync, é um controlo LDAP que é utilizado para procurar objetos que foram alterados desde um estado anterior.       Para obter mais informações, consulte o tópico &quot;[a consultar alterações utilizando o controlo DirSync](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)&quot; na biblioteca do MSDN em [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "O <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> objeto para a pesquisa. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Se o controlo de sincronização de diretórios não deve ser utilizado."
  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Liberta os recursos geridos que são utilizados pelo <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> objeto e, opcionalmente, versões não gerido recursos."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método liberta recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se liberta apenas os recursos não geridos."
  overload: System.DirectoryServices.DirectorySearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  id: ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica o formato dos nomes único."
  remarks: ''
  example:
  - "The following example shows how to return a collection of distinguished names in hexadecimal format.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.ExtendedDN = ExtendedDN.HexString;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }
    return:
      type: System.DirectoryServices.ExtendedDN
      description: "Um do <xref href=&quot;System.DirectoryServices.ExtendedDN&quot;> </xref> valores."
  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Filter
  id: Filter
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica a cadeia de filtro de formato de acesso protocolo LDAP (Lightweight Directory)."
  remarks: "The filter uses the following guidelines:  \n  \n1.  The string must be enclosed in parentheses.  \n  \n2.  Expressions can use the relational operators: <, \\<=, =, >=, and >. An example is \"(objectClass=user)\". Another example is \"(lastName>=Davis)\".  \n  \n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \"(&(objectClass=user)(lastName= Davis))\". Another example is \"(&(objectClass=printer)(&#124;(building=42)(building=43)))\".  \n  \n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \"10:20:00 A.M. May 13, 1999\" becomes \"19990513102000Z\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \n  \n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \"8:52:58 P.M. March 23, 1999\" New Zealand Standard Time (the differential is 12 hours) is specified as \"19990323205258.0+1200\".  \n  \n For more information about the LDAP search string format, see \"Search Filter Syntax\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Formatar a cadeia de filtro de pesquisa LDAP, tais como &quot;(objectClass=user)&quot;. A predefinição é &quot;(objectClass=*)&quot;, que obtém todos os objetos."
  overload: System.DirectoryServices.DirectorySearcher.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Executa a pesquisa e devolve uma coleção de entradas que sejam encontrados."
  remarks: "Devido a restrições de implementação, o <xref:System.DirectoryServices.SearchResultCollection>classe não é possível libertar todos os respetivos recursos não geridos quando for libertados.</xref:System.DirectoryServices.SearchResultCollection> Para evitar uma fuga de memória, tem de chamar o <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>método quando o <xref:System.DirectoryServices.SearchResultCollection>objeto já não é necessária.</xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>"
  syntax:
    content: public System.DirectoryServices.SearchResultCollection FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResultCollection
      description: "A <xref href=&quot;System.DirectoryServices.SearchResultCollection&quot;> </xref> objeto que contém os resultados da pesquisa."
  overload: System.DirectoryServices.DirectorySearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Especificado <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> não é um contentor."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A procurar não é suportada pelo fornecedor que está a ser utilizado."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Executa a pesquisa e devolve apenas a primeiro entrada encontra-se."
  remarks: "Se mais do que uma entrada encontra-se durante a pesquisa, é devolvida apenas a primeira entrada. Se não estão localizadas entradas para fazer corresponder os critérios de pesquisa, uma referência nula (`Nothing` no Visual Basic) é devolvido."
  syntax:
    content: public System.DirectoryServices.SearchResult FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResult
      description: "A <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> objeto que contém a entrada primeiro encontrado durante a pesquisa."
  overload: System.DirectoryServices.DirectorySearcher.FindOne*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica o tamanho da página numa pesquisa paginada."
  remarks: "Após o servidor tem de encontrar o número de objetos que são especificadas pela propriedade PageSize, irá parar a procura e devolvem os resultados para o cliente. Quando o cliente solicita mais dados, o servidor irá reiniciar a pesquisa onde parou."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de objetos que o servidor pode devolver numa pesquisa paginada. A predefinição é zero, o que significa que não faça uma pesquisa paginada."
  overload: System.DirectoryServices.DirectorySearcher.PageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O novo valor é menor do que zero."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  id: PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém um valor que indica a lista de propriedades para obter durante a pesquisa."
  remarks: "Para obter as propriedades específicas, adicione-os a esta coleção antes de começar a pesquisa. Por exemplo, `searcher.PropertiesToLoad.Add(&quot;phone&quot;);` irá adicionar a propriedade de telefone para a lista de propriedades para a pesquisa de obter.       A propriedade &quot;ADsPath&quot; sempre é obtido durante a pesquisa. No [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] e sistemas operativos anteriores, a conta que executa a pesquisa tem de ser um membro do grupo Administradores para obter a propriedade ntSecurityDescriptor. Se não for este o caso, o valor da propriedade que é devolvido para ntSecurityDescriptor será `null`. Para obter mais informações, consulte o tópico &quot;NT--descritor de segurança&quot; na biblioteca do MSDN em [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objeto que contém o conjunto de propriedades para obter durante a pesquisa.       A predefinição é vazio <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, que obtém todas as propriedades."
  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  id: PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica se a pesquisa obtém apenas os nomes dos atributos para a qual foram atribuídos valores."
  syntax:
    content: public bool PropertyNamesOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a pesquisa obtém apenas os nomes dos atributos para a qual foram atribuídos valores; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se a pesquisa obtém os nomes e valores para todos os atributos de pedido. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  id: ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica como as referências são chased."
  remarks: "Se a pesquisa de raiz não está especificada no contexto de nomenclatura do servidor ou quando os resultados da pesquisa cruzam um contexto de nomenclatura (por exemplo, quando tiver domínios subordinados e de pesquisa no domínio principal), o servidor envia uma mensagem de referência para o cliente que o cliente pode optar por ignorar ou chase."
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "Um do <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> valores. A predefinição é <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor não é um do <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> valores."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  id: SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica o nó da hierarquia de serviços de domínio do Active Directory onde é iniciada a pesquisa."
  remarks: "Se SearchRoot é uma referência nula (`Nothing` no Visual Basic), a raiz de pesquisa é definida para a raiz do domínio que o servidor está atualmente a utilizar.       Existem várias formas para procurar no catálogo global: - enumerar o catálogo global e escolha o primeiro subordinado.      -Especifique o nome do servidor. Utilize a função de DsGetDcName para localizar o catálogo global.  Para obter mais informações sobre a função de DsGetDcName, consulte o tópico &quot;DsGetDcName&quot; na biblioteca do MSDN em [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).      -Obtenha RootDSE de catálogo global e peça &quot;rootNamingContext&quot;.      -Utilize o catálogo global, especificando um caminho de pesquisa, como se utilizar o LDAP. Por exemplo, &quot;GC: / / UO =..., DC =..., DC =...&quot;.      -C# código seguinte mostra como enumerar o catálogo global e escolha o primeiro subordinado.          ```c#       DirectoryEntry entry = new DirectoryEntry(&quot;GC://forestname&quot;);       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "O <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objeto na hierarquia de serviços de domínio do Active Directory onde é iniciada a pesquisa. A predefinição é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  id: SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica o âmbito da pesquisa de ocupação observado pelo servidor."
  syntax:
    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }
    return:
      type: System.DirectoryServices.SearchScope
      description: "Um do <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> valores. A predefinição é <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.SearchScope*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor não é um do <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> valores."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica as informações de acesso de segurança para os atributos especificados devem ser devolvidas pela pesquisa."
  remarks: ''
  example:
  - "```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "Um do <xref href=&quot;System.DirectoryServices.SecurityMasks&quot;> </xref> valores."
  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  id: ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica a quantidade máxima de tempo que o servidor deve procurar para uma página de resultados individuais. Isto não é o mesmo que o limite de tempo para a pesquisa de todo."
  remarks: "A resolução mínima desta propriedade é um segundo. Frações de segundos são ignoradas.       Quando for atingido o limite de tempo, o servidor interrompe a pesquisa e devolve os resultados que tenham acumulados até esse ponto, juntamente com um cookie que contém as informações sobre onde retomar a pesquisa.      > [!NOTE] > Esta propriedade aplica-se apenas a pesquisas onde <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>está definido como um valor que não é a predefinição de -1.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>"
  syntax:
    content: public TimeSpan ServerPageTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>que representa o período de tempo que o servidor deve procurar para uma página de resultados.</xref:System.TimeSpan>       O valor predefinido é de-1 segundos, que significa a pesquisar indefinidamente."
  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  id: ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "ServerTimeLimit propriedade obtém ou define um valor que indica a quantidade máxima de tempo do servidor despende a procurar. Se for atingido o limite de tempo, apenas entradas encontram-se até que ponto são devolvidas."
  remarks: "A resolução mínima desta propriedade é um segundo. Frações de segundos são ignoradas.       Ao contrário do <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>propriedade, a propriedade ServerTimeLimit indica a quantidade total de tempo que o servidor irá gastam numa pesquisa.</xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> Quando for atingido o limite de tempo, o servidor interrompe a pesquisa e devolve os resultados que tenham acumulados até esse ponto.       Definir ServerTimeLimit para segundo de-1 para utilizar a predefinição de determinar o servidor.      > [!NOTE] > Se definir ServerTimeLimit para um valor que é maior do que a predefinição servidor determinou por 120 segundos, a predefinição de determinar o servidor é utilizada. Após ter sido atingido o limite de tempo de servidor, não é possível continuar a uma pesquisa de onde parou."
  syntax:
    content: public TimeSpan ServerTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>que representa o período de tempo que o servidor deve procurar.</xref:System.TimeSpan>       O valor predefinido é de-1 segundos, o que significa utilizar a predefinição servidor determinou por 120 segundos."
  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  id: SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica o número máximo de objetos que o servidor devolve numa pesquisa."
  remarks: "A paragem do servidor depois do limite de tamanho for atingido e devolve os resultados de pesquisa acumulados até esse ponto.      > [!NOTE] > Se definir SizeLimit para um valor que é maior do que a predefinição de determinar o servidor de entradas de 1000, a predefinição de determinar o servidor é utilizada."
  syntax:
    content: public int SizeLimit { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de objetos que o servidor devolve numa pesquisa. O valor predefinido é zero, o que significa a utilizar o limite de tamanho de determinar o servidor predefinido de entradas de 1000."
  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O novo valor é menor do que zero."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Sort
  id: Sort
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica a propriedade no qual os resultados são ordenados."
  syntax:
    content: public System.DirectoryServices.SortOption Sort { get; set; }
    return:
      type: System.DirectoryServices.SortOption
      description: "A <xref href=&quot;System.DirectoryServices.SortOption&quot;> </xref> objeto que especifica a propriedade e direção que os resultados da pesquisa devem ser ordenados em."
  overload: System.DirectoryServices.DirectorySearcher.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (Nothing em Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  id: Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica se a pesquisa também deverá devolver eliminar objetos que correspondem ao filtro de pesquisa."
  remarks: ''
  example:
  - "The following C# example shows how to set the Tombstone property to `true`.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Create a DirectorySearcher object.  \nDirectorySearcher src = new DirectorySearcher(\"(isDeleted=true)\");  \n//Set the Tombstone property to true.  \nsrc.Tombstone = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Tombstone { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a pesquisa; devem ser incluídos objetos eliminados <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.Tombstone*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  id: VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém ou define um valor que indica as opções de vista de lista virtual para a pesquisa."
  syntax:
    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }
    return:
      type: System.DirectoryServices.DirectoryVirtualListView
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryVirtualListView&quot;> </xref> objeto que contém as informações de pesquisa da vista de lista virtual. O valor predefinido para esta propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que significa que não utilize a opção de pesquisa da vista de lista virtual."
  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
- uid: System.DirectoryServices.SearchScope
  parent: System.DirectoryServices
  isExternal: false
  name: SearchScope
  nameWithType: SearchScope
  fullName: System.DirectoryServices.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DereferenceAlias
  parent: System.DirectoryServices
  isExternal: false
  name: DereferenceAlias
  nameWithType: DereferenceAlias
  fullName: System.DirectoryServices.DereferenceAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.ExtendedDN
  parent: System.DirectoryServices
  isExternal: false
  name: ExtendedDN
  nameWithType: ExtendedDN
  fullName: System.DirectoryServices.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
- uid: System.DirectoryServices.SearchResultCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResultCollection
  nameWithType: SearchResultCollection
  fullName: System.DirectoryServices.SearchResultCollection
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
- uid: System.DirectoryServices.SearchResult
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResult
  nameWithType: SearchResult
  fullName: System.DirectoryServices.SearchResult
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
- uid: System.DirectoryServices.SortOption
  parent: System.DirectoryServices
  isExternal: false
  name: SortOption
  nameWithType: SortOption
  fullName: System.DirectoryServices.SortOption
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
- uid: System.DirectoryServices.DirectoryVirtualListView
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryVirtualListView
  nameWithType: DirectoryVirtualListView
  fullName: System.DirectoryServices.DirectoryVirtualListView
- uid: System.DirectoryServices.DirectorySearcher.#ctor*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher.DirectorySearcher
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose
  nameWithType: DirectorySearcher.Dispose
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll
  nameWithType: DirectorySearcher.FindAll
- uid: System.DirectoryServices.DirectorySearcher.FindOne*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne
  nameWithType: DirectorySearcher.FindOne
- uid: System.DirectoryServices.DirectorySearcher.PageSize*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
- uid: System.DirectoryServices.DirectorySearcher.Tombstone*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
