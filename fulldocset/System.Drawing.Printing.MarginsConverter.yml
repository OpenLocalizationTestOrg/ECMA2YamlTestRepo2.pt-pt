### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.MarginsConverter
  id: MarginsConverter
  children:
  - System.Drawing.Printing.MarginsConverter.#ctor
  - System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: MarginsConverter
  nameWithType: MarginsConverter
  fullName: System.Drawing.Printing.MarginsConverter
  type: Class
  summary: "Provides a MarginsConverter for <see cref=&quot;T:System.Drawing.Printing.Margins&quot;></see>."
  remarks: "The MarginsConverter class provides methods that can convert a string to a <xref:System.Drawing.Printing.Margins>.      > [!NOTE] >  You should never access a type converter directly. Instead, call the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](../Topic/How%20to:%20Implement%20a%20Type%20Converter.md).       For more information on printing, see the <xref:System.Drawing.Printing> namespace overview."
  syntax:
    content: 'public class MarginsConverter : System.ComponentModel.ExpandableObjectConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.ExpandableObjectConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Printing.MarginsConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.MarginsConverter
  langs:
  - csharp
  name: MarginsConverter()
  nameWithType: MarginsConverter.MarginsConverter()
  fullName: System.Drawing.Printing.MarginsConverter.MarginsConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Drawing.Printing.MarginsConverter&quot;></see> class."
  syntax:
    content: public MarginsConverter ();
    parameters: []
  overload: System.Drawing.Printing.MarginsConverter.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.Printing.MarginsConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: MarginsConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.Printing.MarginsConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Returns whether this converter can convert an object of the specified source type to the native type of the converter using the specified context."
  remarks: "The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type> that represents the type from which you want to convert."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Drawing.Printing.MarginsConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.Printing.MarginsConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: MarginsConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.Printing.MarginsConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Returns whether this converter can convert an object to the given destination type using the context."
  remarks: "The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type> that represents the type to which you want to convert."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Drawing.Printing.MarginsConverter.CanConvertTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.Printing.MarginsConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: MarginsConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.Printing.MarginsConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Converts the specified object to the converter&quot;s native type."
  remarks: "The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> that provides the language to convert to."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to convert."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Drawing.Printing.MarginsConverter.ConvertFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    value does not contain values for all four margins. For example, \"100,100,100,100\" specifies 1 inch for the left, right, top, and bottom margins."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be performed."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.Printing.MarginsConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: MarginsConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.Printing.MarginsConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Converts the given value object to the specified destination type using the specified context and arguments."
  remarks: "The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> that provides the language to convert to."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to convert."
    - id: destinationType
      type: System.Type
      description: "The <xref:System.Type> to which to convert the value."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Drawing.Printing.MarginsConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    destinationType is ."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be performed."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.Printing.MarginsConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: MarginsConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.Printing.MarginsConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Creates an &lt;xref:System.Object&gt; given a set of property values for the object."
  remarks: "The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "An <xref:System.Collections.IDictionary> of new property values."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Drawing.Printing.MarginsConverter.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    propertyValues is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.Printing.MarginsConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: MarginsConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Returns whether changing a value on this object requires a call to the &lt;xref:System.Drawing.Printing.MarginsConverter.CreateInstance%2A&gt; method to create a new value, using the specified context."
  remarks: "The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: System.ComponentModel.ExpandableObjectConverter
- uid: System.Drawing.Printing.MarginsConverter.#ctor
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: MarginsConverter()
  nameWithType: MarginsConverter.MarginsConverter()
  fullName: System.Drawing.Printing.MarginsConverter.MarginsConverter()
- uid: System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: MarginsConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.Printing.MarginsConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: MarginsConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.Printing.MarginsConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: MarginsConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.Printing.MarginsConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: MarginsConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.Printing.MarginsConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: MarginsConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.Printing.MarginsConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: MarginsConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.Drawing.Printing.MarginsConverter.#ctor*
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: MarginsConverter
  nameWithType: MarginsConverter.MarginsConverter
- uid: System.Drawing.Printing.MarginsConverter.CanConvertFrom*
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: MarginsConverter.CanConvertFrom
- uid: System.Drawing.Printing.MarginsConverter.CanConvertTo*
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: MarginsConverter.CanConvertTo
- uid: System.Drawing.Printing.MarginsConverter.ConvertFrom*
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: MarginsConverter.ConvertFrom
- uid: System.Drawing.Printing.MarginsConverter.ConvertTo*
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: ConvertTo
  nameWithType: MarginsConverter.ConvertTo
- uid: System.Drawing.Printing.MarginsConverter.CreateInstance*
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: CreateInstance
  nameWithType: MarginsConverter.CreateInstance
- uid: System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported*
  parent: System.Drawing.Printing.MarginsConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: MarginsConverter.GetCreateInstanceSupported
