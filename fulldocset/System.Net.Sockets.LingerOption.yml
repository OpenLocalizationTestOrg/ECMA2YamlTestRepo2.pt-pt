### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.LingerOption
  id: LingerOption
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  summary: "Specifies whether a <xref:System.Net.Sockets.Socket> will remain connected after a call to the <xref:System.Net.Sockets.Socket.Close*> or <xref:System.Net.Sockets.TcpClient.Close*> methods and the length of time it will remain connected, if data remains to be sent."
  remarks: "There may still be data available in the outgoing network buffer after an application calls the <xref:System.Net.Sockets.Socket> or <xref:System.Net.Sockets.TcpClient> method. If you want to specify the amount of time that the <xref:System.Net.Sockets.Socket> will attempt to transmit unsent data after closing, create a LingerOption with the `enable` parameter set to `true`, and the `seconds` parameter set to the desired amount of time. The `seconds` parameter is used to indicate how long you would like the <xref:System.Net.Sockets.Socket> to remain connected before timing out. If you do not want the <xref:System.Net.Sockets.Socket> to stay connected for any length of time after closing, create a LingerOption instance with the `enable` parameter set to `true` and the `seconds` parameter set to zero. In this case, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost. Once created, pass the LingerOption to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> method. If you are sending and receiving data with a <xref:System.Net.Sockets.TcpClient>, then set the LingerOption instance in the <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property.       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a <xref:System.Net.Sockets.Socket> when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set and for a <xref:System.Net.Sockets.TcpClient> when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set."
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public class LingerOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.LingerOption&quot;></xref> class."
  remarks: "There may still be data available in the outgoing network buffer after you close the <xref:System.Net.Sockets.Socket>. Use the `enable` parameter to specify whether you would like the <xref:System.Net.Sockets.Socket> to continue transmitting unsent data after the close method is called. Use the `seconds` parameter to indicate how long you would like the <xref:System.Net.Sockets.Socket> to attempt transferring unsent data before timing out. If you specify `true` for the `enable` parameter and 0 for the `seconds` parameter, the <xref:System.Net.Sockets.Socket> will attempt to send data until there is no data left in the outgoing network buffer. If you specify `false` for the `enable` parameter, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost.       The following table describes the behavior on the <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName> and <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> methods based on the possible values of the `enable` and `seconds` parameters when an T:System.Net.Sockets.LingerOption instance is created and set in the <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> or <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> property.      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.       When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override."
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public LingerOption (bool enable, int seconds);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to remain connected after the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method is called; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: seconds
      type: System.Int32
      description: "The number of seconds to remain connected after the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method is called."
  overload: System.Net.Sockets.LingerOption.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets or sets a value that indicates whether to linger after the <xref:System.Net.Sockets.Socket> is closed."
  remarks: "You can use the Enabled property to determine whether the <xref:System.Net.Sockets.Socket> will linger after closing. Change this value to `true` or `false` and pass the altered <xref:System.Net.Sockets.LingerOption> to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.to disable or enable lingering.       The following table describes the behavior for the possible values of the Enabled property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.       When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Net.Sockets.Socket> should linger after &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; is called; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Sockets.LingerOption.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets or sets the amount of time to remain connected after calling the &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; method if data remains to be sent."
  remarks: "Use this value if you want to determine how long a closed <xref:System.Net.Sockets.Socket> will attempt to transfer unsent data before timing out. You can also set this value to the desired time-out period, in seconds.       If the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property is `true`, and you set LingerTime to 0, the <xref:System.Net.Sockets.Socket> discards any pending data to send in the outgoing network buffer. If you change this value, you must pass the altered <xref:System.Net.Sockets.LingerOption> instance to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.       The following table describes the behavior for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.      |`enable`|`seconds`|Behavior|   |--------------|---------------|--------------|   |`false` (disabled), the default value|The time-out is not applicable, (default).|Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.|   |`true` (enabled)|A nonzero time-out|Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.|   |`true` (enabled)|A zero timeout.|Discards any pending data. For connection-oriented socket (TCP, for example), Winsock resets the connection.|       The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.       When the LingerTime property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override."
  example:
  - "The following example displays the value of this property.  \n  \n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public int LingerTime { get; set; }
    return:
      type: System.Int32
      description: "The amount of time, in seconds, to remain connected after calling &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;."
  overload: System.Net.Sockets.LingerOption.LingerTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.LingerOption.Enabled
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
- uid: System.Net.Sockets.LingerOption.#ctor*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption.LingerOption
- uid: System.Net.Sockets.LingerOption.Enabled*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
