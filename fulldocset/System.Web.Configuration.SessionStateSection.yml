### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.SessionStateSection
  id: SessionStateSection
  children:
  - System.Web.Configuration.SessionStateSection.#ctor
  - System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase
  - System.Web.Configuration.SessionStateSection.CompressionEnabled
  - System.Web.Configuration.SessionStateSection.Cookieless
  - System.Web.Configuration.SessionStateSection.CookieName
  - System.Web.Configuration.SessionStateSection.CustomProvider
  - System.Web.Configuration.SessionStateSection.ElementProperty
  - System.Web.Configuration.SessionStateSection.Mode
  - System.Web.Configuration.SessionStateSection.PartitionResolverType
  - System.Web.Configuration.SessionStateSection.PostDeserialize
  - System.Web.Configuration.SessionStateSection.Properties
  - System.Web.Configuration.SessionStateSection.Providers
  - System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId
  - System.Web.Configuration.SessionStateSection.SessionIDManagerType
  - System.Web.Configuration.SessionStateSection.SqlCommandTimeout
  - System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval
  - System.Web.Configuration.SessionStateSection.SqlConnectionString
  - System.Web.Configuration.SessionStateSection.StateConnectionString
  - System.Web.Configuration.SessionStateSection.StateNetworkTimeout
  - System.Web.Configuration.SessionStateSection.Timeout
  - System.Web.Configuration.SessionStateSection.UseHostingIdentity
  langs:
  - csharp
  name: SessionStateSection
  nameWithType: SessionStateSection
  fullName: System.Web.Configuration.SessionStateSection
  type: Class
  summary: "Configures the session state for a Web application."
  remarks: "The SessionStateSection class refers to the element in the Machine.config or Web.config configuration file identified by the `sessionState` tag.       When a new client begins interacting with a Web application, a session ID is issued and associated with all the subsequent requests from the same client during the time that the session is valid. This ID is used to maintain server-side state associated with the client session across requests. The SessionStateSection controls how the ASP.NET application establishes and maintains this association on behalf of each client.       This mechanism is very flexible and gives you the ability to host session-state information out of process and to track state without using cookies, among other things."
  example:
  - "This section provides two code examples. The first demonstrates how to specify values declaratively for several attributes of the `sessionState` section, which can also be accessed as members of the SessionStateSection class. The second demonstrates how to use the SessionStateSection class.  \n  \n The following configuration file example shows how to specify values declaratively for the `sessionState` section.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState mode=\"InProc\"   \n      stateConnectionString=\"tcpip=127.0.0.1:42424\"   \n      stateNetworkTimeout=\"10\"  \n      sqlConnectionString=\"data source=127.0.0.1;  \n        Integrated Security=SSPI\"  \n      sqlCommandTimeout=\"30\"   \n      customProvider=\"\"   \n      cookieless=\"UseDeviceProfile\"   \n      cookieName=\"ASP.NET_SessionId\"   \n      timeout=\"20\"   \n      allowCustomSqlDatabase=\"False\"   \n      regenerateExpiredSessionId=\"False\"   \n      partitionResolverType=\"\"   \n      useHostingIdentity=\"True\">  \n      <providers>  \n        <clear />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example demonstrates how to use the SessionStateSection class.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_37_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#1](~/add/codesnippet/csharp/t-system.web.configurati_37_1.cs)]"
  syntax:
    content: 'public sealed class SessionStateSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: SessionStateSection()
  nameWithType: SessionStateSection.SessionStateSection()
  fullName: System.Web.Configuration.SessionStateSection.SessionStateSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Configuration.SessionStateSection&quot;></xref> class."
  remarks: "The SessionStateSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.SessionStateSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method."
  syntax:
    content: public SessionStateSection ();
    parameters: []
  overload: System.Web.Configuration.SessionStateSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase
  id: AllowCustomSqlDatabase
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: AllowCustomSqlDatabase
  nameWithType: SessionStateSection.AllowCustomSqlDatabase
  fullName: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value indicating whether the user can specify the initial catalog value in the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString*> property."
  remarks: ''
  example:
  - "The following code example demonstrates how to get the AllowCustomSqlDatabase property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_109_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#2](~/add/codesnippet/csharp/p-system.web.configurati_109_1.cs)]"
  syntax:
    content: public bool AllowCustomSqlDatabase { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the user is allowed to specify the catalog; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.CompressionEnabled
  id: CompressionEnabled
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: CompressionEnabled
  nameWithType: SessionStateSection.CompressionEnabled
  fullName: System.Web.Configuration.SessionStateSection.CompressionEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether compression is enabled for session-state data."
  remarks: "When the CompressionEnabled value is set to `true`, ASP.NET uses the <xref:System.IO.Compression.GZipStream> class to compress and expand session-state data."
  syntax:
    content: public bool CompressionEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if compression is enabled; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.SessionStateSection.CompressionEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.Cookieless
  id: Cookieless
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: Cookieless
  nameWithType: SessionStateSection.Cookieless
  fullName: System.Web.Configuration.SessionStateSection.Cookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value indicating whether cookies are used to identify client sessions."
  remarks: "There are two ways that session state can store the unique ID that associates the client with a server session: by storing an HTTP cookie on the client or by encoding the session ID in the URL. Storing the session ID in the cookie is more secure but requires the client browser to support cookies.       For applications that allow clients that do not support cookies, such as a variety of mobile devices, the session ID may be stored in the URL. The URL option has several drawbacks. It requires that the links on the site be relative and that the page be redirected at the beginning of the session with new query-string values, and it exposes the session ID right in the query string, where it can be picked up for use in a security attack.       You are encouraged to use the cookieless mode only if you need to support clients that lack cookie support.       Session state also supports two additional options: <xref:System.Web.HttpCookieMode> and <xref:System.Web.HttpCookieMode>. The former enables the session-state module to determine what mode (cookie or cookieless) is used on a per-client basis based on the browser capabilities.  The <xref:System.Web.HttpCookieMode> option performs a handshake with the browser to verify whether a cookie may be stored, and therefore requires an additional request to make the determination. If you need to support cookieless clients, strongly consider using <xref:System.Web.HttpCookieMode> to generate cookieless URLs only for clients that require them.      > [!NOTE] >  With UP.Browser 4.1 or UP.Browser 3.2, <xref:System.Web.HttpResponse.Redirect%2A> always behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the Cookieless property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.   >    >  In ASP.NET version 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode> is now the default setting. If your Web application has the Cookieless property set to a Boolean value, then <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers."
  example:
  - "The following code example demonstrates how to get the Cookieless property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_358_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#7](~/add/codesnippet/csharp/p-system.web.configurati_358_1.cs)]"
  syntax:
    content: public System.Web.HttpCookieMode Cookieless { get; set; }
    return:
      type: System.Web.HttpCookieMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if all requests are treated as cookieless, or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if no requests are treated as cookieless, or one of the <xref href=&quot;System.Web.HttpCookieMode&quot;></xref> values. The default value in ASP.NET version 2.0 is <xref href=&quot;System.Web.HttpCookieMode&quot;></xref>. In earlier versions, the default value was <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.SessionStateSection.Cookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.CookieName
  id: CookieName
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: CookieName
  nameWithType: SessionStateSection.CookieName
  fullName: System.Web.Configuration.SessionStateSection.CookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the cookie name."
  remarks: "The default value is `&quot;ASP.NET_SessionId&quot;`."
  example:
  - "The following code example demonstrates how to get the CookieName property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to get the section.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_294_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#5](~/add/codesnippet/csharp/p-system.web.configurati_294_1.cs)]"
  syntax:
    content: public string CookieName { get; set; }
    return:
      type: System.String
      description: "The name of the HTTP cookie to use for session identification."
  overload: System.Web.Configuration.SessionStateSection.CookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.CustomProvider
  id: CustomProvider
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: CustomProvider
  nameWithType: SessionStateSection.CustomProvider
  fullName: System.Web.Configuration.SessionStateSection.CustomProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the name of the custom provider from the <xref:System.Web.Configuration.SessionStateSection.Providers*> collection."
  remarks: "The provider is only used when the session-state mode is set to <xref:System.Web.SessionState.SessionStateMode>."
  example:
  - "The following code example demonstrates how to get the CustomProvider property.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_55_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#4](~/add/codesnippet/csharp/p-system.web.configurati_55_1.cs)]"
  syntax:
    content: public string CustomProvider { get; set; }
    return:
      type: System.String
      description: "The custom provider name."
  overload: System.Web.Configuration.SessionStateSection.CustomProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.ElementProperty
  id: ElementProperty
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: ElementProperty
  nameWithType: SessionStateSection.ElementProperty
  fullName: System.Web.Configuration.SessionStateSection.ElementProperty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "To be added."
  overload: System.Web.Configuration.SessionStateSection.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.Mode
  id: Mode
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: Mode
  nameWithType: SessionStateSection.Mode
  fullName: System.Web.Configuration.SessionStateSection.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value specifying where to store the session state."
  remarks: "The <xref:System.Web.SessionState.SessionStateMode> is not a required attribute and can be inherited from a higher level in the configuration hierarchy or from the default value. However, the configuration handler for this section will always write out the mode based on the current inherited value when writing this section."
  example:
  - "The following code example demonstrates how to get the Mode property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#14](~/add/codesnippet/visualbasic/p-system.web.configurati_21_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#14](~/add/codesnippet/csharp/p-system.web.configurati_21_1.cs)]"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; set; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "One of the <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref> values. The default value is <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref>."
  overload: System.Web.Configuration.SessionStateSection.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.PartitionResolverType
  id: PartitionResolverType
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: PartitionResolverType
  nameWithType: SessionStateSection.PartitionResolverType
  fullName: System.Web.Configuration.SessionStateSection.PartitionResolverType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value specifying where to store the session state."
  remarks: "If the PartitionResolverType property is specified, the <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> property and <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> property are ignored.  The PartitionResolverType can be locked via the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property like other properties within the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element. The connection string returned by the PartitionResolverType will be used on every request to connect to the appropriate server location for the remainder of the request.  If the connection string is invalid, ASP.NET will throw the same exception that is thrown when the configured connection string to the server is invalid.       This property is used to partition session-state data across multiple backend nodes when in SQL or state-server mode."
  syntax:
    content: public string PartitionResolverType { get; set; }
    return:
      type: System.String
      description: "A value specifying where to store the session state, or an empty string (&quot;&quot;)."
  overload: System.Web.Configuration.SessionStateSection.PartitionResolverType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.PostDeserialize
  id: PostDeserialize
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: SessionStateSection.PostDeserialize()
  fullName: System.Web.Configuration.SessionStateSection.PostDeserialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void PostDeserialize ();
    parameters: []
  overload: System.Web.Configuration.SessionStateSection.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.Properties
  id: Properties
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: Properties
  nameWithType: SessionStateSection.Properties
  fullName: System.Web.Configuration.SessionStateSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.Web.Configuration.SessionStateSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.Providers
  id: Providers
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: Providers
  nameWithType: SessionStateSection.Providers
  fullName: System.Web.Configuration.SessionStateSection.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets the current <xref href=&quot;System.Configuration.ProviderSettingsCollection&quot;></xref> providers."
  remarks: "This property refers to the information contained by the configuration tag identified by the `providers` element."
  example:
  - "The following code example demonstrates how to get the Providers property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_15_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#10](~/add/codesnippet/csharp/p-system.web.configurati_15_1.cs)]"
  syntax:
    content: public System.Configuration.ProviderSettingsCollection Providers { get; }
    return:
      type: System.Configuration.ProviderSettingsCollection
      description: "The collection containing the <xref href=&quot;System.Web.Configuration.SessionStateSection&quot;></xref> providers."
  overload: System.Web.Configuration.SessionStateSection.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId
  id: RegenerateExpiredSessionId
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: RegenerateExpiredSessionId
  nameWithType: SessionStateSection.RegenerateExpiredSessionId
  fullName: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value indicating whether the session Id will be re-issued when an expired session ID is specified by the client."
  remarks: "By default, only cookieless URLs are reissued when RegenerateExpiredSessionId is enabled."
  example:
  - "The following code example demonstrates how to get the RegenerateExpiredSessionId property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_367_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#3](~/add/codesnippet/csharp/p-system.web.configurati_367_1.cs)]"
  syntax:
    content: public bool RegenerateExpiredSessionId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the session ID must be regenerated; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.SessionIDManagerType
  id: SessionIDManagerType
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: SessionIDManagerType
  nameWithType: SessionStateSection.SessionIDManagerType
  fullName: System.Web.Configuration.SessionStateSection.SessionIDManagerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value specifying the fully qualified type of session ID Manager."
  remarks: "The SessionIDManagerType overrides session ID generation and management for custom session ID management schemes. The default value is an empty string (&quot;&quot;)."
  syntax:
    content: public string SessionIDManagerType { get; set; }
    return:
      type: System.String
      description: "A fully qualified type of session ID Manager."
  overload: System.Web.Configuration.SessionStateSection.SessionIDManagerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.SqlCommandTimeout
  id: SqlCommandTimeout
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: SqlCommandTimeout
  nameWithType: SessionStateSection.SqlCommandTimeout
  fullName: System.Web.Configuration.SessionStateSection.SqlCommandTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the duration time-out for the SQL commands using the SQL Server session state mode."
  remarks: ''
  example:
  - "The following code example demonstrates how to get the SqlCommandTimeout property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_168_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#13](~/add/codesnippet/csharp/p-system.web.configurati_168_1.cs)]"
  syntax:
    content: public TimeSpan SqlCommandTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The amount of time, in seconds, after which a SQL command will time out. The default is 30 seconds."
  overload: System.Web.Configuration.SessionStateSection.SqlCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval
  id: SqlConnectionRetryInterval
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: SqlConnectionRetryInterval
  nameWithType: SessionStateSection.SqlConnectionRetryInterval
  fullName: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the time interval that should elapse before ASP.NET reconnects to the database."
  remarks: "The SqlConnectionRetryInterval specifies the time interval in seconds before reconnecting to the database when a connection error has occurred."
  syntax:
    content: public TimeSpan SqlConnectionRetryInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "The time interval that should elapse before ASP.NET reconnects to the database."
  overload: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.SqlConnectionString
  id: SqlConnectionString
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: SqlConnectionString
  nameWithType: SessionStateSection.SqlConnectionString
  fullName: System.Web.Configuration.SessionStateSection.SqlConnectionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the SQL connection string."
  remarks: "This `sqlConnectionString` attribute is required when <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode>.  \n  \n> [!NOTE]\n>  To use the <xref:System.Web.SessionState.SessionStateMode> session state mode, you must run the InstallSqlState.sql SQL script (which is installed in [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber* as part of the default .NET Framework installation) on the computer running SQL Server that will store the session state. This creates a database called ASPState with new stored procedures and creates new ASPStateTempApplications and ASPStateTempSessions tables in the TempDB database."
  example:
  - "The following code example demonstrates how to get the SqlConnectionString property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_276_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#8](~/add/codesnippet/csharp/p-system.web.configurati_276_1.cs)]"
  syntax:
    content: public string SqlConnectionString { get; set; }
    return:
      type: System.String
      description: 'The SQL connection string. Its default value is the generic string: &quot;data source=127.0.0.1;Integrated Security=SSPI&quot;'
  overload: System.Web.Configuration.SessionStateSection.SqlConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.StateConnectionString
  id: StateConnectionString
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: StateConnectionString
  nameWithType: SessionStateSection.StateConnectionString
  fullName: System.Web.Configuration.SessionStateSection.StateConnectionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the state server connection string."
  remarks: "This property specifies the server name and the port when the session state is stored remotely. The `stateConnectionString` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> is set to <xref:System.Web.SessionState.SessionStateMode>.  \n  \n> [!NOTE]\n>  Make sure the ASP.NET state service is running on the remote server that stores the session-state information. This service is installed with ASP.NET and is located by default at [*drive*:]\\WINDOWS\\Microsoft.NET\\Framework\\\\*VersionNumber*\\aspnet_state.exe."
  example:
  - "The following code example demonstrates how to get the StateConnectionString property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_394_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#9](~/add/codesnippet/csharp/p-system.web.configurati_394_1.cs)]"
  syntax:
    content: public string StateConnectionString { get; set; }
    return:
      type: System.String
      description: "The state server connection string."
  overload: System.Web.Configuration.SessionStateSection.StateConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.StateNetworkTimeout
  id: StateNetworkTimeout
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: StateNetworkTimeout
  nameWithType: SessionStateSection.StateNetworkTimeout
  fullName: System.Web.Configuration.SessionStateSection.StateNetworkTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the amount of time the network connection between the Web server and the state server can remain idle."
  remarks: "This `sessionStateSection` attribute is required when the <xref:System.Web.Configuration.SessionStateSection.Mode%2A> property is set to <xref:System.Web.SessionState.SessionStateMode>."
  example:
  - "The following code example demonstrates how to get the StateNetworkTimeout property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_340_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#6](~/add/codesnippet/csharp/p-system.web.configurati_340_1.cs)]"
  syntax:
    content: public TimeSpan StateNetworkTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The time, in seconds, that the network connection between the Web server and the state server can remain idle before the session is abandoned. The default value is 10 seconds."
  overload: System.Web.Configuration.SessionStateSection.StateNetworkTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.Timeout
  id: Timeout
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: Timeout
  nameWithType: SessionStateSection.Timeout
  fullName: System.Web.Configuration.SessionStateSection.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the session time-out"
  remarks: "The Timeout property cannot be set to a value greater than 525,601 minutes (1 year)."
  example:
  - "The following code example demonstrates how to get the Timeout property. Refer to the code example in the <xref:System.Web.Configuration.SessionStateSection> class topic to learn how to access the <xref:System.Web.Configuration.SessionStateSection> object.  \n  \n [!code-vb[System.Web.Configuration.SessionStateSection#11](~/add/codesnippet/visualbasic/p-system.web.configurati_83_1.vb)]\n [!code-cs[System.Web.Configuration.SessionStateSection#11](~/add/codesnippet/csharp/p-system.web.configurati_83_1.cs)]"
  syntax:
    content: public TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The session time-out, in minutes. The default value is 20 minutes."
  overload: System.Web.Configuration.SessionStateSection.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.SessionStateSection.UseHostingIdentity
  id: UseHostingIdentity
  parent: System.Web.Configuration.SessionStateSection
  langs:
  - csharp
  name: UseHostingIdentity
  nameWithType: SessionStateSection.UseHostingIdentity
  fullName: System.Web.Configuration.SessionStateSection.UseHostingIdentity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value specifying the whether the session state will use client impersonation when available, or will always revert to the hosting identity."
  syntax:
    content: public bool UseHostingIdentity { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if Web application should revert to hosting identity; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.SessionStateSection.UseHostingIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.SessionStateSection.#ctor
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SessionStateSection()
  nameWithType: SessionStateSection.SessionStateSection()
  fullName: System.Web.Configuration.SessionStateSection.SessionStateSection()
- uid: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: AllowCustomSqlDatabase
  nameWithType: SessionStateSection.AllowCustomSqlDatabase
  fullName: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.SessionStateSection.CompressionEnabled
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: CompressionEnabled
  nameWithType: SessionStateSection.CompressionEnabled
  fullName: System.Web.Configuration.SessionStateSection.CompressionEnabled
- uid: System.Web.Configuration.SessionStateSection.Cookieless
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Cookieless
  nameWithType: SessionStateSection.Cookieless
  fullName: System.Web.Configuration.SessionStateSection.Cookieless
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Configuration.SessionStateSection.CookieName
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: CookieName
  nameWithType: SessionStateSection.CookieName
  fullName: System.Web.Configuration.SessionStateSection.CookieName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.SessionStateSection.CustomProvider
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: CustomProvider
  nameWithType: SessionStateSection.CustomProvider
  fullName: System.Web.Configuration.SessionStateSection.CustomProvider
- uid: System.Web.Configuration.SessionStateSection.ElementProperty
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: ElementProperty
  nameWithType: SessionStateSection.ElementProperty
  fullName: System.Web.Configuration.SessionStateSection.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Web.Configuration.SessionStateSection.Mode
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Mode
  nameWithType: SessionStateSection.Mode
  fullName: System.Web.Configuration.SessionStateSection.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.Configuration.SessionStateSection.PartitionResolverType
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: PartitionResolverType
  nameWithType: SessionStateSection.PartitionResolverType
  fullName: System.Web.Configuration.SessionStateSection.PartitionResolverType
- uid: System.Web.Configuration.SessionStateSection.PostDeserialize
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: PostDeserialize()
  nameWithType: SessionStateSection.PostDeserialize()
  fullName: System.Web.Configuration.SessionStateSection.PostDeserialize()
- uid: System.Web.Configuration.SessionStateSection.Properties
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Properties
  nameWithType: SessionStateSection.Properties
  fullName: System.Web.Configuration.SessionStateSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.SessionStateSection.Providers
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Providers
  nameWithType: SessionStateSection.Providers
  fullName: System.Web.Configuration.SessionStateSection.Providers
- uid: System.Configuration.ProviderSettingsCollection
  parent: System.Configuration
  isExternal: false
  name: ProviderSettingsCollection
  nameWithType: ProviderSettingsCollection
  fullName: System.Configuration.ProviderSettingsCollection
- uid: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: RegenerateExpiredSessionId
  nameWithType: SessionStateSection.RegenerateExpiredSessionId
  fullName: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId
- uid: System.Web.Configuration.SessionStateSection.SessionIDManagerType
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SessionIDManagerType
  nameWithType: SessionStateSection.SessionIDManagerType
  fullName: System.Web.Configuration.SessionStateSection.SessionIDManagerType
- uid: System.Web.Configuration.SessionStateSection.SqlCommandTimeout
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SqlCommandTimeout
  nameWithType: SessionStateSection.SqlCommandTimeout
  fullName: System.Web.Configuration.SessionStateSection.SqlCommandTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SqlConnectionRetryInterval
  nameWithType: SessionStateSection.SqlConnectionRetryInterval
  fullName: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval
- uid: System.Web.Configuration.SessionStateSection.SqlConnectionString
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SqlConnectionString
  nameWithType: SessionStateSection.SqlConnectionString
  fullName: System.Web.Configuration.SessionStateSection.SqlConnectionString
- uid: System.Web.Configuration.SessionStateSection.StateConnectionString
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: StateConnectionString
  nameWithType: SessionStateSection.StateConnectionString
  fullName: System.Web.Configuration.SessionStateSection.StateConnectionString
- uid: System.Web.Configuration.SessionStateSection.StateNetworkTimeout
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: StateNetworkTimeout
  nameWithType: SessionStateSection.StateNetworkTimeout
  fullName: System.Web.Configuration.SessionStateSection.StateNetworkTimeout
- uid: System.Web.Configuration.SessionStateSection.Timeout
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Timeout
  nameWithType: SessionStateSection.Timeout
  fullName: System.Web.Configuration.SessionStateSection.Timeout
- uid: System.Web.Configuration.SessionStateSection.UseHostingIdentity
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: UseHostingIdentity
  nameWithType: SessionStateSection.UseHostingIdentity
  fullName: System.Web.Configuration.SessionStateSection.UseHostingIdentity
- uid: System.Web.Configuration.SessionStateSection.#ctor*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SessionStateSection
  nameWithType: SessionStateSection.SessionStateSection
- uid: System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: AllowCustomSqlDatabase
  nameWithType: SessionStateSection.AllowCustomSqlDatabase
- uid: System.Web.Configuration.SessionStateSection.CompressionEnabled*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: CompressionEnabled
  nameWithType: SessionStateSection.CompressionEnabled
- uid: System.Web.Configuration.SessionStateSection.Cookieless*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Cookieless
  nameWithType: SessionStateSection.Cookieless
- uid: System.Web.Configuration.SessionStateSection.CookieName*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: CookieName
  nameWithType: SessionStateSection.CookieName
- uid: System.Web.Configuration.SessionStateSection.CustomProvider*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: CustomProvider
  nameWithType: SessionStateSection.CustomProvider
- uid: System.Web.Configuration.SessionStateSection.ElementProperty*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: ElementProperty
  nameWithType: SessionStateSection.ElementProperty
- uid: System.Web.Configuration.SessionStateSection.Mode*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Mode
  nameWithType: SessionStateSection.Mode
- uid: System.Web.Configuration.SessionStateSection.PartitionResolverType*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: PartitionResolverType
  nameWithType: SessionStateSection.PartitionResolverType
- uid: System.Web.Configuration.SessionStateSection.PostDeserialize*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: PostDeserialize
  nameWithType: SessionStateSection.PostDeserialize
- uid: System.Web.Configuration.SessionStateSection.Properties*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Properties
  nameWithType: SessionStateSection.Properties
- uid: System.Web.Configuration.SessionStateSection.Providers*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Providers
  nameWithType: SessionStateSection.Providers
- uid: System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: RegenerateExpiredSessionId
  nameWithType: SessionStateSection.RegenerateExpiredSessionId
- uid: System.Web.Configuration.SessionStateSection.SessionIDManagerType*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SessionIDManagerType
  nameWithType: SessionStateSection.SessionIDManagerType
- uid: System.Web.Configuration.SessionStateSection.SqlCommandTimeout*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SqlCommandTimeout
  nameWithType: SessionStateSection.SqlCommandTimeout
- uid: System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SqlConnectionRetryInterval
  nameWithType: SessionStateSection.SqlConnectionRetryInterval
- uid: System.Web.Configuration.SessionStateSection.SqlConnectionString*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: SqlConnectionString
  nameWithType: SessionStateSection.SqlConnectionString
- uid: System.Web.Configuration.SessionStateSection.StateConnectionString*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: StateConnectionString
  nameWithType: SessionStateSection.StateConnectionString
- uid: System.Web.Configuration.SessionStateSection.StateNetworkTimeout*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: StateNetworkTimeout
  nameWithType: SessionStateSection.StateNetworkTimeout
- uid: System.Web.Configuration.SessionStateSection.Timeout*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: Timeout
  nameWithType: SessionStateSection.Timeout
- uid: System.Web.Configuration.SessionStateSection.UseHostingIdentity*
  parent: System.Web.Configuration.SessionStateSection
  isExternal: false
  name: UseHostingIdentity
  nameWithType: SessionStateSection.UseHostingIdentity
