### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  children:
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  langs:
  - csharp
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
  type: Class
  summary: "Represents a key identifier."
  remarks: "Typically, the SecurityKeyIdentifier is not used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. These references are represented by classes that derive from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class. The SecurityKeyIdentifier class contains the collection of these references."
  syntax:
    content: 'public class SecurityKeyIdentifier : System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> class."
  syntax:
    content: public SecurityKeyIdentifier ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> class using the specified key identifier clauses."
  syntax:
    content: public SecurityKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifierClause[] clauses);
    parameters:
    - id: clauses
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
      description: "An array of <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> that contains the key identifier clauses."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clauses</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Adds a key identifier clause to the end of the list."
  syntax:
    content: public void Add (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);
    parameters:
    - id: clause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> to be added to the end of the list."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clause</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether a key can be created for at least one of the key identifier clauses."
  syntax:
    content: public bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a key can be created for at least one of the key identifier clauses; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  id: Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the number of key identifier clauses."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of key identifier clauses."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a key for one of the key identifier clauses."
  remarks: "The <xref:System.IdentityModel.Tokens.SecurityKey> that is returned is for the first key identifier clause in the collection that can create a key."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;></xref> that represents the created key."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A key could not be created for any of the key identifier clauses."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  id: Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public TClause Find<TClause> () where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: TClause
      description: "To be added."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  id: GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns an enumerator that iterates through the collection of key identifier clauses."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
      description: "A &lt;xref:System.Collections.Generic.List%601.Enumerator&gt; of type <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> for the collection."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether the properties of this instance are read-only."
  remarks: "To make this instance of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> class read-only, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A> method."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the properties of this instance are read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the key identifier clause at the specified index."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the key identifier clause in the collection of key identifier clauses."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> at the specified index."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than 0.       -or-       <code>index</code> is equal to or greater than <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Causes this instance to be read-only."
  remarks: "When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set. For example, a key identifier clause cannot be added to this object."
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns an enumerator that iterates through the collection of key identifier clauses."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; that can be used to iterate through the collection."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns the current object."
  remarks: "The ToString method returns the details of all of the key identifier clauses in the key identifier."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "The current object."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  id: TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public bool TryFind<TClause> (out TClause clause) where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters:
    - id: clause
      type: TClause
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  spec.csharp:
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
- uid: TClause
  isExternal: true
  name: TClause
  nameWithType: TClause
  fullName: TClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<SecurityKeyIdentifierClause>
  nameWithType: IEnumerator<SecurityKeyIdentifierClause>
  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add
  nameWithType: SecurityKeyIdentifier.Add
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey
  nameWithType: SecurityKeyIdentifier.CreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find<TClause>
  nameWithType: SecurityKeyIdentifier.Find<TClause>
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator
  nameWithType: SecurityKeyIdentifier.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item
  nameWithType: SecurityKeyIdentifier.Item
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly
  nameWithType: SecurityKeyIdentifier.MakeReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityKeyIdentifier.ToString
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind<TClause>
  nameWithType: SecurityKeyIdentifier.TryFind<TClause>
