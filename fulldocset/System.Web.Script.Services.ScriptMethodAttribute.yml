### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.ScriptMethodAttribute
  id: ScriptMethodAttribute
  children:
  - System.Web.Script.Services.ScriptMethodAttribute.#ctor
  - System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  - System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  - System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  langs:
  - csharp
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute
  fullName: System.Web.Script.Services.ScriptMethodAttribute
  type: Class
  summary: "Especifica o verbo HTTP é utilizado para invocar um método e o formato da resposta. Esta classe não pode ser herdada."
  remarks: "Este atributo é utilizado para especificar informações para métodos que pode ser chamado a partir de script de cliente. O atributo permite-lhe especificar o verbo HTTP (GET ou POST) pode ser utilizado para invocar um método. Também permite-lhe especificar se a resposta é formatada utilizando JavaScript Object Notation (JSON) ou XML.       O atributo ScriptMethodAttribute é opcional. (No entanto, os métodos que podem ser chamados a partir de script de cliente têm de ter o <xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName>atributo aplicado.).</xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> Se um método não está marcado com ScriptMethodAttribute, o método irá ser chamado utilizando o comando HTTP POST e a resposta irá ser serializada como JSON. Não pode substituir esta definição de script.       ScriptMethodAttribute demora apenas os parâmetros nomeados. Seguem-se as propriedades da classe ScriptMethodAttribute que podem ser utilizadas como parâmetros com nome:- <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>Especifica se o método será invocado utilizando o comando HTTP GET.</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> A predefinição é `false`.          > [!IMPORTANT] > Definição o <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>propriedade `true` poderá apresentam um risco de segurança para a sua aplicação, se estiver a trabalhar com dados confidenciais ou de transações.</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> Pedidos GET, a mensagem está codificada pelo browser para o URL e, por conseguinte, é um destino mais fácil em termos de adulteração. Para pedidos GET e POST, deve seguir as diretrizes de segurança para proteger os dados confidenciais.      - <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>Especifica se a resposta irá ser serializada como JSON ou XML.</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> A predefinição é `Json`. O <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>propriedade é útil para especificar XML como o tipo de retorno quando o método devolve um <xref:System.Xml.XmlDocument>ou um <xref:System.Xml.XmlElement>objeto.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument> </xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>      - <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>Especifica se todos os tipos de retorno, incluindo os tipos de cadeia, são serializados como XML.</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> O valor da <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>propriedade é ignorada quando a resposta está a ser serializada como JSON.</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>       Para obter mais informações sobre como utilizar atributos, consulte [atributos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to apply ScriptMethodAttribute to the `GetXmlDocument` and `EchoStringAndDate` methods to specify which HTTP verb to use and to specify the response format.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class ScriptMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Script.Services.ScriptMethodAttribute&quot;> </xref> classe."
  syntax:
    content: public ScriptMethodAttribute ();
    parameters: []
  overload: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  id: ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Obtém ou define o formato da resposta de método."
  remarks: "Utilize a propriedade de ResponseFormat quando pretender especificar XML, como o formato para o tipo de retorno. Isto é útil quando o método devolve um <xref:System.Xml.XmlDocument>ou um <xref:System.Xml.XmlElement>objeto.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument>       Quando a propriedade ResponseFormat está definida como `Xml`, os campos públicos e propriedades do tipo de retorno que têm o <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>atributo aplicado não será ignorado.</xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> Isto acontece porque irá ser serializados utilizando o <xref:System.Xml.Serialization.XmlSerializer>objeto em vez do <xref:System.Web.Script.Serialization.JavaScriptSerializer>objeto.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Xml.Serialization.XmlSerializer> Tem de aplicar o <xref:System.Xml.Serialization.XmlIgnoreAttribute>atributo para tornar <xref:System.Xml.Serialization.XmlSerializer>Ignorar ou ignorar, esses campos públicos e propriedades do tipo de retorno.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlIgnoreAttribute>"
  example:
  - "The following example shows how to apply the <xref:System.Web.Script.Services.ScriptMethodAttribute> attribute to a Web method with the ResponseFormat property set to `Xml`. The return value of the method will be serialized as XML and sent to the succeeded callback function as an object of type <xref:System.Xml.XmlDocument>. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }
    return:
      type: System.Web.Script.Services.ResponseFormat
      description: "Um do <xref href=&quot;System.Web.Script.Services.ResponseFormat&quot;> </xref> valores. A predefinição é <xref uid=&quot;langword_csharp_Json&quot; name=&quot;Json&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  id: UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Obtém ou define um valor que indica se deve ao invocar o método através de HTTP GET."
  remarks: "Não é possível ignorar esta propriedade da ECMAScript (JavaScript) no cliente. Se esta propriedade estiver definida como `true`, invocar o método de script irá utilizar sempre HTTP GET.       Quando esta propriedade está definida como `true`, o código de proxy do cliente utiliza HTTP GET para chamar o serviço Web. Cada parâmetro de entrada para o método é apresentado como um parâmetro de consulta no URL que é utilizado para invocar o método Web. O valor do parâmetro é obtido através de serialização de JavaScript Object Notation (JSON) e o URL de codificação do valor de parâmetro.       A utilização de HTTP GET para invocar o método do serviço Web segue as diretrizes mesmas para qualquer interação do Web. HTTP GET deve ser utilizado apenas para operações em que não existem dados confidenciais são expostos e quando a ação do servidor não tem efeitos secundários.      > [!IMPORTANT] > Definir a propriedade UseHttpGet como `true` poderá apresentam um risco de segurança para a sua aplicação, se estiver a trabalhar com dados confidenciais ou de transações. Pedidos GET, a mensagem está codificada pelo browser para o URL e, por conseguinte, é um destino mais fácil em termos de adulteração."
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the UseHttpGet property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseHttpGet { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o método é invocado utilizando o comando HTTP GET; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o método é invocado utilizando o comando HTTP POST. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  id: XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Obtém ou define um valor que indica se devolvem todos os tipos são serializados como XML, que inclui tipos de cadeia."
  remarks: "Quando esta propriedade está definida como `false`, todos os devolvem tipos são serializados como XML, exceto cadeia, o que é interpretada como markup XML. Se o valor for `false`, e se o tipo de retorno é uma cadeia e se a cadeia não contém a marcação XML, que corresponde a um documento XML bem formado, será invocada a função de chamada de retorno com êxito, mas resultante será cadeia serializada `null`.       O valor de XmlSerializeString é ignorado quando o <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>propriedade está definida como `Json`.</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>"
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the XmlSerializeString property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool XmlSerializeString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se todos os tipos de retorno são serializados como XML; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ResponseFormat
  parent: System.Web.Script.Services
  isExternal: false
  name: ResponseFormat
  nameWithType: ResponseFormat
  fullName: System.Web.Script.Services.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
