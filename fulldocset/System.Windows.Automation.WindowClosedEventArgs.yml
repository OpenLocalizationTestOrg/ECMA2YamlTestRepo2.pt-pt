### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.WindowClosedEventArgs
  id: WindowClosedEventArgs
  children:
  - System.Windows.Automation.WindowClosedEventArgs.#ctor(System.Int32[])
  - System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId
  langs:
  - csharp
  name: WindowClosedEventArgs
  nameWithType: WindowClosedEventArgs
  fullName: System.Windows.Automation.WindowClosedEventArgs
  type: Class
  summary: "Contains information about the event that is raised when a window is closed."
  remarks: "To subscribe to window-closed events, call <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>, specifying <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> in the `eventId` parameter and supplying an [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] event handler that takes a WindowClosedEventArgs parameter.       When your application receives a window-closed event, the `sender` parameter of the event handler cannot be used to obtain information about the window that has closed, because the corresponding [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] element is no longer valid."
  example:
  - For example code, see <xref:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId%2A>.
  syntax:
    content: 'public sealed class WindowClosedEventArgs : System.Windows.Automation.AutomationEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Automation.AutomationEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Automation.AutomationEventArgs.EventId
  platform:
  - net462
- uid: System.Windows.Automation.WindowClosedEventArgs.#ctor(System.Int32[])
  id: '#ctor(System.Int32[])'
  parent: System.Windows.Automation.WindowClosedEventArgs
  langs:
  - csharp
  name: WindowClosedEventArgs(Int32[])
  nameWithType: WindowClosedEventArgs.WindowClosedEventArgs(Int32[])
  fullName: System.Windows.Automation.WindowClosedEventArgs.WindowClosedEventArgs(Int32[])
  type: Constructor
  assemblies:
  - UIAutomationTypes
  namespace: System.Windows.Automation
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Automation.WindowClosedEventArgs&quot;></xref> class."
  syntax:
    content: public WindowClosedEventArgs (int[] runtimeId);
    parameters:
    - id: runtimeId
      type: System.Int32[]
      description: "The runtime identifier of the window that has closed."
  overload: System.Windows.Automation.WindowClosedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId
  id: GetRuntimeId
  parent: System.Windows.Automation.WindowClosedEventArgs
  langs:
  - csharp
  name: GetRuntimeId()
  nameWithType: WindowClosedEventArgs.GetRuntimeId()
  fullName: System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId()
  type: Method
  assemblies:
  - UIAutomationTypes
  namespace: System.Windows.Automation
  summary: "Retrieves the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] runtime [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)] associated with this event."
  remarks: "When your application receives a window-closed event, the `sender` parameter of the event handler cannot be used to obtain information about the window that has closed, because the corresponding [!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)] element is no longer valid. Use GetRuntimeId to match the window with a known identifier."
  example:
  - "In the following example, the handler for the window-closed event ascertains whether the runtime ID of the closed window is in a list of the IDs of open windows. If the runtime ID is present, it is removed from the list.  \n  \n [!code-cs[UIAFocusTracker_snip#101](~/add/codesnippet/csharp/FocusTracker/FocusTracker.cs#101)]\n [!code-vb[UIAFocusTracker_snip#101](~/add/codesnippet/visualbasic/FocusTrackerVB/FocusTracker.vb#101)]"
  syntax:
    content: public int[] GetRuntimeId ();
    parameters: []
    return:
      type: System.Int32[]
      description: "The [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] runtime [!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)] of the window on which the event was raised."
  overload: System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Automation.AutomationEventArgs
  isExternal: false
  name: System.Windows.Automation.AutomationEventArgs
- uid: System.Windows.Automation.WindowClosedEventArgs.#ctor(System.Int32[])
  parent: System.Windows.Automation.WindowClosedEventArgs
  isExternal: false
  name: WindowClosedEventArgs(Int32[])
  nameWithType: WindowClosedEventArgs.WindowClosedEventArgs(Int32[])
  fullName: System.Windows.Automation.WindowClosedEventArgs.WindowClosedEventArgs(Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId
  parent: System.Windows.Automation.WindowClosedEventArgs
  isExternal: false
  name: GetRuntimeId()
  nameWithType: WindowClosedEventArgs.GetRuntimeId()
  fullName: System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId()
- uid: System.Windows.Automation.WindowClosedEventArgs.#ctor*
  parent: System.Windows.Automation.WindowClosedEventArgs
  isExternal: false
  name: WindowClosedEventArgs
  nameWithType: WindowClosedEventArgs.WindowClosedEventArgs
- uid: System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId*
  parent: System.Windows.Automation.WindowClosedEventArgs
  isExternal: false
  name: GetRuntimeId
  nameWithType: WindowClosedEventArgs.GetRuntimeId
