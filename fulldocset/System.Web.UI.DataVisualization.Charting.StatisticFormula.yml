### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula
  id: StatisticFormula
  children:
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  langs:
  - csharp
  name: StatisticFormula
  nameWithType: StatisticFormula
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula
  type: Class
  summary: "Calculates statistical formulas."
  remarks: 'Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas. Each group has common characteristics with respect to their input and return values.'
  syntax:
    content: public class StatisticFormula
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)
  id: Anova(System.Double,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Anova(Double,String)
  nameWithType: StatisticFormula.Anova(Double,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(Double,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The Anova formula determines the existence or absence of a statistically significant difference between the mean values of two or more groups of data."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As AnovaResult = Chart1.DataManipulator.Statistics.Anova(.05, \"Series1,Series2,Series3\")  \n```  \n  \n```c#  \nAnovaResult result = Chart1.DataManipulator.Statistics.Anova(.05, \"Series1,Series2,Series3\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);
    parameters:
    - id: probability
      type: System.Double
      description: "Alpha value. The acceptable input range is between 0 and 1."
    - id: inputSeriesNames
      type: System.String
      description: "Names of two or more input series. Each series must exist in the series collection at the time of the method call, and have the same number of data points."
    return:
      type: System.Web.UI.DataVisualization.Charting.AnovaResult
      description: "An <xref href=&quot;System.Web.UI.DataVisualization.Charting.AnovaResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)
  id: BetaFunction(System.Double,System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: BetaFunction(Double,Double)
  nameWithType: StatisticFormula.BetaFunction(Double,Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(Double,Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The beta function calculates the beta function value."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2);  \n```"
  syntax:
    content: public double BetaFunction (double m, double n);
    parameters:
    - id: m
      type: System.Double
      description: "First value for the beta function."
    - id: n
      type: System.Double
      description: "Second value for the beta function."
    return:
      type: System.Double
      description: "Beta value."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)
  id: Correlation(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Correlation(String,String)
  nameWithType: StatisticFormula.Correlation(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The correlation formula shows the strength of the relationship that exists between two random variables."
  remarks: "The method throws an exception if the input series do not have the same number of data points."
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Correlation(\"Series1\", \"Series2\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Correlation(\"Series1\", \"Series2\");  \n```"
  syntax:
    content: public double Correlation (string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: firstInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group&quot;s data."
    - id: secondInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group&quot;s data."
    return:
      type: System.Double
      description: "Correlation value between the two groups of data."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)
  id: Covariance(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Covariance(String,String)
  nameWithType: StatisticFormula.Covariance(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The covariance formula measures the degree of dependence that may exist between two random variables."
  remarks: "The method throws an exception if the input series do not have the same number of data points."
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As double = Chart1.DataManipulator.Statistics.Covariance(\"Series1\", \"Series2\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Covariance(\"Series1\", \"Series2\");  \n```"
  syntax:
    content: public double Covariance (string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: firstInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group&quot;s data."
    - id: secondInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group&quot;s data."
    return:
      type: System.Double
      description: "Covariance value between the two groups of data."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)
  id: FDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: FDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.FDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(Double,Int32,Int32)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The F distribution formula calculates the probability for the F-distribution."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As double = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7);  \n```"
  syntax:
    content: public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);
    parameters:
    - id: value
      type: System.Double
      description: "The F value for which you want the distribution."
    - id: firstDegreeOfFreedom
      type: System.Int32
      description: "First degree of freedom."
    - id: secondDegreeOfFreedom
      type: System.Int32
      description: "Second degree of freedom."
    return:
      type: System.Double
      description: "Probability for the F distribution."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)
  id: FTest(System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: FTest(Double,String,String)
  nameWithType: StatisticFormula.FTest(Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The F-test formula performs a two-sample F-test using F distribution, and is used to see if the samples have different variances."
  remarks: "The method throws an exception if the input series do not have the same number of data points."
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As FTestResult = Chart1.DataManipulator.Statistics.FTest(0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nFTestResult result = Chart1.DataManipulator.Statistics.FTest(0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: probability
      type: System.Double
      description: "The alpha value. The acceptable range is between 0 and 1."
    - id: firstInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group&quot;s data."
    - id: secondInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group&quot;s data."
    return:
      type: System.Web.UI.DataVisualization.Charting.FTestResult
      description: "An <xref href=&quot;System.Web.UI.DataVisualization.Charting.FTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)
  id: GammaFunction(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: GammaFunction(Double)
  nameWithType: StatisticFormula.GammaFunction(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The gamma function calculates the gamma value."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.GammaFunction(6.2)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.GammaFunction(6.2);  \n```"
  syntax:
    content: public double GammaFunction (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Value for which the gamma value is required."
    return:
      type: System.Double
      description: "Gamma value."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)
  id: InverseFDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: InverseFDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.InverseFDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(Double,Int32,Int32)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The inverse F distribution formula calculates the inverse of the F cumulative distribution."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30);  \n```"
  syntax:
    content: public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);
    parameters:
    - id: probability
      type: System.Double
      description: "Probability for the F distribution. The acceptable range is between 0 and 1."
    - id: firstDegreeOfFreedom
      type: System.Int32
      description: "First degree of freedom."
    - id: secondDegreeOfFreedom
      type: System.Int32
      description: "Second degree of freedom."
    return:
      type: System.Double
      description: "F value for the F distribution."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)
  id: InverseNormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: InverseNormalDistribution(Double)
  nameWithType: StatisticFormula.InverseNormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The inverse normal distribution formula calculates the inverse of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of one."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As double = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05);  \n```"
  syntax:
    content: public double InverseNormalDistribution (double probability);
    parameters:
    - id: probability
      type: System.Double
      description: "Alpha value. The acceptable input range is between 0 and 1."
    return:
      type: System.Double
      description: "Inverse of the normal distribution function."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)
  id: InverseTDistribution(System.Double,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: InverseTDistribution(Double,Int32)
  nameWithType: StatisticFormula.InverseTDistribution(Double,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(Double,Int32)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The inverse *t*-distribution formula calculates the *t*-value of the Student&quot;s *t*-distribution as a function of probability and degrees of freedom."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \ndouble result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15);  \n```"
  syntax:
    content: public double InverseTDistribution (double probability, int degreeOfFreedom);
    parameters:
    - id: probability
      type: System.Double
      description: "Probability for the F distribution. The acceptable range is between 0 and 1."
    - id: degreeOfFreedom
      type: System.Int32
      description: "Degree of freedom."
    return:
      type: System.Double
      description: "Inverse of the *t*-distribution."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)
  id: Mean(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Mean(String)
  nameWithType: StatisticFormula.Mean(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The mean formula calculates the average, or mean, of data stored in a data series."
  remarks: "If named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown."
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Mean(\"Series1\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Mean(\"Series1\");  \n```"
  syntax:
    content: public double Mean (string inputSeriesName);
    parameters:
    - id: inputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required."
    return:
      type: System.Double
      description: "Mean value of all the data points in the given series."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)
  id: Median(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Median(String)
  nameWithType: StatisticFormula.Median(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The median formula calculates the median of the data stored in a data series."
  remarks: "If the named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown."
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Median(\"Series1\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Median(\"Series1\");  \n```"
  syntax:
    content: public double Median (string inputSeriesName);
    parameters:
    - id: inputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the median value is required."
    return:
      type: System.Double
      description: "Median of all the data points in the given series."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)
  id: NormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: NormalDistribution(Double)
  nameWithType: StatisticFormula.NormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The normal distribution formula calculates the value of the standard normal cumulative distribution. The distribution has a mean of 0 and a standard deviation of 1."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.NormalDistribution(1.96)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.NormalDistribution(1.96);  \n```"
  syntax:
    content: public double NormalDistribution (double zValue);
    parameters:
    - id: zValue
      type: System.Double
      description: "Value for which the normal distribution is required."
    return:
      type: System.Double
      description: "Value of the standard normal cumulative distribution."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)
  id: TDistribution(System.Double,System.Int32,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TDistribution(Double,Int32,Boolean)
  nameWithType: StatisticFormula.TDistribution(Double,Int32,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(Double,Int32,Boolean)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The *t*-distribution formula calculates the probability for the Student&quot;s *t*-distribution."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true);  \n```"
  syntax:
    content: public double TDistribution (double value, int degreeOfFreedom, bool oneTail);
    parameters:
    - id: value
      type: System.Double
      description: '`t`-value for which you want the distribution.'
    - id: degreeOfFreedom
      type: System.Int32
      description: "Degree of freedom"
    - id: oneTail
      type: System.Boolean
      description: "If set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, one-tailed distribution is used. Otherwise, two-tailed distribution is used."
    return:
      type: System.Double
      description: '*t*-distribution function probability.'
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  id: TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TTestEqualVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestEqualVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The *t*-test with equal variances formula performs a *t*-test using Student&quot;s *t*-distribution with equal variances."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nTTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "Hypothesized difference between the means of the data groups."
    - id: probability
      type: System.Double
      description: "Alpha value. The acceptable range is between 0 and 1."
    - id: firstInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group&quot;s data."
    - id: secondInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group&quot;s data."
    return:
      type: System.Web.UI.DataVisualization.Charting.TTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.TTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)
  id: TTestPaired(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TTestPaired(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestPaired(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The *t*-test paired formula performs a *t*-test using Student&quot;s *t*-distribution with paired samples. This is useful when there is an observed natural pairing in samples (for example, when a sample group is tested twice)."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nTTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "Hypothesized difference between the means of the data groups."
    - id: probability
      type: System.Double
      description: "Alpha value. The acceptable range is between 0 and 1."
    - id: firstInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group&quot;s data."
    - id: secondInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group&quot;s data."
    return:
      type: System.Web.UI.DataVisualization.Charting.TTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.TTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  id: TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TTestUnequalVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The *t*-test with unequal variances formula performs a *t*-test using Student&quot;s *t*-distribution with unequal variances."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nTTestResult result = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "Hypothesized difference between the means of the data groups."
    - id: probability
      type: System.Double
      description: "Alpha value. The acceptable range is between 0 and 1."
    - id: firstInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group&quot;s data."
    - id: secondInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group&quot;s data."
    return:
      type: System.Web.UI.DataVisualization.Charting.TTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.TTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)
  id: Variance(System.String,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Variance(String,Boolean)
  nameWithType: StatisticFormula.Variance(String,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(String,Boolean)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The variance formula calculates the variance within a group of data."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Variance(\"Series1\", false)  \n```  \n  \n```c#  \nTTestResult result = double result = Chart1.DataManipulator.Statistics.Variance(\"Series1\", false);  \n```"
  syntax:
    content: public double Variance (string inputSeriesName, bool sampleVariance);
    parameters:
    - id: inputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the data for which the mean value is required."
    - id: sampleVariance
      type: System.Boolean
      description: "Specify <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data is a sample of a population; and <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the data is the entire population."
    return:
      type: System.Double
      description: "Variance within the group of data."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  id: ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: ZTest(Double,Double,Double,Double,String,String)
  nameWithType: StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "The Z-test formula performs a Z-test using normal distribution."
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As ZTestResult = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nZTestResult result = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "Hypothesized difference between the means of the data groups."
    - id: varianceFirstGroup
      type: System.Double
      description: "Variance within the first group of data."
    - id: varianceSecondGroup
      type: System.Double
      description: "Variance within the second group of data."
    - id: probability
      type: System.Double
      description: "Alpha value. The acceptable range is between 0 and 1."
    - id: firstInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the first group&quot;s data."
    - id: secondInputSeriesName
      type: System.String
      description: "Name of the <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*> object that stores the second group&quot;s data."
    return:
      type: System.Web.UI.DataVisualization.Charting.ZTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.ZTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Anova(Double,String)
  nameWithType: StatisticFormula.Anova(Double,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(Double,String)
- uid: System.Web.UI.DataVisualization.Charting.AnovaResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: AnovaResult
  nameWithType: AnovaResult
  fullName: System.Web.UI.DataVisualization.Charting.AnovaResult
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: BetaFunction(Double,Double)
  nameWithType: StatisticFormula.BetaFunction(Double,Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(Double,Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Correlation(String,String)
  nameWithType: StatisticFormula.Correlation(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Covariance(String,String)
  nameWithType: StatisticFormula.Covariance(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.FDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(Double,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FTest(Double,String,String)
  nameWithType: StatisticFormula.FTest(Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.FTestResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: FTestResult
  nameWithType: FTestResult
  fullName: System.Web.UI.DataVisualization.Charting.FTestResult
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: GammaFunction(Double)
  nameWithType: StatisticFormula.GammaFunction(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseFDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.InverseFDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(Double,Int32,Int32)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseNormalDistribution(Double)
  nameWithType: StatisticFormula.InverseNormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseTDistribution(Double,Int32)
  nameWithType: StatisticFormula.InverseTDistribution(Double,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(Double,Int32)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Mean(String)
  nameWithType: StatisticFormula.Mean(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Median(String)
  nameWithType: StatisticFormula.Median(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: NormalDistribution(Double)
  nameWithType: StatisticFormula.NormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TDistribution(Double,Int32,Boolean)
  nameWithType: StatisticFormula.TDistribution(Double,Int32,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(Double,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestEqualVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestEqualVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.TTestResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: TTestResult
  nameWithType: TTestResult
  fullName: System.Web.UI.DataVisualization.Charting.TTestResult
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestPaired(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestPaired(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestUnequalVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Variance(String,Boolean)
  nameWithType: StatisticFormula.Variance(String,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(String,Boolean)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: ZTest(Double,Double,Double,Double,String,String)
  nameWithType: StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.ZTestResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: ZTestResult
  nameWithType: ZTestResult
  fullName: System.Web.UI.DataVisualization.Charting.ZTestResult
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Anova
  nameWithType: StatisticFormula.Anova
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: BetaFunction
  nameWithType: StatisticFormula.BetaFunction
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Correlation
  nameWithType: StatisticFormula.Correlation
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Covariance
  nameWithType: StatisticFormula.Covariance
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FDistribution
  nameWithType: StatisticFormula.FDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FTest
  nameWithType: StatisticFormula.FTest
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: GammaFunction
  nameWithType: StatisticFormula.GammaFunction
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseFDistribution
  nameWithType: StatisticFormula.InverseFDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseNormalDistribution
  nameWithType: StatisticFormula.InverseNormalDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseTDistribution
  nameWithType: StatisticFormula.InverseTDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Mean
  nameWithType: StatisticFormula.Mean
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Median
  nameWithType: StatisticFormula.Median
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: NormalDistribution
  nameWithType: StatisticFormula.NormalDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TDistribution
  nameWithType: StatisticFormula.TDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestEqualVariances
  nameWithType: StatisticFormula.TTestEqualVariances
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestPaired
  nameWithType: StatisticFormula.TTestPaired
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestUnequalVariances
  nameWithType: StatisticFormula.TTestUnequalVariances
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Variance
  nameWithType: StatisticFormula.Variance
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: ZTest
  nameWithType: StatisticFormula.ZTest
