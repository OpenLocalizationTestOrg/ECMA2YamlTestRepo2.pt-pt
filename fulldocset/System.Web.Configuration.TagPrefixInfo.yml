### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.TagPrefixInfo
  id: TagPrefixInfo
  children:
  - System.Web.Configuration.TagPrefixInfo.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.Configuration.TagPrefixInfo.Assembly
  - System.Web.Configuration.TagPrefixInfo.ElementProperty
  - System.Web.Configuration.TagPrefixInfo.Equals(System.Object)
  - System.Web.Configuration.TagPrefixInfo.GetHashCode
  - System.Web.Configuration.TagPrefixInfo.Namespace
  - System.Web.Configuration.TagPrefixInfo.Properties
  - System.Web.Configuration.TagPrefixInfo.Source
  - System.Web.Configuration.TagPrefixInfo.TagName
  - System.Web.Configuration.TagPrefixInfo.TagPrefix
  langs:
  - csharp
  name: TagPrefixInfo
  nameWithType: TagPrefixInfo
  fullName: System.Web.Configuration.TagPrefixInfo
  type: Class
  summary: "Defines a configuration element containing tag-related information."
  remarks: "The TagPrefixInfo class allows you to programmatically access and modify tag-prefix information stored in a configuration file. It provides the same functionality as the ASP.NET `@Register` directive. Tag prefixes associate a &quot;namespace&quot; in ASP.NET to the assemblies and namespaces that must be included for custom controls and user controls to work properly. TagPrefixInfo objects are stored as members of a <xref:System.Web.Configuration.TagPrefixCollection> object. The <xref:System.Web.Configuration.TagPrefixCollection> class allows you to programmatically access and modify the `controls` subsection of the `pages` section of a configuration file.       TagPrefixInfo objects are added to the collection using the `add` element and specifying a value for the `tagPrefix` attribute along with values for other relevant attributes. The other required information varies based on the kind of control you will use with the specified tag prefix:      -   If it is a user control, you must define the <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A>, <xref:System.Web.Configuration.TagPrefixInfo.TagName%2A>, and <xref:System.Web.Configuration.TagPrefixInfo.Source%2A> properties.      -   If it is a custom control, you must define the <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A>, <xref:System.Web.Configuration.TagPrefixInfo.Namespace%2A>, and <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> properties. The <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> property is not required if the control is in the application code directory.       The same `tagPrefix` value can be used to map to multiple assemblies or namespaces.      > [!NOTE] >  When a source is specified, the user control itself must not be in the same directory as the page. If it is, you get a run-time error when you attempt to load the page."
  example:
  - "This example demonstrates how to specify values declaratively for several attributes of the `controls` section, which can also be accessed as members of the TagPrefixInfo class.  \n  \n```  \n  \n<system.web>  \n  <pages>  \n    <controls>  \n      <!â€”- Searches all linked assemblies for the namespace -->  \n      <add tagPrefix=\"MyTags1\" namespace=\" MyNameSpace \"/>  \n      <!-- Uses a specified assembly -->  \n      <add tagPrefix=\"MyTags2\" namespace=\"MyNameSpace\"   \n        assembly=\"MyAssembly\"/>  \n      <!-- Uses the specified source for the user control -->  \n      <add tagprefix=\"MyTags3\" tagname=\"MyCtrl\" src=\"MyControl.ascx\"/>  \n    </controls>  \n   </pages>  \n</system.web>  \n```  \n  \n The following code example shows how to use the TagPrefixInfo class to programmatically modify tag prefix settings. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#12](~/add/codesnippet/csharp/t-system.web.configurati_48_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#12](~/add/codesnippet/visualbasic/t-system.web.configurati_48_1.vb)]"
  syntax:
    content: 'public sealed class TagPrefixInfo : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: TagPrefixInfo(String,String,String,String,String)
  nameWithType: TagPrefixInfo.TagPrefixInfo(String,String,String,String,String)
  fullName: System.Web.Configuration.TagPrefixInfo.TagPrefixInfo(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Configuration.TagPrefixInfo&quot;></xref> class using the passed values."
  remarks: "This constructor creates an instance of the <xref:System.Web.Configuration.TagPrefixInfo> class and initializes it using the passed parameters. The parameters for which you specify values depend on the kind of control you refer to with the specified tag prefix. Parameters not required for that tag prefix should be left blank. (Use an empty string.)      -   If the control is a user control, you must specify values for the `tagPrefix`, `tagName`, and `source` parameters.      -   If the control is a custom control, you must specify values for the `tagPrefix` and `nameSpace` parameters. If the control is not in the application code directory, you must also specify the `assembly` parameter."
  example:
  - "The following code example shows how to use the TagPrefixInfo constructor. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#32](~/add/codesnippet/csharp/b70293f7-583b-4b59-b067-_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#32](~/add/codesnippet/visualbasic/b70293f7-583b-4b59-b067-_1.vb)]"
  syntax:
    content: public TagPrefixInfo (string tagPrefix, string nameSpace, string assembly, string tagName, string source);
    parameters:
    - id: tagPrefix
      type: System.String
      description: "The tag prefix being mapped to a source file or namespace and assembly."
    - id: nameSpace
      type: System.String
      description: "The namespace associated with the tag prefix."
    - id: assembly
      type: System.String
      description: "The assembly where the namespace resides."
    - id: tagName
      type: System.String
      description: "The name of the control to be used in the page."
    - id: source
      type: System.String
      description: "The name of the file that contains the user control."
  overload: System.Web.Configuration.TagPrefixInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.Assembly
  id: Assembly
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: Assembly
  nameWithType: TagPrefixInfo.Assembly
  fullName: System.Web.Configuration.TagPrefixInfo.Assembly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the name of the assembly containing the control implementation."
  remarks: "This property specifies the assembly in which the control resides. It applies only to a custom control and is not required if the control is in the application code directory."
  example:
  - "The following code example shows how to use the Assembly property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Assembly { get; set; }
    return:
      type: System.String
      description: "The name of the assembly (without an extension). The default is an empty string."
  overload: System.Web.Configuration.TagPrefixInfo.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.ElementProperty
  id: ElementProperty
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: ElementProperty
  nameWithType: TagPrefixInfo.ElementProperty
  fullName: System.Web.Configuration.TagPrefixInfo.ElementProperty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "To be added."
  overload: System.Web.Configuration.TagPrefixInfo.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TagPrefixInfo.Equals(Object)
  fullName: System.Web.Configuration.TagPrefixInfo.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Compares this instance to another object."
  syntax:
    content: public override bool Equals (object prefix);
    parameters:
    - id: prefix
      type: System.Object
      description: "Object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the objects are identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.TagPrefixInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.GetHashCode
  id: GetHashCode
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TagPrefixInfo.GetHashCode()
  fullName: System.Web.Configuration.TagPrefixInfo.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Returns a hash value for the current instance."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash value for the current instance."
  overload: System.Web.Configuration.TagPrefixInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.Namespace
  id: Namespace
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: Namespace
  nameWithType: TagPrefixInfo.Namespace
  fullName: System.Web.Configuration.TagPrefixInfo.Namespace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the namespace in which the control resides."
  remarks: "This property specifies the namespace in which the control resides. It applies only to custom controls."
  example:
  - "The following code example shows how to use the Namespace property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "The name of the namespace. The default is an empty string."
  overload: System.Web.Configuration.TagPrefixInfo.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.Properties
  id: Properties
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: Properties
  nameWithType: TagPrefixInfo.Properties
  fullName: System.Web.Configuration.TagPrefixInfo.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.Web.Configuration.TagPrefixInfo.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.Source
  id: Source
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: Source
  nameWithType: TagPrefixInfo.Source
  fullName: System.Web.Configuration.TagPrefixInfo.Source
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the name and path of the file containing the user control."
  remarks: "This property specifies the name and path of the file containing the user control implementation. It applies only to user controls. The path may be relative to the application or the application root.      > [!NOTE] >  The user control itself must not be in the same directory as the page. If it is, you get a run-time error when you attempt to load the page."
  example:
  - "The following code example shows how to use the Source property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "The name and path of the file containing the user control."
  overload: System.Web.Configuration.TagPrefixInfo.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.TagName
  id: TagName
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: TagName
  nameWithType: TagPrefixInfo.TagName
  fullName: System.Web.Configuration.TagPrefixInfo.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the name of the user control."
  remarks: 'This property specifies the name of the control. It applies only to user controls. This is the value that would follow the tag prefix in the ASP.NET code. For example, &quot;myControl&quot; in `<myTag: myControl />`.'
  example:
  - "The following code example shows how to use the TagName property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string TagName { get; set; }
    return:
      type: System.String
      description: "The name of the user control."
  overload: System.Web.Configuration.TagPrefixInfo.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TagPrefixInfo.TagPrefix
  id: TagPrefix
  parent: System.Web.Configuration.TagPrefixInfo
  langs:
  - csharp
  name: TagPrefix
  nameWithType: TagPrefixInfo.TagPrefix
  fullName: System.Web.Configuration.TagPrefixInfo.TagPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the tag prefix that is being associated with a source file or namespace and assembly."
  remarks: 'The TagPrefix property defines the alias used for the namespace where the control resides. It applies to user and custom controls. This is the value that would precede the tag name in the ASP.NET code. For example &quot;myTag&quot; in `<myTag: myControl />`.'
  example:
  - "The following code example shows how to use the TagPrefix property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#30](~/add/codesnippet/csharp/p-system.web.configurati_280_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#30](~/add/codesnippet/visualbasic/p-system.web.configurati_280_1.vb)]"
  syntax:
    content: public string TagPrefix { get; set; }
    return:
      type: System.String
      description: "The tag prefix."
  overload: System.Web.Configuration.TagPrefixInfo.TagPrefix*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.TagPrefixInfo.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: TagPrefixInfo(String,String,String,String,String)
  nameWithType: TagPrefixInfo.TagPrefixInfo(String,String,String,String,String)
  fullName: System.Web.Configuration.TagPrefixInfo.TagPrefixInfo(String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.TagPrefixInfo.Assembly
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Assembly
  nameWithType: TagPrefixInfo.Assembly
  fullName: System.Web.Configuration.TagPrefixInfo.Assembly
- uid: System.Web.Configuration.TagPrefixInfo.ElementProperty
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: ElementProperty
  nameWithType: TagPrefixInfo.ElementProperty
  fullName: System.Web.Configuration.TagPrefixInfo.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Web.Configuration.TagPrefixInfo.Equals(System.Object)
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: TagPrefixInfo.Equals(Object)
  fullName: System.Web.Configuration.TagPrefixInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Configuration.TagPrefixInfo.GetHashCode
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: TagPrefixInfo.GetHashCode()
  fullName: System.Web.Configuration.TagPrefixInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.TagPrefixInfo.Namespace
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Namespace
  nameWithType: TagPrefixInfo.Namespace
  fullName: System.Web.Configuration.TagPrefixInfo.Namespace
- uid: System.Web.Configuration.TagPrefixInfo.Properties
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Properties
  nameWithType: TagPrefixInfo.Properties
  fullName: System.Web.Configuration.TagPrefixInfo.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.TagPrefixInfo.Source
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Source
  nameWithType: TagPrefixInfo.Source
  fullName: System.Web.Configuration.TagPrefixInfo.Source
- uid: System.Web.Configuration.TagPrefixInfo.TagName
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: TagName
  nameWithType: TagPrefixInfo.TagName
  fullName: System.Web.Configuration.TagPrefixInfo.TagName
- uid: System.Web.Configuration.TagPrefixInfo.TagPrefix
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: TagPrefix
  nameWithType: TagPrefixInfo.TagPrefix
  fullName: System.Web.Configuration.TagPrefixInfo.TagPrefix
- uid: System.Web.Configuration.TagPrefixInfo.#ctor*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: TagPrefixInfo
  nameWithType: TagPrefixInfo.TagPrefixInfo
- uid: System.Web.Configuration.TagPrefixInfo.Assembly*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Assembly
  nameWithType: TagPrefixInfo.Assembly
- uid: System.Web.Configuration.TagPrefixInfo.ElementProperty*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: ElementProperty
  nameWithType: TagPrefixInfo.ElementProperty
- uid: System.Web.Configuration.TagPrefixInfo.Equals*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Equals
  nameWithType: TagPrefixInfo.Equals
- uid: System.Web.Configuration.TagPrefixInfo.GetHashCode*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: GetHashCode
  nameWithType: TagPrefixInfo.GetHashCode
- uid: System.Web.Configuration.TagPrefixInfo.Namespace*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Namespace
  nameWithType: TagPrefixInfo.Namespace
- uid: System.Web.Configuration.TagPrefixInfo.Properties*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Properties
  nameWithType: TagPrefixInfo.Properties
- uid: System.Web.Configuration.TagPrefixInfo.Source*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: Source
  nameWithType: TagPrefixInfo.Source
- uid: System.Web.Configuration.TagPrefixInfo.TagName*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: TagName
  nameWithType: TagPrefixInfo.TagName
- uid: System.Web.Configuration.TagPrefixInfo.TagPrefix*
  parent: System.Web.Configuration.TagPrefixInfo
  isExternal: false
  name: TagPrefix
  nameWithType: TagPrefixInfo.TagPrefix
