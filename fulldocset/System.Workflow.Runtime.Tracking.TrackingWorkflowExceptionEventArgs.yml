### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  id: TrackingWorkflowExceptionEventArgs
  children:
  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid
  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath
  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception
  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath
  - System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid
  langs:
  - csharp
  name: TrackingWorkflowExceptionEventArgs
  nameWithType: TrackingWorkflowExceptionEventArgs
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  type: Class
  summary: "Contém os dados associados a uma exceção que ocorre durante a execução de uma instância de fluxo de trabalho."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Quando ocorre uma exceção durante a execução de uma instância de fluxo de trabalho e um <xref:System.Workflow.Runtime.Tracking.TrackingProfile>que está associado com o fluxo de trabalho inclui instância um <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint>configurado para um <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent?displayProperty=fullName>, conjuntos de infraestrutura de controlo de fluxo de trabalho <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A>para um TrackingWorkflowExceptionEventArgs no <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>que envia para o serviço de controlo.</xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> </xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> </xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent?displayProperty=fullName> </xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> </xref:System.Workflow.Runtime.Tracking.TrackingProfile>      > [!NOTE] > TrackingWorkflowExceptionEventArgs é utilizada apenas por tempo de execução do serviço de controlo para passar informações <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>.</xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>"
  example:
  - "The following code example demonstrates a method, named `WriteExceptionEventArgs`, which captures a TrackingWorkflowExceptionEventArgs. The code checks whether the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property is `null` (`Nothing` in Visual Basic).  \n  \n If it is not, the code writes the message associated with the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property to the console. In addition, the code converts the value of the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> property to a string and writes it to the console.  \n  \n This code example is part of the EventArgs Tracking SDK sample from the Program.cs file. For more information, see [EventArgs Tracking Sample](http://msdn.microsoft.com/en-us/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  \n  \n [!code-cs[WF_Samples#289](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#289)]\n [!code-vb[WF_Samples#289](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#289)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class TrackingWorkflowExceptionEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid
  id: ContextGuid
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  langs:
  - csharp
  name: ContextGuid
  nameWithType: TrackingWorkflowExceptionEventArgs.ContextGuid
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Obtém o ID de contexto da atividade associada."
  syntax:
    content: public Guid ContextGuid { get; }
    return:
      type: System.Guid
      description: "A <xref:System.Guid>que contém o ID de contexto do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath
  id: CurrentActivityPath
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  langs:
  - csharp
  name: CurrentActivityPath
  nameWithType: TrackingWorkflowExceptionEventArgs.CurrentActivityPath
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Obtém o <xref:System.Workflow.ComponentModel.Activity.QualifiedName*>da atividade atualmente a gerar a exceção.</xref:System.Workflow.ComponentModel.Activity.QualifiedName*>"
  remarks: "Exceções são transmitidas se a cadeia de atividades de processador de exceções. Pode escolher um processador de excepções acionar uma excepção novamente. Quando um processador de excepções emite a exceção novamente, um novo evento de controlo de exceção que contém um novo <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>é gerado para o tempo de execução a infraestrutura de controlo.</xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> CurrentActivityPath refere-se para a atividade que está atualmente a gerar a exceção."
  syntax:
    content: public string CurrentActivityPath { get; }
    return:
      type: System.String
      description: "O <xref:System.Workflow.ComponentModel.Activity.QualifiedName*>da atividade atualmente a gerar a exceção.</xref:System.Workflow.ComponentModel.Activity.QualifiedName*>"
  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception
  id: Exception
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: TrackingWorkflowExceptionEventArgs.Exception
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Obtém o <xref:System.Exception>que está a ser emitida pela instância do fluxo de trabalho.</xref:System.Exception>"
  remarks: ''
  example:
  - "The following code example demonstrates a method, named `WriteExceptionEventArgs`, which captures a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. The code checks whether the Exception property is `null` (`Nothing` in Visual Basic). If it is not, the code writes the message associated with the Exception property to the console. If Exception is `null` (`Nothing`), the code converts the value of the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> property to a string and writes it to the console.  \n  \n This code example is part of the EventArgs Tracking SDK Sample from the Program.cs file. For more information, see [EventArgs Tracking Sample](http://msdn.microsoft.com/en-us/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  \n  \n [!code-cs[WF_Samples#289](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#289)]\n [!code-vb[WF_Samples#289](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#289)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "A exceção que está a ser emitida pela instância do fluxo de trabalho."
  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath
  id: OriginalActivityPath
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  langs:
  - csharp
  name: OriginalActivityPath
  nameWithType: TrackingWorkflowExceptionEventArgs.OriginalActivityPath
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Obtém o <xref:System.Workflow.ComponentModel.Activity.QualifiedName*>da atividade que originalmente emitiu a exceção.</xref:System.Workflow.ComponentModel.Activity.QualifiedName*>"
  remarks: "Exceções são transmitidas se a cadeia de atividades de processador de exceções. Pode escolher um processador de excepções acionar uma excepção novamente. Quando um processador de excepções emite uma exceção novamente, um novo evento de controlo de exceção que contém um novo <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>é gerado para o tempo de execução a infraestrutura de controlo.</xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> OriginalActivityPath refere-se para a atividade que originalmente emitiu a exceção."
  example:
  - "The following code example demonstrates a method, named `WriteExceptionEventArgs`, which captures a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. The code checks whether the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property is `null` (`Nothing` in Visual Basic). If it is not, the code writes the message associated with the <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> property to the console. If <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> is `null` (`Nothing`), the code converts the value of the OriginalActivityPath property to a string and writes it to the console.  \n  \n This code example is part of the EventArgs Tracking SDK Sample from the Program.cs file. For more information, see [EventArgs Tracking Sample](http://msdn.microsoft.com/en-us/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  \n  \n [!code-cs[WF_Samples#289](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#289)]\n [!code-vb[WF_Samples#289](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#289)]"
  syntax:
    content: public string OriginalActivityPath { get; }
    return:
      type: System.String
      description: "O <xref:System.Workflow.ComponentModel.Activity.QualifiedName*>da atividade que originalmente emitiu a exceção.</xref:System.Workflow.ComponentModel.Activity.QualifiedName*>"
  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid
  id: ParentContextGuid
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  langs:
  - csharp
  name: ParentContextGuid
  nameWithType: TrackingWorkflowExceptionEventArgs.ParentContextGuid
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "Obtém o ID de contexto da atividade principal."
  syntax:
    content: public Guid ParentContextGuid { get; }
    return:
      type: System.Guid
      description: "A <xref:System.Guid>que contém o ID de contexto do elemento principal <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: ContextGuid
  nameWithType: TrackingWorkflowExceptionEventArgs.ContextGuid
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: CurrentActivityPath
  nameWithType: TrackingWorkflowExceptionEventArgs.CurrentActivityPath
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: Exception
  nameWithType: TrackingWorkflowExceptionEventArgs.Exception
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: OriginalActivityPath
  nameWithType: TrackingWorkflowExceptionEventArgs.OriginalActivityPath
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: ParentContextGuid
  nameWithType: TrackingWorkflowExceptionEventArgs.ParentContextGuid
  fullName: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid*
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: ContextGuid
  nameWithType: TrackingWorkflowExceptionEventArgs.ContextGuid
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath*
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: CurrentActivityPath
  nameWithType: TrackingWorkflowExceptionEventArgs.CurrentActivityPath
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception*
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: Exception
  nameWithType: TrackingWorkflowExceptionEventArgs.Exception
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath*
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: OriginalActivityPath
  nameWithType: TrackingWorkflowExceptionEventArgs.OriginalActivityPath
- uid: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid*
  parent: System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs
  isExternal: false
  name: ParentContextGuid
  nameWithType: TrackingWorkflowExceptionEventArgs.ParentContextGuid
