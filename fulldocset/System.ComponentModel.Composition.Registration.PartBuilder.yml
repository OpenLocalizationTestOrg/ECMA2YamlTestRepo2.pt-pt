### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Registration.PartBuilder
  id: PartBuilder
  children:
  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})
  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)
  - System.ComponentModel.Composition.Registration.PartBuilder.Export
  - System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1
  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)
  langs:
  - csharp
  name: PartBuilder
  nameWithType: PartBuilder
  fullName: System.ComponentModel.Composition.Registration.PartBuilder
  type: Class
  summary: "Representa uma regra para decorating um conjunto de tipos correspondentes com atributos de estrutura de extensibilidade geridos (MEF)."
  syntax:
    content: public class PartBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})
  id: AddMetadata(System.String,System.Func{System.Type,System.Object})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: AddMetadata(String,Func<Type,Object>)
  nameWithType: PartBuilder.AddMetadata(String,Func<Type,Object>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Func<Type,Object>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Adiciona os metadados para os tipos correspondentes."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, Func<Type,object> itemFunc);
    parameters:
    - id: name
      type: System.String
      description: "A chave de metadados."
    - id: itemFunc
      type: System.Func{System.Type,System.Object}
      description: "Uma função que devolve o valor de metadados, o tipo de destino indicado."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)
  id: AddMetadata(System.String,System.Object)
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: AddMetadata(String,Object)
  nameWithType: PartBuilder.AddMetadata(String,Object)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Object)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Adiciona os metadados para os tipos correspondentes."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "A chave de metadados."
    - id: value
      type: System.Object
      description: "O valor de metadados."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export
  id: Export
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: Export()
  nameWithType: PartBuilder.Export()
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica que os tipos correspondentes devem ser exportado."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder Export ();
    parameters: []
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  id: Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: Export(Action<ExportBuilder>)
  nameWithType: PartBuilder.Export(Action<ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica que os tipos correspondentes devem ser exportado e fornecem informações de configuração para as exportações resultantes."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder Export (Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);
    parameters:
    - id: exportConfiguration
      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}
      description: "Um objeto que contém informações de configuração sobre a exportação. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1
  id: Export``1
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: Export()
  nameWithType: PartBuilder.Export()
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder Export<T> ();
    parameters: []
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "A adicionar."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  id: Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: Export(Action<ExportBuilder>)
  nameWithType: PartBuilder.Export(Action<ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder Export<T> (Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);
    parameters:
    - id: exportConfiguration
      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}
      description: "A adicionar."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "A adicionar."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces
  id: ExportInterfaces
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ExportInterfaces()
  nameWithType: PartBuilder.ExportInterfaces()
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces()
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica que todas as interfaces dos tipos correspondentes deverão ser exportadas."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces ();
    parameters: []
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})
  id: ExportInterfaces(System.Predicate{System.Type})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ExportInterfaces(Predicate<Type>)
  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica um conjunto de interfaces sobre os tipos correspondentes que devem ser exportados."
  remarks: "Este método não exportará <xref:System.IDisposable>ou <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification>objetos.</xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> </xref:System.IDisposable>"
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate<Type> interfaceFilter);
    parameters:
    - id: interfaceFilter
      type: System.Predicate{System.Type}
      description: "Um predicado que especifica um conjunto de interfaces."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>interfaceFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})
  id: ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)
  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica um conjunto de interfaces sobre os tipos correspondentes que devem ser exportados e fornecem informações de configuração para as exportações resultantes."
  remarks: "Este método não exportará <xref:System.IDisposable>ou <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification>objetos.</xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> </xref:System.IDisposable>"
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate<Type> interfaceFilter, Action<Type,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);
    parameters:
    - id: interfaceFilter
      type: System.Predicate{System.Type}
      description: "Um predicado que especifica um conjunto de interfaces."
    - id: exportConfiguration
      type: System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder}
      description: "Um objeto que contém informações de configuração sobre a exportação. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>interfaceFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ExportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica um conjunto de propriedades que devem ser exportado sobre os tipos correspondentes."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "Um predicado que especifica um conjunto de propriedades."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica um conjunto de propriedades sobre os tipos correspondentes que devem ser exportados e fornecem informações de configuração para as exportações."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "Um predicado que especifica um conjunto de propriedades."
    - id: exportConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}
      description: "Um objeto que contém informações de configuração sobre a exportação. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ExportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "A adicionar."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "A adicionar."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "A adicionar."
    - id: exportConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}
      description: "A adicionar."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "A adicionar."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ImportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica um conjunto de propriedades sobre os tipos correspondentes que devem ser importados."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "Um predicado que especifica um conjunto de propriedades."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica um conjunto de propriedades sobre os tipos correspondentes, que deverá ser marcados como importa e fornece informações de configuração para o importa resultante."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "Um predicado que especifica um conjunto de propriedades."
    - id: importConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}
      description: "Um objeto que contém informações de configuração sobre a importação. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ImportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "A adicionar."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "A adicionar."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: "A adicionar."
    - id: importConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}
      description: "A adicionar."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "A adicionar."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})
  id: SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)
  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica o construtor que os tipos correspondentes devem utilizar como um construtor de importação."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo> constructorFilter);
    parameters:
    - id: constructorFilter
      type: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}
      description: "Uma função que escolhe um construtor de um conjunto de construtores."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>constructorFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>constructorFilter</code>returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>constructorFilter</code>Devolve um construtor que não está associado com o tipo de destino."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  id: SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)
  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica o construtor que os tipos correspondentes devem utilizar como um construtor de importação e fornece informações de configuração para a importação resultante."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo> constructorFilter, Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);
    parameters:
    - id: constructorFilter
      type: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}
      description: "Uma função que escolhe um construtor de um conjunto de construtores."
    - id: importConfiguration
      type: System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder}
      description: "Um objeto que contém informações de configuração para o construtor de importação. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>constructorFilter</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>constructorFilter</code>returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>constructorFilter</code>Devolve um construtor que não está associado com o tipo de destino."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)
  id: SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  langs:
  - csharp
  name: SetCreationPolicy(CreationPolicy)
  nameWithType: PartBuilder.SetCreationPolicy(CreationPolicy)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(CreationPolicy)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  summary: "Especifica a política de criação de tipos correspondentes."
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder SetCreationPolicy (System.ComponentModel.Composition.CreationPolicy creationPolicy);
    parameters:
    - id: creationPolicy
      type: System.ComponentModel.Composition.CreationPolicy
      description: "A política de criação."
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder
      description: "O objeto atual, para permitir o encadeamento."
  overload: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: AddMetadata(String,Func<Type,Object>)
  nameWithType: PartBuilder.AddMetadata(String,Func<Type,Object>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Func<Type,Object>)
- uid: System.ComponentModel.Composition.Registration.PartBuilder
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder
  nameWithType: PartBuilder
  fullName: System.ComponentModel.Composition.Registration.PartBuilder
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Type,System.Object}
  parent: System
  isExternal: true
  name: Func<Type,Object>
  nameWithType: Func<Type,Object>
  fullName: System.Func<System.Type,System.Object>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: AddMetadata(String,Object)
  nameWithType: PartBuilder.AddMetadata(String,Object)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Object)
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: Export()
  nameWithType: PartBuilder.Export()
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: Export(Action<ExportBuilder>)
  nameWithType: PartBuilder.Export(Action<ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)
- uid: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}
  parent: System
  isExternal: true
  name: Action<ExportBuilder>
  nameWithType: Action<ExportBuilder>
  fullName: System.Action<System.ComponentModel.Composition.Registration.ExportBuilder>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.ComponentModel.Composition.Registration.ExportBuilder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Registration.ExportBuilder
    name: ExportBuilder
    nameWithType: ExportBuilder
    fullName: ExportBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: Export()
  nameWithType: PartBuilder.Export()
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: Export(Action<ExportBuilder>)
  nameWithType: PartBuilder.Export(Action<ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportInterfaces()
  nameWithType: PartBuilder.ExportInterfaces()
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces()
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportInterfaces(Predicate<Type>)
  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>)
- uid: System.Predicate{System.Type}
  parent: System
  isExternal: true
  name: Predicate<Type>
  nameWithType: Predicate<Type>
  fullName: System.Predicate<System.Type>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)
  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)
- uid: System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder}
  parent: System
  isExternal: true
  name: Action<Type,ExportBuilder>
  nameWithType: Action<Type,ExportBuilder>
  fullName: System.Action<System.Type,System.ComponentModel.Composition.Registration.ExportBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Type,System.ComponentModel.Composition.Registration.ExportBuilder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Registration.ExportBuilder
    name: ExportBuilder
    nameWithType: ExportBuilder
    fullName: ExportBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)
- uid: System.Predicate{System.Reflection.PropertyInfo}
  parent: System
  isExternal: true
  name: Predicate<PropertyInfo>
  nameWithType: Predicate<PropertyInfo>
  fullName: System.Predicate<System.Reflection.PropertyInfo>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Reflection.PropertyInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
- uid: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}
  parent: System
  isExternal: true
  name: Action<PropertyInfo,ExportBuilder>
  nameWithType: Action<PropertyInfo,ExportBuilder>
  fullName: System.Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Registration.ExportBuilder
    name: ExportBuilder
    nameWithType: ExportBuilder
    fullName: ExportBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
- uid: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}
  parent: System
  isExternal: true
  name: Action<PropertyInfo,ImportBuilder>
  nameWithType: Action<PropertyInfo,ImportBuilder>
  fullName: System.Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Registration.ImportBuilder
    name: ImportBuilder
    nameWithType: ImportBuilder
    fullName: ImportBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)
  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)
- uid: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}
  parent: System
  isExternal: true
  name: Func<ConstructorInfo,ConstructorInfo>
  nameWithType: Func<ConstructorInfo,ConstructorInfo>
  fullName: System.Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)
  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)
- uid: System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder}
  parent: System
  isExternal: true
  name: Action<ParameterInfo,ImportBuilder>
  nameWithType: Action<ParameterInfo,ImportBuilder>
  fullName: System.Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Registration.ImportBuilder
    name: ImportBuilder
    nameWithType: ImportBuilder
    fullName: ImportBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: SetCreationPolicy(CreationPolicy)
  nameWithType: PartBuilder.SetCreationPolicy(CreationPolicy)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(CreationPolicy)
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: AddMetadata
  nameWithType: PartBuilder.AddMetadata
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: Export
  nameWithType: PartBuilder.Export
- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export<T>*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: Export<T>
  nameWithType: PartBuilder.Export<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportInterfaces
  nameWithType: PartBuilder.ExportInterfaces
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportProperties
  nameWithType: PartBuilder.ExportProperties
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties<T>*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ExportProperties<T>
  nameWithType: PartBuilder.ExportProperties<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ImportProperties
  nameWithType: PartBuilder.ImportProperties
- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties<T>*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: ImportProperties<T>
  nameWithType: PartBuilder.ImportProperties<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: SelectConstructor
  nameWithType: PartBuilder.SelectConstructor
- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy*
  parent: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: SetCreationPolicy
  nameWithType: PartBuilder.SetCreationPolicy
