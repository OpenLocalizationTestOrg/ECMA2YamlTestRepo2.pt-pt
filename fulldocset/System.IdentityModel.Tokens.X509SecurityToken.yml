### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SecurityToken
  id: X509SecurityToken
  children:
  - System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)
  - System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.X509SecurityToken.Certificate
  - System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.X509SecurityToken.Dispose
  - System.IdentityModel.Tokens.X509SecurityToken.Id
  - System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed
  - System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  - System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  langs:
  - csharp
  name: X509SecurityToken
  nameWithType: X509SecurityToken
  fullName: System.IdentityModel.Tokens.X509SecurityToken
  type: Class
  summary: "Representa um token de segurança baseia-se após um certificado x.&509;."
  remarks: "Para obter os detalhes do certificado x.&509;, aceda a <xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>propriedade.</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>"
  syntax:
    content: 'public class X509SecurityToken : System.IdentityModel.Tokens.SecurityToken, IDisposable'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: X509SecurityToken(X509Certificate2)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> classe utilizando o certificado x.&509; especificado."
  remarks: "Este construtor cria um identificador exclusivo para o <xref:System.IdentityModel.Tokens.X509SecurityToken>token de segurança e atribui o valor para o <xref:System.IdentityModel.Tokens.X509SecurityToken.Id%2A>propriedade.</xref:System.IdentityModel.Tokens.X509SecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: public X509SecurityToken (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que contém o certificado x.&509;. Define o <xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>propriedade.</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)'
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: X509SecurityToken(X509Certificate2,String)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2,String)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> classe com o certificado x.&509; especificado e o identificador exclusivo."
  syntax:
    content: public X509SecurityToken (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string id);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que contém o certificado x.&509;. Define o <xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>propriedade.</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate*>"
    - id: id
      type: System.String
      description: "Um identificador exclusivo do token de segurança. Define o <xref:System.IdentityModel.Tokens.X509SecurityToken.Id*>propriedade.</xref:System.IdentityModel.Tokens.X509SecurityToken.Id*>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>id</code> é nulo."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.Certificate
  id: Certificate
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: Certificate
  nameWithType: X509SecurityToken.Certificate
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Certificate
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o certificado x.&509; associado ao token de segurança."
  remarks: "Utilize a propriedade de certificado para obter detalhes sobre o certificado x.&509; associada a <xref:System.IdentityModel.Tokens.X509SecurityToken>token de segurança.</xref:System.IdentityModel.Tokens.X509SecurityToken> Por exemplo, o thumbprint do certificado x.&509; pode ser acedido utilizando o <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint%2A>propriedade.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que contém o certificado x.&509;."
  overload: System.IdentityModel.Tokens.X509SecurityToken.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "A adicionar."
  overload: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.Dispose
  id: Dispose
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509SecurityToken.Dispose()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Dispose()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>."
  remarks: "Chamar o método de Dispose quando tiver terminado de utilizando <xref:System.IdentityModel.Tokens.X509SecurityToken>.</xref:System.IdentityModel.Tokens.X509SecurityToken> O método de Dispose deixa o <xref:System.IdentityModel.Tokens.X509SecurityToken>num Estado não utilizável.</xref:System.IdentityModel.Tokens.X509SecurityToken> Depois de chamar o método de Dispose, tem de libertar todas as referências para o <xref:System.IdentityModel.Tokens.X509SecurityToken>para que o recoletor de lixo pode reclame a memória que a <xref:System.IdentityModel.Tokens.X509SecurityToken>foi occupying.</xref:System.IdentityModel.Tokens.X509SecurityToken> </xref:System.IdentityModel.Tokens.X509SecurityToken>      > [!NOTE] > Sempre chamada eliminar antes de libertar a última referência <xref:System.IdentityModel.Tokens.X509SecurityToken>.</xref:System.IdentityModel.Tokens.X509SecurityToken> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.IdentityModel.Tokens.X509SecurityToken>do objeto `Finalize` método.</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509SecurityToken.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: X509SecurityToken.Id
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um identificador exclusivo do token de segurança."
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "Um identificador exclusivo do token de segurança."
  overload: System.IdentityModel.Tokens.X509SecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Devolve um valor que indica se o identificador da chave para esta instância é igual ao identificador de chave especificado."
  remarks: "O método MatchesKeyIdentifierClause corresponde aos critérios do certificado x.&509; no <xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>propriedade com base no tipo do `keyIdentifierClause` parâmetro.</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A> A tabela seguinte fornece detalhes sobre o que é correspondido.      | Tipo de cláusula do identificador de chave | O que é correspondido |   |--------------------------------|---------------------|   | <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>| A propriedade <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName%2A>e o número de série do emissor, o valor devolvido do método <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber%2A>. |   | <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>| Os dados devolvida do método <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>. |   | <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>| A extensão do identificador da chave do requerente na propriedade <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions%2A>é correspondida. |   | <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>| O thumbprint que é devolvido pelo <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash%2A>método. |</xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash%2A> </xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions%2A> </xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> </xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName%2A> </xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>"
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> para comparar a esta instância."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>keyIdentifierClause</code> is one of the <xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&quot;></xref>, or <xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;></xref> types and the key identifier clauses match; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: X509SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém as chaves criptográficas associadas ao token de segurança."
  remarks: "Utilize a propriedade SecurityKeys para definir as chaves criptográficas este token de segurança proteger uma mensagem SOAP. As chaves podem ser utilizadas, entre outras coisas, digitalmente iniciar sessão ou encriptar mensagens SOAP."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; do tipo <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> que contém o conjunto de chaves associadas com o token de segurança."
  overload: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed
  id: ThrowIfDisposed
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: ThrowIfDisposed()
  nameWithType: X509SecurityToken.ThrowIfDisposed()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Emite uma exceção se o método ThrowIfDisposed foi chamado para esta instância."
  syntax:
    content: protected void ThrowIfDisposed ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "o método ThrowIfDisposed foi chamado para esta instância."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: X509SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém a primeira instantâneas no tempo no qual este token de segurança é válido."
  remarks: "A propriedade ValidFrom é especificada na hora Universal Coordenada (UTC) e é o valor da <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore%2A>propriedade do certificado x.&509; especificado no <xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>propriedade.</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore%2A>"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>que representa a instantâneas no tempo no qual este token de segurança pela primeira vez é válido.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.X509SecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: X509SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém a última instantânea no tempo no qual este token de segurança é válido."
  remarks: "O <xref:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom%2A>propriedade é especificada na hora Universal Coordenada (UTC) e o valor a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter%2A>propriedade do certificado x.&509; especificado no <xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A>propriedade.</xref:System.IdentityModel.Tokens.X509SecurityToken.Certificate%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter%2A> </xref:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom%2A>"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>que representa o último instantânea no tempo no qual este token de segurança é válido.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.X509SecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: X509SecurityToken(X509Certificate2)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: X509SecurityToken(X509Certificate2,String)
  nameWithType: X509SecurityToken.X509SecurityToken(X509Certificate2,String)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.X509SecurityToken(X509Certificate2,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509SecurityToken.Certificate
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Certificate
  nameWithType: X509SecurityToken.Certificate
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Certificate
- uid: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: X509SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.X509SecurityToken.Dispose
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Dispose()
  nameWithType: X509SecurityToken.Dispose()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Dispose()
- uid: System.IdentityModel.Tokens.X509SecurityToken.Id
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Id
  nameWithType: X509SecurityToken.Id
  fullName: System.IdentityModel.Tokens.X509SecurityToken.Id
- uid: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: X509SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: X509SecurityToken.ThrowIfDisposed()
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed()
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: X509SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: X509SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.X509SecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.X509SecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: X509SecurityToken
  nameWithType: X509SecurityToken.X509SecurityToken
- uid: System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: X509SecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.X509SecurityToken.Certificate*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Certificate
  nameWithType: X509SecurityToken.Certificate
- uid: System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: X509SecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.X509SecurityToken.Dispose*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Dispose
  nameWithType: X509SecurityToken.Dispose
- uid: System.IdentityModel.Tokens.X509SecurityToken.Id*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: Id
  nameWithType: X509SecurityToken.Id
- uid: System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: X509SecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: X509SecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ThrowIfDisposed
  nameWithType: X509SecurityToken.ThrowIfDisposed
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: X509SecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.X509SecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.X509SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: X509SecurityToken.ValidTo
