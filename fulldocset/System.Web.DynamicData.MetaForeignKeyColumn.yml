### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaForeignKeyColumn
  id: MetaForeignKeyColumn
  children:
  - System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)
  - System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames
  - System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)
  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)
  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)
  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)
  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)
  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)
  - System.Web.DynamicData.MetaForeignKeyColumn.Initialize
  - System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable
  - System.Web.DynamicData.MetaForeignKeyColumn.ParentTable
  langs:
  - csharp
  name: MetaForeignKeyColumn
  nameWithType: MetaForeignKeyColumn
  fullName: System.Web.DynamicData.MetaForeignKeyColumn
  type: Class
  summary: "Represents a database foreign-key field that is used by ASP.NET Dynamic Data."
  remarks: "In ASP.NET Dynamic Data applications, the MetaForeignKeyColumn class represents a database column that denotes a one-to-one relationship.       The MetaForeignKeyColumn class represents the column in the table that contains the foreign-key field. However, you can access the parent table object by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable%2A> property. You can determine if the foreign-key field is a primary key in the table that contains it by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable%2A> property."
  syntax:
    content: 'public class MetaForeignKeyColumn : System.Web.DynamicData.MetaColumn'
  inheritance:
  - System.Object
  - System.Web.DynamicData.MetaColumn
  implements: []
  inheritedMembers:
  - System.Web.DynamicData.MetaColumn.AllowInitialValue
  - System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
  - System.Web.DynamicData.MetaColumn.Attributes
  - System.Web.DynamicData.MetaColumn.BuildAttributeCollection
  - System.Web.DynamicData.MetaColumn.ColumnType
  - System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
  - System.Web.DynamicData.MetaColumn.DataFormatString
  - System.Web.DynamicData.MetaColumn.DataTypeAttribute
  - System.Web.DynamicData.MetaColumn.DefaultValue
  - System.Web.DynamicData.MetaColumn.Description
  - System.Web.DynamicData.MetaColumn.DisplayName
  - System.Web.DynamicData.MetaColumn.EntityTypeProperty
  - System.Web.DynamicData.MetaColumn.FilterUIHint
  - System.Web.DynamicData.MetaColumn.HtmlEncode
  - System.Web.DynamicData.MetaColumn.IsBinaryData
  - System.Web.DynamicData.MetaColumn.IsCustomProperty
  - System.Web.DynamicData.MetaColumn.IsFloatingPoint
  - System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
  - System.Web.DynamicData.MetaColumn.IsGenerated
  - System.Web.DynamicData.MetaColumn.IsInteger
  - System.Web.DynamicData.MetaColumn.IsLongString
  - System.Web.DynamicData.MetaColumn.IsPrimaryKey
  - System.Web.DynamicData.MetaColumn.IsReadOnly
  - System.Web.DynamicData.MetaColumn.IsRequired
  - System.Web.DynamicData.MetaColumn.IsString
  - System.Web.DynamicData.MetaColumn.MaxLength
  - System.Web.DynamicData.MetaColumn.Model
  - System.Web.DynamicData.MetaColumn.Name
  - System.Web.DynamicData.MetaColumn.NullDisplayText
  - System.Web.DynamicData.MetaColumn.Prompt
  - System.Web.DynamicData.MetaColumn.Provider
  - System.Web.DynamicData.MetaColumn.RequiredErrorMessage
  - System.Web.DynamicData.MetaColumn.ResetMetadata
  - System.Web.DynamicData.MetaColumn.Scaffold
  - System.Web.DynamicData.MetaColumn.ShortDisplayName
  - System.Web.DynamicData.MetaColumn.SortExpression
  - System.Web.DynamicData.MetaColumn.Table
  - System.Web.DynamicData.MetaColumn.ToString
  - System.Web.DynamicData.MetaColumn.TypeCode
  - System.Web.DynamicData.MetaColumn.UIHint
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: '#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)'
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: MetaForeignKeyColumn(MetaTable,ColumnProvider)
  nameWithType: MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.DynamicData.MetaForeignKeyColumn&quot;></xref> class."
  syntax:
    content: public MetaForeignKeyColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);
    parameters:
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "The entity meta table."
    - id: entityMember
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "The entity column provider."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)
  id: ExtractForeignKey(System.Collections.IDictionary,System.String)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: ExtractForeignKey(IDictionary,String)
  nameWithType: MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Saves the value of a foreign key in the specified dictionary."
  remarks: "The ExtractForeignKey method is used to save the value of a foreign key in the dictionary that contains all the new values for a data field. Typically, the ExtractForeignKey method is used when a new value is selected from a <xref:System.Web.UI.WebControls.DropDownList> control for the foreign key field."
  syntax:
    content: public void ExtractForeignKey (System.Collections.IDictionary dictionary, string value);
    parameters:
    - id: dictionary
      type: System.Collections.IDictionary
      description: "A dictionary object that contains the new values for a data field."
    - id: value
      type: System.String
      description: "The value of the foreign key."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames
  id: ForeignKeyNames
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: ForeignKeyNames
  nameWithType: MetaForeignKeyColumn.ForeignKeyNames
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets a collection that contains the names of the foreign keys in the association that represents a database relationship."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> ForeignKeyNames { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "A collection that contains the names of the foreign keys."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)
  id: GetFilterExpression(System.String)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: GetFilterExpression(String)
  nameWithType: MetaForeignKeyColumn.GetFilterExpression(String)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Returns the alternate name that is mapped to a foreign key."
  remarks: "This method returns the alternate name that is used in a filtering expression instead of the actual foreign-key name. If an alternate name does not exist, the method returns the actual name of the foreign key."
  syntax:
    content: public string GetFilterExpression (string foreignKeyName);
    parameters:
    - id: foreignKeyName
      type: System.String
      description: "The name of the foreign key."
    return:
      type: System.String
      description: "The alternate name that is mapped to the foreign key."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)
  id: GetForeignKeyDetailsPath(System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: GetForeignKeyDetailsPath(Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the path for the details action page of the parent table of the specified foreign-key field."
  remarks: "The GetForeignKeyDetailsPath method returns the path for the details action page based on the routes defined for the ASP.NET Dynamic Data application. This method returns an empty string, if `row` is `null`.       Using the GetForeignKeyDetailsPath method is the same as invoking the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method passing the <xref:System.Web.DynamicData.PageAction.Details%2A> action as the first parameter."
  syntax:
    content: public string GetForeignKeyDetailsPath (object row);
    parameters:
    - id: row
      type: System.Object
      description: "The row that contains the foreign-key field."
    return:
      type: System.String
      description: "The path for the details action page of the parent table of the specified foreign-key field."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)
  id: GetForeignKeyPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: GetForeignKeyPath(String,Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the path for the specified action page of the parent table of the specified foreign-key field."
  remarks: "The GetForeignKeyPath method returns the path for the specified action page based on the routes defined for the ASP.NET Dynamic Data application. This method returns an empty string, if `row` is `null`.       You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter."
  syntax:
    content: public string GetForeignKeyPath (string action, object row);
    parameters:
    - id: action
      type: System.String
      description: "The target action."
    - id: row
      type: System.Object
      description: "The row that contains the foreign-key field."
    return:
      type: System.String
      description: "The path for the specified action page of the parent table of the specified foreign-key field."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)
  id: GetForeignKeyPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: GetForeignKeyPath(String,Object,String)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the path for the specified action page of the parent table of the specified foreign-key field."
  remarks: "The <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method returns the path for the specified action page based on the specified `path`. This method returns an empty string, if `row` is `null`.       You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter."
  syntax:
    content: public string GetForeignKeyPath (string action, object row, string path);
    parameters:
    - id: action
      type: System.String
      description: "The target action."
    - id: row
      type: System.Object
      description: "The row that contains the foreign-key field."
    - id: path
      type: System.String
      description: "The target page."
    return:
      type: System.String
      description: "The path for the specified action page of the parent table of the specified foreign-key field."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)
  id: GetForeignKeyString(System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: GetForeignKeyString(Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyString(Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retrieves a comma-separated list of values that represent the foreign-key for the specified row."
  remarks: "The GetForeignKeyString method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues%2A> method, but in a different format."
  syntax:
    content: public string GetForeignKeyString (object row);
    parameters:
    - id: row
      type: System.Object
      description: "The row to retrieve the foreign-key values for."
    return:
      type: System.String
      description: "A comma-separated list of values that represent the foreign key for the specified row."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)
  id: GetForeignKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: GetForeignKeyValues(Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyValues(Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Retrieves a collection of values that represent the foreign keys for the specified row."
  remarks: "The GetForeignKeyValues method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString%2A> method, but in a different format."
  syntax:
    content: public System.Collections.Generic.IList<object> GetForeignKeyValues (object row);
    parameters:
    - id: row
      type: System.Object
      description: "The row to retrieve the foreign-key values for."
    return:
      type: System.Collections.Generic.IList{System.Object}
      description: "A collection of values that represent the foreign keys for the specified row."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.Initialize
  id: Initialize
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: MetaForeignKeyColumn.Initialize()
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.Initialize()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initializes data that may not be available when the constructor is called."
  remarks: "This method cannot be called directly. To customize initialization, you can derive from this class and override the Initialize method. If you override this method, call the base control&quot;s `Initialize` method."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.DynamicData.MetaForeignKeyColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable
  id: IsPrimaryKeyInThisTable
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: IsPrimaryKeyInThisTable
  nameWithType: MetaForeignKeyColumn.IsPrimaryKeyInThisTable
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets a value that indicates whether the foreign-key field is part of the primary key of the table."
  remarks: "Use the IsPrimaryKeyInThisTable property to determine whether the foreign-key field is part of the primary key of the table. This is the table that contains the foreign-key field not the parent table."
  syntax:
    content: public bool IsPrimaryKeyInThisTable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the foreign-key field is part of the primary key of the table; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable
  id: ParentTable
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  langs:
  - csharp
  name: ParentTable
  nameWithType: MetaForeignKeyColumn.ParentTable
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the parent table of the foreign-key field."
  syntax:
    content: public System.Web.DynamicData.MetaTable ParentTable { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: "The parent table of the foreign-key field."
  overload: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: MetaForeignKeyColumn(MetaTable,ColumnProvider)
  nameWithType: MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.ColumnProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: ColumnProvider
  nameWithType: ColumnProvider
  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: ExtractForeignKey(IDictionary,String)
  nameWithType: MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: ForeignKeyNames
  nameWithType: MetaForeignKeyColumn.ForeignKeyNames
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetFilterExpression(String)
  nameWithType: MetaForeignKeyColumn.GetFilterExpression(String)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(String)
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyDetailsPath(Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyPath(String,Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object)
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyPath(String,Object,String)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyString(Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyString(Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(Object)
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyValues(Object)
  nameWithType: MetaForeignKeyColumn.GetForeignKeyValues(Object)
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(Object)
- uid: System.Collections.Generic.IList{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Object>
  nameWithType: IList<Object>
  fullName: System.Collections.Generic.IList<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaForeignKeyColumn.Initialize
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: Initialize()
  nameWithType: MetaForeignKeyColumn.Initialize()
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.Initialize()
- uid: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: IsPrimaryKeyInThisTable
  nameWithType: MetaForeignKeyColumn.IsPrimaryKeyInThisTable
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: ParentTable
  nameWithType: MetaForeignKeyColumn.ParentTable
  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable
- uid: System.Web.DynamicData.MetaForeignKeyColumn.#ctor*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: MetaForeignKeyColumn
  nameWithType: MetaForeignKeyColumn.MetaForeignKeyColumn
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: ExtractForeignKey
  nameWithType: MetaForeignKeyColumn.ExtractForeignKey
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: ForeignKeyNames
  nameWithType: MetaForeignKeyColumn.ForeignKeyNames
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetFilterExpression
  nameWithType: MetaForeignKeyColumn.GetFilterExpression
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyDetailsPath
  nameWithType: MetaForeignKeyColumn.GetForeignKeyDetailsPath
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyPath
  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyString
  nameWithType: MetaForeignKeyColumn.GetForeignKeyString
- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: GetForeignKeyValues
  nameWithType: MetaForeignKeyColumn.GetForeignKeyValues
- uid: System.Web.DynamicData.MetaForeignKeyColumn.Initialize*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: Initialize
  nameWithType: MetaForeignKeyColumn.Initialize
- uid: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: IsPrimaryKeyInThisTable
  nameWithType: MetaForeignKeyColumn.IsPrimaryKeyInThisTable
- uid: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable*
  parent: System.Web.DynamicData.MetaForeignKeyColumn
  isExternal: false
  name: ParentTable
  nameWithType: MetaForeignKeyColumn.ParentTable
