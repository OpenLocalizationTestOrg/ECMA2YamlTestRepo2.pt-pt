### YamlMime:ManagedReference
items:
- uid: System.Runtime.Hosting.ActivationArguments
  id: ActivationArguments
  children:
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  - System.Runtime.Hosting.ActivationArguments.ActivationContext
  - System.Runtime.Hosting.ActivationArguments.ActivationData
  - System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  - System.Runtime.Hosting.ActivationArguments.Clone
  langs:
  - csharp
  name: ActivationArguments
  nameWithType: ActivationArguments
  fullName: System.Runtime.Hosting.ActivationArguments
  type: Class
  summary: "Provides data for manifest-based activation of an application. This class cannot be inherited."
  remarks: "The ActivationArguments class is used by the <xref:System.AppDomainSetup> class.       The manifest-based activation model uses an application manifest rather than an assembly for activation. A manifest fully describes the application, its dependencies, security requirements, and so forth. The manifest model has several advantages over the assembly-based activation model, especially for Web applications. For example, the manifest contains the security requirements of the application, which enables the user to decide whether to allow the application to execute before downloading the code. The manifest also contains information about the application dependencies."
  example:
  - "The following code example shows how to obtain the current ActivationArguments object from the <xref:System.AppDomainSetup> for the <xref:System.AppDomain> of a manifest-based application.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_1_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ActivationArguments : System.Security.Policy.EvidenceBase
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;></xref> class with the specified activation context."
  remarks: "The <xref:System.ActivationContext> object represented by the `activationData` parameter contains the <xref:System.ApplicationIdentity> and context information for manifest-based activation."
  syntax:
    content: public ActivationArguments (ActivationContext activationData);
    parameters:
    - id: activationData
      type: System.ActivationContext
      description: "An object that identifies the manifest-based activation application."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  id: '#ctor(System.ApplicationIdentity)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;></xref> class with the specified application identity."
  remarks: "The application identity uniquely identifies a manifest-based application to be activated in a new domain."
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "An object that identifies the manifest-based activation application."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  id: '#ctor(System.ActivationContext,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;></xref> class with the specified activation context and activation data."
  remarks: "The <xref:System.ActivationContext> object represented by the `activationContext` parameter contains the <xref:System.ApplicationIdentity> and context information for manifest-based activation. The activation data consists of information such as the query string portion of a URL."
  syntax:
    content: public ActivationArguments (ActivationContext activationContext, string[] activationData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "An object that identifies the manifest-based activation application."
    - id: activationData
      type: System.String[]
      description: "An array of strings containing host-provided activation data."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  id: '#ctor(System.ApplicationIdentity,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;></xref> class with the specified application identity and activation data."
  remarks: "The application identity uniquely identifies a manifest-based application to be activated in a new domain. The activation data consists of information such as the query string portion of a URL."
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "An object that identifies the manifest-based activation application."
    - id: activationData
      type: System.String[]
      description: "An array of strings containing host-provided activation data."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  id: ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Gets the activation context for manifest-based activation of an application."
  remarks: "The <xref:System.ActivationContext> object contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest. The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model."
  example:
  - "The following code example shows how to obtain the value of the ActivationContext property from the <xref:System.Runtime.Hosting.ActivationArguments> for a manifest-based application.  \n  \n This code example is part of a larger example provided for the <xref:System.Runtime.Hosting.ActivationArguments> class.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/visualbasic/p-system.runtime.hosting_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/csharp/p-system.runtime.hosting_1.cs)]"
  syntax:
    content: public ActivationContext ActivationContext { get; }
    return:
      type: System.ActivationContext
      description: "An object that identifies a manifest-based activation application."
  overload: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  id: ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Gets activation data from the host."
  remarks: "The activation data consists of information such as the query string portion of a URL."
  syntax:
    content: public string[] ActivationData { get; }
    return:
      type: System.String[]
      description: "An array of strings containing host-provided activation data."
  overload: System.Runtime.Hosting.ActivationArguments.ActivationData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Gets the application identity for a manifest-activated application."
  remarks: "The application identity uniquely identifies a manifest-based application to be activated in a new domain."
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; }
    return:
      type: System.ApplicationIdentity
      description: "An object that identifies an application for manifest-based activation."
  overload: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  id: Clone
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Produces a copy of the current <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;></xref> object."
  remarks: "This method creates a new <xref:System.Runtime.Hosting.ActivationArguments> object, and then populates it with copies of the members of the current <xref:System.Runtime.Hosting.ActivationArguments> object"
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "A copy of the current object."
  overload: System.Runtime.Hosting.ActivationArguments.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
- uid: System.Runtime.Hosting.ActivationArguments.#ctor*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments
  nameWithType: ActivationArguments.ActivationArguments
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone
  nameWithType: ActivationArguments.Clone
