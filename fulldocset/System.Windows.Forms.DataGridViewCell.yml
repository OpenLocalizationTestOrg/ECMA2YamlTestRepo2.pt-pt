### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCell
  id: DataGridViewCell
  children:
  - System.Windows.Forms.DataGridViewCell.#ctor
  - System.Windows.Forms.DataGridViewCell.AccessibilityObject
  - System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.BorderWidths(System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  - System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.Clone
  - System.Windows.Forms.DataGridViewCell.ColumnIndex
  - System.Windows.Forms.DataGridViewCell.ContentBounds
  - System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.ContextMenuStrip
  - System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance
  - System.Windows.Forms.DataGridViewCell.DefaultNewRowValue
  - System.Windows.Forms.DataGridViewCell.DetachEditingControl
  - System.Windows.Forms.DataGridViewCell.Displayed
  - System.Windows.Forms.DataGridViewCell.Dispose
  - System.Windows.Forms.DataGridViewCell.Dispose(System.Boolean)
  - System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.EditedFormattedValue
  - System.Windows.Forms.DataGridViewCell.EditType
  - System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.ErrorIconBounds
  - System.Windows.Forms.DataGridViewCell.ErrorText
  - System.Windows.Forms.DataGridViewCell.Finalize
  - System.Windows.Forms.DataGridViewCell.FormattedValue
  - System.Windows.Forms.DataGridViewCell.FormattedValueType
  - System.Windows.Forms.DataGridViewCell.Frozen
  - System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)
  - System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Int32)
  - System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  - System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)
  - System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  - System.Windows.Forms.DataGridViewCell.GetErrorText(System.Int32)
  - System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)
  - System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)
  - System.Windows.Forms.DataGridViewCell.GetInheritedState(System.Int32)
  - System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)
  - System.Windows.Forms.DataGridViewCell.GetSize(System.Int32)
  - System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)
  - System.Windows.Forms.DataGridViewCell.HasStyle
  - System.Windows.Forms.DataGridViewCell.InheritedState
  - System.Windows.Forms.DataGridViewCell.InheritedStyle
  - System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)
  - System.Windows.Forms.DataGridViewCell.IsInEditMode
  - System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  - System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  - System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  - System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags,System.Boolean@)
  - System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.DataGridViewCell.MeasureTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.DataGridViewCell.MeasureTextWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)
  - System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)
  - System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged
  - System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)
  - System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  - System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)
  - System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)
  - System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)
  - System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridViewCell.OwningColumn
  - System.Windows.Forms.DataGridViewCell.OwningRow
  - System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)
  - System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  - System.Windows.Forms.DataGridViewCell.PaintErrorIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.String)
  - System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)
  - System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.PositionEditingPanel(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridViewCell.PreferredSize
  - System.Windows.Forms.DataGridViewCell.ReadOnly
  - System.Windows.Forms.DataGridViewCell.Resizable
  - System.Windows.Forms.DataGridViewCell.RowIndex
  - System.Windows.Forms.DataGridViewCell.Selected
  - System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)
  - System.Windows.Forms.DataGridViewCell.Size
  - System.Windows.Forms.DataGridViewCell.Style
  - System.Windows.Forms.DataGridViewCell.Tag
  - System.Windows.Forms.DataGridViewCell.ToolTipText
  - System.Windows.Forms.DataGridViewCell.ToString
  - System.Windows.Forms.DataGridViewCell.Value
  - System.Windows.Forms.DataGridViewCell.ValueType
  - System.Windows.Forms.DataGridViewCell.Visible
  langs:
  - csharp
  name: DataGridViewCell
  nameWithType: DataGridViewCell
  fullName: System.Windows.Forms.DataGridViewCell
  type: Class
  summary: "Represents an individual cell in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "The DataGridViewCell class represents an individual cell in a <xref:System.Windows.Forms.DataGridView> control. You can retrieve cells through the <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> collection of a <xref:System.Windows.Forms.DataGridViewRow>.       The row and column for a DataGridViewCell identify the cell&quot;s location in the <xref:System.Windows.Forms.DataGridView>. A typical cell contains data specific to the row and column in which it is contained. The cell can be customized in a number of ways by setting its properties and handling the events associated with it."
  example:
  - "The following code example illustrates the use of this type. For more information about this example, see [How to: Add ToolTips to Individual Cells in a Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/add/codesnippet/cpp/t-system.windows.forms.d_57_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/add/codesnippet/csharp/t-system.windows.forms.d_57_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_57_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewCellConverter))]

      public abstract class DataGridViewCell : System.Windows.Forms.DataGridViewElement, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.Windows.Forms.DataGridViewElement
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.Windows.Forms.DataGridViewElement.DataGridView
  - System.Windows.Forms.DataGridViewElement.RaiseCellClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseDataError(System.Windows.Forms.DataGridViewDataErrorEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.DataGridViewElement.State
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: DataGridViewCell()
  nameWithType: DataGridViewCell.DataGridViewCell()
  fullName: System.Windows.Forms.DataGridViewCell.DataGridViewCell()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class."
  syntax:
    content: protected DataGridViewCell ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCell.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.AccessibilityObject
  id: AccessibilityObject
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: AccessibilityObject
  nameWithType: DataGridViewCell.AccessibilityObject
  fullName: System.Windows.Forms.DataGridViewCell.AccessibilityObject
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject> assigned to the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  remarks: "To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.       If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.      > [!NOTE] >  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].       For more information about accessible objects, see the &quot;Active Accessibility&quot; section of the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "The <xref:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject> assigned to the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.AccessibilityObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewCell.AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Modifies the input cell border style according to the specified criteria."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control internally calls the AdjustCellBorderStyle method to determine the appearance of the cell borders. The <xref:System.Windows.Forms.DataGridView> control typically uses the value of the <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> property for the `dataGridViewAdvancedBorderStyleInput` parameter.       The <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle?displayProperty=fullName> value is not supported as an input style for cells."
  example:
  - "The following code example demonstrates how to override the AdjustCellBorderStyle method to customize the borders of the cells. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> class.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/add/codesnippet/csharp/6157eeec-2cff-4061-884c-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/add/codesnippet/visualbasic/6157eeec-2cff-4061-884c-_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);
    parameters:
    - id: dataGridViewAdvancedBorderStyleInput
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the cell border style to modify."
    - id: dataGridViewAdvancedBorderStylePlaceholder
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that is used to store intermediate changes to the cell border style."
    - id: singleVerticalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a vertical border to the cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: singleHorizontalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a horizontal border to the cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isFirstDisplayedColumn
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the hosting cell is in the first visible column; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isFirstDisplayedRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the hosting cell is in the first visible row; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "The modified <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.BorderWidths(System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  id: BorderWidths(System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: BorderWidths(DataGridViewAdvancedBorderStyle)
  nameWithType: DataGridViewCell.BorderWidths(DataGridViewAdvancedBorderStyle)
  fullName: System.Windows.Forms.DataGridViewCell.BorderWidths(DataGridViewAdvancedBorderStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the widths of all the cell margins."
  remarks: "The default width of the cell border is one pixel. Use the following <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle> values to modify the width of the border:      -   The <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle> value denotes a width of 0 pixels.      -   The <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle> or <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle> values increase the default width by 1 pixel.       In addition, if the <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A> property is set for the cell&quot;s owning row, the rectangle&quot;s height is increased by the value of <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A>. If the <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> property is set for the cell&quot;s owning column, the rectangle&quot;s width will be increased by the value of <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>."
  example:
  - "The following code example demonstrates how to use the BorderWidths method of the <xref:System.Windows.Forms.DataGridViewCell> class to determine the available drawing area in a cell. This code example is part of a larger example provided in [How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/add/codesnippet/visualbasic/af7d8960-bc02-42cb-9c9e-_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.DisabledButtons#20](~/add/codesnippet/csharp/af7d8960-bc02-42cb-9c9e-_1.cs)]"
  syntax:
    content: protected virtual System.Drawing.Rectangle BorderWidths (System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);
    parameters:
    - id: advancedBorderStyle
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that the margins are to be calculated for."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the widths of all the cell margins."
  overload: System.Windows.Forms.DataGridViewCell.BorderWidths*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  id: ClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.ClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the cell&quot;s row will be unshared when the cell is clicked."
  remarks: "The ClickUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnClick%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnClick%2A> has the effect of unsharing the cell&quot;s row. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool ClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> containing the data passed to the <xref:System.Windows.Forms.DataGridViewCell.OnClick*> method."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.ClickUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Clone
  id: Clone
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Clone()
  nameWithType: DataGridViewCell.Clone()
  fullName: System.Windows.Forms.DataGridViewCell.Clone()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates an exact copy of this cell."
  remarks: "Override the Clone method whenever you derive from the <xref:System.Windows.Forms.DataGridViewCell> class and add new properties to the derived class."
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the cloned <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ColumnIndex
  id: ColumnIndex
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ColumnIndex
  nameWithType: DataGridViewCell.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCell.ColumnIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the column index for this cell."
  remarks: "The column index for the row that contains the row headers has a value of -1."
  example:
  - "The following code example demonstrates how to use the ColumnIndex property to determine which columns to check for integer values. In this example, the cells in the `Description` column are ignored when the contents of the selected cells are summed. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/csharp/p-system.windows.forms.d_411_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_411_1.vb)]"
  syntax:
    content: public int ColumnIndex { get; }
    return:
      type: System.Int32
      description: "The index of the column that contains the cell; -1 if the cell is not contained within a column."
  overload: System.Windows.Forms.DataGridViewCell.ColumnIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ContentBounds
  id: ContentBounds
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ContentBounds
  nameWithType: DataGridViewCell.ContentBounds
  fullName: System.Windows.Forms.DataGridViewCell.ContentBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the bounding rectangle that encloses the cell&quot;s content area."
  remarks: "The returned rectangle reports client coordinates, in pixels.       This property calls the <xref:System.Windows.Forms.DataGridViewCell.GetContentBounds%2A> method to get its value. For the base <xref:System.Windows.Forms.DataGridViewCell> type, this value is <xref:System.Drawing.Rectangle.Empty>.       To get the bounding rectangle of the cell rather than the cell contents, use the <xref:System.Windows.Forms.DataGridView.GetCellDisplayRectangle%2A?displayProperty=fullName> method."
  syntax:
    content: public System.Drawing.Rectangle ContentBounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that bounds the cell&quot;s contents."
  overload: System.Windows.Forms.DataGridViewCell.ContentBounds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row containing the cell is a shared row.       -or-       The cell is a column header cell."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> property is less than 0, indicating that the cell is a row header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  id: ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ContentClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.ContentClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the cell&quot;s row will be unshared when the cell&quot;s content is clicked."
  remarks: "The ContentClickUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A> has the effect of unsharing the cell&quot;s row. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool ContentClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> containing the data passed to the <xref:System.Windows.Forms.DataGridViewCell.OnContentClick*> method."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  id: ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the cell&quot;s row will be unshared when the cell&quot;s content is double-clicked."
  remarks: "The ContentDoubleClickUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A> has the effect of unsharing the cell&quot;s row. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool ContentDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> containing the data passed to the <xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick*> method."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ContextMenuStrip
  id: ContextMenuStrip
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ContextMenuStrip
  nameWithType: DataGridViewCell.ContextMenuStrip
  fullName: System.Windows.Forms.DataGridViewCell.ContextMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the shortcut menu associated with the cell."
  remarks: "This property indicates the shortcut menu that is typically displayed when the user right-clicks the cell.       When the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`, getting the value of the ContextMenuStrip property raises the <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> event of the control and returns the value of the <xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=fullName> property as specified in the event handler. If there are no handlers for the event, getting the value of the ContextMenuStrip property returns the previously specified value or its default value of `null`.       Handling the <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> event is primarily useful when working with large amounts of data to avoid performance penalties when setting the cell ContextMenuStrip value for multiple cells. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       Changing this property raises the <xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged> event on the owning <xref:System.Windows.Forms.DataGridView>, if one exists.       You can also specify shortcut menus for individual rows rather than individual cells by setting the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> property or handling the <xref:System.Windows.Forms.DataGridView> control&quot;s <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> event. The cell ContextMenuStrip property setting overrides the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> property setting, and the <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> event overrides both the <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> event and the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> property setting. You can specify `null` for a cell shortcut menu, however, to prevent a row shortcut menu from being overridden."
  syntax:
    content: public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "The <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;></xref> associated with the cell."
  overload: System.Windows.Forms.DataGridViewCell.ContextMenuStrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance
  id: CreateAccessibilityInstance
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: CreateAccessibilityInstance()
  nameWithType: DataGridViewCell.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new accessible object for the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  remarks: "If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> property is referenced.      > [!NOTE] >  To get or set <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A>, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  syntax:
    content: protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "A new <xref:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject> for the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.DefaultNewRowValue
  id: DefaultNewRowValue
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: DefaultNewRowValue
  nameWithType: DataGridViewCell.DefaultNewRowValue
  fullName: System.Windows.Forms.DataGridViewCell.DefaultNewRowValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the default value for a cell in the row for new records."
  remarks: "The DefaultNewRowValue property in the base class <xref:System.Windows.Forms.DataGridViewCell> always returns `null`. However, this property can be overridden in derived cell classes to return other default values.       The value returned by this property is displayed if the cell is in the row for new records. This value can be overridden by a handler for the <xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded?displayProperty=fullName> event when focus enters the row for new records."
  example:
  - "The following code example demonstrates how to override the DefaultNewRowValue property in a `CalendarCell` class that derives from <xref:System.Windows.Forms.DataGridViewTextBoxCell>. This example is part of a larger code example provided in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#200](~/add/codesnippet/csharp/p-system.windows.forms.d_158_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/add/codesnippet/visualbasic/p-system.windows.forms.d_158_1.vb)]"
  syntax:
    content: public virtual object DefaultNewRowValue { get; }
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the default value."
  overload: System.Windows.Forms.DataGridViewCell.DefaultNewRowValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.DetachEditingControl
  id: DetachEditingControl
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: DetachEditingControl()
  nameWithType: DataGridViewCell.DetachEditingControl()
  fullName: System.Windows.Forms.DataGridViewCell.DetachEditingControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the cell&quot;s editing control from the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The <xref:System.Windows.Forms.DataGridView> calls this method when the current cell hosts an editing control and editing mode ends. This method removes the <xref:System.Windows.Forms.DataGridView.EditingControl%2A> from the <xref:System.Windows.Forms.DataGridView.EditingPanel%2A>, and then removes the <xref:System.Windows.Forms.DataGridView.EditingPanel%2A> from the <xref:System.Windows.Forms.Control.Controls%2A> collection of the <xref:System.Windows.Forms.DataGridView>."
  syntax:
    content: public virtual void DetachEditingControl ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCell.DetachEditingControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This cell is not associated with a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>.       -or-       The <xref:System.Windows.Forms.DataGridView.EditingControl*> property of the associated <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> has a value of <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. This is the case, for example, when the control is not in edit mode."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Displayed
  id: Displayed
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Displayed
  nameWithType: DataGridViewCell.Displayed
  fullName: System.Windows.Forms.DataGridViewCell.Displayed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value that indicates whether the cell is currently displayed on-screen."
  remarks: "Use this property to determine whether a particular cell has been scrolled off-screen.       If the cell&quot;s <xref:System.Windows.Forms.DataGridViewCell.Visible%2A> property value is `false`, this property will return `false` as well."
  syntax:
    content: public virtual bool Displayed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell is on-screen or partially on-screen; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Displayed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Dispose
  id: Dispose
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Dispose()
  nameWithType: DataGridViewCell.Dispose()
  fullName: System.Windows.Forms.DataGridViewCell.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Releases all resources used by the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  remarks: "Call Dispose when you are finished using the <xref:System.Windows.Forms.DataGridViewCell>. The Dispose method leaves the <xref:System.Windows.Forms.DataGridViewCell> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Windows.Forms.DataGridViewCell> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.DataGridViewCell> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Windows.Forms.DataGridViewCell>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.DataGridViewCell> object&quot;s `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCell.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataGridViewCell.Dispose(Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> and optionally releases the managed resources."
  remarks: "This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.DataGridViewCell> references. This method invokes the `Dispose` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Windows.Forms.DataGridViewCell.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  id: DoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: DoubleClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.DoubleClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the cell&quot;s row will be unshared when the cell is double-clicked."
  remarks: "The DoubleClickUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A> has the effect of unsharing the cell&quot;s row. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool DoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> containing the data passed to the <xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick*> method."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.EditedFormattedValue
  id: EditedFormattedValue
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: EditedFormattedValue
  nameWithType: DataGridViewCell.EditedFormattedValue
  fullName: System.Windows.Forms.DataGridViewCell.EditedFormattedValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed."
  remarks: "This property returns the current value of the cell or editing control if the cell is in edit mode. Otherwise, getting the value of this property converts the cell value into an equivalent display value of the type indicated by the <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> property. This raises the <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName> event, which you can handle to customize the value conversion.       If formatting is unsuccessful, the <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName> event occurs. If there is no handler for this event or the handler sets the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName> property to `true`, an exception is thrown."
  example:
  - "The following code example demonstrates how to use the EditedFormattedValue property. In this example, the <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> property is used to determine if the current cell's contents have been edited and not committed and, if the cell has been modified, the edited value is used. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/csharp/p-system.windows.forms.d_18_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_18_1.vb)]"
  syntax:
    content: public object EditedFormattedValue { get; }
    return:
      type: System.Object
      description: "The current, formatted value of the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.EditedFormattedValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row containing the cell is a shared row.       -or-       The cell is a column header cell."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Formatting failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control or the handler set the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*> property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.EditType
  id: EditType
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: EditType
  nameWithType: DataGridViewCell.EditType
  fullName: System.Windows.Forms.DataGridViewCell.EditType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the type of the cell&quot;s hosted editing control."
  remarks: "A derived cell type overrides this property to return the type of its hosted editing control. If the cell does not have an editing control, as with <xref:System.Windows.Forms.DataGridViewButtonCell>, the EditType property returns `null`."
  example:
  - "The following code example demonstrates how to override the EditType property in a `CalendarCell` class that derives from <xref:System.Windows.Forms.DataGridViewTextBoxCell>. This example is part of a larger code example provided in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#200](~/add/codesnippet/csharp/p-system.windows.forms.d_239_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/add/codesnippet/visualbasic/p-system.windows.forms.d_239_1.vb)]"
  syntax:
    content: public virtual Type EditType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type> representing the <xref href=&quot;System.Windows.Forms.DataGridViewTextBoxEditingControl&quot;></xref> type."
  overload: System.Windows.Forms.DataGridViewCell.EditType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(System.Int32,System.Boolean)
  id: EnterUnsharesRow(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: EnterUnsharesRow(Int32,Boolean)
  nameWithType: DataGridViewCell.EnterUnsharesRow(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the parent row will be unshared when the focus moves to the cell."
  remarks: "The EnterUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool EnterUnsharesRow (int rowIndex, bool throughMouseClick);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    - id: throughMouseClick
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a user action moved focus to the cell; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if a programmatic operation moved focus to the cell."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.EnterUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ErrorIconBounds
  id: ErrorIconBounds
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ErrorIconBounds
  nameWithType: DataGridViewCell.ErrorIconBounds
  fullName: System.Windows.Forms.DataGridViewCell.ErrorIconBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the bounds of the error icon for the cell."
  remarks: "The returned rectangle reports client coordinates, in pixels.       When the <xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A?displayProperty=fullName> property is `false`, the value of this property is <xref:System.Drawing.Rectangle.Empty>.       This property calls the <xref:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds%2A> method to get its value. For the base <xref:System.Windows.Forms.DataGridViewCell> type, this value is always <xref:System.Drawing.Rectangle.Empty>."
  syntax:
    content: public System.Drawing.Rectangle ErrorIconBounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounds of the error icon for the current <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.ErrorIconBounds*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The cell does not belong to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row containing the cell is a shared row.       -or-       The cell is a column header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ErrorText
  id: ErrorText
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ErrorText
  nameWithType: DataGridViewCell.ErrorText
  fullName: System.Windows.Forms.DataGridViewCell.ErrorText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the text describing an error condition associated with the cell."
  remarks: "Typically, the ErrorText property is used when handling the <xref:System.Windows.Forms.DataGridView.CellValidating> event of the <xref:System.Windows.Forms.DataGridView>. If the cell&quot;s value fails some validation criteria, set the ErrorText property and cancel the commit operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs> to `true`. The text you specify is then displayed by the <xref:System.Windows.Forms.DataGridView>, and the user is prompted to fix the error in the cell&quot;s data.       When the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property of the <xref:System.Windows.Forms.DataGridView> is `true`, you can provide error text for rows and cells using the <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> and <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> events.       When you assign a different ErrorText string to a cell, the <xref:System.Windows.Forms.DataGridView.CellErrorTextChanged> event of the <xref:System.Windows.Forms.DataGridView> control is raised.       Starting with the .NET Framework 4.5.2, resizing of the error icon is determined by the system DPI setting when the app.config file contains the following entry:      ```   <appSettings>     <add key=&quot;EnableWindowsFormsHighDpiAutoResizing&quot; value=&quot;true&quot; />   </appSettings>   ```"
  example:
  - "The following code example demonstrates how to use this property when handling error conditions in an unbound <xref:System.Windows.Forms.DataGridView>. The `AnnotateCell` method sets an error message string to the ErrorText property.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#9](~/add/codesnippet/visualbasic/p-system.windows.forms.d_40_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#9](~/add/codesnippet/cpp/p-system.windows.forms.d_40_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#9](~/add/codesnippet/csharp/p-system.windows.forms.d_40_1.cs)]"
  syntax:
    content: public string ErrorText { get; set; }
    return:
      type: System.String
      description: "The text that describes an error condition associated with the cell."
  overload: System.Windows.Forms.DataGridViewCell.ErrorText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Finalize
  id: Finalize
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Finalize()
  nameWithType: DataGridViewCell.Finalize()
  fullName: System.Windows.Forms.DataGridViewCell.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Releases the unmanaged resources and performs other cleanup operations before the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> is reclaimed by garbage collection."
  remarks: "This method calls the <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> method with `false` as a parameter.       This method overrides <xref:System.Object.Finalize%2A>. Application code should not call this method; an object&quot;s `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~DataGridViewCell ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCell.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.FormattedValue
  id: FormattedValue
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: FormattedValue
  nameWithType: DataGridViewCell.FormattedValue
  fullName: System.Windows.Forms.DataGridViewCell.FormattedValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the value of the cell as formatted for display."
  remarks: "The <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property is the actual data object contained by the cell, whereas the FormattedValue is the formatted representation of this object. The <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> and <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> properties correspond to the data types of these values, respectively.       Getting the value of this property calls the <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> method to convert the cell value into an equivalent display value of the type indicated by the <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> property. This raises the <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName> event, which you can handle to customize the value conversion.       If formatting is unsuccessful, the <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName> event occurs. If there is no handler for this event or the handler sets the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName> property to `true`, an exception is thrown."
  example:
  - "The following code example demonstrates how to use the FormattedValue property. In this example, the <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> property is used to determine if the current cell's contents have been edited and not committed and, if the cell has been modified, the FormattedValue is used. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/csharp/p-system.windows.forms.d_200_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_200_1.vb)]"
  syntax:
    content: public object FormattedValue { get; }
    return:
      type: System.Object
      description: "The formatted value of the cell or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the cell does not belong to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  overload: System.Windows.Forms.DataGridViewCell.FormattedValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row containing the cell is a shared row.       -or-       The cell is a column header cell."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Formatting failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control or the handler set the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*> property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.FormattedValueType
  id: FormattedValueType
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: FormattedValueType
  nameWithType: DataGridViewCell.FormattedValueType
  fullName: System.Windows.Forms.DataGridViewCell.FormattedValueType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the type of the formatted value associated with the cell."
  remarks: "The <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property is the actual data object contained by the cell, whereas the <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> property is the formatted representation of the data. The <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> and FormattedValueType properties correspond to the data types of these values, respectively."
  example:
  - "The following code example demonstrates how to use the FormattedValueType property to determine the type of the cell contents. In this example, the FormattedValueType property is used to determine whether the cell contains a <xref:System.String> before attempting to convert the value. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/csharp/p-system.windows.forms.d_305_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_305_1.vb)]"
  syntax:
    content: public virtual Type FormattedValueType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type> representing the type of the cell&quot;s formatted value."
  overload: System.Windows.Forms.DataGridViewCell.FormattedValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Frozen
  id: Frozen
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Frozen
  nameWithType: DataGridViewCell.Frozen
  fullName: System.Windows.Forms.DataGridViewCell.Frozen
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the cell is frozen."
  remarks: "The value of the Frozen property depends on the state of the cell&quot;s parent row and column. If the `Frozen` property of either the row or column is set to `true`, the cell&quot;s Frozen property will also be `true`."
  syntax:
    content: public virtual bool Frozen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell is frozen; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Frozen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)
  id: GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)
  nameWithType: DataGridViewCell.GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)
  fullName: System.Windows.Forms.DataGridViewCell.GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves the formatted value of the cell to copy to the <xref href=&quot;System.Windows.Forms.Clipboard&quot;></xref>."
  remarks: "This method is called by the <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A?displayProperty=fullName> method to retrieve a Clipboard-formatted value that represents the cell value.       The cell value is first retrieved in its display format from the <xref:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue%2A> method. This may raise the <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName> event to format the value and the <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName> event if formatting is unsuccessful.       The position-related parameters of this method indicate where this cell is located in the table of data representing the region defined by the selected cells in the <xref:System.Windows.Forms.DataGridView> control. Depending on the cell&quot;s position, additional formatting information may be returned by this method along with the display-formatted cell value. For example, the HTML format for a cell in the first column of a row will include the tag that indicates the beginning of a row.       The supported Clipboard formats include <xref:System.Windows.Forms.DataFormats.Text?displayProperty=fullName>, <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=fullName>, <xref:System.Windows.Forms.DataFormats.Html?displayProperty=fullName>, and <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=fullName>.       For more information, see the <xref:System.Windows.Forms.Clipboard> class."
  syntax:
    content: protected virtual object GetClipboardContent (int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The zero-based index of the row containing the cell."
    - id: firstCell
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the cell is in the first column of the region defined by the selected cells; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: lastCell
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the cell is the last column of the region defined by the selected cells; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: inFirstRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the cell is in the first row of the region defined by the selected cells; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: inLastRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the cell is in the last row of the region defined by the selected cells; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: format
      type: System.String
      description: "The current format string of the cell."
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the value of the cell to copy to the <xref href=&quot;System.Windows.Forms.Clipboard&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.GetClipboardContent*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is less than 0 or greater than or equal to the number of rows in the control."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of the cell&quot;s <xref:System.Windows.Forms.DataGridViewElement.DataGridView*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Formatting failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control or the handler set the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*> property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Int32)
  id: GetContentBounds(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetContentBounds(Int32)
  nameWithType: DataGridViewCell.GetContentBounds(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetContentBounds(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the bounding rectangle that encloses the cell&quot;s content area using a default <xref href=&quot;System.Drawing.Graphics&quot;></xref> and cell style currently in effect for the cell."
  remarks: "The size of the cell&quot;s contents is computed dynamically when this method is called. The base class implementation always returns <xref:System.Drawing.Rectangle.Empty?displayProperty=fullName>."
  syntax:
    content: public System.Drawing.Rectangle GetContentBounds (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that bounds the cell&quot;s contents."
  overload: System.Windows.Forms.DataGridViewCell.GetContentBounds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  id: GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetContentBounds(Graphics,DataGridViewCellStyle,Int32)
  nameWithType: DataGridViewCell.GetContentBounds(Graphics,DataGridViewCellStyle,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetContentBounds(Graphics,DataGridViewCellStyle,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the bounding rectangle that encloses the cell&quot;s content area, which is calculated using the specified <xref href=&quot;System.Drawing.Graphics&quot;></xref> and cell style."
  remarks: "The size of the cell&quot;s contents is computed dynamically when this method is called. The base class implementation always returns <xref:System.Drawing.Rectangle?displayProperty=fullName>.       This method is called internally when the <xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A> property is read."
  syntax:
    content: protected virtual System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The graphics context for the cell."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> to be applied to the cell."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that bounds the cell&quot;s contents."
  overload: System.Windows.Forms.DataGridViewCell.GetContentBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)
  id: GetEditedFormattedValue(System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)
  nameWithType: DataGridViewCell.GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed."
  remarks: "This method returns the current value of the editing cell or editing control if the cell is in edit mode. Otherwise, this method converts the cell value into an equivalent display value of the type indicated by the <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> property. This raises the <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName> event, which you can handle to customize the value conversion.       If formatting is unsuccessful, the <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=fullName> event occurs. If there is no handler for this event or the handler sets the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName> property to `true`, an exception is thrown.       Derived classes that override this method will typically return a string representation of the cell value if the `context` argument includes the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> value."
  syntax:
    content: public object GetEditedFormattedValue (int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell."
    - id: context
      type: System.Windows.Forms.DataGridViewDataErrorContexts
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewDataErrorContexts&quot;></xref> values that specifies the data error context."
    return:
      type: System.Object
      description: "The current, formatted value of the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Formatting failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control or the handler set the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*> property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  id: GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)
  nameWithType: DataGridViewCell.GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the bounding rectangle that encloses the cell&quot;s error icon, if one is displayed."
  remarks: "The size of the cell&quot;s error icon area is computed dynamically when this method is called. The base class implementation always returns <xref:System.Drawing.Rectangle?displayProperty=fullName>.       This method is called internally when the <xref:System.Windows.Forms.DataGridViewCell.ErrorIconBounds%2A> property is read."
  syntax:
    content: protected virtual System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The graphics context for the cell."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> to be applied to the cell."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that bounds the cell&quot;s error icon, if one is displayed; otherwise, <xref href=&quot;System.Drawing.Rectangle&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.GetErrorIconBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetErrorText(System.Int32)
  id: GetErrorText(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetErrorText(Int32)
  nameWithType: DataGridViewCell.GetErrorText(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetErrorText(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a string that represents the error for the cell."
  syntax:
    content: protected virtual string GetErrorText (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell."
    return:
      type: System.String
      description: "A string that describes the error for the current <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.GetErrorText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)
  id: GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)
  nameWithType: DataGridViewCell.GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridViewCell.GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the value of the cell as formatted for display."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control calls this method to convert a cell value into an equivalent display value of the type indicated by the <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> property. The control passes the cell value to this method in the `value` parameter.       This method raises the <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName> event. A handler for this event can modify both the `value` and `cellStyle` parameters. If the handler does not set the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName> property to `true`, however, this method formats `value` using the formatting properties of the `cellStyle` object.      > [!NOTE] >  This method does not convert `value` to the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=fullName> property value for values equal to the <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=fullName> property value when <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> is set to a value other than <xref:System.DBNull.Value?displayProperty=fullName> or `null`. In this case, you can handle the <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=fullName> event to display the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> property value. For more information, see the code example in <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>.       If formatting is unsuccessful, the <xref:System.Windows.Forms.DataGridView.DataError> event occurs. If there is no handler for this event or the handler sets the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName> property to `true`, an exception is thrown.       Derived classes that override this method will typically return a string representation of the cell value if the `context` argument includes the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> value."
  syntax:
    content: protected virtual object GetFormattedValue (object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context);
    parameters:
    - id: value
      type: System.Object
      description: "The value to be formatted."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> in effect for the cell."
    - id: valueTypeConverter
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> associated with the value type that provides custom conversion to the formatted value type, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no such custom conversion is needed."
    - id: formattedValueTypeConverter
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> associated with the formatted value type that provides custom conversion from the value type, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no such custom conversion is needed."
    - id: context
      type: System.Windows.Forms.DataGridViewDataErrorContexts
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewDataErrorContexts&quot;></xref> values describing the context in which the formatted value is needed."
    return:
      type: System.Object
      description: "The formatted value of the cell or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the cell does not belong to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  overload: System.Windows.Forms.DataGridViewCell.GetFormattedValue*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Formatting failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control or the handler set the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*> property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)
  id: GetInheritedContextMenuStrip(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetInheritedContextMenuStrip(Int32)
  nameWithType: DataGridViewCell.GetInheritedContextMenuStrip(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the inherited shortcut menu for the current cell."
  remarks: "If the cell does not have an associated <xref:System.Windows.Forms.ContextMenuStrip>, it will inherit one from its parents, using the following precedence:      1.  This cell&quot;s <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>      2.  The owning row&quot;s <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=fullName>      3.  The owning column&quot;s <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=fullName>      4.  The parent table&quot;s <xref:System.Windows.Forms.ContextMenuStrip?displayProperty=fullName>       Shortcut menus are Microsoft Windows native resources whose lifetimes are typically directed by the <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> method or the destructor.       Pass the GetInheritedContextMenuStrip method the row index you used to retrieve the <xref:System.Windows.Forms.DataGridViewCell>. Do not use the <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> property for the `rowIndex` parameter. If the row is shared, <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> is -1, which is not a valid value for `rowIndex`."
  syntax:
    content: public virtual System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The row index of the current cell."
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "A <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;></xref> if the parent <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>, <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>, or <xref href=&quot;System.Windows.Forms.DataGridViewColumn&quot;></xref> has a <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;></xref> assigned; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewElement.DataGridView*> property of the cell is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and the specified <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedState(System.Int32)
  id: GetInheritedState(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetInheritedState(Int32)
  nameWithType: DataGridViewCell.GetInheritedState(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetInheritedState(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a value indicating the current state of the cell as inherited from the state of its row and column."
  remarks: "This method is useful to determine the state of a cell in a shared row. Shared rows have <xref:System.Windows.Forms.DataGridViewBand.Index%2A> values of -1, which prevents you from using the <xref:System.Windows.Forms.DataGridViewCell.InheritedState%2A> property with cells in shared rows. To use this method, pass in the actual index of the row containing this cell. You can retrieve the actual index of a shared row by calling the <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> method."
  syntax:
    content: public virtual System.Windows.Forms.DataGridViewElementStates GetInheritedState (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row containing the cell."
    return:
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values representing the current state of the cell."
  overload: System.Windows.Forms.DataGridViewCell.GetInheritedState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The cell is not contained within a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and <code>rowIndex</code> is not -1.       -or-       <code>rowIndex</code> is not the index of the row containing this cell."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The cell is contained within a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and <code>rowIndex</code> is outside the valid range of 0 to the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)
  id: GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)
  nameWithType: DataGridViewCell.GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the style applied to the cell."
  remarks: "This method returns a <xref:System.Windows.Forms.DataGridViewCellStyle> that inherits its settings from the <xref:System.Windows.Forms.DataGridViewCellStyle> objects of the cell&quot;s parent row, column, and <xref:System.Windows.Forms.DataGridView>. For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle (System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int rowIndex, bool includeColors);
    parameters:
    - id: inheritedCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> to be populated with the inherited cell style."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    - id: includeColors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to include inherited colors in the returned cell style; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that includes the style settings of the cell inherited from the cell&quot;s parent row, column, and <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.GetInheritedStyle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The cell has no associated <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>.       -or-       <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is less than 0, or greater than or equal to the number of rows in the parent <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)
  id: GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)
  nameWithType: DataGridViewCell.GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)
  fullName: System.Windows.Forms.DataGridViewCell.GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Calculates the preferred size, in pixels, of the cell."
  remarks: "The GetPreferredSize method in the base class <xref:System.Windows.Forms.DataGridViewCell> always returns a <xref:System.Drawing.Size> with a width and height of -1. However, this method is overridden in the derived cell classes to return proper values."
  syntax:
    content: protected virtual System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to draw the cell."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that represents the style of the cell."
    - id: rowIndex
      type: System.Int32
      description: "The zero-based row index of the cell."
    - id: constraintSize
      type: System.Drawing.Size
      description: "The cell&quot;s maximum allowable size."
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> that represents the preferred size, in pixels, of the cell."
  overload: System.Windows.Forms.DataGridViewCell.GetPreferredSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetSize(System.Int32)
  id: GetSize(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetSize(Int32)
  nameWithType: DataGridViewCell.GetSize(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetSize(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the size of the cell."
  remarks: "This method cannot be used with a cell in a shared row."
  syntax:
    content: protected virtual System.Drawing.Size GetSize (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> representing the cell&quot;s dimensions."
  overload: System.Windows.Forms.DataGridViewCell.GetSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>rowIndex</code> is -1"
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DataGridViewCell.GetValue(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetValue(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the value of the cell."
  remarks: "Pass the GetValue method the row index you used to retrieve the <xref:System.Windows.Forms.DataGridViewCell>. Do not use the <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> property for the `rowIndex` parameter. If the row is shared, <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> is -1, which is not a valid value for `rowIndex`."
  syntax:
    content: protected virtual object GetValue (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Object
      description: "The value contained in the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.GetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewElement.DataGridView*> property of the cell is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and <code>rowIndex</code> is less than 0 or greater than or equal to the number of rows in the parent <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewElement.DataGridView*> property of the cell is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and the value of the <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> property is less than 0, indicating that the cell is a row header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.HasStyle
  id: HasStyle
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: HasStyle
  nameWithType: DataGridViewCell.HasStyle
  fullName: System.Windows.Forms.DataGridViewCell.HasStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the <xref:System.Windows.Forms.DataGridViewCell.Style*> property has been set."
  remarks: "Getting the value of the <xref:System.Windows.Forms.DataGridViewCell.Style%2A> property automatically instantiates a new <xref:System.Windows.Forms.DataGridViewCellStyle> if the property has not previously been accessed. Therefore, you must use the HasStyle property to determine whether the <xref:System.Windows.Forms.DataGridViewCell.Style%2A> property is currently set to a <xref:System.Windows.Forms.DataGridViewCellStyle> instance. This is useful to determine which properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property represent styles set specifically for the cell.       For more information about cell style inheritance, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool HasStyle { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Windows.Forms.DataGridViewCell.Style*> property has been set; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.HasStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.InheritedState
  id: InheritedState
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: InheritedState
  nameWithType: DataGridViewCell.InheritedState
  fullName: System.Windows.Forms.DataGridViewCell.InheritedState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the current state of the cell as inherited from the state of its row and column."
  syntax:
    content: public System.Windows.Forms.DataGridViewElementStates InheritedState { get; }
    return:
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values representing the current state of the cell."
  overload: System.Windows.Forms.DataGridViewCell.InheritedState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The cell is not contained within a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and the value of its <xref:System.Windows.Forms.DataGridViewCell.RowIndex*> property is not -1."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The cell is contained within a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and the value of its <xref:System.Windows.Forms.DataGridViewCell.RowIndex*> property is -1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.InheritedStyle
  id: InheritedStyle
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: InheritedStyle
  nameWithType: DataGridViewCell.InheritedStyle
  fullName: System.Windows.Forms.DataGridViewCell.InheritedStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the style currently applied to the cell."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control displays its cells using the styles indicated by the cell InheritedStyle property, which inherits styles from other properties of type <xref:System.Windows.Forms.DataGridViewCellStyle>. The styles specified through the <xref:System.Windows.Forms.DataGridViewCell.Style%2A> property override the styles specified through all other cell-style properties, but do not necessarily indicate all the styles that contribute to the cell&quot;s appearance.       For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> currently applied to the cell."
  overload: System.Windows.Forms.DataGridViewCell.InheritedStyle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The cell does not belong to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row containing the cell is a shared row.       -or-       The cell is a column header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)
  id: InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: InitializeEditingControl(Int32,Object,DataGridViewCellStyle)
  nameWithType: DataGridViewCell.InitializeEditingControl(Int32,Object,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCell.InitializeEditingControl(Int32,Object,DataGridViewCellStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes the control used to edit the cell."
  remarks: "As an optimization technique, typically all the cells of the same type and in the same <xref:System.Windows.Forms.DataGridView> share a single hosted editing control. However, before the control is used by a cell, it needs to be initialized by the InitializeEditingControl method. The first time it is called, this method adds the control to the list of editing controls in its parent <xref:System.Windows.Forms.DataGridView>. It also initializes some of the visual properties of the cell. For example, InitializeEditingControl sets the background color of the editing area to match the supplied cell style parameter. Subsequent calls to InitializeEditingControl do nothing.       Derived classes use this method to host an instance of the <xref:System.Windows.Forms.Control> class corresponding to their type. For example, a table that contains one or more <xref:System.Windows.Forms.DataGridViewTextBoxCell> objects calls this method to add a single <xref:System.Windows.Forms.TextBox> editing control to the owning <xref:System.Windows.Forms.DataGridView>."
  example:
  - "The following code example demonstrates how to override the <xref:System.Windows.Forms.DataGridViewTextBoxCell.InitializeEditingControl%2A> method in a simple class that derives from the <xref:System.Windows.Forms.DataGridViewTextBoxCell> class. This example is part of a larger code example provided in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#200](~/add/codesnippet/csharp/a951f49c-0e66-4878-9544-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/add/codesnippet/visualbasic/a951f49c-0e66-4878-9544-_1.vb)]"
  syntax:
    content: public virtual void InitializeEditingControl (int rowIndex, object initialFormattedValue, System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The zero-based row index of the cell&quot;s location."
    - id: initialFormattedValue
      type: System.Object
      description: "An <xref:System.Object> that represents the value displayed by the cell when editing is started."
    - id: dataGridViewCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that represents the style of the cell."
  overload: System.Windows.Forms.DataGridViewCell.InitializeEditingControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "There is no associated <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> or if one is present, it does not have an associated editing control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.IsInEditMode
  id: IsInEditMode
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: IsInEditMode
  nameWithType: DataGridViewCell.IsInEditMode
  fullName: System.Windows.Forms.DataGridViewCell.IsInEditMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether this cell is currently being edited."
  remarks: "This property is useful when you are working directly with cell instances. Alternatively, you can use the <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A?displayProperty=fullName> property. You can also handle the <xref:System.Windows.Forms.DataGridView.CellBeginEdit?displayProperty=fullName> event to determine when the user enters edit mode."
  syntax:
    content: public bool IsInEditMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell is in edit mode; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.IsInEditMode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row containing the cell is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  id: KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: KeyDownUnsharesRow(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.KeyDownUnsharesRow(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(KeyEventArgs,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the parent row is unshared if the user presses a key while the focus is on the cell."
  remarks: "The KeyDownUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A> with the same <xref:System.Windows.Forms.KeyEventArgs> argument has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool KeyDownUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;></xref> that contains the event data."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)
  id: KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: KeyEntersEditMode(KeyEventArgs)
  nameWithType: DataGridViewCell.KeyEntersEditMode(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines if edit mode should be started based on the given key."
  remarks: "Override this method to create a custom cell that is editable."
  syntax:
    content: public virtual bool KeyEntersEditMode (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;></xref> that represents the key that was pressed."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if edit mode should be started; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.KeyEntersEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  id: KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: KeyPressUnsharesRow(KeyPressEventArgs,Int32)
  nameWithType: DataGridViewCell.KeyPressUnsharesRow(KeyPressEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(KeyPressEventArgs,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared if a key is pressed while a cell in the row has focus."
  remarks: "The KeyPressUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A> method. In derived classes, it must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool KeyPressUnsharesRow (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyPressEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;></xref> that contains the event data."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  id: KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: KeyUpUnsharesRow(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.KeyUpUnsharesRow(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(KeyEventArgs,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the parent row is unshared when the user releases a key while the focus is on the cell."
  remarks: "The KeyUpUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A> with the same <xref:System.Windows.Forms.KeyEventArgs> argument has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool KeyUpUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;></xref> that contains the event data."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(System.Int32,System.Boolean)
  id: LeaveUnsharesRow(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: LeaveUnsharesRow(Int32,Boolean)
  nameWithType: DataGridViewCell.LeaveUnsharesRow(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared when the focus leaves a cell in the row."
  remarks: "The LeaveUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool LeaveUnsharesRow (int rowIndex, bool throughMouseClick);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    - id: throughMouseClick
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a user action moved focus to the cell; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if a programmatic operation moved focus to the cell."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  id: MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the height, in pixels, of the specified text, given the specified characteristics."
  remarks: "If multiple lines are required and the specified formatting allows it, the height returned is the combined height of all lines."
  syntax:
    content: public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to render the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> applied to the text."
    - id: maxWidth
      type: System.Int32
      description: "The maximum width of the text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values to apply to the text."
    return:
      type: System.Int32
      description: "The height, in pixels, of the text."
  overload: System.Windows.Forms.DataGridViewCell.MeasureTextHeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>font</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxWidth</code> is less than 1."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>flags</code> is not a valid bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags,System.Boolean@)
  id: MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags,System.Boolean@)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)
  nameWithType: DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the height, in pixels, of the specified text, given the specified characteristics. Also indicates whether the required width is greater than the specified maximum width."
  remarks: "If multiple lines are required and the specified formatting allows it, the height returned is the combined height of all lines."
  syntax:
    content: public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags, out bool widthTruncated);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to render the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> applied to the text."
    - id: maxWidth
      type: System.Int32
      description: "The maximum width of the text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values to apply to the text."
    - id: widthTruncated
      type: System.Boolean
      description: "Set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the required width of the text is greater than `maxWidth`."
    return:
      type: System.Int32
      description: "The height, in pixels, of the text."
  overload: System.Windows.Forms.DataGridViewCell.MeasureTextHeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>font</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxWidth</code> is less than 1."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>flags</code> is not a valid bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Windows.Forms.TextFormatFlags)
  id: MeasureTextPreferredSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the ideal height and width of the specified text given the specified characteristics."
  remarks: "If multiple lines are required and the specified formatting allows it, the size returned includes the combined height of all lines."
  syntax:
    content: public static System.Drawing.Size MeasureTextPreferredSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, float maxRatio, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to render the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> applied to the text."
    - id: maxRatio
      type: System.Single
      description: "The maximum width-to-height ratio of the block of text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values to apply to the text."
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> representing the preferred height and width of the text."
  overload: System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>font</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxRatio</code> is less than or equal to 0."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>flags</code> is not a valid bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags)
  id: MeasureTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MeasureTextSize(Graphics,String,Font,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextSize(Graphics,String,Font,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextSize(Graphics,String,Font,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the height and width of the specified text given the specified characteristics."
  remarks: "If multiple lines are required and the specified formatting allows it, the size returned includes the combined height of all lines."
  syntax:
    content: public static System.Drawing.Size MeasureTextSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to render the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> applied to the text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values to apply to the text."
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> representing the height and width of the text."
  overload: System.Windows.Forms.DataGridViewCell.MeasureTextSize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>font</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>flags</code> is not a valid bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  id: MeasureTextWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the width, in pixels, of the specified text given the specified characteristics."
  syntax:
    content: public static int MeasureTextWidth (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxHeight, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to render the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> applied to the text."
    - id: maxHeight
      type: System.Int32
      description: "The maximum height of the text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values to apply to the text."
    return:
      type: System.Int32
      description: "The width, in pixels, of the text."
  overload: System.Windows.Forms.DataGridViewCell.MeasureTextWidth*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>font</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxHeight</code> is less than 1."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>flags</code> is not a valid bitwise combination of <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared if the user clicks a mouse button while the pointer is on a cell in the row."
  remarks: "The MouseClickUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool MouseClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared if the user double-clicks a cell in the row."
  remarks: "The MouseDoubleClickUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A> method. It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool MouseDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared when the user holds down a mouse button while the pointer is on a cell in the row."
  remarks: "The MouseDownUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A> method. In derived classes, it must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)
  id: MouseEnterUnsharesRow(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MouseEnterUnsharesRow(Int32)
  nameWithType: DataGridViewCell.MouseEnterUnsharesRow(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row."
  remarks: "The MouseEnterUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> method. In derived classes, it must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool MouseEnterUnsharesRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)
  id: MouseLeaveUnsharesRow(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MouseLeaveUnsharesRow(Int32)
  nameWithType: DataGridViewCell.MouseLeaveUnsharesRow(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared when the mouse pointer leaves the row."
  remarks: "The MouseLeaveUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A> method. In derived classes, it must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool MouseLeaveUnsharesRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row."
  remarks: "The MouseMoveUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A> method. In derived classes, it must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool MouseMoveUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether a row will be unshared when the user releases a mouse button while the pointer is on a cell in the row."
  remarks: "The MouseUpUnsharesRow method is called just before the <xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A> method. In derived classes, it must return `true` if the call to <xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A> has the effect of unsharing the row containing the cell. Otherwise, it should return `false`.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row will be unshared, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The base <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> class always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the cell is clicked."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellClick%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnContentClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnContentClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnContentClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the cell&quot;s contents are clicked."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnContentClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnContentDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnContentDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the cell&quot;s contents are double-clicked."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellContentDoubleClick?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnContentDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged
  id: OnDataGridViewChanged
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnDataGridViewChanged()
  nameWithType: DataGridViewCell.OnDataGridViewChanged()
  fullName: System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the <xref:System.Windows.Forms.DataGridViewElement.DataGridView*> property of the cell changes."
  syntax:
    content: protected override void OnDataGridViewChanged ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnDoubleClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the cell is double-clicked."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellDoubleClick?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)
  id: OnEnter(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnEnter(Int32,Boolean)
  nameWithType: DataGridViewCell.OnEnter(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.OnEnter(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the focus moves to a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellEnter%2A?displayProperty=fullName> method. It is called in the same circumstances in which an <xref:System.Windows.Forms.DataGridView.CellEnter?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnEnter (int rowIndex, bool throughMouseClick);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    - id: throughMouseClick
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a user action moved focus to the cell; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if a programmatic operation moved focus to the cell."
  overload: System.Windows.Forms.DataGridViewCell.OnEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)
  id: OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.OnKeyDown(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnKeyDown(KeyEventArgs,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when a character key is pressed while the focus is on a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.KeyDown> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e, int rowIndex);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;></xref> that contains the event data."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
  overload: System.Windows.Forms.DataGridViewCell.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  id: OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnKeyPress(KeyPressEventArgs,Int32)
  nameWithType: DataGridViewCell.OnKeyPress(KeyPressEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnKeyPress(KeyPressEventArgs,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when a key is pressed while the focus is on a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.Control.OnKeyPress%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.KeyPress> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyPressEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;></xref> that contains the event data."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
  overload: System.Windows.Forms.DataGridViewCell.OnKeyPress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)
  id: OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.OnKeyUp(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnKeyUp(KeyEventArgs,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when a character key is released while the focus is on a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.Control.KeyUp> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e, int rowIndex);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;></xref> that contains the event data."
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
  overload: System.Windows.Forms.DataGridViewCell.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)
  id: OnLeave(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnLeave(Int32,Boolean)
  nameWithType: DataGridViewCell.OnLeave(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.OnLeave(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the focus moves from a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellLeave%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellLeave?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnLeave (int rowIndex, bool throughMouseClick);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    - id: throughMouseClick
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a user action moved focus from the cell; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if a programmatic operation moved focus from the cell."
  overload: System.Windows.Forms.DataGridViewCell.OnLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the user clicks a mouse button while the pointer is on a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseClick?displayProperty=fullName> event is raised, but it does not actually raise the event."
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#10](~/add/codesnippet/csharp/863c2c1c-640a-4d2b-b454-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/add/codesnippet/visualbasic/863c2c1c-640a-4d2b-b454-_1.vb)]"
  syntax:
    content: protected virtual void OnMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnMouseClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the user double-clicks a mouse button while the pointer is on a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnMouseDown(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseDown(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseDown(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the user holds down a mouse button while the pointer is on a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)
  id: OnMouseEnter(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnMouseEnter(Int32)
  nameWithType: DataGridViewCell.OnMouseEnter(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseEnter(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the mouse pointer moves over a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=fullName> event is raised, but it does not actually raise the event."
  example:
  - "The following code example illustrates the use of this method. This example is part of a larger example available in [How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/csharp/m-system.windows.forms.d_98_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/visualbasic/m-system.windows.forms.d_98_1.vb)]"
  syntax:
    content: protected virtual void OnMouseEnter (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
  overload: System.Windows.Forms.DataGridViewCell.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)
  id: OnMouseLeave(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnMouseLeave(Int32)
  nameWithType: DataGridViewCell.OnMouseLeave(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseLeave(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the mouse pointer leaves the cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=fullName> event is raised, but it does not actually raise the event."
  example:
  - "The following code example illustrates the use of this method. This example is part of a larger example available in [How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/csharp/m-system.windows.forms.d_93_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/visualbasic/m-system.windows.forms.d_93_1.vb)]"
  syntax:
    content: protected virtual void OnMouseLeave (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
  overload: System.Windows.Forms.DataGridViewCell.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnMouseMove(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseMove(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseMove(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the mouse pointer moves within a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseMove?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OnMouseUp(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseUp(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseUp(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Called when the user releases a mouse button while the pointer is on a cell."
  remarks: "This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=fullName> method. It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=fullName> event is raised, but it does not actually raise the event."
  syntax:
    content: protected virtual void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCell.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OwningColumn
  id: OwningColumn
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OwningColumn
  nameWithType: DataGridViewCell.OwningColumn
  fullName: System.Windows.Forms.DataGridViewCell.OwningColumn
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the column that contains this cell."
  syntax:
    content: public System.Windows.Forms.DataGridViewColumn OwningColumn { get; }
    return:
      type: System.Windows.Forms.DataGridViewColumn
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewColumn&quot;></xref> that contains the cell, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the cell is not in a column."
  overload: System.Windows.Forms.DataGridViewCell.OwningColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.OwningRow
  id: OwningRow
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: OwningRow
  nameWithType: DataGridViewCell.OwningRow
  fullName: System.Windows.Forms.DataGridViewCell.OwningRow
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the row that contains this cell."
  syntax:
    content: public System.Windows.Forms.DataGridViewRow OwningRow { get; }
    return:
      type: System.Windows.Forms.DataGridViewRow
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> that contains the cell, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the cell is not in a row."
  overload: System.Windows.Forms.DataGridViewCell.OwningRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)
  id: Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)
  nameWithType: DataGridViewCell.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)
  fullName: System.Windows.Forms.DataGridViewCell.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Paints the current <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the Paint method of a <xref:System.Windows.Forms.DataGridViewButtonCell>. This code example is part of a larger example provided in [How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/add/codesnippet/visualbasic/89292641-a862-4354-88d8-_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.DisabledButtons#20](~/add/codesnippet/csharp/89292641-a862-4354-88d8-_1.cs)]"
  syntax:
    content: protected virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be repainted."
    - id: cellBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that contains the bounds of the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> that is being painted."
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell that is being painted."
    - id: cellState
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values that specifies the state of the cell."
    - id: value
      type: System.Object
      description: "The data of the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> that is being painted."
    - id: formattedValue
      type: System.Object
      description: "The formatted data of the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> that is being painted."
    - id: errorText
      type: System.String
      description: "An error message that is associated with the cell."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that contains formatting and style information about the cell."
    - id: advancedBorderStyle
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that contains border styles for the cell that is being painted."
    - id: paintParts
      type: System.Windows.Forms.DataGridViewPaintParts
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.DataGridViewPaintParts&quot;></xref> values that specifies which parts of the cell need to be painted."
  overload: System.Windows.Forms.DataGridViewCell.Paint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  id: PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)
  nameWithType: DataGridViewCell.PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)
  fullName: System.Windows.Forms.DataGridViewCell.PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Paints the border of the current <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  remarks: ''
  example:
  - "The following code example illustrates the use of this method. This example is part of a larger example available in [How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/add/codesnippet/visualbasic/bbcac30b-9897-4ce3-a6de-_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.DisabledButtons#20](~/add/codesnippet/csharp/bbcac30b-9897-4ce3-a6de-_1.cs)]"
  syntax:
    content: protected virtual void PaintBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the border."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be repainted."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that contains the area of the border that is being painted."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that contains formatting and style information about the current cell."
    - id: advancedBorderStyle
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that contains border styles of the border that is being painted."
  overload: System.Windows.Forms.DataGridViewCell.PaintBorder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.PaintErrorIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.String)
  id: PaintErrorIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.String)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: PaintErrorIcon(Graphics,Rectangle,Rectangle,String)
  nameWithType: DataGridViewCell.PaintErrorIcon(Graphics,Rectangle,Rectangle,String)
  fullName: System.Windows.Forms.DataGridViewCell.PaintErrorIcon(Graphics,Rectangle,Rectangle,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Paints the error icon of the current <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  remarks: "The `errorText` parameter signals the existence of an error. If `errorText` is `null` or <xref:System.String?displayProperty=fullName>, the PaintErrorIcon method does nothing."
  syntax:
    content: protected virtual void PaintErrorIcon (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellValueBounds, string errorText);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the border."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be repainted."
    - id: cellValueBounds
      type: System.Drawing.Rectangle
      description: "The bounding <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that encloses the cell&quot;s content area."
    - id: errorText
      type: System.String
      description: "An error message that is associated with the cell."
  overload: System.Windows.Forms.DataGridViewCell.PaintErrorIcon*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)
  id: ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)
  nameWithType: DataGridViewCell.ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)
  fullName: System.Windows.Forms.DataGridViewCell.ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converts a value formatted for display to an actual cell value."
  remarks: "When the user edits a cell value and commits the change, the <xref:System.Windows.Forms.DataGridView> control calls this method to convert the displayed value from the <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> to the <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>. The control then sets the underlying cell value or data source value to the converted value.       The default implementation of this method parses the `formattedValue` parameter using the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style indicated by the `cellStyle` parameter.       If `formattedValue` is equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, this method returns the value of the <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> property or `null` if <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> is <xref:System.DBNull.Value?displayProperty=fullName> and the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> is a reference type.       If `formattedValue` is not equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, this method parses `formattedValue` using the <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> property and the specified or default converters.       If the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> is nullable, this method wraps the return value as a <xref:System.Nullable%601> type."
  syntax:
    content: public virtual object ParseFormattedValue (object formattedValue, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.ComponentModel.TypeConverter valueTypeConverter);
    parameters:
    - id: formattedValue
      type: System.Object
      description: "The display value of the cell."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> in effect for the cell."
    - id: formattedValueTypeConverter
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> for the display value type, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to use the default converter."
    - id: valueTypeConverter
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> for the cell value type, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to use the default converter."
    return:
      type: System.Object
      description: "The cell value."
  overload: System.Windows.Forms.DataGridViewCell.ParseFormattedValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cellStyle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "The <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType*> property value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Windows.Forms.DataGridViewCell.ValueType*> property value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>formattedValue</code> cannot be converted."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>formattedValue</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The type of <code>formattedValue</code> does not match the type indicated by the <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType*> property."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewCell.PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sets the location and size of the editing control hosted by a cell in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "Some classes derived from the <xref:System.Windows.Forms.DataGridViewCell> class, such as <xref:System.Windows.Forms.DataGridViewComboBoxCell>, host a control in the selected cell. The PositionEditingControl method positions the editing control inside of the host cell. Because the editing control may take up more space than a single cell, it may need to be positioned differently when editing a cell in the first visible column or first visible row so it does not paint outside the <xref:System.Windows.Forms.DataGridView>."
  syntax:
    content: public virtual void PositionEditingControl (bool setLocation, bool setSize, System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);
    parameters:
    - id: setLocation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to have the control placed as specified by the other arguments; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to allow the control to place itself."
    - id: setSize
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to specify the size; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to allow the control to size itself."
    - id: cellBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that defines the cell bounds."
    - id: cellClip
      type: System.Drawing.Rectangle
      description: "The area that will be used to paint the editing control."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that represents the style of the cell being edited."
    - id: singleVerticalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a vertical border to the cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: singleHorizontalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a horizontal border to the cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isFirstDisplayedColumn
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the hosting cell is in the first visible column; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isFirstDisplayedRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the hosting cell is in the first visible row; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.PositionEditingControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The cell is not contained within a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.PositionEditingPanel(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: PositionEditingPanel(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewCell.PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sets the location and size of the editing panel hosted by the cell, and returns the normal bounds of the editing control within the editing panel."
  syntax:
    content: public virtual System.Drawing.Rectangle PositionEditingPanel (System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);
    parameters:
    - id: cellBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that defines the cell bounds."
    - id: cellClip
      type: System.Drawing.Rectangle
      description: "The area that will be used to paint the editing panel."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that represents the style of the cell being edited."
    - id: singleVerticalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a vertical border to the cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: singleHorizontalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a horizontal border to the cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isFirstDisplayedColumn
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell is in the first column currently displayed in the control; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isFirstDisplayedRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell is in the first row currently displayed in the control; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the normal bounds of the editing control within the editing panel."
  overload: System.Windows.Forms.DataGridViewCell.PositionEditingPanel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The cell has not been added to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.PreferredSize
  id: PreferredSize
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: PreferredSize
  nameWithType: DataGridViewCell.PreferredSize
  fullName: System.Windows.Forms.DataGridViewCell.PreferredSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the size, in pixels, of a rectangular area into which the cell can fit."
  remarks: "The PreferredSize property returns the natural size of the cell computed by the cell&quot;s owning row and column. PreferredSize returns a <xref:System.Drawing.Size> with a width and height of -1 if the cell is not contained in a table.       If the cell is in a <xref:System.Windows.Forms.DataGridViewColumn> that has its <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A> property set to `false`, -1 is returned for the width.       This method relies on the <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> method."
  syntax:
    content: public System.Drawing.Size PreferredSize { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> containing the height and width, in pixels."
  overload: System.Windows.Forms.DataGridViewCell.PreferredSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row containing the cell is a shared row.       -or-       The cell is a column header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ReadOnly
  id: ReadOnly
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DataGridViewCell.ReadOnly
  fullName: System.Windows.Forms.DataGridViewCell.ReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the cell&quot;s data can be edited."
  remarks: "The ReadOnly property indicates whether the data displayed by the cell can be edited. You can set ReadOnly for individual cells, or you can make an entire row or column of cells read-only by setting the <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A?displayProperty=fullName> or <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A?displayProperty=fullName> properties. By default, if a cell&quot;s parent row or column is set to read-only, the child cells will adopt the same value. You can override this default behavior by setting ReadOnly for individual cells.       You can navigate to a read-only cell, and you can set a read-only cell to be the current cell.       ReadOnly only affects whether a cell is editable; it does not affect whether the user can delete rows."
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell&quot;s data cannot be edited; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.ReadOnly*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "There is no owning row when setting this property.       -or-       The owning row is shared when setting this property."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Resizable
  id: Resizable
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Resizable
  nameWithType: DataGridViewCell.Resizable
  fullName: System.Windows.Forms.DataGridViewCell.Resizable
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the cell can be resized."
  remarks: "The value of the Resizable property is set by the cell&quot;s parent row or column."
  syntax:
    content: public virtual bool Resizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell can be resized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Resizable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.RowIndex
  id: RowIndex
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: RowIndex
  nameWithType: DataGridViewCell.RowIndex
  fullName: System.Windows.Forms.DataGridViewCell.RowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the index of the cell&quot;s parent row."
  remarks: "When the RowIndex property returns -1, the cell is either a column header, or the cell&quot;s row is shared.       For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates the use of this property.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#080](~/add/codesnippet/csharp/p-system.windows.forms.d_72_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#080](~/add/codesnippet/visualbasic/p-system.windows.forms.d_72_1.vb)]"
  syntax:
    content: public int RowIndex { get; }
    return:
      type: System.Int32
      description: "The index of the row that contains the cell; -1 if there is no owning row."
  overload: System.Windows.Forms.DataGridViewCell.RowIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Selected
  id: Selected
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Selected
  nameWithType: DataGridViewCell.Selected
  fullName: System.Windows.Forms.DataGridViewCell.Selected
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the cell has been selected."
  syntax:
    content: public virtual bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell has been selected; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Selected*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "There is no associated <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> when setting this property.       -or-       The owning row is shared when setting this property."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)
  id: SetValue(System.Int32,System.Object)
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: SetValue(Int32,Object)
  nameWithType: DataGridViewCell.SetValue(Int32,Object)
  fullName: System.Windows.Forms.DataGridViewCell.SetValue(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sets the value of the cell."
  syntax:
    content: protected virtual bool SetValue (int rowIndex, object value);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the cell&quot;s parent row."
    - id: value
      type: System.Object
      description: "The cell value to set."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the value has been set; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.SetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is less than 0 or greater than or equal to the number of rows in the parent <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Size
  id: Size
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Size
  nameWithType: DataGridViewCell.Size
  fullName: System.Windows.Forms.DataGridViewCell.Size
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the size of the cell."
  remarks: "If the cell is not associated with a <xref:System.Windows.Forms.DataGridView> control, the Size property returns a <xref:System.Drawing.Size> with a width and height of -1."
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> set to the owning row&quot;s height and the owning column&quot;s width."
  overload: System.Windows.Forms.DataGridViewCell.Size*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row containing the cell is a shared row.       -or-       The cell is a column header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Style
  id: Style
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Style
  nameWithType: DataGridViewCell.Style
  fullName: System.Windows.Forms.DataGridViewCell.Style
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the style for the cell."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control displays its cells using the styles indicated by the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property, which inherits styles from other properties of type <xref:System.Windows.Forms.DataGridViewCellStyle>. The styles specified through the Style property override the styles specified through all other cell-style properties, but do not necessarily indicate all the styles that contribute to the cell&quot;s appearance.       For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Style property to get the background color of a cell. This example is part of a larger code example provided for the <xref:System.Windows.Forms.DataGridViewColumn> class.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/add/codesnippet/cpp/p-system.windows.forms.d_423_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/add/codesnippet/visualbasic/p-system.windows.forms.d_423_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#120](~/add/codesnippet/csharp/p-system.windows.forms.d_423_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle Style { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The style associated with the cell."
  overload: System.Windows.Forms.DataGridViewCell.Style*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Tag
  id: Tag
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Tag
  nameWithType: DataGridViewCell.Tag
  fullName: System.Windows.Forms.DataGridViewCell.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the object that contains supplemental data about the cell."
  remarks: "Any type derived from the <xref:System.Object> class can be assigned to this property. The Tag property is commonly used to store data that is closely associated with the value displayed by the cell."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains data about the cell. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ToolTipText
  id: ToolTipText
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ToolTipText
  nameWithType: DataGridViewCell.ToolTipText
  fullName: System.Windows.Forms.DataGridViewCell.ToolTipText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the ToolTip text associated with this cell."
  remarks: "The value of this property is displayed as the cell ToolTip when the mouse pointer is over the cell and the property value is not <xref:System.String>. If the value of this property is <xref:System.String>, the cell will display a ToolTip containing the value of the cell if the value is truncated in the cell display; otherwise, the cell will not display a ToolTip. You can also prevent the display of a ToolTip by setting the <xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A?displayProperty=fullName> property to `false`.       When the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`, getting the value of the ToolTipText property raises the <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> event of the control and returns the value of the <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=fullName> property as specified in the event handler. If there are no handlers for the event, getting the value of the ToolTipText property returns the previously specified value or its default value of <xref:System.String.Empty>.       Handling the <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> event is primarily useful when working with large amounts of data to avoid performance penalties when setting the cell ToolTipText value for multiple cells. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       Changing this property raises the <xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged> event on the owning <xref:System.Windows.Forms.DataGridView>, if one exists."
  example:
  - "The following code example shows how to set the ToolTipText property within an event handler for the <xref:System.Windows.Forms.DataGridView.CellFormatting> event. This example is part of a larger code example provided in [How to: Add ToolTips to Individual Cells in a Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/add/codesnippet/cpp/p-system.windows.forms.d_310_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/add/codesnippet/csharp/p-system.windows.forms.d_310_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_310_1.vb)]"
  syntax:
    content: public string ToolTipText { get; set; }
    return:
      type: System.String
      description: "The ToolTip text associated with the cell. The default is &lt;xref:System.String?displayProperty=fullName&gt;."
  overload: System.Windows.Forms.DataGridViewCell.ToolTipText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ToString
  id: ToString
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ToString()
  nameWithType: DataGridViewCell.ToString()
  fullName: System.Windows.Forms.DataGridViewCell.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a string that describes the current object."
  remarks: "Unless otherwise noted, the ToString method for all the various cell types will return a string of the form shown in the following code example:       `Classname {RowIndex = #, ColumnIndex = #}`"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the current object."
  overload: System.Windows.Forms.DataGridViewCell.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Value
  id: Value
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Value
  nameWithType: DataGridViewCell.Value
  fullName: System.Windows.Forms.DataGridViewCell.Value
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the value associated with this cell."
  remarks: "When you assign a different value to a cell, the <xref:System.Windows.Forms.DataGridView.CellValueChanged> event of the <xref:System.Windows.Forms.DataGridView> control is raised.       The Value property is the actual data object contained by the cell, whereas the <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> property is the formatted representation of the data. The <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> and <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> properties correspond to the data types of these values, respectively.       When you set the Value property, the specified value is not automatically converted from a formatted, display value to an underlying cell value. For example, the <xref:System.Windows.Forms.DataGridViewCellStyle> in effect for the cell is ignored, so setting Value to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=fullName> does not result in a property value of <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=fullName>."
  example:
  - "The following code example shows how to update a cell's contents with the Value property. This example is part of a larger code example provided in [How to: Manipulate Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/cpp/p-system.windows.forms.d_121_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/csharp/p-system.windows.forms.d_121_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/visualbasic/p-system.windows.forms.d_121_1.vb)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "Gets or sets the data to be displayed by the cell. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Value*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<xref:System.Windows.Forms.DataGridViewCell.RowIndex*> is outside the valid range of 0 to the number of rows in the control minus 1."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> is less than 0, indicating that the cell is a row header cell."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.ValueType
  id: ValueType
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: ValueType
  nameWithType: DataGridViewCell.ValueType
  fullName: System.Windows.Forms.DataGridViewCell.ValueType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the data type of the values in the cell."
  remarks: "If the ValueType property for the cell has not been set, the <xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A?displayProperty=fullName> property for the owning column is used, if it exists.       The <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property is the actual data object contained by the cell, whereas the <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> property is the formatted representation of the data. The ValueType and <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> properties correspond to the data types of these values, respectively."
  example:
  - "The following code example demonstrates the use of this property.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#20](~/add/codesnippet/csharp/p-system.windows.forms.d_349_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_349_1.vb)]"
  syntax:
    content: public virtual Type ValueType { get; set; }
    return:
      type: System.Type
      description: "A <xref:System.Type> representing the data type of the value in the cell."
  overload: System.Windows.Forms.DataGridViewCell.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCell.Visible
  id: Visible
  parent: System.Windows.Forms.DataGridViewCell
  langs:
  - csharp
  name: Visible
  nameWithType: DataGridViewCell.Visible
  fullName: System.Windows.Forms.DataGridViewCell.Visible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the cell is in a row or column that has been hidden."
  remarks: "This property indicates whether the cell is in a row or a column with its <xref:System.Windows.Forms.DataGridViewBand.Visible%2A> property set to `false`. It does not indicate whether the cell has been scrolled off-screen. To determine whether a cell is visible within the display area of the control, use the <xref:System.Windows.Forms.DataGridViewCell.Displayed%2A> property."
  syntax:
    content: public virtual bool Visible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cell is visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCell.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.DataGridViewElement
  isExternal: false
  name: System.Windows.Forms.DataGridViewElement
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Windows.Forms.DataGridViewCell.#ctor
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DataGridViewCell()
  nameWithType: DataGridViewCell.DataGridViewCell()
  fullName: System.Windows.Forms.DataGridViewCell.DataGridViewCell()
- uid: System.Windows.Forms.DataGridViewCell.AccessibilityObject
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: AccessibilityObject
  nameWithType: DataGridViewCell.AccessibilityObject
  fullName: System.Windows.Forms.DataGridViewCell.AccessibilityObject
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewCell.AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridViewAdvancedBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAdvancedBorderStyle
  nameWithType: DataGridViewAdvancedBorderStyle
  fullName: System.Windows.Forms.DataGridViewAdvancedBorderStyle
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCell.BorderWidths(System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: BorderWidths(DataGridViewAdvancedBorderStyle)
  nameWithType: DataGridViewCell.BorderWidths(DataGridViewAdvancedBorderStyle)
  fullName: System.Windows.Forms.DataGridViewCell.BorderWidths(DataGridViewAdvancedBorderStyle)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.ClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCellEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellEventArgs
  nameWithType: DataGridViewCellEventArgs
  fullName: System.Windows.Forms.DataGridViewCellEventArgs
- uid: System.Windows.Forms.DataGridViewCell.Clone
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Clone()
  nameWithType: DataGridViewCell.Clone()
  fullName: System.Windows.Forms.DataGridViewCell.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.DataGridViewCell.ColumnIndex
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCell.ColumnIndex
  fullName: System.Windows.Forms.DataGridViewCell.ColumnIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataGridViewCell.ContentBounds
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContentBounds
  nameWithType: DataGridViewCell.ContentBounds
  fullName: System.Windows.Forms.DataGridViewCell.ContentBounds
- uid: System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContentClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.ContentClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.ContextMenuStrip
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContextMenuStrip
  nameWithType: DataGridViewCell.ContextMenuStrip
  fullName: System.Windows.Forms.DataGridViewCell.ContextMenuStrip
- uid: System.Windows.Forms.ContextMenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenuStrip
  nameWithType: ContextMenuStrip
  fullName: System.Windows.Forms.ContextMenuStrip
- uid: System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: CreateAccessibilityInstance()
  nameWithType: DataGridViewCell.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance()
- uid: System.Windows.Forms.DataGridViewCell.DefaultNewRowValue
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DefaultNewRowValue
  nameWithType: DataGridViewCell.DefaultNewRowValue
  fullName: System.Windows.Forms.DataGridViewCell.DefaultNewRowValue
- uid: System.Windows.Forms.DataGridViewCell.DetachEditingControl
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DetachEditingControl()
  nameWithType: DataGridViewCell.DetachEditingControl()
  fullName: System.Windows.Forms.DataGridViewCell.DetachEditingControl()
- uid: System.Windows.Forms.DataGridViewCell.Displayed
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Displayed
  nameWithType: DataGridViewCell.Displayed
  fullName: System.Windows.Forms.DataGridViewCell.Displayed
- uid: System.Windows.Forms.DataGridViewCell.Dispose
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Dispose()
  nameWithType: DataGridViewCell.Dispose()
  fullName: System.Windows.Forms.DataGridViewCell.Dispose()
- uid: System.Windows.Forms.DataGridViewCell.Dispose(System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataGridViewCell.Dispose(Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.Dispose(Boolean)
- uid: System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DoubleClickUnsharesRow(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.DoubleClickUnsharesRow(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.EditedFormattedValue
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: EditedFormattedValue
  nameWithType: DataGridViewCell.EditedFormattedValue
  fullName: System.Windows.Forms.DataGridViewCell.EditedFormattedValue
- uid: System.Windows.Forms.DataGridViewCell.EditType
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: EditType
  nameWithType: DataGridViewCell.EditType
  fullName: System.Windows.Forms.DataGridViewCell.EditType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: EnterUnsharesRow(Int32,Boolean)
  nameWithType: DataGridViewCell.EnterUnsharesRow(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(Int32,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.ErrorIconBounds
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ErrorIconBounds
  nameWithType: DataGridViewCell.ErrorIconBounds
  fullName: System.Windows.Forms.DataGridViewCell.ErrorIconBounds
- uid: System.Windows.Forms.DataGridViewCell.ErrorText
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ErrorText
  nameWithType: DataGridViewCell.ErrorText
  fullName: System.Windows.Forms.DataGridViewCell.ErrorText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.DataGridViewCell.Finalize
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Finalize()
  nameWithType: DataGridViewCell.Finalize()
  fullName: System.Windows.Forms.DataGridViewCell.Finalize()
- uid: System.Windows.Forms.DataGridViewCell.FormattedValue
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: FormattedValue
  nameWithType: DataGridViewCell.FormattedValue
  fullName: System.Windows.Forms.DataGridViewCell.FormattedValue
- uid: System.Windows.Forms.DataGridViewCell.FormattedValueType
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: FormattedValueType
  nameWithType: DataGridViewCell.FormattedValueType
  fullName: System.Windows.Forms.DataGridViewCell.FormattedValueType
- uid: System.Windows.Forms.DataGridViewCell.Frozen
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Frozen
  nameWithType: DataGridViewCell.Frozen
  fullName: System.Windows.Forms.DataGridViewCell.Frozen
- uid: System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)
  nameWithType: DataGridViewCell.GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)
  fullName: System.Windows.Forms.DataGridViewCell.GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)
- uid: System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetContentBounds(Int32)
  nameWithType: DataGridViewCell.GetContentBounds(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetContentBounds(Int32)
- uid: System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetContentBounds(Graphics,DataGridViewCellStyle,Int32)
  nameWithType: DataGridViewCell.GetContentBounds(Graphics,DataGridViewCellStyle,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetContentBounds(Graphics,DataGridViewCellStyle,Int32)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)
  nameWithType: DataGridViewCell.GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)
- uid: System.Windows.Forms.DataGridViewDataErrorContexts
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewDataErrorContexts
  nameWithType: DataGridViewDataErrorContexts
  fullName: System.Windows.Forms.DataGridViewDataErrorContexts
- uid: System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)
  nameWithType: DataGridViewCell.GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)
- uid: System.Windows.Forms.DataGridViewCell.GetErrorText(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetErrorText(Int32)
  nameWithType: DataGridViewCell.GetErrorText(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetErrorText(Int32)
- uid: System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)
  nameWithType: DataGridViewCell.GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridViewCell.GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetInheritedContextMenuStrip(Int32)
  nameWithType: DataGridViewCell.GetInheritedContextMenuStrip(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(Int32)
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedState(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetInheritedState(Int32)
  nameWithType: DataGridViewCell.GetInheritedState(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetInheritedState(Int32)
- uid: System.Windows.Forms.DataGridViewElementStates
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewElementStates
  nameWithType: DataGridViewElementStates
  fullName: System.Windows.Forms.DataGridViewElementStates
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)
  nameWithType: DataGridViewCell.GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)
  nameWithType: DataGridViewCell.GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)
  fullName: System.Windows.Forms.DataGridViewCell.GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.DataGridViewCell.GetSize(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetSize(Int32)
  nameWithType: DataGridViewCell.GetSize(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetSize(Int32)
- uid: System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DataGridViewCell.GetValue(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.GetValue(Int32)
- uid: System.Windows.Forms.DataGridViewCell.HasStyle
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: HasStyle
  nameWithType: DataGridViewCell.HasStyle
  fullName: System.Windows.Forms.DataGridViewCell.HasStyle
- uid: System.Windows.Forms.DataGridViewCell.InheritedState
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: InheritedState
  nameWithType: DataGridViewCell.InheritedState
  fullName: System.Windows.Forms.DataGridViewCell.InheritedState
- uid: System.Windows.Forms.DataGridViewCell.InheritedStyle
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: InheritedStyle
  nameWithType: DataGridViewCell.InheritedStyle
  fullName: System.Windows.Forms.DataGridViewCell.InheritedStyle
- uid: System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: InitializeEditingControl(Int32,Object,DataGridViewCellStyle)
  nameWithType: DataGridViewCell.InitializeEditingControl(Int32,Object,DataGridViewCellStyle)
  fullName: System.Windows.Forms.DataGridViewCell.InitializeEditingControl(Int32,Object,DataGridViewCellStyle)
- uid: System.Windows.Forms.DataGridViewCell.IsInEditMode
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: IsInEditMode
  nameWithType: DataGridViewCell.IsInEditMode
  fullName: System.Windows.Forms.DataGridViewCell.IsInEditMode
- uid: System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyDownUnsharesRow(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.KeyDownUnsharesRow(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(KeyEventArgs,Int32)
- uid: System.Windows.Forms.KeyEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Forms.KeyEventArgs
- uid: System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyEntersEditMode(KeyEventArgs)
  nameWithType: DataGridViewCell.KeyEntersEditMode(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(KeyEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyPressUnsharesRow(KeyPressEventArgs,Int32)
  nameWithType: DataGridViewCell.KeyPressUnsharesRow(KeyPressEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(KeyPressEventArgs,Int32)
- uid: System.Windows.Forms.KeyPressEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
- uid: System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyUpUnsharesRow(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.KeyUpUnsharesRow(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(KeyEventArgs,Int32)
- uid: System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: LeaveUnsharesRow(Int32,Boolean)
  nameWithType: DataGridViewCell.LeaveUnsharesRow(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(Int32,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.TextFormatFlags
  parent: System.Windows.Forms
  isExternal: false
  name: TextFormatFlags
  nameWithType: TextFormatFlags
  fullName: System.Windows.Forms.TextFormatFlags
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags,System.Boolean@)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)
  nameWithType: DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextSize(Graphics,String,Font,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextSize(Graphics,String,Font,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextSize(Graphics,String,Font,TextFormatFlags)
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)
  nameWithType: DataGridViewCell.MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)
  fullName: System.Windows.Forms.DataGridViewCell.MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)
- uid: System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCellMouseEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellMouseEventArgs
  nameWithType: DataGridViewCellMouseEventArgs
  fullName: System.Windows.Forms.DataGridViewCellMouseEventArgs
- uid: System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseEnterUnsharesRow(Int32)
  nameWithType: DataGridViewCell.MouseEnterUnsharesRow(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(Int32)
- uid: System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseLeaveUnsharesRow(Int32)
  nameWithType: DataGridViewCell.MouseLeaveUnsharesRow(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(Int32)
- uid: System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnContentClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnContentClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnContentClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnContentDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnContentDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnDataGridViewChanged()
  nameWithType: DataGridViewCell.OnDataGridViewChanged()
  fullName: System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged()
- uid: System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridViewCell.OnDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnDoubleClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnEnter(Int32,Boolean)
  nameWithType: DataGridViewCell.OnEnter(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.OnEnter(Int32,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnKeyDown(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.OnKeyDown(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnKeyDown(KeyEventArgs,Int32)
- uid: System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnKeyPress(KeyPressEventArgs,Int32)
  nameWithType: DataGridViewCell.OnKeyPress(KeyPressEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnKeyPress(KeyPressEventArgs,Int32)
- uid: System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnKeyUp(KeyEventArgs,Int32)
  nameWithType: DataGridViewCell.OnKeyUp(KeyEventArgs,Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnKeyUp(KeyEventArgs,Int32)
- uid: System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnLeave(Int32,Boolean)
  nameWithType: DataGridViewCell.OnLeave(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.OnLeave(Int32,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseDown(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseDown(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseDown(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseEnter(Int32)
  nameWithType: DataGridViewCell.OnMouseEnter(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseEnter(Int32)
- uid: System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseLeave(Int32)
  nameWithType: DataGridViewCell.OnMouseLeave(Int32)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseLeave(Int32)
- uid: System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseMove(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseMove(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseMove(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseUp(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridViewCell.OnMouseUp(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridViewCell.OnMouseUp(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCell.OwningColumn
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OwningColumn
  nameWithType: DataGridViewCell.OwningColumn
  fullName: System.Windows.Forms.DataGridViewCell.OwningColumn
- uid: System.Windows.Forms.DataGridViewColumn
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumn
  nameWithType: DataGridViewColumn
  fullName: System.Windows.Forms.DataGridViewColumn
- uid: System.Windows.Forms.DataGridViewCell.OwningRow
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OwningRow
  nameWithType: DataGridViewCell.OwningRow
  fullName: System.Windows.Forms.DataGridViewCell.OwningRow
- uid: System.Windows.Forms.DataGridViewRow
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRow
  nameWithType: DataGridViewRow
  fullName: System.Windows.Forms.DataGridViewRow
- uid: System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)
  nameWithType: DataGridViewCell.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)
  fullName: System.Windows.Forms.DataGridViewCell.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)
- uid: System.Windows.Forms.DataGridViewPaintParts
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewPaintParts
  nameWithType: DataGridViewPaintParts
  fullName: System.Windows.Forms.DataGridViewPaintParts
- uid: System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)
  nameWithType: DataGridViewCell.PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)
  fullName: System.Windows.Forms.DataGridViewCell.PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)
- uid: System.Windows.Forms.DataGridViewCell.PaintErrorIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.String)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PaintErrorIcon(Graphics,Rectangle,Rectangle,String)
  nameWithType: DataGridViewCell.PaintErrorIcon(Graphics,Rectangle,Rectangle,String)
  fullName: System.Windows.Forms.DataGridViewCell.PaintErrorIcon(Graphics,Rectangle,Rectangle,String)
- uid: System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)
  nameWithType: DataGridViewCell.ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)
  fullName: System.Windows.Forms.DataGridViewCell.ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)
- uid: System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewCell.PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.PositionEditingPanel(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewCell.PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewCell.PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridViewCell.PreferredSize
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PreferredSize
  nameWithType: DataGridViewCell.PreferredSize
  fullName: System.Windows.Forms.DataGridViewCell.PreferredSize
- uid: System.Windows.Forms.DataGridViewCell.ReadOnly
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ReadOnly
  nameWithType: DataGridViewCell.ReadOnly
  fullName: System.Windows.Forms.DataGridViewCell.ReadOnly
- uid: System.Windows.Forms.DataGridViewCell.Resizable
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Resizable
  nameWithType: DataGridViewCell.Resizable
  fullName: System.Windows.Forms.DataGridViewCell.Resizable
- uid: System.Windows.Forms.DataGridViewCell.RowIndex
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCell.RowIndex
  fullName: System.Windows.Forms.DataGridViewCell.RowIndex
- uid: System.Windows.Forms.DataGridViewCell.Selected
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Selected
  nameWithType: DataGridViewCell.Selected
  fullName: System.Windows.Forms.DataGridViewCell.Selected
- uid: System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: SetValue(Int32,Object)
  nameWithType: DataGridViewCell.SetValue(Int32,Object)
  fullName: System.Windows.Forms.DataGridViewCell.SetValue(Int32,Object)
- uid: System.Windows.Forms.DataGridViewCell.Size
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Size
  nameWithType: DataGridViewCell.Size
  fullName: System.Windows.Forms.DataGridViewCell.Size
- uid: System.Windows.Forms.DataGridViewCell.Style
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Style
  nameWithType: DataGridViewCell.Style
  fullName: System.Windows.Forms.DataGridViewCell.Style
- uid: System.Windows.Forms.DataGridViewCell.Tag
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Tag
  nameWithType: DataGridViewCell.Tag
  fullName: System.Windows.Forms.DataGridViewCell.Tag
- uid: System.Windows.Forms.DataGridViewCell.ToolTipText
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ToolTipText
  nameWithType: DataGridViewCell.ToolTipText
  fullName: System.Windows.Forms.DataGridViewCell.ToolTipText
- uid: System.Windows.Forms.DataGridViewCell.ToString
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ToString()
  nameWithType: DataGridViewCell.ToString()
  fullName: System.Windows.Forms.DataGridViewCell.ToString()
- uid: System.Windows.Forms.DataGridViewCell.Value
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Value
  nameWithType: DataGridViewCell.Value
  fullName: System.Windows.Forms.DataGridViewCell.Value
- uid: System.Windows.Forms.DataGridViewCell.ValueType
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ValueType
  nameWithType: DataGridViewCell.ValueType
  fullName: System.Windows.Forms.DataGridViewCell.ValueType
- uid: System.Windows.Forms.DataGridViewCell.Visible
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Visible
  nameWithType: DataGridViewCell.Visible
  fullName: System.Windows.Forms.DataGridViewCell.Visible
- uid: System.Windows.Forms.DataGridViewCell.#ctor*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DataGridViewCell
  nameWithType: DataGridViewCell.DataGridViewCell
- uid: System.Windows.Forms.DataGridViewCell.AccessibilityObject*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: AccessibilityObject
  nameWithType: DataGridViewCell.AccessibilityObject
- uid: System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: AdjustCellBorderStyle
  nameWithType: DataGridViewCell.AdjustCellBorderStyle
- uid: System.Windows.Forms.DataGridViewCell.BorderWidths*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: BorderWidths
  nameWithType: DataGridViewCell.BorderWidths
- uid: System.Windows.Forms.DataGridViewCell.ClickUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ClickUnsharesRow
  nameWithType: DataGridViewCell.ClickUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.Clone*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Clone
  nameWithType: DataGridViewCell.Clone
- uid: System.Windows.Forms.DataGridViewCell.ColumnIndex*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCell.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCell.ContentBounds*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContentBounds
  nameWithType: DataGridViewCell.ContentBounds
- uid: System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContentClickUnsharesRow
  nameWithType: DataGridViewCell.ContentClickUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContentDoubleClickUnsharesRow
  nameWithType: DataGridViewCell.ContentDoubleClickUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.ContextMenuStrip*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ContextMenuStrip
  nameWithType: DataGridViewCell.ContextMenuStrip
- uid: System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: CreateAccessibilityInstance
  nameWithType: DataGridViewCell.CreateAccessibilityInstance
- uid: System.Windows.Forms.DataGridViewCell.DefaultNewRowValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DefaultNewRowValue
  nameWithType: DataGridViewCell.DefaultNewRowValue
- uid: System.Windows.Forms.DataGridViewCell.DetachEditingControl*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DetachEditingControl
  nameWithType: DataGridViewCell.DetachEditingControl
- uid: System.Windows.Forms.DataGridViewCell.Displayed*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Displayed
  nameWithType: DataGridViewCell.Displayed
- uid: System.Windows.Forms.DataGridViewCell.Dispose*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Dispose
  nameWithType: DataGridViewCell.Dispose
- uid: System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: DoubleClickUnsharesRow
  nameWithType: DataGridViewCell.DoubleClickUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.EditedFormattedValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: EditedFormattedValue
  nameWithType: DataGridViewCell.EditedFormattedValue
- uid: System.Windows.Forms.DataGridViewCell.EditType*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: EditType
  nameWithType: DataGridViewCell.EditType
- uid: System.Windows.Forms.DataGridViewCell.EnterUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: EnterUnsharesRow
  nameWithType: DataGridViewCell.EnterUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.ErrorIconBounds*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ErrorIconBounds
  nameWithType: DataGridViewCell.ErrorIconBounds
- uid: System.Windows.Forms.DataGridViewCell.ErrorText*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ErrorText
  nameWithType: DataGridViewCell.ErrorText
- uid: System.Windows.Forms.DataGridViewCell.Finalize*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Finalize
  nameWithType: DataGridViewCell.Finalize
- uid: System.Windows.Forms.DataGridViewCell.FormattedValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: FormattedValue
  nameWithType: DataGridViewCell.FormattedValue
- uid: System.Windows.Forms.DataGridViewCell.FormattedValueType*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: FormattedValueType
  nameWithType: DataGridViewCell.FormattedValueType
- uid: System.Windows.Forms.DataGridViewCell.Frozen*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Frozen
  nameWithType: DataGridViewCell.Frozen
- uid: System.Windows.Forms.DataGridViewCell.GetClipboardContent*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetClipboardContent
  nameWithType: DataGridViewCell.GetClipboardContent
- uid: System.Windows.Forms.DataGridViewCell.GetContentBounds*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetContentBounds
  nameWithType: DataGridViewCell.GetContentBounds
- uid: System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetEditedFormattedValue
  nameWithType: DataGridViewCell.GetEditedFormattedValue
- uid: System.Windows.Forms.DataGridViewCell.GetErrorIconBounds*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetErrorIconBounds
  nameWithType: DataGridViewCell.GetErrorIconBounds
- uid: System.Windows.Forms.DataGridViewCell.GetErrorText*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetErrorText
  nameWithType: DataGridViewCell.GetErrorText
- uid: System.Windows.Forms.DataGridViewCell.GetFormattedValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetFormattedValue
  nameWithType: DataGridViewCell.GetFormattedValue
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetInheritedContextMenuStrip
  nameWithType: DataGridViewCell.GetInheritedContextMenuStrip
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedState*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetInheritedState
  nameWithType: DataGridViewCell.GetInheritedState
- uid: System.Windows.Forms.DataGridViewCell.GetInheritedStyle*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetInheritedStyle
  nameWithType: DataGridViewCell.GetInheritedStyle
- uid: System.Windows.Forms.DataGridViewCell.GetPreferredSize*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetPreferredSize
  nameWithType: DataGridViewCell.GetPreferredSize
- uid: System.Windows.Forms.DataGridViewCell.GetSize*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetSize
  nameWithType: DataGridViewCell.GetSize
- uid: System.Windows.Forms.DataGridViewCell.GetValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: GetValue
  nameWithType: DataGridViewCell.GetValue
- uid: System.Windows.Forms.DataGridViewCell.HasStyle*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: HasStyle
  nameWithType: DataGridViewCell.HasStyle
- uid: System.Windows.Forms.DataGridViewCell.InheritedState*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: InheritedState
  nameWithType: DataGridViewCell.InheritedState
- uid: System.Windows.Forms.DataGridViewCell.InheritedStyle*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: InheritedStyle
  nameWithType: DataGridViewCell.InheritedStyle
- uid: System.Windows.Forms.DataGridViewCell.InitializeEditingControl*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: InitializeEditingControl
  nameWithType: DataGridViewCell.InitializeEditingControl
- uid: System.Windows.Forms.DataGridViewCell.IsInEditMode*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: IsInEditMode
  nameWithType: DataGridViewCell.IsInEditMode
- uid: System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyDownUnsharesRow
  nameWithType: DataGridViewCell.KeyDownUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.KeyEntersEditMode*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyEntersEditMode
  nameWithType: DataGridViewCell.KeyEntersEditMode
- uid: System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyPressUnsharesRow
  nameWithType: DataGridViewCell.KeyPressUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: KeyUpUnsharesRow
  nameWithType: DataGridViewCell.KeyUpUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: LeaveUnsharesRow
  nameWithType: DataGridViewCell.LeaveUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextHeight*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextHeight
  nameWithType: DataGridViewCell.MeasureTextHeight
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextPreferredSize
  nameWithType: DataGridViewCell.MeasureTextPreferredSize
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextSize*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextSize
  nameWithType: DataGridViewCell.MeasureTextSize
- uid: System.Windows.Forms.DataGridViewCell.MeasureTextWidth*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MeasureTextWidth
  nameWithType: DataGridViewCell.MeasureTextWidth
- uid: System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseClickUnsharesRow
  nameWithType: DataGridViewCell.MouseClickUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseDoubleClickUnsharesRow
  nameWithType: DataGridViewCell.MouseDoubleClickUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseDownUnsharesRow
  nameWithType: DataGridViewCell.MouseDownUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseEnterUnsharesRow
  nameWithType: DataGridViewCell.MouseEnterUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseLeaveUnsharesRow
  nameWithType: DataGridViewCell.MouseLeaveUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseMoveUnsharesRow
  nameWithType: DataGridViewCell.MouseMoveUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: MouseUpUnsharesRow
  nameWithType: DataGridViewCell.MouseUpUnsharesRow
- uid: System.Windows.Forms.DataGridViewCell.OnClick*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnClick
  nameWithType: DataGridViewCell.OnClick
- uid: System.Windows.Forms.DataGridViewCell.OnContentClick*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnContentClick
  nameWithType: DataGridViewCell.OnContentClick
- uid: System.Windows.Forms.DataGridViewCell.OnContentDoubleClick*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnContentDoubleClick
  nameWithType: DataGridViewCell.OnContentDoubleClick
- uid: System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnDataGridViewChanged
  nameWithType: DataGridViewCell.OnDataGridViewChanged
- uid: System.Windows.Forms.DataGridViewCell.OnDoubleClick*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnDoubleClick
  nameWithType: DataGridViewCell.OnDoubleClick
- uid: System.Windows.Forms.DataGridViewCell.OnEnter*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnEnter
  nameWithType: DataGridViewCell.OnEnter
- uid: System.Windows.Forms.DataGridViewCell.OnKeyDown*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnKeyDown
  nameWithType: DataGridViewCell.OnKeyDown
- uid: System.Windows.Forms.DataGridViewCell.OnKeyPress*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnKeyPress
  nameWithType: DataGridViewCell.OnKeyPress
- uid: System.Windows.Forms.DataGridViewCell.OnKeyUp*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnKeyUp
  nameWithType: DataGridViewCell.OnKeyUp
- uid: System.Windows.Forms.DataGridViewCell.OnLeave*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnLeave
  nameWithType: DataGridViewCell.OnLeave
- uid: System.Windows.Forms.DataGridViewCell.OnMouseClick*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseClick
  nameWithType: DataGridViewCell.OnMouseClick
- uid: System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseDoubleClick
  nameWithType: DataGridViewCell.OnMouseDoubleClick
- uid: System.Windows.Forms.DataGridViewCell.OnMouseDown*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseDown
  nameWithType: DataGridViewCell.OnMouseDown
- uid: System.Windows.Forms.DataGridViewCell.OnMouseEnter*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseEnter
  nameWithType: DataGridViewCell.OnMouseEnter
- uid: System.Windows.Forms.DataGridViewCell.OnMouseLeave*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseLeave
  nameWithType: DataGridViewCell.OnMouseLeave
- uid: System.Windows.Forms.DataGridViewCell.OnMouseMove*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseMove
  nameWithType: DataGridViewCell.OnMouseMove
- uid: System.Windows.Forms.DataGridViewCell.OnMouseUp*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OnMouseUp
  nameWithType: DataGridViewCell.OnMouseUp
- uid: System.Windows.Forms.DataGridViewCell.OwningColumn*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OwningColumn
  nameWithType: DataGridViewCell.OwningColumn
- uid: System.Windows.Forms.DataGridViewCell.OwningRow*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: OwningRow
  nameWithType: DataGridViewCell.OwningRow
- uid: System.Windows.Forms.DataGridViewCell.Paint*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Paint
  nameWithType: DataGridViewCell.Paint
- uid: System.Windows.Forms.DataGridViewCell.PaintBorder*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PaintBorder
  nameWithType: DataGridViewCell.PaintBorder
- uid: System.Windows.Forms.DataGridViewCell.PaintErrorIcon*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PaintErrorIcon
  nameWithType: DataGridViewCell.PaintErrorIcon
- uid: System.Windows.Forms.DataGridViewCell.ParseFormattedValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ParseFormattedValue
  nameWithType: DataGridViewCell.ParseFormattedValue
- uid: System.Windows.Forms.DataGridViewCell.PositionEditingControl*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PositionEditingControl
  nameWithType: DataGridViewCell.PositionEditingControl
- uid: System.Windows.Forms.DataGridViewCell.PositionEditingPanel*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PositionEditingPanel
  nameWithType: DataGridViewCell.PositionEditingPanel
- uid: System.Windows.Forms.DataGridViewCell.PreferredSize*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: PreferredSize
  nameWithType: DataGridViewCell.PreferredSize
- uid: System.Windows.Forms.DataGridViewCell.ReadOnly*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ReadOnly
  nameWithType: DataGridViewCell.ReadOnly
- uid: System.Windows.Forms.DataGridViewCell.Resizable*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Resizable
  nameWithType: DataGridViewCell.Resizable
- uid: System.Windows.Forms.DataGridViewCell.RowIndex*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCell.RowIndex
- uid: System.Windows.Forms.DataGridViewCell.Selected*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Selected
  nameWithType: DataGridViewCell.Selected
- uid: System.Windows.Forms.DataGridViewCell.SetValue*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: SetValue
  nameWithType: DataGridViewCell.SetValue
- uid: System.Windows.Forms.DataGridViewCell.Size*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Size
  nameWithType: DataGridViewCell.Size
- uid: System.Windows.Forms.DataGridViewCell.Style*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Style
  nameWithType: DataGridViewCell.Style
- uid: System.Windows.Forms.DataGridViewCell.Tag*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Tag
  nameWithType: DataGridViewCell.Tag
- uid: System.Windows.Forms.DataGridViewCell.ToolTipText*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ToolTipText
  nameWithType: DataGridViewCell.ToolTipText
- uid: System.Windows.Forms.DataGridViewCell.ToString*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ToString
  nameWithType: DataGridViewCell.ToString
- uid: System.Windows.Forms.DataGridViewCell.Value*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Value
  nameWithType: DataGridViewCell.Value
- uid: System.Windows.Forms.DataGridViewCell.ValueType*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: ValueType
  nameWithType: DataGridViewCell.ValueType
- uid: System.Windows.Forms.DataGridViewCell.Visible*
  parent: System.Windows.Forms.DataGridViewCell
  isExternal: false
  name: Visible
  nameWithType: DataGridViewCell.Visible
