### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.UrlParameterReader
  id: UrlParameterReader
  children:
  - System.Web.Services.Protocols.UrlParameterReader.#ctor
  - System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)
  langs:
  - csharp
  name: UrlParameterReader
  nameWithType: UrlParameterReader
  fullName: System.Web.Services.Protocols.UrlParameterReader
  type: Class
  summary: "Reads incoming request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL&quot;s query string rather than as a SOAP message."
  remarks: "UrlParameterReader and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework&quot;s implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don&quot;t exchange messages using the SOAP standard.       The UrlParameterReader class provides a service-side method, <xref:System.Web.Services.Protocols.UrlParameterReader.Read%2A>, to read parameter name/value pairs that are encoded into an HTTP request URL&quot;s query string. For example, in the URL `http://contoso.com?a=1&b=2`, `a` and `b` are parameter names, and `1` and `2` are their values.       You typically will not need to use UrlParameterReader directly. HTTP-GET Web services are enabled when an ASP.NET configuration file&quot;s (Web.config) `protocols` element contains an `add` element whose name attribute&quot;s value is &quot;`HttpGet`&quot;. The UrlParameterReader class is automatically used when an HTTP-GET Web service is enabled and an applicable HTTP request is received."
  syntax:
    content: 'public class UrlParameterReader : System.Web.Services.Protocols.ValueCollectionParameterReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeParameterReader
  - System.Web.Services.Protocols.ValueCollectionParameterReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.UrlParameterReader
  langs:
  - csharp
  name: UrlParameterReader()
  nameWithType: UrlParameterReader.UrlParameterReader()
  fullName: System.Web.Services.Protocols.UrlParameterReader.UrlParameterReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Services.Protocols.UrlParameterReader&quot;></xref> class."
  syntax:
    content: public UrlParameterReader ();
    parameters: []
  overload: System.Web.Services.Protocols.UrlParameterReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)
  id: Read(System.Web.HttpRequest)
  parent: System.Web.Services.Protocols.UrlParameterReader
  langs:
  - csharp
  name: Read(HttpRequest)
  nameWithType: UrlParameterReader.Read(HttpRequest)
  fullName: System.Web.Services.Protocols.UrlParameterReader.Read(HttpRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Reads name/value pairs encoded in the query string of an HTTP request into Web method parameter values."
  remarks: "The Read method uses the content of the <xref:System.Web.HttpRequest> object&quot;s <xref:System.Web.HttpRequest.QueryString%2A> property."
  syntax:
    content: public override object[] Read (System.Web.HttpRequest request);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "A <xref:System.Net.WebResponse> objectcontaining HTML URL-encoded name/value pairs."
    return:
      type: System.Object[]
      description: "An array of name/value pairs."
  overload: System.Web.Services.Protocols.UrlParameterReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.ValueCollectionParameterReader
  isExternal: false
  name: System.Web.Services.Protocols.ValueCollectionParameterReader
- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: UrlParameterReader()
  nameWithType: UrlParameterReader.UrlParameterReader()
  fullName: System.Web.Services.Protocols.UrlParameterReader.UrlParameterReader()
- uid: System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: Read(HttpRequest)
  nameWithType: UrlParameterReader.Read(HttpRequest)
  fullName: System.Web.Services.Protocols.UrlParameterReader.Read(HttpRequest)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor*
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: UrlParameterReader
  nameWithType: UrlParameterReader.UrlParameterReader
- uid: System.Web.Services.Protocols.UrlParameterReader.Read*
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: Read
  nameWithType: UrlParameterReader.Read
