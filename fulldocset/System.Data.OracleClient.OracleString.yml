### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleString
  id: OracleString
  children:
  - System.Data.OracleClient.OracleString.#ctor(System.String)
  - System.Data.OracleClient.OracleString.CompareTo(System.Object)
  - System.Data.OracleClient.OracleString.Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.Empty
  - System.Data.OracleClient.OracleString.Equals(System.Object)
  - System.Data.OracleClient.OracleString.Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.GetHashCode
  - System.Data.OracleClient.OracleString.GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.IsNull
  - System.Data.OracleClient.OracleString.Item(System.Int32)
  - System.Data.OracleClient.OracleString.Length
  - System.Data.OracleClient.OracleString.LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.Null
  - System.Data.OracleClient.OracleString.op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.op_Explicit(System.Data.OracleClient.OracleString to System.String)
  - System.Data.OracleClient.OracleString.op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.op_Implicit(System.String)
  - System.Data.OracleClient.OracleString.op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  - System.Data.OracleClient.OracleString.ToString
  - System.Data.OracleClient.OracleString.Value
  langs:
  - csharp
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
  type: Struct
  summary: "Represents a variable-length stream of characters to be stored in or retrieved from the database."
  remarks: "To obtain an OracleString object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleString%2A> method."
  example:
  - "```  \nusing System;  \nusing System.Data.OracleClient;  \npublic class Class1 {  \n   public static void Main() {  \n      OracleString oraclestring1 = new OracleString(\"MyOracleString1\");  \n      OracleString oraclestring2 = new OracleString(\"MyOracleString2\");  \n      OracleString oraclestring3 = new OracleString(\"MyOracleString1\");  \n  \n      // Type: System.Data.OracleClient.OracleString  \n      Console.WriteLine(\"Type: \" + oraclestring1.GetType());  \n  \n      // Length: 15  \n      Console.WriteLine(\"Length: \" + oraclestring1.Length);  \n  \n      // False  \n      Console.WriteLine(oraclestring1.IsNull);  \n  \n      // -1  \n      Console.WriteLine(oraclestring1.CompareTo(oraclestring2));  \n  \n      // 0  \n      Console.WriteLine(oraclestring1.CompareTo(oraclestring3));  \n  \n      // 1  \n      Console.WriteLine(oraclestring2.CompareTo(oraclestring3));  \n  \n      // False  \n      Console.WriteLine(oraclestring1.Equals(oraclestring2));  \n  \n      // True  \n      Console.WriteLine(oraclestring1.Equals(oraclestring3));  \n  \n      // MyOracleString1  \n      Console.WriteLine(oraclestring1.Value);  \n  \n      // MyOracleString2  \n      Console.WriteLine(oraclestring2.ToString());  \n   }  \n}  \n  \n```"
  syntax:
    content: 'public struct OracleString : IComparable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: OracleString(String)
  nameWithType: OracleString.OracleString(String)
  fullName: System.Data.OracleClient.OracleString.OracleString(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> class and specifies the string to store."
  syntax:
    content: public OracleString (string s);
    parameters:
    - id: s
      type: System.String
      description: "The string to store."
  overload: System.Data.OracleClient.OracleString.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: OracleString.CompareTo(Object)
  fullName: System.Data.OracleClient.OracleString.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Compares this instance of <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> to the supplied object and returns an indication of their relative values."
  syntax:
    content: public int CompareTo (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to be compared."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.CompareTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: Concat(OracleString,OracleString)
  nameWithType: OracleString.Concat(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.Concat(OracleString,OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Concatenates the two specified <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> structures."
  syntax:
    content: public static System.Data.OracleClient.OracleString Concat (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleString
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.Concat*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Empty
  id: Empty
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: Empty
  nameWithType: OracleString.Empty
  fullName: System.Data.OracleClient.OracleString.Empty
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Represents an empty string that can be assigned to the &lt;xref:System.Data.OracleClient.OracleString.Value%2A&gt; property of an instance of the <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> structure."
  syntax:
    content: public static readonly System.Data.OracleClient.OracleString Empty;
    return:
      type: System.Data.OracleClient.OracleString
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: OracleString.Equals(Object)
  fullName: System.Data.OracleClient.OracleString.Equals(Object)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Compares the supplied object parameter to the &lt;xref:System.Data.OracleClient.OracleString.Value%2A&gt; property of the <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> object."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to be compared."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: Equals(OracleString,OracleString)
  nameWithType: OracleString.Equals(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.Equals(OracleString,OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if they are equal."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.GetHashCode
  id: GetHashCode
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: OracleString.GetHashCode()
  fullName: System.Data.OracleClient.OracleString.GetHashCode()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the hash code for this instance."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: GreaterThan(OracleString,OracleString)
  nameWithType: OracleString.GreaterThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.GreaterThan(OracleString,OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is greater than the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.GreaterThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: GreaterThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.GreaterThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.GreaterThanOrEqual(OracleString,OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is greater than or equal to the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleString.IsNull
  fullName: System.Data.OracleClient.OracleString.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Indicates whether the &lt;xref:System.Data.OracleClient.OracleString.Value%2A&gt; of the <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> is <see cref=&quot;F:System.Data.OracleClient.OracleString.Null&quot;></see>."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if &lt;xref:System.Data.OracleClient.OracleString.Value%2A&gt; is <see cref=&quot;F:System.Data.OracleClient.OracleString.Null&quot;></see>, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleString.IsNull*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OracleString.Item(Int32)
  fullName: System.Data.OracleClient.OracleString.Item(Int32)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the single byte from the <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;></xref> property located at the position indicated by the integer parameter, <span class=&quot;paramref&quot;>index</span>."
  remarks: "If `index` indicates a position beyond the end of the byte array, an exception is raised.       To avoid raising an exception, always check the <xref:System.Data.OracleClient.OracleString.IsNull%2A> property and the `Length` property before reading `this`.       This property is read-only."
  syntax:
    content: public char this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The position of the byte to be retrieved."
    return:
      type: System.Char
      description: "The byte located at the position indicated by the integer parameter."
  overload: System.Data.OracleClient.OracleString.Item*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Length
  id: Length
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: Length
  nameWithType: OracleString.Length
  fullName: System.Data.OracleClient.OracleString.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the length of the string that is stored in this <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> structure."
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "The length of the string that is stored."
  overload: System.Data.OracleClient.OracleString.Length*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: LessThan(OracleString,OracleString)
  nameWithType: OracleString.LessThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.LessThan(OracleString,OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is less than the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.LessThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: LessThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.LessThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.LessThanOrEqual(OracleString,OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is less than or equal to the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.LessThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: NotEquals(OracleString,OracleString)
  nameWithType: OracleString.NotEquals(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.NotEquals(OracleString,OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if they are not equal."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.NotEquals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleString.Null
  fullName: System.Data.OracleClient.OracleString.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Represents a null value that can be assigned to the &lt;xref:System.Data.OracleClient.OracleString.Value%2A&gt; property of an instance of the <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> structure."
  remarks: '`Null` functions as a constant for the `OracleString` structure.'
  syntax:
    content: public static readonly System.Data.OracleClient.OracleString Null;
    return:
      type: System.Data.OracleClient.OracleString
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_Addition(OracleString,OracleString)
  nameWithType: OracleString.op_Addition(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Addition(OracleString,OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Concatenates the two specified <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> structures."
  syntax:
    content: public static System.Data.OracleClient.OracleString op_Addition (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleString
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_Addition*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_Equality(OracleString,OracleString)
  nameWithType: OracleString.op_Equality(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Equality(OracleString,OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if they are equal."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_Equality (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_Equality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_Explicit(System.Data.OracleClient.OracleString to System.String)
  id: op_Explicit(System.Data.OracleClient.OracleString to System.String)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_Explicit(OracleString)
  nameWithType: OracleString.op_Explicit(OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Explicit(OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: public static string op_Explicit (System.Data.OracleClient.OracleString x);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "To be added."
    return:
      type: System.String
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_Explicit*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_GreaterThan(OracleString,OracleString)
  nameWithType: OracleString.op_GreaterThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_GreaterThan(OracleString,OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is greater than the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_GreaterThan (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_GreaterThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_GreaterThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.op_GreaterThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(OracleString,OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is greater than or equal to the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_Implicit(System.String)
  id: op_Implicit(System.String)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_Implicit(String)
  nameWithType: OracleString.op_Implicit(String)
  fullName: System.Data.OracleClient.OracleString.op_Implicit(String)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: public static System.Data.OracleClient.OracleString op_Implicit (string s);
    parameters:
    - id: s
      type: System.String
      description: "To be added."
    return:
      type: System.Data.OracleClient.OracleString
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_Implicit*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_Inequality(OracleString,OracleString)
  nameWithType: OracleString.op_Inequality(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Inequality(OracleString,OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if they are equal."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_Inequality (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_Inequality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_LessThan(OracleString,OracleString)
  nameWithType: OracleString.op_LessThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_LessThan(OracleString,OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is less than the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_LessThan (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_LessThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  id: op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: op_LessThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.op_LessThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_LessThanOrEqual(OracleString,OracleString)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Performs a logical comparison of the two <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> operands to determine if the first is less than or equal to the second."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_LessThanOrEqual (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleString
      description: "An ."
    - id: y
      type: System.Data.OracleClient.OracleString
      description: "An ."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.ToString
  id: ToString
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: ToString()
  nameWithType: OracleString.ToString()
  fullName: System.Data.OracleClient.OracleString.ToString()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Converts an <xref uid=&quot;langword_csharp_OracleString&quot; name=&quot;OracleString&quot; href=&quot;&quot;></xref> object to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Data.OracleClient.OracleString.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.OracleClient.OracleString.Value
  id: Value
  parent: System.Data.OracleClient.OracleString
  langs:
  - csharp
  name: Value
  nameWithType: OracleString.Value
  fullName: System.Data.OracleClient.OracleString.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the string that is stored in the <see cref=&quot;T:System.Data.OracleClient.OracleString&quot;></see> structure."
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "The string that is stored.       This property is read-only."
  overload: System.Data.OracleClient.OracleString.Value*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.OracleClient.OracleString.#ctor(System.String)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: OracleString(String)
  nameWithType: OracleString.OracleString(String)
  fullName: System.Data.OracleClient.OracleString.OracleString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleString.CompareTo(System.Object)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: CompareTo(Object)
  nameWithType: OracleString.CompareTo(Object)
  fullName: System.Data.OracleClient.OracleString.CompareTo(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleString.Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Concat(OracleString,OracleString)
  nameWithType: OracleString.Concat(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.Concat(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleString.Empty
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Empty
  nameWithType: OracleString.Empty
  fullName: System.Data.OracleClient.OracleString.Empty
- uid: System.Data.OracleClient.OracleString.Equals(System.Object)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Equals(Object)
  nameWithType: OracleString.Equals(Object)
  fullName: System.Data.OracleClient.OracleString.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleString.Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Equals(OracleString,OracleString)
  nameWithType: OracleString.Equals(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.Equals(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleBoolean
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBoolean
  nameWithType: OracleBoolean
  fullName: System.Data.OracleClient.OracleBoolean
- uid: System.Data.OracleClient.OracleString.GetHashCode
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: GetHashCode()
  nameWithType: OracleString.GetHashCode()
  fullName: System.Data.OracleClient.OracleString.GetHashCode()
- uid: System.Data.OracleClient.OracleString.GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: GreaterThan(OracleString,OracleString)
  nameWithType: OracleString.GreaterThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.GreaterThan(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: GreaterThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.GreaterThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.GreaterThanOrEqual(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.IsNull
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: IsNull
  nameWithType: OracleString.IsNull
  fullName: System.Data.OracleClient.OracleString.IsNull
- uid: System.Data.OracleClient.OracleString.Item(System.Int32)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Item(Int32)
  nameWithType: OracleString.Item(Int32)
  fullName: System.Data.OracleClient.OracleString.Item(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.OracleClient.OracleString.Length
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Length
  nameWithType: OracleString.Length
  fullName: System.Data.OracleClient.OracleString.Length
- uid: System.Data.OracleClient.OracleString.LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: LessThan(OracleString,OracleString)
  nameWithType: OracleString.LessThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.LessThan(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: LessThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.LessThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.LessThanOrEqual(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: NotEquals(OracleString,OracleString)
  nameWithType: OracleString.NotEquals(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.NotEquals(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.Null
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: "Null"
  nameWithType: OracleString.Null
  fullName: System.Data.OracleClient.OracleString.Null
- uid: System.Data.OracleClient.OracleString.op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Addition(OracleString,OracleString)
  nameWithType: OracleString.op_Addition(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Addition(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Equality(OracleString,OracleString)
  nameWithType: OracleString.op_Equality(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Equality(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.op_Explicit(System.Data.OracleClient.OracleString to System.String)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Explicit(OracleString)
  nameWithType: OracleString.op_Explicit(OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Explicit(OracleString)
- uid: System.Data.OracleClient.OracleString.op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_GreaterThan(OracleString,OracleString)
  nameWithType: OracleString.op_GreaterThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_GreaterThan(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_GreaterThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.op_GreaterThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.op_Implicit(System.String)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Implicit(String)
  nameWithType: OracleString.op_Implicit(String)
  fullName: System.Data.OracleClient.OracleString.op_Implicit(String)
- uid: System.Data.OracleClient.OracleString.op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Inequality(OracleString,OracleString)
  nameWithType: OracleString.op_Inequality(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_Inequality(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_LessThan(OracleString,OracleString)
  nameWithType: OracleString.op_LessThan(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_LessThan(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_LessThanOrEqual(OracleString,OracleString)
  nameWithType: OracleString.op_LessThanOrEqual(OracleString,OracleString)
  fullName: System.Data.OracleClient.OracleString.op_LessThanOrEqual(OracleString,OracleString)
- uid: System.Data.OracleClient.OracleString.ToString
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: ToString()
  nameWithType: OracleString.ToString()
  fullName: System.Data.OracleClient.OracleString.ToString()
- uid: System.Data.OracleClient.OracleString.Value
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Value
  nameWithType: OracleString.Value
  fullName: System.Data.OracleClient.OracleString.Value
- uid: System.Data.OracleClient.OracleString.#ctor*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: OracleString
  nameWithType: OracleString.OracleString
- uid: System.Data.OracleClient.OracleString.CompareTo*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: CompareTo
  nameWithType: OracleString.CompareTo
- uid: System.Data.OracleClient.OracleString.Concat*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Concat
  nameWithType: OracleString.Concat
- uid: System.Data.OracleClient.OracleString.Equals*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Equals
  nameWithType: OracleString.Equals
- uid: System.Data.OracleClient.OracleString.GetHashCode*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: GetHashCode
  nameWithType: OracleString.GetHashCode
- uid: System.Data.OracleClient.OracleString.GreaterThan*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: GreaterThan
  nameWithType: OracleString.GreaterThan
- uid: System.Data.OracleClient.OracleString.GreaterThanOrEqual*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: OracleString.GreaterThanOrEqual
- uid: System.Data.OracleClient.OracleString.IsNull*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: IsNull
  nameWithType: OracleString.IsNull
- uid: System.Data.OracleClient.OracleString.Item*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Item
  nameWithType: OracleString.Item
- uid: System.Data.OracleClient.OracleString.Length*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Length
  nameWithType: OracleString.Length
- uid: System.Data.OracleClient.OracleString.LessThan*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: LessThan
  nameWithType: OracleString.LessThan
- uid: System.Data.OracleClient.OracleString.LessThanOrEqual*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: LessThanOrEqual
  nameWithType: OracleString.LessThanOrEqual
- uid: System.Data.OracleClient.OracleString.NotEquals*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: NotEquals
  nameWithType: OracleString.NotEquals
- uid: System.Data.OracleClient.OracleString.op_Addition*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Addition
  nameWithType: OracleString.op_Addition
- uid: System.Data.OracleClient.OracleString.op_Equality*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Equality
  nameWithType: OracleString.op_Equality
- uid: System.Data.OracleClient.OracleString.op_Explicit*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Explicit
  nameWithType: OracleString.op_Explicit
- uid: System.Data.OracleClient.OracleString.op_GreaterThan*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_GreaterThan
  nameWithType: OracleString.op_GreaterThan
- uid: System.Data.OracleClient.OracleString.op_GreaterThanOrEqual*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: OracleString.op_GreaterThanOrEqual
- uid: System.Data.OracleClient.OracleString.op_Implicit*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Implicit
  nameWithType: OracleString.op_Implicit
- uid: System.Data.OracleClient.OracleString.op_Inequality*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_Inequality
  nameWithType: OracleString.op_Inequality
- uid: System.Data.OracleClient.OracleString.op_LessThan*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_LessThan
  nameWithType: OracleString.op_LessThan
- uid: System.Data.OracleClient.OracleString.op_LessThanOrEqual*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: OracleString.op_LessThanOrEqual
- uid: System.Data.OracleClient.OracleString.ToString*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: ToString
  nameWithType: OracleString.ToString
- uid: System.Data.OracleClient.OracleString.Value*
  parent: System.Data.OracleClient.OracleString
  isExternal: false
  name: Value
  nameWithType: OracleString.Value
