### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.AssemblyBuilder
  id: AssemblyBuilder
  children:
  - System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  - System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  - System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  - System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  - System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  - System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  - System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  langs:
  - csharp
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
  type: Class
  summary: "Fornece um contentor para a criação de uma assemblagem a partir de um ou mais caminhos virtuais dentro de um projeto ASP.NET."
  remarks: "São utilizadas instâncias da classe AssemblyBuilder com <xref:System.Web.Compilation.BuildProvider>classe métodos para criar um ou mais ficheiros numa assemblagem compilada.</xref:System.Web.Compilation.BuildProvider>       O <xref:System.Web.Compilation.BuildProvider>classe define a funcionalidade de compilação para ficheiros individuais e a classe de AssemblyBuilder combina o código de origem contribuído por cada <xref:System.Web.Compilation.BuildProvider>instância numa única assemblagem.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider> O ASP.NET criar ambiente transmite um objeto de AssemblyBuilder para o <xref:System.Web.Compilation.BuildProvider>métodos durante a criação de uma assemblagem a partir de um ou mais ficheiros, por isso que cada <xref:System.Web.Compilation.BuildProvider>instância pode contribuir código de origem para o ficheiro de assemblagem global.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       O ambiente de compilação do ASP.NET determina o idioma e o compilador de ficheiros no projeto, com base no <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>propriedade.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> Os ficheiros de grupos do ambiente de compilação com base nas respetivas definições de compilador e baseia-se de uma assemblagem de ficheiros que necessitam do compilador do mesmo.       O <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>propriedade indica o <xref:System.CodeDom.Compiler.CodeDomProvider>implementação que utiliza o ambiente de compilação do ASP.NET para compilar uma assemblagem de código fonte contribuídos por cada <xref:System.Web.Compilation.BuildProvider>implementação.</xref:System.Web.Compilation.BuildProvider> </xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>       A <xref:System.Web.Compilation.BuildProvider>objeto contribui código fonte sob a forma de um gráfico de CodeDOM utilizando o <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> </xref:System.Web.Compilation.BuildProvider> A <xref:System.Web.Compilation.BuildProvider>objeto contribui código de origem armazenado num ficheiro físico com o <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.Web.Compilation.BuildProvider>       Após cada <xref:System.Web.Compilation.BuildProvider>objeto contribui código de origem utilizando os métodos de AssemblyBuilder adequados, o ambiente de compilação do ASP.NET utiliza a classe de AssemblyBuilder para compilar o código fonte recolhidos para uma assemblagem.</xref:System.Web.Compilation.BuildProvider>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/t-system.web.compilation_10_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/t-system.web.compilation_10_1.vb)]"
  syntax:
    content: public class AssemblyBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  id: AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Adiciona uma assemblagem que é referenciada por código de origem gerado para um ficheiro."
  remarks: "A <xref:System.Web.Compilation.BuildProvider>implementação utiliza o método AddAssemblyReference ao gerar código de origem que faça referência a tipos na assemblagem de entrada.</xref:System.Web.Compilation.BuildProvider>       O ASP.NET criar ambiente inicializa a coleção predefinida de assemblagens disponíveis para referência através do fornecedor de compilação no <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName>propriedade.</xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName> Se o fornecedor de compilação gera o código de origem que faz referência a assemblagens adicionais, o fornecedor de compilação adiciona as assemblagens adicionais utilizando o método AddAssemblyReference. O ambiente de compilação do ASP.NET resolve tipos externos durante a compilação da assemblagem utilizando ambas as assemblagens referenciadas adicionadas por criem fornecedores e a coleção predefinida de assemblagens disponíveis para referência.       Normalmente, um <xref:System.Web.Compilation.BuildProvider>objeto adiciona o código de origem para o <xref:System.Web.Compilation.AssemblyBuilder>objeto o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>método.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> </xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider> Se um fornecedor de compilação gera o código de origem que utiliza um tipo externo, o fornecedor de compilação adiciona assemblagem do tipo utilizando o método AddAssemblyReference.       Utilize o método AddAssemblyReference para adicionar uma assemblagem referenciada necessária no código de origem gerado por um <xref:System.Web.Compilation.BuildProvider>instância de um tipo de ficheiro específico.</xref:System.Web.Compilation.BuildProvider> Utilize o [assemblagens elemento para a compilação (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9) elemento de configuração para configurar uma assemblagem de referência entre vários tipos de ficheiros num projeto."
  syntax:
    content: public void AddAssemblyReference (System.Reflection.Assembly a);
    parameters:
    - id: a
      type: System.Reflection.Assembly
      description: "Uma assemblagem referenciada por uma compilação unidade ou a origem de ficheiro de código incluído na compilação da assemblagem."
  overload: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  id: AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Adiciona o código de origem para a assemblagem sob a forma de um gráfico de CodeDOM."
  remarks: "Uma <xref:System.Web.Compilation.BuildProvider>implementação chama o método de AddCodeCompileUnit ao gerar um gráfico de CodeDOM para um caminho virtual.</xref:System.Web.Compilation.BuildProvider> Código de origem adicionado com AddCodeCompileUnit está incluído na compilação da assemblagem.       Do normalmente, um fornecedor de compilações <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>Leituras de implementação de método de <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade, analisa o conteúdo e, em seguida, adiciona o código de origem gerados ao especificado <xref:System.Web.Compilation.AssemblyBuilder>objeto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> O fornecedor de compilação utiliza o método AddCodeCompileUnit para adicionar o código de origem como um gráfico de CodeDOM à assemblagem. Em alternativa, pode utilizar o fornecedor de compilação do <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>método para adicionar o código de origem como um ficheiro físico à assemblagem.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>"
  syntax:
    content: public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "O fornecedor de compilação gerar `compileUnit`."
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "A unidade de compilação do código para incluir na compilação da assemblagem."
  overload: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  id: CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém o compilador utilizado para criar o código de origem para uma assemblagem."
  remarks: "A propriedade de CodeDomProvider indica o <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>implementação que utiliza o ambiente de compilação do ASP.NET para compilar uma assemblagem de código fonte contribuídos por cada <xref:System.Web.Compilation.BuildProvider>implementação.</xref:System.Web.Compilation.BuildProvider> </xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>       O ambiente de compilação do ASP.NET determina o idioma e o compilador de ficheiros no projeto, com base no <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>propriedade.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> Os ficheiros de grupos do ambiente de compilação com base nas respetivas definições de compilador e baseia-se de uma assemblagem de ficheiros que necessitam do compilador do mesmo."
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "Um só de leitura <xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;> </xref> utilizada para compilar o código de origem de implementação contribuídos por cada fornecedor de compilação para uma assemblagem."
  overload: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  id: CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Permite que um fornecedor de compilação criar um ficheiro temporário de origem e incluir o ficheiro de origem na compilação da assemblagem."
  remarks: "Uma <xref:System.Web.Compilation.BuildProvider>implementação chama o método de CreateCodeFile ao gerar um ficheiro de origem para um caminho virtual.</xref:System.Web.Compilation.BuildProvider> Código de origem adicionado com CreateCodeFile está incluído na compilação da assemblagem.       Normalmente, um fornecedor de compilação <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>Leituras de implementação de método de <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade, analisa o conteúdo e, em seguida, adiciona o código de origem gerados ao especificado <xref:System.Web.Compilation.AssemblyBuilder>objeto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> O fornecedor de compilação utiliza o método CreateCodeFile para adicionar o código de origem como um ficheiro físico à assemblagem. Em alternativa, pode utilizar o fornecedor de compilação do <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>método para adicionar o código de origem como um gráfico de CodeDOM à assemblagem.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       Depois de chamar CreateCodeFile, o fornecedor de compilação escreve a origem de conteúdos do ficheiro utilizando o devolvido <xref:System.IO.TextWriter>objeto.</xref:System.IO.TextWriter> Depois de escrever o ficheiro de origem, o <xref:System.Web.Compilation.BuildProvider>objeto tem de utilizar o <xref:System.IO.TextWriter.Close%2A>método para fechar o <xref:System.IO.TextWriter>de objeto e libertar recursos do sistema associado.</xref:System.IO.TextWriter> </xref:System.IO.TextWriter.Close%2A> </xref:System.Web.Compilation.BuildProvider>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the CreateCodeFile method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/3ed51741-a65c-4f55-993c-_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/3ed51741-a65c-4f55-993c-_1.vb)]"
  syntax:
    content: public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "O fornecedor de compilação gerar o ficheiro de origem do código."
    return:
      type: System.IO.TextWriter
      description: "Uma abertura <xref:System.IO.TextWriter>que podem ser utilizadas para escrever o código de origem para um ficheiro temporário.</xref:System.IO.TextWriter>"
  overload: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  id: CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Permite que um fornecedor de compilação criar um ficheiro de recursos para incluir na compilação da assemblagem."
  remarks: "Depois de chamar o método CreateEmbeddedResource, um <xref:System.Web.Compilation.BuildProvider>objeto escreve o recurso de conteúdos do ficheiro utilizando o devolvido <xref:System.IO.Stream>objeto.</xref:System.IO.Stream> </xref:System.Web.Compilation.BuildProvider> Por exemplo, o fornecedor de compilação pode escrever os recursos através de um <xref:System.Resources.ResourceWriter>objeto.</xref:System.Resources.ResourceWriter> Depois de escrever o ficheiro de recursos, tem de utilizar o fornecedor de compilação do <xref:System.IO.Stream.Close%2A>método para fechar o <xref:System.IO.Stream>de objeto e libertar recursos do sistema associado.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "O fornecedor de compilação gerar o recurso."
    - id: name
      type: System.String
      description: "O nome do ficheiro de recursos a ser criado."
    return:
      type: System.IO.Stream
      description: "Uma abertura <xref:System.IO.Stream>que podem ser utilizadas para escrever os recursos, que estão incluídos na compilação da assemblagem.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>Não é um nome de ficheiro válido."
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  id: GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Insere um modelo de fábrica do objeto rápida para um tipo na assemblagem compilada."
  remarks: "A <xref:System.Web.Compilation.BuildProvider>implementação chama o método de GenerateTypeFactory para otimizar o desempenho para frequentes criações de instâncias de tipo.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public void GenerateTypeFactory (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo a gerar."
  overload: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  id: GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Gera um caminho de ficheiro temporário."
  remarks: "A <xref:System.Web.Compilation.BuildProvider>implementação chama o método de GetTempFilePhysicalPath para obter um caminho de ficheiro temporário é eliminado automaticamente após a assemblagem é compilada.</xref:System.Web.Compilation.BuildProvider>       O método GetTempFilePhysicalPath gera um caminho de ficheiro temporário, mas não cria o ficheiro."
  syntax:
    content: public string GetTempFilePhysicalPath (string extension);
    parameters:
    - id: extension
      type: System.String
      description: "A extensão de ficheiro a utilizar para o ficheiro temporário."
    return:
      type: System.String
      description: "Um caminho para um ficheiro temporário, com a extensão de ficheiro especificado."
  overload: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
- uid: System.Web.Compilation.BuildProvider
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference
  nameWithType: AssemblyBuilder.AddAssemblyReference
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit
  nameWithType: AssemblyBuilder.AddCodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile
  nameWithType: AssemblyBuilder.CreateCodeFile
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource
  nameWithType: AssemblyBuilder.CreateEmbeddedResource
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory
  nameWithType: AssemblyBuilder.GenerateTypeFactory
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath
