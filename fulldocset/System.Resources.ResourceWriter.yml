### YamlMime:ManagedReference
items:
- uid: System.Resources.ResourceWriter
  id: ResourceWriter
  children:
  - System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  - System.Resources.ResourceWriter.#ctor(System.String)
  - System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  - System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  - System.Resources.ResourceWriter.AddResource(System.String,System.String)
  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  - System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  - System.Resources.ResourceWriter.Close
  - System.Resources.ResourceWriter.Dispose
  - System.Resources.ResourceWriter.Generate
  - System.Resources.ResourceWriter.TypeNameConverter
  langs:
  - csharp
  name: ResourceWriter
  nameWithType: ResourceWriter
  fullName: System.Resources.ResourceWriter
  type: Class
  summary: "Escreve recursos no formato de sistema predefinido para um ficheiro de saída ou de um fluxo de saída. Esta classe não pode ser herdada."
  remarks: "ResourceWriter fornece uma implementação predefinida do <xref:System.Resources.IResourceWriter>interface.</xref:System.Resources.IResourceWriter> Permite-lhe para programaticamente criar um ficheiro de recurso binário (. resources).       Recursos são especificados como pares nome / valor utilizando o <xref:System.Resources.ResourceWriter.AddResource%2A>método.</xref:System.Resources.ResourceWriter.AddResource%2A> Os nomes de recursos são sensíveis a maiúsculas quando utilizado para pesquisas com, mas a forma mais fácil das ferramentas de criação de suporte e ajudar a eliminar erros, ResourceWriter não permitirá a um ficheiro. resources para ficarem com nomes que variam apenas por maiúsculas e minúsculas. A classe de ResourceWriter permite-lhe criar uma cadeia, objecto e recursos binários. Recursos binários podem ser escritos para o ficheiro de recursos como uma matriz de bytes ou uma transmissão em fluxo.      > [!IMPORTANT] > Este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando tiver terminado com o tipo, deve eliminar-direta ou indiretamente. Para eliminar diretamente do tipo, chame o <xref:System.IDisposable.Dispose%2A>método um `try` / `catch` bloco.</xref:System.IDisposable.Dispose%2A> Para eliminar indiretamente dele, utilize uma construção de idioma, tais como `using` (em c#) ou `Using` (em Visual Basic). Para obter mais informações, consulte a secção &quot;Utilizar um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico de interface.</xref:System.IDisposable>       Para criar um ficheiro de recursos, crie um ResourceWriter com um nome de ficheiro único, chamada <xref:System.Resources.ResourceWriter.AddResource%2A>, pelo menos, uma vez, chamar <xref:System.Resources.ResourceWriter.Generate%2A>para escrever o ficheiro de recursos no disco e, em seguida, chame <xref:System.Resources.ResourceWriter.Close%2A>para fechar o ficheiro.</xref:System.Resources.ResourceWriter.Close%2A> </xref:System.Resources.ResourceWriter.Generate%2A> </xref:System.Resources.ResourceWriter.AddResource%2A> Chamar <xref:System.Resources.ResourceWriter.Close%2A>implicitamente ligará <xref:System.Resources.ResourceWriter.Generate%2A>se chamar não explicitamente o <xref:System.Resources.ResourceWriter.Generate%2A>.</xref:System.Resources.ResourceWriter.Generate%2A> </xref:System.Resources.ResourceWriter.Generate%2A> </xref:System.Resources.ResourceWriter.Close%2A>       Os recursos serão não necessariamente escritos pela mesma ordem que terem sido adicionados.       Para obter recursos a partir de um ficheiro. resources binário criado pela classe ResourceWriter, pode utilizar o <xref:System.Resources.ResourceManager>classe, que lhe permite obter recursos com nome, ou o <xref:System.Resources.ResourceReader>classe, que lhe permite enumerar todos os recursos no ficheiro.</xref:System.Resources.ResourceReader> </xref:System.Resources.ResourceManager>"
  example:
  - "The following example writes several strings into the myResources.resources file.  \n  \n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/t-system.resources.resou_1_1.cpp)]\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/t-system.resources.resou_1_1.vb)]\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/t-system.resources.resou_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ResourceWriter : System.Resources.IResourceWriter
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceWriter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: ResourceWriter(Stream)
  nameWithType: ResourceWriter.ResourceWriter(Stream)
  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> classe que escreve os recursos no fluxo fornecido."
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that writes to a specified stream. The code adds resources to the writer and writes the resources to the stream.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_11_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_11_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_11_1.vb)]"
  syntax:
    content: public ResourceWriter (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de saída."
  overload: System.Resources.ResourceWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> stream </code> parâmetro não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: ResourceWriter(String)
  nameWithType: ResourceWriter.ResourceWriter(String)
  fullName: System.Resources.ResourceWriter.ResourceWriter(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> classe que escreve os recursos para o ficheiro especificado."
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that will write to a specified file. The code adds resources to the writer and writes the resources to the file.  \n  \n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/m-system.resources.resou_14_1.cpp)]\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_14_1.vb)]\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/m-system.resources.resou_14_1.cs)]"
  syntax:
    content: public ResourceWriter (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de ficheiro de saída."
  overload: System.Resources.ResourceWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  id: AddResource(System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Byte[])
  nameWithType: ResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona um recurso com o nome especificado como uma matriz de bytes para a lista de recursos para serem escritos."
  remarks: "O recurso não é escrito até <xref:System.Resources.ResourceWriter.Generate%2A>é chamado.</xref:System.Resources.ResourceWriter.Generate%2A>       Pode obter os recursos escritos pelo método AddResource ao chamar o <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>método.</xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add a graphics image that has been read as an array of bytes to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/csharp/m-system.resources.resou_9_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/visualbasic/m-system.resources.resou_9_1.vb)]"
  syntax:
    content: public void AddResource (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do recurso."
    - id: value
      type: System.Byte[]
      description: "Valor do recurso como uma matriz de número inteiro sem sinal de 8 bits."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>(ou um nome que varia apenas por maiúsculas/minúsculas) já foi adicionado a este <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isto <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> foi fechada e respetiva tabela de hash não está disponível."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  id: AddResource(System.String,System.IO.Stream)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Stream)
  nameWithType: ResourceWriter.AddResource(String,Stream)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona um recurso com o nome especificado como uma sequência à lista de recursos para serem escritos."
  remarks: "Pode especificar qualquer sequência que suporte o <xref:System.IO.Stream.Length%2A?displayProperty=fullName>propriedade `value`.</xref:System.IO.Stream.Length%2A?displayProperty=fullName>       Pode obter os recursos escritos pelo método AddResource ao chamar o <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>método.</xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-vb[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/visualbasic/m-system.resources.resou_10_1.vb)]\n [!code-cs[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/csharp/m-system.resources.resou_10_1.cs)]"
  syntax:
    content: public void AddResource (string name, System.IO.Stream value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do recurso para adicionar."
    - id: value
      type: System.IO.Stream
      description: "O valor do recurso para adicionar. O recurso tem de suportar o &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; propriedade."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>(ou um nome que varia apenas por maiúsculas/minúsculas) já foi adicionado a este <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>.       - ou - o fluxo não suporta o &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; propriedade."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isto <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> foi fechada."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  id: AddResource(System.String,System.Object)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Object)
  nameWithType: ResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResourceWriter.AddResource(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona um recurso com o nome especificado como um objeto à lista de recursos para serem escritos."
  remarks: "`value`tem de ser serializável.       O recurso não é escrito até o <xref:System.Resources.ResourceWriter.Generate%2A>método é chamado.</xref:System.Resources.ResourceWriter.Generate%2A>       Pode obter os recursos escritos pelo método AddResource ao chamar o <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName>método.</xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add object data to a binary resources file.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#1](~/add/codesnippet/csharp/m-system.resources.resou_13_1.cs)]  \n  \n `DonorColumns` is a custom class whose fields contain the names of columns to be displayed in the user interface. Note that the class is marked with the <xref:System.SerializableAttribute> attribute. Ordinarily, the class would be defined in a separate assembly, and a reference to it would be provided to the compiler at compile time."
  syntax:
    content: public void AddResource (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do recurso."
    - id: value
      type: System.Object
      description: "O valor do recurso."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>(ou um nome que varia apenas por maiúsculas/minúsculas) já foi adicionado a este <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isto <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> foi fechada e respetiva tabela de hash não está disponível."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,String)
  nameWithType: ResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResourceWriter.AddResource(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona um recurso de cadeia à lista de recursos para serem escritos."
  remarks: "O recurso não é escrito até <xref:System.Resources.ResourceWriter.Generate%2A>é chamado.</xref:System.Resources.ResourceWriter.Generate%2A>       Pode obter os recursos escritos pelo método AddResource ao chamar o <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName>método.</xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add string resources to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_4_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_4_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_4_1.vb)]"
  syntax:
    content: public void AddResource (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do recurso."
    - id: value
      type: System.String
      description: "O valor do recurso."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>(ou um nome que varia apenas por maiúsculas/minúsculas) já foi adicionado a esta ResourceWriter."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isto <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> foi fechada e respetiva tabela de hash não está disponível."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  id: AddResource(System.String,System.IO.Stream,System.Boolean)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Stream,Boolean)
  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona um recurso com o nome especificado como uma sequência à lista de recursos para serem escritos e Especifica se o fluxo deve ser fechado após a <xref:System.Resources.ResourceWriter.Generate*>método é chamado.</xref:System.Resources.ResourceWriter.Generate*>"
  remarks: "Pode especificar qualquer sequência que suporte o <xref:System.IO.Stream.Length%2A?displayProperty=fullName>propriedade `value`.</xref:System.IO.Stream.Length%2A?displayProperty=fullName>       Pode obter os recursos escritos pelo método AddResource ao chamar o <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>método.</xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/csharp/7232e6d2-2ac8-47d7-a388-_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/visualbasic/7232e6d2-2ac8-47d7-a388-_1.vb)]"
  syntax:
    content: public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite);
    parameters:
    - id: name
      type: System.String
      description: "O nome do recurso para adicionar."
    - id: value
      type: System.IO.Stream
      description: "O valor do recurso para adicionar. O recurso tem de suportar o &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; propriedade."
    - id: closeAfterWrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para fechar a sequência depois do <xref:System.Resources.ResourceWriter.Generate*>método é chamado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Resources.ResourceWriter.Generate*>"
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>(ou um nome que varia apenas por maiúsculas/minúsculas) já foi adicionado a este <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref>.       - ou - o fluxo não suporta o &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; propriedade."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isto <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> foi fechada."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  id: AddResourceData(System.String,System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResourceData(String,String,Byte[])
  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adiciona uma unidade de dados como um recurso à lista de recursos para serem escritos."
  remarks: "Utilize o método AddResourceData para adicionar um recurso no formato binário (ou seja, como uma matriz de bytes) à lista de recursos para serem escritos. Tem de especificar o nome do recurso, o nome do tipo de dados contidos no recurso e a representação binária dos dados propriamente ditos. Depois de ter adicionado cada recurso precisa, utilize o <xref:System.Resources.ResourceWriter.Generate%2A>método para a lista de recursos de escrita para o ficheiro de recursos ou fluxo que foi especificado no <xref:System.Resources.ResourceWriter.%23ctor%2A>construtor.</xref:System.Resources.ResourceWriter.%23ctor%2A> </xref:System.Resources.ResourceWriter.Generate%2A>       `typeName`é uma cadeia que representa o tipo de dados do recurso. Pode ser qualquer um dos seguintes valores:-a representação de cadeia de um `ResourceTypeCode` membro de enumeração que indica o tipo de dados do recurso. `ResourceTypeCode`é uma enumeração privada que é utilizada para indicar que um formato binário especial é utilizado para armazenar um 19 tipos de dados comuns. Estes incluem os tipos de dados primitivos do .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), bem como <xref:System.String>, <xref:System.DateTime>e <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime> </xref:System.String> </xref:System.UInt64> </xref:System.UInt32> </xref:System.UInt16> </xref:System.SByte> </xref:System.Single> </xref:System.Int64> </xref:System.Int32> </xref:System.Int16> </xref:System.Double> </xref:System.Decimal> </xref:System.Char> </xref:System.Byte> </xref:System.Boolean> Além disso, o `ResourceTypeCode` enumeração inclui os valores apresentados na tabela seguinte.          | `ResourceTypeCode` valor | Descrição |       |------------------------------|-----------------|       | `ResourceTypeCode.ByteArray`| Os dados são uma matriz de bytes. |       | `ResourceTypeCode.Null`| Os dados são uma referência nula. |       | `ResourceTypeCode.Stream`| Os dados são armazenados numa transmissão em fluxo. |      -A cadeia que contém o nome completamente qualificado do tipo cujos dados binários são atribuídos para o `serializedData` argumento (por exemplo, `System.String`). Além disso, para os tipos que não fazem parte da biblioteca de classe do .NET Framework, a cadeia inclui o nome, versão, cultura e chave pública da assemblagem que contém o tipo. Por exemplo, a seguinte cadeia indica que os dados serializados representa uma instância do `Person` escreva a `Extensions` espaço de nomes, que se encontra na versão 1.0 de uma assemblagem com o nome utilitário tem nenhuma chave pública e nenhum cultura designada.           `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`Um método paralelo para ler os dados de recursos escritos com o método AddResourceData é <xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>.</xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>"
  example:
  - "The following example uses the AddResourceData method to write two integer values to a .resources file, and then uses a <xref:System.Resources.ResourceReader> object to retrieve them.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/csharp/4bc2b306-6493-47e4-9e15-_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/visualbasic/4bc2b306-6493-47e4-9e15-_1.vb)]"
  syntax:
    content: public void AddResourceData (string name, string typeName, byte[] serializedData);
    parameters:
    - id: name
      type: System.String
      description: "Um nome que identifica o recurso que contém os dados adicionados."
    - id: typeName
      type: System.String
      description: "O nome do tipo de dados foi adicionados. Para obter mais informações, consulte a secção observações."
    - id: serializedData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém a representação binária dos dados adicionados."
  overload: System.Resources.ResourceWriter.AddResourceData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>, <code>typeName</code>, or <code>serializedData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>(ou um nome que varia apenas por maiúsculas/minúsculas) já foi adicionado a este <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> objeto."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> objeto não foi inicializado. A causa provável é que o <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> objeto está fechado."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Close
  id: Close
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Close()
  nameWithType: ResourceWriter.Close()
  fullName: System.Resources.ResourceWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Guarda os recursos para o fluxo de saída e, em seguida, fecha-lo."
  remarks: "<xref:System.Resources.ResourceWriter.Generate%2A>é chamado implicitamente por fechar, se necessário.</xref:System.Resources.ResourceWriter.Generate%2A>"
  example:
  - "The following example uses the Close method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_6_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_6_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_6_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResourceWriter.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Ocorreu um erro durante a serialização do objeto."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Dispose
  id: Dispose
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: ResourceWriter.Dispose()
  fullName: System.Resources.ResourceWriter.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Permite aos utilizadores fechar o ficheiro de recursos ou a sequência, explicitamente libertar recursos."
  remarks: "A implementação deste método é a mesma <xref:System.Resources.ResourceWriter.Close%2A>.</xref:System.Resources.ResourceWriter.Close%2A>"
  example:
  - "The following code example uses the Dispose method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer and make the writer's resources available for other processes.  \n  \n [!code-cs[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/csharp/m-system.resources.resou_0_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/cpp/m-system.resources.resou_0_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_0_1.vb)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Resources.ResourceWriter.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Ocorreu um erro durante a serialização do objeto."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Generate
  id: Generate
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Generate()
  nameWithType: ResourceWriter.Generate()
  fullName: System.Resources.ResourceWriter.Generate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Guarda todos os recursos para o fluxo de saída no formato predefinição sistema."
  remarks: "O método de gerar é chamado pelo implicitamente a <xref:System.Resources.ResourceWriter.Close%2A>método se não for chamado pelo código da aplicação.</xref:System.Resources.ResourceWriter.Close%2A>       Gerar só pode ser chamado uma vez, depois de todas as chamadas para <xref:System.Resources.ResourceWriter.AddResource%2A>e <xref:System.Resources.ResourceWriter.AddResourceData%2A>tiverem sido efetuadas.</xref:System.Resources.ResourceWriter.AddResourceData%2A> </xref:System.Resources.ResourceWriter.AddResource%2A> Se ocorrer uma excepção ao escrever os recursos, o fluxo de saída será fechado para evitar escrever informações inválidas.       Gerar não feche o fluxo de saída em casos normais. A menos que está a combinar dados adicionais com o ficheiro. resources ou precisam de acesso no fluxo posteriormente, deve chamar <xref:System.Resources.ResourceWriter.Close%2A>depois de chamar gerar, ou simplesmente chamada <xref:System.Resources.ResourceWriter.Close%2A>.</xref:System.Resources.ResourceWriter.Close%2A> </xref:System.Resources.ResourceWriter.Close%2A>"
  example:
  - "The following code example uses the Generate method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream  \n  \n [!code-vb[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_12_1.vb)]\n [!code-cs[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/csharp/m-system.resources.resou_12_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/cpp/m-system.resources.resou_12_1.cpp)]"
  syntax:
    content: public void Generate ();
    parameters: []
  overload: System.Resources.ResourceWriter.Generate*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Ocorreu um erro durante a serialização do objeto."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isto <xref href=&quot;System.Resources.ResourceWriter&quot;> </xref> foi fechada e respetiva tabela de hash não está disponível."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.TypeNameConverter
  id: TypeNameConverter
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
  fullName: System.Resources.ResourceWriter.TypeNameConverter
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Obtém ou define um delegado que ativa as montagens lado recursos para serem escritos que versões do .NET Framework antes de destino a [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] utilizando nomes de assemblagem qualificado."
  remarks: '[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]e MSBuild define esta propriedade se uma versão anterior do .NET Framework de destino.'
  syntax:
    content: public Func<Type,string> TypeNameConverter { get; set; }
    return:
      type: System.Func{System.Type,System.String}
      description: "O tipo que é encapsulado pelo delegado."
  overload: System.Resources.ResourceWriter.TypeNameConverter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter(Stream)
  nameWithType: ResourceWriter.ResourceWriter(Stream)
  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResourceWriter.#ctor(System.String)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter(String)
  nameWithType: ResourceWriter.ResourceWriter(String)
  fullName: System.Resources.ResourceWriter.ResourceWriter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Byte[])
  nameWithType: ResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Stream)
  nameWithType: ResourceWriter.AddResource(String,Stream)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Object)
  nameWithType: ResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResourceWriter.AddResource(String,Object)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,String)
  nameWithType: ResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResourceWriter.AddResource(String,String)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Stream,Boolean)
  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResourceData(String,String,Byte[])
  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])
- uid: System.Resources.ResourceWriter.Close
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Close()
  nameWithType: ResourceWriter.Close()
  fullName: System.Resources.ResourceWriter.Close()
- uid: System.Resources.ResourceWriter.Dispose
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Dispose()
  nameWithType: ResourceWriter.Dispose()
  fullName: System.Resources.ResourceWriter.Dispose()
- uid: System.Resources.ResourceWriter.Generate
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Generate()
  nameWithType: ResourceWriter.Generate()
  fullName: System.Resources.ResourceWriter.Generate()
- uid: System.Resources.ResourceWriter.TypeNameConverter
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
  fullName: System.Resources.ResourceWriter.TypeNameConverter
- uid: System.Func{System.Type,System.String}
  parent: System
  isExternal: true
  name: Func<Type,String>
  nameWithType: Func<Type,String>
  fullName: System.Func<System.Type,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Resources.ResourceWriter.#ctor*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter
  nameWithType: ResourceWriter.ResourceWriter
- uid: System.Resources.ResourceWriter.AddResource*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource
  nameWithType: ResourceWriter.AddResource
- uid: System.Resources.ResourceWriter.AddResourceData*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResourceData
  nameWithType: ResourceWriter.AddResourceData
- uid: System.Resources.ResourceWriter.Close*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Close
  nameWithType: ResourceWriter.Close
- uid: System.Resources.ResourceWriter.Dispose*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Dispose
  nameWithType: ResourceWriter.Dispose
- uid: System.Resources.ResourceWriter.Generate*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Generate
  nameWithType: ResourceWriter.Generate
- uid: System.Resources.ResourceWriter.TypeNameConverter*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
