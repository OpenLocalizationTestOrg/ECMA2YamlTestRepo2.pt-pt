### YamlMime:ManagedReference
items:
- uid: System.Resources.ResourceWriter
  id: ResourceWriter
  children:
  - System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  - System.Resources.ResourceWriter.#ctor(System.String)
  - System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  - System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  - System.Resources.ResourceWriter.AddResource(System.String,System.String)
  - System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  - System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  - System.Resources.ResourceWriter.Close
  - System.Resources.ResourceWriter.Dispose
  - System.Resources.ResourceWriter.Generate
  - System.Resources.ResourceWriter.TypeNameConverter
  langs:
  - csharp
  name: ResourceWriter
  nameWithType: ResourceWriter
  fullName: System.Resources.ResourceWriter
  type: Class
  summary: "Writes resources in the system-default format to an output file or an output stream. This class cannot be inherited."
  remarks: "ResourceWriter provides a default implementation of the <xref:System.Resources.IResourceWriter> interface. It enables you to programmatically create a binary resource (.resources) file.       Resources are specified as name and value pairs using the <xref:System.Resources.ResourceWriter.AddResource%2A> method. Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, ResourceWriter will not allow a .resources file to have names that vary only by case. The ResourceWriter class enables you to create string, object, and binary resources. Binary resources can be written to the resource file as a byte array or a stream.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.       To create a resources file, create a ResourceWriter with a unique file name, call <xref:System.Resources.ResourceWriter.AddResource%2A> at least once, call <xref:System.Resources.ResourceWriter.Generate%2A> to write the resources file to disk, and then call <xref:System.Resources.ResourceWriter.Close%2A> to close the file. Calling <xref:System.Resources.ResourceWriter.Close%2A> will implicitly call <xref:System.Resources.ResourceWriter.Generate%2A> if you do not explicitly call <xref:System.Resources.ResourceWriter.Generate%2A>.       The resources will not necessarily be written in the same order they were added.       To retrieve resources from a binary .resources file created by the ResourceWriter class, you can use the <xref:System.Resources.ResourceManager> class, which lets you retrieve named resources, or the <xref:System.Resources.ResourceReader> class, which lets you enumerate all the resources in the file."
  example:
  - "The following example writes several strings into the myResources.resources file.  \n  \n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/t-system.resources.resou_1_1.cpp)]\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/t-system.resources.resou_1_1.vb)]\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/t-system.resources.resou_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ResourceWriter : System.Resources.IResourceWriter
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceWriter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: ResourceWriter(Stream)
  nameWithType: ResourceWriter.ResourceWriter(Stream)
  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Initializes a new instance of the <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> class that writes the resources to the provided stream."
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that writes to a specified stream. The code adds resources to the writer and writes the resources to the stream.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_11_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_11_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_11_1.vb)]"
  syntax:
    content: public ResourceWriter (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The output stream."
  overload: System.Resources.ResourceWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is not writable."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: ResourceWriter(String)
  nameWithType: ResourceWriter.ResourceWriter(String)
  fullName: System.Resources.ResourceWriter.ResourceWriter(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Initializes a new instance of the <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> class that writes the resources to the specified file."
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceWriter> class that will write to a specified file. The code adds resources to the writer and writes the resources to the file.  \n  \n [!code-cpp[Classic ResourceWriter Example#1](~/add/codesnippet/cpp/m-system.resources.resou_14_1.cpp)]\n [!code-vb[Classic ResourceWriter Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_14_1.vb)]\n [!code-cs[Classic ResourceWriter Example#1](~/add/codesnippet/csharp/m-system.resources.resou_14_1.cs)]"
  syntax:
    content: public ResourceWriter (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "The output file name."
  overload: System.Resources.ResourceWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  id: AddResource(System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Byte[])
  nameWithType: ResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a named resource specified as a byte array to the list of resources to be written."
  remarks: "The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method."
  example:
  - "The following example uses the AddResource method to add a graphics image that has been read as an array of bytes to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/csharp/m-system.resources.resou_9_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResource#4](~/add/codesnippet/visualbasic/m-system.resources.resou_9_1.vb)]"
  syntax:
    content: public void AddResource (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the resource."
    - id: value
      type: System.Byte[]
      description: "Value of the resource as an 8-bit unsigned integer array."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=&quot;System.Resources.ResourceWriter&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> has been closed and its hash table is unavailable."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  id: AddResource(System.String,System.IO.Stream)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Stream)
  nameWithType: ResourceWriter.AddResource(String,Stream)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a named resource specified as a stream to the list of resources to be written."
  remarks: "You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method."
  example:
  - "The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-vb[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/visualbasic/m-system.resources.resou_10_1.vb)]\n [!code-cs[System.Resources.ResourceWriter.AddResource#2](~/add/codesnippet/csharp/m-system.resources.resou_10_1.cs)]"
  syntax:
    content: public void AddResource (string name, System.IO.Stream value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the resource to add."
    - id: value
      type: System.IO.Stream
      description: "The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=&quot;System.Resources.ResourceWriter&quot;></xref>.       -or-       The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> has been closed."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  id: AddResource(System.String,System.Object)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Object)
  nameWithType: ResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResourceWriter.AddResource(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a named resource specified as an object to the list of resources to be written."
  remarks: "`value` must be serializable.       The resource is not written until the <xref:System.Resources.ResourceWriter.Generate%2A> method is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=fullName> method."
  example:
  - "The following example uses the AddResource method to add object data to a binary resources file.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#1](~/add/codesnippet/csharp/m-system.resources.resou_13_1.cs)]  \n  \n `DonorColumns` is a custom class whose fields contain the names of columns to be displayed in the user interface. Note that the class is marked with the <xref:System.SerializableAttribute> attribute. Ordinarily, the class would be defined in a separate assembly, and a reference to it would be provided to the compiler at compile time."
  syntax:
    content: public void AddResource (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the resource."
    - id: value
      type: System.Object
      description: "The value of the resource."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=&quot;System.Resources.ResourceWriter&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> has been closed and its hash table is unavailable."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,String)
  nameWithType: ResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResourceWriter.AddResource(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a string resource to the list of resources to be written."
  remarks: "The resource is not written until <xref:System.Resources.ResourceWriter.Generate%2A> is called.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method."
  example:
  - "The following example uses the AddResource method to add string resources to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_4_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_4_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_4_1.vb)]"
  syntax:
    content: public void AddResource (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the resource."
    - id: value
      type: System.String
      description: "The value of the resource."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> (or a name that varies only by capitalization) has already been added to this ResourceWriter."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> has been closed and its hash table is unavailable."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  id: AddResource(System.String,System.IO.Stream,System.Boolean)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResource(String,Stream,Boolean)
  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <xref:System.Resources.ResourceWriter.Generate*> method is called."
  remarks: "You can specify any stream that supports the <xref:System.IO.Stream.Length%2A?displayProperty=fullName> property for `value`.       You can retrieve the resources written by the AddResource method by calling the <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=fullName> method."
  example:
  - "The following example uses the AddResource method to add a graphics image that has been saved to a <xref:System.IO.MemoryStream> object to a <xref:System.Resources.ResourceWriter> object.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/csharp/7232e6d2-2ac8-47d7-a388-_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResource#3](~/add/codesnippet/visualbasic/7232e6d2-2ac8-47d7-a388-_1.vb)]"
  syntax:
    content: public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite);
    parameters:
    - id: name
      type: System.String
      description: "The name of the resource to add."
    - id: value
      type: System.IO.Stream
      description: "The value of the resource to add. The resource must support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."
    - id: closeAfterWrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to close the stream after the <xref:System.Resources.ResourceWriter.Generate*> method is called; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Resources.ResourceWriter.AddResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=&quot;System.Resources.ResourceWriter&quot;></xref>.       -or-       The stream does not support the &lt;xref:System.IO.Stream.Length%2A?displayProperty=fullName&gt; property."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> has been closed."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  id: AddResourceData(System.String,System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: AddResourceData(String,String,Byte[])
  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Adds a unit of data as a resource to the list of resources to be written."
  remarks: "Use the AddResourceData method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written. You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself. After you have added each resource you require, use the <xref:System.Resources.ResourceWriter.Generate%2A> method to write the list of resources to the resources file or stream that was specified in the <xref:System.Resources.ResourceWriter.%23ctor%2A> constructor.       `typeName` is a string that represents the data type of the resource. It can be any of the following values:      -   The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource. `ResourceTypeCode` is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types. These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>. In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.          |`ResourceTypeCode` value|Description|       |------------------------------|-----------------|       |`ResourceTypeCode.ByteArray`|The data is a byte array.|       |`ResourceTypeCode.Null`|The data is a null reference.|       |`ResourceTypeCode.Stream`|The data is stored in a stream.|      -   A string that contains the fully qualified name of the type whose binary data is assigned to the `serializedData` argument (for example, `System.String`). In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type. For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.           `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`       A parallel method for reading resource data written with the AddResourceData method is <xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=fullName>."
  example:
  - "The following example uses the AddResourceData method to write two integer values to a .resources file, and then uses a <xref:System.Resources.ResourceReader> object to retrieve them.  \n  \n [!code-cs[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/csharp/4bc2b306-6493-47e4-9e15-_1.cs)]\n [!code-vb[System.Resources.ResourceWriter.AddResourceData#1](~/add/codesnippet/visualbasic/4bc2b306-6493-47e4-9e15-_1.vb)]"
  syntax:
    content: public void AddResourceData (string name, string typeName, byte[] serializedData);
    parameters:
    - id: name
      type: System.String
      description: "A name that identifies the resource that contains the added data."
    - id: typeName
      type: System.String
      description: "The type name of the added data. For more information, see the Remarks section."
    - id: serializedData
      type: System.Byte[]
      description: "A byte array that contains the binary representation of the added data."
  overload: System.Resources.ResourceWriter.AddResourceData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>, <code>typeName</code>, or <code>serializedData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> (or a name that varies only by capitalization) has already been added to this <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> object."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The current <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> object is not initialized. The probable cause is that the <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> object is closed."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Close
  id: Close
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Close()
  nameWithType: ResourceWriter.Close()
  fullName: System.Resources.ResourceWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Saves the resources to the output stream and then closes it."
  remarks: "<xref:System.Resources.ResourceWriter.Generate%2A> is called implicitly by Close, if required."
  example:
  - "The following example uses the Close method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer.  \n  \n [!code-cs[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/csharp/m-system.resources.resou_6_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/cpp/m-system.resources.resou_6_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_6_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResourceWriter.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error has occurred."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "An error has occurred during serialization of the object."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Dispose
  id: Dispose
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: ResourceWriter.Dispose()
  fullName: System.Resources.ResourceWriter.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Allows users to close the resource file or stream, explicitly releasing resources."
  remarks: "The implementation of this method is the same as <xref:System.Resources.ResourceWriter.Close%2A>."
  example:
  - "The following code example uses the Dispose method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream. The code then shuts down the writer and make the writer's resources available for other processes.  \n  \n [!code-cs[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/csharp/m-system.resources.resou_0_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/cpp/m-system.resources.resou_0_1.cpp)]\n [!code-vb[System.Resources.ResourceWriter.Dispose Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_0_1.vb)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Resources.ResourceWriter.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error has occurred."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "An error has occurred during serialization of the object."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.Generate
  id: Generate
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: Generate()
  nameWithType: ResourceWriter.Generate()
  fullName: System.Resources.ResourceWriter.Generate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Saves all resources to the output stream in the system default format."
  remarks: "The Generate method is called implicitly by the <xref:System.Resources.ResourceWriter.Close%2A> method if it is not called by your application code.       Generate can only be called once, after all calls to <xref:System.Resources.ResourceWriter.AddResource%2A> and <xref:System.Resources.ResourceWriter.AddResourceData%2A> have been made. If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.       Generate does not close the output stream in normal cases. Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <xref:System.Resources.ResourceWriter.Close%2A> after calling Generate, or simply call <xref:System.Resources.ResourceWriter.Close%2A>."
  example:
  - "The following code example uses the Generate method to write all resource objects in a <xref:System.Resources.ResourceWriter> class to the output stream  \n  \n [!code-vb[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/visualbasic/m-system.resources.resou_12_1.vb)]\n [!code-cs[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/csharp/m-system.resources.resou_12_1.cs)]\n [!code-cpp[System.Resources.ResourceWriter.Generate Example#1](~/add/codesnippet/cpp/m-system.resources.resou_12_1.cpp)]"
  syntax:
    content: public void Generate ();
    parameters: []
  overload: System.Resources.ResourceWriter.Generate*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "An error occurred during serialization of the object."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Resources.ResourceWriter&quot;></xref> has been closed and its hash table is unavailable."
  platform:
  - net462
- uid: System.Resources.ResourceWriter.TypeNameConverter
  id: TypeNameConverter
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
  fullName: System.Resources.ResourceWriter.TypeNameConverter
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] by using qualified assembly names."
  remarks: '[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] and MSBuild set this property if you target an earlier version of the .NET Framework.'
  syntax:
    content: public Func<Type,string> TypeNameConverter { get; set; }
    return:
      type: System.Func{System.Type,System.String}
      description: "The type that is encapsulated by the delegate."
  overload: System.Resources.ResourceWriter.TypeNameConverter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter(Stream)
  nameWithType: ResourceWriter.ResourceWriter(Stream)
  fullName: System.Resources.ResourceWriter.ResourceWriter(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResourceWriter.#ctor(System.String)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter(String)
  nameWithType: ResourceWriter.ResourceWriter(String)
  fullName: System.Resources.ResourceWriter.ResourceWriter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Byte[])
  nameWithType: ResourceWriter.AddResource(String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResource(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Stream)
  nameWithType: ResourceWriter.AddResource(String,Stream)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.Object)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Object)
  nameWithType: ResourceWriter.AddResource(String,Object)
  fullName: System.Resources.ResourceWriter.AddResource(String,Object)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,String)
  nameWithType: ResourceWriter.AddResource(String,String)
  fullName: System.Resources.ResourceWriter.AddResource(String,String)
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource(String,Stream,Boolean)
  nameWithType: ResourceWriter.AddResource(String,Stream,Boolean)
  fullName: System.Resources.ResourceWriter.AddResource(String,Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResourceData(String,String,Byte[])
  nameWithType: ResourceWriter.AddResourceData(String,String,Byte[])
  fullName: System.Resources.ResourceWriter.AddResourceData(String,String,Byte[])
- uid: System.Resources.ResourceWriter.Close
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Close()
  nameWithType: ResourceWriter.Close()
  fullName: System.Resources.ResourceWriter.Close()
- uid: System.Resources.ResourceWriter.Dispose
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Dispose()
  nameWithType: ResourceWriter.Dispose()
  fullName: System.Resources.ResourceWriter.Dispose()
- uid: System.Resources.ResourceWriter.Generate
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Generate()
  nameWithType: ResourceWriter.Generate()
  fullName: System.Resources.ResourceWriter.Generate()
- uid: System.Resources.ResourceWriter.TypeNameConverter
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
  fullName: System.Resources.ResourceWriter.TypeNameConverter
- uid: System.Func{System.Type,System.String}
  parent: System
  isExternal: true
  name: Func<Type,String>
  nameWithType: Func<Type,String>
  fullName: System.Func<System.Type,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Resources.ResourceWriter.#ctor*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: ResourceWriter
  nameWithType: ResourceWriter.ResourceWriter
- uid: System.Resources.ResourceWriter.AddResource*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResource
  nameWithType: ResourceWriter.AddResource
- uid: System.Resources.ResourceWriter.AddResourceData*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: AddResourceData
  nameWithType: ResourceWriter.AddResourceData
- uid: System.Resources.ResourceWriter.Close*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Close
  nameWithType: ResourceWriter.Close
- uid: System.Resources.ResourceWriter.Dispose*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Dispose
  nameWithType: ResourceWriter.Dispose
- uid: System.Resources.ResourceWriter.Generate*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: Generate
  nameWithType: ResourceWriter.Generate
- uid: System.Resources.ResourceWriter.TypeNameConverter*
  parent: System.Resources.ResourceWriter
  isExternal: false
  name: TypeNameConverter
  nameWithType: ResourceWriter.TypeNameConverter
