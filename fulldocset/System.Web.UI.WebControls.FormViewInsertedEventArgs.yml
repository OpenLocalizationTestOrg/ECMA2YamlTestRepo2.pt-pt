### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  id: FormViewInsertedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  langs:
  - csharp
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;> </xref> eventos."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controlar gera o <xref:System.Web.UI.WebControls.FormView.ItemInserted>evento quando um botão para inserir (um botão com o respetivo `CommandName` propriedade definida como &quot;Insert&quot;) do controlo é clicado, mas após o <xref:System.Web.UI.WebControls.FormView>controlo insere o registo.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada, tais como a verificar os resultados de uma operação de inserção, sempre que este evento ocorre.       Foi transmitido um objeto de FormViewInsertedEventArgs para o método de processamento de eventos, que lhe permite determinar o número de registos afetados e quaisquer exceções que poderão ter ocorrido. Para determinar o número de registos afetados pela operação de inserção, utilize o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> Utilize o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>propriedade para determinar se as exceções ocorreu.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> Também pode indicar se a exceção foi processada no método de processamento de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Se precisar de aceder aos valores do registo inserido, utilize o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       Por predefinição, o <xref:System.Web.UI.WebControls.FormView>controlo devolve para o modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade após uma operação de inserção.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Se ocorrer uma excepção durante a operação de inserção, pode manter o <xref:System.Web.UI.WebControls.FormView>controlo no modo de inserção, definindo o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>propriedade `true`.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>classe, consulte o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>construtor.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>"
  example:
  - "The following example demonstrates how to use the FormViewInsertedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event to determine whether an exception occurred during an insert operation.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: 'public class FormViewInsertedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref> classe."
  remarks: "Utilize este construtor para inicializar uma nova instância de <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>classe.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>| O valor da `affectedRows` parâmetro. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>| O objeto de <xref:System.Exception?displayProperty=fullName>incluído no `e` parâmetro. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>| Foi inicializado para `false`. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>| Foi inicializado para `false`. |      > [!NOTE] > Este construtor é utilizado principalmente pelos programadores de controlo quando gerar eventos.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewInsertedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "O número de linhas afetados pela operação de inserção."
    - id: e
      type: System.Exception
      description: "Um <xref:System.Exception>que representa a exceção é desencadeada quando a operação insert foi realizada.</xref:System.Exception> Se nenhum exceção foi gerada, utilize <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para este parâmetro."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o número de linhas afetados pela operação de inserção."
  remarks: "Utilize a propriedade AffectedRows para determinar o número de registos afetados pela operação de inserção. Esta propriedade é normalmente utilizada para verificar que o número correto de registos foi inserido nas seguintes situações:-Certifique-se de que foi inserido um único registo. Por vezes, uma instrução insert escrito incorretamente pode inserir múltiplos registos.      -Certifique-se de que é um registo inserido quando ocorre um erro durante a operação de inserção que não gere uma exceção.      -Certifique-se de que é um registo inserido quando um controlo de origem de dados que suporta a deteção de conflitos (simultaneidade otimista), tal como o <xref:System.Web.UI.WebControls.SqlDataSource>e <xref:System.Web.UI.WebControls.ObjectDataSource>controla, tem o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>propriedade definida como o `ConflictOptions.CompareAllValues` valor de enumeração.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Sob esta definição, não pode ser inserido um registo que tenha o mesmo valor de chave como um registo por outro utilizador em simultâneo."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was inserted during the insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_880_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_880_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "O número de linhas afetados pela operação de inserção."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a exceção (se aplicável) que foi gerado durante a operação de inserção."
  remarks: "Utilize a propriedade de exceção para determinar a exceção (se aplicável) que foi gerado durante a operação de inserção. Se não existem exceções foram geradas, esta propriedade devolve `null`.      > [!NOTE] > Se foi levantada uma excepção e decidir lidar com a exceção no processador de eventos, não se esqueça de definir o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>propriedade `true`; caso contrário, o <xref:System.Web.UI.WebControls.FormView>controlo voltar a emitir a exceção.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception was raised during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_372_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_372_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "Um <xref:System.Exception>que representa a exceção que foi gerada durante a operação de inserção.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se uma exceção que foi gerada durante a operação insert foi processada de eventos processador."
  remarks: "Quando é levantada uma excepção durante a operação de inserção, utilize a propriedade de ExceptionHandled para indicar se a exceção foi processada de eventos processador. Quando esta propriedade está definida como `true`, a exceção é considerada processadas e não é novamente emitida. Se esta propriedade estiver definida como `false`, a <xref:System.Web.UI.WebControls.FormView>controlo voltar a emitir a exceção.</xref:System.Web.UI.WebControls.FormView> Para determinar qual a exceção foi gerada, utilize o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_826_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_826_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a exceção foi processada de eventos de processador; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  id: KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlo deve permanecer em modo de inserção após uma operação de inserção."
  remarks: "Por predefinição, o <xref:System.Web.UI.WebControls.FormView>controlo devolve para o modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Utilize a propriedade KeepInInsertMode para especificar se o <xref:System.Web.UI.WebControls.FormView>controlo deve permanecer em modo de inserção após uma operação de inserção.</xref:System.Web.UI.WebControls.FormView> Para manter o <xref:System.Web.UI.WebControls.FormView>controlar de modo de inserção, defina esta propriedade como `true`.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Esta propriedade deve ser utilizada apenas quando uma situação ocorre (por exemplo, uma exceção a ser gerada) que requer o controlo a comportar-se de forma a que normalmente iria. Se o <xref:System.Web.UI.WebControls.FormView>controlo tem de permanecer no modo de inserção por predefinição, defina o <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade em vez disso.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInInsertMode property to keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode when an exception occurs during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_181_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_181_1.aspx)]"
  syntax:
    content: public bool KeepInInsertMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>permanecer no modo de inserção após uma operação de inserção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um dicionário que contém os pares nome/valor de campo para o registo inserido."
  remarks: "Utilize a propriedade de valores para os valores dos campos para o registo inserido de acesso. Por exemplo, pode utilizar estes valores para manter um registo de registos inseridos.       Devolve de propriedade valores um <xref:System.Collections.Specialized.OrderedDictionary>objeto que implementa o <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>interface.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> O <xref:System.Collections.Specialized.OrderedDictionary>objeto contém <xref:System.Collections.DictionaryEntry?displayProperty=fullName>objetos que representam os campos do registo inserido.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> Para aceder os nomes de campo, utilize o <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>propriedade o <xref:System.Collections.Specialized.OrderedDictionary>objeto.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Da mesma forma, podem aceder os valores de campo ao utilizar o <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>propriedade.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] > Como um atalho, também pode utilizar o indexador do <xref:System.Collections.Specialized.OrderedDictionary>valores de objeto para o campo de aceder diretamente.</xref:System.Collections.Specialized.OrderedDictionary> A vantagem na utilização do indexador é que devolve valores de campo diretamente. Controlos que se baseiam na ordem campo da origem de dados (tais como <xref:System.Web.UI.WebControls.AccessDataSource>) podem aceder a valores de campo apenas por índice.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to iterate through the items in the Values collection.  \n  \n [!code-vb[FormViewInsertedEventArgsValues#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1339_1.aspx)]\n [!code-cs[FormViewInsertedEventArgsValues#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1339_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Um <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> objeto que contém um dicionário de pares nome/valor de campo de chave para o registo inserido."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
