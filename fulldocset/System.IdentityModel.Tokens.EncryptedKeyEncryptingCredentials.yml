### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  id: EncryptedKeyEncryptingCredentials
  children:
  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials
  langs:
  - csharp
  name: EncryptedKeyEncryptingCredentials
  nameWithType: EncryptedKeyEncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  type: Class
  summary: "Represents the encrypted key encrypting credentials. These are usually used as data encrypting credentials to encrypt things like tokens."
  syntax:
    content: 'public class EncryptedKeyEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.EncryptingCredentials
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.EncryptingCredentials.Algorithm
  - System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey
  - System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  langs:
  - csharp
  name: EncryptedKeyEncryptingCredentials(X509Certificate2)
  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials&quot;></xref> class based on the specified X.509 certificate."
  remarks: "Use this constructor if the wrapping credential is an X.509 certificate and you want to use the default wrapping algorithm and encryption algorithm, which are RSA-OAEP and AES256 respectively."
  syntax:
    content: public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "The certificate used to encrypt the key."
  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)
  id: '#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  langs:
  - csharp
  name: EncryptedKeyEncryptingCredentials(EncryptingCredentials,Int32,String)
  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials,Int32,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials,Int32,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials&quot;></xref> class based on the specified <xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;></xref> object, key size, and encryption algorithm."
  remarks: "Use this constructor if you already have an <xref:System.IdentityModel.Tokens.EncryptingCredentials> object and you want to use it as a wrapping credential."
  syntax:
    content: public EncryptedKeyEncryptingCredentials (System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials, int keySizeInBits, string encryptionAlgorithm);
    parameters:
    - id: wrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "The key wrapping credentials used to encrypt the session key."
    - id: keySizeInBits
      type: System.Int32
      description: "The key size of the wrapped session key."
    - id: encryptionAlgorithm
      type: System.String
      description: "A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm."
  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>wrappingCredentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  langs:
  - csharp
  name: EncryptedKeyEncryptingCredentials(X509Certificate2,String,Int32,String)
  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2,String,Int32,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2,String,Int32,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials&quot;></xref> class based on the specified X.509 certificate, wrapping algorithm, key size, and encryption algorithm."
  remarks: "Use this constructor if the wrapping credential is an X.509 certificate and you want to supply your own wrapping algorithm and encryption algorithm."
  syntax:
    content: public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string keyWrappingAlgorithm, int keySizeInBits, string encryptionAlgorithm);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "The certificate used to encrypt the key."
    - id: keyWrappingAlgorithm
      type: System.String
      description: "A URI that represents the key wrapping algorithm. This should be an asymmetric algorithm."
    - id: keySizeInBits
      type: System.Int32
      description: "The key size of the wrapped session key."
    - id: encryptionAlgorithm
      type: System.String
      description: "A URI that represents the encryption algorithm when the session key is used. This should be a symmetric key algorithm."
  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials
  id: WrappingCredentials
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  langs:
  - csharp
  name: WrappingCredentials
  nameWithType: EncryptedKeyEncryptingCredentials.WrappingCredentials
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the key wrapping credentials used to encrypt the session key; for example, <xref href=&quot;System.IdentityModel.Tokens.X509EncryptingCredentials&quot;></xref>."
  syntax:
    content: public System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "An <xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;></xref> that represents the credentials used to encrypt the session key."
  overload: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  isExternal: false
  name: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  isExternal: false
  name: EncryptedKeyEncryptingCredentials(X509Certificate2)
  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  isExternal: false
  name: EncryptedKeyEncryptingCredentials(EncryptingCredentials,Int32,String)
  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials,Int32,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(EncryptingCredentials,Int32,String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  isExternal: false
  name: EncryptedKeyEncryptingCredentials(X509Certificate2,String,Int32,String)
  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2,String,Int32,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials(X509Certificate2,String,Int32,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  isExternal: false
  name: WrappingCredentials
  nameWithType: EncryptedKeyEncryptingCredentials.WrappingCredentials
  fullName: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  isExternal: false
  name: EncryptedKeyEncryptingCredentials
  nameWithType: EncryptedKeyEncryptingCredentials.EncryptedKeyEncryptingCredentials
- uid: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials*
  parent: System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials
  isExternal: false
  name: WrappingCredentials
  nameWithType: EncryptedKeyEncryptingCredentials.WrappingCredentials
