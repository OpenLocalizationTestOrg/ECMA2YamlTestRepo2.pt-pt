### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  id: UserNameSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  type: Class
  summary: "Authenticates a <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> security token."
  remarks: "Override the UserNameSecurityTokenAuthenticator class to authenticate security tokens based on a user name and password.       The [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.      |Type|Description|   |----------|-----------------|   |<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|Allows an application to provide a custom authentication scheme for user names and passwords. The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.|   |<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|Authenticates the user name and password as a Windows account.|       Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.  However, if additional flexibility is needed, you can derive a class from the UserNameSecurityTokenAuthenticator class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method."
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/csharp/t-system.identitymodel.s_6_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_6_1.vb)]
  syntax:
    content: 'public abstract class UserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&quot;></xref> class."
  syntax:
    content: protected UserNameSecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a value indicating whether the specified security token can be validated by this security token authenticator."
  remarks: "The CanValidateTokenCore method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method."
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> to be validated."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> when <code>token</code> is a <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Authenticates the specified security token and returns the set of authorization policies for the security token."
  remarks: "The ValidateTokenCore method calls the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate the `token` parameter using its user name and password."
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> to be validated."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref> that contains the set of authorization policies in effect for this application."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  id: ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> security tokens."
  remarks: "Override the ValidateUserNamePasswordCore method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.       When the ValidateUserNamePasswordCore method is overridden, follow these guidelines:      -   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.      -   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.       When `null` is returned by this method, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/csharp/2e0e79be-aa35-46e5-a7cb-_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/visualbasic/2e0e79be-aa35-46e5-a7cb-_1.vb)]
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "The user name associated with the security token."
    - id: password
      type: System.String
      description: "The password associated with the security token."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref> that contains the set of authorization policies in effect for this application."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore
