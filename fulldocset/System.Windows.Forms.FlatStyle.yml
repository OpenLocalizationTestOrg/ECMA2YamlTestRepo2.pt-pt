### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.FlatStyle
  id: FlatStyle
  children:
  - System.Windows.Forms.FlatStyle.Flat
  - System.Windows.Forms.FlatStyle.Popup
  - System.Windows.Forms.FlatStyle.Standard
  - System.Windows.Forms.FlatStyle.System
  langs:
  - csharp
  name: FlatStyle
  nameWithType: FlatStyle
  fullName: System.Windows.Forms.FlatStyle
  type: Enum
  summary: "Specifies the appearance of a control."
  remarks: "This enumeration is used by members such as <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A?displayProperty=fullName>, <xref:System.Windows.Forms.GroupBox.FlatStyle%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Label.FlatStyle%2A?displayProperty=fullName>.       In the case of the Popup style button, this enumeration controls some behavior as well as appearance. The Popup style control initially appears Flat until the mouse pointer moves over it. When the mouse pointer moves over the Popup control, it appears as a Standard style control until the mouse pointer is moved off of it again.       If the System style is used, the appearance of the control is determined by the user&quot;s operating system and the following property values will be ignored: <xref:System.Windows.Forms.Control.BackgroundImage%2A?displayProperty=fullName>, `ImageAlign`, `Image`, `ImageIndex`, `ImageList`, and `TextAlign`. In addition, the <xref:System.Windows.Forms.Control.BackColor%2A?displayProperty=fullName> property will be ignored for button controls. If supported, users can change the appearance of controls by adjusting the appearance settings of their operating system.      > [!NOTE] >  When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property of the <xref:System.Windows.Forms.RadioButton> and <xref:System.Windows.Forms.CheckBox> classes is set to System, the control is drawn by the user&quot;s operating system and the check alignment is based upon the `CheckAlign` and <xref:System.Windows.Forms.ButtonBase.TextAlign%2A?displayProperty=fullName> property values. The `CheckAlign` property value is not changed, but the appearance of the control can be affected. The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text. For example, if you have a <xref:System.Windows.Forms.CheckBox> control with a `CheckAlign` property value of <xref:System.Drawing.ContentAlignment?displayProperty=fullName> and a <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property value of <xref:System.Drawing.ContentAlignment?displayProperty=fullName>, and the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property value is set to System, the check box alignment will appear to be <xref:System.Drawing.ContentAlignment?displayProperty=fullName> while the text alignment remains unchanged.      > [!CAUTION] >  Setting the `FlatStyle` property to System is not advisable if you need to display an image on a control, display an image as a control&quot;s background, or perform precise text alignment."
  example:
  - "The following is an example of a manifest to allow your application to support the visual styles available in Windows XP if you are using version 1.0 of the .NET Framework. The manifest can be added to your application as a resource or as a stand-alone text file. The manifest file resides in the same directory as the executable file, and the name of the text file must be the complete name of the executable file with an additional file name extension of.manifest. For example, the manifest file for MyApp.exe would be MyApp.exe.manifest. This example assumes that the `FlatStyle` properties of the controls in your application are set to System.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>  \n <assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">  \n <assemblyIdentity  \n     version=\"1.0.0.0\"  \n     processorArchitecture=\"X86\"  \n     name=\"CompanyName.ProductName.YourApplication\"  \n     type=\"win32\"  \n />  \n <description>Your application description here.</description>  \n <dependency>  \n     <dependentAssembly>  \n         <assemblyIdentity  \n             type=\"win32\"  \n             name=\"Microsoft.Windows.Common-Controls\"  \n             version=\"6.0.0.0\"  \n             processorArchitecture=\"X86\"  \n             publicKeyToken=\"6595b64144ccf1df\"  \n             language=\"*\"  \n         />  \n     </dependentAssembly>  \n </dependency>  \n </assembly>  \n```"
  syntax:
    content: public enum FlatStyle
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Windows.Forms.FlatStyle.Flat
  id: Flat
  parent: System.Windows.Forms.FlatStyle
  langs:
  - csharp
  name: Flat
  nameWithType: FlatStyle.Flat
  fullName: System.Windows.Forms.FlatStyle.Flat
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "The control appears flat."
  syntax:
    content: Flat
    return:
      type: System.Windows.Forms.FlatStyle
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FlatStyle.Popup
  id: Popup
  parent: System.Windows.Forms.FlatStyle
  langs:
  - csharp
  name: Popup
  nameWithType: FlatStyle.Popup
  fullName: System.Windows.Forms.FlatStyle.Popup
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A control appears flat until the mouse pointer moves over it, at which point it appears three-dimensional."
  syntax:
    content: Popup
    return:
      type: System.Windows.Forms.FlatStyle
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FlatStyle.Standard
  id: Standard
  parent: System.Windows.Forms.FlatStyle
  langs:
  - csharp
  name: Standard
  nameWithType: FlatStyle.Standard
  fullName: System.Windows.Forms.FlatStyle.Standard
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "The control appears three-dimensional."
  syntax:
    content: Standard
    return:
      type: System.Windows.Forms.FlatStyle
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FlatStyle.System
  id: System
  parent: System.Windows.Forms.FlatStyle
  langs:
  - csharp
  name: System
  nameWithType: FlatStyle.System
  fullName: System.Windows.Forms.FlatStyle.System
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "The appearance of the control is determined by the user&quot;s operating system."
  syntax:
    content: System
    return:
      type: System.Windows.Forms.FlatStyle
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Windows.Forms.FlatStyle.Flat
  parent: System.Windows.Forms.FlatStyle
  isExternal: false
  name: Flat
  nameWithType: FlatStyle.Flat
  fullName: System.Windows.Forms.FlatStyle.Flat
- uid: System.Windows.Forms.FlatStyle
  parent: System.Windows.Forms
  isExternal: false
  name: FlatStyle
  nameWithType: FlatStyle
  fullName: System.Windows.Forms.FlatStyle
- uid: System.Windows.Forms.FlatStyle.Popup
  parent: System.Windows.Forms.FlatStyle
  isExternal: false
  name: Popup
  nameWithType: FlatStyle.Popup
  fullName: System.Windows.Forms.FlatStyle.Popup
- uid: System.Windows.Forms.FlatStyle.Standard
  parent: System.Windows.Forms.FlatStyle
  isExternal: false
  name: Standard
  nameWithType: FlatStyle.Standard
  fullName: System.Windows.Forms.FlatStyle.Standard
- uid: System.Windows.Forms.FlatStyle.System
  parent: System.Windows.Forms.FlatStyle
  isExternal: false
  name: System
  nameWithType: FlatStyle.System
  fullName: System.Windows.Forms.FlatStyle.System
