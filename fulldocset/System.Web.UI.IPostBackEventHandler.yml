### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IPostBackEventHandler
  id: IPostBackEventHandler
  children:
  - System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)
  langs:
  - csharp
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
  type: Interface
  summary: "Defines the method ASP.NET server controls must implement to handle postback events."
  remarks: "To create a server control that captures form submission information from the browser, you must implement this interface. For more information on how to use this interface, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example defines a custom button server control that causes postback, captures the postback event using the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method, and raises a `Click` event on the server.  \n  \n [!code-cs[Classic IPostBackEventHandler Example#1](~/add/codesnippet/csharp/t-system.web.ui.ipostbac_1_1.cs)]\n [!code-vb[Classic IPostBackEventHandler Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.ipostbac_1_1.vb)]"
  syntax:
    content: public interface IPostBackEventHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.IPostBackEventHandler
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "When implemented by a class, enables a server control to process an event raised when a form is posted to the server."
  remarks: "The page passes the value of the `eventArgument` parameter to the `RaisePostBackEvent` method of the control that implements the <xref:System.Web.UI.IPostBackEventHandler> interface. This control also renders the HTML element that causes the postback to occur. If the control renders client-side script for postback, the argument from the script is passed in the `eventArgument` parameter. If the postback is caused by a simple submit operation, the `eventArgument` parameter is `null`.       This method provides the functionality for many events implemented by HTML and Web server controls."
  example:
  - "The following code example defines a custom button server control that causes postback, captures the postback event using the RaisePostBackEvent method, and raises a `Click` event on the server.  \n  \n [!code-cs[Classic IPostBackEventHandler Example#1](~/add/codesnippet/csharp/m-system.web.ui.ipostbac_0_1.cs)]\n [!code-vb[Classic IPostBackEventHandler Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.ipostbac_0_1.vb)]"
  syntax:
    content: public void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "A <xref:System.String> that represents an optional event argument to be passed to the event handler."
  overload: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)
  parent: System.Web.UI.IPostBackEventHandler
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent*
  parent: System.Web.UI.IPostBackEventHandler
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: IPostBackEventHandler.RaisePostBackEvent
