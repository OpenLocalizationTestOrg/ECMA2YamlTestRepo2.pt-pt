### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManagerParameter
  id: ClientBuildManagerParameter
  children:
  - System.Web.Compilation.ClientBuildManagerParameter.#ctor
  - System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  - System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  langs:
  - csharp
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
  type: Class
  summary: "Contém os valores transmitidos para o compilador ASP.NET durante a pré-compilação da."
  remarks: "Páginas Web do ASP.NET e ficheiros de código podem ser pré-compilada para facilitar uma resposta mais rápida para os utilizadores e permitir a implementação do site sem a implementar o código de origem. Para obter mais informações sobre precompiling um Web site do ASP.NET, consulte [descrição geral do pré-compilação de projeto de Web Site do ASP.NET](~/add/includes/ajax-current-ext-md.md).       A classe de ClientBuildManagerParameter armazena valores que são utilizados durante a pré-compilação da. O <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>propriedade determina como a assemblagem irá ser criada.</xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Por exemplo, pode definir <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>para <xref:System.Web.Compilation.PrecompilationFlags>recompilar quaisquer componentes anteriormente compilados ou defina-o como <xref:System.Web.Compilation.PrecompilationFlags>para permitir a assemblagem resultante para substituir quaisquer componentes no diretório de destino.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> O <xref:System.Web.Compilation.PrecompilationFlags>enumerador tem um <xref:System.FlagsAttribute>atributo que permite uma combinação bit a bit dos seus valores de membro.</xref:System.FlagsAttribute> </xref:System.Web.Compilation.PrecompilationFlags> O <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>propriedade pode conter mais do que um valor entre o <xref:System.Web.Compilation.PrecompilationFlags>enumeração para especificar uma combinação de comportamentos pré-compilação.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>       É o <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>propriedade ou o <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>propriedade é atribuída um valor para criar uma assemblagem com nome seguro.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Ambos os valores não precisam de ser definida para criar uma assemblagem com nome seguro.       Um objeto de ClientBuildManagerParameter é passado para o <xref:System.Web.Compilation.ClientBuildManager>objeto através de <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>construtor.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManager>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a ClientBuildManagerParameter object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/t-system.web.compilation_9_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/t-system.web.compilation_9_1.cs)]"
  syntax:
    content: public class ClientBuildManagerParameter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Compilation.ClientBuildManagerParameter&quot;> </xref> classe."
  remarks: "Este construtor não inicializar quaisquer valores de propriedade. Esses valores tem de ser definidos através de <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, e <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>Propriedades depois do objeto foi criado.</xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/m-system.web.compilation_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/m-system.web.compilation_1.cs)]"
  syntax:
    content: public ClientBuildManagerParameter ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  id: ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém ou define a excluídos caminhos virtuais."
  syntax:
    content: public System.Collections.Generic.List<string> ExcludedVirtualPaths { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Excluir caminhos virtuais."
  overload: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  id: PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém ou define os sinalizadores que determinam o comportamento de pré-compilação."
  remarks: "A propriedade PrecompilationFlags determina como a assemblagem irá ser criada. Por exemplo, pode definir PrecompilationFlags <xref:System.Web.Compilation.PrecompilationFlags>recompilar quaisquer componentes anteriormente compilados ou defina-o como <xref:System.Web.Compilation.PrecompilationFlags>para permitir a assemblagem resultante para substituir quaisquer componentes no diretório de destino.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.PrecompilationFlags> O <xref:System.Web.Compilation.PrecompilationFlags>enumerador tem um <xref:System.FlagsAttribute>atributo que permite uma combinação bit a bit dos seus valores de membro.</xref:System.FlagsAttribute> </xref:System.Web.Compilation.PrecompilationFlags> A propriedade PrecompilationFlags pode conter mais do que um valor entre o <xref:System.Web.Compilation.PrecompilationFlags>enumeração para especificar uma combinação de comportamentos pré-compilação.</xref:System.Web.Compilation.PrecompilationFlags>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_3_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_3_1.cs)]"
  syntax:
    content: public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }
    return:
      type: System.Web.Compilation.PrecompilationFlags
      description: "O <xref href=&quot;System.Web.Compilation.PrecompilationFlags&quot;> </xref> para uma compilação do cliente."
  overload: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  id: StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém ou define o contentor de chaves utilizado durante a compilação."
  remarks: "A propriedade de StrongNameKeyContainer ou <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>propriedade é atribuída um valor para criar uma assemblagem com nome seguro.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> Ambos os valores não precisam de ser definida para criar uma assemblagem com nome seguro."
  example:
  - "The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container. It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-cs[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/csharp/p-system.web.compilation_1_1.cs)]\n [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/visualbasic/p-system.web.compilation_1_1.vb)]"
  syntax:
    content: public string StrongNameKeyContainer { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>do valor para o contentor de chaves.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  id: StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém ou define o ficheiro de chave utilizado durante a compilação."
  remarks: "É o <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>propriedade ou a propriedade StrongNameKeyFile é atribuída um valor para criar uma assemblagem com nome seguro.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Ambos os valores não precisam de ser definida para criar uma assemblagem com nome seguro."
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_2_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_2_1.cs)]"
  syntax:
    content: public string StrongNameKeyFile { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>do valor para o ficheiro de chave.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.PrecompilationFlags
  parent: System.Web.Compilation
  isExternal: false
  name: PrecompilationFlags
  nameWithType: PrecompilationFlags
  fullName: System.Web.Compilation.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
