### YamlMime:ManagedReference
items:
- uid: System.Numerics.Quaternion
  id: Quaternion
  children:
  - System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  - System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  - System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  - System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Equals(System.Object)
  - System.Numerics.Quaternion.GetHashCode
  - System.Numerics.Quaternion.Identity
  - System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.IsIdentity
  - System.Numerics.Quaternion.Length
  - System.Numerics.Quaternion.LengthSquared
  - System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.ToString
  - System.Numerics.Quaternion.W
  - System.Numerics.Quaternion.X
  - System.Numerics.Quaternion.Y
  - System.Numerics.Quaternion.Z
  langs:
  - csharp
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
  type: Struct
  summary: "Representa um vetor de que é utilizado para codificar three-dimensional rotações físicas."
  remarks: "A estrutura de Quaternion é utilizada para rodar eficientemente um vetor de objeto sobre o (x, y, z) por theta ângulo, em que:```   w = cos(theta/2)   ```"
  syntax:
    content: 'public struct Quaternion : IEquatable<System.Numerics.Quaternion>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Quaternion>
  platform:
  - net462
- uid: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Quaternion(Vector3,Single)
  nameWithType: Quaternion.Quaternion(Vector3,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Vector3,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Cria um quaternion a partir de partes de vetor e a rotação especificadas."
  syntax:
    content: public Quaternion (System.Numerics.Vector3 vectorPart, float scalarPart);
    parameters:
    - id: vectorPart
      type: System.Numerics.Vector3
      description: "A parte de vetor do quaternion."
    - id: scalarPart
      type: System.Single
      description: "A parte de rotação do quaternion."
  overload: System.Numerics.Quaternion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Quaternion(Single,Single,Single,Single)
  nameWithType: Quaternion.Quaternion(Single,Single,Single,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Constrói um quaternion dos componentes especificados."
  syntax:
    content: public Quaternion (float x, float y, float z, float w);
    parameters:
    - id: x
      type: System.Single
      description: "O valor a atribuir ao componente do quaternion X."
    - id: y
      type: System.Single
      description: "O valor a atribuir ao componente do quaternion Y."
    - id: z
      type: System.Single
      description: "O valor a atribuir ao componente do quaternion Z."
    - id: w
      type: System.Single
      description: "O valor a atribuir ao componente do quaternion W."
  overload: System.Numerics.Quaternion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Add(Quaternion,Quaternion)
  nameWithType: Quaternion.Add(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Add(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Adiciona cada elemento um quaternion com o respetivo elemento correspondente no quaternion segundo."
  syntax:
    content: public static System.Numerics.Quaternion Add (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion que contém os valores de summed <code> value1 </code> e <code> value2 </code>."
  overload: System.Numerics.Quaternion.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Concatenate(Quaternion,Quaternion)
  nameWithType: Quaternion.Concatenate(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Concatenate(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Concatena dois quaternions."
  syntax:
    content: public static System.Numerics.Quaternion Concatenate (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "A primeira rotação quaternion da série."
    - id: value2
      type: System.Numerics.Quaternion
      description: "A segunda rotação quaternion da série."
    return:
      type: System.Numerics.Quaternion
      description: "Um novo quaternion que representa a concatenação o <code> value1 </code> seguido de rotação de <code> value2 </code> rotação."
  overload: System.Numerics.Quaternion.Concatenate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  id: Conjugate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Conjugate(Quaternion)
  nameWithType: Quaternion.Conjugate(Quaternion)
  fullName: System.Numerics.Quaternion.Conjugate(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve o conjugate de um quaternion especificado."
  syntax:
    content: public static System.Numerics.Quaternion Conjugate (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "Quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Um novo quaternion que é o conjugate de <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Quaternion.Conjugate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  id: CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: CreateFromAxisAngle(Vector3,Single)
  nameWithType: Quaternion.CreateFromAxisAngle(Vector3,Single)
  fullName: System.Numerics.Quaternion.CreateFromAxisAngle(Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Cria um quaternion a partir de um vetor e um ângulo para rodar sobre o vetor."
  syntax:
    content: public static System.Numerics.Quaternion CreateFromAxisAngle (System.Numerics.Vector3 axis, float angle);
    parameters:
    - id: axis
      type: System.Numerics.Vector3
      description: "O vetor de rotação à volta."
    - id: angle
      type: System.Single
      description: "O ângulo em radianos, para rotação à volta de vetor."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion recentemente criado."
  overload: System.Numerics.Quaternion.CreateFromAxisAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  id: CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: CreateFromRotationMatrix(Matrix4x4)
  nameWithType: Quaternion.CreateFromRotationMatrix(Matrix4x4)
  fullName: System.Numerics.Quaternion.CreateFromRotationMatrix(Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Cria um quaternion da matriz de rotação especificado."
  syntax:
    content: public static System.Numerics.Quaternion CreateFromRotationMatrix (System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "A matriz de rotação."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion recentemente criado."
  overload: System.Numerics.Quaternion.CreateFromRotationMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  id: CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: CreateFromYawPitchRoll(Single,Single,Single)
  nameWithType: Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
  fullName: System.Numerics.Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Cria um novo quaternion do yaw indicado, rápida e agregação."
  syntax:
    content: public static System.Numerics.Quaternion CreateFromYawPitchRoll (float yaw, float pitch, float roll);
    parameters:
    - id: yaw
      type: System.Single
      description: "O ângulo de yaw, em radianos, à volta do eixo Y."
    - id: pitch
      type: System.Single
      description: "O ângulo de rápida, em radianos, à volta do eixo X."
    - id: roll
      type: System.Single
      description: "O ângulo de agregação, em radianos, à volta do eixo Z."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion resultante."
  overload: System.Numerics.Quaternion.CreateFromYawPitchRoll*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Divide(Quaternion,Quaternion)
  nameWithType: Quaternion.Divide(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Divide(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divide uma quaternion por um segundo quaternion."
  syntax:
    content: public static System.Numerics.Quaternion Divide (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "O dividendo."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O divisor."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion resultante da divisão de <code> value1 </code> por <code> value2 </code>."
  overload: System.Numerics.Quaternion.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Dot(Quaternion,Quaternion)
  nameWithType: Quaternion.Dot(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Dot(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Calcula o produto de ponto de dois quaternions."
  syntax:
    content: public static float Dot (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2);
    parameters:
    - id: quaternion1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: quaternion2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    return:
      type: System.Single
      description: "O produto de ponto."
  overload: System.Numerics.Quaternion.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  id: Equals(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Equals(Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
  fullName: System.Numerics.Quaternion.Equals(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve um valor que indica se esta instância e o outro quaternion são iguais."
  remarks: "Dois quaternions são iguais se cada um dos respetivos componentes correspondentes for igual."
  syntax:
    content: public bool Equals (System.Numerics.Quaternion other);
    parameters:
    - id: other
      type: System.Numerics.Quaternion
      description: "Outro quaternion."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois quaternions são iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Quaternion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Quaternion.Equals(Object)
  fullName: System.Numerics.Quaternion.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve um valor que indica se esta instância e um objeto especificado são iguais."
  remarks: "A instância atual e `obj` são iguais se `obj` é um <xref:System.Numerics.Quaternion>objeto e os componentes correspondentes de cada matriz são iguais.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto comparar com a instância atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instância atual e <code> obj </code> são igual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Quaternion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Quaternion.GetHashCode()
  fullName: System.Numerics.Quaternion.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve o código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash."
  overload: System.Numerics.Quaternion.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Identity
  id: Identity
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: System.Numerics.Quaternion.Identity
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Obtém um quaternion que representa não rotação."
  syntax:
    content: public static System.Numerics.Quaternion Identity { get; }
    return:
      type: System.Numerics.Quaternion
      description: "Um quaternion cujos valores são `(0, 0, 0, 1)`."
  overload: System.Numerics.Quaternion.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  id: Inverse(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Inverse(Quaternion)
  nameWithType: Quaternion.Inverse(Quaternion)
  fullName: System.Numerics.Quaternion.Inverse(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve o inverso de um quaternion."
  syntax:
    content: public static System.Numerics.Quaternion Inverse (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "Quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Inverted quaternion."
  overload: System.Numerics.Quaternion.Inverse*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.IsIdentity
  id: IsIdentity
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: IsIdentity
  nameWithType: Quaternion.IsIdentity
  fullName: System.Numerics.Quaternion.IsIdentity
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Obtém um valor que indica se a instância atual está a quaternion de identidade."
  syntax:
    content: public bool IsIdentity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instância atual está quaternion identidade; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Quaternion.IsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Length
  id: Length
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Length()
  nameWithType: Quaternion.Length()
  fullName: System.Numerics.Quaternion.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Calcula o período do quaternion."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "O comprimento calculado do quaternion."
  overload: System.Numerics.Quaternion.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Quaternion.LengthSquared()
  fullName: System.Numerics.Quaternion.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Calcula o período ao quadrado do quaternion."
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "O comprimento ao quadrado do quaternion."
  overload: System.Numerics.Quaternion.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  id: Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Lerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Lerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Lerp(Quaternion,Quaternion,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Efetua uma interpolação linear entre duas quaternions com base no valor que especifica o peso de quaternion o segundo."
  syntax:
    content: public static System.Numerics.Quaternion Lerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);
    parameters:
    - id: quaternion1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: quaternion2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    - id: amount
      type: System.Single
      description: "O peso relativo de `quaternion2` de interpolação."
    return:
      type: System.Numerics.Quaternion
      description: "Interpolated quaternion."
  overload: System.Numerics.Quaternion.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve o quaternion que resulta da multiplicando dois quaternions em conjunto."
  syntax:
    content: public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion produto."
  overload: System.Numerics.Quaternion.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  id: Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Multiply(Quaternion,Single)
  nameWithType: Quaternion.Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve o quaternion que resulta da dimensionamento todos os componentes de uma quaternion especificada por um fator de escalar."
  syntax:
    content: public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion origem."
    - id: value2
      type: System.Single
      description: "O valor escalar."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion expandido."
  overload: System.Numerics.Quaternion.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  id: Negate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Negate(Quaternion)
  nameWithType: Quaternion.Negate(Quaternion)
  fullName: System.Numerics.Quaternion.Negate(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Inverte o sinal de cada componente do quaternion."
  syntax:
    content: public static System.Numerics.Quaternion Negate (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "Quaternion para negate."
    return:
      type: System.Numerics.Quaternion
      description: "Negated quaternion."
  overload: System.Numerics.Quaternion.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  id: Normalize(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Normalize(Quaternion)
  nameWithType: Quaternion.Normalize(Quaternion)
  fullName: System.Numerics.Quaternion.Normalize(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divide cada componente de uma determinada <xref href=&quot;System.Numerics.Quaternion&quot;> </xref> pelo seu comprimento."
  syntax:
    content: public static System.Numerics.Quaternion Normalize (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "Quaternion para normalizar."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion normalizado."
  overload: System.Numerics.Quaternion.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Addition(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Addition(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Addition(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Adiciona cada elemento um quaternion com o respetivo elemento correspondente no quaternion segundo."
  remarks: "O método de adição define a operação do operador de adição para <xref:System.Numerics.Quaternion>objetos.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Addition (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion que contém os valores de summed <code> value1 </code> e <code> value2 </code>."
  overload: System.Numerics.Quaternion.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Division(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Division(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Division(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divide uma quaternion por um segundo quaternion."
  remarks: "O método de divisão define a operação de divisão de <xref:System.Numerics.Quaternion>objetos.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Division (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "O dividendo."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O divisor."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion resultante da divisão de <code> value1 </code> por <code> value2 </code>."
  overload: System.Numerics.Quaternion.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Equality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Equality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Equality(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve um valor que indica se duas quaternions são iguais."
  remarks: "Dois quaternions são iguais se cada um dos respetivos componentes correspondentes for igual.       O método de igualdade define a operação do operador de igualdade para <xref:System.Numerics.Quaternion>objetos.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "O primeiro quaternion para comparar."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois quaternions são iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Numerics.Quaternion.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Inequality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Inequality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Inequality(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve um valor que indica se duas quaternions não são iguais."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "O primeiro quaternion para comparar."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value1</code> and <code>value2</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Quaternion.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve o quaternion que resulta da multiplicando dois quaternions em conjunto."
  remarks: "A múltiplo método define a operação do operador multiplicação para <xref:System.Numerics.Quaternion>objetos.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Multiply (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion produto."
  overload: System.Numerics.Quaternion.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  id: op_Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Multiply(Quaternion,Single)
  nameWithType: Quaternion.op_Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve o quaternion que resulta da dimensionamento todos os componentes de uma quaternion especificada por um fator de escalar."
  remarks: "A múltiplo método define a operação do operador multiplicação para <xref:System.Numerics.Quaternion>objetos.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Multiply (System.Numerics.Quaternion value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion origem."
    - id: value2
      type: System.Single
      description: "O valor escalar."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion expandido."
  overload: System.Numerics.Quaternion.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Subtraction(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Subtraction(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Subtraction(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Subtrai um segundo quaternion do respetivo elemento correspondente num quaternion primeiro cada elemento."
  remarks: "O método de subtração define a operação do operador subtração para <xref:System.Numerics.Quaternion>objetos.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Subtraction (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion que contém os valores que resultam de subtrair cada elemento <code> value2 </code> do respetivo elemento correspondente no <code> value1 </code>."
  overload: System.Numerics.Quaternion.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  id: op_UnaryNegation(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_UnaryNegation(Quaternion)
  nameWithType: Quaternion.op_UnaryNegation(Quaternion)
  fullName: System.Numerics.Quaternion.op_UnaryNegation(Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Inverte o sinal de cada componente do quaternion."
  remarks: "O método UnaryNegation define a operação do operador unário negação para <xref:System.Numerics.Quaternion>objetos.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_UnaryNegation (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "Quaternion para negate."
    return:
      type: System.Numerics.Quaternion
      description: "Negated quaternion."
  overload: System.Numerics.Quaternion.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  id: Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Slerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Slerp(Quaternion,Quaternion,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Interpolates entre duas quaternions, utilizando spherical interpolação linear."
  syntax:
    content: public static System.Numerics.Quaternion Slerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);
    parameters:
    - id: quaternion1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: quaternion2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    - id: amount
      type: System.Single
      description: "O peso relativo do segundo quaternion de interpolação."
    return:
      type: System.Numerics.Quaternion
      description: "Interpolated quaternion."
  overload: System.Numerics.Quaternion.Slerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Subtract(Quaternion,Quaternion)
  nameWithType: Quaternion.Subtract(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Subtract(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Subtrai um segundo quaternion do respetivo elemento correspondente num quaternion primeiro cada elemento."
  syntax:
    content: public static System.Numerics.Quaternion Subtract (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "Quaternion primeiro."
    - id: value2
      type: System.Numerics.Quaternion
      description: "O segundo quaternion."
    return:
      type: System.Numerics.Quaternion
      description: "Quaternion que contém os valores que resultam de subtrair cada elemento <code> value2 </code> do respetivo elemento correspondente no <code> value1 </code>."
  overload: System.Numerics.Quaternion.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.ToString
  id: ToString
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: ToString()
  nameWithType: Quaternion.ToString()
  fullName: System.Numerics.Quaternion.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Devolve uma cadeia que representa esta quaternion."
  remarks: "Os valores numéricos na cadeia de devolvido são formatados utilizando as convenções da cultura atual. Por exemplo, para o idioma en-US, a cadeia devolvida pode aparecer como `{X:1.1 Y:2.2 Z:3.3 W:4.4}`."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A representação de cadeia deste quaternion."
  overload: System.Numerics.Quaternion.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.W
  id: W
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: W
  nameWithType: Quaternion.W
  fullName: System.Numerics.Quaternion.W
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "O componente de rotação do quaternion."
  syntax:
    content: public float W;
    return:
      type: System.Single
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.X
  id: X
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: X
  nameWithType: Quaternion.X
  fullName: System.Numerics.Quaternion.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "O valor X do componente de vetor do quaternion."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Y
  id: Y
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Y
  nameWithType: Quaternion.Y
  fullName: System.Numerics.Quaternion.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "O valor Y, o componente de vetor do quaternion."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Z
  id: Z
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Z
  nameWithType: Quaternion.Z
  fullName: System.Numerics.Quaternion.Z
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "O valor Z o componente de vetor do quaternion."
  syntax:
    content: public float Z;
    return:
      type: System.Single
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Quaternion(Vector3,Single)
  nameWithType: Quaternion.Quaternion(Vector3,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Vector3,Single)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Quaternion(Single,Single,Single,Single)
  nameWithType: Quaternion.Quaternion(Single,Single,Single,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Single,Single,Single,Single)
- uid: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Add(Quaternion,Quaternion)
  nameWithType: Quaternion.Add(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Add(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Concatenate(Quaternion,Quaternion)
  nameWithType: Quaternion.Concatenate(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Concatenate(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Conjugate(Quaternion)
  nameWithType: Quaternion.Conjugate(Quaternion)
  fullName: System.Numerics.Quaternion.Conjugate(Quaternion)
- uid: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromAxisAngle(Vector3,Single)
  nameWithType: Quaternion.CreateFromAxisAngle(Vector3,Single)
  fullName: System.Numerics.Quaternion.CreateFromAxisAngle(Vector3,Single)
- uid: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromRotationMatrix(Matrix4x4)
  nameWithType: Quaternion.CreateFromRotationMatrix(Matrix4x4)
  fullName: System.Numerics.Quaternion.CreateFromRotationMatrix(Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromYawPitchRoll(Single,Single,Single)
  nameWithType: Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
  fullName: System.Numerics.Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
- uid: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Divide(Quaternion,Quaternion)
  nameWithType: Quaternion.Divide(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Divide(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Dot(Quaternion,Quaternion)
  nameWithType: Quaternion.Dot(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Dot(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Equals(Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
  fullName: System.Numerics.Quaternion.Equals(Quaternion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Quaternion.Equals(System.Object)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Equals(Object)
  nameWithType: Quaternion.Equals(Object)
  fullName: System.Numerics.Quaternion.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Quaternion.GetHashCode
  parent: System.Numerics.Quaternion
  isExternal: false
  name: GetHashCode()
  nameWithType: Quaternion.GetHashCode()
  fullName: System.Numerics.Quaternion.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Quaternion.Identity
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: System.Numerics.Quaternion.Identity
- uid: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Inverse(Quaternion)
  nameWithType: Quaternion.Inverse(Quaternion)
  fullName: System.Numerics.Quaternion.Inverse(Quaternion)
- uid: System.Numerics.Quaternion.IsIdentity
  parent: System.Numerics.Quaternion
  isExternal: false
  name: IsIdentity
  nameWithType: Quaternion.IsIdentity
  fullName: System.Numerics.Quaternion.IsIdentity
- uid: System.Numerics.Quaternion.Length
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Length()
  nameWithType: Quaternion.Length()
  fullName: System.Numerics.Quaternion.Length()
- uid: System.Numerics.Quaternion.LengthSquared
  parent: System.Numerics.Quaternion
  isExternal: false
  name: LengthSquared()
  nameWithType: Quaternion.LengthSquared()
  fullName: System.Numerics.Quaternion.LengthSquared()
- uid: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Lerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Lerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Lerp(Quaternion,Quaternion,Single)
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Multiply(Quaternion,Single)
  nameWithType: Quaternion.Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Single)
- uid: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Negate(Quaternion)
  nameWithType: Quaternion.Negate(Quaternion)
  fullName: System.Numerics.Quaternion.Negate(Quaternion)
- uid: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Normalize(Quaternion)
  nameWithType: Quaternion.Normalize(Quaternion)
  fullName: System.Numerics.Quaternion.Normalize(Quaternion)
- uid: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Addition(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Addition(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Addition(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Division(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Division(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Division(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Equality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Equality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Equality(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Inequality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Inequality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Inequality(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Multiply(Quaternion,Single)
  nameWithType: Quaternion.op_Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Single)
- uid: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Subtraction(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Subtraction(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Subtraction(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_UnaryNegation(Quaternion)
  nameWithType: Quaternion.op_UnaryNegation(Quaternion)
  fullName: System.Numerics.Quaternion.op_UnaryNegation(Quaternion)
- uid: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Slerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Slerp(Quaternion,Quaternion,Single)
- uid: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Subtract(Quaternion,Quaternion)
  nameWithType: Quaternion.Subtract(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Subtract(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.ToString
  parent: System.Numerics.Quaternion
  isExternal: false
  name: ToString()
  nameWithType: Quaternion.ToString()
  fullName: System.Numerics.Quaternion.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Quaternion.W
  parent: System.Numerics.Quaternion
  isExternal: false
  name: W
  nameWithType: Quaternion.W
  fullName: System.Numerics.Quaternion.W
- uid: System.Numerics.Quaternion.X
  parent: System.Numerics.Quaternion
  isExternal: false
  name: X
  nameWithType: Quaternion.X
  fullName: System.Numerics.Quaternion.X
- uid: System.Numerics.Quaternion.Y
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Y
  nameWithType: Quaternion.Y
  fullName: System.Numerics.Quaternion.Y
- uid: System.Numerics.Quaternion.Z
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Z
  nameWithType: Quaternion.Z
  fullName: System.Numerics.Quaternion.Z
- uid: System.Numerics.Quaternion.#ctor*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion.Quaternion
- uid: System.Numerics.Quaternion.Add*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Add
  nameWithType: Quaternion.Add
- uid: System.Numerics.Quaternion.Concatenate*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Concatenate
  nameWithType: Quaternion.Concatenate
- uid: System.Numerics.Quaternion.Conjugate*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Conjugate
  nameWithType: Quaternion.Conjugate
- uid: System.Numerics.Quaternion.CreateFromAxisAngle*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromAxisAngle
  nameWithType: Quaternion.CreateFromAxisAngle
- uid: System.Numerics.Quaternion.CreateFromRotationMatrix*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromRotationMatrix
  nameWithType: Quaternion.CreateFromRotationMatrix
- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromYawPitchRoll
  nameWithType: Quaternion.CreateFromYawPitchRoll
- uid: System.Numerics.Quaternion.Divide*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Divide
  nameWithType: Quaternion.Divide
- uid: System.Numerics.Quaternion.Dot*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Dot
  nameWithType: Quaternion.Dot
- uid: System.Numerics.Quaternion.Equals*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Equals
  nameWithType: Quaternion.Equals
- uid: System.Numerics.Quaternion.GetHashCode*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: GetHashCode
  nameWithType: Quaternion.GetHashCode
- uid: System.Numerics.Quaternion.Identity*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Identity
  nameWithType: Quaternion.Identity
- uid: System.Numerics.Quaternion.Inverse*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Inverse
  nameWithType: Quaternion.Inverse
- uid: System.Numerics.Quaternion.IsIdentity*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: IsIdentity
  nameWithType: Quaternion.IsIdentity
- uid: System.Numerics.Quaternion.Length*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Length
  nameWithType: Quaternion.Length
- uid: System.Numerics.Quaternion.LengthSquared*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: LengthSquared
  nameWithType: Quaternion.LengthSquared
- uid: System.Numerics.Quaternion.Lerp*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Lerp
  nameWithType: Quaternion.Lerp
- uid: System.Numerics.Quaternion.Multiply*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Multiply
  nameWithType: Quaternion.Multiply
- uid: System.Numerics.Quaternion.Negate*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Negate
  nameWithType: Quaternion.Negate
- uid: System.Numerics.Quaternion.Normalize*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Normalize
  nameWithType: Quaternion.Normalize
- uid: System.Numerics.Quaternion.op_Addition*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Addition
  nameWithType: Quaternion.op_Addition
- uid: System.Numerics.Quaternion.op_Division*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Division
  nameWithType: Quaternion.op_Division
- uid: System.Numerics.Quaternion.op_Equality*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Equality
  nameWithType: Quaternion.op_Equality
- uid: System.Numerics.Quaternion.op_Inequality*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Inequality
  nameWithType: Quaternion.op_Inequality
- uid: System.Numerics.Quaternion.op_Multiply*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Multiply
  nameWithType: Quaternion.op_Multiply
- uid: System.Numerics.Quaternion.op_Subtraction*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Subtraction
  nameWithType: Quaternion.op_Subtraction
- uid: System.Numerics.Quaternion.op_UnaryNegation*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Quaternion.op_UnaryNegation
- uid: System.Numerics.Quaternion.Slerp*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Slerp
  nameWithType: Quaternion.Slerp
- uid: System.Numerics.Quaternion.Subtract*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Subtract
  nameWithType: Quaternion.Subtract
- uid: System.Numerics.Quaternion.ToString*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: ToString
  nameWithType: Quaternion.ToString
