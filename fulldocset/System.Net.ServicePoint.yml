### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePoint
  id: ServicePoint
  children:
  - System.Net.ServicePoint.Address
  - System.Net.ServicePoint.BindIPEndPointDelegate
  - System.Net.ServicePoint.Certificate
  - System.Net.ServicePoint.ClientCertificate
  - System.Net.ServicePoint.CloseConnectionGroup(System.String)
  - System.Net.ServicePoint.ConnectionLeaseTimeout
  - System.Net.ServicePoint.ConnectionLimit
  - System.Net.ServicePoint.ConnectionName
  - System.Net.ServicePoint.CurrentConnections
  - System.Net.ServicePoint.Expect100Continue
  - System.Net.ServicePoint.IdleSince
  - System.Net.ServicePoint.MaxIdleTime
  - System.Net.ServicePoint.ProtocolVersion
  - System.Net.ServicePoint.ReceiveBufferSize
  - System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePoint.SupportsPipelining
  - System.Net.ServicePoint.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
  type: Class
  summary: "Fornece gestão de ligação para ligações HTTP."
  remarks: "A classe de ServicePoint processa ligações a um recurso de Internet com base nas informações do anfitrião transmitidas no recurso Uniform Resource Identifier (URI). A ligação inicial ao recurso determina as informações que mantém o objeto de ServicePoint, que são partilhadas por todos os pedidos subsequentes para esse recurso.       Objetos de ServicePoint são geridos pelo <xref:System.Net.ServicePointManager>classe e são criados, se necessário, pelo <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName>método.</xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> </xref:System.Net.ServicePointManager> ServicePoint objetos nunca são criados diretamente, mas sempre criados e geridos por da <xref:System.Net.ServicePointManager>classe.</xref:System.Net.ServicePointManager> O número máximo de ServicePoint objetos que podem ser criadas é definido pelo <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>propriedade.</xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>       Cada objeto ServicePoint mantém a ligação a um recurso de Internet até ter sido inativo exceder o período de tempo especificado no <xref:System.Net.ServicePoint.MaxIdleTime%2A>propriedade.</xref:System.Net.ServicePoint.MaxIdleTime%2A> Quando um ServicePoint excede o <xref:System.Net.ServicePoint.MaxIdleTime%2A>valor, pode ser reciclado para outra ligação.</xref:System.Net.ServicePoint.MaxIdleTime%2A> O valor predefinido de <xref:System.Net.ServicePoint.MaxIdleTime%2A>é definido pelo <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>propriedade.</xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> </xref:System.Net.ServicePoint.MaxIdleTime%2A>       Quando o <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A>propriedade está definida como um valor diferente de -1 e depois de decorrido o período de tempo especificado, uma Active Directory ServicePoint a ligação foi fechada após-lo do pedido seguinte.</xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> Isto é útil para aplicações que não necessitam de ligações ativas que estão abertas indefinidamente, conforme forem por predefinição.      > [!NOTE] > Em condições de carga elevada, algumas aplicações poderão ficar sem threads livres no ThreadPool, que pode levar a que o desempenho do sistema fraco (por exemplo, tempos de transação de alta e variável). Consulte [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) para um número de alterações de configuração que pode tomar para corrigir este problema."
  example:
  - "The following code example creates a ServicePoint object that connects to the URI www.contoso.com.  \n  \n [!code-cpp[System.Net.ServicePoint#1](~/add/codesnippet/cpp/t-system.net.servicepoint_1.cpp)]\n [!code-vb[System.Net.ServicePoint#1](~/add/codesnippet/visualbasic/t-system.net.servicepoint_1.vb)]\n [!code-cs[System.Net.ServicePoint#1](~/add/codesnippet/csharp/t-system.net.servicepoint_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.CompilerServices.FriendAccessAllowed]

      public class ServicePoint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Address
  id: Address
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o Uniform Resource Identifier (URI) do servidor que isto <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto liga ao."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_3_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_3_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_3_1.cs)]"
  syntax:
    content: public Uri Address { get; }
    return:
      type: System.Uri
      description: "Uma instância do <xref:System.Uri>classe que contém o URI do servidor de Internet que este <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto liga ao.</xref:System.Uri>"
  overload: System.Net.ServicePoint.Address*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref href=&quot;System.Net.ServicePoint&quot;> </xref> está no modo de anfitrião."
  platform:
  - net462
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  id: BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Especifica o delegado para associar uma local <xref:System.Net.IPEndPoint>com um <xref href=&quot;System.Net.ServicePoint&quot;> </xref>.</xref:System.Net.IPEndPoint>"
  remarks: "Alguns técnicas de balanceamento de carga requerem um cliente para utilizar um específico local IP endereço e número de porta, vez <xref:System.Net.IPAddress.Any?displayProperty=fullName>(ou <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName>para o protocolo IP versão 6) e uma porta efémeras</xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> </xref:System.Net.IPAddress.Any?displayProperty=fullName> O BindIPEndPointDelegate pode satisfazer este requisito."
  syntax:
    content: public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }
    return:
      type: System.Net.BindIPEndPoint
      description: "Um delegado que força uma <xref href=&quot;System.Net.ServicePoint&quot;> </xref> para utilizar um determinado local Internet Protocol (IP) endereço e número de porta. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.BindIPEndPointDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Certificate
  id: Certificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o certificado recebido para este <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto."
  remarks: "Embora um <xref:System.Net.ServicePoint>objeto pode efetuar várias ligações a um recurso de Internet, pode manter a apenas um certificado.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_1_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_1_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_1_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Uma instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe que contém o certificado de segurança recebido para este <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto."
  overload: System.Net.ServicePoint.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ClientCertificate
  id: ClientCertificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o certificado de cliente última enviado para o servidor."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_19_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_19_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_19_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto que contém os valores públicos do certificado de cliente última enviada para o servidor."
  overload: System.Net.ServicePoint.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  id: CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Remove o grupo de ligação especificada deste <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto."
  remarks: "Grupos de ligação associar um conjunto de pedidos com uma ligação específica ou um conjunto de ligações. Este método Remove e fecha todas as ligações que pertencem ao grupo de ligação especificada."
  syntax:
    content: public bool CloseConnectionGroup (string connectionGroupName);
    parameters:
    - id: connectionGroupName
      type: System.String
      description: "O nome do grupo de ligação que contém as ligações para fechar e remover este ponto de serviço."
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que indica se o grupo de ligação foi fechado.</xref:System.Boolean>"
  overload: System.Net.ServicePoint.CloseConnectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  id: ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o número de milissegundos após o qual um Active Directory <xref href=&quot;System.Net.ServicePoint&quot;> </xref> a ligação foi fechada."
  remarks: "Pode utilizar esta propriedade para garantir que um <xref:System.Net.ServicePoint>ligações ativas do objeto não permanecer abertas indefinidamente.</xref:System.Net.ServicePoint> Esta propriedade destina-se cenários em que as ligações devem ser removidas e restabelecer periodicamente, como cenários de balanceamento de carga.       Por predefinição, quando <xref:System.Net.FtpWebRequest.KeepAlive%2A>é `true` para um pedido, o <xref:System.Net.ServicePoint.MaxIdleTime%2A>propriedade define o tempo limite para fecho <xref:System.Net.ServicePoint>ligações devido a inatividade.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.FtpWebRequest.KeepAlive%2A> Se o <xref:System.Net.ServicePoint>tem ligações ativas, <xref:System.Net.ServicePoint.MaxIdleTime%2A>não tem qualquer efeito e as ligações permanecerem abertas indefinidamente.</xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePoint>       Quando a propriedade ConnectionLeaseTimeout está definida como um valor diferente de decorrer-1 e após o período de tempo especificado, um Active Directory <xref:System.Net.ServicePoint>a ligação foi fechada depois de a manutenção de um pedido, definindo <xref:System.Net.FtpWebRequest.KeepAlive%2A>para `false` esse pedido.</xref:System.Net.FtpWebRequest.KeepAlive%2A> </xref:System.Net.ServicePoint>       Definir este valor afeta todas as ligações geridas pelo <xref:System.Net.ServicePoint>objeto.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_15_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_15_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_15_1.cpp)]"
  syntax:
    content: public int ConnectionLeaseTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>que especifica o número de milissegundos que um Active Directory <xref href=&quot;System.Net.ServicePoint&quot;> </xref> ligação permanece aberta.</xref:System.Int32> A predefinição é de -1, o que permite um Active Directory <xref href=&quot;System.Net.ServicePoint&quot;> </xref> ligados de ligação para se manter indefinidamente. Defina esta propriedade como 0 para forçar <xref href=&quot;System.Net.ServicePoint&quot;> </xref> ligações para fechar depois de um pedido de manutenção."
  overload: System.Net.ServicePoint.ConnectionLeaseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para uma operação de definição é um número negativo inferior a -1."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLimit
  id: ConnectionLimit
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o número máximo de ligações permitido neste <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto."
  remarks: "A propriedade ConnectionLimit define o número máximo de ligações que o <xref:System.Net.ServicePoint>objeto pode tornar a um recurso de Internet.</xref:System.Net.ServicePoint> O valor da propriedade ConnectionLimit é definido para o valor da <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>propriedade quando o <xref:System.Net.ServicePoint>objeto é criado; subsequente alterações <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>não tem qualquer efeito no existente <xref:System.Net.ServicePoint>objetos.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> </xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the ConnectionLimit property to check the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to the specified Uniform Resource Identifier (URI).  \n  \n [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_6_1.cpp)]\n [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_6_1.vb)]\n [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_6_1.cs)]"
  syntax:
    content: public int ConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de ligações permitido neste <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto."
  overload: System.Net.ServicePoint.ConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O limite de ligação é igual ou menor que 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionName
  id: ConnectionName
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o nome da ligação."
  remarks: "Se o <xref:System.Net.ServicePoint>objeto foi construído com um <xref:System.Uri>objeto (o <xref:System.Net.ServicePointManager.FindServicePoint%2A>ou <xref:System.Net.ServicePointManager.FindServicePoint%2A>métodos, por exemplo), em seguida, a propriedade ConnectionName representa o <xref:System.Uri.Scheme%2A>propriedade do <xref:System.Uri>objeto utilizado.</xref:System.Uri> </xref:System.Uri.Scheme%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Uri> </xref:System.Net.ServicePoint>       Se o <xref:System.Net.ServicePoint>objeto foi construído a partir de um anfitrião de rede e a porta, a propriedade ConnectionName contém uma cadeia que representa o anfitrião e a rede porta</xref:System.Net.ServicePoint> Se a propriedade ConnectionName é definida quando construídas a partir de um anfitrião e a porta, apenas <xref:System.Net.WebRequest>objetos com o mesmo <xref:System.Net.WebRequest.ConnectionGroupName%2A>valor pode utilizar este <xref:System.Net.ServicePoint>objeto.</xref:System.Net.ServicePoint> </xref:System.Net.WebRequest.ConnectionGroupName%2A> </xref:System.Net.WebRequest>"
  example:
  - >-
    [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_0_1.cpp)]
     [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_0_1.vb)]
     [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_0_1.cs)]
  syntax:
    content: public string ConnectionName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>que representa o nome da ligação.</xref:System.String>"
  overload: System.Net.ServicePoint.ConnectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CurrentConnections
  id: CurrentConnections
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o número de ligações abertas associada a este <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto."
  remarks: "A propriedade CurrentConnections contém o número de ligações de Internet abra associada a este <xref:System.Net.ServicePoint>objeto.</xref:System.Net.ServicePoint> O valor de CurrentConnections não pode exceder que <xref:System.Net.ServicePoint.ConnectionLimit%2A>.</xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example uses the CurrentConnections property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_2_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_2_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_2_1.cs)]"
  syntax:
    content: public int CurrentConnections { get; }
    return:
      type: System.Int32
      description: "O número de ligações abertas associada a este <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto."
  overload: System.Net.ServicePoint.CurrentConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que determina se 100-Continue o comportamento é utilizado.</xref:System.Boolean>"
  remarks: "Quando esta propriedade está definida como `true`, pedidos de cliente que utilizam o `POST` método esperava receber 100-Continue a resposta do servidor para indicar que o cliente deve enviar os dados a ser publicado. Este mecanismo permite aos clientes evitar o envio de grandes quantidades de dados através da rede quando o servidor, com base nos cabeçalhos de pedido, pretende rejeitar o pedido.       Por exemplo, suponha a propriedade Expect100Continue é `false`. Quando o pedido é enviado para o servidor, inclui os dados. Se, depois de ler os cabeçalhos de pedido, o servidor requer autenticação e envia uma resposta 401, o cliente tem reenviar os dados com os cabeçalhos de autenticação adequada.       Se a propriedade Expect100Continue for `true`, são enviados os cabeçalhos de pedido para o servidor. Se o servidor não rejeitou o pedido, envia um 100-Continue a resposta sinalização que os dados podem ser transmitidos. Se, como no exemplo anterior, o servidor requer autenticação, envia a resposta 401 e o cliente desnecessariamente não transmitiu os dados.       Alterar o valor desta propriedade não afeta as ligações existentes. Apenas as novas ligações criadas após a alteração são afetadas.       O Expect 100-Continue comportamento totalmente descrito na secção de IETF RFC 2616 10.1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_4_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_4_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_4_1.cs)]"
  syntax:
    content: public bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>esperar 100-Continue respostas para <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref> pedidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.IdleSince
  id: IdleSince
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém a data e hora que o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecto estava ligado pela última vez num anfitrião."
  remarks: "A propriedade IdleSince regista a última data e hora em que um ponto de serviço foi desligado do anfitrião. Quando a diferença entre a hora atual e IdleSince excede o valor de <xref:System.Net.ServicePoint.MaxIdleTime%2A>, a <xref:System.Net.ServicePoint>objeto está disponível para a Reciclagem para outra ligação.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A>"
  example:
  - "The following code example uses the IdleSince property to set and retrieve the date and time that the <xref:System.Net.ServicePoint> object was last connected to a host.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_7_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_7_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_7_1.cs)]"
  syntax:
    content: public DateTime IdleSince { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que contém a data e hora em que o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecto estava ligado pela última vez.</xref:System.DateTime>"
  overload: System.Net.ServicePoint.IdleSince*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.MaxIdleTime
  id: MaxIdleTime
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define a quantidade de tempo associada a uma ligação a <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto pode permanecer inativo antes da ligação está fechada."
  remarks: "Pode definir MaxIdleTime <xref:System.Threading.Timeout.Infinite?displayProperty=fullName>para indicar que uma ligação associada a <xref:System.Net.ServicePoint>objeto nunca deve tempo limite.</xref:System.Net.ServicePoint> </xref:System.Threading.Timeout.Infinite?displayProperty=fullName>       O valor predefinido da propriedade MaxIdleTime é o valor da <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>propriedade quando o <xref:System.Net.ServicePoint>objeto é criado.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> As alterações subsequentes para o <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>propriedade não tem qualquer efeito no existente <xref:System.Net.ServicePoint>objetos.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>       Quando o MaxIdleTime para uma ligação associada com um <xref:System.Net.ServicePoint>for excedido, a ligação permanece aberta até que a aplicação tenta utilizar a ligação.</xref:System.Net.ServicePoint> Nessa altura, o Framework fecha a ligação e cria uma nova ligação para o anfitrião remoto."
  example:
  - "The following code example uses the MaxIdleTime property to set and retrieve the <xref:System.Net.ServicePoint> idle time.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_11_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_11_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_11_1.cs)]"
  syntax:
    content: public int MaxIdleTime { get; set; }
    return:
      type: System.Int32
      description: "O período de tempo, em milissegundos, que uma ligação associada a <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto pode permanecer inativo antes de está fechada e reutilizada para outra ligação."
  overload: System.Net.ServicePoint.MaxIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxIdleTime está definido como inferior a &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; ou superior a &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePoint.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém a versão do protocolo HTTP que o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> utiliza de objeto."
  remarks: "As versões de protocolo HTTP são HTTP/1.0 e HTTP/1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_22_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_22_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_22_1.cs)]"
  syntax:
    content: public virtual Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "A <xref:System.Version>objeto que contém a versão do protocolo HTTP que o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> utiliza de objeto.</xref:System.Version>"
  overload: System.Net.ServicePoint.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o tamanho da memória intermédia receção do socket utilizado por este <xref href=&quot;System.Net.ServicePoint&quot;> </xref>."
  remarks: "Para obter mais informações, consulte <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>.</xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_9_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_9_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_9_1.cpp)]"
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>que contém o tamanho, em bytes, da memória intermédia de receção.</xref:System.Int32> A predefinição é 8192."
  overload: System.Net.ServicePoint.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para uma operação de definição é superior ao <xref:System.Int32>.</xref:System.Int32>"
  platform:
  - net462
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Ativa ou desativa a opção de ligação keep-alive de uma ligação de TCP."
  remarks: "Uma aplicação pode pedir que um fornecedor de TCP/IP ativar a utilização de pacotes ligação keep-alive de uma ligação de TCP. A predefinição é que a utilização de pacotes ligação keep-alive de uma ligação de TCP está desativada.       As predefinições quando um socket TCP é inicializado tempo limite de conjuntos da ligação keep-alive 2 horas e o intervalo de ligação keep-alive como 1 segundo. O `keepAliveTime` parâmetro especifica o tempo limite, em milissegundos, com nenhuma atividade até que seja enviado o primeiro pacote ligação keep-alive. O `keepAliveInterval` parâmetro especifica o intervalo, em milissegundos, entre quando são enviados pacotes de ligação keep-alive sucessivas se não for recebida sem confirmação. O número de sondas ligação keep-alive não pode ser alterado e é definido para 10.       Se uma ligação de TCP é removida como resultado da keep-alives, um <xref:System.Net.Sockets.SocketError>de <xref:System.Net.Sockets.SocketError>é devolvido para as chamadas em curso no socket, e as chamadas subsequentes falharão com um <xref:System.Net.Sockets.SocketError>dos <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "Se definido como true, em seguida, a TCP ligação keep-alive opção a utilizar uma ligação TCP será ativado utilizando especificado `keepAliveTime` e `keepAliveInterval` valores.       Se definido como FALSO, em seguida, a opção de ligação keep-alive de TCP está desativada e os restantes parâmetros são ignorados.       O valor predefinido é falso."
    - id: keepAliveTime
      type: System.Int32
      description: "Especifica o tempo limite, em milissegundos, com nenhuma atividade até que seja enviado o primeiro pacote ligação keep-alive.       O valor tem de ser maior que 0.  Se um valor menor ou igual a zero é transmitido um <xref:System.ArgumentOutOfRangeException>é emitida.</xref:System.ArgumentOutOfRangeException>"
    - id: keepAliveInterval
      type: System.Int32
      description: "Especifica o intervalo, em milissegundos, entre quando são enviados pacotes de ligação keep-alive sucessivas se não for recebida sem confirmação.       O valor tem de ser maior que 0.  Se um valor menor ou igual a zero é transmitido um <xref:System.ArgumentOutOfRangeException>é emitida.</xref:System.ArgumentOutOfRangeException>"
  overload: System.Net.ServicePoint.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para <code> keepAliveTime </code> ou <code> keepAliveInterval </code> parâmetro é menor ou igual a 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.SupportsPipelining
  id: SupportsPipelining
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Indica se o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto suporta ligações encaminhadas."
  remarks: "Pipelines permite que os clientes enviar pedidos múltiplos através de uma ligação persistente sem aguardar por cada resposta do servidor. O servidor envia as respostas pela mesma ordem que foram recebidos os pedidos.       Pipelines é descrita em detalhe no IETF RFC 2616 secção 8.1.2.2."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_18_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_18_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_18_1.cs)]"
  syntax:
    content: public bool SupportsPipelining { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto suporta ligações encaminhadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.SupportsPipelining*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que determina se o algoritmo de Nagle é utilizado em ligações geridas por este <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objeto.</xref:System.Boolean>"
  remarks: "O algoritmo de Nagle é utilizado para a memória intermédia pequenos pacotes de dados e transmite-los como um pacote único. Este processo, referido como &quot;nagling&quot;, é amplamente utilizado dado que reduz o número de pacotes transmitidos e reduz a sobrecarga por pacote.       Alterar o valor desta propriedade não afeta as ligações existentes. Apenas as novas ligações criadas após a alteração são afetadas.       O algoritmo de Nagle totalmente está descrito na 896 de RFC da IETF."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_16_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_16_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_16_1.cs)]"
  syntax:
    content: public bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para utilizar o algoritmo de Nagle; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.ServicePoint.Address
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
- uid: System.Net.BindIPEndPoint
  parent: System.Net
  isExternal: false
  name: BindIPEndPoint
  nameWithType: BindIPEndPoint
  fullName: System.Net.BindIPEndPoint
- uid: System.Net.ServicePoint.Certificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.ServicePoint.ClientCertificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePoint.ConnectionLimit
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Net.ServicePoint.MaxIdleTime
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.ServicePoint.ReceiveBufferSize
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
- uid: System.Net.ServicePoint.SupportsPipelining
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
- uid: System.Net.ServicePoint.Address*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
- uid: System.Net.ServicePoint.BindIPEndPointDelegate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
- uid: System.Net.ServicePoint.Certificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
- uid: System.Net.ServicePoint.ClientCertificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup
  nameWithType: ServicePoint.CloseConnectionGroup
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
- uid: System.Net.ServicePoint.ConnectionLimit*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince*
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
- uid: System.Net.ServicePoint.MaxIdleTime*
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
- uid: System.Net.ServicePoint.ReceiveBufferSize*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePoint.SetTcpKeepAlive
- uid: System.Net.ServicePoint.SupportsPipelining*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm*
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
