### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._Assembly
  id: _Assembly
  children:
  - System.Runtime.InteropServices._Assembly.CodeBase
  - System.Runtime.InteropServices._Assembly.CreateInstance(System.String)
  - System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)
  - System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Runtime.InteropServices._Assembly.EntryPoint
  - System.Runtime.InteropServices._Assembly.Equals(System.Object)
  - System.Runtime.InteropServices._Assembly.EscapedCodeBase
  - System.Runtime.InteropServices._Assembly.Evidence
  - System.Runtime.InteropServices._Assembly.FullName
  - System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetExportedTypes
  - System.Runtime.InteropServices._Assembly.GetFile(System.String)
  - System.Runtime.InteropServices._Assembly.GetFiles
  - System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetHashCode
  - System.Runtime.InteropServices._Assembly.GetLoadedModules
  - System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)
  - System.Runtime.InteropServices._Assembly.GetManifestResourceNames
  - System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)
  - System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)
  - System.Runtime.InteropServices._Assembly.GetModule(System.String)
  - System.Runtime.InteropServices._Assembly.GetModules
  - System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetName
  - System.Runtime.InteropServices._Assembly.GetName(System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.InteropServices._Assembly.GetReferencedAssemblies
  - System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  - System.Runtime.InteropServices._Assembly.GetType
  - System.Runtime.InteropServices._Assembly.GetType(System.String)
  - System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)
  - System.Runtime.InteropServices._Assembly.GetTypes
  - System.Runtime.InteropServices._Assembly.GlobalAssemblyCache
  - System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])
  - System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  - System.Runtime.InteropServices._Assembly.Location
  - System.Runtime.InteropServices._Assembly.ModuleResolve
  - System.Runtime.InteropServices._Assembly.ToString
  langs:
  - csharp
  name: _Assembly
  nameWithType: _Assembly
  fullName: System.Runtime.InteropServices._Assembly
  type: Interface
  summary: "Exposes the public members of the &lt;xref:System.Reflection.Assembly?displayProperty=fullName&gt; class to unmanaged code."
  remarks: "This interface is for access to managed classes from unmanaged code, and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.Assembly?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("17156360-2f1a-384a-bc52-fde93c215c5b")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.Assembly))]

      public interface _Assembly
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.CodeBase
  id: CodeBase
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: CodeBase
  nameWithType: _Assembly.CodeBase
  fullName: System.Runtime.InteropServices._Assembly.CodeBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=fullName&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=fullName> property gets the location of the assembly as specified originally, for example, in an <xref:System.Reflection.AssemblyName> object."
  syntax:
    content: public string CodeBase { get; }
    return:
      type: System.String
      description: "The location of the assembly as specified originally."
  overload: System.Runtime.InteropServices._Assembly.CodeBase*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.CreateInstance(System.String)
  id: CreateInstance(System.String)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: CreateInstance(String)
  nameWithType: _Assembly.CreateInstance(String)
  fullName: System.Runtime.InteropServices._Assembly.CreateInstance(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search."
  syntax:
    content: public object CreateInstance (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "The <xref:System.Type.FullName%2A?displayProperty=fullName> of the type to locate."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.CreateInstance*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)
  id: CreateInstance(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: CreateInstance(String,Boolean)
  nameWithType: _Assembly.CreateInstance(String,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.CreateInstance(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search."
  syntax:
    content: public object CreateInstance (string typeName, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: "The <xref:System.Type.FullName%2A?displayProperty=fullName> of the type to locate."
    - id: ignoreCase
      type: System.Boolean
      description: "\n     to ignore the case of the type name; otherwise, ."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.CreateInstance*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: _Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Runtime.InteropServices._Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes."
  syntax:
    content: public object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);
    parameters:
    - id: typeName
      type: System.String
      description: "The <xref:System.Type.FullName%2A?displayProperty=fullName> of the type to locate."
    - id: ignoreCase
      type: System.Boolean
      description: "\n     to ignore the case of the type name; otherwise, ."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask that affects how the search is conducted. The value is a combination of bit flags from ."
    - id: binder
      type: System.Reflection.Binder
      description: "An object that enables the binding, coercion of argument types, invocation of members, and retrieval of  objects via reflection. If `binder` is , the default binder is used."
    - id: args
      type: System.Object[]
      description: "An array of type  containing the arguments to be passed to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to be invoked. If the default constructor is desired, `args` must be an empty array or ."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "An instance of  used to govern the coercion of types. If this is , the  for the current thread is used. (This is necessary to convert a  that represents 1000 to a  value, for example, since 1000 is represented differently by different cultures.)"
    - id: activationAttributes
      type: System.Object[]
      description: "An array of type  containing one or more activation attributes that can participate in the activation. An example of an activation attribute is:       URLAttribute(http://hostname/appname/objectURI)"
    return:
      type: System.Object
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.CreateInstance*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.EntryPoint
  id: EntryPoint
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: EntryPoint
  nameWithType: _Assembly.EntryPoint
  fullName: System.Runtime.InteropServices._Assembly.EntryPoint
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.EntryPoint%2A&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.EntryPoint%2A> property gets the entry point of this assembly."
  syntax:
    content: public System.Reflection.MethodInfo EntryPoint { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "A &lt;xref:System.Reflection.MethodInfo&gt; object that represents the entry point of this assembly. If no entry point is found (for example, the assembly is a DLL), <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> is returned."
  overload: System.Runtime.InteropServices._Assembly.EntryPoint*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _Assembly.Equals(Object)
  fullName: System.Runtime.InteropServices._Assembly.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "The <xref:System.Object> to compare with the current <xref:System.Object>."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.EscapedCodeBase
  id: EscapedCodeBase
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: EscapedCodeBase
  nameWithType: _Assembly.EscapedCodeBase
  fullName: System.Runtime.InteropServices._Assembly.EscapedCodeBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.EscapedCodeBase%2A&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.EscapedCodeBase%2A> property gets the URI, including escape characters, that represents the codebase."
  syntax:
    content: public string EscapedCodeBase { get; }
    return:
      type: System.String
      description: "A Uniform Resource Identifier (URI) with escape characters."
  overload: System.Runtime.InteropServices._Assembly.EscapedCodeBase*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.Evidence
  id: Evidence
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: Evidence
  nameWithType: _Assembly.Evidence
  fullName: System.Runtime.InteropServices._Assembly.Evidence
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.Evidence%2A&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.Evidence%2A> property gets the evidence for this assembly."
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; }
    return:
      type: System.Security.Policy.Evidence
      description: "An <see cref=&quot;T:System.Security.Policy.Evidence&quot;></see> object for this assembly."
  overload: System.Runtime.InteropServices._Assembly.Evidence*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.FullName
  id: FullName
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: FullName
  nameWithType: _Assembly.FullName
  fullName: System.Runtime.InteropServices._Assembly.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.FullName%2A&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.FullName%2A> property gets the display name of the assembly."
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "The display name of the assembly."
  overload: System.Runtime.InteropServices._Assembly.FullName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _Assembly.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly."
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "This argument is ignored for objects of type <xref:System.Reflection.Assembly>."
    return:
      type: System.Object[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetCustomAttributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Assembly.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly."
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The <xref:System.Type> for which the custom attributes are to be returned."
    - id: inherit
      type: System.Boolean
      description: "This argument is ignored for objects of type <xref:System.Reflection.Assembly>."
    return:
      type: System.Object[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetCustomAttributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetExportedTypes
  id: GetExportedTypes
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetExportedTypes()
  nameWithType: _Assembly.GetExportedTypes()
  fullName: System.Runtime.InteropServices._Assembly.GetExportedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetExportedTypes%2A&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetExportedTypes%2A> property gets the exported types defined in this assembly that are visible outside the assembly."
  syntax:
    content: public Type[] GetExportedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetExportedTypes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetFile(System.String)
  id: GetFile(System.String)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetFile(String)
  nameWithType: _Assembly.GetFile(String)
  fullName: System.Runtime.InteropServices._Assembly.GetFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetFile%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetFile%2A> method gets a <xref:System.IO.FileStream> for the specified file in the file table of the manifest of this assembly."
  syntax:
    content: public System.IO.FileStream GetFile (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the specified file. Do not include the path to the file."
    return:
      type: System.IO.FileStream
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetFile*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetFiles
  id: GetFiles
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetFiles()
  nameWithType: _Assembly.GetFiles()
  fullName: System.Runtime.InteropServices._Assembly.GetFiles()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetFiles%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest."
  syntax:
    content: public System.IO.FileStream[] GetFiles ();
    parameters: []
    return:
      type: System.IO.FileStream[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetFiles*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)
  id: GetFiles(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetFiles(Boolean)
  nameWithType: _Assembly.GetFiles(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetFiles(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetFiles%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest, specifying whether to include resource modules."
  syntax:
    content: public System.IO.FileStream[] GetFiles (bool getResourceModules);
    parameters:
    - id: getResourceModules
      type: System.Boolean
      description: "\n     to include resource modules; otherwise, ."
    return:
      type: System.IO.FileStream[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetFiles*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _Assembly.GetHashCode()
  fullName: System.Runtime.InteropServices._Assembly.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table."
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetLoadedModules
  id: GetLoadedModules
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetLoadedModules()
  nameWithType: _Assembly.GetLoadedModules()
  fullName: System.Runtime.InteropServices._Assembly.GetLoadedModules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly."
  syntax:
    content: public System.Reflection.Module[] GetLoadedModules ();
    parameters: []
    return:
      type: System.Reflection.Module[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetLoadedModules*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)
  id: GetLoadedModules(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetLoadedModules(Boolean)
  nameWithType: _Assembly.GetLoadedModules(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetLoadedModules(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly, specifying whether to include resource modules."
  syntax:
    content: public System.Reflection.Module[] GetLoadedModules (bool getResourceModules);
    parameters:
    - id: getResourceModules
      type: System.Boolean
      description: "\n     to include resource modules; otherwise, ."
    return:
      type: System.Reflection.Module[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetLoadedModules*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)
  id: GetManifestResourceInfo(System.String)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetManifestResourceInfo(String)
  nameWithType: _Assembly.GetManifestResourceInfo(String)
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetManifestResourceInfo%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method returns information about how the given resource has been persisted."
  syntax:
    content: public System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);
    parameters:
    - id: resourceName
      type: System.String
      description: "The case-sensitive name of the resource."
    return:
      type: System.Reflection.ManifestResourceInfo
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetManifestResourceInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceNames
  id: GetManifestResourceNames
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetManifestResourceNames()
  nameWithType: _Assembly.GetManifestResourceNames()
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetManifestResourceNames%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method returns the names of all the resources in this assembly."
  syntax:
    content: public string[] GetManifestResourceNames ();
    parameters: []
    return:
      type: System.String[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetManifestResourceNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)
  id: GetManifestResourceStream(System.String)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetManifestResourceStream(String)
  nameWithType: _Assembly.GetManifestResourceStream(String)
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource from this assembly."
  syntax:
    content: public System.IO.Stream GetManifestResourceStream (string name);
    parameters:
    - id: name
      type: System.String
      description: "The case-sensitive name of the manifest resource being requested."
    return:
      type: System.IO.Stream
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetManifestResourceStream*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)
  id: GetManifestResourceStream(System.Type,System.String)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetManifestResourceStream(Type,String)
  nameWithType: _Assembly.GetManifestResourceStream(Type,String)
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly."
  syntax:
    content: public System.IO.Stream GetManifestResourceStream (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: "The type whose namespace is used to scope the manifest resource name."
    - id: name
      type: System.String
      description: "The case-sensitive name of the manifest resource being requested."
    return:
      type: System.IO.Stream
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetManifestResourceStream*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetModule(System.String)
  id: GetModule(System.String)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetModule(String)
  nameWithType: _Assembly.GetModule(String)
  fullName: System.Runtime.InteropServices._Assembly.GetModule(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetModule%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetModule%2A> method gets the specified module in this assembly."
  syntax:
    content: public System.Reflection.Module GetModule (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the module being requested."
    return:
      type: System.Reflection.Module
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetModule*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetModules
  id: GetModules
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetModules()
  nameWithType: _Assembly.GetModules()
  fullName: System.Runtime.InteropServices._Assembly.GetModules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetModules%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly."
  syntax:
    content: public System.Reflection.Module[] GetModules ();
    parameters: []
    return:
      type: System.Reflection.Module[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetModules*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)
  id: GetModules(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetModules(Boolean)
  nameWithType: _Assembly.GetModules(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetModules(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetModules%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly, specifying whether to include resource modules."
  syntax:
    content: public System.Reflection.Module[] GetModules (bool getResourceModules);
    parameters:
    - id: getResourceModules
      type: System.Boolean
      description: "\n     to include resource modules; otherwise, ."
    return:
      type: System.Reflection.Module[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetModules*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetName
  id: GetName
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetName()
  nameWithType: _Assembly.GetName()
  fullName: System.Runtime.InteropServices._Assembly.GetName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetName%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly."
  syntax:
    content: public System.Reflection.AssemblyName GetName ();
    parameters: []
    return:
      type: System.Reflection.AssemblyName
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetName(System.Boolean)
  id: GetName(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetName(Boolean)
  nameWithType: _Assembly.GetName(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetName(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetName%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly, setting the codebase as specified by the `copiedName` parameter."
  syntax:
    content: public System.Reflection.AssemblyName GetName (bool copiedName);
    parameters:
    - id: copiedName
      type: System.Boolean
      description: "\n     to set the <xref:System.Reflection.Assembly.CodeBase%2A> to the location of the assembly after it was shadow copied;  to set <xref:System.Reflection.Assembly.CodeBase%2A> to the original location."
    return:
      type: System.Reflection.AssemblyName
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: _Assembly.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.InteropServices._Assembly.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetObjectData%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetObjectData%2A> method gets serialization information with all of the data needed to reinstantiate this assembly."
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The object to be populated with serialization information."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The destination context of the serialization."
  overload: System.Runtime.InteropServices._Assembly.GetObjectData*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetReferencedAssemblies
  id: GetReferencedAssemblies
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetReferencedAssemblies()
  nameWithType: _Assembly.GetReferencedAssemblies()
  fullName: System.Runtime.InteropServices._Assembly.GetReferencedAssemblies()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method gets the <xref:System.Reflection.AssemblyName> objects for all the assemblies referenced by this assembly."
  syntax:
    content: public System.Reflection.AssemblyName[] GetReferencedAssemblies ();
    parameters: []
    return:
      type: System.Reflection.AssemblyName[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetReferencedAssemblies*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  id: GetSatelliteAssembly(System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetSatelliteAssembly(CultureInfo)
  nameWithType: _Assembly.GetSatelliteAssembly(CultureInfo)
  fullName: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the satellite assembly for the specified culture."
  syntax:
    content: public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The specified culture."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  id: GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetSatelliteAssembly(CultureInfo,Version)
  nameWithType: _Assembly.GetSatelliteAssembly(CultureInfo,Version)
  fullName: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(CultureInfo,Version)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the specified version of the satellite assembly for the specified culture."
  syntax:
    content: public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The specified culture."
    - id: version
      type: System.Version
      description: "The version of the satellite assembly."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetType
  id: GetType
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetType()
  nameWithType: _Assembly.GetType()
  fullName: System.Runtime.InteropServices._Assembly.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance."
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetType(System.String)
  id: GetType(System.String)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetType(String)
  nameWithType: _Assembly.GetType(String)
  fullName: System.Runtime.InteropServices._Assembly.GetType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetType%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance."
  syntax:
    content: public Type GetType (string name);
    parameters:
    - id: name
      type: System.String
      description: "The full name of the type."
    return:
      type: System.Type
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: _Assembly.GetType(String,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetType(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetType%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance and optionally throws an exception if the type is not found."
  syntax:
    content: public Type GetType (string name, bool throwOnError);
    parameters:
    - id: name
      type: System.String
      description: "The full name of the type."
    - id: throwOnError
      type: System.Boolean
      description: "\n     to throw an exception if the type is not found;  to return ."
    return:
      type: System.Type
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: _Assembly.GetType(String,Boolean,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetType%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found."
  syntax:
    content: public Type GetType (string name, bool throwOnError, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "The full name of the type."
    - id: throwOnError
      type: System.Boolean
      description: "\n     to throw an exception if the type is not found;  to return ."
    - id: ignoreCase
      type: System.Boolean
      description: "\n     to ignore the case of the type name; otherwise, ."
    return:
      type: System.Type
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GetTypes
  id: GetTypes
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GetTypes()
  nameWithType: _Assembly.GetTypes()
  fullName: System.Runtime.InteropServices._Assembly.GetTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetTypes%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetTypes%2A> method gets the types defined in this assembly."
  syntax:
    content: public Type[] GetTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.GetTypes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.GlobalAssemblyCache
  id: GlobalAssemblyCache
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: GlobalAssemblyCache
  nameWithType: _Assembly.GlobalAssemblyCache
  fullName: System.Runtime.InteropServices._Assembly.GlobalAssemblyCache
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GlobalAssemblyCache%2A&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> property gets a value indicating whether the assembly was loaded from the global assembly cache."
  syntax:
    content: public bool GlobalAssemblyCache { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the assembly was loaded from the global assembly cache; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Assembly.GlobalAssemblyCache*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _Assembly.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.IsDefined%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.IsDefined%2A> method indicates whether a custom attribute identified by the specified <xref:System.Type> is defined."
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The <xref:System.Type> of the custom attribute to be checked for this assembly."
    - id: inherit
      type: System.Boolean
      description: "This argument is ignored for objects of this type."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.IsDefined*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])
  id: LoadModule(System.String,System.Byte[])
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: LoadModule(String,Byte[])
  nameWithType: _Assembly.LoadModule(String,Byte[])
  fullName: System.Runtime.InteropServices._Assembly.LoadModule(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.LoadModule%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file."
  syntax:
    content: public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);
    parameters:
    - id: moduleName
      type: System.String
      description: "Name of the module. Must correspond to a file name in this assembly&quot;s manifest."
    - id: rawModule
      type: System.Byte[]
      description: "A byte array that is a COFF-based image containing an emitted module, or a resource."
    return:
      type: System.Reflection.Module
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.LoadModule*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  id: LoadModule(System.String,System.Byte[],System.Byte[])
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: LoadModule(String,Byte[],Byte[])
  nameWithType: _Assembly.LoadModule(String,Byte[],Byte[])
  fullName: System.Runtime.InteropServices._Assembly.LoadModule(String,Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.LoadModule%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file. The raw bytes representing the symbols for the module are also loaded."
  syntax:
    content: public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);
    parameters:
    - id: moduleName
      type: System.String
      description: "Name of the module. Must correspond to a file name in this assembly&quot;s manifest."
    - id: rawModule
      type: System.Byte[]
      description: "A byte array that is a COFF-based image containing an emitted module, or a resource."
    - id: rawSymbolStore
      type: System.Byte[]
      description: "A byte array containing the raw bytes representing the symbols for the module. Must be  if this is a resource file."
    return:
      type: System.Reflection.Module
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.LoadModule*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.Location
  id: Location
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: Location
  nameWithType: _Assembly.Location
  fullName: System.Runtime.InteropServices._Assembly.Location
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.Location%2A&gt; property."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.Location%2A> property gets the path or Universal Naming Convention (UNC) location of the loaded file that contains the manifest."
  syntax:
    content: public string Location { get; }
    return:
      type: System.String
      description: "The location of the loaded file that contains the manifest. If the loaded file was shadow-copied, the location is that of the file after being shadow-copied. If the assembly is loaded from a byte array, such as when using the [Load(Byte\\[\\])](assetId:///M:System.Reflection.Assembly.Load(System.Byte[])?qualifyHint=False"
  overload: System.Runtime.InteropServices._Assembly.Location*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.ModuleResolve
  id: ModuleResolve
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: ModuleResolve
  nameWithType: _Assembly.ModuleResolve
  fullName: System.Runtime.InteropServices._Assembly.ModuleResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.ModuleResolve&gt; event."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.ModuleResolve> event occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means."
  syntax:
    content: public event System.Reflection.ModuleResolveEventHandler ModuleResolve;
    return:
      type: System.Reflection.ModuleResolveEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices._Assembly.ToString
  id: ToString
  parent: System.Runtime.InteropServices._Assembly
  langs:
  - csharp
  name: ToString()
  nameWithType: _Assembly.ToString()
  fullName: System.Runtime.InteropServices._Assembly.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.ToString%2A&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.ToString%2A> method returns the full name of the assembly, also known as the display name."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Runtime.InteropServices._Assembly.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Runtime.InteropServices._Assembly.CodeBase
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: CodeBase
  nameWithType: _Assembly.CodeBase
  fullName: System.Runtime.InteropServices._Assembly.CodeBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._Assembly.CreateInstance(System.String)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: CreateInstance(String)
  nameWithType: _Assembly.CreateInstance(String)
  fullName: System.Runtime.InteropServices._Assembly.CreateInstance(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: CreateInstance(String,Boolean)
  nameWithType: _Assembly.CreateInstance(String,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.CreateInstance(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: _Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Runtime.InteropServices._Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._Assembly.EntryPoint
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: EntryPoint
  nameWithType: _Assembly.EntryPoint
  fullName: System.Runtime.InteropServices._Assembly.EntryPoint
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._Assembly.Equals(System.Object)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: Equals(Object)
  nameWithType: _Assembly.Equals(Object)
  fullName: System.Runtime.InteropServices._Assembly.Equals(Object)
- uid: System.Runtime.InteropServices._Assembly.EscapedCodeBase
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: EscapedCodeBase
  nameWithType: _Assembly.EscapedCodeBase
  fullName: System.Runtime.InteropServices._Assembly.EscapedCodeBase
- uid: System.Runtime.InteropServices._Assembly.Evidence
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: Evidence
  nameWithType: _Assembly.Evidence
  fullName: System.Runtime.InteropServices._Assembly.Evidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Runtime.InteropServices._Assembly.FullName
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: FullName
  nameWithType: _Assembly.FullName
  fullName: System.Runtime.InteropServices._Assembly.FullName
- uid: System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _Assembly.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetCustomAttributes(Boolean)
- uid: System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Assembly.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetCustomAttributes(Type,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._Assembly.GetExportedTypes
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetExportedTypes()
  nameWithType: _Assembly.GetExportedTypes()
  fullName: System.Runtime.InteropServices._Assembly.GetExportedTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Assembly.GetFile(System.String)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetFile(String)
  nameWithType: _Assembly.GetFile(String)
  fullName: System.Runtime.InteropServices._Assembly.GetFile(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.Runtime.InteropServices._Assembly.GetFiles
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetFiles()
  nameWithType: _Assembly.GetFiles()
  fullName: System.Runtime.InteropServices._Assembly.GetFiles()
- uid: System.IO.FileStream[]
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream[]
  spec.csharp:
  - uid: System.IO.FileStream
    name: FileStream
    nameWithType: FileStream
    fullName: FileStream[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetFiles(Boolean)
  nameWithType: _Assembly.GetFiles(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetFiles(Boolean)
- uid: System.Runtime.InteropServices._Assembly.GetHashCode
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetHashCode()
  nameWithType: _Assembly.GetHashCode()
  fullName: System.Runtime.InteropServices._Assembly.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._Assembly.GetLoadedModules
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetLoadedModules()
  nameWithType: _Assembly.GetLoadedModules()
  fullName: System.Runtime.InteropServices._Assembly.GetLoadedModules()
- uid: System.Reflection.Module[]
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module[]
  spec.csharp:
  - uid: System.Reflection.Module
    name: Module
    nameWithType: Module
    fullName: Module[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetLoadedModules(Boolean)
  nameWithType: _Assembly.GetLoadedModules(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetLoadedModules(Boolean)
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetManifestResourceInfo(String)
  nameWithType: _Assembly.GetManifestResourceInfo(String)
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(String)
- uid: System.Reflection.ManifestResourceInfo
  parent: System.Reflection
  isExternal: true
  name: ManifestResourceInfo
  nameWithType: ManifestResourceInfo
  fullName: System.Reflection.ManifestResourceInfo
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceNames
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetManifestResourceNames()
  nameWithType: _Assembly.GetManifestResourceNames()
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetManifestResourceStream(String)
  nameWithType: _Assembly.GetManifestResourceStream(String)
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetManifestResourceStream(Type,String)
  nameWithType: _Assembly.GetManifestResourceStream(Type,String)
  fullName: System.Runtime.InteropServices._Assembly.GetManifestResourceStream(Type,String)
- uid: System.Runtime.InteropServices._Assembly.GetModule(System.String)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetModule(String)
  nameWithType: _Assembly.GetModule(String)
  fullName: System.Runtime.InteropServices._Assembly.GetModule(String)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Runtime.InteropServices._Assembly.GetModules
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetModules()
  nameWithType: _Assembly.GetModules()
  fullName: System.Runtime.InteropServices._Assembly.GetModules()
- uid: System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetModules(Boolean)
  nameWithType: _Assembly.GetModules(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetModules(Boolean)
- uid: System.Runtime.InteropServices._Assembly.GetName
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetName()
  nameWithType: _Assembly.GetName()
  fullName: System.Runtime.InteropServices._Assembly.GetName()
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Runtime.InteropServices._Assembly.GetName(System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetName(Boolean)
  nameWithType: _Assembly.GetName(Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetName(Boolean)
- uid: System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: _Assembly.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.InteropServices._Assembly.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.InteropServices._Assembly.GetReferencedAssemblies
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetReferencedAssemblies()
  nameWithType: _Assembly.GetReferencedAssemblies()
  fullName: System.Runtime.InteropServices._Assembly.GetReferencedAssemblies()
- uid: System.Reflection.AssemblyName[]
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName[]
  spec.csharp:
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: AssemblyName[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetSatelliteAssembly(CultureInfo)
  nameWithType: _Assembly.GetSatelliteAssembly(CultureInfo)
  fullName: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(CultureInfo)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetSatelliteAssembly(CultureInfo,Version)
  nameWithType: _Assembly.GetSatelliteAssembly(CultureInfo,Version)
  fullName: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(CultureInfo,Version)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Runtime.InteropServices._Assembly.GetType
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetType()
  nameWithType: _Assembly.GetType()
  fullName: System.Runtime.InteropServices._Assembly.GetType()
- uid: System.Runtime.InteropServices._Assembly.GetType(System.String)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetType(String)
  nameWithType: _Assembly.GetType(String)
  fullName: System.Runtime.InteropServices._Assembly.GetType(String)
- uid: System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: _Assembly.GetType(String,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetType(String,Boolean)
- uid: System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: _Assembly.GetType(String,Boolean,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.GetType(String,Boolean,Boolean)
- uid: System.Runtime.InteropServices._Assembly.GetTypes
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetTypes()
  nameWithType: _Assembly.GetTypes()
  fullName: System.Runtime.InteropServices._Assembly.GetTypes()
- uid: System.Runtime.InteropServices._Assembly.GlobalAssemblyCache
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GlobalAssemblyCache
  nameWithType: _Assembly.GlobalAssemblyCache
  fullName: System.Runtime.InteropServices._Assembly.GlobalAssemblyCache
- uid: System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _Assembly.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Assembly.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: LoadModule(String,Byte[])
  nameWithType: _Assembly.LoadModule(String,Byte[])
  fullName: System.Runtime.InteropServices._Assembly.LoadModule(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: LoadModule(String,Byte[],Byte[])
  nameWithType: _Assembly.LoadModule(String,Byte[],Byte[])
  fullName: System.Runtime.InteropServices._Assembly.LoadModule(String,Byte[],Byte[])
- uid: System.Runtime.InteropServices._Assembly.Location
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: Location
  nameWithType: _Assembly.Location
  fullName: System.Runtime.InteropServices._Assembly.Location
- uid: System.Runtime.InteropServices._Assembly.ModuleResolve
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: ModuleResolve
  nameWithType: _Assembly.ModuleResolve
  fullName: System.Runtime.InteropServices._Assembly.ModuleResolve
- uid: System.Reflection.ModuleResolveEventHandler
  parent: System.Reflection
  isExternal: false
  name: ModuleResolveEventHandler
  nameWithType: ModuleResolveEventHandler
  fullName: System.Reflection.ModuleResolveEventHandler
- uid: System.Runtime.InteropServices._Assembly.ToString
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: ToString()
  nameWithType: _Assembly.ToString()
  fullName: System.Runtime.InteropServices._Assembly.ToString()
- uid: System.Runtime.InteropServices._Assembly.CodeBase*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: CodeBase
  nameWithType: _Assembly.CodeBase
- uid: System.Runtime.InteropServices._Assembly.CreateInstance*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: CreateInstance
  nameWithType: _Assembly.CreateInstance
- uid: System.Runtime.InteropServices._Assembly.EntryPoint*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: EntryPoint
  nameWithType: _Assembly.EntryPoint
- uid: System.Runtime.InteropServices._Assembly.Equals*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: Equals
  nameWithType: _Assembly.Equals
- uid: System.Runtime.InteropServices._Assembly.EscapedCodeBase*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: EscapedCodeBase
  nameWithType: _Assembly.EscapedCodeBase
- uid: System.Runtime.InteropServices._Assembly.Evidence*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: Evidence
  nameWithType: _Assembly.Evidence
- uid: System.Runtime.InteropServices._Assembly.FullName*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: FullName
  nameWithType: _Assembly.FullName
- uid: System.Runtime.InteropServices._Assembly.GetCustomAttributes*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _Assembly.GetCustomAttributes
- uid: System.Runtime.InteropServices._Assembly.GetExportedTypes*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetExportedTypes
  nameWithType: _Assembly.GetExportedTypes
- uid: System.Runtime.InteropServices._Assembly.GetFile*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetFile
  nameWithType: _Assembly.GetFile
- uid: System.Runtime.InteropServices._Assembly.GetFiles*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetFiles
  nameWithType: _Assembly.GetFiles
- uid: System.Runtime.InteropServices._Assembly.GetHashCode*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetHashCode
  nameWithType: _Assembly.GetHashCode
- uid: System.Runtime.InteropServices._Assembly.GetLoadedModules*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetLoadedModules
  nameWithType: _Assembly.GetLoadedModules
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceInfo*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetManifestResourceInfo
  nameWithType: _Assembly.GetManifestResourceInfo
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceNames*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetManifestResourceNames
  nameWithType: _Assembly.GetManifestResourceNames
- uid: System.Runtime.InteropServices._Assembly.GetManifestResourceStream*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetManifestResourceStream
  nameWithType: _Assembly.GetManifestResourceStream
- uid: System.Runtime.InteropServices._Assembly.GetModule*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetModule
  nameWithType: _Assembly.GetModule
- uid: System.Runtime.InteropServices._Assembly.GetModules*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetModules
  nameWithType: _Assembly.GetModules
- uid: System.Runtime.InteropServices._Assembly.GetName*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetName
  nameWithType: _Assembly.GetName
- uid: System.Runtime.InteropServices._Assembly.GetObjectData*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetObjectData
  nameWithType: _Assembly.GetObjectData
- uid: System.Runtime.InteropServices._Assembly.GetReferencedAssemblies*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetReferencedAssemblies
  nameWithType: _Assembly.GetReferencedAssemblies
- uid: System.Runtime.InteropServices._Assembly.GetSatelliteAssembly*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetSatelliteAssembly
  nameWithType: _Assembly.GetSatelliteAssembly
- uid: System.Runtime.InteropServices._Assembly.GetType*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetType
  nameWithType: _Assembly.GetType
- uid: System.Runtime.InteropServices._Assembly.GetTypes*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GetTypes
  nameWithType: _Assembly.GetTypes
- uid: System.Runtime.InteropServices._Assembly.GlobalAssemblyCache*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: GlobalAssemblyCache
  nameWithType: _Assembly.GlobalAssemblyCache
- uid: System.Runtime.InteropServices._Assembly.IsDefined*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: IsDefined
  nameWithType: _Assembly.IsDefined
- uid: System.Runtime.InteropServices._Assembly.LoadModule*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: LoadModule
  nameWithType: _Assembly.LoadModule
- uid: System.Runtime.InteropServices._Assembly.Location*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: Location
  nameWithType: _Assembly.Location
- uid: System.Runtime.InteropServices._Assembly.ToString*
  parent: System.Runtime.InteropServices._Assembly
  isExternal: false
  name: ToString
  nameWithType: _Assembly.ToString
