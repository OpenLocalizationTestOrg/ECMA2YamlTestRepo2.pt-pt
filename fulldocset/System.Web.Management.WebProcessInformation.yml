### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebProcessInformation
  id: WebProcessInformation
  children:
  - System.Web.Management.WebProcessInformation.AccountName
  - System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebProcessInformation.ProcessID
  - System.Web.Management.WebProcessInformation.ProcessName
  langs:
  - csharp
  name: WebProcessInformation
  nameWithType: WebProcessInformation
  fullName: System.Web.Management.WebProcessInformation
  type: Class
  summary: "Provides information about the worker process that hosts ASP.NET."
  remarks: "ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data, and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       Instances of the WebProcessInformation class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type.       Your application needs the appropriate permissions to access protected information provided by this type.       The following example is an excerpt of the configuration file you could use to enable ASP.NET to log error events that contain process information.      ```   <healthMonitoring      enabled=&quot;true&quot; heartBeatInterval=&quot;0&quot;>          <rules>        <add           name=&quot;All Errors Default&quot;          eventName=&quot;All Errors&quot;          provider=&quot;EventLogProvider&quot;          profile=&quot;Default&quot;          minInterval=&quot;00:01:00&quot; />       </rules>      </healthMonitoring>   ```      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the Example section."
  example:
  - "The following example has two parts. The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the WebProcessInformation type.  \n  \n The second shows how to implement the custom event.  \n  \n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n    <eventMappings>  \n      <add    \n        name=\"SampleProcessInformation\"   \n        type=\"SamplesAspNet.SampleWebProcessInformation, webprocessinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL\"/>  \n    </eventMappings>  \n  \n    <rules>  \n      <add   \n        name=\"Custom Process Information\"  \n        eventName=\"SampleProcessInformation\"   \n        provider=\"EventLogProvider\"  \n        profile=\"Default\"/>  \n    </rules>  \n  \n</healthMonitoring>  \n  \n```  \n  \n The following example shows how to implement a custom event that uses the WebProcessInformation type.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#1](~/add/codesnippet/csharp/t-system.web.management._13_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._13_1.vb)]"
  syntax:
    content: public sealed class WebProcessInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.AccountName
  id: AccountName
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
  fullName: System.Web.Management.WebProcessInformation.AccountName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Gets the account name for the worker process."
  remarks: "Your application needs the appropriate permissions to access the information provided by this property."
  example:
  - "The following example shows how to obtain the process account name.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#4](~/add/codesnippet/csharp/p-system.web.management._38_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#4](~/add/codesnippet/visualbasic/p-system.web.management._38_1.vb)]"
  syntax:
    content: public string AccountName { get; }
    return:
      type: System.String
      description: "The worker process account name."
  overload: System.Web.Management.WebProcessInformation.AccountName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  id: FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: FormatToString(WebEventFormatter)
  nameWithType: WebProcessInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebProcessInformation.FormatToString(WebEventFormatter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Formats the application information."
  remarks: "The FormatToString method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. The method is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods."
  example:
  - "The following example shows how to format custom information.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#7](~/add/codesnippet/csharp/f15874b7-315f-41fa-b773-_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#7](~/add/codesnippet/visualbasic/f15874b7-315f-41fa-b773-_1.vb)]"
  syntax:
    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);
    parameters:
    - id: formatter
      type: System.Web.Management.WebEventFormatter
      description: "The <xref href=&quot;System.Web.Management.WebEventFormatter&quot;></xref> that contains the tab and indentation settings used to format the Web health event information."
  overload: System.Web.Management.WebProcessInformation.FormatToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.ProcessID
  id: ProcessID
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
  fullName: System.Web.Management.WebProcessInformation.ProcessID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Gets the process identifier."
  remarks: "This is the identifier of the worker process that hosts ASP.NET."
  example:
  - "The following example shows how to obtain the process identifier.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#5](~/add/codesnippet/csharp/p-system.web.management._19_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._19_1.vb)]"
  syntax:
    content: public int ProcessID { get; }
    return:
      type: System.Int32
      description: "The process identifier."
  overload: System.Web.Management.WebProcessInformation.ProcessID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.ProcessName
  id: ProcessName
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
  fullName: System.Web.Management.WebProcessInformation.ProcessName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Gets the name of the process."
  remarks: "This is the name of the worker process that hosts ASP.NET."
  example:
  - "The following example shows how to obtain the process name.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#6](~/add/codesnippet/csharp/p-system.web.management._6_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._6_1.vb)]"
  syntax:
    content: public string ProcessName { get; }
    return:
      type: System.String
      description: "The name of the process."
  overload: System.Web.Management.WebProcessInformation.ProcessName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Management.WebProcessInformation.AccountName
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
  fullName: System.Web.Management.WebProcessInformation.AccountName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: FormatToString(WebEventFormatter)
  nameWithType: WebProcessInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebProcessInformation.FormatToString(WebEventFormatter)
- uid: System.Web.Management.WebEventFormatter
  parent: System.Web.Management
  isExternal: false
  name: WebEventFormatter
  nameWithType: WebEventFormatter
  fullName: System.Web.Management.WebEventFormatter
- uid: System.Web.Management.WebProcessInformation.ProcessID
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
  fullName: System.Web.Management.WebProcessInformation.ProcessID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebProcessInformation.ProcessName
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
  fullName: System.Web.Management.WebProcessInformation.ProcessName
- uid: System.Web.Management.WebProcessInformation.AccountName*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
- uid: System.Web.Management.WebProcessInformation.FormatToString*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: FormatToString
  nameWithType: WebProcessInformation.FormatToString
- uid: System.Web.Management.WebProcessInformation.ProcessID*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
- uid: System.Web.Management.WebProcessInformation.ProcessName*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
