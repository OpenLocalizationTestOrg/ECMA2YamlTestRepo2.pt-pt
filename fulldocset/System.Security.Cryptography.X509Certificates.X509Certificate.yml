### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  id: X509Certificate
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  langs:
  - csharp
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  type: Class
  summary: "Fornece métodos que o ajudam a utilizarem certificados de v.3 x.&509;."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.       Para a maioria dos cenários, deve utilizar o <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>classe em vez disso.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Começando com o [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)], este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando tiver terminado com o tipo, deve eliminar-direta ou indiretamente. Para eliminar diretamente do tipo, chame o <xref:System.IDisposable.Dispose%2A>método um `try` / `catch` blocos.</xref:System.IDisposable.Dispose%2A> Para eliminar indiretamente dele, utilize uma construção de idioma, tais como `using` (em c#) ou `Using` (em Visual Basic). Para obter mais informações, consulte a secção &quot;Utilizar um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico de interface.</xref:System.IDisposable>   >> Para aplicações direcionadas para o [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] e versões anteriores, a classe do certificado X509 não implementa o <xref:System.IDisposable>interface e, por conseguinte, não tem um `Dispose` método.</xref:System.IDisposable>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/t-system.security.crypto_76_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/t-system.security.crypto_76_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/t-system.security.crypto_76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe."
  syntax:
    content: public X509Certificate ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe definida a partir de uma sequência de bytes que representa um certificado de&509;v3."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `data`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/b1e21656-448f-470a-baa1-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/b1e21656-448f-470a-baa1-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/b1e21656-448f-470a-baa1-_1.cpp)]"
  syntax:
    content: public X509Certificate (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados a partir de um certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe com um identificador de para um não gerido <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> estrutura."
  remarks: "Este construtor cria uma nova <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objeto com um identificador para o contexto de certificado da API de criptografia do Microsoft, `PCCERT_CONTEXT`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>      > [!IMPORTANT] > Este construtor cria uma cópia do contexto de certificado. Não partem do princípio de que a estrutura de contexto transmitido a este construtor é válida. poderá ter sido publicada. Pode obter uma cópia atual `PCCERT_CONTEXT` estrutura do <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>propriedade, mas é válido apenas durante a duração do <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objeto.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>"
  syntax:
    content: public X509Certificate (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "Um identificador de para um não gerido <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> estrutura."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O parâmetro identificador não representa um <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> estrutura."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe utilizar outro <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe."
  syntax:
    content: public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe a partir do qual inicializar esta classe."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da <code> cert </code> parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe com o nome de um PKCS7 assinado ficheiro."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/8a4791ef-477c-432d-b12d-_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/8a4791ef-477c-432d-b12d-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/8a4791ef-477c-432d-b12d-_1.vb)]"
  syntax:
    content: public X509Certificate (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro assinado PKCS7."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe através de uma matriz de bytes e uma palavra-passe."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.      > [!IMPORTANT] > Nunca rígido code uma palavra-passe no seu código de origem.  Hard-coded palavras-passe podem ser obtidas a partir de uma assemblagem com o [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), um editor de hexadecimal, ou simplesmente abrindo a assemblagem num editor de texto, como o Notepad.exe.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados de um certificado x.&509;."
    - id: password
      type: System.Security.SecureString
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe através de uma matriz de bytes e uma palavra-passe."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.      > [!IMPORTANT] > Nunca rígido code uma palavra-passe no seu código de origem.  Hard-coded palavras-passe podem ser obtidas a partir de uma assemblagem com o [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), um editor de hexadecimal, ou simplesmente abrindo a assemblagem num editor de texto, como o Notepad.exe.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados a partir de um certificado x.&509;."
    - id: password
      type: System.String
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe utilizando um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto e um <xref:System.Runtime.Serialization.StreamingContext>estrutura.</xref:System.Runtime.Serialization.StreamingContext>"
  syntax:
    content: public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto que descreve informações de serialização."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>estrutura que descreve como serialização deve ser efetuada.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe utilizando um nome de ficheiro de certificado e uma palavra-passe."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.  Este construtor com a palavra-passe correta ao chamar desencripta a chave privada e guarda-o no contentor de chaves.      > [!IMPORTANT] > Nunca rígido code uma palavra-passe no seu código de origem.  Hard-coded palavras-passe podem ser obtidas a partir de uma assemblagem com o [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), um editor de hexadecimal, ou simplesmente abrindo a assemblagem num editor de texto, como o Notepad.exe.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro de certificado."
    - id: password
      type: System.Security.SecureString
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe com o nome de um PKCS7 assinadas ficheiro e uma palavra-passe para aceder ao certificado."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.  Este construtor com a palavra-passe correta ao chamar desencripta a chave privada e guarda-o no contentor de chaves.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro assinado PKCS7."
    - id: password
      type: System.String
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe através de uma matriz de bytes, uma palavra-passe e um sinalizador de armazenamento de chaves."
  remarks: "Este construtor com a palavra-passe correta ao chamar desencripta a chave privada e guarda-o a um Microsoft API criptográfica serviço fornecedor criptografia (CSP).       DER ASN.&1; é o formato de certificado apenas suportado por esta classe.      > [!IMPORTANT] > Nunca rígido code uma palavra-passe no seu código de origem.  Hard-coded palavras-passe podem ser obtidas a partir de uma assemblagem com o [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), um editor de hexadecimal, ou simplesmente abrindo a assemblagem num editor de texto, como o Notepad.exe.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados de um certificado x.&509;."
    - id: password
      type: System.Security.SecureString
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe através de uma matriz de bytes, uma palavra-passe e um sinalizador de armazenamento de chaves."
  remarks: "Este construtor cria uma nova <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objeto utilizando um byte matriz, uma palavra-passe que é necessário para aceder os dados do certificado e um sinalizador de armazenamento de chaves.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>  Este construtor com a palavra-passe correta ao chamar desencripta a chave privada e guarda-o a um Microsoft API criptográfica serviço fornecedor criptografia (CSP).       O <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>valor pode ser utilizado para controlar onde e como a chave privada é importada.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>       DER ASN.&1; é o formato de certificado apenas suportado por esta classe.      > [!IMPORTANT] > Nunca rígido code uma palavra-passe no seu código de origem.  Hard-coded palavras-passe podem ser obtidas a partir de uma assemblagem com o [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), um editor de hexadecimal, ou simplesmente abrindo a assemblagem num editor de texto, como o Notepad.exe.       Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados a partir de um certificado x.&509;."
    - id: password
      type: System.String
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe utilizando um nome de ficheiro de certificado, uma palavra-passe e um sinalizador de armazenamento de chaves."
  remarks: "Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro de certificado."
    - id: password
      type: System.Security.SecureString
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe utilizando o nome de um PKCS7 assinado de ficheiros, uma palavra-passe para o certificado e um sinalizador de armazenamento de chaves de acesso."
  remarks: "Se criar um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificado especificando um arquivo de ficheiro assinado PKCS7 para `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>é criado para o certificado que assinou o arquivo de, em vez de qualquer um dos certificados no arquivo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro assinado PKCS7."
    - id: password
      type: System.String
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  id: CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Cria um certificado de&509;v3 do ficheiro assinado PKCS7 especificado."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe.      > [!NOTE] > O ficheiro de certificado não está limitado a .cerfiles. Qualquer PKCS7 pode ser utilizado o ficheiro assinado, incluindo um Authenticode iniciou a sessão de ficheiro. pfx."
  example:
  - "The following example creates an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> from a specified certification file.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/676668f7-2ee9-45c0-8357-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/676668f7-2ee9-45c0-8357-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/676668f7-2ee9-45c0-8357-_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "O caminho do PKCS7 assinado ficheiro a partir do qual pretende criar o certificado x.&509;."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado x.&509; recentemente criado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  id: CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Cria um certificado de&509;v3 do ficheiro assinado especificado."
  remarks: "DER ASN.&1; é o formato de certificado apenas suportado por esta classe."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "O caminho do ficheiro assinado da qual criar o certificado x.&509;."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado x.&509; recentemente criado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Versões de todos os recursos utilizados por atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Versões de todos os recursos não geridos utilizados por este <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Compara dois <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objetos para igualdade."
  remarks: "Dois objetos são considerados igual se forem <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objetos e têm o mesmo emissor e número de série.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/f47485e7-2fcd-4cb5-8c02-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/f47485e7-2fcd-4cb5-8c02-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/f47485e7-2fcd-4cb5-8c02-_1.vb)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto comparar para o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto é igual para o objeto especificado pelo <code> other </code> parâmetro; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Compara dois <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objetos para igualdade."
  remarks: "Dois <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objetos são considerados igual se tiverem o mesmo emissor e número de série.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/a7eacb37-7527-4d28-91b5-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/a7eacb37-7527-4d28-91b5-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/a7eacb37-7527-4d28-91b5-_1.vb)]"
  syntax:
    content: public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);
    parameters:
    - id: other
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto comparar para o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto é igual para o objeto especificado pelo <code> other </code> parâmetro; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Exporta atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto para uma matriz de bytes num formato descrito por um do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> valores."
  remarks: 'O `contentType` parâmetro aceita apenas os seguintes valores de <xref:System.Security.Cryptography.X509Certificates.X509ContentType>enumeração: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>e <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Transmissão de qualquer outro valor faz com que um <xref:System.Security.Cryptography.CryptographicException>para ser emitida.</xref:System.Security.Cryptography.CryptographicException>'
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/7086c90a-cfa4-4cab-9c75-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/7086c90a-cfa4-4cab-9c75-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/7086c90a-cfa4-4cab-9c75-_1.cpp)]"
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Um do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> valores que descreve como formatar os dados de saída."
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que representa o atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Um valor diferente de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, ou <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> foi transmitido para o <code> contentType </code> parâmetro.       - ou - não foi possível exportar o certificado."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Exporta atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto para uma matriz de bytes utilizando o formato especificado e uma palavra-passe."
  remarks: "O `contentType` parâmetro aceita apenas os seguintes valores de <xref:System.Security.Cryptography.X509Certificates.X509ContentType>enumeração: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>e <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Transmissão de qualquer outro valor faz com que um <xref:System.Security.Cryptography.CryptographicException>para ser emitida.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > Nunca rígido code uma palavra-passe no seu código de origem.  Hard-coded palavras-passe podem ser obtidas a partir de uma assemblagem com o [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), um editor de hexadecimal, ou simplesmente abrindo a assemblagem num editor de texto, como o Notepad.exe."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Um do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> valores que descreve como formatar os dados de saída."
    - id: password
      type: System.Security.SecureString
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que representa o atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Um valor diferente de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, ou <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> foi transmitido para o <code> contentType </code> parâmetro.       - ou - não foi possível exportar o certificado."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Exporta atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto para uma matriz de bytes num formato descrito por um do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> valores e utilizando a palavra-passe especificada."
  remarks: "O `contentType` parâmetro aceita apenas os seguintes valores de <xref:System.Security.Cryptography.X509Certificates.X509ContentType>enumeração: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>e <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  Transmissão de qualquer outro valor faz com que um <xref:System.Security.Cryptography.CryptographicException>para ser emitida.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > Nunca rígido code uma palavra-passe no seu código de origem.  Hard-coded palavras-passe podem ser obtidas a partir de uma assemblagem com o [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), um editor de hexadecimal, ou simplesmente abrindo a assemblagem num editor de texto, como o Notepad.exe."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Um do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> valores que descreve como formatar os dados de saída."
    - id: password
      type: System.String
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que representa o atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Um valor diferente de <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, ou <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> foi transmitido para o <code> contentType </code> parâmetro.       - ou - não foi possível exportar o certificado."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  id: FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Converte uma cadeia de data e hora especificadas."
  remarks: "Alguns culturas não é possível converter datas futuras nas cadeias. Se a data de expiração de um certificado x.&509; está fora do intervalo da cultura, FormatDate retrocede para um calendário que pode express a data. Se o <xref:System.Globalization.CultureInfo.Calendar%2A>valor é <xref:System.Globalization.UmAlQuraCalendar>, o calendário é alterado para a <xref:System.Globalization.HijriCalendar>classe; caso contrário, é alterado para <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A> </xref:System.Globalization.HijriCalendar> </xref:System.Globalization.UmAlQuraCalendar> </xref:System.Globalization.CultureInfo.Calendar%2A>"
  syntax:
    content: protected static string FormatDate (DateTime date);
    parameters:
    - id: date
      type: System.DateTime
      description: "A data e hora para converter."
    return:
      type: System.String
      description: "Uma representação de cadeia do valor da <xref:System.DateTime>objeto.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  id: GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o valor de hash para o certificado de&509;v3 como uma matriz de bytes."
  remarks: ''
  example:
  - "The following example uses the GetCertHash method to fill an array of bytes with the hash value for an X.509 certificate.  \n  \n [!code-cs[X509Certificate.GetCertHash Method#1](~/add/codesnippet/csharp/m-system.security.crypto_52_1.cs)]\n [!code-vb[X509Certificate.GetCertHash Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_52_1.vb)]\n [!code-cpp[X509Certificate.GetCertHash Method#1](~/add/codesnippet/cpp/m-system.security.crypto_52_1.cpp)]"
  syntax:
    content: public virtual byte[] GetCertHash ();
    parameters: []
    return:
      type: System.Byte[]
      description: "O valor de hash para o certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  id: GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o valor de hash SHA1 do certificado&509;v3 como uma cadeia hexadecimal."
  remarks: ''
  example:
  - "The following example uses the GetCertHashString method to get an X.509 certificate hash value, convert it to a string, and display it to the console.  \n  \n [!code-cpp[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/cpp/91428cb0-40b3-45b2-8ef3-_1.cpp)]\n [!code-cs[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/csharp/91428cb0-40b3-45b2-8ef3-_1.cs)]\n [!code-vb[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/visualbasic/91428cb0-40b3-45b2-8ef3-_1.vb)]"
  syntax:
    content: public virtual string GetCertHashString ();
    parameters: []
    return:
      type: System.String
      description: "A representação de cadeia hexadecimal do valor de hash de certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  id: GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve a data efetiva deste certificado&509;v3."
  remarks: "A data efetiva se da data após o qual o certificado x.&509; considerado válido.       O método de GetEffectiveDateString devolve uma cadeia que mostra a data em suma formatado padrão data seguido pelo tempo formatado padrão longo do tempo.  A data e hora são formatadas utilizando a cultura atual e o fuso horário."
  example:
  - "The following example uses the GetEffectiveDateString method to get the effective date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/visualbasic/5a69884a-4857-43c9-9b1e-_1.vb)]\n [!code-cpp[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/cpp/5a69884a-4857-43c9-9b1e-_1.cpp)]\n [!code-cs[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/csharp/5a69884a-4857-43c9-9b1e-_1.cs)]"
  syntax:
    content: public virtual string GetEffectiveDateString ();
    parameters: []
    return:
      type: System.String
      description: "A data efetiva para este certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  id: GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve a data de expiração deste certificado&509;v3."
  remarks: "A data de expiração é a data após o qual o certificado x.&509; já não é considerado válido.       O método de GetExpirationDateString devolve uma cadeia que mostra a data em suma formatado padrão data seguido pelo tempo formatado padrão longo do tempo.  A data e hora são formatadas utilizando a cultura atual e o fuso horário.      > [!NOTE] > Este método pode devolver um formato de cadeia diferente em computadores Macintosh, embora subjacentes <xref:System.DateTime>objeto irá representar o mesmo valor.</xref:System.DateTime>"
  example:
  - "The following example uses the GetExpirationDateString method to get the expiration date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/visualbasic/76048adf-be4c-432a-8c57-_1.vb)]\n [!code-cpp[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/cpp/76048adf-be4c-432a-8c57-_1.cpp)]\n [!code-cs[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/csharp/76048adf-be4c-432a-8c57-_1.cs)]"
  syntax:
    content: public virtual string GetExpirationDateString ();
    parameters: []
    return:
      type: System.String
      description: "A data de expiração para este certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  id: GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o nome do formato deste certificado&509;v3."
  remarks: "O formato x.&509; sempre é devolvido nesta implementação."
  example:
  - "The following example uses the GetFormat method to get the format of a certificate and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetFormat Method#1](~/add/codesnippet/cpp/m-system.security.crypto_96_1.cpp)]\n [!code-cs[X509Certificate.GetFormat Method#1](~/add/codesnippet/csharp/m-system.security.crypto_96_1.cs)]\n [!code-vb[X509Certificate.GetFormat Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_96_1.vb)]"
  syntax:
    content: public virtual string GetFormat ();
    parameters: []
    return:
      type: System.String
      description: "O formato deste certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o código hash do certificado&509;v3 como um número inteiro."
  remarks: "Se o hash do certificado x. 509 é uma matriz de mais de 4 bytes, qualquer byte após o byte quarto não é utilizado em representação este número inteiro."
  example:
  - "The following example uses the GetHashCode method to return an integer representation of a certificate's hash code and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetHashCode Method#1](~/add/codesnippet/csharp/m-system.security.crypto_37_1.cs)]\n [!code-cpp[X509Certificate.GetHashCode Method#1](~/add/codesnippet/cpp/m-system.security.crypto_37_1.cpp)]\n [!code-vb[X509Certificate.GetHashCode Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_37_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash do certificado x.&509; como um número inteiro."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  id: GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o nome da autoridade de certificação que emitiu o certificado de&509;v3."
  remarks: ''
  example:
  - "The following example uses the GetIssuerName method to return the certificate issuer's name and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_90_1.cpp)]\n [!code-vb[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_90_1.vb)]\n [!code-cs[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_90_1.cs)]"
  syntax:
    content: public virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "O nome da autoridade de certificação que emitiu o certificado X.509."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Ocorre um erro com o certificado. Por exemplo:-o ficheiro de certificado não existe.      -O certificado é inválido.      -Palavra-passe o certificado está incorreta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  id: GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve as informações de algoritmo de chave para este certificado&509;v3 como uma cadeia."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithm method to get a certificate's key algorithm in string format and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/cpp/m-system.security.crypto_21_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/csharp/m-system.security.crypto_21_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_21_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithm ();
    parameters: []
    return:
      type: System.String
      description: "As informações de algoritmo de chave para este certificado x.&509; como uma cadeia."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O contexto de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  id: GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve os parâmetros do algoritmo de chave para o certificado de&509;v3 como uma matriz de bytes."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParameters method to return a certificate's key algorithm parameters as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/cpp/50ee38f2-6fab-4f27-b38b-_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/csharp/50ee38f2-6fab-4f27-b38b-_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/visualbasic/50ee38f2-6fab-4f27-b38b-_1.vb)]"
  syntax:
    content: public virtual byte[] GetKeyAlgorithmParameters ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Os parâmetros do algoritmo de chave para o certificado x.&509; como uma matriz de bytes."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O contexto de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  id: GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve os parâmetros do algoritmo de chave para o certificado de&509;v3 como uma cadeia hexadecimal."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParametersString method to return a certificate's key algorithm parameters in string format and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/csharp/a22806f0-c945-45f8-bbd4-_1.cs)]\n [!code-cpp[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/cpp/a22806f0-c945-45f8-bbd4-_1.cpp)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/visualbasic/a22806f0-c945-45f8-bbd4-_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithmParametersString ();
    parameters: []
    return:
      type: System.String
      description: "Os parâmetros do algoritmo de chave para o certificado x.&509; como uma cadeia hexadecimal."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O contexto de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  id: GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o nome do principal ao qual o certificado foi emitido."
  remarks: ''
  example:
  - "The following example uses the GetName method to return the name of a certificate's principal and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_133_1.cs)]\n [!code-cpp[X509Certificate.GetName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_133_1.cpp)]\n [!code-vb[X509Certificate.GetName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_133_1.vb)]"
  syntax:
    content: public virtual string GetName ();
    parameters: []
    return:
      type: System.String
      description: "O nome do principal ao qual o certificado foi emitido."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O contexto de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve a chave pública do certificado&509;v3 como uma matriz de bytes."
  remarks: ''
  example:
  - "The following example uses the GetPublicKey method to return a certificate's public key as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/cpp/m-system.security.crypto_13_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/csharp/m-system.security.crypto_13_1.cs)]\n [!code-vb[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_13_1.vb)]"
  syntax:
    content: public virtual byte[] GetPublicKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A chave pública do certificado x.&509; como uma matriz de bytes."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O contexto de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  id: GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve a chave pública do certificado&509;v3 como uma cadeia hexadecimal."
  remarks: ''
  example:
  - "The following example uses the GetPublicKeyString method to return a certificate's public key as a string and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/cpp/32662298-b286-4db7-b0c3-_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/csharp/32662298-b286-4db7-b0c3-_1.cs)]\n [!code-vb[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/visualbasic/32662298-b286-4db7-b0c3-_1.vb)]"
  syntax:
    content: public virtual string GetPublicKeyString ();
    parameters: []
    return:
      type: System.String
      description: "A chave pública do certificado x.&509; como uma cadeia hexadecimal."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  id: GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve os dados não processados para o certificado de&509;v3 completo como uma matriz de bytes."
  remarks: ''
  example:
  - "The following example uses the GetRawCertData method to return a certificate's raw data as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/csharp/m-system.security.crypto_8_1.cs)]\n [!code-vb[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_8_1.vb)]\n [!code-cpp[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/cpp/m-system.security.crypto_8_1.cpp)]"
  syntax:
    content: public virtual byte[] GetRawCertData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém os dados de certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  id: GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve os dados não processados para o certificado de&509;v3 completo como uma cadeia hexadecimal."
  remarks: ''
  example:
  - "The following example uses the GetRawCertDataString method to return a certificate's raw data as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/csharp/7093e757-0c91-4543-9e38-_1.cs)]\n [!code-cpp[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/cpp/7093e757-0c91-4543-9e38-_1.cpp)]\n [!code-vb[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/visualbasic/7093e757-0c91-4543-9e38-_1.vb)]"
  syntax:
    content: public virtual string GetRawCertDataString ();
    parameters: []
    return:
      type: System.String
      description: "Os dados do certificado x.&509; como uma cadeia hexadecimal."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  id: GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o número de série do certificado&509;v3 como uma matriz de bytes."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumber method to return a certificate's serial number as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/csharp/m-system.security.crypto_4_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/cpp/m-system.security.crypto_4_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_4_1.vb)]"
  syntax:
    content: public virtual byte[] GetSerialNumber ();
    parameters: []
    return:
      type: System.Byte[]
      description: "O número de série do certificado x.&509; como uma matriz de bytes."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O contexto de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  id: GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve o número de série do certificado&509;v3 como uma cadeia hexadecimal."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumberString method to return a certificate's serial number as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/csharp/68e809e1-8785-4578-8a1f-_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/cpp/68e809e1-8785-4578-8a1f-_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/visualbasic/68e809e1-8785-4578-8a1f-_1.vb)]"
  syntax:
    content: public virtual string GetSerialNumberString ();
    parameters: []
    return:
      type: System.String
      description: "O número de série do certificado x.&509; como uma cadeia hexadecimal."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  id: Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Obtém um identificador a um contexto de certificado da API de criptografia do Microsoft descrito através de um não gerido <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> estrutura."
  remarks: "O identificador é válido apenas para a duração do <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objeto.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>estrutura que representa um não gerido <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> estrutura.</xref:System.IntPtr>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Povoa o <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto com a dados a partir de uma matriz de bytes."
  remarks: "Este método pode ser utilizado para colocar a matriz de bytes não processados de um certificado x.&509; e para preencher o <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objeto com os respetivos valores associados.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public virtual void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados a partir de um certificado x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Povoa o <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto com informações a partir de um ficheiro de certificado."
  remarks: "Este método utiliza um ficheiro de certificado (por exemplo, um ficheiro com extensão. cer) que representa um certificado x.&509; e preenche o <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objeto com o certificado que contém o ficheiro.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/csharp/9f89a581-a9e3-4157-bfa5-_1.cs)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/cpp/9f89a581-a9e3-4157-bfa5-_1.cpp)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/visualbasic/9f89a581-a9e3-4157-bfa5-_1.vb)]"
  syntax:
    content: public virtual void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro de certificado representado como uma cadeia."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Preenche um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto com a dados a partir de uma matriz de bytes, uma palavra-passe e um sinalizador de armazenamento de chaves."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados de um certificado x.&509;."
    - id: password
      type: System.Security.SecureString
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Povoa o <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto utilizando os dados de uma matriz de bytes, de uma palavra-passe e de sinalizadores para determinar a forma como a chave privada é importada."
  remarks: "Este método pode ser utilizado para preencher um <xref:System.Security.Cryptography.X509Certificates.X509Certificate>utilizando uma palavra-passe para o certificado representado pela matriz de bytes de objeto.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> O <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>valor pode ser utilizado para controlar onde e como a chave privada é importada.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>"
  syntax:
    content: public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Uma matriz de bytes que contém dados a partir de um certificado x.&509;."
    - id: password
      type: System.String
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - o comprimento do <code> rawData </code> parâmetro é 0."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Preenche um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto com informações a partir de um ficheiro de certificado, uma palavra-passe e um sinalizador de armazenamento de chaves."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro de certificado."
    - id: password
      type: System.Security.SecureString
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Povoa o <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto com informações a partir de um ficheiro de certificado, uma palavra-passe e um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&quot;> </xref> valor."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro de certificado representado como uma cadeia."
    - id: password
      type: System.String
      description: "A palavra-passe necessária para aceder os dados do certificado x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Uma combinação bit a bit de enumeração valores esse controlo onde e como importar o certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  id: Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Obtém o nome da autoridade de certificação que emitiu o certificado de&509;v3."
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: "O nome da autoridade de certificação que emitiu o certificado de&509;v3."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O identificador de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Repõe o estado do <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objeto."
  remarks: "Utilize o método de reposição para repor o estado do certificado. Este método também liberta os recursos associados ao certificado."
  syntax:
    content: public virtual void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  id: Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Obtém o nome único do requerente do certificado."
  syntax:
    content: public string Subject { get; }
    return:
      type: System.String
      description: "O nome distinto do requerente do certificado."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O identificador de certificado é inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Implementa o <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interface e é denominada volta pelo evento anulação da serialização depois de concluída a anulação da serialização."
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento de anulação da serialização."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Obtém as informações de serialização com todos os dados necessários para recriar uma instância de atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto para preencher com informações de serialização."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O contexto de destino de serialização."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve uma representação de cadeia de atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following example uses the ToString method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/m-system.security.crypto_128_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/m-system.security.crypto_128_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_128_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação de cadeia de atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Devolve uma representação de cadeia de atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto com informações adicionais, se for especificado."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/7bb8ae2b-24f8-4b21-80b2-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/7bb8ae2b-24f8-4b21-80b2-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/7bb8ae2b-24f8-4b21-80b2-_1.vb)]"
  syntax:
    content: public virtual string ToString (bool fVerbose);
    parameters:
    - id: fVerbose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para produzir o formulário verboso de representação de cadeia; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Uma representação de cadeia de atual <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objeto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile
  nameWithType: X509Certificate.CreateFromCertFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile
  nameWithType: X509Certificate.CreateFromSignedFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose
  nameWithType: X509Certificate.Dispose
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals
  nameWithType: X509Certificate.Equals
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export
  nameWithType: X509Certificate.Export
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate
  nameWithType: X509Certificate.FormatDate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash
  nameWithType: X509Certificate.GetCertHash
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString
  nameWithType: X509Certificate.GetCertHashString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString
  nameWithType: X509Certificate.GetEffectiveDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString
  nameWithType: X509Certificate.GetExpirationDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat
  nameWithType: X509Certificate.GetFormat
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode
  nameWithType: X509Certificate.GetHashCode
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName
  nameWithType: X509Certificate.GetIssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm
  nameWithType: X509Certificate.GetKeyAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters
  nameWithType: X509Certificate.GetKeyAlgorithmParameters
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName
  nameWithType: X509Certificate.GetName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey
  nameWithType: X509Certificate.GetPublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString
  nameWithType: X509Certificate.GetPublicKeyString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData
  nameWithType: X509Certificate.GetRawCertData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString
  nameWithType: X509Certificate.GetRawCertDataString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber
  nameWithType: X509Certificate.GetSerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString
  nameWithType: X509Certificate.GetSerialNumberString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import
  nameWithType: X509Certificate.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset
  nameWithType: X509Certificate.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString
  nameWithType: X509Certificate.ToString
