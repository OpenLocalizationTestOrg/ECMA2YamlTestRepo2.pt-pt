### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngProperty
  id: CngProperty
  children:
  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngProperty.Equals(System.Object)
  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.GetHashCode
  - System.Security.Cryptography.CngProperty.GetValue
  - System.Security.Cryptography.CngProperty.Name
  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.Options
  langs:
  - csharp
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
  type: Struct
  summary: "Encapsula uma propriedade de uma chave de Cryptography Next Generation (CNG) ou o fornecedor."
  remarks: "Esta classe contém um nome de propriedade (uma cadeia), um valor (matriz de bytes), um <xref:System.Security.Cryptography.CngPropertyOptions>sinalizador, propriedades de acessor e comparação hash e de funções.</xref:System.Security.Cryptography.CngPropertyOptions>       Esta classe é utilizada com o <xref:System.Security.Cryptography.CngKey.SetProperty%2A>e <xref:System.Security.Cryptography.CngKey.GetProperty%2A>métodos.</xref:System.Security.Cryptography.CngKey.GetProperty%2A> </xref:System.Security.Cryptography.CngKey.SetProperty%2A>"
  syntax:
    content: 'public struct CngProperty : IEquatable<System.Security.Cryptography.CngProperty>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Security.Cryptography.CngProperty>
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> classe."
  remarks: "Propriedades que são armazenadas com um conjunto específico de <xref:System.Security.Cryptography.CngPropertyOptions>sinalizadores requerem o mesmo conjunto de sinalizadores quando estes são obtidos.</xref:System.Security.Cryptography.CngPropertyOptions>"
  syntax:
    content: public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "O nome de propriedade ao inicializar."
    - id: value
      type: System.Byte[]
      description: "O valor da propriedade ao inicializar."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Uma combinação bit a bit dos valores da enumeração que especificam a forma como a propriedade está armazenada."
  overload: System.Security.Cryptography.CngProperty.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Compara o objeto especificado para o atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objetos são considerados igual se os respetivos nomes, valores e as opções são equivalentes.</xref:System.Security.Cryptography.CngProperty> Comparação do nome é executada de forma maiúsculas e minúsculas."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um objeto a ser comparada ao atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> obj </code> parâmetro é uma <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto que especifica a mesma propriedade como o objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  id: Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Compara especificado <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objetos são considerados igual se os respetivos nomes, valores e as opções são equivalentes.</xref:System.Security.Cryptography.CngProperty> Comparação do nome é executada de forma maiúsculas e minúsculas."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngProperty other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProperty
      description: "Um objeto a ser comparada ao atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> other </code> parâmetro representa a mesma propriedade como o objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gera um valor de hash para o atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O valor de hash de atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
  overload: System.Security.Cryptography.CngProperty.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetValue
  id: GetValue
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém o valor da propriedade que atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> Especifica o objeto."
  syntax:
    content: public byte[] GetValue ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz que representa o valor armazenado na propriedade."
  overload: System.Security.Cryptography.CngProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Name
  id: Name
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém a propriedade nome da atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> Especifica o objeto."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome da propriedade que está definido no atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
  overload: System.Security.Cryptography.CngProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determina se dois <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objetos especificam o mesmo nome de propriedade, valor e as opções."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objetos são considerados igual se os respetivos nomes, valores e as opções são equivalentes.</xref:System.Security.Cryptography.CngProperty> Comparação do nome é executada de forma maiúsculas e minúsculas."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "Um objeto que especifica uma propriedade de uma chave de Cryptography Next Generation (CNG) ou o fornecedor."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "Um objeto segundo, a ser comparada ao objeto de que é identificado pelo `left` parâmetro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois objetos especificar a mesma propriedade; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determina se dois <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objetos não especificar o mesmo nome de propriedade, valor e as opções."
  remarks: "<xref:System.Security.Cryptography.CngProperty>objetos são considerados igual se os respetivos nomes, valores e as opções são equivalentes.</xref:System.Security.Cryptography.CngProperty> Comparação do nome é executada de forma maiúsculas e minúsculas."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "Um objeto que especifica uma propriedade de uma chave de Cryptography Next Generation (CNG) ou o fornecedor."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "Um objeto segundo, a ser comparada ao objeto de que é identificado pelo `left` parâmetro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois objetos não especificam a mesma propriedade; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProperty.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Options
  id: Options
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém as opções de propriedade que atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> Especifica o objeto."
  remarks: "<xref:System.Security.Cryptography.CngKey>objetos conter <xref:System.Security.Cryptography.CngProperty>objetos, que contém o <xref:System.Security.Cryptography.CngPropertyOptions>armazenado com a propriedade.</xref:System.Security.Cryptography.CngPropertyOptions> </xref:System.Security.Cryptography.CngProperty></xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public System.Security.Cryptography.CngPropertyOptions Options { get; }
    return:
      type: System.Security.Cryptography.CngPropertyOptions
      description: "Um objeto que especifica as opções definidas no atual <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> objeto."
  overload: System.Security.Cryptography.CngProperty.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngProperty.GetValue
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
- uid: System.Security.Cryptography.CngProperty.Name
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.Options
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
- uid: System.Security.Cryptography.CngProperty.#ctor*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty.CngProperty
- uid: System.Security.Cryptography.CngProperty.Equals*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals
  nameWithType: CngProperty.Equals
- uid: System.Security.Cryptography.CngProperty.GetHashCode*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode
  nameWithType: CngProperty.GetHashCode
- uid: System.Security.Cryptography.CngProperty.GetValue*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue
  nameWithType: CngProperty.GetValue
- uid: System.Security.Cryptography.CngProperty.Name*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality
  nameWithType: CngProperty.op_Equality
- uid: System.Security.Cryptography.CngProperty.op_Inequality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality
  nameWithType: CngProperty.op_Inequality
- uid: System.Security.Cryptography.CngProperty.Options*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
