### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  id: DetailsViewCommandEventHandler
  langs:
  - csharp
  name: DetailsViewCommandEventHandler
  nameWithType: DetailsViewCommandEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  type: Delegate
  summary: "Represents the method that handles the <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;></xref> event of a <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref> control."
  remarks: "The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event when a button within a <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, or <xref:System.Web.UI.WebControls.TemplateField> row field is clicked. This allows you to provide an event handler that performs a custom routine whenever this event occurs.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.DetailsView> control also raises other specialized events when certain buttons are clicked (buttons with the `CommandName` property set to &quot;Delete&quot;, &quot;Insert&quot;, &quot;Page&quot;, or &quot;Update&quot;). When using one of these buttons, you should consider using one of the specialized events provided by the control (such as <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> or <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).       When you create a DetailsViewCommandEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  example:
  - "The following code example demonstrates how to programmatically add a DetailsViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event of a <xref:System.Web.UI.WebControls.DetailsView> control. This example uses the single-file coding model.  \n  \n [!code-vb[DetailsViewCommandEventHandlerCodeInline#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_1.aspx)]\n [!code-cs[DetailsViewCommandEventHandlerCodeInline#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_1.aspx)]  \n  \n The following code example shows a code-behind coding model version of the previous example. For this example to work, you must copy the code below into the associated code-behind file.  \n  \n [!code-cs[DetailsViewCommandEventHandlerCodeBehind#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_2.aspx)]\n [!code-vb[DetailsViewCommandEventHandlerCodeBehind#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_2.aspx)]  \n  \n The following code example shows the code-behind file for the previous example.  \n  \n [!code-vb[DetailsViewCommandEventHandlerCodeBehind#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_3.vb)]\n [!code-cs[DetailsViewCommandEventHandlerCodeBehind#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_3.cs)]  \n  \n The following code example demonstrates how to declaratively add a DetailsViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_4.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_4.aspx)]"
  syntax:
    content: public delegate void DetailsViewCommandEventHandler(object sender, DetailsViewCommandEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
