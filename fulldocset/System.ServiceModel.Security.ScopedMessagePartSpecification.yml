### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification
  id: ScopedMessagePartSpecification
  children:
  - System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor
  - System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  - System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  - System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  - System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly
  - System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  langs:
  - csharp
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification
  type: Class
  summary: "Specifies which parts are included in a message."
  remarks: "This class contains the <xref:System.ServiceModel.Security.MessagePartSpecification> instances of different messages, each distinguished by the message Action."
  syntax:
    content: public class ScopedMessagePartSpecification
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: ScopedMessagePartSpecification()
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;></xref> class."
  syntax:
    content: public ScopedMessagePartSpecification ();
    parameters: []
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)
  id: '#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)'
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;></xref> class from another instance of this class."
  syntax:
    content: public ScopedMessagePartSpecification (System.ServiceModel.Security.ScopedMessagePartSpecification other);
    parameters:
    - id: other
      type: System.ServiceModel.Security.ScopedMessagePartSpecification
      description: "The other <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;></xref>."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  id: Actions
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets a collection of action keys."
  syntax:
    content: public System.Collections.Generic.ICollection<string> Actions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "An &lt;xref:System.Collections.Generic.ICollection%601&gt; of type <xref:System.String> that contains the keys of a collection of action parts."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)
  id: AddParts(System.ServiceModel.Security.MessagePartSpecification)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: AddParts(MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Adds channel message parts to the collections in the instance of this class."
  syntax:
    content: public void AddParts (System.ServiceModel.Security.MessagePartSpecification parts);
    parameters:
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "The <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;></xref> that contains the parts to be added."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parts</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;></xref> is read-only."
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  id: AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: AddParts(MessagePartSpecification,String)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Adds message parts to the <xref uid=&quot;langword_csharp_MessagePartSpecification&quot; name=&quot;MessagePartSpecification&quot; href=&quot;&quot;></xref> that corresponds to the specified action."
  syntax:
    content: public void AddParts (System.ServiceModel.Security.MessagePartSpecification parts, string action);
    parameters:
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "The <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;></xref> that contains the parts to be added."
    - id: action
      type: System.String
      description: "The action key to match to."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parts</code> or <code>action</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;></xref> is read-only."
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  id: ChannelParts
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets a message part specification that contains the channel parts."
  remarks: "The channel parts denote the message parts that are common to all the messages."
  syntax:
    content: public System.ServiceModel.Security.MessagePartSpecification ChannelParts { get; }
    return:
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "A <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;></xref> that contains the channel parts."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  id: IsReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indicates whether the specification is read-only."
  remarks: "You can use <xref:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly%2A> to set this property to `true`."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specification is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly
  id: MakeReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Sets the specification to read-only."
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  id: TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: TryGetParts(String,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Checks whether there are parts that match a given action key."
  remarks: "If the given action is not present in the <xref:System.ServiceModel.Security.ScopedMessagePartSpecification>, then the message parts configured for the Wildcard action (&quot;*&quot;) are returned."
  syntax:
    content: public bool TryGetParts (string action, out System.ServiceModel.Security.MessagePartSpecification parts);
    parameters:
    - id: action
      type: System.String
      description: "The action key."
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "When this method returns, contains a <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;></xref> that contains the parts found. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if matching parts were found; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  id: TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: TryGetParts(String,Boolean,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Checks whether there are parts that match a given action key."
  remarks: "If the given action is not present in the <xref:System.ServiceModel.Security.ScopedMessagePartSpecification>, then the message parts configured for the Wildcard action (&quot;*&quot;) are returned."
  syntax:
    content: public bool TryGetParts (string action, bool excludeChannelScope, out System.ServiceModel.Security.MessagePartSpecification parts);
    parameters:
    - id: action
      type: System.String
      description: "The action key."
    - id: excludeChannelScope
      type: System.Boolean
      description: "When <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, restricts the parts to the current channel."
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "When this method returns, contains a <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;></xref> that contains the parts found. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if matching parts were found; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ScopedMessagePartSpecification()
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification()
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification
  parent: System.ServiceModel.Security
  isExternal: false
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: AddParts(MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
- uid: System.ServiceModel.Security.MessagePartSpecification
  parent: System.ServiceModel.Security
  isExternal: false
  name: MessagePartSpecification
  nameWithType: MessagePartSpecification
  fullName: System.ServiceModel.Security.MessagePartSpecification
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: AddParts(MessagePartSpecification,String)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: MakeReadOnly()
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly()
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: TryGetParts(String,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: TryGetParts(String,Boolean,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: AddParts
  nameWithType: ScopedMessagePartSpecification.AddParts
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: MakeReadOnly
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: TryGetParts
  nameWithType: ScopedMessagePartSpecification.TryGetParts
