### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlBinary
  id: SqlBinary
  children:
  - System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])
  - System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.Equals(System.Object)
  - System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.GetHashCode
  - System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.IsNull
  - System.Data.SqlTypes.SqlBinary.Item(System.Int32)
  - System.Data.SqlTypes.SqlBinary.Length
  - System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.Null
  - System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  - System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])
  - System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlBinary.ToSqlGuid
  - System.Data.SqlTypes.SqlBinary.ToString
  - System.Data.SqlTypes.SqlBinary.Value
  langs:
  - csharp
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
  type: Struct
  summary: "Represents a variable-length stream of binary data to be stored in or retrieved from a database."
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlBinary : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: SqlBinary(Byte[])
  nameWithType: SqlBinary.SqlBinary(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.SqlBinary(Byte[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure, setting the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property to the contents of the supplied byte array."
  syntax:
    content: public SqlBinary (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "The byte array to be stored or retrieved."
  overload: System.Data.SqlTypes.SqlBinary.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Add(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Add(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Add(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Concatenates two specified <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> values to create a new <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure."
  remarks: '`x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`.'
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary Add (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A ."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A ."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)
  id: CompareTo(System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: CompareTo(SqlBinary)
  nameWithType: SqlBinary.CompareTo(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares this <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> object to the supplied <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> object and returns an indication of their relative values."
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlBinary value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBinary
      description: "The  object to be compared to this  structure."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.CompareTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlBinary.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares this <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> object to the supplied object and returns an indication of their relative values."
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to be compared to this  structure."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.CompareTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Concat(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Concat(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Concat(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Concatenates two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to create a new <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure."
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary Concat (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.Concat*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlBinary.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares the supplied object parameter to the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property of the <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> object."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to be compared."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Equals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Equals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether they are equal."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlBinary.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBinary.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Returns the hash code for this <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBinary.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBinary.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Returns the XML Schema definition language (XSD) of the specified <see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot;></see>."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "An ."
    return:
      type: System.Xml.XmlQualifiedName
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.GetXsdType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThan(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether the first is greater than the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.GreaterThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether the first is greater than or equal to the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlBinary.IsNull
  fullName: System.Data.SqlTypes.SqlBinary.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Indicates whether this <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure is null. This property is read-only."
  remarks: "For more information, see [Handling Null Values](../Topic/Handling%20Null%20Values.md)."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBinary.IsNull*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SqlBinary.Item(Int32)
  fullName: System.Data.SqlTypes.SqlBinary.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Gets the single byte from the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property located at the position indicated by the integer parameter, <span class=&quot;paramref&quot;>index</span>. If <span class=&quot;paramref&quot;>index</span> indicates a position beyond the end of the byte array, a <see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot;></see> will be raised. This property is read-only."
  remarks: "To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property and the <xref:System.Data.SqlTypes.SqlBinary.Length%2A> property before reading this property."
  syntax:
    content: public byte this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The position of the byte to be retrieved."
    return:
      type: System.Byte
      description: "The byte located at the position indicated by the integer parameter."
  overload: System.Data.SqlTypes.SqlBinary.Item*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "The property is read when the <xref:System.Data.SqlTypes.SqlBinary.Value%2A> property contains   \n  \n \\- or -  \n  \n The index parameter indicates a position byond the length of the byte array as indicated by the <xref:System.Data.SqlTypes.SqlBinary.Length%2A> property."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Length
  id: Length
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Length
  nameWithType: SqlBinary.Length
  fullName: System.Data.SqlTypes.SqlBinary.Length
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Gets the length in bytes of the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property. This property is read-only."
  remarks: "To avoid raising a <xref:System.Data.SqlTypes.SqlNullValueException>, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Length property."
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "The length of the binary data in the &lt;xref:System.Data.SqlTypes.SqlBinary.Value%2A&gt; property."
  overload: System.Data.SqlTypes.SqlBinary.Length*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "The Length property is read when the <xref:System.Data.SqlTypes.SqlBinary.Value%2A> property contains ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThan(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether the first is less than the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.LessThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether the first is less than or equal to the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.LessThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: NotEquals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.NotEquals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.NotEquals(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether they are not equal."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  structure."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.NotEquals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlBinary.Null
  fullName: System.Data.SqlTypes.SqlBinary.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Represents a <see cref=&quot;T:System.DBNull&quot;></see> that can be assigned to this instance of the <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure."
  remarks: '`Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlBinary> structure. For more information, see [Handling Null Values](../Topic/Handling%20Null%20Values.md).'
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBinary Null;
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Addition(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Addition(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Addition(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Concatenates the two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> parameters to create a new <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure."
  remarks: '`x` will appear first in the resulting <xref:System.Data.SqlTypes.SqlBinary>, followed by `y`.'
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary op_Addition (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_Addition*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Equality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Equality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Equality(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether they are equal."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_Equality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  id: op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Explicit(SqlBinary)
  nameWithType: SqlBinary.op_Explicit(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static byte[] op_Explicit (System.Data.SqlTypes.SqlBinary x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "To be added."
    return:
      type: System.Byte[]
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_Explicit*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  id: op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Explicit(SqlGuid)
  nameWithType: SqlBinary.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlGuid)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary op_Explicit (System.Data.SqlTypes.SqlGuid x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlGuid
      description: "To be added."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_Explicit*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether the first is greater than the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_GreaterThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structues to determine whether the first is greater than or equal to the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])
  id: op_Implicit(System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Implicit(Byte[])
  nameWithType: SqlBinary.op_Implicit(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.op_Implicit(Byte[])
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary op_Implicit (byte[] x);
    parameters:
    - id: x
      type: System.Byte[]
      description: "To be added."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_Implicit*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Inequality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Inequality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Inequality(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether they are not equal."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_Inequality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThan(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether the first is less than the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_LessThan*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compares two <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structures to determine whether the first is less than or equal to the second."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A  object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A <xref:System.Xml.XmlReader>."
  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "For a description of this member, see &lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.SqlTypes.SqlBinary> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>."
  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid
  id: ToSqlGuid
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: ToSqlGuid()
  nameWithType: SqlBinary.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlBinary.ToSqlGuid()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converts this instance of <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> to <see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot;></see>."
  syntax:
    content: public System.Data.SqlTypes.SqlGuid ToSqlGuid ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.ToSqlGuid*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlBinary.ToString()
  fullName: System.Data.SqlTypes.SqlBinary.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converts this <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> object to a string."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Data.SqlTypes.SqlBinary.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.SqlTypes.SqlBinary.Value
  id: Value
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Value
  nameWithType: SqlBinary.Value
  fullName: System.Data.SqlTypes.SqlBinary.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Gets the value of the <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure. This property is read-only."
  remarks: "To avoid raising a SqlNullValueException, always examine the <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A> property before reading the Value property."
  syntax:
    content: public byte[] Value { get; }
    return:
      type: System.Byte[]
      description: "The value of the <see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot;></see> structure."
  overload: System.Data.SqlTypes.SqlBinary.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "The Value property is read when the property contains ."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: SqlBinary(Byte[])
  nameWithType: SqlBinary.SqlBinary(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.SqlBinary(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Add(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Add(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Add(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: CompareTo(SqlBinary)
  nameWithType: SqlBinary.CompareTo(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(SqlBinary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlBinary.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Concat(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Concat(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Concat(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlBinary.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Equals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Equals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlBinary.GetHashCode
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlBinary.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBinary.GetHashCode()
- uid: System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBinary.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBinary.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.IsNull
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: IsNull
  nameWithType: SqlBinary.IsNull
  fullName: System.Data.SqlTypes.SqlBinary.IsNull
- uid: System.Data.SqlTypes.SqlBinary.Item(System.Int32)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Item(Int32)
  nameWithType: SqlBinary.Item(Int32)
  fullName: System.Data.SqlTypes.SqlBinary.Item(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlBinary.Length
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Length
  nameWithType: SqlBinary.Length
  fullName: System.Data.SqlTypes.SqlBinary.Length
- uid: System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: NotEquals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.NotEquals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.NotEquals(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.Null
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: "Null"
  nameWithType: SqlBinary.Null
  fullName: System.Data.SqlTypes.SqlBinary.Null
- uid: System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Addition(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Addition(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Addition(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Equality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Equality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Equality(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Explicit(SqlBinary)
  nameWithType: SqlBinary.op_Explicit(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Explicit(SqlGuid)
  nameWithType: SqlBinary.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlGuid)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Implicit(Byte[])
  nameWithType: SqlBinary.op_Implicit(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.op_Implicit(Byte[])
- uid: System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Inequality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Inequality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Inequality(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToSqlGuid()
  nameWithType: SqlBinary.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlBinary.ToSqlGuid()
- uid: System.Data.SqlTypes.SqlBinary.ToString
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToString()
  nameWithType: SqlBinary.ToString()
  fullName: System.Data.SqlTypes.SqlBinary.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlBinary.Value
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Value
  nameWithType: SqlBinary.Value
  fullName: System.Data.SqlTypes.SqlBinary.Value
- uid: System.Data.SqlTypes.SqlBinary.#ctor*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary.SqlBinary
- uid: System.Data.SqlTypes.SqlBinary.Add*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Add
  nameWithType: SqlBinary.Add
- uid: System.Data.SqlTypes.SqlBinary.CompareTo*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: CompareTo
  nameWithType: SqlBinary.CompareTo
- uid: System.Data.SqlTypes.SqlBinary.Concat*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Concat
  nameWithType: SqlBinary.Concat
- uid: System.Data.SqlTypes.SqlBinary.Equals*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Equals
  nameWithType: SqlBinary.Equals
- uid: System.Data.SqlTypes.SqlBinary.GetHashCode*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetHashCode
  nameWithType: SqlBinary.GetHashCode
- uid: System.Data.SqlTypes.SqlBinary.GetXsdType*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetXsdType
  nameWithType: SqlBinary.GetXsdType
- uid: System.Data.SqlTypes.SqlBinary.GreaterThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThan
  nameWithType: SqlBinary.GreaterThan
- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlBinary.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.IsNull*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: IsNull
  nameWithType: SqlBinary.IsNull
- uid: System.Data.SqlTypes.SqlBinary.Item*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Item
  nameWithType: SqlBinary.Item
- uid: System.Data.SqlTypes.SqlBinary.Length*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Length
  nameWithType: SqlBinary.Length
- uid: System.Data.SqlTypes.SqlBinary.LessThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThan
  nameWithType: SqlBinary.LessThan
- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlBinary.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.NotEquals*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: NotEquals
  nameWithType: SqlBinary.NotEquals
- uid: System.Data.SqlTypes.SqlBinary.op_Addition*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Addition
  nameWithType: SqlBinary.op_Addition
- uid: System.Data.SqlTypes.SqlBinary.op_Equality*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Equality
  nameWithType: SqlBinary.op_Equality
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Explicit
  nameWithType: SqlBinary.op_Explicit
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlBinary.op_GreaterThan
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlBinary.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.op_Implicit*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Implicit
  nameWithType: SqlBinary.op_Implicit
- uid: System.Data.SqlTypes.SqlBinary.op_Inequality*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Inequality
  nameWithType: SqlBinary.op_Inequality
- uid: System.Data.SqlTypes.SqlBinary.op_LessThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThan
  nameWithType: SqlBinary.op_LessThan
- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlBinary.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToSqlGuid
  nameWithType: SqlBinary.ToSqlGuid
- uid: System.Data.SqlTypes.SqlBinary.ToString*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToString
  nameWithType: SqlBinary.ToString
- uid: System.Data.SqlTypes.SqlBinary.Value*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Value
  nameWithType: SqlBinary.Value
