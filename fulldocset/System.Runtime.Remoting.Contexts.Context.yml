### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.Context
  id: Context
  children:
  - System.Runtime.Remoting.Contexts.Context.#ctor
  - System.Runtime.Remoting.Contexts.Context.AllocateDataSlot
  - System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)
  - System.Runtime.Remoting.Contexts.Context.ContextID
  - System.Runtime.Remoting.Contexts.Context.ContextProperties
  - System.Runtime.Remoting.Contexts.Context.DefaultContext
  - System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  - System.Runtime.Remoting.Contexts.Context.Finalize
  - System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Contexts.Context.Freeze
  - System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)
  - System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)
  - System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)
  - System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)
  - System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  - System.Runtime.Remoting.Contexts.Context.ToString
  - System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  langs:
  - csharp
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
  type: Class
  summary: "Define um ambiente para os objetos que estão residente dentro-lo e para que uma política pode ser imposta."
  remarks: "A context is an ordered sequence of properties that define an environment for the objects resident inside it. Contexts get created during the activation process for objects that are configured to require certain automatic services, such as synchronization, transactions, just-in-time activation, security, and so on. Multiple objects can live inside a context.  \n  \n Classes are marked with an instance of the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class, which provides the usage rules. Whenever a new object is instantiated, the .NET Framework finds a compatible or creates a new instance of the Context class for the object. Once an object is placed in a context, it stays in it for life. Classes that can be bound to a context are called context-bound classes. When accessed from another context, such classes are referenced directly by using a proxy. Any call from an object in one context to an object in another context will go through a context proxy and be affected by the policy that the combined context properties enforce.  \n  \n A new object's context is generally chosen based on meta-data attributes on the class. This mechanism is extensible through custom attributes. These are known as static-context properties, which are compiled into the class meta-data. Dynamic-context properties (also known as configuration properties) can be applied and configured by administrators.  \n  \n For more information on contexts, see [&#91;\\<topic://cpconboundariesprocessesapplicationdomainscontexts>&#93;](http://msdn.microsoft.com/en-us/7574180d-70df-44b8-8b78-55a119f2c96d)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Context
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: Context()
  nameWithType: Context.Context()
  fullName: System.Runtime.Remoting.Contexts.Context.Context()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Contexts.Context&quot;> </xref> classe."
  syntax:
    content: public Context ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.Context.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot
  id: AllocateDataSlot
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: AllocateDataSlot()
  nameWithType: Context.AllocateDataSlot()
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Atribui um bloco de dados sem nome."
  remarks: "O espaço é alocado tendo em todos os contextos."
  syntax:
    content: public static LocalDataStoreSlot AllocateDataSlot ();
    parameters: []
    return:
      type: System.LocalDataStoreSlot
      description: "Um bloco de dados local."
  overload: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)
  id: AllocateNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: AllocateNamedDataSlot(String)
  nameWithType: Context.AllocateNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Atribui um bloco de dados com nome."
  remarks: "O espaço é alocado tendo em todos os contextos. Ranhuras de dados com nome são públicas e podem ser manipuladas a qualquer pessoa."
  syntax:
    content: public static LocalDataStoreSlot AllocateNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome necessário para o bloco de dados."
    return:
      type: System.LocalDataStoreSlot
      description: "Um objeto de bloco de dados local."
  overload: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.ContextID
  id: ContextID
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: ContextID
  nameWithType: Context.ContextID
  fullName: System.Runtime.Remoting.Contexts.Context.ContextID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Obtém o ID de contexto para o contexto atual."
  syntax:
    content: public virtual int ContextID { get; }
    return:
      type: System.Int32
      description: "O ID de contexto para o contexto atual."
  overload: System.Runtime.Remoting.Contexts.Context.ContextID*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties
  id: ContextProperties
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: ContextProperties
  nameWithType: Context.ContextProperties
  fullName: System.Runtime.Remoting.Contexts.Context.ContextProperties
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Obtém a matriz de propriedades de contexto atual."
  syntax:
    content: public virtual System.Runtime.Remoting.Contexts.IContextProperty[] ContextProperties { get; }
    return:
      type: System.Runtime.Remoting.Contexts.IContextProperty[]
      description: "A matriz de propriedades do contexto atual; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o contexto não tiver quaisquer propriedades atribuídas ao mesmo."
  overload: System.Runtime.Remoting.Contexts.Context.ContextProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext
  id: DefaultContext
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: DefaultContext
  nameWithType: Context.DefaultContext
  fullName: System.Runtime.Remoting.Contexts.Context.DefaultContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Obtém o contexto predefinido para o domínio de aplicação atual."
  remarks: "Cada thread num domínio de aplicação para o qual um contexto não for explicitamente definido é considerado estar em execução no contexto predefinido."
  syntax:
    content: public static System.Runtime.Remoting.Contexts.Context DefaultContext { get; }
    return:
      type: System.Runtime.Remoting.Contexts.Context
      description: "O contexto predefinido para o <xref href=&quot;System.AppDomain&quot;> </xref> espaço de nomes."
  overload: System.Runtime.Remoting.Contexts.Context.DefaultContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  id: DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: DoCallBack(CrossContextDelegate)
  nameWithType: Context.DoCallBack(CrossContextDelegate)
  fullName: System.Runtime.Remoting.Contexts.Context.DoCallBack(CrossContextDelegate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Executa o código no contexto de outro."
  remarks: "Pode ser feita uma chamada de retorno ao chamar o método DoCallBack nela mediante a transmissão num delegado. O delegado é utilizado para pedir uma chamada de retorno. O delegado tem de ser um <xref:System.Runtime.Remoting.Contexts.CrossContextDelegate>tipo de classe.</xref:System.Runtime.Remoting.Contexts.CrossContextDelegate>"
  syntax:
    content: public void DoCallBack (System.Runtime.Remoting.Contexts.CrossContextDelegate deleg);
    parameters:
    - id: deleg
      type: System.Runtime.Remoting.Contexts.CrossContextDelegate
      description: "O delegado utilizado para pedir a chamada de retorno."
  overload: System.Runtime.Remoting.Contexts.Context.DoCallBack*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.Finalize
  id: Finalize
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: Finalize()
  nameWithType: Context.Finalize()
  fullName: System.Runtime.Remoting.Contexts.Context.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Limpa os objetos de cópia de segurança para os contextos não predefinidas."
  remarks: "Para contextos de predefinição, os objetos de cópia de segurança sejam limpos durante encerrar para baixo da <xref:System.AppDomain>classe.</xref:System.AppDomain>"
  syntax:
    content: ~Context ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.Context.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: Context.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Liberta uma ranhura denominada dados todos os contextos."
  remarks: "Ranhuras de dados com nome são públicas e podem ser manipuladas a qualquer pessoa."
  syntax:
    content: public static void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da ranhura de dados para libertar."
  overload: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.Freeze
  id: Freeze
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: Freeze()
  nameWithType: Context.Freeze()
  fullName: System.Runtime.Remoting.Contexts.Context.Freeze()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Freezes contexto, impossibilitando adicionar ou remover propriedades de contexto de contexto atual."
  remarks: "Não não possível adicionar propriedades de contexto depois do contexto foi congelado."
  syntax:
    content: public virtual void Freeze ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.Context.Freeze*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O contexto já está congelado."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)
  id: GetData(System.LocalDataStoreSlot)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: GetData(LocalDataStoreSlot)
  nameWithType: Context.GetData(LocalDataStoreSlot)
  fullName: System.Runtime.Remoting.Contexts.Context.GetData(LocalDataStoreSlot)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Obtém o valor da ranhura especificada no contexto atual."
  syntax:
    content: public static object GetData (LocalDataStoreSlot slot);
    parameters:
    - id: slot
      type: System.LocalDataStoreSlot
      description: "O bloco de dados que contém os dados."
    return:
      type: System.Object
      description: "Devolve os dados associados <code> slot </code>."
  overload: System.Runtime.Remoting.Contexts.Context.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)
  id: GetNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: GetNamedDataSlot(String)
  nameWithType: Context.GetNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Procura um bloco de dados com nome."
  remarks: "Se o nome não foi utilizado, é atribuída a uma nova ranhura. Ranhuras de dados com nome são públicas e podem ser manipuladas a qualquer pessoa."
  syntax:
    content: public static LocalDataStoreSlot GetNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da ranhura de dados."
    return:
      type: System.LocalDataStoreSlot
      description: "Devolve um bloco de dados local."
  overload: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: Context.GetProperty(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Devolve uma propriedade de contexto específico, especificada pelo nome."
  syntax:
    content: public virtual System.Runtime.Remoting.Contexts.IContextProperty GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade."
    return:
      type: System.Runtime.Remoting.Contexts.IContextProperty
      description: "A propriedade de contexto especificado."
  overload: System.Runtime.Remoting.Contexts.Context.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  id: RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  nameWithType: Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Regista uma propriedade dinâmica implementar o <xref href=&quot;System.Runtime.Remoting.Contexts.IDynamicProperty&quot;> </xref> interface com o serviço de sistema de interação remota."
  remarks: "Com base no `obj` e `ctx`, `prop` é-lhe pedido para contribuir com um receptor de que é colocado em algumas localização no caminho de chamadas de sistema de interação remota. Se várias propriedades estiverem registadas, as respetivas sinks serão chamados por uma ordem arbitrária que pode alternar entre chamadas.       Se `obj` não é `null`, e, em seguida, se se tratar de um proxy, todas as chamadas efectuadas no proxy são forem intercetadas. Caso contrário, se `obj` é um objeto real, todas as chamadas do objeto são intercetámo. O `ctx` parâmetro tem de ser `null`.       Se `ctx` não é `null`, `obj` tem de ser `null` e são intercetámo todas as chamadas da entrada ou saída de contexto.       Se ambos os `ctx` e `obj` são `null`, todas as chamadas da entrada ou saída de todos os contextos são intercetámo."
  syntax:
    content: public static bool RegisterDynamicProperty (System.Runtime.Remoting.Contexts.IDynamicProperty prop, ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx);
    parameters:
    - id: prop
      type: System.Runtime.Remoting.Contexts.IDynamicProperty
      description: "A propriedade dinâmica para registar."
    - id: obj
      type: System.ContextBoundObject
      description: "O objeto de proxy para o qual o `property` está registado."
    - id: ctx
      type: System.Runtime.Remoting.Contexts.Context
      description: "O contexto para a qual o `property` está registado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade foi registada com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> prop </code> ou o respetivo nome é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou não for dinâmico (não implementa <xref href=&quot;System.Runtime.Remoting.Contexts.IDynamicProperty&quot;> </xref>)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Foram especificado ambos um objeto, bem como um contexto (ambos <code> obj </code> e <code> ctx </code> não são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)
  id: SetData(System.LocalDataStoreSlot,System.Object)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: SetData(LocalDataStoreSlot,Object)
  nameWithType: Context.SetData(LocalDataStoreSlot,Object)
  fullName: System.Runtime.Remoting.Contexts.Context.SetData(LocalDataStoreSlot,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Define os dados na ranhura de especificado no contexto atual."
  syntax:
    content: public static void SetData (LocalDataStoreSlot slot, object data);
    parameters:
    - id: slot
      type: System.LocalDataStoreSlot
      description: "O bloco de dados onde os dados estão a ser adicionado."
    - id: data
      type: System.Object
      description: "Os dados que está a ser adicionado."
  overload: System.Runtime.Remoting.Contexts.Context.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  id: SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: SetProperty(IContextProperty)
  nameWithType: Context.SetProperty(IContextProperty)
  fullName: System.Runtime.Remoting.Contexts.Context.SetProperty(IContextProperty)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Define uma propriedade de contexto específico por nome."
  remarks: "Não é permitida a adição de propriedades para o contexto predefinido."
  syntax:
    content: public virtual void SetProperty (System.Runtime.Remoting.Contexts.IContextProperty prop);
    parameters:
    - id: prop
      type: System.Runtime.Remoting.Contexts.IContextProperty
      description: "A propriedade de contexto real."
  overload: System.Runtime.Remoting.Contexts.Context.SetProperty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O contexto está fixa."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A propriedade ou o nome da propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.ToString
  id: ToString
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: ToString()
  nameWithType: Context.ToString()
  fullName: System.Runtime.Remoting.Contexts.Context.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Devolve um <xref:System.String>classe representação do contexto atual.</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>classe representação do contexto atual.</xref:System.String>"
  overload: System.Runtime.Remoting.Contexts.Context.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  id: UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: UnregisterDynamicProperty(String,ContextBoundObject,Context)
  nameWithType: Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Anula o registo de uma propriedade dinâmica implementar o <xref href=&quot;System.Runtime.Remoting.Contexts.IDynamicProperty&quot;> </xref> interface."
  syntax:
    content: public static bool UnregisterDynamicProperty (string name, ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade ao anular o registo dinâmico."
    - id: obj
      type: System.ContextBoundObject
      description: "O objeto de proxy para o qual o `property` está registado."
    - id: ctx
      type: System.Runtime.Remoting.Contexts.Context
      description: "O contexto para a qual o `property` está registado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto foi anulado com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Foram especificado ambos um objeto, bem como um contexto (ambos <code> obj </code> e <code> ctx </code> não são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Contexts.Context.#ctor
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Context()
  nameWithType: Context.Context()
  fullName: System.Runtime.Remoting.Contexts.Context.Context()
- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateDataSlot()
  nameWithType: Context.AllocateDataSlot()
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot()
- uid: System.LocalDataStoreSlot
  parent: System
  isExternal: false
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateNamedDataSlot(String)
  nameWithType: Context.AllocateNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Contexts.Context.ContextID
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextID
  nameWithType: Context.ContextID
  fullName: System.Runtime.Remoting.Contexts.Context.ContextID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextProperties
  nameWithType: Context.ContextProperties
  fullName: System.Runtime.Remoting.Contexts.Context.ContextProperties
- uid: System.Runtime.Remoting.Contexts.IContextProperty[]
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: IContextProperty
  nameWithType: IContextProperty
  fullName: System.Runtime.Remoting.Contexts.IContextProperty[]
  spec.csharp:
  - uid: System.Runtime.Remoting.Contexts.IContextProperty
    name: IContextProperty
    nameWithType: IContextProperty
    fullName: IContextProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DefaultContext
  nameWithType: Context.DefaultContext
  fullName: System.Runtime.Remoting.Contexts.Context.DefaultContext
- uid: System.Runtime.Remoting.Contexts.Context
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DoCallBack(CrossContextDelegate)
  nameWithType: Context.DoCallBack(CrossContextDelegate)
  fullName: System.Runtime.Remoting.Contexts.Context.DoCallBack(CrossContextDelegate)
- uid: System.Runtime.Remoting.Contexts.CrossContextDelegate
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: CrossContextDelegate
  nameWithType: CrossContextDelegate
  fullName: System.Runtime.Remoting.Contexts.CrossContextDelegate
- uid: System.Runtime.Remoting.Contexts.Context.Finalize
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Finalize()
  nameWithType: Context.Finalize()
  fullName: System.Runtime.Remoting.Contexts.Context.Finalize()
- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: Context.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(String)
- uid: System.Runtime.Remoting.Contexts.Context.Freeze
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Freeze()
  nameWithType: Context.Freeze()
  fullName: System.Runtime.Remoting.Contexts.Context.Freeze()
- uid: System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetData(LocalDataStoreSlot)
  nameWithType: Context.GetData(LocalDataStoreSlot)
  fullName: System.Runtime.Remoting.Contexts.Context.GetData(LocalDataStoreSlot)
- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetNamedDataSlot(String)
  nameWithType: Context.GetNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(String)
- uid: System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetProperty(String)
  nameWithType: Context.GetProperty(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetProperty(String)
- uid: System.Runtime.Remoting.Contexts.IContextProperty
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: IContextProperty
  nameWithType: IContextProperty
  fullName: System.Runtime.Remoting.Contexts.IContextProperty
- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  nameWithType: Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Contexts.IDynamicProperty
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: IDynamicProperty
  nameWithType: IDynamicProperty
  fullName: System.Runtime.Remoting.Contexts.IDynamicProperty
- uid: System.ContextBoundObject
  parent: System
  isExternal: false
  name: ContextBoundObject
  nameWithType: ContextBoundObject
  fullName: System.ContextBoundObject
- uid: System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetData(LocalDataStoreSlot,Object)
  nameWithType: Context.SetData(LocalDataStoreSlot,Object)
  fullName: System.Runtime.Remoting.Contexts.Context.SetData(LocalDataStoreSlot,Object)
- uid: System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetProperty(IContextProperty)
  nameWithType: Context.SetProperty(IContextProperty)
  fullName: System.Runtime.Remoting.Contexts.Context.SetProperty(IContextProperty)
- uid: System.Runtime.Remoting.Contexts.Context.ToString
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ToString()
  nameWithType: Context.ToString()
  fullName: System.Runtime.Remoting.Contexts.Context.ToString()
- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: UnregisterDynamicProperty(String,ContextBoundObject,Context)
  nameWithType: Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
- uid: System.Runtime.Remoting.Contexts.Context.#ctor*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Context
  nameWithType: Context.Context
- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateDataSlot
  nameWithType: Context.AllocateDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateNamedDataSlot
  nameWithType: Context.AllocateNamedDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.ContextID*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextID
  nameWithType: Context.ContextID
- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextProperties
  nameWithType: Context.ContextProperties
- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DefaultContext
  nameWithType: Context.DefaultContext
- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DoCallBack
  nameWithType: Context.DoCallBack
- uid: System.Runtime.Remoting.Contexts.Context.Finalize*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Finalize
  nameWithType: Context.Finalize
- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: Context.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.Freeze*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Freeze
  nameWithType: Context.Freeze
- uid: System.Runtime.Remoting.Contexts.Context.GetData*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetData
  nameWithType: Context.GetData
- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetNamedDataSlot
  nameWithType: Context.GetNamedDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.GetProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetProperty
  nameWithType: Context.GetProperty
- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: RegisterDynamicProperty
  nameWithType: Context.RegisterDynamicProperty
- uid: System.Runtime.Remoting.Contexts.Context.SetData*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetData
  nameWithType: Context.SetData
- uid: System.Runtime.Remoting.Contexts.Context.SetProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetProperty
  nameWithType: Context.SetProperty
- uid: System.Runtime.Remoting.Contexts.Context.ToString*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ToString
  nameWithType: Context.ToString
- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: UnregisterDynamicProperty
  nameWithType: Context.UnregisterDynamicProperty
