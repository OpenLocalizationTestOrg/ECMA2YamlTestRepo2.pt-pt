### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.Context
  id: Context
  children:
  - System.Runtime.Remoting.Contexts.Context.#ctor
  - System.Runtime.Remoting.Contexts.Context.AllocateDataSlot
  - System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)
  - System.Runtime.Remoting.Contexts.Context.ContextID
  - System.Runtime.Remoting.Contexts.Context.ContextProperties
  - System.Runtime.Remoting.Contexts.Context.DefaultContext
  - System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  - System.Runtime.Remoting.Contexts.Context.Finalize
  - System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Contexts.Context.Freeze
  - System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)
  - System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)
  - System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)
  - System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)
  - System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  - System.Runtime.Remoting.Contexts.Context.ToString
  - System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  langs:
  - csharp
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
  type: Class
  summary: "Defines an environment for the objects that are resident inside it and for which a policy can be enforced."
  remarks: "A context is an ordered sequence of properties that define an environment for the objects resident inside it. Contexts get created during the activation process for objects that are configured to require certain automatic services, such as synchronization, transactions, just-in-time activation, security, and so on. Multiple objects can live inside a context.  \n  \n Classes are marked with an instance of the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class, which provides the usage rules. Whenever a new object is instantiated, the .NET Framework finds a compatible or creates a new instance of the Context class for the object. Once an object is placed in a context, it stays in it for life. Classes that can be bound to a context are called context-bound classes. When accessed from another context, such classes are referenced directly by using a proxy. Any call from an object in one context to an object in another context will go through a context proxy and be affected by the policy that the combined context properties enforce.  \n  \n A new object's context is generally chosen based on meta-data attributes on the class. This mechanism is extensible through custom attributes. These are known as static-context properties, which are compiled into the class meta-data. Dynamic-context properties (also known as configuration properties) can be applied and configured by administrators.  \n  \n For more information on contexts, see [&#91;\\<topic://cpconboundariesprocessesapplicationdomainscontexts>&#93;](http://msdn.microsoft.com/en-us/7574180d-70df-44b8-8b78-55a119f2c96d)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Context
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: Context()
  nameWithType: Context.Context()
  fullName: System.Runtime.Remoting.Contexts.Context.Context()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Contexts.Context&quot;></xref> class."
  syntax:
    content: public Context ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.Context.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot
  id: AllocateDataSlot
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: AllocateDataSlot()
  nameWithType: Context.AllocateDataSlot()
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Allocates an unnamed data slot."
  remarks: "The slot is allocated on all the contexts."
  syntax:
    content: public static LocalDataStoreSlot AllocateDataSlot ();
    parameters: []
    return:
      type: System.LocalDataStoreSlot
      description: "A local data slot."
  overload: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)
  id: AllocateNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: AllocateNamedDataSlot(String)
  nameWithType: Context.AllocateNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Allocates a named data slot."
  remarks: "The slot is allocated on all the contexts. Named data slots are public and can be manipulated by anyone."
  syntax:
    content: public static LocalDataStoreSlot AllocateNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "The required name for the data slot."
    return:
      type: System.LocalDataStoreSlot
      description: "A local data slot object."
  overload: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.ContextID
  id: ContextID
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: ContextID
  nameWithType: Context.ContextID
  fullName: System.Runtime.Remoting.Contexts.Context.ContextID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Gets the context ID for the current context."
  syntax:
    content: public virtual int ContextID { get; }
    return:
      type: System.Int32
      description: "The context ID for the current context."
  overload: System.Runtime.Remoting.Contexts.Context.ContextID*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties
  id: ContextProperties
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: ContextProperties
  nameWithType: Context.ContextProperties
  fullName: System.Runtime.Remoting.Contexts.Context.ContextProperties
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Gets the array of the current context properties."
  syntax:
    content: public virtual System.Runtime.Remoting.Contexts.IContextProperty[] ContextProperties { get; }
    return:
      type: System.Runtime.Remoting.Contexts.IContextProperty[]
      description: "The current context properties array; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the context does not have any properties attributed to it."
  overload: System.Runtime.Remoting.Contexts.Context.ContextProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext
  id: DefaultContext
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: DefaultContext
  nameWithType: Context.DefaultContext
  fullName: System.Runtime.Remoting.Contexts.Context.DefaultContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Gets the default context for the current application domain."
  remarks: "Every thread in an application domain for which a context is not explicitly set is considered to be running in the default context."
  syntax:
    content: public static System.Runtime.Remoting.Contexts.Context DefaultContext { get; }
    return:
      type: System.Runtime.Remoting.Contexts.Context
      description: "The default context for the <xref href=&quot;System.AppDomain&quot;></xref> namespace."
  overload: System.Runtime.Remoting.Contexts.Context.DefaultContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  id: DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: DoCallBack(CrossContextDelegate)
  nameWithType: Context.DoCallBack(CrossContextDelegate)
  fullName: System.Runtime.Remoting.Contexts.Context.DoCallBack(CrossContextDelegate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Executes code in another context."
  remarks: "A callback can be done by calling the DoCallBack method on it by passing in a delegate. The delegate is used to request a callback. The delegate must be a <xref:System.Runtime.Remoting.Contexts.CrossContextDelegate> class type."
  syntax:
    content: public void DoCallBack (System.Runtime.Remoting.Contexts.CrossContextDelegate deleg);
    parameters:
    - id: deleg
      type: System.Runtime.Remoting.Contexts.CrossContextDelegate
      description: "The delegate used to request the callback."
  overload: System.Runtime.Remoting.Contexts.Context.DoCallBack*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.Finalize
  id: Finalize
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: Finalize()
  nameWithType: Context.Finalize()
  fullName: System.Runtime.Remoting.Contexts.Context.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Cleans up the backing objects for the nondefault contexts."
  remarks: "For default contexts, backing objects are cleaned up during shut down of the <xref:System.AppDomain> class."
  syntax:
    content: ~Context ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.Context.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: Context.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Frees a named data slot on all the contexts."
  remarks: "Named data slots are public and can be manipulated by anyone."
  syntax:
    content: public static void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the data slot to free."
  overload: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.Freeze
  id: Freeze
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: Freeze()
  nameWithType: Context.Freeze()
  fullName: System.Runtime.Remoting.Contexts.Context.Freeze()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Freezes the context, making it impossible to add or remove context properties from the current context."
  remarks: "Context properties cannot be added after the context has been frozen."
  syntax:
    content: public virtual void Freeze ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.Context.Freeze*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The context is already frozen."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)
  id: GetData(System.LocalDataStoreSlot)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: GetData(LocalDataStoreSlot)
  nameWithType: Context.GetData(LocalDataStoreSlot)
  fullName: System.Runtime.Remoting.Contexts.Context.GetData(LocalDataStoreSlot)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Retrieves the value from the specified slot on the current context."
  syntax:
    content: public static object GetData (LocalDataStoreSlot slot);
    parameters:
    - id: slot
      type: System.LocalDataStoreSlot
      description: "The data slot that contains the data."
    return:
      type: System.Object
      description: "Returns the data associated with <code>slot</code>."
  overload: System.Runtime.Remoting.Contexts.Context.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)
  id: GetNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: GetNamedDataSlot(String)
  nameWithType: Context.GetNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Looks up a named data slot."
  remarks: "If the name has not been used, a new slot is allocated. Named data slots are public and can be manipulated by anyone."
  syntax:
    content: public static LocalDataStoreSlot GetNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "The data slot name."
    return:
      type: System.LocalDataStoreSlot
      description: "Returns a local data slot."
  overload: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: Context.GetProperty(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Returns a specific context property, specified by name."
  syntax:
    content: public virtual System.Runtime.Remoting.Contexts.IContextProperty GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the property."
    return:
      type: System.Runtime.Remoting.Contexts.IContextProperty
      description: "The specified context property."
  overload: System.Runtime.Remoting.Contexts.Context.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  id: RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  nameWithType: Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Registers a dynamic property implementing the <xref href=&quot;System.Runtime.Remoting.Contexts.IDynamicProperty&quot;></xref> interface with the remoting service."
  remarks: "Based on `obj` and `ctx`, `prop` is asked to contribute a sink that is placed at some location in the path of remoting calls. If multiple properties are registered, their sinks will be called in an arbitrary order that can change between calls.       If `obj` is not `null`, and then if it is a proxy, all calls made on the proxy are intercepted. Otherwise, if `obj` is a real object, all calls on the object are intercepted. The `ctx` parameter must be `null`.       If `ctx` is not `null`, `obj` must be `null` and all calls entering and leaving the context are intercepted.       If both `ctx` and `obj` are `null`, all calls entering and leaving all contexts are intercepted."
  syntax:
    content: public static bool RegisterDynamicProperty (System.Runtime.Remoting.Contexts.IDynamicProperty prop, ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx);
    parameters:
    - id: prop
      type: System.Runtime.Remoting.Contexts.IDynamicProperty
      description: "The dynamic property to register."
    - id: obj
      type: System.ContextBoundObject
      description: "The object/proxy for which the `property` is registered."
    - id: ctx
      type: System.Runtime.Remoting.Contexts.Context
      description: "The context for which the `property` is registered."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property was successfully registered; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>prop</code> or its name is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, or it is not dynamic (it does not implement <xref href=&quot;System.Runtime.Remoting.Contexts.IDynamicProperty&quot;></xref>)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Both an object as well as a context are specified (both <code>obj</code> and <code>ctx</code> are not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)
  id: SetData(System.LocalDataStoreSlot,System.Object)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: SetData(LocalDataStoreSlot,Object)
  nameWithType: Context.SetData(LocalDataStoreSlot,Object)
  fullName: System.Runtime.Remoting.Contexts.Context.SetData(LocalDataStoreSlot,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Sets the data in the specified slot on the current context."
  syntax:
    content: public static void SetData (LocalDataStoreSlot slot, object data);
    parameters:
    - id: slot
      type: System.LocalDataStoreSlot
      description: "The data slot where the data is to be added."
    - id: data
      type: System.Object
      description: "The data that is to be added."
  overload: System.Runtime.Remoting.Contexts.Context.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  id: SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: SetProperty(IContextProperty)
  nameWithType: Context.SetProperty(IContextProperty)
  fullName: System.Runtime.Remoting.Contexts.Context.SetProperty(IContextProperty)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Sets a specific context property by name."
  remarks: "Adding properties to the default context is not allowed."
  syntax:
    content: public virtual void SetProperty (System.Runtime.Remoting.Contexts.IContextProperty prop);
    parameters:
    - id: prop
      type: System.Runtime.Remoting.Contexts.IContextProperty
      description: "The actual context property."
  overload: System.Runtime.Remoting.Contexts.Context.SetProperty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The context is frozen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The property or the property name is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.ToString
  id: ToString
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: ToString()
  nameWithType: Context.ToString()
  fullName: System.Runtime.Remoting.Contexts.Context.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Returns a <xref:System.String> class representation of the current context."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> class representation of the current context."
  overload: System.Runtime.Remoting.Contexts.Context.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  id: UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  langs:
  - csharp
  name: UnregisterDynamicProperty(String,ContextBoundObject,Context)
  nameWithType: Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Unregisters a dynamic property implementing the <xref href=&quot;System.Runtime.Remoting.Contexts.IDynamicProperty&quot;></xref> interface."
  syntax:
    content: public static bool UnregisterDynamicProperty (string name, ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx);
    parameters:
    - id: name
      type: System.String
      description: "The name of the dynamic property to unregister."
    - id: obj
      type: System.ContextBoundObject
      description: "The object/proxy for which the `property` is registered."
    - id: ctx
      type: System.Runtime.Remoting.Contexts.Context
      description: "The context for which the `property` is registered."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the object was successfully unregistered; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Both an object as well as a context are specified (both <code>obj</code> and <code>ctx</code> are not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Contexts.Context.#ctor
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Context()
  nameWithType: Context.Context()
  fullName: System.Runtime.Remoting.Contexts.Context.Context()
- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateDataSlot()
  nameWithType: Context.AllocateDataSlot()
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot()
- uid: System.LocalDataStoreSlot
  parent: System
  isExternal: false
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateNamedDataSlot(String)
  nameWithType: Context.AllocateNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Contexts.Context.ContextID
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextID
  nameWithType: Context.ContextID
  fullName: System.Runtime.Remoting.Contexts.Context.ContextID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextProperties
  nameWithType: Context.ContextProperties
  fullName: System.Runtime.Remoting.Contexts.Context.ContextProperties
- uid: System.Runtime.Remoting.Contexts.IContextProperty[]
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: IContextProperty
  nameWithType: IContextProperty
  fullName: System.Runtime.Remoting.Contexts.IContextProperty[]
  spec.csharp:
  - uid: System.Runtime.Remoting.Contexts.IContextProperty
    name: IContextProperty
    nameWithType: IContextProperty
    fullName: IContextProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DefaultContext
  nameWithType: Context.DefaultContext
  fullName: System.Runtime.Remoting.Contexts.Context.DefaultContext
- uid: System.Runtime.Remoting.Contexts.Context
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack(System.Runtime.Remoting.Contexts.CrossContextDelegate)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DoCallBack(CrossContextDelegate)
  nameWithType: Context.DoCallBack(CrossContextDelegate)
  fullName: System.Runtime.Remoting.Contexts.Context.DoCallBack(CrossContextDelegate)
- uid: System.Runtime.Remoting.Contexts.CrossContextDelegate
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: CrossContextDelegate
  nameWithType: CrossContextDelegate
  fullName: System.Runtime.Remoting.Contexts.CrossContextDelegate
- uid: System.Runtime.Remoting.Contexts.Context.Finalize
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Finalize()
  nameWithType: Context.Finalize()
  fullName: System.Runtime.Remoting.Contexts.Context.Finalize()
- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: Context.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot(String)
- uid: System.Runtime.Remoting.Contexts.Context.Freeze
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Freeze()
  nameWithType: Context.Freeze()
  fullName: System.Runtime.Remoting.Contexts.Context.Freeze()
- uid: System.Runtime.Remoting.Contexts.Context.GetData(System.LocalDataStoreSlot)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetData(LocalDataStoreSlot)
  nameWithType: Context.GetData(LocalDataStoreSlot)
  fullName: System.Runtime.Remoting.Contexts.Context.GetData(LocalDataStoreSlot)
- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetNamedDataSlot(String)
  nameWithType: Context.GetNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot(String)
- uid: System.Runtime.Remoting.Contexts.Context.GetProperty(System.String)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetProperty(String)
  nameWithType: Context.GetProperty(String)
  fullName: System.Runtime.Remoting.Contexts.Context.GetProperty(String)
- uid: System.Runtime.Remoting.Contexts.IContextProperty
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: IContextProperty
  nameWithType: IContextProperty
  fullName: System.Runtime.Remoting.Contexts.IContextProperty
- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  nameWithType: Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(IDynamicProperty,ContextBoundObject,Context)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Contexts.IDynamicProperty
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: IDynamicProperty
  nameWithType: IDynamicProperty
  fullName: System.Runtime.Remoting.Contexts.IDynamicProperty
- uid: System.ContextBoundObject
  parent: System
  isExternal: false
  name: ContextBoundObject
  nameWithType: ContextBoundObject
  fullName: System.ContextBoundObject
- uid: System.Runtime.Remoting.Contexts.Context.SetData(System.LocalDataStoreSlot,System.Object)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetData(LocalDataStoreSlot,Object)
  nameWithType: Context.SetData(LocalDataStoreSlot,Object)
  fullName: System.Runtime.Remoting.Contexts.Context.SetData(LocalDataStoreSlot,Object)
- uid: System.Runtime.Remoting.Contexts.Context.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetProperty(IContextProperty)
  nameWithType: Context.SetProperty(IContextProperty)
  fullName: System.Runtime.Remoting.Contexts.Context.SetProperty(IContextProperty)
- uid: System.Runtime.Remoting.Contexts.Context.ToString
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ToString()
  nameWithType: Context.ToString()
  fullName: System.Runtime.Remoting.Contexts.Context.ToString()
- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(System.String,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: UnregisterDynamicProperty(String,ContextBoundObject,Context)
  nameWithType: Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
  fullName: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty(String,ContextBoundObject,Context)
- uid: System.Runtime.Remoting.Contexts.Context.#ctor*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Context
  nameWithType: Context.Context
- uid: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateDataSlot
  nameWithType: Context.AllocateDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: AllocateNamedDataSlot
  nameWithType: Context.AllocateNamedDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.ContextID*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextID
  nameWithType: Context.ContextID
- uid: System.Runtime.Remoting.Contexts.Context.ContextProperties*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ContextProperties
  nameWithType: Context.ContextProperties
- uid: System.Runtime.Remoting.Contexts.Context.DefaultContext*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DefaultContext
  nameWithType: Context.DefaultContext
- uid: System.Runtime.Remoting.Contexts.Context.DoCallBack*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: DoCallBack
  nameWithType: Context.DoCallBack
- uid: System.Runtime.Remoting.Contexts.Context.Finalize*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Finalize
  nameWithType: Context.Finalize
- uid: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: Context.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.Freeze*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: Freeze
  nameWithType: Context.Freeze
- uid: System.Runtime.Remoting.Contexts.Context.GetData*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetData
  nameWithType: Context.GetData
- uid: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetNamedDataSlot
  nameWithType: Context.GetNamedDataSlot
- uid: System.Runtime.Remoting.Contexts.Context.GetProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: GetProperty
  nameWithType: Context.GetProperty
- uid: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: RegisterDynamicProperty
  nameWithType: Context.RegisterDynamicProperty
- uid: System.Runtime.Remoting.Contexts.Context.SetData*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetData
  nameWithType: Context.SetData
- uid: System.Runtime.Remoting.Contexts.Context.SetProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: SetProperty
  nameWithType: Context.SetProperty
- uid: System.Runtime.Remoting.Contexts.Context.ToString*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: ToString
  nameWithType: Context.ToString
- uid: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty*
  parent: System.Runtime.Remoting.Contexts.Context
  isExternal: false
  name: UnregisterDynamicProperty
  nameWithType: Context.UnregisterDynamicProperty
