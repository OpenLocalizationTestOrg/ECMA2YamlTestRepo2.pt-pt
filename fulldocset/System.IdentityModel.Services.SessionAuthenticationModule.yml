### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Services.SessionAuthenticationModule
  id: SessionAuthenticationModule
  children:
  - System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  - System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  - System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  - System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  - System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  - System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  - System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  - System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  - System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  - System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  - System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  - System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  - System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  - System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  - System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  - System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  - System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  - System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  langs:
  - csharp
  name: SessionAuthenticationModule
  nameWithType: SessionAuthenticationModule
  fullName: System.IdentityModel.Services.SessionAuthenticationModule
  type: Class
  summary: "Implementa um módulo ASP.NET que processa os cookies de sessão em cenários de WS-Federation."
  remarks: "When present in the ASP.NET pipeline, the SessionAuthenticationModule (SAM) processes session cookies in WS-Federation scenarios. It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response. It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects. The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.  \n  \n The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> event in the ASP.NET pipeline. This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.User%2A?displayProperty=fullName> properties to the claims principal contained in the session token. It invokes several of the other methods exposed by the SAM during this process.  \n  \n The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).  \n  \n The SAM exposes several events that provide access to its processing pipeline. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing. Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time. The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests. For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.  \n  \n For more complicated scenarios, you can derive from SessionAuthenticationModule to implement a custom SAM. To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.  \n  \n You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7. The cookie handler used by the SAM can be configured with the [\\&lt;cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) element."
  example:
  - "[!code-cs[WifSAM#1](~/add/codesnippet/csharp/sam/global.asax.cs#1)]  \n  \n The following XML shows how to configure the SAM in the ASP.NET pipeline. Many other elements that are present in a typical configuration are omitted here for brevity.  \n  \n```xml  \n<configuration>  \n  <system.webServer>  \n    <modules>  \n      <!--WIF 4.5 modules -->  \n      <add name=\"SessionAuthenticationModule\" type=\"System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>  \n      <add name=\"WsFederationAuthenticationModule\" type=\"System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>  \n    </modules>  \n  </system.webServer>  \n</configuration>  \n```"
  syntax:
    content: 'public class SessionAuthenticationModule : System.IdentityModel.Services.HttpModuleBase'
  inheritance:
  - System.Object
  - System.IdentityModel.Services.HttpModuleBase
  implements: []
  inheritedMembers:
  - System.IdentityModel.Services.HttpModuleBase.Dispose
  - System.IdentityModel.Services.HttpModuleBase.FederationConfiguration
  - System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionAuthenticationModule()
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionAuthenticationModule()
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule&quot;> </xref> classe."
  remarks: "O <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A>propriedade está definida como `false` e a <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>propriedade é inicializada para uma instância predefinida de <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A>classe.</xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A>"
  syntax:
    content: public SessionAuthenticationModule ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  id: AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Autentica o pedido de entrada ao validar o token de sessão recebidos. Após a validação com êxito, atualiza o contexto HTTP atual e o thread principal com especificado <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>."
  remarks: "O método AuthenticateSessionSecurityToken é chamado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Chama o <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A>método para validar o token de entrada e atualize o <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>e <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>Propriedades.</xref:System.Web.HttpContext.User%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> Se o `writeCookie` parâmetro é `true`, a <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A>método é invocado para escrever o token de sessão para um cookie.</xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A>"
  syntax:
    content: public virtual void AuthenticateSessionSecurityToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "O token de segurança de sessão para utilizar para autenticar o pedido de HTTP recebido."
    - id: writeCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>escrever o cookie de sessão; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  id: ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ContainsSessionTokenCookie(HttpCookieCollection)
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Determina se um cookie de sessão na coleção de cookie especificada."
  syntax:
    content: public bool ContainsSessionTokenCookie (System.Web.HttpCookieCollection httpCookieCollection);
    parameters:
    - id: httpCookieCollection
      type: System.Web.HttpCookieCollection
      description: "A coleção de cookies que pretende procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não for encontrado um cookie de sessão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>httpCookieCollection</code>é nulo"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  id: ContextSessionSecurityToken
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Obtém o Active Directory <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> para atual <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken { get; }
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "O token de segurança de sessão ativa."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  id: CookieHandler
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Obtém o processador de cookie que é utilizado para ler, escrever e eliminar cookies de sessão."
  remarks: "A propriedade de CookieHandler é inicializada pelo <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> Este método inicializa a propriedade com base no processador de cookie especificado no <xref:System.IdentityModel.Services.Configuration.FederationConfiguration>objeto que está definido no <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName>propriedade.</xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.Configuration.FederationConfiguration> Pode definir o processador de cookie num ficheiro de configuração através de [ \\&lt; cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) elemento."
  syntax:
    content: public System.IdentityModel.Services.CookieHandler CookieHandler { get; set; }
    return:
      type: System.IdentityModel.Services.CookieHandler
      description: "O processador de cookie."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  id: CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Cria um <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> dos parâmetros especificados utilizando o processador de token de sessão configurados."
  syntax:
    content: public System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, DateTime validFrom, DateTime validTo, bool isPersistent);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "O principal para serem capturadas no token."
    - id: context
      type: System.String
      description: "Uma cadeia de contexto definido pela aplicação."
    - id: validFrom
      type: System.DateTime
      description: "A primeiro instantâneas em que este token é válido."
    - id: validTo
      type: System.DateTime
      description: "A última instantâneas em que este token é válido."
    - id: isPersistent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor deve ser mantido pelo agente do utilizador; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "O token de sessão."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é um processador de token de sessão válido configurado. (Não existe nenhum <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> configurado no <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>propriedade.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  id: DeleteSessionTokenCookie
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: DeleteSessionTokenCookie()
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Elimina o cookie de sessão e remove-o partir da cache."
  remarks: "Elimina o cookie de sessão utilizando o processador de cookie especificado pelo <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>propriedade.</xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Este método é denominado durante a fim de sessão pelo <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: public void DeleteSessionTokenCookie ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  id: InitializeModule(System.Web.HttpApplication)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: InitializeModule(HttpApplication)
  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(HttpApplication)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inicializa o módulo e prepara-o para processar eventos a partir do módulo [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] objeto da aplicação."
  remarks: "Adiciona o <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>e <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A>processadores para a <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>e <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>eventos do objeto de aplicação especificado pelo `context` parâmetro.</xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected override void InitializeModule (System.Web.HttpApplication context);
    parameters:
    - id: context
      type: System.Web.HttpApplication
      description: "O objeto de aplicação de HTTP que contém este módulo."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  id: InitializePropertiesFromConfiguration
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: InitializePropertiesFromConfiguration()
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Inicializa as propriedades do módulo com base nas definições no ficheiro de configuração."
  remarks: "Inicializa a <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>propriedade de processador especificado na configuração, o <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName>objeto que está definido no <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName>propriedade.</xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Pode especificar o processador de cookie num ficheiro de configuração através de [ \\&lt; cookieHandler\\&gt;](../Topic/%3CcookieHandler%3E.md) elemento."
  syntax:
    content: protected override void InitializePropertiesFromConfiguration ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  id: IsReferenceMode
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Obtém ou define um valor que especifica se as informações da sessão (os valores de afirmação, etc.) devem ser armazenadas no cookie de sessão ou se o conteúdo de sessão deve ser armazenado no lado do servidor, utilizando o cookie para armazenar apenas uma referência."
  remarks: "No modo de referência, o <xref:System.IdentityModel.Tokens.SessionSecurityToken>são armazenadas na cache do lado do servidor (um objeto que deriva de <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>).</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> </xref:System.IdentityModel.Tokens.SessionSecurityToken> O cookie emitido apenas contém um identificador de contexto, que é utilizado para obter o token da cache.      > [!IMPORTANT] > Para funcionar no modo de referência, a Microsoft recomenda a fornecer um processador para o <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>eventos global.asax.cs e definição de <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName>propriedade no token transmitido a <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>propriedade.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> Isto irá garantir que o token de sessão funciona no modo de referência para cada pedido e favored através de simplesmente a definição da propriedade IsReferenceMode no módulo de autenticação de sessão."
  syntax:
    content: public bool IsReferenceMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se forem emitidos cookies no modo de referência caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, que especifica que emitiu os cookies não estejam no modo de referência."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  id: OnAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Processa o <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> evento o [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] pipeline."
  remarks: "Este método faz o seguinte: 1.  Invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A>método para ler um <xref:System.IdentityModel.Tokens.SessionSecurityToken>do cookie de sessão, se estiver presente.</xref:System.IdentityModel.Tokens.SessionSecurityToken> </xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A>      2.  Se uma sessão de token de segurança não pode ser de leitura (provavelmente, porque não tiver sido estabelecida uma sessão), devolver.      3.  Invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A>método para aumentar o <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>eventos.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> Isto fornece uma oportunidade para o token de leitura a partir do cookie a modificação ou para o pedido ser cancelado. O processador também pode especificar que o token deve ser emitido novamente, definindo o <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName>propriedade.</xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName>      4.  Se o token é ser emitido novamente, remove-o partir da cache e invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A>método para aumentar o <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated>eventos.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> Isto proporciona a oportunidade para o token de novamente ser modificados. O comportamento de voltar a emitir também pode ser modificado, definindo o <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>propriedade o processador de eventos.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>      5.  Invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>método para autenticar o utilizador.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Se tiver êxito, tem o efeito da definição de <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade para o principal que está contido no <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName>propriedade do token de entrada.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>      6.  Se a sessão expirou, invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       O método OnAuthenticateRequest é adicionado aos processadores de <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>evento no <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> </xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=fullName>"
  syntax:
    content: protected virtual void OnAuthenticateRequest (object sender, EventArgs eventArgs);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem para o evento. Este será um <xref href=&quot;System.Web.HttpApplication&quot;> </xref> objeto."
    - id: eventArgs
      type: System.EventArgs
      description: "Os dados para o evento."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é um processador de token de sessão válido configurado. (Não existe nenhum <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> configurado no <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>propriedade.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  id: OnPostAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnPostAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Processa o <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> evento o [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] pipeline."
  remarks: "A implementação predefinida está vazia.       O processador de OnPostAuthenticateRequest é adicionado aos processadores de <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>evento no <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> </xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=fullName>"
  syntax:
    content: protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem para o evento. Este será um <xref href=&quot;System.Web.HttpApplication&quot;> </xref> objeto."
    - id: e
      type: System.EventArgs
      description: "Os dados para o evento."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  id: OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Gera o <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&quot;> </xref> eventos."
  remarks: "Chamado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);
    parameters:
    - id: args
      type: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
      description: "Os dados para o evento."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  id: OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Gera o <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&quot;> </xref> eventos."
  remarks: "Chamado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>"
  syntax:
    content: protected virtual void OnSessionSecurityTokenReceived (System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args);
    parameters:
    - id: args
      type: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
      description: "Os dados para o evento."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  id: OnSignedOut(System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSignedOut(EventArgs)
  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(EventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Gera o <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&quot;> </xref> eventos."
  remarks: "Este método é invocado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método após o início de sessão foi efetuado e o cookie de sessão foi eliminado.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: protected virtual void OnSignedOut (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados para o evento."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  id: OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSigningOut(SigningOutEventArgs)
  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Gera o <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&quot;> </xref> eventos."
  remarks: "Este método é invocado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método para efetuar a fim de sessão.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> É invocado antes do cookie de sessão é eliminado."
  syntax:
    content: protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs e);
    parameters:
    - id: e
      type: System.IdentityModel.Services.SigningOutEventArgs
      description: "Os dados para o evento."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  id: OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: OnSignOutError(ErrorEventArgs)
  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Gera o <xref href=&quot;System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&quot;> </xref> eventos."
  remarks: "Este método é invocado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método se ocorrer um erro durante a fim de sessão.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>"
  syntax:
    content: protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs e);
    parameters:
    - id: e
      type: System.IdentityModel.Services.ErrorEventArgs
      description: "Os dados para o evento."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  id: ReadSessionTokenFromCookie(System.Byte[])
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ReadSessionTokenFromCookie(Byte[])
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Lê um <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> a partir do cookie de sessão especificado."
  syntax:
    content: public System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie (byte[] sessionCookie);
    parameters:
    - id: sessionCookie
      type: System.Byte[]
      description: "O cookie, no formato não processado, que contém o token de sessão."
    return:
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "O token de sessão que foi lido a partir do cookie."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é um processador de token de sessão válido configurado. (Não existe nenhum <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> configurado no <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>propriedade.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  id: SessionSecurityTokenCreated
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Ocorre quando foi criado um token de segurança de sessão."
  remarks: "Pode utilizar este evento para modificar o token de segurança de sessão antes de serem gravados num cookie.       O evento de SessionSecurityTokenCreated é gerado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A>método depois de um token de sessão (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) foi criado.</xref:System.IdentityModel.Tokens.SessionSecurityToken> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Isto acontece, por exemplo, se um processador de eventos para o <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>eventos modifica o token.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived>       Pode utilizar este evento para modificar as propriedades do token de sessão antes de transmitir outras ao longo do pipeline e é utilizado para autenticar a entidade que efetua o pedido (utilizador).       Um processador de eventos, pode aceder ao token através de <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>propriedade.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> Depois de modificar o token, pode garantir que este não é gravado para o cookie definindo a <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName>propriedade `true`.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=fullName> Ao contrário, o evento de SessionSecurityTokenCreated, SessionSecurityTokenCreated não é um evento cancelable."
  example:
  - "The following code shows a handler for the SessionSecurityTokenCreated event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#6](~/add/codesnippet/csharp/sam/global.asax.cs#6)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs> SessionSecurityTokenCreated;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  id: SessionSecurityTokenReceived
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Ocorre quando um token de segurança de sessão lidas a partir do cookie."
  remarks: "The SessionSecurityTokenReceived event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.  \n  \n You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user). One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=fullName> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [\\&lt;sessionTokenRequirement\\&gt;](../Topic/%3CsessionTokenRequirement%3E.md) element. By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.  \n  \n In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=fullName> property. After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=fullName> to `true`. Finally, the SessionSecurityTokenReceived event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request."
  example:
  - "The following code shows a handler for the SessionSecurityTokenReceived event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#5](~/add/codesnippet/csharp/sam/global.asax.cs#5)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> SessionSecurityTokenReceived;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  id: SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SetPrincipalFromSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Define o principal do <xref href=&quot;System.Web.HttpContext&quot;> </xref> e <xref href=&quot;System.Threading.Thread&quot;> </xref> para o principal que está contido no token de sessão especificado."
  remarks: "Invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A>método e define o <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade e o <xref:System.Web.HttpContext.User%2A?displayProperty=fullName>propriedade <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>utilizando as identidades que são devolvidas.</xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> </xref:System.Web.HttpContext.User%2A?displayProperty=fullName> </xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A>       Este método é chamado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>"
  syntax:
    content: protected virtual void SetPrincipalFromSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);
    parameters:
    - id: sessionSecurityToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "O token de sessão do qual pretende definir o principal."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  id: SignedOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignedOut
  nameWithType: SessionAuthenticationModule.SignedOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Ocorre depois do utilizador é terminada."
  remarks: "Geradas a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método imediatamente após o <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>método é invocado.</xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Este evento não é garantido ser chamado para cada sessão. Por exemplo, os cookies podem ser eliminados do lado do cliente, caso em que este evento seria nunca desencadeado porque não há nenhum evento do lado do servidor para eliminar a sessão."
  example:
  - "The following code shows a handler for the SignedOut event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#3](~/add/codesnippet/csharp/sam/global.asax.cs#3)]"
  syntax:
    content: public event EventHandler SignedOut;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  id: SigningOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SigningOut
  nameWithType: SessionAuthenticationModule.SigningOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Ocorre antes de eliminar o início de sessão."
  remarks: "Geradas a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método imediatamente antes do <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>método é invocado.</xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Este evento não é garantido ser chamado para cada sessão. Por exemplo, os cookies podem ser eliminados do lado do cliente, caso em que este evento seria nunca desencadeado porque não há nenhum evento do lado do servidor para eliminar a sessão."
  example:
  - "The following code shows a handler for the SigningOut event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#4](~/add/codesnippet/csharp/sam/global.asax.cs#4)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.SigningOutEventArgs> SigningOut;
    return:
      type: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  id: SignOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignOut()
  nameWithType: SessionAuthenticationModule.SignOut()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOut()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Termina a sessão do utilizador atual e gera os eventos associados."
  remarks: "Invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, e <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A>métodos para realizar a fim de sessão.</xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A> Se ocorrer uma exceção, o <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A>método é invocado para aumentar o <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError>eventos.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> </xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> Pode definir o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.IdentityModel.Services.ErrorEventArgs>objeto transmitido para o processador de eventos para este evento cancelar a fim de sessão e impedir que a exceção de que está a ser propagada para o cliente.</xref:System.IdentityModel.Services.ErrorEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Pode substituir este método para adicionar o comportamento de específicas da aplicação."
  example:
  - "The following code shows code for invoking the SignOut method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#7](~/add/codesnippet/csharp/sam/global.asax.cs#7)]"
  syntax:
    content: public virtual void SignOut ();
    parameters: []
  overload: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  id: SignOutError
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: SignOutError
  nameWithType: SessionAuthenticationModule.SignOutError
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  type: Event
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Ocorre quando existe um erro durante a fim de sessão."
  remarks: "Geradas a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>método quando ocorre um erro durante a fim de sessão.</xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A>       Um processador de eventos, pode obter a exceção que resultaram de eventos que está a ser geradas a partir de <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName>propriedade.</xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=fullName> Pode cancelar o processamento adicional da exceção, que tem o resultado da não propagar a exceção para o cliente, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.IdentityModel.Services.ErrorEventArgs>para `true`.</xref:System.IdentityModel.Services.ErrorEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Este evento não é garantido ser chamado para cada sessão. Por exemplo, os cookies podem ser eliminados do lado do cliente, caso em que este evento seria nunca desencadeado porque não há nenhum evento do lado do servidor para eliminar a sessão."
  example:
  - "The following code shows a handler for the SignOutError event implemented in the global.asax.cs file of an ASP.NET web application. You must also add the handler to the event. A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.  \n  \n [!code-cs[WifSAM#2](~/add/codesnippet/csharp/sam/global.asax.cs#2)]"
  syntax:
    content: public event EventHandler<System.IdentityModel.Services.ErrorEventArgs> SignOutError;
    return:
      type: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  id: TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: TryReadSessionTokenFromCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Tenta ler um <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> de um cookie de sessão e devolve um valor que indica se o cookie de sessão foi lido com êxito."
  remarks: "Lê o cookie utilizando o processador de cookie que está configurado no <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>propriedade e, em seguida, invoca o <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A>método ler o token a partir do cookie.</xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> </xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>"
  syntax:
    content: public bool TryReadSessionTokenFromCookie (out System.IdentityModel.Tokens.SessionSecurityToken sessionToken);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "Quando este método devolve, contém o token de segurança de sessão que foram lidos o cookie de sessão."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cookie de sessão foi lida com êxito o pedido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  id: ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: ValidateSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Valida especificado <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> e devolve as identidades."
  remarks: "Este método é chamado a partir de <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>método.</xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Invoca o <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName>método do processador de token de sessão configurados para validar o token e extrair as identidades de.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=fullName>"
  syntax:
    content: protected System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);
    parameters:
    - id: sessionSecurityToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "O token para validar."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "A coleção de identidades que estão contidos no token."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*
  exceptions:
  - type: System.IdentityModel.Services.FederatedSessionExpiredException
    commentId: T:System.IdentityModel.Services.FederatedSessionExpiredException
    description: "O token expirou."
  - type: System.IdentityModel.Services.FederationException
    commentId: T:System.IdentityModel.Services.FederationException
    description: "A hora de início de token ainda não é válida."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é um processador de token de sessão válido configurado. (Não existe nenhum <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> configurado no <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>propriedade.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  id: WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  langs:
  - csharp
  name: WriteSessionTokenToCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Escreve especificado <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> para um cookie de sessão."
  remarks: "Escreve o cookie utilizando o processador de cookie que está configurado no <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>propriedade.</xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A>"
  syntax:
    content: public void WriteSessionTokenToCookie (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);
    parameters:
    - id: sessionToken
      type: System.IdentityModel.Tokens.SessionSecurityToken
      description: "O token de segurança de sessão para escrita."
  overload: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sessionToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é um processador de token de sessão válido configurado. (Não existe nenhum <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenHandler&quot;> </xref> configurado no <xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>propriedade.)</xref:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers*>"
  platform:
  - net462
references:
- uid: System.IdentityModel.Services.HttpModuleBase
  isExternal: false
  name: System.IdentityModel.Services.HttpModuleBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Services.FederatedSessionExpiredException
  parent: System.IdentityModel.Services
  isExternal: false
  name: FederatedSessionExpiredException
  nameWithType: FederatedSessionExpiredException
  fullName: System.IdentityModel.Services.FederatedSessionExpiredException
- uid: System.IdentityModel.Services.FederationException
  parent: System.IdentityModel.Services
  isExternal: false
  name: FederationException
  nameWithType: FederationException
  fullName: System.IdentityModel.Services.FederationException
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionAuthenticationModule()
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionAuthenticationModule()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(SessionSecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SessionSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: System.IdentityModel.Tokens.SessionSecurityToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContainsSessionTokenCookie(HttpCookieCollection)
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(HttpCookieCollection)
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler
- uid: System.IdentityModel.Services.CookieHandler
  parent: System.IdentityModel.Services
  isExternal: false
  name: CookieHandler
  nameWithType: CookieHandler
  fullName: System.IdentityModel.Services.CookieHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(ClaimsPrincipal,String,DateTime,DateTime,Boolean)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: DeleteSessionTokenCookie()
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializeModule(HttpApplication)
  nameWithType: SessionAuthenticationModule.InitializeModule(HttpApplication)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializePropertiesFromConfiguration()
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnPostAuthenticateRequest(Object,EventArgs)
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(Object,EventArgs)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(SessionSecurityTokenCreatedEventArgs)
- uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SessionSecurityTokenCreatedEventArgs
  nameWithType: SessionSecurityTokenCreatedEventArgs
  fullName: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(SessionSecurityTokenReceivedEventArgs)
- uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SessionSecurityTokenReceivedEventArgs
  nameWithType: SessionSecurityTokenReceivedEventArgs
  fullName: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignedOut(EventArgs)
  nameWithType: SessionAuthenticationModule.OnSignedOut(EventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(EventArgs)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSigningOut(SigningOutEventArgs)
  nameWithType: SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(SigningOutEventArgs)
- uid: System.IdentityModel.Services.SigningOutEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: SigningOutEventArgs
  nameWithType: SigningOutEventArgs
  fullName: System.IdentityModel.Services.SigningOutEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignOutError(ErrorEventArgs)
  nameWithType: SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(ErrorEventArgs)
- uid: System.IdentityModel.Services.ErrorEventArgs
  parent: System.IdentityModel.Services
  isExternal: false
  name: ErrorEventArgs
  nameWithType: ErrorEventArgs
  fullName: System.IdentityModel.Services.ErrorEventArgs
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ReadSessionTokenFromCookie(Byte[])
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenCreated
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated
- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SessionSecurityTokenCreatedEventArgs>
  nameWithType: EventHandler<SessionSecurityTokenCreatedEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs
    name: SessionSecurityTokenCreatedEventArgs
    nameWithType: SessionSecurityTokenCreatedEventArgs
    fullName: SessionSecurityTokenCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.SessionSecurityTokenReceived
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived
- uid: System.EventHandler{System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SessionSecurityTokenReceivedEventArgs>
  nameWithType: EventHandler<SessionSecurityTokenReceivedEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs
    name: SessionSecurityTokenReceivedEventArgs
    nameWithType: SessionSecurityTokenReceivedEventArgs
    fullName: SessionSecurityTokenReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SetPrincipalFromSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignedOut
  nameWithType: SessionAuthenticationModule.SignedOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignedOut
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SigningOut
  nameWithType: SessionAuthenticationModule.SigningOut
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SigningOut
- uid: System.EventHandler{System.IdentityModel.Services.SigningOutEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SigningOutEventArgs>
  nameWithType: EventHandler<SigningOutEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.SigningOutEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.SigningOutEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.SigningOutEventArgs
    name: SigningOutEventArgs
    nameWithType: SigningOutEventArgs
    fullName: SigningOutEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOut()
  nameWithType: SessionAuthenticationModule.SignOut()
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOut()
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOutError
  nameWithType: SessionAuthenticationModule.SignOutError
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.SignOutError
- uid: System.EventHandler{System.IdentityModel.Services.ErrorEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ErrorEventArgs>
  nameWithType: EventHandler<ErrorEventArgs>
  fullName: System.EventHandler<System.IdentityModel.Services.ErrorEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IdentityModel.Services.ErrorEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Services.ErrorEventArgs
    name: ErrorEventArgs
    nameWithType: ErrorEventArgs
    fullName: ErrorEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: TryReadSessionTokenFromCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ValidateSessionToken(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(SessionSecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: WriteSessionTokenToCookie(SessionSecurityToken)
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
  fullName: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(SessionSecurityToken)
- uid: System.IdentityModel.Services.SessionAuthenticationModule.#ctor*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SessionAuthenticationModule
  nameWithType: SessionAuthenticationModule.SessionAuthenticationModule
- uid: System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: AuthenticateSessionSecurityToken
  nameWithType: SessionAuthenticationModule.AuthenticateSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContainsSessionTokenCookie
  nameWithType: SessionAuthenticationModule.ContainsSessionTokenCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ContextSessionSecurityToken
  nameWithType: SessionAuthenticationModule.ContextSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CookieHandler
  nameWithType: SessionAuthenticationModule.CookieHandler
- uid: System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: CreateSessionSecurityToken
  nameWithType: SessionAuthenticationModule.CreateSessionSecurityToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: DeleteSessionTokenCookie
  nameWithType: SessionAuthenticationModule.DeleteSessionTokenCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializeModule
  nameWithType: SessionAuthenticationModule.InitializeModule
- uid: System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: InitializePropertiesFromConfiguration
  nameWithType: SessionAuthenticationModule.InitializePropertiesFromConfiguration
- uid: System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionAuthenticationModule.IsReferenceMode
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnAuthenticateRequest
  nameWithType: SessionAuthenticationModule.OnAuthenticateRequest
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnPostAuthenticateRequest
  nameWithType: SessionAuthenticationModule.OnPostAuthenticateRequest
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenCreated
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenCreated
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSessionSecurityTokenReceived
  nameWithType: SessionAuthenticationModule.OnSessionSecurityTokenReceived
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignedOut
  nameWithType: SessionAuthenticationModule.OnSignedOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSigningOut
  nameWithType: SessionAuthenticationModule.OnSigningOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: OnSignOutError
  nameWithType: SessionAuthenticationModule.OnSignOutError
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ReadSessionTokenFromCookie
  nameWithType: SessionAuthenticationModule.ReadSessionTokenFromCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SetPrincipalFromSessionToken
  nameWithType: SessionAuthenticationModule.SetPrincipalFromSessionToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.SignOut*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: SignOut
  nameWithType: SessionAuthenticationModule.SignOut
- uid: System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: TryReadSessionTokenFromCookie
  nameWithType: SessionAuthenticationModule.TryReadSessionTokenFromCookie
- uid: System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: ValidateSessionToken
  nameWithType: SessionAuthenticationModule.ValidateSessionToken
- uid: System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie*
  parent: System.IdentityModel.Services.SessionAuthenticationModule
  isExternal: false
  name: WriteSessionTokenToCookie
  nameWithType: SessionAuthenticationModule.WriteSessionTokenToCookie
