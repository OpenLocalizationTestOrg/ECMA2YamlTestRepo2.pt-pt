### YamlMime:ManagedReference
items:
- uid: System.IO.FileInfo
  id: FileInfo
  children:
  - System.IO.FileInfo.#ctor(System.String)
  - System.IO.FileInfo.AppendText
  - System.IO.FileInfo.CopyTo(System.String)
  - System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  - System.IO.FileInfo.Create
  - System.IO.FileInfo.CreateText
  - System.IO.FileInfo.Decrypt
  - System.IO.FileInfo.Delete
  - System.IO.FileInfo.Directory
  - System.IO.FileInfo.DirectoryName
  - System.IO.FileInfo.Encrypt
  - System.IO.FileInfo.Exists
  - System.IO.FileInfo.GetAccessControl
  - System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  - System.IO.FileInfo.IsReadOnly
  - System.IO.FileInfo.Length
  - System.IO.FileInfo.MoveTo(System.String)
  - System.IO.FileInfo.Name
  - System.IO.FileInfo.Open(System.IO.FileMode)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.FileInfo.OpenRead
  - System.IO.FileInfo.OpenText
  - System.IO.FileInfo.OpenWrite
  - System.IO.FileInfo.Replace(System.String,System.String)
  - System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  - System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  - System.IO.FileInfo.ToString
  langs:
  - csharp
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
  type: Class
  summary: "Fornece propriedades e métodos de instância para a criação, copiar, eliminação, mover e abertura de ficheiros e ajuda na criação de <xref href=&quot;System.IO.FileStream&quot;> </xref> objetos. Esta classe não pode ser herdada.       Para procurar o código de origem do .NET Framework para este tipo, consulte o [referência origem](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the FileInfo class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.  \n  \n If you are performing multiple operations on the same file, it can be more efficient to use FileInfo instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.  \n  \n Many of the FileInfo methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific FileInfo members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various FileInfo methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n The FileInfo class provides the following properties that enable you to retrieve information about a file. For an example of how to use each property, see the property pages.  \n  \n-   The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.  \n  \n-   The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.  \n  \n-   The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.  \n  \n-   The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file."
  example:
  - "The following example demonstrates some of the main members of the `FileInfo` class.  \n  \n When the properties are first retrieved, FileInfo calls the <xref:System.IO.FileSystemInfo.Refresh%2A> method and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \n  \n [!code-cs[FInfo Class#1](~/add/codesnippet/csharp/t-system.io.fileinfo_1.cs)]\n [!code-cpp[FInfo Class#1](~/add/codesnippet/cpp/t-system.io.fileinfo_1.cpp)]\n [!code-vb[FInfo Class#1](~/add/codesnippet/visualbasic/t-system.io.fileinfo_1.vb)]  \n  \n This example produces output similar to the following.  \n  \n```  \nHello  \nAnd  \nWelcome  \nC:\\Users\\userName\\AppData\\Local\\Temp\\tmp70AB.tmp was copied to C:\\Users\\userName\\AppData\\Local\\Temp\\tmp70CB.tmp.  \nC:\\Users\\userName\\AppData\\Local\\Temp\\tmp70CB.tmp was successfully deleted.  \n```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileInfo : System.IO.FileSystemInfo
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.FileSystemInfo
  implements: []
  inheritedMembers:
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Refresh
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.FileInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: FileInfo(String)
  nameWithType: FileInfo.FileInfo(String)
  fullName: System.IO.FileInfo.FileInfo(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.FileInfo&quot;> </xref> classe, que funciona como um wrapper para um caminho de ficheiro."
  remarks: "Pode especificar completamente qualificado ou o nome de ficheiro relativo, mas a verificação de segurança obtém o nome completamente qualificado."
  example:
  - "The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.  \n  \n [!code-cpp[finfo ctor#1](~/add/codesnippet/cpp/m-system.io.fileinfo.sha_1.cpp)]\n [!code-cs[finfo ctor#1](~/add/codesnippet/csharp/m-system.io.fileinfo.sha_1.cs)]\n [!code-vb[finfo ctor#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.sha_1.vb)]  \n  \n The following example opens an existing file or creates a file, appends text to the file, and displays the results.  \n  \n [!code-cpp[fileinfomain#1](~/add/codesnippet/cpp/m-system.io.fileinfo.sha_2.cpp)]\n [!code-cs[fileinfomain#1](~/add/codesnippet/csharp/m-system.io.fileinfo.sha_2.cs)]\n [!code-vb[fileinfomain#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.sha_2.vb)]"
  syntax:
    content: public FileInfo (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome completamente qualificado do ficheiro novo, ou o nome de ficheiro relativo. Não termine o caminho com o caráter separador de diretório."
  overload: System.IO.FileInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome de ficheiro está vazio, contém apenas por espaços em branco ou contém carateres inválidos."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O acesso ao <code> fileName </code> é negado."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>fileName</code>contém dois pontos (:) no meio da cadeia."
  platform:
  - net462
- uid: System.IO.FileInfo.AppendText
  id: AppendText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: AppendText()
  nameWithType: FileInfo.AppendText()
  fullName: System.IO.FileInfo.AppendText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um <xref:System.IO.StreamWriter>que acrescenta texto para o ficheiro representado por esta instância do <xref href=&quot;System.IO.FileInfo&quot;> </xref>.</xref:System.IO.StreamWriter>"
  remarks: ''
  example:
  - "The following example appends text to a file and reads from the file.  \n  \n [!code-vb[finfo appendtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.app_1.vb)]\n [!code-cpp[finfo appendtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.app_1.cpp)]\n [!code-cs[finfo appendtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.app_1.cs)]  \n  \n The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console. The first time this routine is called, the file is created if it does not exist. After that, the specified text is appended to the file.  \n  \n [!code-vb[fileinfoappendtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.app_2.vb)]\n [!code-cpp[fileinfoappendtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.app_2.cpp)]\n [!code-cs[fileinfoappendtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.app_2.cs)]"
  syntax:
    content: public System.IO.StreamWriter AppendText ();
    parameters: []
    return:
      type: System.IO.StreamWriter
      description: "A new <xref uid=&quot;langword_csharp_StreamWriter&quot; name=&quot;StreamWriter&quot; href=&quot;&quot;></xref>."
  overload: System.IO.FileInfo.AppendText*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.CopyTo(System.String)
  id: CopyTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CopyTo(String)
  nameWithType: FileInfo.CopyTo(String)
  fullName: System.IO.FileInfo.CopyTo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Copia um ficheiro existente para um novo ficheiro, desautorizar a substituição de um ficheiro existente."
  remarks: "Utilize o <xref:System.IO.FileInfo.CopyTo%2A>método para permitir a substituição de um ficheiro existente.</xref:System.IO.FileInfo.CopyTo%2A>      > [!CAUTION] > Sempre que possível, evite utilizar nomes de ficheiro curtos (por exemplo, XXXXXX~1.XXX) com este método. Se tiverem de dois ficheiros equivalente curto nomes de ficheiros, em seguida, este método pode falhar e gerar uma exceção e/ou resultar num comportamento indesejável"
  example:
  - "The following example demonstrates both overloads of the `CopyTo` method.  \n  \n [!code-cpp[finfo copyto2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_1_1.cpp)]\n [!code-cs[finfo copyto2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_1_1.cs)]\n [!code-vb[finfo copyto2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_1_1.vb)]  \n  \n The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.  \n  \n [!code-cpp[FileInfoCopyTo1#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_1_2.cpp)]\n [!code-cs[FileInfoCopyTo1#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_1_2.cs)]\n [!code-vb[FileInfoCopyTo1#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_1_2.vb)]"
  syntax:
    content: public System.IO.FileInfo CopyTo (string destFileName);
    parameters:
    - id: destFileName
      type: System.String
      description: "O nome do ficheiro novo para copiar para."
    return:
      type: System.IO.FileInfo
      description: "Um novo ficheiro com um caminho totalmente qualificado."
  overload: System.IO.FileInfo.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>está vazia, contém apenas por espaços em branco ou contém carateres inválidos."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorre um erro ou o ficheiro de destino já existe."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um caminho de diretório é transmitido ou o ficheiro está a ser movido para uma unidade diferente."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado na <code> destFileName </code> não existe."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>contém dois pontos (:) na cadeia de caracteres, mas não especifica o volume."
  platform:
  - net462
- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  id: CopyTo(System.String,System.Boolean)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CopyTo(String,Boolean)
  nameWithType: FileInfo.CopyTo(String,Boolean)
  fullName: System.IO.FileInfo.CopyTo(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Copia um ficheiro existente para um novo ficheiro, permitindo que a substituição de um ficheiro existente."
  remarks: "Utilize este método para permitir ou impedir a substituição de um ficheiro existente. Utilize o <xref:System.IO.FileInfo.CopyTo%2A>método para impedir a substituição de um ficheiro existente por predefinição.</xref:System.IO.FileInfo.CopyTo%2A>      > [!CAUTION] > Sempre que possível, evite utilizar nomes de ficheiro curtos (por exemplo, XXXXXX~1.XXX) com este método. Se tiverem de dois ficheiros equivalente curto nomes de ficheiros, em seguida, este método pode falhar e gerar uma exceção e/ou resultar num comportamento indesejável"
  example:
  - "The following example demonstrates both overloads of the `CopyTo` method.  \n  \n [!code-cpp[finfo copyto2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_0_1.cpp)]\n [!code-cs[finfo copyto2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_0_1.cs)]\n [!code-vb[finfo copyto2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_0_1.vb)]  \n  \n The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.  \n  \n [!code-cs[fileinfocopyto#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_0_2.cs)]\n [!code-cpp[fileinfocopyto#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_0_2.cpp)]\n [!code-vb[fileinfocopyto#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_0_2.vb)]"
  syntax:
    content: public System.IO.FileInfo CopyTo (string destFileName, bool overwrite);
    parameters:
    - id: destFileName
      type: System.String
      description: "O nome do ficheiro novo para copiar para."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para permitir que um ficheiro existente sejam substituídas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.FileInfo
      description: "Um novo ficheiro ou uma substituição existente ficheiro se <code> overwrite </code> é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Se o ficheiro existe e <code> overwrite </code> é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, um <xref:System.IO.IOException>é emitida.</xref:System.IO.IOException>"
  overload: System.IO.FileInfo.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>está vazia, contém apenas por espaços em branco ou contém carateres inválidos."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorre um erro ou o ficheiro de destino já existe e <code> overwrite </code> é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado na <code> destFileName </code> não existe."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um caminho de diretório é transmitido ou o ficheiro está a ser movido para uma unidade diferente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>contém dois pontos (:) no meio da cadeia."
  platform:
  - net462
- uid: System.IO.FileInfo.Create
  id: Create
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Create()
  nameWithType: FileInfo.Create()
  fullName: System.IO.FileInfo.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um ficheiro."
  remarks: "Por predefinição, é concedido acesso de leitura/escrita completa para novos ficheiros para todos os utilizadores.       Este método é um wrapper para a funcionalidade fornecida pelo <xref:System.IO.File.Create%2A?displayProperty=fullName>.</xref:System.IO.File.Create%2A?displayProperty=fullName>"
  example:
  - "The following example creates a reference to a file, and then creates the file on disk using `FileInfo.Create()`.  \n  \n [!code-cpp[fileinfodelete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_0_1.cpp)]\n [!code-vb[fileinfodelete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_0_1.vb)]\n [!code-cs[fileinfodelete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_0_1.cs)]  \n  \n The following example creates a file, adds some text to it, and reads from the file.  \n  \n [!code-vb[finfo create#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_0_2.vb)]\n [!code-cs[finfo create#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_0_2.cs)]\n [!code-cpp[finfo create#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_0_2.cpp)]"
  syntax:
    content: public System.IO.FileStream Create ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "Um novo ficheiro."
  overload: System.IO.FileInfo.Create*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.CreateText
  id: CreateText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CreateText()
  nameWithType: FileInfo.CreateText()
  fullName: System.IO.FileInfo.CreateText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um <xref:System.IO.StreamWriter>que escreve um novo ficheiro de texto.</xref:System.IO.StreamWriter>"
  remarks: "Por predefinição, é concedido acesso de leitura/escrita completa para novos ficheiros para todos os utilizadores."
  example:
  - "The following example demonstrates the `CreateText` method.  \n  \n [!code-cpp[finfo createtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_1_1.cpp)]\n [!code-vb[finfo createtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_1_1.vb)]\n [!code-cs[finfo createtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_1_1.cs)]"
  syntax:
    content: public System.IO.StreamWriter CreateText ();
    parameters: []
    return:
      type: System.IO.StreamWriter
      description: "A new <xref uid=&quot;langword_csharp_StreamWriter&quot; name=&quot;StreamWriter&quot; href=&quot;&quot;></xref>."
  overload: System.IO.FileInfo.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O nome de ficheiro é um diretório."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O disco é só de leitura."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.FileInfo.Decrypt
  id: Decrypt
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Decrypt()
  nameWithType: FileInfo.Decrypt()
  fullName: System.IO.FileInfo.Decrypt()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Desencriptar um ficheiro que foi encriptado utilizando a conta atual o <xref:System.IO.FileInfo.Encrypt*>método.</xref:System.IO.FileInfo.Encrypt*>"
  remarks: "O método de desencriptação permite-lhe desencriptar um ficheiro que foi encriptado com a <xref:System.IO.FileInfo.Encrypt%2A>método.</xref:System.IO.FileInfo.Encrypt%2A>  O método de desencriptação pode desencriptar apenas os ficheiros que foram encriptados com a conta de utilizador atual.       Tanto o <xref:System.IO.FileInfo.Encrypt%2A>método e o método de desencriptação utilizam o fornecedor de serviços de criptografia (CSP) instalado no computador e as chaves de encriptação de ficheiro do processo de chamar o método.</xref:System.IO.FileInfo.Encrypt%2A>       O sistema de ficheiros atual tem de ser formatado como NTFS e o sistema operativo atual devem ser Microsoft Windows NT ou posterior."
  example:
  - "The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file.  \n  \n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.fileinfo.dec_1.cpp)]\n [!code-cs[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.fileinfo.dec_1.cs)]\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.dec_1.vb)]"
  syntax:
    content: public void Decrypt ();
    parameters: []
  overload: System.IO.FileInfo.Decrypt*
  exceptions:
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Foi especificada uma unidade inválida."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O sistema de ficheiros não é NTFS."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é o Microsoft Windows NT ou posterior."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.FileInfo.Delete
  id: Delete
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Delete()
  nameWithType: FileInfo.Delete()
  fullName: System.IO.FileInfo.Delete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Elimina permanentemente um ficheiro."
  remarks: "Se o ficheiro não existir, este método não produz qualquer efeito."
  example:
  - "The following example demonstrates the `Delete` method.  \n  \n [!code-cpp[finfo delete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.del_1.cpp)]\n [!code-cs[finfo delete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.del_1.cs)]\n [!code-vb[finfo delete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.del_1.vb)]  \n  \n The following example creates, closes, and deletes a file.  \n  \n [!code-cpp[fileinfodelete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.del_2.cpp)]\n [!code-vb[fileinfodelete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.del_2.vb)]\n [!code-cs[fileinfodelete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.del_2.cs)]"
  syntax:
    content: public override void Delete ();
    parameters: []
  overload: System.IO.FileInfo.Delete*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro de destino está aberta ou mapeamento de memória num computador com o Microsoft Windows NT.       - ou - existe um identificador aberto no ficheiro e o sistema operativo for o Windows XP ou anteriores. Este identificador aberto poderá resultar de enumerar ficheiros e diretórios. Para obter mais informações, consulte [como: enumerar diretórios e ficheiros](~/add/includes/ajax-current-ext-md.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O caminho é um diretório."
  platform:
  - net462
- uid: System.IO.FileInfo.Directory
  id: Directory
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Directory
  nameWithType: FileInfo.Directory
  fullName: System.IO.FileInfo.Directory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém uma instância de diretório principal."
  remarks: "Para obter o diretório principal como uma cadeia, utilize o <xref:System.IO.FileInfo.DirectoryName%2A>propriedade.</xref:System.IO.FileInfo.DirectoryName%2A>"
  example:
  - "The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.  \n  \n [!code-cs[fileinfodirectory#1](~/add/codesnippet/csharp/p-system.io.fileinfo.dir_0_1.cs)]\n [!code-vb[fileinfodirectory#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.dir_0_1.vb)]\n [!code-cpp[fileinfodirectory#1](~/add/codesnippet/cpp/p-system.io.fileinfo.dir_0_1.cpp)]"
  syntax:
    content: public System.IO.DirectoryInfo Directory { get; }
    return:
      type: System.IO.DirectoryInfo
      description: "A <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> objeto que representa o diretório principal deste ficheiro."
  overload: System.IO.FileInfo.Directory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, tais como a ser numa unidade não mapeada."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.FileInfo.DirectoryName
  id: DirectoryName
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
  fullName: System.IO.FileInfo.DirectoryName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém uma cadeia que representa o caminho completo do diretório."
  remarks: "Para obter o diretório principal como um <xref:System.IO.DirectoryInfo>objeto, utilize o <xref:System.IO.FileInfo.Directory%2A>propriedade.</xref:System.IO.FileInfo.Directory%2A> </xref:System.IO.DirectoryInfo>       Quando chamado pela primeira vez, <xref:System.IO.FileInfo>chamadas <xref:System.IO.FileSystemInfo.Refresh%2A>e coloca em cache de informações sobre o ficheiro.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Em chamadas subsequentes, tem de chamar <xref:System.IO.FileSystemInfo.Refresh%2A>para obter a cópia mais recente das informações.</xref:System.IO.FileSystemInfo.Refresh%2A>"
  example:
  - "The following example retrieves the full path of the specified file.  \n  \n [!code-cs[System.IO.FileInfo members#3](~/add/codesnippet/csharp/p-system.io.fileinfo.dir_1_1.cs)]\n [!code-cpp[System.IO.FileInfo members#3](~/add/codesnippet/cpp/p-system.io.fileinfo.dir_1_1.cpp)]\n [!code-vb[System.IO.FileInfo members#3](~/add/codesnippet/visualbasic/p-system.io.fileinfo.dir_1_1.vb)]"
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "Uma cadeia que representa o caminho completo do diretório."
  overload: System.IO.FileInfo.DirectoryName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>foi passado para o nome do diretório."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho completamente qualificado é 260 ou mais carateres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.FileInfo.Encrypt
  id: Encrypt
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Encrypt()
  nameWithType: FileInfo.Encrypt()
  fullName: System.IO.FileInfo.Encrypt()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Encripta um ficheiro para que apenas a conta utilizada para encriptar o ficheiro pode desencriptá-lo."
  remarks: "O método de encriptar permite-lhe encriptar um ficheiro para que apenas a conta utilizada para chamar este método pode desencriptá-lo.  Utilize o <xref:System.IO.FileInfo.Decrypt%2A>método para desencriptar um ficheiro encriptado pelo método de encriptar.</xref:System.IO.FileInfo.Decrypt%2A>       O método de encriptação e o <xref:System.IO.FileInfo.Decrypt%2A>método utilizam o fornecedor de serviços de criptografia (CSP) instalado no computador e as chaves de encriptação de ficheiro do processo de chamar o método.</xref:System.IO.FileInfo.Decrypt%2A>       O sistema de ficheiros atual tem de ser formatado como NTFS e o sistema operativo atual devem ser Microsoft Windows NT ou posterior."
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt a file and then decrypt it.  \n  \n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.fileinfo.enc_1.cpp)]\n [!code-cs[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.fileinfo.enc_1.cs)]\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.enc_1.vb)]"
  syntax:
    content: public void Encrypt ();
    parameters: []
  overload: System.IO.FileInfo.Encrypt*
  exceptions:
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Foi especificada uma unidade inválida."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O sistema de ficheiros não é NTFS."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é o Microsoft Windows NT ou posterior."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.FileInfo.Exists
  id: Exists
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Exists
  nameWithType: FileInfo.Exists
  fullName: System.IO.FileInfo.Exists
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um valor que indica se existe um ficheiro."
  remarks: "Quando chamado pela primeira vez, <xref:System.IO.FileInfo>chamadas <xref:System.IO.FileSystemInfo.Refresh%2A>e coloca em cache de informações sobre o ficheiro.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Em chamadas subsequentes, tem de chamar <xref:System.IO.FileSystemInfo.Refresh%2A>para obter a cópia mais recente das informações.</xref:System.IO.FileSystemInfo.Refresh%2A>       Devolve de propriedade Exists `false` se qualquer erro ocorrer ao tentar determinar se o ficheiro especificado existe. Isto pode ocorrer em situações em que as exceções, tais como a passagem de um nome de ficheiro com carateres inválidos ou demasiados carateres, um disco falhar ou em falta, ou se o autor da chamada não tem permissão para ler o ficheiro."
  example:
  - "The following code example uses the Exists property ensure a file exists before opening it.  You can use this technique to throw a custom exception when the file is not found.  \n  \n [!code-cpp[IO.FileInfo.Exists#1](~/add/codesnippet/cpp/p-system.io.fileinfo.exi_1.cpp)]\n [!code-cs[IO.FileInfo.Exists#1](~/add/codesnippet/csharp/p-system.io.fileinfo.exi_1.cs)]\n [!code-vb[IO.FileInfo.Exists#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.exi_1.vb)]"
  syntax:
    content: public override bool Exists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ficheiro existe; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o ficheiro não existe ou se o ficheiro é um diretório."
  overload: System.IO.FileInfo.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.GetAccessControl
  id: GetAccessControl
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: FileInfo.GetAccessControl()
  fullName: System.IO.FileInfo.GetAccessControl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objecto que encapsula as entradas de lista (ACL) de controlo de acesso para o ficheiro descrita através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto."
  remarks: "Utilize o método GetAccessControl para obter as entradas de lista (ACL) de controlo de acesso para o ficheiro atual.       Uma ACL descreve indivíduos e/ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas sobre o ficheiro. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the GetAccessControl method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.fileinfo.get_1.cpp)]\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.get_1.vb)]\n [!code-cs[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.fileinfo.get_1.cs)]"
  syntax:
    content: public System.Security.AccessControl.FileSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objecto que encapsula as regras de controlo de acesso para o ficheiro atual."
  overload: System.IO.FileInfo.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é o Microsoft Windows 2000 ou posterior."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "A conta do sistema atual não tem privilégios administrativos."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Não foi possível encontrar o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Esta operação não é suportada na plataforma atual.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: GetAccessControl(AccessControlSections)
  nameWithType: FileInfo.GetAccessControl(AccessControlSections)
  fullName: System.IO.FileInfo.GetAccessControl(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objecto que encapsula o tipo especificado de entradas de lista (ACL) de controlo de acesso para o ficheiro descrita através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto."
  remarks: "Utilize o método GetAccessControl para obter as entradas de lista (ACL) de controlo de acesso para o ficheiro atual.       Uma ACL descreve indivíduos e/ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas sobre o ficheiro. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Security.AccessControl.FileSecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Um do <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores que especifica qual o grupo de acesso controlam entradas obter."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objecto que encapsula as regras de controlo de acesso para o ficheiro atual."
  overload: System.IO.FileInfo.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é o Microsoft Windows 2000 ou posterior."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "A conta do sistema atual não tem privilégios administrativos."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Não foi possível encontrar o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Esta operação não é suportada na plataforma atual.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.FileInfo.IsReadOnly
  id: IsReadOnly
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
  fullName: System.IO.FileInfo.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém ou define um valor que determina se o ficheiro atual é só de leitura."
  remarks: "Utilize a propriedade IsReadOnly rapidamente determinar ou alterar se o ficheiro atual é só de leitura.       Quando chamado pela primeira vez, <xref:System.IO.FileInfo>chamadas <xref:System.IO.FileSystemInfo.Refresh%2A>e coloca em cache de informações sobre o ficheiro.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Em chamadas subsequentes, tem de chamar <xref:System.IO.FileSystemInfo.Refresh%2A>para obter a cópia mais recente das informações.</xref:System.IO.FileSystemInfo.Refresh%2A>"
  example:
  - "The following example uses the IsReadOnly property to mark a file as read only and then mark it as read-write.  \n  \n [!code-cs[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/csharp/p-system.io.fileinfo.isr_1.cs)]\n [!code-vb[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.isr_1.vb)]\n [!code-cpp[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/cpp/p-system.io.fileinfo.isr_1.cpp)]"
  syntax:
    content: public bool IsReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ficheiro atual é lido apenas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.FileInfo.IsReadOnly*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Esta operação não é suportada na plataforma atual.       - ou - o chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O utilizador não tem permissão de escrita, mas tentativa para definir esta propriedade como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.FileInfo.Length
  id: Length
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Length
  nameWithType: FileInfo.Length
  fullName: System.IO.FileInfo.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o tamanho, em bytes, do ficheiro atual."
  remarks: "O valor da propriedade comprimento é previamente em cache se a instância atual do <xref:System.IO.FileInfo>objeto foi devolvido a partir de qualquer um dos seguintes <xref:System.IO.DirectoryInfo>métodos:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>- <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>para obter o valor mais recente, chame o <xref:System.IO.FileSystemInfo.Refresh%2A>método.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileInfo>"
  example:
  - "The following example displays the size of the specified files.  \n  \n [!code-cpp[FileLength#1](~/add/codesnippet/cpp/p-system.io.fileinfo.len_1.cpp)]\n [!code-cs[FileLength#1](~/add/codesnippet/csharp/p-system.io.fileinfo.len_1.cs)]\n [!code-vb[FileLength#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.len_1.vb)]"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "O tamanho do ficheiro atual em bytes."
  overload: System.IO.FileInfo.Length*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>Não é possível atualizar o estado do ficheiro ou diretório.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe.       - ou - <xref uid=&quot;langword_csharp_Length&quot; name=&quot;Length&quot; href=&quot;&quot;> </xref> propriedade denomina-se de um diretório."
  platform:
  - net462
- uid: System.IO.FileInfo.MoveTo(System.String)
  id: MoveTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: MoveTo(String)
  nameWithType: FileInfo.MoveTo(String)
  fullName: System.IO.FileInfo.MoveTo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Move um ficheiro especificado para uma nova localização, fornecendo a opção de especificar um novo nome de ficheiro."
  remarks: "Este método funciona entre volumes de disco. Por exemplo, o ficheiro c:\\MyFile.txt podem ser movidos para d:\\public e mudar o nome NewFile.txt."
  example:
  - "The following example demonstrates moving a file to a different location and renaming the file.  \n  \n [!code-cs[IO.FileInfo.MoveTo#1](~/add/codesnippet/csharp/m-system.io.fileinfo.mov_1.cs)]\n [!code-vb[IO.FileInfo.MoveTo#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.mov_1.vb)]"
  syntax:
    content: public void MoveTo (string destFileName);
    parameters:
    - id: destFileName
      type: System.String
      description: "O caminho para mover o ficheiro, que pode especificar um nome de ficheiro diferente."
  overload: System.IO.FileInfo.MoveTo*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorre um erro de e/s, tais como o ficheiro de destino já existe ou o dispositivo de destino não está pronto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>está vazia, contém apenas por espaços em branco ou contém carateres inválidos."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destFileName</code>é só de leitura ou é um diretório."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não encontrado."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, tais como a ser numa unidade não mapeada."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>contém dois pontos (:) no meio da cadeia."
  platform:
  - net462
- uid: System.IO.FileInfo.Name
  id: Name
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Name
  nameWithType: FileInfo.Name
  fullName: System.IO.FileInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o nome do ficheiro."
  remarks: "Quando chamado pela primeira vez, <xref:System.IO.FileInfo>chamadas <xref:System.IO.FileSystemInfo.Refresh%2A>e coloca em cache de informações sobre o ficheiro.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> Em chamadas subsequentes, tem de chamar <xref:System.IO.FileSystemInfo.Refresh%2A>para obter a cópia mais recente das informações.</xref:System.IO.FileSystemInfo.Refresh%2A>       O nome do ficheiro inclui a extensão de ficheiro."
  example:
  - "The following example uses the `Name` property to display the names of files in the current directory.  \n  \n [!code-cs[fileinfoname#1](~/add/codesnippet/csharp/p-system.io.fileinfo.name_1.cs)]\n [!code-cpp[fileinfoname#1](~/add/codesnippet/cpp/p-system.io.fileinfo.name_1.cpp)]\n [!code-vb[fileinfoname#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.name_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "O nome do ficheiro."
  overload: System.IO.FileInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode)
  id: Open(System.IO.FileMode)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode)
  nameWithType: FileInfo.Open(FileMode)
  fullName: System.IO.FileInfo.Open(FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro no modo de especificado."
  remarks: ''
  example:
  - "The following example opens a file, adds some information to the file, and reads the file.  \n  \n [!code-cs[finfo open1#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_0_1.cs)]\n [!code-cpp[finfo open1#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_0_1.cpp)]\n [!code-vb[finfo open1#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_0_1.vb)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> constante especificando o modo (por exemplo, <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>) na qual pretende abrir o ficheiro."
    return:
      type: System.IO.FileStream
      description: "Um ficheiro aberto em modo especificado, com acesso de leitura/escrita e partilhada."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O ficheiro é só de leitura ou é um diretório."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, tais como a ser numa unidade não mapeada."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro já está aberto."
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode,FileAccess)
  nameWithType: FileInfo.Open(FileMode,FileAccess)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro no modo de especificado através de leitura, escrita ou acesso de leitura/escrita."
  remarks: ''
  example:
  - "The following example opens a file as read-only and reads from the file.  \n  \n [!code-vb[finfo open2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_2_1.vb)]\n [!code-cpp[finfo open2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_2_1.cpp)]\n [!code-cs[finfo open2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_2_1.cs)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> constante especificando o modo (por exemplo, <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>) na qual pretende abrir o ficheiro."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> constante especificar se pretende abrir o ficheiro com <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref>, ou <xref uid=&quot;langword_csharp_ReadWrite&quot; name=&quot;ReadWrite&quot; href=&quot;&quot;> </xref> acesso do ficheiro."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> objeto aberto no modo especificado e acesso e partilhada."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>é só de leitura ou é um diretório."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, tais como a ser numa unidade não mapeada."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro já está aberto."
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode,FileAccess,FileShare)
  nameWithType: FileInfo.Open(FileMode,FileAccess,FileShare)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro no modo de especificado com leitura, escrita, ou acesso de leitura/escrita e a opção de partilha especificada."
  remarks: ''
  example:
  - "The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.  \n  \n [!code-cpp[fileinfoopen#1](~/add/codesnippet/cpp/8bd38f9d-a8ac-4cea-8fda-_1.cpp)]\n [!code-cs[fileinfoopen#1](~/add/codesnippet/csharp/8bd38f9d-a8ac-4cea-8fda-_1.cs)]\n [!code-vb[fileinfoopen#1](~/add/codesnippet/visualbasic/8bd38f9d-a8ac-4cea-8fda-_1.vb)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> constante especificando o modo (por exemplo, <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>) na qual pretende abrir o ficheiro."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> constante especificar se pretende abrir o ficheiro com <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref>, ou <xref uid=&quot;langword_csharp_ReadWrite&quot; name=&quot;ReadWrite&quot; href=&quot;&quot;> </xref> acesso do ficheiro."
    - id: share
      type: System.IO.FileShare
      description: "A <xref href=&quot;System.IO.FileShare&quot;> </xref> constante especificar o tipo de aceder a outros <xref uid=&quot;langword_csharp_FileStream&quot; name=&quot;FileStream&quot; href=&quot;&quot;> </xref> objetos têm a este ficheiro."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> objeto aberta com o modo especificado, o acesso e as opções de partilha."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>é só de leitura ou é um diretório."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, tais como a ser numa unidade não mapeada."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro já está aberto."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenRead
  id: OpenRead
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenRead()
  nameWithType: FileInfo.OpenRead()
  fullName: System.IO.FileInfo.OpenRead()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um só de leitura <xref href=&quot;System.IO.FileStream&quot;> </xref>."
  remarks: "Este método devolve um <xref:System.IO.FileStream>objeto com o <xref:System.IO.FileShare>modo definido como <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream> só de leitura"
  example:
  - "The following example opens a file as read-only and reads from it.  \n  \n [!code-vb[finfo openread#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_4_1.vb)]\n [!code-cs[finfo openread#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_4_1.cs)]\n [!code-cpp[finfo openread#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_4_1.cpp)]"
  syntax:
    content: public System.IO.FileStream OpenRead ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "Um novo só de leitura <xref href=&quot;System.IO.FileStream&quot;> </xref> objeto."
  overload: System.IO.FileInfo.OpenRead*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>é só de leitura ou é um diretório."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, tais como a ser numa unidade não mapeada."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro já está aberto."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenText
  id: OpenText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenText()
  nameWithType: FileInfo.OpenText()
  fullName: System.IO.FileInfo.OpenText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um <xref:System.IO.StreamReader>com codificação UTF8 que lê a partir de um ficheiro de texto existente.</xref:System.IO.StreamReader>"
  remarks: ''
  example:
  - "The following example reads text from a file.  \n  \n [!code-cpp[finfo opentext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_1_1.cpp)]\n [!code-cs[finfo opentext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_1_1.cs)]\n [!code-vb[finfo opentext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_1_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenText ();
    parameters: []
    return:
      type: System.IO.StreamReader
      description: "Um novo <xref uid=&quot;langword_csharp_StreamReader&quot; name=&quot;StreamReader&quot; href=&quot;&quot;> </xref> com codificação UTF8."
  overload: System.IO.FileInfo.OpenText*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>é só de leitura ou é um diretório."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, tais como a ser numa unidade não mapeada."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenWrite
  id: OpenWrite
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenWrite()
  nameWithType: FileInfo.OpenWrite()
  fullName: System.IO.FileInfo.OpenWrite()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um só de escrita <xref href=&quot;System.IO.FileStream&quot;> </xref>."
  remarks: "O método OpenWrite abre um ficheiro, se um já existe para o caminho do ficheiro ou cria um novo ficheiro, se não existir. Para um ficheiro existente, não-acrescentar o novo texto para o texto existente. Em vez disso, substitui os carateres existentes com os carateres de novo. Se substituir uma cadeia de tempo (tais como &quot;Este é um teste do método OpenWrite&quot;) com uma cadeia mais curta (como &quot;executar segundo&quot;), o ficheiro irá conter uma combinação das cadeias (&quot;segundo runtest do método OpenWrite&quot;)."
  example:
  - "The following example opens a file for writing and then reads from the file.  \n  \n [!code-cs[finfo openwrite#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_3_1.cs)]\n [!code-vb[finfo openwrite#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_3_1.vb)]\n [!code-cpp[finfo openwrite#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_3_1.cpp)]"
  syntax:
    content: public System.IO.FileStream OpenWrite ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "Um só de escrita partilhada <xref href=&quot;System.IO.FileStream&quot;> </xref> objeto para um ficheiro novo ou existente."
  overload: System.IO.FileInfo.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O caminho especificado quando criar uma instância do <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto é só de leitura ou é um diretório."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado quando criar uma instância do <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto é inválido, tais como a ser numa unidade não mapeada."
  platform:
  - net462
- uid: System.IO.FileInfo.Replace(System.String,System.String)
  id: Replace(System.String,System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Replace(String,String)
  nameWithType: FileInfo.Replace(String,String)
  fullName: System.IO.FileInfo.Replace(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Substitui o conteúdo de um ficheiro especificado com o ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> objetos, eliminação do ficheiro original e criar uma cópia de segurança do ficheiro substituído."
  remarks: "O método de substituição substitui o conteúdo de um ficheiro especificado com o conteúdo do ficheiro descrita através de atual <xref:System.IO.FileInfo>objeto.</xref:System.IO.FileInfo>  Também cria uma cópia de segurança do ficheiro que foi substituído.  Finalmente, devolve uma nova <xref:System.IO.FileInfo>objeto que descreve o ficheiro substituído.</xref:System.IO.FileInfo>      > [!CAUTION] > Este método terá êxito em ambientes do Windows 2000, se o `destFileName` é só de leitura e não irá emitir uma exceção. Utilize a <xref:System.IO.FileInfo.IsReadOnly%2A>propriedade para verificar se o ficheiro de destino é só de leitura antes de tentar substituir o mesmo.</xref:System.IO.FileInfo.IsReadOnly%2A>       Passar `null` para o `destBackupFileName` parâmetro se não pretender criar uma cópia de segurança do ficheiro a ser substituído."
  example:
  - "The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-cs[IO.FileInfo.Replace#1](~/add/codesnippet/csharp/m-system.io.fileinfo.rep_0_1.cs)]\n [!code-vb[IO.FileInfo.Replace#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.rep_0_1.vb)]\n [!code-cpp[IO.FileInfo.Replace#1](~/add/codesnippet/cpp/m-system.io.fileinfo.rep_0_1.cpp)]"
  syntax:
    content: public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: destinationFileName
      type: System.String
      description: "O nome de um ficheiro de substituir o ficheiro atual."
    - id: destinationBackupFileName
      type: System.String
      description: "O nome de um ficheiro com a qual pretende criar uma cópia de segurança do ficheiro descrita através de `destFileName` parâmetro."
    return:
      type: System.IO.FileInfo
      description: "A <xref href=&quot;System.IO.FileInfo&quot;> </xref> objecto que encapsula informações sobre o ficheiro descrita através de <code> destFileName </code> parâmetro."
  overload: System.IO.FileInfo.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho descrito através de <code> destFileName </code> parâmetro não era um formato legal.       - ou - o caminho descrita através de <code> destBackupFileName </code> parâmetro não era um formato legal."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto.       - ou - o ficheiro descrita através de <code> destinationFileName </code> não foi possível encontrar o parâmetro."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é o Microsoft Windows NT ou posterior."
  platform:
  - net462
- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.Boolean)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Replace(String,String,Boolean)
  nameWithType: FileInfo.Replace(String,String,Boolean)
  fullName: System.IO.FileInfo.Replace(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Substitui o conteúdo de um ficheiro especificado com o ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> objetos, eliminação do ficheiro original e criar uma cópia de segurança do ficheiro substituído.  Também especifica ignorar erros de intercalação."
  remarks: "O método de substituição substitui o conteúdo de um ficheiro especificado com o conteúdo do ficheiro descrita através de atual <xref:System.IO.FileInfo>objeto.</xref:System.IO.FileInfo>  Também cria uma cópia de segurança do ficheiro que foi substituído.  Finalmente, devolve uma nova <xref:System.IO.FileInfo>objeto que descreve o ficheiro substituído.</xref:System.IO.FileInfo>      > [!CAUTION] > Este método terá êxito em ambientes do Windows 2000, se o `destFileName` é só de leitura e não irá emitir uma exceção. Utilize a <xref:System.IO.FileInfo.IsReadOnly%2A>propriedade para verificar se o ficheiro de destino é só de leitura antes de tentar substituir o mesmo.</xref:System.IO.FileInfo.IsReadOnly%2A>       Passar `null` para o `destBackupFileName` parâmetro se não pretender criar uma cópia de segurança do ficheiro a ser substituído."
  example:
  - "The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-cs[IO.FileInfo.Replace#1](~/add/codesnippet/csharp/m-system.io.fileinfo.rep_1_1.cs)]\n [!code-vb[IO.FileInfo.Replace#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.rep_1_1.vb)]\n [!code-cpp[IO.FileInfo.Replace#1](~/add/codesnippet/cpp/m-system.io.fileinfo.rep_1_1.cpp)]"
  syntax:
    content: public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: destinationFileName
      type: System.String
      description: "O nome de um ficheiro de substituir o ficheiro atual."
    - id: destinationBackupFileName
      type: System.String
      description: "O nome de um ficheiro com a qual pretende criar uma cópia de segurança do ficheiro descrita através de `destFileName` parâmetro."
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar erros de intercalação (por exemplo, atributos e ACLs) a partir do ficheiro substituído para o ficheiro de substituição; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.FileInfo
      description: "A <xref href=&quot;System.IO.FileInfo&quot;> </xref> objecto que encapsula informações sobre o ficheiro descrita através de <code> destFileName </code> parâmetro."
  overload: System.IO.FileInfo.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho descrito através de <code> destFileName </code> parâmetro não era um formato legal.       - ou - o caminho descrita através de <code> destBackupFileName </code> parâmetro não era um formato legal."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto.       - ou - o ficheiro descrita através de <code> destinationFileName </code> não foi possível encontrar o parâmetro."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é o Microsoft Windows NT ou posterior."
  platform:
  - net462
- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.Security.AccessControl.FileSecurity)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: SetAccessControl(FileSecurity)
  nameWithType: FileInfo.SetAccessControl(FileSecurity)
  fullName: System.IO.FileInfo.SetAccessControl(FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Aplica-se entradas de lista (ACL) de controlo de acesso descritas através de um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto para o ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto."
  remarks: "O método SetAccessControl aplica-se entradas de lista (ACL) de controlo de acesso para o ficheiro atual, que representa a lista ACL noninherited.       Utilize o método de SetAccessControl sempre que necessário adicionar ou remover entradas ACL de um ficheiro.      > [!CAUTION] > A ACL especificado para o `fileSecurity` parâmetro substitui a ACL existente para o ficheiro. Para adicionar permissões para um novo utilizador, utilize o <xref:System.IO.Directory.GetAccessControl%2A>método para obter a ACL existente, modificá-lo e, em seguida, utilize SetAccessControl para aplicá-la novamente para o ficheiro.</xref:System.IO.Directory.GetAccessControl%2A>       Uma ACL descreve indivíduos e/ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas sobre o ficheiro. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md).       O método SetAccessControl persistir apenas <xref:System.Security.AccessControl.FileSecurity>objetos que foram modificados após a criação do objeto.</xref:System.Security.AccessControl.FileSecurity>  Se um <xref:System.Security.AccessControl.FileSecurity>objeto não foi modificado, não será transferido para um ficheiro.</xref:System.Security.AccessControl.FileSecurity>  Por conseguinte, não é possível obter um <xref:System.Security.AccessControl.FileSecurity>de objeto de um ficheiro e volte a aplicar o mesmo objeto para outro ficheiro.</xref:System.Security.AccessControl.FileSecurity>       Para copiar as informações de ACL de um ficheiro para outro: 1.  Utilize o <xref:System.IO.FileInfo.GetAccessControl%2A>método para obter o <xref:System.Security.AccessControl.FileSecurity>objeto a partir do ficheiro de origem.</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.FileInfo.GetAccessControl%2A>      2.  Crie um novo <xref:System.Security.AccessControl.FileSecurity>objeto para o ficheiro de destino.</xref:System.Security.AccessControl.FileSecurity>      3.  Utilize o <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>ou <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>método da origem de <xref:System.Security.AccessControl.FileSecurity>objeto para obter as informações de ACL.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  Utilize o <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>ou <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>método para copiar as informações obtido no passo 3 para o destino <xref:System.Security.AccessControl.FileSecurity>objeto.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  Definir o destino <xref:System.Security.AccessControl.FileSecurity>objeto para o ficheiro de destino utilizando o método SetAccessControl.</xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the SetAccessControl method to add and then remove an ACL entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/c24a4717-31ac-4834-901c-_1.cpp)]\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/c24a4717-31ac-4834-901c-_1.vb)]\n [!code-cs[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/c24a4717-31ac-4834-901c-_1.cs)]"
  syntax:
    content: public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que descreve uma entrada de lista (ACL) de controlo de acesso para aplicar o ficheiro atual."
  overload: System.IO.FileInfo.SetAccessControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "O ficheiro não foi encontrado ou modificado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O processo atual não tem acesso para abrir o ficheiro."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é o Microsoft Windows 2000 ou posterior."
  platform:
  - net462
- uid: System.IO.FileInfo.ToString
  id: ToString
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FileInfo.ToString()
  fullName: System.IO.FileInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Devolve o caminho como uma cadeia."
  remarks: "A cadeia devolvida pelo método ToString representa o caminho que foi transmitido a este construtor.  Quando cria um <xref:System.IO.FileInfo>objeto utilizando os construtores, o método ToString devolve o caminho completamente qualificado.</xref:System.IO.FileInfo>  No entanto, há casos em que a cadeia devolvida pelo método ToString não representa o caminho completamente qualificado.  Por exemplo, quando criar um <xref:System.IO.FileInfo>objeto utilizando o <xref:System.IO.DirectoryInfo.GetFiles%2A>método, o método ToString não representa o caminho completamente qualificado.</xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.FileInfo>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que representa o caminho."
  overload: System.IO.FileInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.FileSystemInfo
  isExternal: false
  name: System.IO.FileSystemInfo
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  parent: System.Security.AccessControl
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.IO.FileInfo.#ctor(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: FileInfo(String)
  nameWithType: FileInfo.FileInfo(String)
  fullName: System.IO.FileInfo.FileInfo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileInfo.AppendText
  parent: System.IO.FileInfo
  isExternal: false
  name: AppendText()
  nameWithType: FileInfo.AppendText()
  fullName: System.IO.FileInfo.AppendText()
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.FileInfo.CopyTo(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo(String)
  nameWithType: FileInfo.CopyTo(String)
  fullName: System.IO.FileInfo.CopyTo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo(String,Boolean)
  nameWithType: FileInfo.CopyTo(String,Boolean)
  fullName: System.IO.FileInfo.CopyTo(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.FileInfo.Create
  parent: System.IO.FileInfo
  isExternal: false
  name: Create()
  nameWithType: FileInfo.Create()
  fullName: System.IO.FileInfo.Create()
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.FileInfo.CreateText
  parent: System.IO.FileInfo
  isExternal: false
  name: CreateText()
  nameWithType: FileInfo.CreateText()
  fullName: System.IO.FileInfo.CreateText()
- uid: System.IO.FileInfo.Decrypt
  parent: System.IO.FileInfo
  isExternal: false
  name: Decrypt()
  nameWithType: FileInfo.Decrypt()
  fullName: System.IO.FileInfo.Decrypt()
- uid: System.IO.FileInfo.Delete
  parent: System.IO.FileInfo
  isExternal: false
  name: Delete()
  nameWithType: FileInfo.Delete()
  fullName: System.IO.FileInfo.Delete()
- uid: System.IO.FileInfo.Directory
  parent: System.IO.FileInfo
  isExternal: false
  name: Directory
  nameWithType: FileInfo.Directory
  fullName: System.IO.FileInfo.Directory
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.FileInfo.DirectoryName
  parent: System.IO.FileInfo
  isExternal: false
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
  fullName: System.IO.FileInfo.DirectoryName
- uid: System.IO.FileInfo.Encrypt
  parent: System.IO.FileInfo
  isExternal: false
  name: Encrypt()
  nameWithType: FileInfo.Encrypt()
  fullName: System.IO.FileInfo.Encrypt()
- uid: System.IO.FileInfo.Exists
  parent: System.IO.FileInfo
  isExternal: false
  name: Exists
  nameWithType: FileInfo.Exists
  fullName: System.IO.FileInfo.Exists
- uid: System.IO.FileInfo.GetAccessControl
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl()
  nameWithType: FileInfo.GetAccessControl()
  fullName: System.IO.FileInfo.GetAccessControl()
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl(AccessControlSections)
  nameWithType: FileInfo.GetAccessControl(AccessControlSections)
  fullName: System.IO.FileInfo.GetAccessControl(AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.FileInfo.IsReadOnly
  parent: System.IO.FileInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
  fullName: System.IO.FileInfo.IsReadOnly
- uid: System.IO.FileInfo.Length
  parent: System.IO.FileInfo
  isExternal: false
  name: Length
  nameWithType: FileInfo.Length
  fullName: System.IO.FileInfo.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.FileInfo.MoveTo(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: MoveTo(String)
  nameWithType: FileInfo.MoveTo(String)
  fullName: System.IO.FileInfo.MoveTo(String)
- uid: System.IO.FileInfo.Name
  parent: System.IO.FileInfo
  isExternal: false
  name: Name
  nameWithType: FileInfo.Name
  fullName: System.IO.FileInfo.Name
- uid: System.IO.FileInfo.Open(System.IO.FileMode)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode)
  nameWithType: FileInfo.Open(FileMode)
  fullName: System.IO.FileInfo.Open(FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode,FileAccess)
  nameWithType: FileInfo.Open(FileMode,FileAccess)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode,FileAccess,FileShare)
  nameWithType: FileInfo.Open(FileMode,FileAccess,FileShare)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.FileInfo.OpenRead
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenRead()
  nameWithType: FileInfo.OpenRead()
  fullName: System.IO.FileInfo.OpenRead()
- uid: System.IO.FileInfo.OpenText
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenText()
  nameWithType: FileInfo.OpenText()
  fullName: System.IO.FileInfo.OpenText()
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.FileInfo.OpenWrite
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenWrite()
  nameWithType: FileInfo.OpenWrite()
  fullName: System.IO.FileInfo.OpenWrite()
- uid: System.IO.FileInfo.Replace(System.String,System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace(String,String)
  nameWithType: FileInfo.Replace(String,String)
  fullName: System.IO.FileInfo.Replace(String,String)
- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace(String,String,Boolean)
  nameWithType: FileInfo.Replace(String,String,Boolean)
  fullName: System.IO.FileInfo.Replace(String,String,Boolean)
- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  parent: System.IO.FileInfo
  isExternal: false
  name: SetAccessControl(FileSecurity)
  nameWithType: FileInfo.SetAccessControl(FileSecurity)
  fullName: System.IO.FileInfo.SetAccessControl(FileSecurity)
- uid: System.IO.FileInfo.ToString
  parent: System.IO.FileInfo
  isExternal: false
  name: ToString()
  nameWithType: FileInfo.ToString()
  fullName: System.IO.FileInfo.ToString()
- uid: System.IO.FileInfo.#ctor*
  parent: System.IO.FileInfo
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo.FileInfo
- uid: System.IO.FileInfo.AppendText*
  parent: System.IO.FileInfo
  isExternal: false
  name: AppendText
  nameWithType: FileInfo.AppendText
- uid: System.IO.FileInfo.CopyTo*
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo
  nameWithType: FileInfo.CopyTo
- uid: System.IO.FileInfo.Create*
  parent: System.IO.FileInfo
  isExternal: false
  name: Create
  nameWithType: FileInfo.Create
- uid: System.IO.FileInfo.CreateText*
  parent: System.IO.FileInfo
  isExternal: false
  name: CreateText
  nameWithType: FileInfo.CreateText
- uid: System.IO.FileInfo.Decrypt*
  parent: System.IO.FileInfo
  isExternal: false
  name: Decrypt
  nameWithType: FileInfo.Decrypt
- uid: System.IO.FileInfo.Delete*
  parent: System.IO.FileInfo
  isExternal: false
  name: Delete
  nameWithType: FileInfo.Delete
- uid: System.IO.FileInfo.Directory*
  parent: System.IO.FileInfo
  isExternal: false
  name: Directory
  nameWithType: FileInfo.Directory
- uid: System.IO.FileInfo.DirectoryName*
  parent: System.IO.FileInfo
  isExternal: false
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
- uid: System.IO.FileInfo.Encrypt*
  parent: System.IO.FileInfo
  isExternal: false
  name: Encrypt
  nameWithType: FileInfo.Encrypt
- uid: System.IO.FileInfo.Exists*
  parent: System.IO.FileInfo
  isExternal: false
  name: Exists
  nameWithType: FileInfo.Exists
- uid: System.IO.FileInfo.GetAccessControl*
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl
  nameWithType: FileInfo.GetAccessControl
- uid: System.IO.FileInfo.IsReadOnly*
  parent: System.IO.FileInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
- uid: System.IO.FileInfo.Length*
  parent: System.IO.FileInfo
  isExternal: false
  name: Length
  nameWithType: FileInfo.Length
- uid: System.IO.FileInfo.MoveTo*
  parent: System.IO.FileInfo
  isExternal: false
  name: MoveTo
  nameWithType: FileInfo.MoveTo
- uid: System.IO.FileInfo.Name*
  parent: System.IO.FileInfo
  isExternal: false
  name: Name
  nameWithType: FileInfo.Name
- uid: System.IO.FileInfo.Open*
  parent: System.IO.FileInfo
  isExternal: false
  name: Open
  nameWithType: FileInfo.Open
- uid: System.IO.FileInfo.OpenRead*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenRead
  nameWithType: FileInfo.OpenRead
- uid: System.IO.FileInfo.OpenText*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenText
  nameWithType: FileInfo.OpenText
- uid: System.IO.FileInfo.OpenWrite*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenWrite
  nameWithType: FileInfo.OpenWrite
- uid: System.IO.FileInfo.Replace*
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace
  nameWithType: FileInfo.Replace
- uid: System.IO.FileInfo.SetAccessControl*
  parent: System.IO.FileInfo
  isExternal: false
  name: SetAccessControl
  nameWithType: FileInfo.SetAccessControl
- uid: System.IO.FileInfo.ToString*
  parent: System.IO.FileInfo
  isExternal: false
  name: ToString
  nameWithType: FileInfo.ToString
