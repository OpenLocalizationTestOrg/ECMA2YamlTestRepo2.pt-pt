### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesignerFilter
  id: IDesignerFilter
  children:
  - System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  langs:
  - csharp
  name: IDesignerFilter
  nameWithType: IDesignerFilter
  fullName: System.ComponentModel.Design.IDesignerFilter
  type: Interface
  summary: "Provides an interface that enables a designer to access and filter the dictionaries of a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment."
  remarks: "IDesignerFilter enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>. The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.       If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.       If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method."
  example:
  - "The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time. See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the IDesignerFilter interface.  \n  \n [!code-cpp[ControlDesignerExample#2](~/add/codesnippet/cpp/t-system.componentmodel._159_1.cpp)]\n [!code-vb[ControlDesignerExample#2](~/add/codesnippet/visualbasic/t-system.componentmodel._159_1.vb)]\n [!code-cs[ControlDesignerExample#2](~/add/codesnippet/csharp/t-system.componentmodel._159_1.cs)]"
  syntax:
    content: public interface IDesignerFilter
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  id: PostFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>."
  remarks: "This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.       The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.       The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.       When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute."
  syntax:
    content: public void PostFilterAttributes (System.Collections.IDictionary attributes);
    parameters:
    - id: attributes
      type: System.Collections.IDictionary
      description: "The <xref:System.Attribute> objects for the class of the component. The keys in the dictionary of attributes are the <xref:System.Attribute.TypeId*> values of the attributes."
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  id: PostFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>."
  remarks: "This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.       The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>."
  syntax:
    content: public void PostFilterEvents (System.Collections.IDictionary events);
    parameters:
    - id: events
      type: System.Collections.IDictionary
      description: "The <xref href=&quot;System.ComponentModel.EventDescriptor&quot;></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names."
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  id: PostFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>."
  remarks: "This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.       The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>."
  syntax:
    content: public void PostFilterProperties (System.Collections.IDictionary properties);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "The <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names."
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  id: PreFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>."
  remarks: "This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.       The keys in the dictionary of attributes are the type IDs of the attributes. The objects are of type <xref:System.Attribute>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.       The type ID of an attribute can be any object. By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property. You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.       When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute. For many attributes, a new attribute of the same type will replace any previous attribute of the type. However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively. For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type. The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this. Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute."
  syntax:
    content: public void PreFilterAttributes (System.Collections.IDictionary attributes);
    parameters:
    - id: attributes
      type: System.Collections.IDictionary
      description: "The <xref:System.Attribute> objects for the class of the component. The keys in the dictionary of attributes are the <xref:System.Attribute.TypeId*> values of the attributes."
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  id: PreFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>."
  remarks: "This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.       The keys in the dictionary of events are the names of the events. The objects are of type <xref:System.ComponentModel.EventDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>."
  syntax:
    content: public void PreFilterEvents (System.Collections.IDictionary events);
    parameters:
    - id: events
      type: System.Collections.IDictionary
      description: "The <xref href=&quot;System.ComponentModel.EventDescriptor&quot;></xref> objects that represent the events of the class of the component. The keys in the dictionary of events are event names."
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  id: PreFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>."
  remarks: "This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.       The keys in the dictionary of properties are the names of the properties. The objects are of type <xref:System.ComponentModel.PropertyDescriptor>. This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>."
  syntax:
    content: public void PreFilterProperties (System.Collections.IDictionary properties);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "The <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names."
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterAttributes
  nameWithType: IDesignerFilter.PostFilterAttributes
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterEvents
  nameWithType: IDesignerFilter.PostFilterEvents
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterProperties
  nameWithType: IDesignerFilter.PostFilterProperties
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterAttributes
  nameWithType: IDesignerFilter.PreFilterAttributes
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterEvents
  nameWithType: IDesignerFilter.PreFilterEvents
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterProperties
  nameWithType: IDesignerFilter.PreFilterProperties
