### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesignerFilter
  id: IDesignerFilter
  children:
  - System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  - System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  langs:
  - csharp
  name: IDesignerFilter
  nameWithType: IDesignerFilter
  fullName: System.ComponentModel.Design.IDesignerFilter
  type: Interface
  summary: "Fornece uma interface que permite um estruturador aceder e filtrar dicionários de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> que armazena os descritores de propriedade, o atributo e o evento que pode expor um estruturador do componente para o ambiente de tempo de criação."
  remarks: "IDesignerFilter permite um estruturador filtrar o conjunto de descritores de propriedade, o atributo e o evento que expõe os respetivos componentes associada através de um <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> Os métodos desta interface cujos nomes começam por `Pre` são denominados imediatamente antes dos métodos cujos nomes começam por `Post`.       Se pretender adicionar o atributo, eventos ou descritores de propriedade, utilize um <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, ou <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>método.</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>       Se pretender alterar ou remover o atributo, eventos ou descritores de propriedade, utilize um <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, ou <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>método.</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A> </xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>"
  example:
  - "The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time. See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the IDesignerFilter interface.  \n  \n [!code-cpp[ControlDesignerExample#2](~/add/codesnippet/cpp/t-system.componentmodel._159_1.cpp)]\n [!code-vb[ControlDesignerExample#2](~/add/codesnippet/visualbasic/t-system.componentmodel._159_1.vb)]\n [!code-cs[ControlDesignerExample#2](~/add/codesnippet/csharp/t-system.componentmodel._159_1.cs)]"
  syntax:
    content: public interface IDesignerFilter
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  id: PostFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Quando substituí-lo de uma classe derivada, permite que um estruturador alterar ou remover itens do conjunto de atributos que expõe através de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Este método proporciona uma forma para alterar ou remover itens no dicionário de atributos de que o componente associado do designer implementar esta interface expõe através de um <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>       As chaves no dicionário de atributos são o tipo de IDs dos atributos. Os objetos são do tipo <xref:System.Attribute>.</xref:System.Attribute> Este método é denominado imediatamente após <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>       O ID de tipo de um atributo pode ser qualquer objeto. Por predefinição, <xref:System.Attribute>devolve o <xref:System.Type>como o valor do respetivo <xref:System.Attribute.TypeId%2A>propriedade.</xref:System.Attribute.TypeId%2A> </xref:System.Type> </xref:System.Attribute> Pode verificar o <xref:System.Attribute.TypeId%2A>de um atributo no dicionário de equivalência com um conhecido <xref:System.Attribute.TypeId%2A>para um atributo para identificá-lo ou utilize <xref:System.Reflection>para identificar o objeto de atributo de si próprio.</xref:System.Reflection> </xref:System.Attribute.TypeId%2A> </xref:System.Attribute.TypeId%2A>       Quando um atributo que possui o mesmo <xref:System.Attribute.TypeId%2A>como um atributo existente ou herdado é adicionado a um componente, o novo atributo substitui o atributo antigo.</xref:System.Attribute.TypeId%2A> Para muitos atributos, um novo atributo do mesmo tipo irá substituir qualquer atributo do tipo anterior. No entanto, alguns tipos de atributos de devolvem um <xref:System.Attribute.TypeId%2A>que distingue o atributo de forma seletiva.</xref:System.Attribute.TypeId%2A> Por exemplo, para fornecer tipos diferentes de designers em simultâneo Active Directory para um tipo, tal como um <xref:System.ComponentModel.Design.IRootDesigner>e um <xref:System.ComponentModel.Design.IDesigner>, a <xref:System.ComponentModel.DesignerAttribute>classe devolve um <xref:System.Attribute.TypeId%2A>que identifica exclusivamente o atributo e o tipo base do estruturador.</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.Design.IDesigner> </xref:System.ComponentModel.Design.IRootDesigner> O <xref:System.ComponentModel.DesignerAttribute>construtor permite-lhe especificar o tipo base estruturador do designer para além do respetivo tipo específico, e <xref:System.ComponentModel.DesignerAttribute>devolve um <xref:System.Attribute.TypeId%2A>que reflete esta.</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute> Por conseguinte, quando adiciona um novo <xref:System.ComponentModel.DesignerAttribute>com um tipo base estruturador do mesmo tipo com o estruturador base do existente <xref:System.ComponentModel.DesignerAttribute>, o atributo antigo é substituído com o novo atributo.</xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute>"
  syntax:
    content: public void PostFilterAttributes (System.Collections.IDictionary attributes);
    parameters:
    - id: attributes
      type: System.Collections.IDictionary
      description: "O <xref:System.Attribute>objetos para a classe do componente.</xref:System.Attribute> As chaves no dicionário de atributos são o <xref:System.Attribute.TypeId*>valores dos atributos.</xref:System.Attribute.TypeId*>"
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  id: PostFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Quando substituí-lo de uma classe derivada, permite que um estruturador alterar ou remover itens do conjunto de eventos que expõe através de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Este método proporciona uma forma para alterar ou remover itens no dicionário de eventos que estão expostos através de um <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>       As chaves no dicionário de eventos são os nomes dos eventos. Os objetos são do tipo <xref:System.ComponentModel.EventDescriptor>.</xref:System.ComponentModel.EventDescriptor> Este método é denominado imediatamente após <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>"
  syntax:
    content: public void PostFilterEvents (System.Collections.IDictionary events);
    parameters:
    - id: events
      type: System.Collections.IDictionary
      description: "O <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> objetos que representam os eventos da classe do componente. As chaves no dicionário de eventos são os nomes do evento."
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  id: PostFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PostFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Quando substituí-lo de uma classe derivada, permite que um estruturador alterar ou remover itens do conjunto de propriedades que expõe através de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Este método proporciona uma forma para alterar ou remover itens no dicionário de propriedades que são expostos através de <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>       As chaves no dicionário de propriedades são os nomes das propriedades. Os objetos são do tipo <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> Este método é denominado imediatamente após <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>"
  syntax:
    content: public void PostFilterProperties (System.Collections.IDictionary properties);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objetos que representam as propriedades da classe do componente. As chaves no dicionário de propriedades são os nomes de propriedade."
  overload: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  id: PreFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Quando substituí-lo de uma classe derivada, permite que um estruturador adicionar itens para o conjunto de atributos que expõe através de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Este método proporciona uma forma para adicionar itens ao dicionário de atributos de que o componente associado do designer implementar esta interface expõe através de um <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>       As chaves no dicionário de atributos são o tipo de IDs dos atributos. Os objetos são do tipo <xref:System.Attribute>.</xref:System.Attribute> Este método é denominado imediatamente antes do <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>       O ID de tipo de um atributo pode ser qualquer objeto. Por predefinição, <xref:System.Attribute>devolve o <xref:System.Type>como o valor do respetivo <xref:System.Attribute.TypeId%2A>propriedade.</xref:System.Attribute.TypeId%2A> </xref:System.Type> </xref:System.Attribute> Pode verificar o <xref:System.Attribute.TypeId%2A>de um atributo no dicionário de equivalência com um conhecido <xref:System.Attribute.TypeId%2A>para um atributo para identificá-lo ou utilize <xref:System.Reflection>para identificar o objeto de atributo de si próprio.</xref:System.Reflection> </xref:System.Attribute.TypeId%2A> </xref:System.Attribute.TypeId%2A>       Quando um atributo que possui o mesmo <xref:System.Attribute.TypeId%2A>como um atributo existente ou herdado é adicionado a um componente, o novo atributo substitui o atributo antigo.</xref:System.Attribute.TypeId%2A> Para muitos atributos, um novo atributo do mesmo tipo irá substituir qualquer atributo do tipo anterior. No entanto, alguns tipos de atributos de devolvem um <xref:System.Attribute.TypeId%2A>que distingue o atributo de forma seletiva.</xref:System.Attribute.TypeId%2A> Por exemplo, para fornecer tipos diferentes de designers em simultâneo Active Directory para um tipo, tal como um <xref:System.ComponentModel.Design.IRootDesigner>e um <xref:System.ComponentModel.Design.IDesigner>, a <xref:System.ComponentModel.DesignerAttribute>classe devolve um <xref:System.Attribute.TypeId%2A>que identifica exclusivamente o atributo e o tipo base do estruturador.</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.Design.IDesigner> </xref:System.ComponentModel.Design.IRootDesigner> O <xref:System.ComponentModel.DesignerAttribute>construtor permite-lhe especificar o tipo base estruturador do designer para além do respetivo tipo específico, e <xref:System.ComponentModel.DesignerAttribute>devolve um <xref:System.Attribute.TypeId%2A>que reflete esta.</xref:System.Attribute.TypeId%2A> </xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute> Por conseguinte, quando adiciona um novo <xref:System.ComponentModel.DesignerAttribute>com um tipo base estruturador do mesmo tipo com o estruturador base do existente <xref:System.ComponentModel.DesignerAttribute>, o atributo antigo é substituído com o novo atributo.</xref:System.ComponentModel.DesignerAttribute> </xref:System.ComponentModel.DesignerAttribute>"
  syntax:
    content: public void PreFilterAttributes (System.Collections.IDictionary attributes);
    parameters:
    - id: attributes
      type: System.Collections.IDictionary
      description: "O <xref:System.Attribute>objetos para a classe do componente.</xref:System.Attribute> As chaves no dicionário de atributos são o <xref:System.Attribute.TypeId*>valores dos atributos.</xref:System.Attribute.TypeId*>"
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  id: PreFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Quando substituí-lo de uma classe derivada, permite que um estruturador adicionar itens para o conjunto de eventos que expõe através de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Este método proporciona uma forma para adicionar itens ao dicionário de eventos que expõe um designer através de um <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>       As chaves no dicionário de eventos são os nomes dos eventos. Os objetos são do tipo <xref:System.ComponentModel.EventDescriptor>.</xref:System.ComponentModel.EventDescriptor> Este método é denominado imediatamente antes do <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>"
  syntax:
    content: public void PreFilterEvents (System.Collections.IDictionary events);
    parameters:
    - id: events
      type: System.Collections.IDictionary
      description: "O <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> objetos que representam os eventos da classe do componente. As chaves no dicionário de eventos são os nomes do evento."
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  id: PreFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  langs:
  - csharp
  name: PreFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Quando substituí-lo de uma classe derivada, permite que um estruturador adicionar itens para o conjunto de propriedades que expõe através de um <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "Este método proporciona uma forma para adicionar itens ao dicionário de propriedades que expõe um designer através de um <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor>       As chaves no dicionário de propriedades são os nomes das propriedades. Os objetos são do tipo <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> Este método é denominado imediatamente antes do <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>"
  syntax:
    content: public void PreFilterProperties (System.Collections.IDictionary properties);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objetos que representam as propriedades da classe do componente. As chaves no dicionário de propriedades são os nomes de propriedade."
  overload: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PostFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PostFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PostFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterAttributes(IDictionary)
  nameWithType: IDesignerFilter.PreFilterAttributes(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterEvents(IDictionary)
  nameWithType: IDesignerFilter.PreFilterEvents(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterProperties(IDictionary)
  nameWithType: IDesignerFilter.PreFilterProperties(IDictionary)
  fullName: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(IDictionary)
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterAttributes
  nameWithType: IDesignerFilter.PostFilterAttributes
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterEvents*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterEvents
  nameWithType: IDesignerFilter.PostFilterEvents
- uid: System.ComponentModel.Design.IDesignerFilter.PostFilterProperties*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PostFilterProperties
  nameWithType: IDesignerFilter.PostFilterProperties
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterAttributes
  nameWithType: IDesignerFilter.PreFilterAttributes
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterEvents*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterEvents
  nameWithType: IDesignerFilter.PreFilterEvents
- uid: System.ComponentModel.Design.IDesignerFilter.PreFilterProperties*
  parent: System.ComponentModel.Design.IDesignerFilter
  isExternal: false
  name: PreFilterProperties
  nameWithType: IDesignerFilter.PreFilterProperties
