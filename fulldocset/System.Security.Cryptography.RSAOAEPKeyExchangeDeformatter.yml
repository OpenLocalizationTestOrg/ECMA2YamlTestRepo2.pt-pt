### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  id: RSAOAEPKeyExchangeDeformatter
  children:
  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor
  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])
  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters
  - System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  langs:
  - csharp
  name: RSAOAEPKeyExchangeDeformatter
  nameWithType: RSAOAEPKeyExchangeDeformatter
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  type: Class
  summary: "Decrypts Optimal Asymmetric Encryption Padding (OAEP) key exchange data."
  remarks: "Key exchange allows a sender to create secret information, for example, random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.       Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> to create the key exchange message with the <xref:System.Security.Cryptography.RSA> algorithm.      > [!CAUTION] >  It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful."
  example:
  - "The following example shows how to use the RSAOAEPKeyExchangeDeformatter class to recreate an exchange key to be used to decrypt a message.  \n  \n [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/add/codesnippet/VisualBasic/t-system.security.crypto_124_1.vb)]\n [!code-cs[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/add/codesnippet/CSharp/t-system.security.crypto_124_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class RSAOAEPKeyExchangeDeformatter : System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  langs:
  - csharp
  name: RSAOAEPKeyExchangeDeformatter()
  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter&quot;></see> class."
  remarks: "Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey%2A> to establish the key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>."
  syntax:
    content: public RSAOAEPKeyExchangeDeformatter ();
    parameters: []
  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  langs:
  - csharp
  name: RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)
  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter&quot;></see> class with the specified key."
  syntax:
    content: public RSAOAEPKeyExchangeDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The instance of the  algorithm that holds the private key."
  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    key is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])
  id: DecryptKeyExchange(System.Byte[])
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  langs:
  - csharp
  name: DecryptKeyExchange(Byte[])
  nameWithType: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Extracts secret information from the encrypted key exchange data."
  remarks: "You must specify a key before calling this method."
  example:
  - "The following example shows how to use the DecryptKeyExchange method to recreate an exchange key from a message sender. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter> class.  \n  \n [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#3](~/add/codesnippet/VisualBasic/d7ac00c5-9e22-4131-86c1-_1.vb)]\n [!code-cs[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#3](~/add/codesnippet/CSharp/d7ac00c5-9e22-4131-86c1-_1.cs)]"
  syntax:
    content: public override byte[] DecryptKeyExchange (byte[] rgbData);
    parameters:
    - id: rgbData
      type: System.Byte[]
      description: "The key exchange data within which the secret information is hidden."
    return:
      type: System.Byte[]
      description: "To be added."
  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The key exchange data verification has failed."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "The key is missing."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters
  id: Parameters
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  langs:
  - csharp
  name: Parameters
  nameWithType: RSAOAEPKeyExchangeDeformatter.Parameters
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Gets the parameters for the Optimal Asymmetric Encryption Padding (OAEP) key exchange."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the Parameters property to retrieve an XML representation of the parameters. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter> class.  \n  \n [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#12](~/add/codesnippet/CPP/p-system.security.crypto_28_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#12](~/add/codesnippet/CSharp/p-system.security.crypto_28_1.cs)]\n [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#12](~/add/codesnippet/VisualBasic/p-system.security.crypto_28_1.vb)]"
  syntax:
    content: public override string Parameters { get; set; }
    return:
      type: System.String
      description: "An XML string containing the parameters of the OAEP key exchange operation."
  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Sets the private key to use for decrypting the secret information."
  remarks: "You must set a key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange%2A>."
  syntax:
    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The instance of the  algorithm that holds the private key."
  overload: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    key is ."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  isExternal: false
  name: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: RSAOAEPKeyExchangeDeformatter()
  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter()
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)
  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(System.Byte[])
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: DecryptKeyExchange(Byte[])
  nameWithType: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: Parameters
  nameWithType: RSAOAEPKeyExchangeDeformatter.Parameters
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.#ctor*
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: RSAOAEPKeyExchangeDeformatter
  nameWithType: RSAOAEPKeyExchangeDeformatter.RSAOAEPKeyExchangeDeformatter
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange*
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: DecryptKeyExchange
  nameWithType: RSAOAEPKeyExchangeDeformatter.DecryptKeyExchange
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.Parameters*
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: Parameters
  nameWithType: RSAOAEPKeyExchangeDeformatter.Parameters
- uid: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter.SetKey*
  parent: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  isExternal: false
  name: SetKey
  nameWithType: RSAOAEPKeyExchangeDeformatter.SetKey
