### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "Fornece uma classe base abstracta para todos os leitores e escritores para serviços Web e clientes implementados através de HTTP, mas sem SOAP."
  remarks: "Escritores de serviço Web e leitores de serializar e anular a serialização, respetivamente, entre os objetos de parâmetro ou return dos métodos da Web e os fluxos de pedido ou resposta HTTP. A classe de MimeFormatter estabelece uma interface comum e a funcionalidade para as classes de leitor e escritor, no cliente e do lado do serviço.       A classe de MimeFormatter suporta as implementações o .NET Framework de serviços Web através das operações de HTTP GET e POST de HTTP. Em operações de HTTP GET parâmetros do pedido são codificados no localizador de recurso uniforme (URL) os pedidos de HTTP. Em operações POST de HTTP, os parâmetros do pedido são codificados no corpo do pedido HTTP, tal como acontece com um formulário HTML. Com ambas as implementações, o valor de retorno é apresentado no corpo da resposta HTTP como um documento XML não SOAP.       Um programador, normalmente, não precisa de utilizar diretamente MimeFormatter ou respetivas classes subordinados. Em vez disso, quando a ferramenta de Wsdl.exe gera o código de proxy do cliente, de acordo com as implementações de HTTP GET ou POST de HTTP, aplica-se a <xref:System.Web.Services.Protocols.HttpMethodAttribute>para cada método Web e define o atributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>e <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>Propriedades para o tipo apropriado derivados de classe MimeFormatter.</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute> No servidor, os tipos derivados adequados são utilizados, de acordo com as definições de um ficheiro de configuração do ASP.NET (Web. config). No cliente são determinados os adequado tipos derivados de WSDL."
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref> classe."
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Cria e inicializa uma instância de uma classe concreta derivada <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "O método de CreateInstance cria uma instância de classe derivada e invoca a implementação de classe derivada do abstrato <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> O método de CreateInstance é invocado no momento que é processada a pedido ou numa resposta.       Um inicializador de elementos é um objeto transmitido como parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> O inicializador transmitido como um parâmetro para o método de CreateInstance é obtido a partir de outra instância da classe derivada, invocando o <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>método durante a inicialização do cliente ou serviço.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo derivado <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, do qual pretende criar uma instância."
    - id: initializer
      type: System.Object
      description: "Um objeto utilizado para inicializar a instância anteriormente obtidos através de implementação a classe derivada do <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>método.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Quando substituí-lo de uma classe derivada, devolve um inicializador de para o método especificado."
  remarks: "Um inicializador de elementos é um objeto transmitido como parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Implementação de uma classe derivada do método de instância GetInitializer é invocada durante a inicialização do cliente ou serviço. Mais tarde, durante que um pedido ou resposta é processada, o objeto de inicializador de elementos é transmitido ao estático <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>método, que cria uma instância de outro objeto de classe derivada e, em seguida, para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método de inicialização do mesmo.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> </xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> O outro objeto efetua a real na leitura ou escrita."
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> que especifica o método Web para o qual o inicializador é obtido."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém o inicializador para o método especificado.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Devolve um inicializador de para o método especificado."
  remarks: "Um inicializador de elementos é um objeto transmitido como parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       O método GetInitializer estático invoca a classe derivada <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>método, implicitamente criar uma instância de classe derivada.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Durante que um pedido ou resposta é processada, o objeto de inicializador de elementos é passado para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método de outra instância da classe derivada.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> O objeto de última efetua a real na leitura ou escrita."
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo derivado <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, - para que é obtido um inicializador de elementos."
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> que especifica o método Web para o qual o inicializador é obtido."
    return:
      type: System.Object
      description: "A <xref:System.Object>objeto que contém o inicializador para o método especificado.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Quando substituí-lo de uma classe derivada, devolve uma matriz de inicializador de objetos correspondente a uma matriz de definições de método de entrada."
  remarks: "Um inicializador de elementos é um objeto transmitido como parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       O método de instância GetInitializers invoca o <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>método de instância para cada entrada de método Web.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Isto significa que uma instância de uma classe derivada de <xref:System.Web.Services.Protocols.MimeFormatter>já foi criado.</xref:System.Web.Services.Protocols.MimeFormatter> Durante que um pedido ou resposta é processada, o inicializador é passado para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método de outra instância da classe derivada.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> O objeto de última efetua a real na leitura ou escrita."
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Uma matriz de métodos Web onde, para cada método, o objeto de índice correspondente na matriz devolvida inicializador é obtido."
    return:
      type: System.Object[]
      description: "Uma matriz de objetos de inicializador correspondente para a matriz de entrada de definições de método."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Devolve uma matriz de inicializador de objetos correspondente a uma matriz de definições de método de entrada para a classe especificada é derivado <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "Um inicializador de elementos é um objeto transmitido como parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>método.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       O GetInitializersmethod estático faz com que a invocação do <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>método que pertencem a classe derivada especificado pelo `type` parâmetro.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo derivado <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, para que inicializadores são obtidos."
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Uma matriz do tipo <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> que especifica os métodos da Web para os quais os inicializadores são obtidos."
    return:
      type: System.Object[]
      description: "Uma matriz de objetos de inicializador correspondente para a matriz de entrada de definições de método para a classe especificada é derivado <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Quando substituí-lo de uma classe derivada, inicializa uma instância."
  remarks: "O método de inicialização é invocado no momento que é processada a pedido ou numa resposta; No entanto, o inicializador é obtido chamando a <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>método no outra instância durante a inicialização do cliente ou serviço.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "Um objeto de um tipo apropriado para a classe específica que está a implementar o método."
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
