### YamlMime:ManagedReference
items:
- uid: System.Configuration.IPersistComponentSettings
  id: IPersistComponentSettings
  children:
  - System.Configuration.IPersistComponentSettings.LoadComponentSettings
  - System.Configuration.IPersistComponentSettings.ResetComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveSettings
  - System.Configuration.IPersistComponentSettings.SettingsKey
  langs:
  - csharp
  name: IPersistComponentSettings
  nameWithType: IPersistComponentSettings
  fullName: System.Configuration.IPersistComponentSettings
  type: Interface
  summary: "Define a funcionalidade de padrão para controlos ou bibliotecas armazenam e obter as definições da aplicação."
  remarks: "Normalmente, pode adicionar suporte para definições de aplicações para uma aplicação através da criação de uma classe de wrapper definições, que é derivada de <xref:System.Configuration.ApplicationSettingsBase>e, em seguida, adicionar propriedades especiais para esta classe.</xref:System.Configuration.ApplicationSettingsBase> No entanto, esta abordagem não suficientemente encapsulam as definições da aplicação para um controlo, para que o respectivo contentor está blindado dos detalhes. A interface das IPersistComponentSettings fornece uma aplicação com uma interface para comunicação de pedidos de alteração do aplicação definições Estado a um módulo de controlo, componente ou biblioteca padrão. Ferramentas do momento da conceção também dependem esta interface para gerir corretamente os controlos e componentes."
  syntax:
    content: public interface IPersistComponentSettings
  implements: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  id: LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Lê as definições da aplicação do controlo para as respetivas propriedades correspondentes e atualiza o estado do controlo."
  remarks: "Em geral, o método LoadComponentSettings executa duas operações essenciais:-faz com que cada instância de definições de aplicação contida pelo controlo para atualizar os valores das respetivas propriedades de definições de aplicação, normalmente, ao chamar os seus <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>métodos.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>      -A conforme necessário, atualiza as propriedades gerais que dependam destas definições reloaded propriedades. Por exemplo, se a classe de definições continha um `location` propriedade de definições, LoadComponentSettings deve certificar-se que o controlo <xref:System.Windows.Forms.Control.Location%2A>propriedade é atualizada para refletir esta definição reloaded.</xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public void LoadComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  id: ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Repõe as propriedades do controlo aplicação definições para os respetivos valores predefinidos."
  remarks: "A implementação do método ResetComponentSettings normalmente chama o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>método em cada instância de uma classe de definições de aplicação que contém.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public void ResetComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  id: SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Mantém as propriedades de definições de aplicação do controlo."
  remarks: "O método SaveComponentSettings escreve os valores das propriedades de definições de aplicação do controlo para o arquivo de dados associado. A técnica de arquivo e de serialização de dados que utiliza o método é determinada pelo fornecedor de definições associado a cada classe de definições através de <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> Pode substituir a escolha do fornecedor de definições utilizando o <xref:System.Configuration.ISettingsProviderService>interface.</xref:System.Configuration.ISettingsProviderService>      > [!NOTE] > Se o <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>propriedade é `true`, o controlo deve chamar SaveComponentSettings seu próprio <xref:System.Windows.Forms.Control.Dispose%2A>método para que os dados de configuração do controlo são armazenados automaticamente antes de terminar a aplicação.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>"
  syntax:
    content: public void SaveComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  id: SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define um valor que indica se o controlo automaticamente deve manter as propriedades de definições de aplicação."
  remarks: "Se um controlo contém dados de configuração, será mantido, normalmente, estes dados em resposta a uma chamada explícita para o <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>método ou implicitamente por vezes, quando o controlo <xref:System.Windows.Forms.Control.Dispose%2A>método é invocado.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> A propriedade SaveSettings determina se um controlo persiste automaticamente os dados de configuração quando é eliminado.       O valor predefinido de SaveSettings depende a implementação do controlo. A documentação para o controlo deve indicar se utiliza as definições da aplicação, os dados que é persistente e o que é o valor predefinido da propriedade SaveSettings."
  example:
  - "The following code example shows the proper way for a control to check the value of the SaveSettings property before it attempts to automatically persist its configuration data.  \n  \n `protected override void Dispose( bool disposing ) {`  \n  \n `if(disposing) {`  \n  \n `try {`  \n  \n `if (SaveSettings) {`  \n  \n `SaveComponentSettings();`  \n  \n `}`  \n  \n `}`  \n  \n `finally {`  \n  \n `//...`  \n  \n `}`  \n  \n `}`"
  syntax:
    content: public bool SaveSettings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controlo automaticamente deve manter o Estado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.IPersistComponentSettings.SaveSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  id: SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor da chave de definições de aplicação para a instância atual do controlo."
  remarks: "Utilize a propriedade de SettingsKey para eliminar a ambiguidade de grupos de propriedades de definições de aplicação quando existem múltiplas instâncias da mesma classe de wrapper. Por exemplo, se um controlo contiver uma classe de wrapper associados, em seguida, colocar várias instâncias do mesmo controlo na mesma aplicação normalmente resultará em várias instâncias da classe de wrapper. É necessária uma chave de definições apenas quando os dados de configuração difere numa base por instância; Por exemplo, a localização dos controlos posicionados dinamicamente.       Aplicam as seguintes regras gerais para a utilização de SettingsKey:-um controlo, como qualquer classe pode conter zero ou mais classes de definições de aplicação, derivado <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Cada classe de definições contém a sua própria <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>propriedade, o que ajuda a ambiguidade de várias instâncias dessa classe.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>      -Um controlo deve separar os respetivos dados por instância e os respetivos dados partilhados em classes de definições diferentes.      -Para um controlo com quaisquer dados de configuração por instância, o `get` descritor de acesso da propriedade SettingsKey deve predefinido para o <xref:System.Windows.Forms.Control.Name%2A>do controlo.</xref:System.Windows.Forms.Control.Name%2A> Na maioria dos casos, o nome do controlo será exclusivo dentro de uma aplicação. Se o controlo contém apenas partilhados os dados de configuração, `get` deve predefinido para `null`.      -O `set` acessor para esta propriedade deve ser implementado para distinguir entre classes de definições que contém por instância e os dados de configuração partilhada. Para cada classe de definições que contém os dados por instância, `set` deve apenas pass-through para a <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>propriedade da classe de definições.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> Para as classes de definições que contém os dados partilhados, `set` não deve efetuar nenhuma ação para a classe que as definições."
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>que contém a chave de definições para a instância atual do controlo.</xref:System.String>"
  overload: System.Configuration.IPersistComponentSettings.SettingsKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings
  nameWithType: IPersistComponentSettings.LoadComponentSettings
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings
  nameWithType: IPersistComponentSettings.ResetComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings
  nameWithType: IPersistComponentSettings.SaveComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
- uid: System.Configuration.IPersistComponentSettings.SettingsKey*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
