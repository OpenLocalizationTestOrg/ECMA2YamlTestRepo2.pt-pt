### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ExpandableObjectConverter
  id: ExpandableObjectConverter
  children:
  - System.ComponentModel.ExpandableObjectConverter.#ctor
  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ExpandableObjectConverter
  nameWithType: ExpandableObjectConverter
  fullName: System.ComponentModel.ExpandableObjectConverter
  type: Class
  summary: "Provides a type converter to convert expandable objects to and from various other representations."
  remarks: "This class adds support for properties on an object to the methods and properties provided by <xref:System.ComponentModel.TypeConverter>. To make a type of property expandable in the <xref:System.Windows.Forms.PropertyGrid>, specify this <xref:System.ComponentModel.TypeConverter> for standard implementations of <xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A> and <xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A>. Mark child properties with the <xref:System.ComponentModel.NotifyParentPropertyAttribute> to ensure correct behavior in a <xref:System.Windows.Forms.PropertyGrid> control.      > [!NOTE] >  You should never access a type converter directly. Instead, call the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example converts a variable of type <xref:System.Drawing.Printing.Margins> to a string variable.  \n  \n [!code-cs[Converters#26](~/add/codesnippet/csharp/t-system.componentmodel._53_1.cs)]\n [!code-vb[Converters#26](~/add/codesnippet/visualbasic/t-system.componentmodel._53_1.vb)]\n [!code-cpp[Converters#26](~/add/codesnippet/cpp/t-system.componentmodel._53_1.cpp)]  \n  \n The following code example demonstrates how to use the <xref:System.ComponentModel.NotifyParentPropertyAttribute> and the ExpandableObjectConverter class to create an expandable property on a custom control. This code example is part of a larger example provided for the <xref:System.ComponentModel.NotifyParentPropertyAttribute> class.  \n  \n [!code-vb[System.ComponentModel.ExpandableObjectConverter#3](~/add/codesnippet/visualbasic/t-system.componentmodel._53_2.vb)]\n [!code-cs[System.ComponentModel.ExpandableObjectConverter#3](~/add/codesnippet/csharp/t-system.componentmodel._53_2.cs)]"
  syntax:
    content: 'public class ExpandableObjectConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: ExpandableObjectConverter()
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter()
  fullName: System.ComponentModel.ExpandableObjectConverter.ExpandableObjectConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.ExpandableObjectConverter&quot;></xref> class."
  syntax:
    content: public ExpandableObjectConverter ();
    parameters: []
  overload: System.ComponentModel.ExpandableObjectConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets a collection of properties for the type of object specified by the value parameter."
  remarks: "The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.       The `attributes` array will be used to filter the array. The `attributes` can have a mix of <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:      -   A <xref:System.Type> object will be treated as a wildcard; it will match any property that has the <xref:System.Type> in its set of attributes.      -   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.      -   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match or it will not be included in the returned array.      -   If a <xref:System.Attribute> instance is specified and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property."
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: value
      type: System.Object
      description: "An <xref:System.Object> that specifies the type of object to get the properties for."
    - id: attributes
      type: System.Attribute[]
      description: "An array of type <xref:System.Attribute> that will be used as a filter."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref> with the properties that are exposed for the component, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there are no properties."
  overload: System.ComponentModel.ExpandableObjectConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ExpandableObjectConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets a value indicating whether this object supports properties using the specified context."
  remarks: "The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> because <xref:System.ComponentModel.TypeConverter.GetProperties*> should be called to find the properties of this object. This method never returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: ExpandableObjectConverter()
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter()
  fullName: System.ComponentModel.ExpandableObjectConverter.ExpandableObjectConverter()
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ExpandableObjectConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ExpandableObjectConverter.#ctor*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: ExpandableObjectConverter
  nameWithType: ExpandableObjectConverter.ExpandableObjectConverter
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetProperties
  nameWithType: ExpandableObjectConverter.GetProperties
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported*
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported
