### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.SessionMode
  id: SessionMode
  children:
  - System.ServiceModel.SessionMode.Allowed
  - System.ServiceModel.SessionMode.NotAllowed
  - System.ServiceModel.SessionMode.Required
  langs:
  - csharp
  name: SessionMode
  nameWithType: SessionMode
  fullName: System.ServiceModel.SessionMode
  type: Enum
  summary: "Specifies the values available to indicate the support for reliable sessions that a contract requires or supports."
  remarks: "Use the SessionMode enumeration with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property to require, allow, or prohibit bindings to use sessions between endpoints that connect to or support the service contract. A session is a way of correlating a set of messages exchanged between two or more endpoints. For more information about sessions, see [Using Sessions](~/add/includes/ajax-current-ext-md.md).       If your service supports sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property to specify the relationship between instances of your service contract implementation and the channel session.       For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to Allowed and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName>, a client can use a binding that supports reliable sessions to make repeated calls to the same service object.       Because a session is a channel-level concept that the application model uses, there is an interaction between the SessionMode enumeration in a contract and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property, which controls the association between channels and specific service objects.       The following table shows the result of an incoming channel either supporting reliable sessions or not supporting reliable sessions given a service&quot;s combination of the values of the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property.      |InstanceContextMode Value|Required|Allowed|NotAllowed|   |-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|   |PerCall|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|   |PerSession|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|   |Single|-   Behavior with sessionful channel: One session and one <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for all calls.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|"
  example:
  - "The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A>property of the <xref:System.ServiceModel.ServiceContractAttribute> to specify that the `IMyService` service contract requires bindings that support session state.  \n  \n [!code-cs[SCA.Session#1](~/add/codesnippet/csharp/sca.session.client/services.cs#1)]\n [!code-vb[SCA.Session#1](~/add/codesnippet/visualbasic/sca.session.client/services.vb#1)]"
  syntax:
    content: public enum SessionMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.SessionMode.Allowed
  id: Allowed
  parent: System.ServiceModel.SessionMode
  langs:
  - csharp
  name: Allowed
  nameWithType: SessionMode.Allowed
  fullName: System.ServiceModel.SessionMode.Allowed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies that the contract supports sessions if the incoming binding supports them."
  syntax:
    content: Allowed
    return:
      type: System.ServiceModel.SessionMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.SessionMode.NotAllowed
  id: NotAllowed
  parent: System.ServiceModel.SessionMode
  langs:
  - csharp
  name: NotAllowed
  nameWithType: SessionMode.NotAllowed
  fullName: System.ServiceModel.SessionMode.NotAllowed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies that the contract never supports bindings that initiate sessions."
  syntax:
    content: NotAllowed
    return:
      type: System.ServiceModel.SessionMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.SessionMode.Required
  id: Required
  parent: System.ServiceModel.SessionMode
  langs:
  - csharp
  name: Required
  nameWithType: SessionMode.Required
  fullName: System.ServiceModel.SessionMode.Required
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session."
  syntax:
    content: Required
    return:
      type: System.ServiceModel.SessionMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.SessionMode.Allowed
  parent: System.ServiceModel.SessionMode
  isExternal: false
  name: Allowed
  nameWithType: SessionMode.Allowed
  fullName: System.ServiceModel.SessionMode.Allowed
- uid: System.ServiceModel.SessionMode
  parent: System.ServiceModel
  isExternal: false
  name: SessionMode
  nameWithType: SessionMode
  fullName: System.ServiceModel.SessionMode
- uid: System.ServiceModel.SessionMode.NotAllowed
  parent: System.ServiceModel.SessionMode
  isExternal: false
  name: NotAllowed
  nameWithType: SessionMode.NotAllowed
  fullName: System.ServiceModel.SessionMode.NotAllowed
- uid: System.ServiceModel.SessionMode.Required
  parent: System.ServiceModel.SessionMode
  isExternal: false
  name: Required
  nameWithType: SessionMode.Required
  fullName: System.ServiceModel.SessionMode.Required
