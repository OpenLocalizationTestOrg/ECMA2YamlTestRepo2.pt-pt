### YamlMime:ManagedReference
items:
- uid: System.Web.UI.MobileControls.DeviceSpecific
  id: DeviceSpecific
  children:
  - System.Web.UI.MobileControls.DeviceSpecific.#ctor
  - System.Web.UI.MobileControls.DeviceSpecific.AddParsedSubObject(System.Object)
  - System.Web.UI.MobileControls.DeviceSpecific.Choices
  - System.Web.UI.MobileControls.DeviceSpecific.DataBinding
  - System.Web.UI.MobileControls.DeviceSpecific.Disposed
  - System.Web.UI.MobileControls.DeviceSpecific.EnableViewState
  - System.Web.UI.MobileControls.DeviceSpecific.GetTemplate(System.String)
  - System.Web.UI.MobileControls.DeviceSpecific.HasTemplates
  - System.Web.UI.MobileControls.DeviceSpecific.Init
  - System.Web.UI.MobileControls.DeviceSpecific.Load
  - System.Web.UI.MobileControls.DeviceSpecific.MobilePage
  - System.Web.UI.MobileControls.DeviceSpecific.Owner
  - System.Web.UI.MobileControls.DeviceSpecific.PreRender
  - System.Web.UI.MobileControls.DeviceSpecific.SelectedChoice
  - System.Web.UI.MobileControls.DeviceSpecific.Unload
  - System.Web.UI.MobileControls.DeviceSpecific.Visible
  langs:
  - csharp
  name: DeviceSpecific
  nameWithType: DeviceSpecific
  fullName: System.Web.UI.MobileControls.DeviceSpecific
  type: Class
  summary: "Provides a construct for specifying a choice among multiple content alternatives in the [&lt;DeviceSpecific&gt;](http://msdn.microsoft.com/en-us/5984e67a-91cf-4f32-8815-7e7fab3d3b5b) element. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "Within a [\\<DeviceSpecific>](http://msdn.microsoft.com/en-us/5984e67a-91cf-4f32-8815-7e7fab3d3b5b) element, you typically specify one or more [\\<Choice>](http://msdn.microsoft.com/en-us/c81bee77-bb45-4211-be0f-e13a040b3c2d) elements, each containing attributes that specify how to evaluate the choice against target device capabilities. At run time, each choice is evaluated in order, and the first choice that is successfully evaluated is used. The DeviceSpecific/Choice construct is used to specify template sets and override properties; for example, it can be used to specify device-specific images for the <xref:System.Web.UI.MobileControls.Image> control.  \n  \n> [!NOTE]\n>  Even though the DeviceSpecific class inherits from the Web Forms `System.Web.UI.Control` namespace, this is only an implementation detail. A `<Choice>` element does not behave like a control."
  example:
  - "The following code example demonstrates how to use DeviceSpecific and <xref:System.Web.UI.MobileControls.DeviceSpecificChoice> objects to create interfaces specific to a variety of devices in a mobile form.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MobileTemplateContainerSample#1](~/add/codesnippet/visualbasic/t-system.web.ui.mobileco_4_1.aspx)]\n [!code-cs[MobileTemplateContainerSample#1](~/add/codesnippet/csharp/t-system.web.ui.mobileco_4_1.aspx)]  \n  \n All of the code above can be replaced declaratively with the following markup:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For these examples, the Web.config file must have the following elements:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Web.UI.Design.MobileControls.DeviceSpecificDesigner))]

      [System.ComponentModel.ToolboxItemFilter("System.Web.UI")]

      [System.ComponentModel.ToolboxItemFilter("System.Web.UI.MobileControls", System.ComponentModel.ToolboxItemFilterType.Require)]

      [System.Obsolete("The System.Web.Mobile.dll assembly has been deprecated and should no longer be used. For information about how to develop ASP.NET mobile applications, see http://go.microsoft.com/fwlink/?LinkId=157231.")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.MobileControls.DeviceSpecificControlBuilder))]

      [System.Web.UI.MobileControls.PersistName("DeviceSpecific")]

      [System.Web.UI.ParseChildren(false)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ToolboxData("<{0}:DeviceSpecific runat="server"></{0}:DeviceSpecific>")]

      public class DeviceSpecific : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.#ctor
  id: '#ctor'
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: DeviceSpecific()
  nameWithType: DeviceSpecific.DeviceSpecific()
  fullName: System.Web.UI.MobileControls.DeviceSpecific.DeviceSpecific()
  type: Constructor
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.MobileControls.DeviceSpecific&quot;></xref> class. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public DeviceSpecific ();
    parameters: []
  overload: System.Web.UI.MobileControls.DeviceSpecific.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: DeviceSpecific.AddParsedSubObject(Object)
  fullName: System.Web.UI.MobileControls.DeviceSpecific.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control&quot;s <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> object. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The parsed element."
  overload: System.Web.UI.MobileControls.DeviceSpecific.AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.Choices
  id: Choices
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: Choices
  nameWithType: DeviceSpecific.Choices
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Choices
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Retrieves the collection of choices in a [&lt;DeviceSpecific&gt;](http://msdn.microsoft.com/en-us/5984e67a-91cf-4f32-8815-7e7fab3d3b5b) element. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "At run time, the choices in the collection are evaluated in the order that they are stored. For more information about choice and device-specific concepts, see the [\\<Choice>](http://msdn.microsoft.com/en-us/c81bee77-bb45-4211-be0f-e13a040b3c2d) element."
  example:
  - "The following code example demonstrates the use of the Choices property to display the number of templates contained in the first filter defined in the ASP.NET mobile Web application. For a more complete code sample, see the example for the <xref:System.Web.UI.MobileControls.DeviceSpecific> overview.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[MobileDeviceSpecificSample#1](~/add/codesnippet/visualbasic/p-system.web.ui.mobileco_9_1.aspx)]\n [!code-cs[MobileDeviceSpecificSample#1](~/add/codesnippet/csharp/p-system.web.ui.mobileco_9_1.aspx)]"
  syntax:
    content: public System.Web.UI.MobileControls.DeviceSpecificChoiceCollection Choices { get; }
    return:
      type: System.Web.UI.MobileControls.DeviceSpecificChoiceCollection
      description: "The collection of choices in a <xref uid=&quot;langword_csharp_&lt;DeviceSpecific&gt;&quot; name=&quot;&lt;DeviceSpecific&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Web.UI.MobileControls.DeviceSpecific.Choices*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.DataBinding
  id: DataBinding
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: DataBinding
  nameWithType: DeviceSpecific.DataBinding
  fullName: System.Web.UI.MobileControls.DeviceSpecific.DataBinding
  type: Event
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Occurs when data-binding expressions are created at design time. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public event EventHandler DataBinding;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.Disposed
  id: Disposed
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: Disposed
  nameWithType: DeviceSpecific.Disposed
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Disposed
  type: Event
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Occurs when a server control is released from memory, which is the last stage of the server control life cycle when an ASP.NET page is requested. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: EnableViewState
  nameWithType: DeviceSpecific.EnableViewState
  fullName: System.Web.UI.MobileControls.DeviceSpecific.EnableViewState
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets or sets a value indicating whether the control automatically saves its state for use in round trips. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "You can disable view-state management for the page by using the EnableViewState attribute of the  directive, or you can disable view state on individual controls by setting their individual EnableViewState properties."
  syntax:
    content: public override bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control automatically saves its state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.MobileControls.DeviceSpecific.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.GetTemplate(System.String)
  id: GetTemplate(System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: GetTemplate(String)
  nameWithType: DeviceSpecific.GetTemplate(String)
  fullName: System.Web.UI.MobileControls.DeviceSpecific.GetTemplate(String)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets the template with the specified name. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "Returns `null` if the control is not templated, or if the template does not exist in the selected template set."
  syntax:
    content: public System.Web.UI.ITemplate GetTemplate (string templateName);
    parameters:
    - id: templateName
      type: System.String
      description: "The name of the specified template."
    return:
      type: System.Web.UI.ITemplate
      description: "The template with the specified <code>templateName</code>."
  overload: System.Web.UI.MobileControls.DeviceSpecific.GetTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.HasTemplates
  id: HasTemplates
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: HasTemplates
  nameWithType: DeviceSpecific.HasTemplates
  fullName: System.Web.UI.MobileControls.DeviceSpecific.HasTemplates
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets a value indicating that the currently selected choice in the [&lt;DeviceSpecific&gt;](http://msdn.microsoft.com/en-us/5984e67a-91cf-4f32-8815-7e7fab3d3b5b) element has templates defined within it. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public bool HasTemplates { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the currently selected choice has templates defined within it; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.MobileControls.DeviceSpecific.HasTemplates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.Init
  id: Init
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: Init
  nameWithType: DeviceSpecific.Init
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Init
  type: Event
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Occurs when the control is initialized, which is the first step in its life cycle. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public event EventHandler Init;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.Load
  id: Load
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: Load
  nameWithType: DeviceSpecific.Load
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Load
  type: Event
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Occurs when the server control is loaded into the <xref href=&quot;System.Web.UI.Page&quot;></xref> object. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public event EventHandler Load;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.MobilePage
  id: MobilePage
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: MobilePage
  nameWithType: DeviceSpecific.MobilePage
  fullName: System.Web.UI.MobileControls.DeviceSpecific.MobilePage
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets the containing page. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "This property is similar to the Web Forms <xref:System.Web.UI.Control.Page%2A> property, except that it is strongly typed as a <xref:System.Web.UI.MobileControls.MobilePage> object."
  syntax:
    content: public System.Web.UI.MobileControls.MobilePage MobilePage { get; }
    return:
      type: System.Web.UI.MobileControls.MobilePage
      description: "The containing page."
  overload: System.Web.UI.MobileControls.DeviceSpecific.MobilePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.Owner
  id: Owner
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: Owner
  nameWithType: DeviceSpecific.Owner
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Owner
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets the owner of the specified <xref href=&quot;System.Web.UI.MobileControls.DeviceSpecific&quot;></xref> object, either a control or a style. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public object Owner { get; }
    return:
      type: System.Object
      description: "The containing control of the specified <xref href=&quot;System.Web.UI.MobileControls.DeviceSpecific&quot;></xref> element or the containing <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> object."
  overload: System.Web.UI.MobileControls.DeviceSpecific.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.PreRender
  id: PreRender
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: PreRender
  nameWithType: DeviceSpecific.PreRender
  fullName: System.Web.UI.MobileControls.DeviceSpecific.PreRender
  type: Event
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Occurs when the control is about to be rendered to its containing <xref href=&quot;System.Web.UI.MobileControls.MobilePage&quot;></xref> object. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public event EventHandler PreRender;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.SelectedChoice
  id: SelectedChoice
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: SelectedChoice
  nameWithType: DeviceSpecific.SelectedChoice
  fullName: System.Web.UI.MobileControls.DeviceSpecific.SelectedChoice
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets the currently selected choice, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if none are applicable. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "You can use a DeviceSpecific/Choice construct to specify device-specific content, such as property overrides or templates, for a control or style. To select a choice from the choices in a [\\<DeviceSpecific>](http://msdn.microsoft.com/en-us/5984e67a-91cf-4f32-8815-7e7fab3d3b5b) element, ASP.NET evaluates each choice in sequential order against the capabilities of the target device. The first matching choice is made the selected choice, and is used for device-specific content."
  example:
  - "The following code example demonstrates how to use the SelectedChoice property to display the filter associated with the current choice. For a more complete code sample, see the example for the <xref:System.Web.UI.MobileControls.DeviceSpecific> overview.  \n  \n [!code-cs[MobileDeviceChoiceSample#1](~/add/codesnippet/csharp/p-system.web.ui.mobileco_24_1.aspx)]\n [!code-vb[MobileDeviceChoiceSample#1](~/add/codesnippet/visualbasic/p-system.web.ui.mobileco_24_1.aspx)]"
  syntax:
    content: public System.Web.UI.MobileControls.DeviceSpecificChoice SelectedChoice { get; }
    return:
      type: System.Web.UI.MobileControls.DeviceSpecificChoice
      description: "The currently selected choice."
  overload: System.Web.UI.MobileControls.DeviceSpecific.SelectedChoice*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.Unload
  id: Unload
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: Unload
  nameWithType: DeviceSpecific.Unload
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Unload
  type: Event
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Occurs when the server control is unloaded from memory. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public event EventHandler Unload;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecific.Visible
  id: Visible
  parent: System.Web.UI.MobileControls.DeviceSpecific
  langs:
  - csharp
  name: Visible
  nameWithType: DeviceSpecific.Visible
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Visible
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets or sets a value indicating whether the specified control is rendered. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified control is rendered; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.MobileControls.DeviceSpecific.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.Web.UI.MobileControls.DeviceSpecific.#ctor
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: DeviceSpecific()
  nameWithType: DeviceSpecific.DeviceSpecific()
  fullName: System.Web.UI.MobileControls.DeviceSpecific.DeviceSpecific()
- uid: System.Web.UI.MobileControls.DeviceSpecific.AddParsedSubObject(System.Object)
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: DeviceSpecific.AddParsedSubObject(Object)
  fullName: System.Web.UI.MobileControls.DeviceSpecific.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.MobileControls.DeviceSpecific.Choices
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Choices
  nameWithType: DeviceSpecific.Choices
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Choices
- uid: System.Web.UI.MobileControls.DeviceSpecificChoiceCollection
  parent: System.Web.UI.MobileControls
  isExternal: false
  name: DeviceSpecificChoiceCollection
  nameWithType: DeviceSpecificChoiceCollection
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoiceCollection
- uid: System.Web.UI.MobileControls.DeviceSpecific.DataBinding
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: DataBinding
  nameWithType: DeviceSpecific.DataBinding
  fullName: System.Web.UI.MobileControls.DeviceSpecific.DataBinding
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.MobileControls.DeviceSpecific.Disposed
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Disposed
  nameWithType: DeviceSpecific.Disposed
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Disposed
- uid: System.Web.UI.MobileControls.DeviceSpecific.EnableViewState
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: EnableViewState
  nameWithType: DeviceSpecific.EnableViewState
  fullName: System.Web.UI.MobileControls.DeviceSpecific.EnableViewState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.MobileControls.DeviceSpecific.GetTemplate(System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: GetTemplate(String)
  nameWithType: DeviceSpecific.GetTemplate(String)
  fullName: System.Web.UI.MobileControls.DeviceSpecific.GetTemplate(String)
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.MobileControls.DeviceSpecific.HasTemplates
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: HasTemplates
  nameWithType: DeviceSpecific.HasTemplates
  fullName: System.Web.UI.MobileControls.DeviceSpecific.HasTemplates
- uid: System.Web.UI.MobileControls.DeviceSpecific.Init
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Init
  nameWithType: DeviceSpecific.Init
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Init
- uid: System.Web.UI.MobileControls.DeviceSpecific.Load
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Load
  nameWithType: DeviceSpecific.Load
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Load
- uid: System.Web.UI.MobileControls.DeviceSpecific.MobilePage
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: MobilePage
  nameWithType: DeviceSpecific.MobilePage
  fullName: System.Web.UI.MobileControls.DeviceSpecific.MobilePage
- uid: System.Web.UI.MobileControls.MobilePage
  parent: System.Web.UI.MobileControls
  isExternal: false
  name: MobilePage
  nameWithType: MobilePage
  fullName: System.Web.UI.MobileControls.MobilePage
- uid: System.Web.UI.MobileControls.DeviceSpecific.Owner
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Owner
  nameWithType: DeviceSpecific.Owner
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Owner
- uid: System.Web.UI.MobileControls.DeviceSpecific.PreRender
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: PreRender
  nameWithType: DeviceSpecific.PreRender
  fullName: System.Web.UI.MobileControls.DeviceSpecific.PreRender
- uid: System.Web.UI.MobileControls.DeviceSpecific.SelectedChoice
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: SelectedChoice
  nameWithType: DeviceSpecific.SelectedChoice
  fullName: System.Web.UI.MobileControls.DeviceSpecific.SelectedChoice
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice
  parent: System.Web.UI.MobileControls
  isExternal: false
  name: DeviceSpecificChoice
  nameWithType: DeviceSpecificChoice
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice
- uid: System.Web.UI.MobileControls.DeviceSpecific.Unload
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Unload
  nameWithType: DeviceSpecific.Unload
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Unload
- uid: System.Web.UI.MobileControls.DeviceSpecific.Visible
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Visible
  nameWithType: DeviceSpecific.Visible
  fullName: System.Web.UI.MobileControls.DeviceSpecific.Visible
- uid: System.Web.UI.MobileControls.DeviceSpecific.#ctor*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: DeviceSpecific
  nameWithType: DeviceSpecific.DeviceSpecific
- uid: System.Web.UI.MobileControls.DeviceSpecific.AddParsedSubObject*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: AddParsedSubObject
  nameWithType: DeviceSpecific.AddParsedSubObject
- uid: System.Web.UI.MobileControls.DeviceSpecific.Choices*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Choices
  nameWithType: DeviceSpecific.Choices
- uid: System.Web.UI.MobileControls.DeviceSpecific.EnableViewState*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: EnableViewState
  nameWithType: DeviceSpecific.EnableViewState
- uid: System.Web.UI.MobileControls.DeviceSpecific.GetTemplate*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: GetTemplate
  nameWithType: DeviceSpecific.GetTemplate
- uid: System.Web.UI.MobileControls.DeviceSpecific.HasTemplates*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: HasTemplates
  nameWithType: DeviceSpecific.HasTemplates
- uid: System.Web.UI.MobileControls.DeviceSpecific.MobilePage*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: MobilePage
  nameWithType: DeviceSpecific.MobilePage
- uid: System.Web.UI.MobileControls.DeviceSpecific.Owner*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Owner
  nameWithType: DeviceSpecific.Owner
- uid: System.Web.UI.MobileControls.DeviceSpecific.SelectedChoice*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: SelectedChoice
  nameWithType: DeviceSpecific.SelectedChoice
- uid: System.Web.UI.MobileControls.DeviceSpecific.Visible*
  parent: System.Web.UI.MobileControls.DeviceSpecific
  isExternal: false
  name: Visible
  nameWithType: DeviceSpecific.Visible
