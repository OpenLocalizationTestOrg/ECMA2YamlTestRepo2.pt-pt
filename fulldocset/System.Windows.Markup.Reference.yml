### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.Reference
  id: Reference
  children:
  - System.Windows.Markup.Reference.#ctor
  - System.Windows.Markup.Reference.#ctor(System.String)
  - System.Windows.Markup.Reference.Name
  - System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)
  langs:
  - csharp
  name: Reference
  nameWithType: Reference
  fullName: System.Windows.Markup.Reference
  type: Class
  summary: "Implements the `{x:Reference}` markup extension."
  remarks: "The `{x:Reference}` markup extension supports a positional usage (there is only one parameter) and a named argument usage (with the named argument `name`).       The `{x:Reference}` markup extension is used to reference another named object in the object graph. Objects in this scenario are initially named by , although specific implementations often define a different <xref:System.Windows.Markup.RuntimeNamePropertyAttribute>. For more information, see [x:Reference Markup Extension](../Topic/x:Reference%20Markup%20Extension.md).       For more information about markup extensions, see [Type Converters and Markup Extensions for XAML](../Topic/Type%20Converters%20and%20Markup%20Extensions%20for%20XAML.md).       The System.Xaml assembly uses <xref:System.Windows.Markup.XmlnsDefinitionAttribute> to map all types in the assembly to the XAML namespace for the XAML language ([!INCLUDE[TLA#tla_xamlxmlnsv1](~/add/includes/tlasharptla-xamlxmlnsv1-md.md)]). Typically you declare a prefix for [!INCLUDE[TLA#tla_xamlxmlnsv1](~/add/includes/tlasharptla-xamlxmlnsv1-md.md)] in a root element mapping and use the prefix `x`.      <a name=&quot;xamlTextUsage_Reference&quot;></a>    ## XAML Text Usage"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Name")]

      public class Reference : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.Reference.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Windows.Markup.Reference.Reference()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Windows.Markup.Reference&quot;></see> class."
  syntax:
    content: public Reference ();
    parameters: []
  overload: System.Windows.Markup.Reference.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.Reference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Windows.Markup.Reference.Reference(String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Windows.Markup.Reference&quot;></see> class with the <span class=&quot;paramref&quot;>name</span> argument."
  syntax:
    content: public Reference (string name);
    parameters:
    - id: name
      type: System.String
      description: "The XAML name of the element to reference."
  overload: System.Windows.Markup.Reference.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.Reference.Name
  id: Name
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: Name
  nameWithType: Reference.Name
  fullName: System.Windows.Markup.Reference.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Gets or sets the XAML name to obtain the reference for."
  remarks: "<a name=&quot;xamlTextUsage_Name&quot;></a>    ## XAML Text Usage"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The XAML name of the element to obtain the reference for."
  overload: System.Windows.Markup.Reference.Name*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: Reference.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.Reference.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Returns an object that is the value of the target property. For the <see cref=&quot;T:System.Windows.Markup.Reference&quot;></see> type, this is the object that the provided &lt;xref:System.Windows.Markup.Reference.Name%2A&gt; references."
  remarks: "This method expects a `serviceProvider` value that implements the <xref:System.Xaml.IXamlNameResolver> service."
  syntax:
    content: public override object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "A class that implements the  service."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.Markup.Reference.ProvideValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n    serviceProvider value does not implement the  service.  \n  \n -or-  \n  \n <xref:System.Windows.Markup.Reference.Name%2A> value has not been set through construction or positional usage."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    serviceProvider is ."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Markup.Reference.#ctor
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Windows.Markup.Reference.Reference()
- uid: System.Windows.Markup.Reference.#ctor(System.String)
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Windows.Markup.Reference.Reference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.Reference.Name
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Name
  nameWithType: Reference.Name
  fullName: System.Windows.Markup.Reference.Name
- uid: System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: Reference.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.Reference.ProvideValue(IServiceProvider)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Markup.Reference.#ctor*
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Reference
  nameWithType: Reference.Reference
- uid: System.Windows.Markup.Reference.Name*
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Name
  nameWithType: Reference.Name
- uid: System.Windows.Markup.Reference.ProvideValue*
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: ProvideValue
  nameWithType: Reference.ProvideValue
