### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IProcessInitializer
  id: IProcessInitializer
  children:
  - System.EnterpriseServices.IProcessInitializer.Shutdown
  - System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  langs:
  - csharp
  name: IProcessInitializer
  nameWithType: IProcessInitializer
  fullName: System.EnterpriseServices.IProcessInitializer
  type: Interface
  summary: "Supports methods that can be called when a COM component starts up or shuts down."
  remarks: "Implement the IProcessInitializer interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.       COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends. This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code. An instance of each component that implements the IProcessInitializer interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown. When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, during registration of the component, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection is set to `true`.       Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code. However, you must not access states that are specific to COM+ because instances of server components have not yet been created. In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process. If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame. Each server component that participates in initialization must support the IProcessInitializer interface. On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the IProcessInitializer interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function. Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IProcessInitializer
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  id: Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Performs shutdown actions. Called when Dllhost.exe is shut down."
  remarks: "Shutdown is not called during a failfast or other catastrophic shutdown events."
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.EnterpriseServices.IProcessInitializer.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  id: Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Performs initialization at startup. Called when Dllhost.exe is started."
  remarks: "The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface. <xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.       The initialization code in Startup can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out."
  syntax:
    content: public void Startup (object punkProcessControl);
    parameters:
    - id: punkProcessControl
      type: System.Object
      description: "In Microsoft Windows XP, a pointer to the <xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;></xref> interface of the COM component starting up. In Microsoft Windows 2000, this argument is always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.IProcessInitializer.Startup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown
  nameWithType: IProcessInitializer.Shutdown
- uid: System.EnterpriseServices.IProcessInitializer.Startup*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup
  nameWithType: IProcessInitializer.Startup
