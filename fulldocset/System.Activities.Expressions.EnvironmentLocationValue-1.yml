### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.EnvironmentLocationValue`1
  id: EnvironmentLocationValue`1
  children:
  - System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)
  - System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference
  langs:
  - csharp
  name: EnvironmentLocationValue<T>
  nameWithType: EnvironmentLocationValue<T>
  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>
  type: Class
  syntax:
    content: 'public class EnvironmentLocationValue<T> : System.Activities.CodeActivity<T>'
    typeParameters:
    - id: T
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.CodeActivity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.CodeActivity`1.Implementation
  - System.Activities.CodeActivity`1.ImplementationVersion
  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: EnvironmentLocationValue<T>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "To be added."
  overload: System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)
  id: Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  langs:
  - csharp
  name: Execute(CodeActivityContext)
  nameWithType: EnvironmentLocationValue<T>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>.Execute(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override T Execute (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Activities.Expressions.EnvironmentLocationValue`1.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference
  id: LocationReference
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  langs:
  - csharp
  name: LocationReference
  nameWithType: EnvironmentLocationValue<T>.LocationReference
  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>.LocationReference
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public virtual System.Activities.LocationReference LocationReference { get; }
    return:
      type: System.Activities.LocationReference
      description: "To be added."
  overload: System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.CodeActivity`1
  isExternal: false
  name: System.Activities.CodeActivity<T>
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: EnvironmentLocationValue<T>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  isExternal: false
  name: Execute(CodeActivityContext)
  nameWithType: EnvironmentLocationValue<T>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>.Execute(CodeActivityContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  isExternal: false
  name: LocationReference
  nameWithType: EnvironmentLocationValue<T>.LocationReference
  fullName: System.Activities.Expressions.EnvironmentLocationValue<T>.LocationReference
- uid: System.Activities.LocationReference
  parent: System.Activities
  isExternal: false
  name: LocationReference
  nameWithType: LocationReference
  fullName: System.Activities.LocationReference
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata*
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  isExternal: false
  name: CacheMetadata
  nameWithType: EnvironmentLocationValue<T>.CacheMetadata
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.Execute*
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  isExternal: false
  name: Execute
  nameWithType: EnvironmentLocationValue<T>.Execute
- uid: System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference*
  parent: System.Activities.Expressions.EnvironmentLocationValue`1
  isExternal: false
  name: LocationReference
  nameWithType: EnvironmentLocationValue<T>.LocationReference
