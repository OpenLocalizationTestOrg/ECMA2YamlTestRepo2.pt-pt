### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDeclaration
  id: XmlDeclaration
  children:
  - System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlDeclaration.CloneNode(System.Boolean)
  - System.Xml.XmlDeclaration.Encoding
  - System.Xml.XmlDeclaration.InnerText
  - System.Xml.XmlDeclaration.LocalName
  - System.Xml.XmlDeclaration.Name
  - System.Xml.XmlDeclaration.NodeType
  - System.Xml.XmlDeclaration.Standalone
  - System.Xml.XmlDeclaration.Value
  - System.Xml.XmlDeclaration.Version
  - System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlDeclaration
  nameWithType: XmlDeclaration
  fullName: System.Xml.XmlDeclaration
  type: Class
  summary: "Represents the XML declaration node \\"
  remarks: "This class is a Microsoft extension to the Document Object Model (DOM)."
  syntax:
    content: 'public class XmlDeclaration : System.Xml.XmlLinkedNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: XmlDeclaration(String,String,String,XmlDocument)
  nameWithType: XmlDeclaration.XmlDeclaration(String,String,String,XmlDocument)
  fullName: System.Xml.XmlDeclaration.XmlDeclaration(String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Xml.XmlDeclaration&quot;></see> class."
  remarks: "Do not instantiate an <xref:System.Xml.XmlDeclaration> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateNode%2A>."
  syntax:
    content: protected XmlDeclaration (string version, string encoding, string standalone, System.Xml.XmlDocument doc);
    parameters:
    - id: version
      type: System.String
      description: "The XML version; see the <xref:System.Xml.XmlDeclaration.Version%2A> property."
    - id: encoding
      type: System.String
      description: "The encoding scheme; see the <xref:System.Xml.XmlDeclaration.Encoding%2A> property."
    - id: standalone
      type: System.String
      description: "Indicates whether the XML document depends on an external DTD; see the <xref:System.Xml.XmlDeclaration.Standalone%2A> property."
    - id: doc
      type: System.Xml.XmlDocument
      description: "The parent XML document."
  overload: System.Xml.XmlDeclaration.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlDeclaration.CloneNode(Boolean)
  fullName: System.Xml.XmlDeclaration.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Creates a duplicate of this node."
  remarks: "`CloneNode` serves as a copy constructor for nodes. To see how this method behaves with other node types, see <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>.       The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`)."
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "\n     to recursively clone the subtree under the specified node;  to clone only the node itself. Because  nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting."
    return:
      type: System.Xml.XmlNode
      description: "To be added."
  overload: System.Xml.XmlDeclaration.CloneNode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.Encoding
  id: Encoding
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: Encoding
  nameWithType: XmlDeclaration.Encoding
  fullName: System.Xml.XmlDeclaration.Encoding
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets or sets the encoding level of the XML document."
  remarks: "Unlike most XML attributes, encoding attribute values are not case-sensitive. This is because encoding character names follow ISO and Internet Assigned Numbers Authority (IANA) standards."
  example:
  - "The following example creates an `XmlDeclaration` node and adds it to an XML document.  \n  \n [!code-cs[Classic WebData XmlDeclaration.Encoding Example#1](~/add/codesnippet/CSharp/p-system.xml.xmldeclarat_1_1.cs)]\n [!code-cpp[Classic WebData XmlDeclaration.Encoding Example#1](~/add/codesnippet/CPP/p-system.xml.xmldeclarat_1_1.cpp)]\n [!code-vb[Classic WebData XmlDeclaration.Encoding Example#1](~/add/codesnippet/VisualBasic/p-system.xml.xmldeclarat_1_1.vb)]"
  syntax:
    content: public string Encoding { get; set; }
    return:
      type: System.String
      description: "The valid character encoding name. The most commonly supported character encoding names for XML are the following:       <table><thead><tr><th> Category       </th><th> Encoding Names       </th></tr></thead><tbody><tr><td> Unicode       </td><td> UTF-8, UTF-16       </td></tr><tr><td> ISO 10646       </td><td> ISO-10646-UCS-2, ISO-10646-UCS-4       </td></tr><tr><td> ISO 8859       </td><td> ISO-8859-n (where &quot;n&quot; is a digit from 1 to 9)       </td></tr><tr><td> JIS X-0208-1997       </td><td> ISO-2022-JP, Shift_JIS, EUC-JP       </td></tr></tbody></table>       This value is optional. If a value is not set, this property returns String.Empty.       If an encoding attribute is not included, UTF-8 encoding is assumed when the document is written or saved out."
  overload: System.Xml.XmlDeclaration.Encoding*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.InnerText
  id: InnerText
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlDeclaration.InnerText
  fullName: System.Xml.XmlDeclaration.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets or sets the concatenated values of the <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public override string InnerText { get; set; }
    return:
      type: System.String
      description: "The concatenated values of the <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref> (that is, everything between `"
  overload: System.Xml.XmlDeclaration.InnerText*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.LocalName
  id: LocalName
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlDeclaration.LocalName
  fullName: System.Xml.XmlDeclaration.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the local name of the node."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "For <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref> nodes, the local name is <xref uid=&quot;langword_csharp_xml&quot; name=&quot;xml&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDeclaration.LocalName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.Name
  id: Name
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: Name
  nameWithType: XmlDeclaration.Name
  fullName: System.Xml.XmlDeclaration.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the qualified name of the node."
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "For <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref> nodes, the name is <xref uid=&quot;langword_csharp_xml&quot; name=&quot;xml&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDeclaration.Name*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.NodeType
  id: NodeType
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlDeclaration.NodeType
  fullName: System.Xml.XmlDeclaration.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the type of the current node."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "For <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref> nodes, this value is XmlNodeType.XmlDeclaration."
  overload: System.Xml.XmlDeclaration.NodeType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.Standalone
  id: Standalone
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: Standalone
  nameWithType: XmlDeclaration.Standalone
  fullName: System.Xml.XmlDeclaration.Standalone
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets or sets the value of the standalone attribute."
  remarks: ''
  example:
  - "The following example creates an `XmlDeclaration` node and adds it to an XML document.  \n  \n [!code-cs[Classic WebData XmlDeclaration.Standalone Example#1](~/add/codesnippet/CSharp/p-system.xml.xmldeclarat_0_1.cs)]\n [!code-cpp[Classic WebData XmlDeclaration.Standalone Example#1](~/add/codesnippet/CPP/p-system.xml.xmldeclarat_0_1.cpp)]\n [!code-vb[Classic WebData XmlDeclaration.Standalone Example#1](~/add/codesnippet/VisualBasic/p-system.xml.xmldeclarat_0_1.vb)]"
  syntax:
    content: public string Standalone { get; set; }
    return:
      type: System.String
      description: "Valid values are <xref uid=&quot;langword_csharp_yes&quot; name=&quot;yes&quot; href=&quot;&quot;></xref> if all entity declarations required by the XML document are contained within the document or <xref uid=&quot;langword_csharp_no&quot; name=&quot;no&quot; href=&quot;&quot;></xref> if an external document type definition (DTD) is required. If a standalone attribute is not present in the XML declaration, this property returns String.Empty."
  overload: System.Xml.XmlDeclaration.Standalone*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.Value
  id: Value
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: Value
  nameWithType: XmlDeclaration.Value
  fullName: System.Xml.XmlDeclaration.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets or sets the value of the <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "The contents of the <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref> (that is, everything between `"
  overload: System.Xml.XmlDeclaration.Value*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.Version
  id: Version
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: Version
  nameWithType: XmlDeclaration.Version
  fullName: System.Xml.XmlDeclaration.Version
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the XML version of the document."
  syntax:
    content: public string Version { get; }
    return:
      type: System.String
      description: "The value is always <xref uid=&quot;langword_csharp_1.0&quot; name=&quot;1.0&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDeclaration.Version*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDeclaration.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDeclaration.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Saves the children of the node to the specified &lt;xref:System.Xml.XmlWriter&gt;. Because <xref uid=&quot;langword_csharp_XmlDeclaration&quot; name=&quot;XmlDeclaration&quot; href=&quot;&quot;></xref> nodes do not have children, this method has no effect."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "The  to which you want to save."
  overload: System.Xml.XmlDeclaration.WriteContentTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlDeclaration.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDeclaration.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Saves the node to the specified &lt;xref:System.Xml.XmlWriter&gt;."
  remarks: "The value of the encoding and standalone attributes are determined by the <xref:System.Xml.XmlDeclaration.Encoding%2A> and <xref:System.Xml.XmlDeclaration.Standalone%2A> properties. If either of the properties is not set, the corresponding attribute is not written. The version attribute is always written out with a value of 1.0."
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "The  to which you want to save."
  overload: System.Xml.XmlDeclaration.WriteTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Xml.XmlLinkedNode
  isExternal: false
  name: System.Xml.XmlLinkedNode
- uid: System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: XmlDeclaration(String,String,String,XmlDocument)
  nameWithType: XmlDeclaration.XmlDeclaration(String,String,String,XmlDocument)
  fullName: System.Xml.XmlDeclaration.XmlDeclaration(String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlDeclaration.CloneNode(System.Boolean)
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlDeclaration.CloneNode(Boolean)
  fullName: System.Xml.XmlDeclaration.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDeclaration.Encoding
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Encoding
  nameWithType: XmlDeclaration.Encoding
  fullName: System.Xml.XmlDeclaration.Encoding
- uid: System.Xml.XmlDeclaration.InnerText
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: InnerText
  nameWithType: XmlDeclaration.InnerText
  fullName: System.Xml.XmlDeclaration.InnerText
- uid: System.Xml.XmlDeclaration.LocalName
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: LocalName
  nameWithType: XmlDeclaration.LocalName
  fullName: System.Xml.XmlDeclaration.LocalName
- uid: System.Xml.XmlDeclaration.Name
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Name
  nameWithType: XmlDeclaration.Name
  fullName: System.Xml.XmlDeclaration.Name
- uid: System.Xml.XmlDeclaration.NodeType
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: NodeType
  nameWithType: XmlDeclaration.NodeType
  fullName: System.Xml.XmlDeclaration.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDeclaration.Standalone
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Standalone
  nameWithType: XmlDeclaration.Standalone
  fullName: System.Xml.XmlDeclaration.Standalone
- uid: System.Xml.XmlDeclaration.Value
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Value
  nameWithType: XmlDeclaration.Value
  fullName: System.Xml.XmlDeclaration.Value
- uid: System.Xml.XmlDeclaration.Version
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Version
  nameWithType: XmlDeclaration.Version
  fullName: System.Xml.XmlDeclaration.Version
- uid: System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDeclaration.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDeclaration.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlDeclaration.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDeclaration.WriteTo(XmlWriter)
- uid: System.Xml.XmlDeclaration.#ctor*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: XmlDeclaration
  nameWithType: XmlDeclaration.XmlDeclaration
- uid: System.Xml.XmlDeclaration.CloneNode*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: CloneNode
  nameWithType: XmlDeclaration.CloneNode
- uid: System.Xml.XmlDeclaration.Encoding*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Encoding
  nameWithType: XmlDeclaration.Encoding
- uid: System.Xml.XmlDeclaration.InnerText*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: InnerText
  nameWithType: XmlDeclaration.InnerText
- uid: System.Xml.XmlDeclaration.LocalName*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: LocalName
  nameWithType: XmlDeclaration.LocalName
- uid: System.Xml.XmlDeclaration.Name*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Name
  nameWithType: XmlDeclaration.Name
- uid: System.Xml.XmlDeclaration.NodeType*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: NodeType
  nameWithType: XmlDeclaration.NodeType
- uid: System.Xml.XmlDeclaration.Standalone*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Standalone
  nameWithType: XmlDeclaration.Standalone
- uid: System.Xml.XmlDeclaration.Value*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Value
  nameWithType: XmlDeclaration.Value
- uid: System.Xml.XmlDeclaration.Version*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: Version
  nameWithType: XmlDeclaration.Version
- uid: System.Xml.XmlDeclaration.WriteContentTo*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlDeclaration.WriteContentTo
- uid: System.Xml.XmlDeclaration.WriteTo*
  parent: System.Xml.XmlDeclaration
  isExternal: false
  name: WriteTo
  nameWithType: XmlDeclaration.WriteTo
