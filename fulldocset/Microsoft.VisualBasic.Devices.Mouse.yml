### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Mouse
  id: Mouse
  children:
  - Microsoft.VisualBasic.Devices.Mouse.#ctor
  - Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  - Microsoft.VisualBasic.Devices.Mouse.WheelExists
  - Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  langs:
  - csharp
  name: Mouse
  nameWithType: Mouse
  fullName: Microsoft.VisualBasic.Devices.Mouse
  type: Class
  summary: "Fornece propriedades para obter informações sobre o formato e a configuração de rato instalado no computador local."
  remarks: "O `My.Computer.Mouse` objeto fornece uma forma para encontrar informações sobre o rato do computador: indica se os botões de rato são trocados e detalhes sobre a roda do rato.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` and `My.Computer.Mouse.WheelScrollLines` properties to determine if the mouse has a scroll wheel and how much to scroll when it rotates.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public class Mouse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.Devices.Mouse&quot;> </xref> classe."
  remarks: 'The `My.Computer.Mouse` object provides a way to find information about the computer''s mouse: whether the mouse buttons are swapped and details about the mouse wheel.'
  syntax:
    content: public Mouse ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  id: ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se a funcionalidade dos botões de rato esquerda e direita foram alternada."
  remarks: "O `My.Computer.Mouse.ButtonsSwapped` propriedade:-fornece uma funcionalidade semelhante a <xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>propriedade.</xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>      -Fornece informações sobre o computador que executa o código.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Mouse.ButtonsSwapped` property to determine if functionality of the left and right mouse buttons has been swapped.  \n  \n [!code-vb[VbVbalrMyComputer#35](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#35)]"
  syntax:
    content: public bool ButtonsSwapped { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> com um valor <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> tenha a funcionalidade dos botões de rato esquerda e direita trocada pela; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O computador não tem nenhum rato instalado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  id: WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se o rato tem uma roda de deslocamento."
  remarks: "O `My.Computer.Mouse.WheelExists` propriedade fornece funcionalidade semelhante a <xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>propriedade.</xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>       Deve verificar o valor da `My.Computer.Mouse.WheelExists` propriedade antes de tentar aceder a <xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>propriedade, o que emite uma exceção se o rato não tiver uma roda de deslocamento.</xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>       O `My.Computer.Mouse.WheelExists` propriedade fornece informações sobre o computador que executa o código.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` property to determine if the mouse has a scroll wheel and how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public bool WheelExists { get; }
    return:
      type: System.Boolean
      description: "Um valor boleano com valor <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se o rato tem uma roda de deslocamento; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O computador não tem nenhum rato instalado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  id: WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um número que indica a quantidade de deslocar quando a roda de rato um notch rotação."
  remarks: "Pode utilizar esta propriedade para determinar quantas linhas deslocamento para cima ou para baixo um controlo com várias linhas com uma barra de deslocamento.       O `My.Computer.Mouse.WheelScrollLines` propriedade fornece funcionalidade semelhante a <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>propriedade.</xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>       Porque esta propriedade emite uma exceção se o rato não tiver uma roda de deslocamento, deve certificar-se um rato tem uma roda de deslocamento verificando o `My.Computer.Mouse.WheelExists` propriedade.       Esta propriedade fornece informações sobre o computador que executa o código.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example determines if the mouse has a scroll wheel and uses the `My.Computer.Mouse.WheelExists` property to determine how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public int WheelScrollLines { get; }
    return:
      type: System.Int32
      description: "Um <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> que indica a quantidade de deslocar quando a roda de rato um notch rotação. Um valor positivo indica deslocamento por esse número de linhas, enquanto um valor negativo indica deslocamento por um ecrã de cada vez."
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O rato não tem nenhuma roda de deslocamento."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse
  nameWithType: Mouse.Mouse
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
