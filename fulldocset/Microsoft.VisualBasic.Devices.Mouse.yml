### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Mouse
  id: Mouse
  children:
  - Microsoft.VisualBasic.Devices.Mouse.#ctor
  - Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  - Microsoft.VisualBasic.Devices.Mouse.WheelExists
  - Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  langs:
  - csharp
  name: Mouse
  nameWithType: Mouse
  fullName: Microsoft.VisualBasic.Devices.Mouse
  type: Class
  summary: "Provides properties for getting information about the format and configuration of the mouse installed on the local computer."
  remarks: "The `My.Computer.Mouse` object provides a way to find information about the computer&quot;s mouse: whether the mouse buttons are swapped, and details about the mouse wheel.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` and `My.Computer.Mouse.WheelScrollLines` properties to determine if the mouse has a scroll wheel and how much to scroll when it rotates.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public class Mouse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.VisualBasic.Devices.Mouse&quot;></xref> class."
  remarks: 'The `My.Computer.Mouse` object provides a way to find information about the computer''s mouse: whether the mouse buttons are swapped and details about the mouse wheel.'
  syntax:
    content: public Mouse ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  id: ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Gets a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> that indicates if the functionality of the left and right mouse buttons has been swapped."
  remarks: "The `My.Computer.Mouse.ButtonsSwapped` property:      -   Provides functionality similar to the <xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A> property.      -   Provides information about the computer that runs the code.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Computer.Mouse.ButtonsSwapped` property to determine if functionality of the left and right mouse buttons has been swapped.  \n  \n [!code-vb[VbVbalrMyComputer#35](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#35)]"
  syntax:
    content: public bool ButtonsSwapped { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> with a value <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the functionality of the left and right mouse buttons has been swapped; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The computer has no mouse installed."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  id: WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Gets a <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> that indicates if the mouse has a scroll wheel."
  remarks: "The `My.Computer.Mouse.WheelExists` property provides functionality similar to the <xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A> property.       You should check the value of the `My.Computer.Mouse.WheelExists` property before attempting to access the <xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A> property, which throws an exception if the mouse does not have a scroll wheel.       The `My.Computer.Mouse.WheelExists` property provides information about the computer that runs the code.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` property to determine if the mouse has a scroll wheel and how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public bool WheelExists { get; }
    return:
      type: System.Boolean
      description: "A Boolean with value <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the mouse has a scroll wheel; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The computer has no mouse installed."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  id: WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Gets a number that indicates how much to scroll when the mouse wheel is rotated one notch."
  remarks: "You can use this property to determine how many lines to scroll up or down in a multi-line control that has a scroll bar.       The `My.Computer.Mouse.WheelScrollLines` property provides functionality similar to the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A> property.       Because this property throws an exception if the mouse does not have a scroll wheel, you should make sure a mouse has a scroll wheel by checking the `My.Computer.Mouse.WheelExists` property.       This property provides information about the computer that runs the code.      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example determines if the mouse has a scroll wheel and uses the `My.Computer.Mouse.WheelExists` property to determine how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public int WheelScrollLines { get; }
    return:
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> that indicates how much to scroll when the mouse wheel is rotated one notch. A positive value indicates scrolling by that number of lines, while a negative value indicates scrolling by one screen at a time."
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The mouse has no scroll wheel."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse
  nameWithType: Mouse.Mouse
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
