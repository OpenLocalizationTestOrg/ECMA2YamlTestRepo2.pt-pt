### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Tracking.TrackingRecord
  id: TrackingRecord
  children:
  - System.Workflow.Runtime.Tracking.TrackingRecord.#ctor
  - System.Workflow.Runtime.Tracking.TrackingRecord.Annotations
  - System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs
  - System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime
  - System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder
  langs:
  - csharp
  name: TrackingRecord
  nameWithType: TrackingRecord
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord
  type: Class
  summary: "The <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;></xref> base class from which <xref href=&quot;System.Workflow.Runtime.Tracking.ActivityTrackingRecord&quot;></xref>, <xref href=&quot;System.Workflow.Runtime.Tracking.UserTrackingRecord&quot;></xref>, and <xref href=&quot;System.Workflow.Runtime.Tracking.WorkflowTrackingRecord&quot;></xref> are derived."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       During its execution, a workflow instance emits three kinds of tracking events to the runtime tracking infrastructure: activity status events, user events, and workflow status events. The runtime tracking infrastructure tries to match these events with track points in a <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Whenever the runtime tracking infrastructure matches a track point, it sends a tracking record that contains data associated with both the track point and the tracking event to the tracking service. There are three kinds of tracking record that the runtime tracking infrastructure can send: an <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>, a <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>, and a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>. Each kind of tracking record derives from the TrackingRecord class and corresponds to one of the three kinds of track point that the runtime tracking infrastructure can match: an <xref:System.Workflow.Runtime.Tracking.ActivityTrackPoint>, a <xref:System.Workflow.Runtime.Tracking.UserTrackPoint>, or a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint>."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class TrackingRecord
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  langs:
  - csharp
  name: TrackingRecord()
  nameWithType: TrackingRecord.TrackingRecord()
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.TrackingRecord()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "When implemented in a derived class, initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingRecord&quot;></xref> class."
  syntax:
    content: protected TrackingRecord ();
    parameters: []
  overload: System.Workflow.Runtime.Tracking.TrackingRecord.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.Annotations
  id: Annotations
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  langs:
  - csharp
  name: Annotations
  nameWithType: TrackingRecord.Annotations
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.Annotations
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "When overridden in a derived class, gets the collection of annotations associated with the track point."
  remarks: "You can specify annotations to be associated with an <xref:System.Workflow.Runtime.Tracking.ActivityTrackPoint>, a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> or a <xref:System.Workflow.Runtime.Tracking.UserTrackPoint> in a <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. The runtime tracking infrastructure stores these annotations, and, when it matches the track point, it returns them in Annotations."
  syntax:
    content: public abstract System.Workflow.Runtime.Tracking.TrackingAnnotationCollection Annotations { get; }
    return:
      type: System.Workflow.Runtime.Tracking.TrackingAnnotationCollection
      description: "A <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingAnnotationCollection&quot;></xref> that contains the annotations associated with the track point to which this <xref href=&quot;System.Workflow.Runtime.Tracking.TrackingRecord&quot;></xref> corresponds."
  overload: System.Workflow.Runtime.Tracking.TrackingRecord.Annotations*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs
  id: EventArgs
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  langs:
  - csharp
  name: EventArgs
  nameWithType: TrackingRecord.EventArgs
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "When overridden in a derived class, gets or sets the event data, if any, that is associated with the tracking event that caused the tracking record to be sent."
  remarks: "Certain kinds of tracking events emitted by a workflow instance have event data associated with them. If a tracking event has event data associated with it, the runtime tracking infrastructure puts the event data in EventArgs property of the derived class. For example, when a workflow instance is terminated, the runtime tracking infrastructure sends a <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> with <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A?displayProperty=fullName> set to a <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs> that contains information about the reason for the termination."
  syntax:
    content: public abstract EventArgs EventArgs { get; set; }
    return:
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that represents the event data, if any, that is associated with the tracking event that caused the tracking record to be sent."
  overload: System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime
  id: EventDateTime
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  langs:
  - csharp
  name: EventDateTime
  nameWithType: TrackingRecord.EventDateTime
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "When overridden in a derived class, gets or sets the time and date of the tracking event associated with the tracking record."
  remarks: "The <xref:System.DateTime> is Coordinated Universal Time (UTC)."
  syntax:
    content: public abstract DateTime EventDateTime { get; set; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime> that indicates the date and time that the tracking event occurred."
  overload: System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder
  id: EventOrder
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  langs:
  - csharp
  name: EventOrder
  nameWithType: TrackingRecord.EventOrder
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Tracking
  summary: "When overridden in a derived class, gets or sets a value that indicates the order of the tracking event associated with the tracking record relative to the other tracking events emitted by the workflow instance."
  remarks: "EventOrder indicates the relative order of the tracking event within the workflow instance. EventOrder will be unique within a workflow instance, but it is not guaranteed to be sequential."
  syntax:
    content: public abstract int EventOrder { get; set; }
    return:
      type: System.Int32
      description: "A value that indicates the order of the tracking event relative to the other tracking events emitted by the workflow instance."
  overload: System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.#ctor
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: TrackingRecord()
  nameWithType: TrackingRecord.TrackingRecord()
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.TrackingRecord()
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.Annotations
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: Annotations
  nameWithType: TrackingRecord.Annotations
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.Annotations
- uid: System.Workflow.Runtime.Tracking.TrackingAnnotationCollection
  parent: System.Workflow.Runtime.Tracking
  isExternal: false
  name: TrackingAnnotationCollection
  nameWithType: TrackingAnnotationCollection
  fullName: System.Workflow.Runtime.Tracking.TrackingAnnotationCollection
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: EventArgs
  nameWithType: TrackingRecord.EventArgs
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: EventDateTime
  nameWithType: TrackingRecord.EventDateTime
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: EventOrder
  nameWithType: TrackingRecord.EventOrder
  fullName: System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.#ctor*
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: TrackingRecord
  nameWithType: TrackingRecord.TrackingRecord
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.Annotations*
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: Annotations
  nameWithType: TrackingRecord.Annotations
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventArgs*
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: EventArgs
  nameWithType: TrackingRecord.EventArgs
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventDateTime*
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: EventDateTime
  nameWithType: TrackingRecord.EventDateTime
- uid: System.Workflow.Runtime.Tracking.TrackingRecord.EventOrder*
  parent: System.Workflow.Runtime.Tracking.TrackingRecord
  isExternal: false
  name: EventOrder
  nameWithType: TrackingRecord.EventOrder
