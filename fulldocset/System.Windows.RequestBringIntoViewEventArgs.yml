### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventArgs
  id: RequestBringIntoViewEventArgs
  children:
  - System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RequestBringIntoViewEventArgs.TargetObject
  - System.Windows.RequestBringIntoViewEventArgs.TargetRect
  langs:
  - csharp
  name: RequestBringIntoViewEventArgs
  nameWithType: RequestBringIntoViewEventArgs
  fullName: System.Windows.RequestBringIntoViewEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;></xref> routed event."
  remarks: "The <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> event is raised by elements when you call <xref:System.Windows.FrameworkElement.BringIntoView%2A> from that element. Generally, this routed event is not handled by the source. Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.  The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <xref:System.Windows.UIElement.ClipToBounds%2A> `false`. Such parent elements typically provide class handling for the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.       Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> from the content host). Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.       A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>."
  syntax:
    content: 'public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Invokes event handlers in a type-specific way, which can increase event system efficiency."
  remarks: "This implementation casts the generic handler as a <xref:System.Windows.RequestBringIntoViewEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "The generic handler to call in a type-specific way."
    - id: genericTarget
      type: System.Object
      description: "The target to call the handler on."
  overload: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  id: TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets the object that should be made visible in response to the event."
  remarks: "This object is typically the same object as returned by <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.DependencyObject TargetObject { get; }
    return:
      type: System.Windows.DependencyObject
      description: "The object that called <xref:System.Windows.FrameworkElement.BringIntoView*>."
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  id: TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets the rectangular region in the object&quot;s coordinate space which should be made visible."
  remarks: "If the signature of <xref:System.Windows.FrameworkElement.BringIntoView%2A> that was invoked to raise the event didn&quot;t specify a target rectangle, this property may be the <xref:System.Windows.Rect.Empty%2A> value of the <xref:System.Windows.Rect> structure."
  syntax:
    content: public System.Windows.Rect TargetRect { get; }
    return:
      type: System.Windows.Rect
      description: "The requested rectangular space."
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
