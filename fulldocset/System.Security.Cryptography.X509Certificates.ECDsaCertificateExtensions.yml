### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  id: ECDsaCertificateExtensions
  children:
  - System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  - System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  langs:
  - csharp
  name: ECDsaCertificateExtensions
  nameWithType: ECDsaCertificateExtensions
  fullName: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  type: Class
  summary: "Provides extension methods for retrieving <xref href=&quot;System.Security.Cryptography.ECDsa&quot;></xref> implementations for the     public and private keys of a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> certificate."
  syntax:
    content: public static class ECDsaCertificateExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  id: GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  parent: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  langs:
  - csharp
  name: GetECDsaPrivateKey(X509Certificate2)
  nameWithType: ECDsaCertificateExtensions.GetECDsaPrivateKey(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(X509Certificate2)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Gets the <xref href=&quot;System.Security.Cryptography.ECDsa&quot;></xref> private key from the <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> certificate."
  syntax:
    content: public static System.Security.Cryptography.ECDsa GetECDsaPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "The certificate."
    return:
      type: System.Security.Cryptography.ECDsa
      description: "The private key, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the certificate does not have an ECDsa private key."
  overload: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  id: GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  parent: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  langs:
  - csharp
  name: GetECDsaPublicKey(X509Certificate2)
  nameWithType: ECDsaCertificateExtensions.GetECDsaPublicKey(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(X509Certificate2)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Gets the <xref href=&quot;System.Security.Cryptography.ECDsa&quot;></xref> public key from the <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> certificate."
  syntax:
    content: public static System.Security.Cryptography.ECDsa GetECDsaPublicKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "The certificate."
    return:
      type: System.Security.Cryptography.ECDsa
      description: "The public key, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the certificate does not have an ECDsa public key."
  overload: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The handle is invalid."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  parent: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  isExternal: false
  name: GetECDsaPrivateKey(X509Certificate2)
  nameWithType: ECDsaCertificateExtensions.GetECDsaPrivateKey(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(X509Certificate2)
- uid: System.Security.Cryptography.ECDsa
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDsa
  nameWithType: ECDsa
  fullName: System.Security.Cryptography.ECDsa
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2@)
  parent: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  isExternal: false
  name: GetECDsaPublicKey(X509Certificate2)
  nameWithType: ECDsaCertificateExtensions.GetECDsaPublicKey(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey*
  parent: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  isExternal: false
  name: GetECDsaPrivateKey
  nameWithType: ECDsaCertificateExtensions.GetECDsaPrivateKey
- uid: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey*
  parent: System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
  isExternal: false
  name: GetECDsaPublicKey
  nameWithType: ECDsaCertificateExtensions.GetECDsaPublicKey
