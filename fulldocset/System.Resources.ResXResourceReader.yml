### YamlMime:ManagedReference
items:
- uid: System.Resources.ResXResourceReader
  id: ResXResourceReader
  children:
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  - System.Resources.ResXResourceReader.#ctor(System.String)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.BasePath
  - System.Resources.ResXResourceReader.Close
  - System.Resources.ResXResourceReader.Dispose(System.Boolean)
  - System.Resources.ResXResourceReader.Finalize
  - System.Resources.ResXResourceReader.FromFileContents(System.String)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.GetEnumerator
  - System.Resources.ResXResourceReader.GetMetadataEnumerator
  - System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.ResXResourceReader.System#IDisposable#Dispose
  - System.Resources.ResXResourceReader.UseResXDataNodes
  langs:
  - csharp
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
  type: Class
  summary: "Enumera os ficheiros de recursos (. resx) de XML e fluxos e lê o recurso sequencial pares nome / valor."
  remarks: "A classe de ResXResourceReader fornece uma implementação predefinida do <xref:System.Resources.IResourceReader>interface que lê as informações de recurso num formato XML.</xref:System.Resources.IResourceReader> Para ler as informações de recursos de um formato de recurso binário, utilize a <xref:System.Resources.ResourceReader>classe.</xref:System.Resources.ResourceReader>       Utilizar a classe de ResXResourceReader ao enumerar os recursos em ficheiros. resx por atravessa o enumerador de dicionário (<xref:System.Collections.IDictionaryEnumerator>) que é devolvido pelo <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>método.</xref:System.Resources.ResXResourceReader.GetEnumerator%2A> </xref:System.Collections.IDictionaryEnumerator> Chamar os métodos fornecidos pela <xref:System.Collections.IDictionaryEnumerator>para avançar para o seguinte recurso e ler o nome e valor de cada recurso no ficheiro. resx.</xref:System.Collections.IDictionaryEnumerator>      > [!NOTE] > ResXResourceReader a classe fornece dois enumeradores. O <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>método devolve um <xref:System.Collections.IDictionaryEnumerator>objeto; Recomendamos que utilize este método para enumeração de recursos.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> O <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>método é uma implementação de interface explícita que devolva uma <xref:System.Collections.IEnumerator>objeto; não se recomenda a sua utilização.</xref:System.Collections.IEnumerator> </xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>       O exemplo seguinte utiliza o <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>método para obter um <xref:System.Collections.IDictionaryEnumerator>objeto que é utilizado para enumerar os recursos num ficheiro. resx.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A> O exemplo inclui uma `CreateResourceFile` rotina que cria o ficheiro de recurso necessário.       [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)][!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb) ] se o <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>propriedade é `true`, o valor da <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>propriedade é um <xref:System.Resources.ResXDataNode>objeto em vez do valor de recursos.</xref:System.Resources.ResXDataNode> </xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   Isto torna o comentário de um item de recursos disponíveis no <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName>propriedade.</xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName> Os seguintes conjuntos de exemplo a <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>propriedade `true` e enumera os recursos num ficheiro. resx, [!code-cs [System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)][!code-vb[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb) ] se <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>é `true`, a <xref:System.Resources.ResXDataNode>itens na enumeração podem ser:-com o nome de recursos, juntamente com os seus dados.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> Neste caso, o <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>propriedade é `null`.</xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>      -Recursos as com nome juntamente com o nome do ficheiro que contém os dados de recursos. Neste caso, o <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>propriedade devolve um <xref:System.Resources.ResXFileRef>objeto que fornece informações sobre o recurso, incluindo o nome do ficheiro.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> Se forem utilizados nomes de ficheiro relativo, deve sempre definir a <xref:System.Resources.ResXResourceReader.BasePath%2A>propriedade para fornecer um ponto de referência para o caminho de ficheiro relativo.</xref:System.Resources.ResXResourceReader.BasePath%2A>       Se pretender obter recursos com o nome de um ficheiro. resx em vez de a enumerar os respetivos recursos, pode instanciar um <xref:System.Resources.ResXResourceSet>objeto e chamada respetivo `GetString` e `GetObject` métodos.</xref:System.Resources.ResXResourceSet>      > [!NOTE] > ResXResourceReader a classe contém um pedido de ligação e um pedido de herança ao nível da classe que se aplica a todos os membros. A <xref:System.Security.SecurityException>é emitida uma exceção quando o chamador imediato ou classe derivada não tem permissão de fidedignidade total.</xref:System.Security.SecurityException>"
  example:
  - "The following example demonstrates how to use a ResXResourceReader to iterate through the resources in a .resx file. First, the ResXResourceReader`rsxr` is created for the file `items.resx`. Next, the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> to iterate through the resources and display the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/t-system.resources.resxr_1_3.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_3.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_3.vb)]"
  syntax:
    content: 'public class ResXResourceReader : System.Resources.IResourceReader'
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceReader
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> classe para o stream especificado."
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Resources.ResXResourceReader.Dispose%2A> and <xref:System.Resources.ResXResourceReader.Close%2A> methods do not close the stream you specify in this constructor.
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um fluxo de entrada que contém os recursos."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> classe para o <xref:System.IO.TextReader>.</xref:System.IO.TextReader> especificado"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Um fluxo de entrada de texto que contém os recursos."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> classe para o ficheiro de recurso especificado."
  remarks: ''
  example:
  - "The following example creates a new instance of the <xref:System.Resources.ResXResourceReader> class for the specified file, iterates through the resources of the file, and displays the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_1_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_1_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_1_1.vb)]"
  syntax:
    content: public ResXResourceReader (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O caminho do ficheiro de recursos para leitura."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> através de um fluxo de entrada e um serviço de resolução de tipo de classe."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um fluxo de entrada que contém os recursos."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Um objeto que seja resolvido escreva nomes especificados num recurso."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.Stream,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> utilizando uma transmissão em fluxo e uma matriz de nomes de assemblagem de classe."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um fluxo de entrada que contém os recursos."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Uma matriz de <xref:System.Reflection.AssemblyName>objetos que especifica uma ou mais assemblagens.</xref:System.Reflection.AssemblyName> As assemblagens são utilizadas para resolver um nome de tipo de recurso num tipo VERDADEIRO."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> utilizando um leitor de fluxo de texto e um serviço de resolução de tipo de classe."
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Leitor de fluxo de texto que contém os recursos."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Um objeto que seja resolvido escreva nomes especificados num recurso."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> classe utilizando um <xref:System.IO.TextReader>objeto e uma matriz de nomes de assemblagem.</xref:System.IO.TextReader>"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Um objecto utilizado para ler recursos a partir de um fluxo de texto."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Uma matriz de <xref:System.Reflection.AssemblyName>objetos que especifica uma ou mais assemblagens.</xref:System.Reflection.AssemblyName> As assemblagens são utilizadas para resolver um nome de tipo de recurso num tipo VERDADEIRO."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> utilizando um nome de ficheiro e um serviço de resolução de tipo de classe."
  syntax:
    content: public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro de recursos XML que contém os recursos."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Um objeto que seja resolvido escreva nomes especificados num recurso."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  id: '#ctor(System.String,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> utilizando um nome de ficheiro de recursos XML e uma matriz de nomes de assemblagem de classe."
  syntax:
    content: public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome de um ficheiro de recursos XML que contém os recursos."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Uma matriz de <xref:System.Reflection.AssemblyName>objetos que especifica uma ou mais assemblagens.</xref:System.Reflection.AssemblyName> As assemblagens são utilizadas para resolver um nome de tipo de recurso num tipo VERDADEIRO."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.BasePath
  id: BasePath
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Obtém ou define o caminho de base para o caminho de ficheiro relativo especificado num <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> objeto."
  remarks: "A propriedade BasePath é utilizada para resolver referências de caminho de ficheiro relativo que estão atribuídas ao <xref:System.Resources.ResXFileRef.FileName%2A>propriedade <xref:System.Resources.ResXFileRef>objetos.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXFileRef.FileName%2A>  Por predefinição, o seu valor é <xref:System.String.Empty?displayProperty=fullName>, e referências de caminho de ficheiro relativo são resolvidas em relação ao diretório atual devolvido pelo <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName>propriedade.</xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> </xref:System.String.Empty?displayProperty=fullName> Esta propriedade deve ser definido antes de começar a enumerar os recursos."
  example:
  - "The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource. <xref:System.Resources.ResXFileRef> objects are used to store the path to the images rather than storing the binary images themselves in the resource file. The example sets the BasePath property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\\data\\\\.  \n  \n [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/visualbasic/p-system.resources.resxr_1_1.vb)]\n [!code-cs[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/csharp/p-system.resources.resxr_1_1.cs)]  \n  \n Note that you must add a reference to System.Drawing.dll to compile the project successfully. The example also requires that the necessary images exist in a directory named C:\\data\\images\\\\."
  syntax:
    content: public string BasePath { get; set; }
    return:
      type: System.String
      description: "Um caminho que, se prepended para o caminho de ficheiro relativo especificado num <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> objeto, gera um caminho absoluto para um ficheiro de recursos."
  overload: System.Resources.ResXResourceReader.BasePath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Numa operação de conjunto não pode ser especificado um valor porque o ficheiro XML de recursos já tiverem sido acedido e está a ser utilizado."
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Close
  id: Close
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref>."
  remarks: "Chamar fechar permite que os recursos utilizados pelo <xref:System.Resources.ResXResourceReader>para possível reatribuir porque para outros fins.</xref:System.Resources.ResXResourceReader> Para obter mais informações sobre o fechar, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example displays the resources of a file to the console, and then uses the Close method to shut down the reader and to make its resources available for other processes.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_2_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_2_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_2_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: "Este método pode ser chamado por qualquer o <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>método ou <xref:System.Object.Finalize%2A?displayProperty=fullName>método.</xref:System.Object.Finalize%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>invoca este método com o `disposing` parâmetro definido como `true`.</xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Object.Finalize%2A>invoca este método com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.Resources.ResXResourceReader>referências.</xref:System.Resources.ResXResourceReader> Este método invoca o `Dispose` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Resources.ResXResourceReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Finalize
  id: Finalize
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Este membro substitui o <xref:System.Object.Finalize*>método.</xref:System.Object.Finalize*>"
  syntax:
    content: ~ResXResourceReader ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  id: FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Cria uma nova <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> de objeto e inicializa a leitura de uma cadeia cujo conteúdo está sob a forma de um ficheiro de recursos XML."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents);
    parameters:
    - id: fileContents
      type: System.String
      description: "Uma cadeia que contém informações de recurso formatado de XML."
    return:
      type: System.Resources.ResXResourceReader
      description: "Um objeto que lê recursos a partir de <code> fileContents </code> cadeia."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Cria uma nova <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> de objeto e inicializa para ler uma cadeia cujo conteúdo está sob a forma de um ficheiro de recursos XML, e utilizar um <xref href=&quot;System.ComponentModel.Design.ITypeResolutionService&quot;> </xref> objeto para resolver nomes de tipo especificados num recurso."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileContents
      type: System.String
      description: "Uma cadeia que contém informações de recurso formatado de XML."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Um objeto que seja resolvido escreva nomes especificados num recurso."
    return:
      type: System.Resources.ResXResourceReader
      description: "Um objeto que lê recursos a partir de <code> fileContents </code> cadeia."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  id: FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Cria uma nova <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> de objeto e inicializa para ler uma cadeia cujo conteúdo está sob a forma de um ficheiro de recursos XML, e utilizar uma matriz de <xref:System.Reflection.AssemblyName>objetos para resolver nomes de tipo especificados num recurso.</xref:System.Reflection.AssemblyName>"
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileContents
      type: System.String
      description: "Uma cadeia cujo conteúdo está sob a forma de um ficheiro de recursos XML."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Uma matriz de <xref:System.Reflection.AssemblyName>objetos que especifica uma ou mais assemblagens.</xref:System.Reflection.AssemblyName> As assemblagens são utilizadas para resolver um nome de tipo de recurso num tipo VERDADEIRO."
    return:
      type: System.Resources.ResXResourceReader
      description: "Um objeto que lê recursos a partir de <code> fileContents </code> cadeia."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Devolve um enumerador de atual <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> objeto."
  remarks: "O método GetEnumerator obtém os pares nome/valor na sequência de recursos (. resx) de XML ou cadeia associados à atual <xref:System.Resources.ResXResourceReader>objeto.</xref:System.Resources.ResXResourceReader> No entanto, se o <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>propriedade está definida como `true` antes de chamar GetEnumerator, os itens de recursos são obtidos como <xref:System.Resources.ResXDataNode>objetos.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> Neste caso, todos os nós de recursos são devolvidos independentemente do tipo."
  example:
  - "The following example uses the GetEnumerator method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file. The example includes a `CreateResourceFile` routine that creates the necessary resource file.  \n  \n [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/m-system.resources.resxr_0_1.cs)]\n [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_0_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Um enumerador de atual <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> objeto."
  overload: System.Resources.ResXResourceReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  id: GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Fornece um enumerador de dicionário que pode obter as propriedades do tempo de criação do ficheiro de recursos atual do XML ou fluxo."
  remarks: "Recursos são guardados como pares nome/valor num ficheiro de recursos ou fluxo. Propriedades de momento da conceção, o que são chamadas metadados, são armazenadas no ficheiro de recursos ou fluxo juntamente com os recursos de dados do tempo de execução. O método GetMetadataEnumerator fornece um <xref:System.Collections.IDictionaryEnumerator>objeto que pode obter os metadados do ficheiro de recursos ou fluxo associado atual <xref:System.Resources.ResXResourceReader>objeto.</xref:System.Resources.ResXResourceReader> </xref:System.Collections.IDictionaryEnumerator> No entanto, se o <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>propriedade está definida como `true` antes de chamar GetMetadataEnumerator, não é obtidos a nenhum nó de recursos.</xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>"
  example:
  - "The following example uses the GetMetadataEnumerator method to iterate through the metadata resources in an XML resource file. This code example is part of a larger example provided for the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property.  \n  \n [!code-vb[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/visualbasic/m-system.resources.resxr_4_1.vb)]\n [!code-cpp[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/cpp/m-system.resources.resxr_4_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/csharp/m-system.resources.resxr_4_1.cs)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Um enumerador para os metadados de um recurso."
  overload: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Devolve um enumerador de atual <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> objeto. Para obter uma descrição deste membro, consulte o &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; método."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Resources.ResXResourceReader>instância é convertida para um <xref:System.Collections.IEnumerable>interface.</xref:System.Collections.IEnumerable> </xref:System.Resources.ResXResourceReader> Para enumerar os recursos num ficheiro. resx, recomendamos que chamar a <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>método e, em seguida, chamada o `MoveNext` método no devolvido <xref:System.Collections.IDictionaryEnumerator>objeto.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um enumerador que pode itere através de pares nome/valor na sequência de recursos (. resx) de XML ou cadeia associados à atual <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> objeto."
  overload: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> e opcionalmente liberta os recursos geridos. Para obter uma descrição deste membro, consulte o &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; método."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Resources.ResXResourceReader>instância é convertida para um <xref:System.IDisposable>interface.</xref:System.IDisposable> </xref:System.Resources.ResXResourceReader>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  id: UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Obtém ou define um valor que indica se <xref href=&quot;System.Resources.ResXDataNode&quot;> </xref> objetos são devolvidos para ler o ficheiro de recursos atual do XML ou fluxo."
  remarks: "Pode definir a propriedade UseResXDataNodes antes de começar a enumerar os recursos. Por predefinição, o seu valor é `false`."
  example:
  - "The following example enumerates and displays resource items in an XML file. Initially, UseResXDataNodes is set to `false` to show both data and metadata items as they occur in the resource file. The second enumeration has the UseResXDataNodes set to `true` so that resource data elements are returned as <xref:System.Resources.ResXDataNode>objects.  \n  \n [!code-vb[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/visualbasic/p-system.resources.resxr_0_1.vb)]\n [!code-cpp[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/cpp/p-system.resources.resxr_0_1.cpp)]\n [!code-cs[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/csharp/p-system.resources.resxr_0_1.cs)]  \n  \n The resource XML file used by the example contains one data node and one metadata node. To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<root>  \n  <resheader name=\"resmimetype\">  \n    <value>text/microsoft-resx</value>  \n  </resheader>  \n  <resheader name=\"version\">  \n    <value>2.0</value>  \n  </resheader>  \n  <resheader name=\"reader\">  \n    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <resheader name=\"writer\">  \n    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <data name=\"DataSample\" xml:space=\"preserve\">  \n    <value>Sample DATA value</value>  \n  </data>  \n  <metadata name=\"MetadataSample\">  \n    <value>Sample METADATA value</value>  \n  </metadata>  \n</root>  \n```"
  syntax:
    content: public bool UseResXDataNodes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se nós de dados de recursos são obtidos; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se nós de dados de recursos são ignorados."
  overload: System.Resources.ResXResourceReader.UseResXDataNodes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Na operação de definição, o enumerador para o ficheiro de recursos ou fluxo já estará aberto."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
- uid: System.ComponentModel.Design.ITypeResolutionService
  parent: System.ComponentModel.Design
  isExternal: false
  name: ITypeResolutionService
  nameWithType: ITypeResolutionService
  fullName: System.ComponentModel.Design.ITypeResolutionService
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
- uid: System.Reflection.AssemblyName[]
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName[]
  spec.csharp:
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: AssemblyName[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.BasePath
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResXResourceReader.Finalize
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
- uid: System.Resources.ResXResourceReader
  parent: System.Resources
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
- uid: System.Resources.ResXResourceReader.#ctor*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader.ResXResourceReader
- uid: System.Resources.ResXResourceReader.BasePath*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close
  nameWithType: ResXResourceReader.Close
- uid: System.Resources.ResXResourceReader.Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose
  nameWithType: ResXResourceReader.Dispose
- uid: System.Resources.ResXResourceReader.Finalize*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize
  nameWithType: ResXResourceReader.Finalize
- uid: System.Resources.ResXResourceReader.FromFileContents*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents
  nameWithType: ResXResourceReader.FromFileContents
- uid: System.Resources.ResXResourceReader.GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator
  nameWithType: ResXResourceReader.GetEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator
  nameWithType: ResXResourceReader.GetMetadataEnumerator
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ResXResourceReader.System.IDisposable.Dispose
- uid: System.Resources.ResXResourceReader.UseResXDataNodes*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
