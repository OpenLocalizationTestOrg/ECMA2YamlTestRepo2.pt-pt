### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.AggregateCacheDependency
  id: AggregateCacheDependency
  children:
  - System.Web.Caching.AggregateCacheDependency.#ctor
  - System.Web.Caching.AggregateCacheDependency.Add(System.Web.Caching.CacheDependency[])
  - System.Web.Caching.AggregateCacheDependency.DependencyDispose
  - System.Web.Caching.AggregateCacheDependency.GetFileDependencies
  - System.Web.Caching.AggregateCacheDependency.GetUniqueID
  langs:
  - csharp
  name: AggregateCacheDependency
  nameWithType: AggregateCacheDependency
  fullName: System.Web.Caching.AggregateCacheDependency
  type: Class
  summary: "Combines multiple dependencies between an item stored in an ASP.NET application&quot;s <see cref=&quot;T:System.Web.Caching.Cache&quot;></see> object and an array of <see cref=&quot;T:System.Web.Caching.CacheDependency&quot;></see> objects. This class cannot be inherited."
  remarks: "The AggregateCacheDependency class monitors a collection of dependency objects so that when any of them change, the cached item is automatically removed. The objects in the array can be <xref:System.Web.Caching.CacheDependency> objects, <xref:System.Web.Caching.SqlCacheDependency> objects, custom objects derived from <xref:System.Web.Caching.CacheDependency>, or any combination of these.       The AggregateCacheDependency class differs from the <xref:System.Web.Caching.CacheDependency> class in that it allows you to associate multiple dependencies of different types with a single cached item. For example, if you create a page that imports data from a SQL Server database table and an XML file, you can create a <xref:System.Web.Caching.SqlCacheDependency> object to represent a dependency on the database table and a <xref:System.Web.Caching.CacheDependency> to represent the dependency on the XML file. Rather than making an <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method call for each dependency, you can create an instance of the AggregateCacheDependency class with each dependency added to it. You can then use a single <xref:System.Web.Caching.Cache.Insert%2A> call to make the page dependent on the AggregateCacheDependency instance."
  example:
  - "The following code example uses the AggregateCacheDependency class to add a <xref:System.Data.DataSet>, named `XMLDataSet`, to the cache that is dependent on a text file and an XML file.  \n  \n [!code-vb[CachingSamples_AggregateCacheDependency1#1](~/add/codesnippet/VisualBasic/t-system.web.caching.agg_1.aspx)]"
  syntax:
    content: 'public sealed class AggregateCacheDependency : System.Web.Caching.CacheDependency'
  inheritance:
  - System.Object
  - System.Web.Caching.CacheDependency
  implements: []
  inheritedMembers:
  - System.Web.Caching.CacheDependency.Dispose
  - System.Web.Caching.CacheDependency.FinishInit
  - System.Web.Caching.CacheDependency.HasChanged
  - System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)
  - System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)
  - System.Web.Caching.CacheDependency.UtcLastModified
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.AggregateCacheDependency.#ctor
  id: '#ctor'
  parent: System.Web.Caching.AggregateCacheDependency
  langs:
  - csharp
  name: AggregateCacheDependency()
  nameWithType: AggregateCacheDependency.AggregateCacheDependency()
  fullName: System.Web.Caching.AggregateCacheDependency.AggregateCacheDependency()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Web.Caching.AggregateCacheDependency&quot;></see> class."
  remarks: "This is the default constructor for the <xref:System.Web.Caching.AggregateCacheDependency> class."
  example:
  - "The following code example creates an instance of the <xref:System.Web.Caching.AggregateCacheDependency> class, using the constructor that takes no arguments. Two <xref:System.Web.Caching.CacheDependency> objects are created, then added to a <xref:System.Web.Caching.CacheDependency> array, `myDepArray`. This constructor is used in conjunction with the <xref:System.Web.Caching.AggregateCacheDependency.Add%2A> method to make the item stored in the <xref:System.Web.Caching.Cache> dependent on both <xref:System.Web.Caching.CacheDependency> objects.  \n  \n [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/add/codesnippet/VisualBasic/m-system.web.caching.agg_1_1.aspx)]"
  syntax:
    content: public AggregateCacheDependency ();
    parameters: []
  overload: System.Web.Caching.AggregateCacheDependency.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.AggregateCacheDependency.Add(System.Web.Caching.CacheDependency[])
  id: Add(System.Web.Caching.CacheDependency[])
  parent: System.Web.Caching.AggregateCacheDependency
  langs:
  - csharp
  name: Add(CacheDependency[])
  nameWithType: AggregateCacheDependency.Add(CacheDependency[])
  fullName: System.Web.Caching.AggregateCacheDependency.Add(CacheDependency[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Adds an array of <see cref=&quot;T:System.Web.Caching.CacheDependency&quot;></see> objects to the <see cref=&quot;T:System.Web.Caching.AggregateCacheDependency&quot;></see> object."
  remarks: ''
  example:
  - "The following code example uses the Add method in conjunction with the <xref:System.Web.Caching.AggregateCacheDependency.%23ctor%2A> constructor to create two <xref:System.Web.Caching.CacheDependency> objects, add them to a <xref:System.Web.Caching.CacheDependency> array named `myDepArray`, and then make the item in the cache dependent on those two <xref:System.Web.Caching.CacheDependency> objects.  \n  \n [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/add/codesnippet/VisualBasic/b9451f40-30d2-4ba0-8159-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.Caching.CacheDependency[] dependencies);
    parameters:
    - id: dependencies
      type: System.Web.Caching.CacheDependency[]
      description: "The array of  objects to add."
  overload: System.Web.Caching.AggregateCacheDependency.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    dependencies is .  \n  \n \\- or -  \n  \n A  object in dependencies is ."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A  object is referenced from more than one  entry."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.AggregateCacheDependency.DependencyDispose
  id: DependencyDispose
  parent: System.Web.Caching.AggregateCacheDependency
  langs:
  - csharp
  name: DependencyDispose()
  nameWithType: AggregateCacheDependency.DependencyDispose()
  fullName: System.Web.Caching.AggregateCacheDependency.DependencyDispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  syntax:
    content: protected override void DependencyDispose ();
    parameters: []
  overload: System.Web.Caching.AggregateCacheDependency.DependencyDispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.AggregateCacheDependency.GetFileDependencies
  id: GetFileDependencies
  parent: System.Web.Caching.AggregateCacheDependency
  langs:
  - csharp
  name: GetFileDependencies()
  nameWithType: AggregateCacheDependency.GetFileDependencies()
  fullName: System.Web.Caching.AggregateCacheDependency.GetFileDependencies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Gets the file dependencies."
  syntax:
    content: public override string[] GetFileDependencies ();
    parameters: []
    return:
      type: System.String[]
      description: "To be added."
  overload: System.Web.Caching.AggregateCacheDependency.GetFileDependencies*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.AggregateCacheDependency.GetUniqueID
  id: GetUniqueID
  parent: System.Web.Caching.AggregateCacheDependency
  langs:
  - csharp
  name: GetUniqueID()
  nameWithType: AggregateCacheDependency.GetUniqueID()
  fullName: System.Web.Caching.AggregateCacheDependency.GetUniqueID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Retrieves a unique identifier for the <see cref=&quot;T:System.Web.Caching.AggregateCacheDependency&quot;></see> object."
  remarks: "This method assigns a unique identifier to each dependency in the array and returns each of them. The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency."
  example:
  - "The following code example uses the GetUniqueID method to create and display an identifier for an instance of the <xref:System.Web.Caching.AggregateCacheDependency> class, named `aggDep`, once it is created and populated.  \n  \n [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/add/codesnippet/VisualBasic/m-system.web.caching.agg_0_1.aspx)]"
  syntax:
    content: public override string GetUniqueID ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Caching.AggregateCacheDependency.GetUniqueID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Web.Caching.CacheDependency
  isExternal: false
  name: System.Web.Caching.CacheDependency
- uid: System.Web.Caching.AggregateCacheDependency.#ctor
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: AggregateCacheDependency()
  nameWithType: AggregateCacheDependency.AggregateCacheDependency()
  fullName: System.Web.Caching.AggregateCacheDependency.AggregateCacheDependency()
- uid: System.Web.Caching.AggregateCacheDependency.Add(System.Web.Caching.CacheDependency[])
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: Add(CacheDependency[])
  nameWithType: AggregateCacheDependency.Add(CacheDependency[])
  fullName: System.Web.Caching.AggregateCacheDependency.Add(CacheDependency[])
- uid: System.Web.Caching.CacheDependency[]
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency[]
  spec.csharp:
  - uid: System.Web.Caching.CacheDependency
    name: CacheDependency
    nameWithType: CacheDependency
    fullName: CacheDependency[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Caching.AggregateCacheDependency.DependencyDispose
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: DependencyDispose()
  nameWithType: AggregateCacheDependency.DependencyDispose()
  fullName: System.Web.Caching.AggregateCacheDependency.DependencyDispose()
- uid: System.Web.Caching.AggregateCacheDependency.GetFileDependencies
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: GetFileDependencies()
  nameWithType: AggregateCacheDependency.GetFileDependencies()
  fullName: System.Web.Caching.AggregateCacheDependency.GetFileDependencies()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Caching.AggregateCacheDependency.GetUniqueID
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: GetUniqueID()
  nameWithType: AggregateCacheDependency.GetUniqueID()
  fullName: System.Web.Caching.AggregateCacheDependency.GetUniqueID()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Caching.AggregateCacheDependency.#ctor*
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: AggregateCacheDependency
  nameWithType: AggregateCacheDependency.AggregateCacheDependency
- uid: System.Web.Caching.AggregateCacheDependency.Add*
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: Add
  nameWithType: AggregateCacheDependency.Add
- uid: System.Web.Caching.AggregateCacheDependency.DependencyDispose*
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: DependencyDispose
  nameWithType: AggregateCacheDependency.DependencyDispose
- uid: System.Web.Caching.AggregateCacheDependency.GetFileDependencies*
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: GetFileDependencies
  nameWithType: AggregateCacheDependency.GetFileDependencies
- uid: System.Web.Caching.AggregateCacheDependency.GetUniqueID*
  parent: System.Web.Caching.AggregateCacheDependency
  isExternal: false
  name: GetUniqueID
  nameWithType: AggregateCacheDependency.GetUniqueID
