### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbProviderServices
  id: DbProviderServices
  children:
  - System.Data.Common.DbProviderServices.#ctor
  - System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)
  - System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)
  - System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  - System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  - System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)
  - System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  - System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)
  - System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)
  - System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  - System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)
  - System.Data.Common.DbProviderServices.GetProviderManifest(System.String)
  - System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)
  - System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)
  - System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  - System.Data.Common.DbProviderServices.GetSpatialServices(System.String)
  - System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)
  langs:
  - csharp
  name: DbProviderServices
  nameWithType: DbProviderServices
  fullName: System.Data.Common.DbProviderServices
  type: Class
  summary: "The factory for building command definitions; use the type of this object as the argument to the IServiceProvider.GetService method on the provider factory;"
  remarks: "No content here will be updated; please do not add material here."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public abstract class DbProviderServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DbProviderServices()
  nameWithType: DbProviderServices.DbProviderServices()
  fullName: System.Data.Common.DbProviderServices.DbProviderServices()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Common.DbProviderServices&quot;></xref> class."
  syntax:
    content: protected DbProviderServices ();
    parameters: []
  overload: System.Data.Common.DbProviderServices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)
  id: CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: CreateCommandDefinition(DbCommandTree)
  nameWithType: DbProviderServices.CreateCommandDefinition(DbCommandTree)
  fullName: System.Data.Common.DbProviderServices.CreateCommandDefinition(DbCommandTree)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Creates command definition from command tree."
  syntax:
    content: public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.CommandTrees.DbCommandTree commandTree);
    parameters:
    - id: commandTree
      type: System.Data.Common.CommandTrees.DbCommandTree
      description: "The command tree."
    return:
      type: System.Data.Common.DbCommandDefinition
      description: "The created command definition."
  overload: System.Data.Common.DbProviderServices.CreateCommandDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)
  id: CreateCommandDefinition(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: CreateCommandDefinition(DbCommand)
  nameWithType: DbProviderServices.CreateCommandDefinition(DbCommand)
  fullName: System.Data.Common.DbProviderServices.CreateCommandDefinition(DbCommand)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Creates a command definition that uses a specified command."
  syntax:
    content: public virtual System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbCommand prototype);
    parameters:
    - id: prototype
      type: System.Data.Common.DbCommand
      description: "The command used to create command definition."
    return:
      type: System.Data.Common.DbCommandDefinition
      description: "The created command definition that uses a specified command."
  overload: System.Data.Common.DbProviderServices.CreateCommandDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  id: CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: CreateCommandDefinition(DbProviderManifest,DbCommandTree)
  nameWithType: DbProviderServices.CreateCommandDefinition(DbProviderManifest,DbCommandTree)
  fullName: System.Data.Common.DbProviderServices.CreateCommandDefinition(DbProviderManifest,DbCommandTree)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Creates command definition from specified manifest andcommand tree."
  syntax:
    content: public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);
    parameters:
    - id: providerManifest
      type: System.Data.Common.DbProviderManifest
      description: "The manifest."
    - id: commandTree
      type: System.Data.Common.CommandTrees.DbCommandTree
      description: "The command tree."
    return:
      type: System.Data.Common.DbCommandDefinition
      description: "The created command definition."
  overload: System.Data.Common.DbProviderServices.CreateCommandDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  id: CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: CreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.CreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.CreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Creates a database indicated by connection and creates schema objects."
  syntax:
    content: public void CreateDatabase (System.Data.Common.DbConnection connection, Nullable<int> commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to a non-existent database that needs to be created and populated with the store objects indicated with the storeItemCollection parameter."
    - id: commandTimeout
      type: System.Nullable{System.Int32}
      description: "Execution timeout for any commands needed to create the database."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The collection of all store items based on which the script should be created."
  overload: System.Data.Common.DbProviderServices.CreateDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  id: CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: CreateDatabaseScript(String,StoreItemCollection)
  nameWithType: DbProviderServices.CreateDatabaseScript(String,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.CreateDatabaseScript(String,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Generates a data definition langauge (DDL script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token."
  syntax:
    content: public string CreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: providerManifestToken
      type: System.String
      description: "The provider manifest token identifying the target version."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The structure of the database."
    return:
      type: System.String
      description: "A DDL script that creates schema objects based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token."
  overload: System.Data.Common.DbProviderServices.CreateDatabaseScript*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  id: CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: CreateDbCommandDefinition(DbProviderManifest,DbCommandTree)
  nameWithType: DbProviderServices.CreateDbCommandDefinition(DbProviderManifest,DbCommandTree)
  fullName: System.Data.Common.DbProviderServices.CreateDbCommandDefinition(DbProviderManifest,DbCommandTree)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Creates a command definition object for the specified provider manifest and command tree."
  syntax:
    content: protected abstract System.Data.Common.DbCommandDefinition CreateDbCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);
    parameters:
    - id: providerManifest
      type: System.Data.Common.DbProviderManifest
      description: "Provider manifest previously retrieved from the store provider."
    - id: commandTree
      type: System.Data.Common.CommandTrees.DbCommandTree
      description: "Command tree for the statement."
    return:
      type: System.Data.Common.DbCommandDefinition
      description: "An executable command definition object."
  overload: System.Data.Common.DbProviderServices.CreateDbCommandDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  id: DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created."
  syntax:
    content: public bool DatabaseExists (System.Data.Common.DbConnection connection, Nullable<int> commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to a database whose existence is verified by this method."
    - id: commandTimeout
      type: System.Nullable{System.Int32}
      description: "Execution timeout for any commands needed to determine the existence of the database."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The collection of all store items contained in the database whose existence is determined by this method."
    return:
      type: System.Boolean
      description: "True if the provider can deduce the database only based on the connection."
  overload: System.Data.Common.DbProviderServices.DatabaseExists*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  id: DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DbCreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DbCreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbCreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Creates a database indicated by connection and creates schema objects (tables, primary keys, foreign keys) based on the contents of a StoreItemCollection."
  syntax:
    content: protected virtual void DbCreateDatabase (System.Data.Common.DbConnection connection, Nullable<int> commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to a non-existent database that needs to be created and populated with the store objects indicated with the storeItemCollection parameter."
    - id: commandTimeout
      type: System.Nullable{System.Int32}
      description: "Execution timeout for any commands needed to create the database."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The collection of all store items based on which the script should be created."
  overload: System.Data.Common.DbProviderServices.DbCreateDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  id: DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DbCreateDatabaseScript(String,StoreItemCollection)
  nameWithType: DbProviderServices.DbCreateDatabaseScript(String,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbCreateDatabaseScript(String,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Generates a data definition langauge (DDL script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token."
  syntax:
    content: protected virtual string DbCreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: providerManifestToken
      type: System.String
      description: "The provider manifest token identifying the target version."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The structure of the database."
    return:
      type: System.String
      description: "A DDL script that creates schema objects based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token."
  overload: System.Data.Common.DbProviderServices.DbCreateDatabaseScript*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  id: DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DbDatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DbDatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbDatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created."
  syntax:
    content: protected virtual bool DbDatabaseExists (System.Data.Common.DbConnection connection, Nullable<int> commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to a database whose existence is verified by this method."
    - id: commandTimeout
      type: System.Nullable{System.Int32}
      description: "Execution timeout for any commands needed to determine the existence of the database."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The structure of the database whose existence is determined by this method."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the database indicated by the connection and the storeItemCollection parameter exists; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Common.DbProviderServices.DbDatabaseExists*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  id: DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DbDeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DbDeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbDeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Deletes all store objects specified in the store item collection from the database and the database itself."
  syntax:
    content: protected virtual void DbDeleteDatabase (System.Data.Common.DbConnection connection, Nullable<int> commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to an existing database that needs to be deleted."
    - id: commandTimeout
      type: System.Nullable{System.Int32}
      description: "Execution timeout for any commands needed to delete the database."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The structure of the database to be deleted."
  overload: System.Data.Common.DbProviderServices.DbDeleteDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)
  id: DbGetSpatialServices(System.String)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DbGetSpatialServices(String)
  nameWithType: DbProviderServices.DbGetSpatialServices(String)
  fullName: System.Data.Common.DbProviderServices.DbGetSpatialServices(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Gets the spatial services for the <xref href=&quot;System.Data.Common.DbProviderServices&quot;></xref>."
  syntax:
    content: protected virtual System.Data.Spatial.DbSpatialServices DbGetSpatialServices (string manifestToken);
    parameters:
    - id: manifestToken
      type: System.String
      description: "The token information associated with the provider manifest."
    return:
      type: System.Data.Spatial.DbSpatialServices
      description: "The spatial services."
  overload: System.Data.Common.DbProviderServices.DbGetSpatialServices*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  id: DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: DeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Deletes all store objects specified in the store item collection from the database and the database itself."
  syntax:
    content: public void DeleteDatabase (System.Data.Common.DbConnection connection, Nullable<int> commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to an existing database that needs to be deleted."
    - id: commandTimeout
      type: System.Nullable{System.Int32}
      description: "Execution timeout for any commands needed to delete the database."
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "The structure of the database to be deleted."
  overload: System.Data.Common.DbProviderServices.DeleteDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)
  id: GetDbProviderManifest(System.String)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetDbProviderManifest(String)
  nameWithType: DbProviderServices.GetDbProviderManifest(String)
  fullName: System.Data.Common.DbProviderServices.GetDbProviderManifest(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "When overridden in a derived class, returns an instance of a class that derives from the DbProviderManifest."
  syntax:
    content: protected abstract System.Data.Common.DbProviderManifest GetDbProviderManifest (string manifestToken);
    parameters:
    - id: manifestToken
      type: System.String
      description: "The token information associated with the provider manifest."
    return:
      type: System.Data.Common.DbProviderManifest
      description: "A DbProviderManifest object that represents the provider manifest."
  overload: System.Data.Common.DbProviderServices.GetDbProviderManifest*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)
  id: GetDbProviderManifestToken(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetDbProviderManifestToken(DbConnection)
  nameWithType: DbProviderServices.GetDbProviderManifestToken(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetDbProviderManifestToken(DbConnection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Returns provider manifest token given a connection."
  syntax:
    content: protected abstract string GetDbProviderManifestToken (System.Data.Common.DbConnection connection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to provider."
    return:
      type: System.String
      description: "The provider manifest token for the specified connection."
  overload: System.Data.Common.DbProviderServices.GetDbProviderManifestToken*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  id: GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetDbSpatialDataReader(DbDataReader,String)
  nameWithType: DbProviderServices.GetDbSpatialDataReader(DbDataReader,String)
  fullName: System.Data.Common.DbProviderServices.GetDbSpatialDataReader(DbDataReader,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Gets the spatial data reader for the <xref href=&quot;System.Data.Common.DbProviderServices&quot;></xref>."
  syntax:
    content: protected virtual System.Data.Spatial.DbSpatialDataReader GetDbSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);
    parameters:
    - id: fromReader
      type: System.Data.Common.DbDataReader
      description: "The reader where the spatial data came from."
    - id: manifestToken
      type: System.String
      description: "The token information associated with the provider manifest."
    return:
      type: System.Data.Spatial.DbSpatialDataReader
      description: "The spatial data reader."
  overload: System.Data.Common.DbProviderServices.GetDbSpatialDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)
  id: GetProviderFactory(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetProviderFactory(DbConnection)
  nameWithType: DbProviderServices.GetProviderFactory(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetProviderFactory(DbConnection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Retrieves the DbProviderFactory based on the specified DbConnection."
  syntax:
    content: public static System.Data.Common.DbProviderFactory GetProviderFactory (System.Data.Common.DbConnection connection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "The connection to use."
    return:
      type: System.Data.Common.DbProviderFactory
      description: "The retrieved DbProviderFactory."
  overload: System.Data.Common.DbProviderServices.GetProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetProviderManifest(System.String)
  id: GetProviderManifest(System.String)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetProviderManifest(String)
  nameWithType: DbProviderServices.GetProviderManifest(String)
  fullName: System.Data.Common.DbProviderServices.GetProviderManifest(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Returns the provider manifest by using the specified version information."
  syntax:
    content: public System.Data.Common.DbProviderManifest GetProviderManifest (string manifestToken);
    parameters:
    - id: manifestToken
      type: System.String
      description: "The token information associated with the provider manifest."
    return:
      type: System.Data.Common.DbProviderManifest
      description: "The provider manifest by using the specified version information."
  overload: System.Data.Common.DbProviderServices.GetProviderManifest*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)
  id: GetProviderManifestToken(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetProviderManifestToken(DbConnection)
  nameWithType: DbProviderServices.GetProviderManifestToken(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetProviderManifestToken(DbConnection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Returns provider manifest token."
  syntax:
    content: public string GetProviderManifestToken (System.Data.Common.DbConnection connection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to provider."
    return:
      type: System.String
      description: "The provider manifest token."
  overload: System.Data.Common.DbProviderServices.GetProviderManifestToken*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)
  id: GetProviderServices(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetProviderServices(DbConnection)
  nameWithType: DbProviderServices.GetProviderServices(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetProviderServices(DbConnection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Returns providers given a connection."
  syntax:
    content: public static System.Data.Common.DbProviderServices GetProviderServices (System.Data.Common.DbConnection connection);
    parameters:
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Connection to provider."
    return:
      type: System.Data.Common.DbProviderServices
      description: "The <xref href=&quot;System.Data.Common.DbProviderServices&quot;></xref> instanced based on the specified connection."
  overload: System.Data.Common.DbProviderServices.GetProviderServices*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  id: GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetSpatialDataReader(DbDataReader,String)
  nameWithType: DbProviderServices.GetSpatialDataReader(DbDataReader,String)
  fullName: System.Data.Common.DbProviderServices.GetSpatialDataReader(DbDataReader,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Gets the spatial data reader for the <xref href=&quot;System.Data.Common.DbProviderServices&quot;></xref>."
  syntax:
    content: public System.Data.Spatial.DbSpatialDataReader GetSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);
    parameters:
    - id: fromReader
      type: System.Data.Common.DbDataReader
      description: "The reader where the spatial data came from."
    - id: manifestToken
      type: System.String
      description: "The token information associated with the provider manifest."
    return:
      type: System.Data.Spatial.DbSpatialDataReader
      description: "The spatial data reader."
  overload: System.Data.Common.DbProviderServices.GetSpatialDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.GetSpatialServices(System.String)
  id: GetSpatialServices(System.String)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: GetSpatialServices(String)
  nameWithType: DbProviderServices.GetSpatialServices(String)
  fullName: System.Data.Common.DbProviderServices.GetSpatialServices(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Gets the spatial services for the <xref href=&quot;System.Data.Common.DbProviderServices&quot;></xref>."
  syntax:
    content: public System.Data.Spatial.DbSpatialServices GetSpatialServices (string manifestToken);
    parameters:
    - id: manifestToken
      type: System.String
      description: "The token information associated with the provider manifest."
    return:
      type: System.Data.Spatial.DbSpatialServices
      description: "The spatial services."
  overload: System.Data.Common.DbProviderServices.GetSpatialServices*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)
  id: SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)
  parent: System.Data.Common.DbProviderServices
  langs:
  - csharp
  name: SetDbParameterValue(DbParameter,TypeUsage,Object)
  nameWithType: DbProviderServices.SetDbParameterValue(DbParameter,TypeUsage,Object)
  fullName: System.Data.Common.DbProviderServices.SetDbParameterValue(DbParameter,TypeUsage,Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Sets the parameter values for the <xref href=&quot;System.Data.Common.DbProviderServices&quot;></xref>."
  syntax:
    content: protected virtual void SetDbParameterValue (System.Data.Common.DbParameter parameter, System.Data.Metadata.Edm.TypeUsage parameterType, object value);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "The parameter."
    - id: parameterType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "The type of the parameter."
    - id: value
      type: System.Object
      description: "The value of the parameter."
  overload: System.Data.Common.DbProviderServices.SetDbParameterValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.DbProviderServices.#ctor
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbProviderServices()
  nameWithType: DbProviderServices.DbProviderServices()
  fullName: System.Data.Common.DbProviderServices.DbProviderServices()
- uid: System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateCommandDefinition(DbCommandTree)
  nameWithType: DbProviderServices.CreateCommandDefinition(DbCommandTree)
  fullName: System.Data.Common.DbProviderServices.CreateCommandDefinition(DbCommandTree)
- uid: System.Data.Common.DbCommandDefinition
  parent: System.Data.Common
  isExternal: false
  name: DbCommandDefinition
  nameWithType: DbCommandDefinition
  fullName: System.Data.Common.DbCommandDefinition
- uid: System.Data.Common.CommandTrees.DbCommandTree
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCommandTree
  nameWithType: DbCommandTree
  fullName: System.Data.Common.CommandTrees.DbCommandTree
- uid: System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateCommandDefinition(DbCommand)
  nameWithType: DbProviderServices.CreateCommandDefinition(DbCommand)
  fullName: System.Data.Common.DbProviderServices.CreateCommandDefinition(DbCommand)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateCommandDefinition(DbProviderManifest,DbCommandTree)
  nameWithType: DbProviderServices.CreateCommandDefinition(DbProviderManifest,DbCommandTree)
  fullName: System.Data.Common.DbProviderServices.CreateCommandDefinition(DbProviderManifest,DbCommandTree)
- uid: System.Data.Common.DbProviderManifest
  parent: System.Data.Common
  isExternal: false
  name: DbProviderManifest
  nameWithType: DbProviderManifest
  fullName: System.Data.Common.DbProviderManifest
- uid: System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.CreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.CreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.StoreItemCollection
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: StoreItemCollection
  nameWithType: StoreItemCollection
  fullName: System.Data.Metadata.Edm.StoreItemCollection
- uid: System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateDatabaseScript(String,StoreItemCollection)
  nameWithType: DbProviderServices.CreateDatabaseScript(String,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.CreateDatabaseScript(String,StoreItemCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateDbCommandDefinition(DbProviderManifest,DbCommandTree)
  nameWithType: DbProviderServices.CreateDbCommandDefinition(DbProviderManifest,DbCommandTree)
  fullName: System.Data.Common.DbProviderServices.CreateDbCommandDefinition(DbProviderManifest,DbCommandTree)
- uid: System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbCreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DbCreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbCreateDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
- uid: System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbCreateDatabaseScript(String,StoreItemCollection)
  nameWithType: DbProviderServices.DbCreateDatabaseScript(String,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbCreateDatabaseScript(String,StoreItemCollection)
- uid: System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbDatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DbDatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbDatabaseExists(DbConnection,Nullable<Int32>,StoreItemCollection)
- uid: System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbDeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DbDeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DbDeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
- uid: System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbGetSpatialServices(String)
  nameWithType: DbProviderServices.DbGetSpatialServices(String)
  fullName: System.Data.Common.DbProviderServices.DbGetSpatialServices(String)
- uid: System.Data.Spatial.DbSpatialServices
  parent: System.Data.Spatial
  isExternal: false
  name: DbSpatialServices
  nameWithType: DbSpatialServices
  fullName: System.Data.Spatial.DbSpatialServices
- uid: System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  nameWithType: DbProviderServices.DeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
  fullName: System.Data.Common.DbProviderServices.DeleteDatabase(DbConnection,Nullable<Int32>,StoreItemCollection)
- uid: System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetDbProviderManifest(String)
  nameWithType: DbProviderServices.GetDbProviderManifest(String)
  fullName: System.Data.Common.DbProviderServices.GetDbProviderManifest(String)
- uid: System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetDbProviderManifestToken(DbConnection)
  nameWithType: DbProviderServices.GetDbProviderManifestToken(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetDbProviderManifestToken(DbConnection)
- uid: System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetDbSpatialDataReader(DbDataReader,String)
  nameWithType: DbProviderServices.GetDbSpatialDataReader(DbDataReader,String)
  fullName: System.Data.Common.DbProviderServices.GetDbSpatialDataReader(DbDataReader,String)
- uid: System.Data.Spatial.DbSpatialDataReader
  parent: System.Data.Spatial
  isExternal: false
  name: DbSpatialDataReader
  nameWithType: DbSpatialDataReader
  fullName: System.Data.Spatial.DbSpatialDataReader
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderFactory(DbConnection)
  nameWithType: DbProviderServices.GetProviderFactory(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetProviderFactory(DbConnection)
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.Common.DbProviderServices.GetProviderManifest(System.String)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderManifest(String)
  nameWithType: DbProviderServices.GetProviderManifest(String)
  fullName: System.Data.Common.DbProviderServices.GetProviderManifest(String)
- uid: System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderManifestToken(DbConnection)
  nameWithType: DbProviderServices.GetProviderManifestToken(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetProviderManifestToken(DbConnection)
- uid: System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderServices(DbConnection)
  nameWithType: DbProviderServices.GetProviderServices(DbConnection)
  fullName: System.Data.Common.DbProviderServices.GetProviderServices(DbConnection)
- uid: System.Data.Common.DbProviderServices
  parent: System.Data.Common
  isExternal: false
  name: DbProviderServices
  nameWithType: DbProviderServices
  fullName: System.Data.Common.DbProviderServices
- uid: System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetSpatialDataReader(DbDataReader,String)
  nameWithType: DbProviderServices.GetSpatialDataReader(DbDataReader,String)
  fullName: System.Data.Common.DbProviderServices.GetSpatialDataReader(DbDataReader,String)
- uid: System.Data.Common.DbProviderServices.GetSpatialServices(System.String)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetSpatialServices(String)
  nameWithType: DbProviderServices.GetSpatialServices(String)
  fullName: System.Data.Common.DbProviderServices.GetSpatialServices(String)
- uid: System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: SetDbParameterValue(DbParameter,TypeUsage,Object)
  nameWithType: DbProviderServices.SetDbParameterValue(DbParameter,TypeUsage,Object)
  fullName: System.Data.Common.DbProviderServices.SetDbParameterValue(DbParameter,TypeUsage,Object)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.DbProviderServices.#ctor*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbProviderServices
  nameWithType: DbProviderServices.DbProviderServices
- uid: System.Data.Common.DbProviderServices.CreateCommandDefinition*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateCommandDefinition
  nameWithType: DbProviderServices.CreateCommandDefinition
- uid: System.Data.Common.DbProviderServices.CreateDatabase*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateDatabase
  nameWithType: DbProviderServices.CreateDatabase
- uid: System.Data.Common.DbProviderServices.CreateDatabaseScript*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateDatabaseScript
  nameWithType: DbProviderServices.CreateDatabaseScript
- uid: System.Data.Common.DbProviderServices.CreateDbCommandDefinition*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: CreateDbCommandDefinition
  nameWithType: DbProviderServices.CreateDbCommandDefinition
- uid: System.Data.Common.DbProviderServices.DatabaseExists*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DatabaseExists
  nameWithType: DbProviderServices.DatabaseExists
- uid: System.Data.Common.DbProviderServices.DbCreateDatabase*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbCreateDatabase
  nameWithType: DbProviderServices.DbCreateDatabase
- uid: System.Data.Common.DbProviderServices.DbCreateDatabaseScript*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbCreateDatabaseScript
  nameWithType: DbProviderServices.DbCreateDatabaseScript
- uid: System.Data.Common.DbProviderServices.DbDatabaseExists*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbDatabaseExists
  nameWithType: DbProviderServices.DbDatabaseExists
- uid: System.Data.Common.DbProviderServices.DbDeleteDatabase*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbDeleteDatabase
  nameWithType: DbProviderServices.DbDeleteDatabase
- uid: System.Data.Common.DbProviderServices.DbGetSpatialServices*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DbGetSpatialServices
  nameWithType: DbProviderServices.DbGetSpatialServices
- uid: System.Data.Common.DbProviderServices.DeleteDatabase*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: DeleteDatabase
  nameWithType: DbProviderServices.DeleteDatabase
- uid: System.Data.Common.DbProviderServices.GetDbProviderManifest*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetDbProviderManifest
  nameWithType: DbProviderServices.GetDbProviderManifest
- uid: System.Data.Common.DbProviderServices.GetDbProviderManifestToken*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetDbProviderManifestToken
  nameWithType: DbProviderServices.GetDbProviderManifestToken
- uid: System.Data.Common.DbProviderServices.GetDbSpatialDataReader*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetDbSpatialDataReader
  nameWithType: DbProviderServices.GetDbSpatialDataReader
- uid: System.Data.Common.DbProviderServices.GetProviderFactory*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderFactory
  nameWithType: DbProviderServices.GetProviderFactory
- uid: System.Data.Common.DbProviderServices.GetProviderManifest*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderManifest
  nameWithType: DbProviderServices.GetProviderManifest
- uid: System.Data.Common.DbProviderServices.GetProviderManifestToken*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderManifestToken
  nameWithType: DbProviderServices.GetProviderManifestToken
- uid: System.Data.Common.DbProviderServices.GetProviderServices*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetProviderServices
  nameWithType: DbProviderServices.GetProviderServices
- uid: System.Data.Common.DbProviderServices.GetSpatialDataReader*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetSpatialDataReader
  nameWithType: DbProviderServices.GetSpatialDataReader
- uid: System.Data.Common.DbProviderServices.GetSpatialServices*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: GetSpatialServices
  nameWithType: DbProviderServices.GetSpatialServices
- uid: System.Data.Common.DbProviderServices.SetDbParameterValue*
  parent: System.Data.Common.DbProviderServices
  isExternal: false
  name: SetDbParameterValue
  nameWithType: DbProviderServices.SetDbParameterValue
