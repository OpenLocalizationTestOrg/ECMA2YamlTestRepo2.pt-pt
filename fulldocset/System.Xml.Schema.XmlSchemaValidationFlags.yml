### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  id: XmlSchemaValidationFlags
  children:
  - System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  - System.Xml.Schema.XmlSchemaValidationFlags.None
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  - System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  langs:
  - csharp
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
  type: Enum
  summary: "Especifica as opções de validação de esquema utilizadas pelo <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> e <xref:System.Xml.XmlReader>classes.</xref:System.Xml.XmlReader>"
  remarks: "Seguem-se notas a ter em consideração quando utilizar XmlSchemaValidationFlags valores com <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>      -XmlSchemaValidationFlags valores definem opções de validação utilizadas por uma validação de esquema <xref:System.Xml.XmlReader>para efetuar a validação de XML com um esquema.</xref:System.Xml.XmlReader> Valores de XmlSchemaValidationFlags para uma validação <xref:System.Xml.XmlReader>especificadas utilizando o <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>propriedade.</xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> </xref:System.Xml.XmlReader>       Seguem-se notas a ter em consideração ao utilizar o valor de AllowXmlAttributes.      1.  Quando um esquema não importar o espaço de nomes Xml.          1.  Se AllowXmlAttributes estiver definido como `true` (predefinição) e o documento de instância contém atributos Xml, o motor de validação irá carregar um instantâneo do esquema de espaço de nomes de Xml predefinido e utilizá-lo para validação. Se os atributos de Xml utilizados no documento da instância não forem encontrados no esquema predefinido, o documento não será validado.          2.  Se AllowXmlAttributes estiver definido como `false` e o documento de instância contém atributos Xml, o motor de validação irá reportar um erro.      2.  Quando um esquema importa o espaço de nomes Xml sem uma localização.          1.  Se AllowXmlAttributes estiver definido como `true` (predefinição) e o documento de instância contém atributos Xml, o motor de validação irá utilizar o esquema de espaço de nomes de Xml predefinido para a validação. Se os atributos de Xml utilizados no documento da instância não forem encontrados no esquema predefinido, o documento não será validado.          2.  Se AllowXmlAttributes estiver definido como `false` e o documento de instância contém atributos Xml que não são explicitamente permitidos pelo esquema, o motor de validação irá reportar um erro.          3.  Se AllowXmlAttributes estiver definido como `false` e o documento de instância contém atributos Xml explicitamente permitidos pelo esquema, o motor de validação irá validar os atributos da mesma forma que valida outros atributos utilizando o esquema de espaço de nomes de Xml predefinido.      3.  Quando um esquema importa um esquema de espaço de nomes Xml personalizado com um schemaLocation personalizado.          1.  Se AllowXmlAttributes estiver definido como `true` (predefinição) e o documento de instância contém atributos Xml, o motor de validação irá utilizar o esquema de espaço de nomes Xml personalizado para a validação. Se os atributos de Xml utilizados no documento da instância não forem encontrados no esquema especificado, o documento não será validado.          2.  Se AllowXmlAttributes estiver definido como `false` e o documento de instância contém atributos Xml que não são explicitamente permitidos pelo esquema, o motor de validação irá reportar um erro.          3.  Se AllowXmlAttributes estiver definido como `false` e o documento de instância contém atributos Xml explicitamente permitidos pelo esquema, o motor de validação irá validar os atributos da mesma forma que valida outros atributos utilizando o esquema de espaço de nomes Xml especificado.      4.  Quando um esquema define um xml:* atributos com utilização = &quot;necessária&quot;.          1.  O seguinte procedimento aplica-se quando AllowXmlAttributes está definida como `true` e `false`. Necessário xml:* atributos devem ser tratados como outros atributos e validadas utilizando o esquema de espaço de nomes Xml especificado.      5.  Quando um esquema define um xml:* atributos com utilização = &quot;prohibited&quot;.          1.  O seguinte procedimento aplica-se quando AllowXmlAttributes está definida como `true` e `false`. Se um documento de instância contém xml:* os atributos que são explicitamente proibido pelo esquema, o motor de validação irá reportar um erro.      6.  Quando um esquema Especifica um caráter universal do atributo.          1.  Se um documento de instância contém um atributo de Xml e o esquema Especifica um caráter universal do atributo com processContents omitido ou definido como &quot;strict&quot;, o motor de validação irá utilizar o esquema de espaço de nomes Xml presente no <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Não se for especificada nenhum esquema de espaço de nomes Xml, o motor de validação irão comportar-se da seguinte forma.          2.  Se AllowXmlAttributes estiver definido como `true`, o motor de validação irá utilizar o esquema de espaço de nomes de Xml predefinido para efetuar a validação.          3.  Se AllowXmlAttributes estiver definido como `false`, o motor de validação irá reportar um erro.          4.  Se um documento de instância contém um atributo de Xml e o esquema Especifica um caráter universal do atributo com processContents definido como &quot;Ignorar&quot;, o motor de validação irá ignorar a validação de atributo.          5.  Se um documento de instância contém um atributo de Xml e o esquema Especifica um caráter universal do atributo com processContents definido como &quot;lax&quot;, o motor de validação irá utilizar o esquema de espaço de nomes Xml presente no <xref:System.Xml.Schema.XmlSchemaSet>.</xref:System.Xml.Schema.XmlSchemaSet> Não se for especificada nenhum esquema de espaço de nomes Xml, o motor de validação irão comportar-se da seguinte forma.          6.  Se AllowXmlAttributes estiver definido como `true`, o motor de validação irá utilizar o esquema de espaço de nomes de Xml predefinido para efetuar a validação.          7.  Se AllowXmlAttributes estiver definido como `false`, não será possível efetuar a validação dos atributos.      7.  Ao validar tipos simples.          1.  Quando AllowXmlAttributes está definida como `true` (predefinição), atributos Xml serão permitidos em elementos de tipos simples."
  example:
  - For an example of the XmlSchemaValidationFlags class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.
  syntax:
    content: >-
      [System.Flags]

      public enum XmlSchemaValidationFlags
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  id: AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Permitir xml: *, mesmo que não estão definidos no esquema de atributos. Os atributos serão validados com base no respetivo tipo de dados."
  syntax:
    content: AllowXmlAttributes
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  id: None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Não processa as restrições de identidade, esquemas de inline, sugestões de localização de esquema ou avisos de validação de esquema de relatório."
  syntax:
    content: None
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  id: ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Processar as restrições de identidade (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encontrados durante a validação."
  syntax:
    content: ProcessIdentityConstraints
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  id: ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Esquemas de inline de processo encontradas durante a validação."
  syntax:
    content: ProcessInlineSchema
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  id: ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Processar as sugestões de localização do esquema (`xsi:schemaLocation`, `xsi:noNamespaceSchemaLocation`) encontrados durante a validação."
  syntax:
    content: ProcessSchemaLocation
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  id: ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Avisos de validação do esquema de relatório encontrados durante a validação."
  syntax:
    content: ReportValidationWarnings
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
