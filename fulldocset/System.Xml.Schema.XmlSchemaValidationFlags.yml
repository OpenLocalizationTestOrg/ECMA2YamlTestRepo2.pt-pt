### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  id: XmlSchemaValidationFlags
  children:
  - System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  - System.Xml.Schema.XmlSchemaValidationFlags.None
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  - System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  - System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  langs:
  - csharp
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
  type: Enum
  summary: "Specifies schema validation options used by the <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref> and <xref:System.Xml.XmlReader> classes."
  remarks: "The following are notes to consider when using XmlSchemaValidationFlags values with the <xref:System.Xml.XmlReader>.      -   XmlSchemaValidationFlags values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema. XmlSchemaValidationFlags values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property.       The following are notes to consider when using the AllowXmlAttributes value.      1.  When a schema doesnâ€™t import the Xml namespace.          1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation. If Xml attributes used in the instance document are not found in the default schema, the document will not validate.          2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error.      2.  When a schema imports the Xml namespace without a location.          1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation. If Xml attributes used in the instance document are not found in the default schema, the document will not validate.          2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.          3.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.      3.  When a schema imports a custom Xml namespace schema with a custom schemaLocation.          1.  If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation. If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.          2.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.          3.  If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.      4.  When a schema defines an xml:* attribute with use=&quot;required&quot;.          1.  The following applies when AllowXmlAttributes is set to `true` and `false`. Required xml:* attributes should be treated as other attributes and validated using the specified Xml namespace schema.      5.  When a schema defines an xml:* attribute with use=&quot;prohibited&quot;.          1.  The following applies when AllowXmlAttributes is set to `true` and `false`. If an instance document contains xml:* attributes that are explicitly prohibited by the schema, the validation engine will report an error.      6.  When a schema specifies an attribute wildcard.          1.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to &quot;strict&quot;, the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>. If no Xml namespace schema is specified, the validation engine will behave as follows.          2.  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.          3.  If AllowXmlAttributes is set to `false`, the validation engine will report an error.          4.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to &quot;skip&quot;, the validation engine will skip attribute validation.          5.  If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to &quot;lax&quot;, the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>. If no Xml namespace schema is specified, the validation engine will behave as follows.          6.  If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.          7.  If AllowXmlAttributes is set to `false`, attribute validation will not be performed.      7.  When validating simple types.          1.  When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types."
  example:
  - For an example of the XmlSchemaValidationFlags class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.
  syntax:
    content: >-
      [System.Flags]

      public enum XmlSchemaValidationFlags
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  id: AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Allow xml:* attributes even if they are not defined in the schema. The attributes will be validated based on their data type."
  syntax:
    content: AllowXmlAttributes
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  id: None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings."
  syntax:
    content: None
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  id: ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation."
  syntax:
    content: ProcessIdentityConstraints
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  id: ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Process inline schemas encountered during validation."
  syntax:
    content: ProcessInlineSchema
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  id: ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Process schema location hints (`xsi:schemaLocation`, `xsi:noNamespaceSchemaLocation`) encountered during validation."
  syntax:
    content: ProcessSchemaLocation
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  id: ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  langs:
  - csharp
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  type: Field
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Report schema validation warnings encountered during validation."
  syntax:
    content: ReportValidationWarnings
    return:
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: AllowXmlAttributes
  nameWithType: XmlSchemaValidationFlags.AllowXmlAttributes
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidationFlags.None
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: None
  nameWithType: XmlSchemaValidationFlags.None
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.None
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessIdentityConstraints
  nameWithType: XmlSchemaValidationFlags.ProcessIdentityConstraints
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessInlineSchema
  nameWithType: XmlSchemaValidationFlags.ProcessInlineSchema
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ProcessSchemaLocation
  nameWithType: XmlSchemaValidationFlags.ProcessSchemaLocation
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation
- uid: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
  parent: System.Xml.Schema.XmlSchemaValidationFlags
  isExternal: false
  name: ReportValidationWarnings
  nameWithType: XmlSchemaValidationFlags.ReportValidationWarnings
  fullName: System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings
