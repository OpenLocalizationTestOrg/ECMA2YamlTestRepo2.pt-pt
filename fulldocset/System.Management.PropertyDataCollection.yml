### YamlMime:ManagedReference
items:
- uid: System.Management.PropertyDataCollection
  id: PropertyDataCollection
  children:
  - System.Management.PropertyDataCollection.Add(System.String,System.Object)
  - System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  - System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  - System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  - System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  - System.Management.PropertyDataCollection.Count
  - System.Management.PropertyDataCollection.GetEnumerator
  - System.Management.PropertyDataCollection.IsSynchronized
  - System.Management.PropertyDataCollection.Item(System.String)
  - System.Management.PropertyDataCollection.Remove(System.String)
  - System.Management.PropertyDataCollection.SyncRoot
  - System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: PropertyDataCollection
  nameWithType: PropertyDataCollection
  fullName: System.Management.PropertyDataCollection
  type: Class
  summary: "Representa o conjunto de propriedades de um objeto WMI."
  remarks: ''
  example:
  - "The following example lists information about the **Win32_OperatingSystem** class using the <xref:System.Management.PropertyData> class. For more information about **Win32_OperatingSystem**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-cs[wminet_PropertyDataCollection#1](~/add/codesnippet/csharp/t-system.management.prop_1_1.cs)]\n [!code-vb[wminet_PropertyDataCollection#1](~/add/codesnippet/visualbasic/t-system.management.prop_1_1.vb)]"
  syntax:
    content: 'public class PropertyDataCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: PropertyDataCollection.Add(String,Object)
  fullName: System.Management.PropertyDataCollection.Add(String,Object)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adiciona uma nova <xref href=&quot;System.Management.PropertyData&quot;> </xref> com o valor especificado. O valor não pode ser nulo e tem de ser conversível para um tipo de modelo CIM (Common Information Model)."
  remarks: "Propriedades só podem ser adicionadas à definição de classe, não para instâncias. Este método só é válido quando foi invocado numa <xref:System.Management.PropertyDataCollection>no <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void Add (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da nova propriedade."
    - id: propertyValue
      type: System.Object
      description: "O valor da propriedade (não pode ser nulo)."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  id: Add(System.String,System.Management.CimType,System.Boolean)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,CimType,Boolean)
  nameWithType: PropertyDataCollection.Add(String,CimType,Boolean)
  fullName: System.Management.PropertyDataCollection.Add(String,CimType,Boolean)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adiciona uma nova <xref href=&quot;System.Management.PropertyData&quot;> </xref> com nenhum valor atribuído."
  remarks: "Propriedades só podem ser adicionadas à definição de classe, não para instâncias. Este método só é válido quando foi invocado numa <xref:System.Management.PropertyDataCollection>no <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Add (string propertyName, System.Management.CimType propertyType, bool isArray);
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade."
    - id: propertyType
      type: System.Management.CimType
      description: "O tipo de modelo CIM (Common Information Model) da propriedade."
    - id: isArray
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para especificar que a propriedade é um tipo de matriz; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  id: Add(System.String,System.Object,System.Management.CimType)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Add(String,Object,CimType)
  nameWithType: PropertyDataCollection.Add(String,Object,CimType)
  fullName: System.Management.PropertyDataCollection.Add(String,Object,CimType)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adiciona uma nova <xref href=&quot;System.Management.PropertyData&quot;> </xref> com o valor especificado e o modelo CIM (Common Information Model) o tipo."
  remarks: "Propriedades só podem ser adicionadas à definição de classe, não para instâncias. Este método só é válido quando foi invocado numa <xref:System.Management.PropertyDataCollection>no <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass> </xref:System.Management.PropertyDataCollection>      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Add (string propertyName, object propertyValue, System.Management.CimType propertyType);
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade."
    - id: propertyValue
      type: System.Object
      description: "O valor da propriedade (o que pode ser nulo)."
    - id: propertyType
      type: System.Management.CimType
      description: "O tipo CIM da propriedade."
  overload: System.Management.PropertyDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Copia o <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> para uma matriz."
  remarks: "##Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A matriz para o qual pretende copiar o <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "O índice do qual pretende iniciar a cópia."
  overload: System.Management.PropertyDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  id: CopyTo(System.Management.PropertyData[],System.Int32)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: CopyTo(PropertyData[],Int32)
  nameWithType: PropertyDataCollection.CopyTo(PropertyData[],Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(PropertyData[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Copia o <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> para um especializadas <xref href=&quot;System.Management.PropertyData&quot;> </xref> matriz object."
  remarks: "##Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (System.Management.PropertyData[] propertyArray, int index);
    parameters:
    - id: propertyArray
      type: System.Management.PropertyData[]
      description: "A matriz de destino para conter o copiados <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "O índice da matriz de destino a partir do qual pretende iniciar a cópia."
  overload: System.Management.PropertyDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Count
  id: Count
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Count
  nameWithType: PropertyDataCollection.Count
  fullName: System.Management.PropertyDataCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Obtém o número de objetos a <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
  remarks: "##O número de objetos na coleção de valor de propriedade.      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Devolve um <xref:System.Int32>valor representa o número de objetos na coleção.</xref:System.Int32>"
  overload: System.Management.PropertyDataCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyDataCollection.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Devolve o enumerador para este <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>."
  remarks: "Apenas pode voltar (que aparece um Visual Basic .NET `For Each` instrução ou um c# `For` instrução) através de um enumerador apenas de reencaminhamento, uma vez. A memória que contém as instâncias for lançada por WMI para que o enumerador não pode ser rewound. Por conseguinte, o <xref:System.Management.PropertyDataCollection.Count%2A>método não pode ser utilizado uma vez que requer rewinding o enumerador.</xref:System.Management.PropertyDataCollection.Count%2A>       Apenas de reencaminhamento enumeradores são geralmente muito mais rápidos e utilizam menos memória que enumeradores convencionais, mas não permitem chamadas para <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.</xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>       Se um enumerador rewindable, os objetos na coleção serão mantidos disponíveis para vários enumerações.      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Management.PropertyDataCollection.PropertyDataEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.PropertyDataCollection.PropertyDataEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que podem ser utilizados para iterar através da coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Management.PropertyDataCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
  fullName: System.Management.PropertyDataCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Obtém um valor que indica se o objeto está sincronizado."
  remarks: "##O valor da propriedade `true` se o objeto é sincronizado; caso contrário, `false`.      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Devolve um <xref:System.Boolean>valor que indica se o objeto está sincronizado.</xref:System.Boolean>"
  overload: System.Management.PropertyDataCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyDataCollection.Item(String)
  fullName: System.Management.PropertyDataCollection.Item(String)
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Obtém a propriedade especificada do <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>, utilizando a sintaxe de []. Esta propriedade é o indexador para o <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref> classe."
  remarks: "##O valor da propriedade A <xref:System.Management.PropertyData>, com base no nome especificado.</xref:System.Management.PropertyData>      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example gets the **Freespace** property from a <xref:System.Management.ManagementClass>.  \n  \n [!code-vb[wminet_PropertyDataCollection_Item#1](~/add/codesnippet/visualbasic/p-system.management.prop_4_1.vb)]\n [!code-cs[wminet_PropertyDataCollection_Item#1](~/add/codesnippet/csharp/p-system.management.prop_4_1.cs)]"
  syntax:
    content: public virtual System.Management.PropertyData this[string propertyName] { get; }
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade a obter."
    return:
      type: System.Management.PropertyData
      description: "Devolve um <xref href=&quot;System.Management.PropertyData&quot;> </xref> que contém os dados para a propriedade especificada na coleção."
  overload: System.Management.PropertyDataCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: PropertyDataCollection.Remove(String)
  fullName: System.Management.PropertyDataCollection.Remove(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Removes a <xref href=&quot;System.Management.PropertyData&quot;></xref> from the <xref href=&quot;System.Management.PropertyDataCollection&quot;></xref>."
  remarks: "Propriedades só podem ser removidas do definições de classe, não a partir de instâncias. Este método só é válido quando foi invocado numa coleção de propriedade no <xref:System.Management.ManagementClass>.</xref:System.Management.ManagementClass>      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void Remove (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade a serem removidos."
  overload: System.Management.PropertyDataCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
  fullName: System.Management.PropertyDataCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Obtém o objeto a ser utilizada para sincronização."
  remarks: "##O objeto a ser utilizada para sincronização do valor de propriedade.      ## Confiança de segurança completa do .NET framework para o chamador imediato. Este membro não pode ser utilizado pelo código parcialmente fidedigno. Para obter mais informações, consulte [utilizando bibliotecas do código parcialmente fidedigno](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Devolve um <xref:System.Object>valor que contém o objeto a ser utilizada para sincronização.</xref:System.Object>"
  overload: System.Management.PropertyDataCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.PropertyDataCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Devolve um <xref:System.Collections.IEnumerator>que itera através de <xref href=&quot;System.Management.PropertyDataCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic, c#]       O `foreach` declaração do Estado de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.  Por conseguinte, utilizando `foreach` recomenda-se, em vez de manipular diretamente o enumerador.       Enumeradores podem ser utilizados para ler os dados da coleção, mas não pode ser utilizados para modificar a colecção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento da coleção. <xref:System.Collections.IEnumerator.Reset%2A>também oferece o enumerador novamente para nesta posição.</xref:System.Collections.IEnumerator.Reset%2A> AT isto posicionar, chamar <xref:System.Collections.IEnumerator.Current%2A>emite uma exceção.</xref:System.Collections.IEnumerator.Current%2A> Por conseguinte, tem de chamar <xref:System.Collections.IEnumerator.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção de antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Devolve o mesmo objeto até ser <xref:System.Collections.IEnumerator.MoveNext%2A>ou <xref:System.Collections.IEnumerator.Reset%2A>é chamado.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Define <xref:System.Collections.IEnumerator.Current%2A>para o próximo elemento.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Se <xref:System.Collections.IEnumerator.MoveNext%2A>transmite o fim da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.Collections.IEnumerator.MoveNext%2A>devolve `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Quando o enumerador está nesta posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A>também devolvem `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Se a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A>devolvido `false`, chamar <xref:System.Collections.IEnumerator.Current%2A>emite uma exceção.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Para definir <xref:System.Collections.IEnumerator.Current%2A>para o primeiro elemento da coleção, pode chamar <xref:System.Collections.IEnumerator.Reset%2A>seguido <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permanece inalterada. Caso sejam feitas alterações à coleção, tais como adicionar, modificar ou eliminar elementos, o enumerador irrevogavelmente é invalidado e a próxima chamada ou <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>emitir um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A>e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>devolve o elemento que está definido, mesmo que o enumerador já é invalidado.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       O enumerador não tem acesso exclusivo à coleção; Por conseguinte, a enumerar através de uma coleção intrinsecamente não é um procedimento de segurança de thread. Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador acionar uma excepção. Para garantir a segurança de thread durante a enumeração, pode bloquear a coleção durante a enumeração de toda ou detetar exceções resultantes das alterações efetuadas por outros threads.       Este método é uma operação de O(1)."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.PropertyDataCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,Object)
  nameWithType: PropertyDataCollection.Add(String,Object)
  fullName: System.Management.PropertyDataCollection.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,CimType,Boolean)
  nameWithType: PropertyDataCollection.Add(String,CimType,Boolean)
  fullName: System.Management.PropertyDataCollection.Add(String,CimType,Boolean)
- uid: System.Management.CimType
  parent: System.Management
  isExternal: false
  name: CimType
  nameWithType: CimType
  fullName: System.Management.CimType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add(String,Object,CimType)
  nameWithType: PropertyDataCollection.Add(String,Object,CimType)
  fullName: System.Management.PropertyDataCollection.Add(String,Object,CimType)
- uid: System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PropertyDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo(PropertyData[],Int32)
  nameWithType: PropertyDataCollection.CopyTo(PropertyData[],Int32)
  fullName: System.Management.PropertyDataCollection.CopyTo(PropertyData[],Int32)
- uid: System.Management.PropertyData[]
  parent: System.Management
  isExternal: false
  name: PropertyData
  nameWithType: PropertyData
  fullName: System.Management.PropertyData[]
  spec.csharp:
  - uid: System.Management.PropertyData
    name: PropertyData
    nameWithType: PropertyData
    fullName: PropertyData[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.PropertyDataCollection.Count
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDataCollection.Count
  fullName: System.Management.PropertyDataCollection.Count
- uid: System.Management.PropertyDataCollection.GetEnumerator
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyDataCollection.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.GetEnumerator()
- uid: System.Management.PropertyDataCollection.PropertyDataEnumerator
  parent: System.Management
  isExternal: false
  name: PropertyDataCollection+PropertyDataEnumerator
  nameWithType: PropertyDataCollection+PropertyDataEnumerator
  fullName: System.Management.PropertyDataCollection+PropertyDataEnumerator
- uid: System.Management.PropertyDataCollection.IsSynchronized
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
  fullName: System.Management.PropertyDataCollection.IsSynchronized
- uid: System.Management.PropertyDataCollection.Item(System.String)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyDataCollection.Item(String)
  fullName: System.Management.PropertyDataCollection.Item(String)
- uid: System.Management.PropertyData
  parent: System.Management
  isExternal: false
  name: PropertyData
  nameWithType: PropertyData
  fullName: System.Management.PropertyData
- uid: System.Management.PropertyDataCollection.Remove(System.String)
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Remove(String)
  nameWithType: PropertyDataCollection.Remove(String)
  fullName: System.Management.PropertyDataCollection.Remove(String)
- uid: System.Management.PropertyDataCollection.SyncRoot
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
  fullName: System.Management.PropertyDataCollection.SyncRoot
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.PropertyDataCollection.Add*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Add
  nameWithType: PropertyDataCollection.Add
- uid: System.Management.PropertyDataCollection.CopyTo*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyDataCollection.CopyTo
- uid: System.Management.PropertyDataCollection.Count*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Count
  nameWithType: PropertyDataCollection.Count
- uid: System.Management.PropertyDataCollection.GetEnumerator*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PropertyDataCollection.GetEnumerator
- uid: System.Management.PropertyDataCollection.IsSynchronized*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PropertyDataCollection.IsSynchronized
- uid: System.Management.PropertyDataCollection.Item*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Item
  nameWithType: PropertyDataCollection.Item
- uid: System.Management.PropertyDataCollection.Remove*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyDataCollection.Remove
- uid: System.Management.PropertyDataCollection.SyncRoot*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PropertyDataCollection.SyncRoot
- uid: System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.PropertyDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: PropertyDataCollection.System.Collections.IEnumerable.GetEnumerator
