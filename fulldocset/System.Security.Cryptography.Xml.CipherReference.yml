### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.CipherReference
  id: CipherReference
  children:
  - System.Security.Cryptography.Xml.CipherReference.#ctor
  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  - System.Security.Cryptography.Xml.CipherReference.GetXml
  - System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  langs:
  - csharp
  name: CipherReference
  nameWithType: CipherReference
  fullName: System.Security.Cryptography.Xml.CipherReference
  type: Class
  summary: "Represents the <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;></xref> element in XML encryption. This class cannot be inherited."
  remarks: "This class represents the `<CipherReference>` element in XML encryption. It identifies a source which, when processed, yields the encrypted data.       The actual encrypted data referenced by the `<CipherReference>` is obtained by the following process. The `<CipherReference> URI` property contains a Uniform Resource Identifier (URI) that is dereferenced. If the `<CipherReference>` element also contains a transform chain, the data resulting from dereferencing the URI is transformed as specified to produce the encrypted data. For example, if the encrypted data is base64-encoded within an XML document, the transforms would specify an XPath expression followed by a base64 decoding so the encrypted data can be extracted.       The syntax of the URI and transforms is similar to that of XML digital signatures.  However, in XML digital signatures, both generation and validation processing start with the same source data and perform that transform in the same order. In XML encryption, the decrypting application has only the encrypted data and the specified transforms. The transforms are enumerated in the order necessary to obtain the encrypted data.       **Note** By default, you cannot dereference cipher references from documents with unknown sources, such as files from a Web site, because the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property is **null**. For example, when you attempt to decrypt a file containing a `<CipherReference>` element that references a file on the Web, a <xref:System.Security.SecurityException> is thrown, even if the request is made by a fully trusted assembly.       If you are sure the documents you are decrypting can be trusted, you can change this behavior for fully trusted applications by using the following code:      ```   Evidence ev = new Evidence();   ev.AddHost (new Zone(SecurityZone.MyComputer));   EncryptedXml exml = new EncryptedXml(doc, ev);   ```"
  example:
  - "The following code example creates a new instance of CipherReference.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/t-system.security.crypto_127_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/t-system.security.crypto_127_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/t-system.security.crypto_127_1.cpp)]"
  syntax:
    content: 'public sealed class CipherReference : System.Security.Cryptography.Xml.EncryptedReference'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedReference
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  - System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  - System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  - System.Security.Cryptography.Xml.EncryptedReference.Uri
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference()
  nameWithType: CipherReference.CipherReference()
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> class."
  remarks: "This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object that provides reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object."
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_105_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_105_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_105_1.cpp)]"
  syntax:
    content: public CipherReference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference(String)
  nameWithType: CipherReference.CipherReference(String)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> class using the specified Uniform Resource Identifier (URI)."
  remarks: "This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) that points to the encrypted data. The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object.       You can use a URI to designate an XML file containing encrypted data. For example:       `String uri = &quot;http://www.woodgrovebank.com/document.xml&quot;;`       You can also use a partial URI to designate that only a portion of an XML document is to be encrypted. For example, assume that an XML document named document.xml contains two `MyForm` elements as shown in the following XML code example:       `<MyForm Id=&quot;Form1&quot;>`       `<! -- Form data here -->`       `</MyForm>`       `<MyForm Id=&quot;Form2&quot;>`       `<! -- Form data here -->`       `</MyForm>`       You can encrypt only the content in `Form2` using a URI such as the following:       `String uri = &quot;http://www.woodgrovebank.com/document.xml#Form2&quot;;`"
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_103_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_103_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_103_1.cpp)]"
  syntax:
    content: public CipherReference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "A Uniform Resource Identifier (URI) pointing to the encrypted data."
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  id: '#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference(String,TransformChain)
  nameWithType: CipherReference.CipherReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> class using the specified Uniform Resource Identifier (URI) and transform chain information."
  remarks: "This constructor creates a <xref:System.Security.Cryptography.Xml.CipherReference> object using a Uniform Resource Identifier (URI) and transform chain to indicate the encrypted data. The object is then used to provide reference information for a <xref:System.Security.Cryptography.Xml.CipherData> object."
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/b72a27e7-300b-421f-bbd3-_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/b72a27e7-300b-421f-bbd3-_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/b72a27e7-300b-421f-bbd3-_1.cpp)]"
  syntax:
    content: public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);
    parameters:
    - id: uri
      type: System.String
      description: "A Uniform Resource Identifier (URI) pointing to the encrypted data."
    - id: transformChain
      type: System.Security.Cryptography.Xml.TransformChain
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.TransformChain&quot;></xref> object that describes transforms to do on the encrypted data."
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: GetXml()
  nameWithType: CipherReference.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the XML representation of a <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> object."
  remarks: "Use this method to output the `<CipherReference>` element in XML."
  example:
  - "The following code example shows one way to use the GetXml method.  \n  \n [!code-vb[CipherReference2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_115_1.vb)]\n [!code-cpp[CipherReference2#1](~/add/codesnippet/cpp/m-system.security.crypto_115_1.cpp)]\n [!code-cs[CipherReference2#1](~/add/codesnippet/csharp/m-system.security.crypto_115_1.cs)]"
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "An <xref href=&quot;System.Xml.XmlElement&quot;></xref> that represents the <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;></xref> element in XML encryption."
  overload: System.Security.Cryptography.Xml.CipherReference.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: CipherReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Loads XML information into the <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;></xref> element in XML encryption."
  remarks: "Use this method to load an existing XML element into the <xref:System.Security.Cryptography.Xml.CipherReference> object."
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "An <xref href=&quot;System.Xml.XmlElement&quot;></xref> object that represents an XML element to use as the reference."
  overload: System.Security.Cryptography.Xml.CipherReference.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> provided is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedReference
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference()
  nameWithType: CipherReference.CipherReference()
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference(String)
  nameWithType: CipherReference.CipherReference(String)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference(String,TransformChain)
  nameWithType: CipherReference.CipherReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: GetXml()
  nameWithType: CipherReference.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: CipherReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference
  nameWithType: CipherReference.CipherReference
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: GetXml
  nameWithType: CipherReference.GetXml
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: LoadXml
  nameWithType: CipherReference.LoadXml
