### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  id: X509SubjectKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  langs:
  - csharp
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  type: Class
  summary: "Represents a key identifier clause that identifies a <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref> security token using the X.509 certificate&quot;s subject key identifier extension."
  remarks: "Typically, the X509SubjectKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate&quot;s subject key identifier extension. The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.       [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.      -   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      -   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      -   X509SubjectKeyIdentifierClause       <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>"
  syntax:
    content: 'public class X509SubjectKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: X509SubjectKeyIdentifierClause(Byte[])
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;></xref> class using the specified subject key identifier."
  syntax:
    content: public X509SubjectKeyIdentifierClause (byte[] ski);
    parameters:
    - id: ski
      type: System.Byte[]
      description: "An array of <xref:System.Byte> that contains the subject key identifier."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ski</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateFrom(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate."
  remarks: "A key identifier clause can be created when the `certificate` parameter contains the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension."
  syntax:
    content: public static bool CanCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> that contains the X.509 certificate."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a key identifier clause can be created for <code>certificate</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  id: GetX509SubjectKeyIdentifier
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: GetX509SubjectKeyIdentifier()
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the subject key identifier."
  syntax:
    content: public byte[] GetX509SubjectKeyIdentifier ();
    parameters: []
    return:
      type: System.Byte[]
      description: "An array of <xref:System.Byte> that contains the subject key identifier."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: Matches(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate."
  remarks: "The Matches method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates."
  syntax:
    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> that contains the X.509 certificate to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>certificate</code> has the same subject key identifier as the current instance; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: X509SubjectKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns a string that represents the current object."
  remarks: "The ToString method returns the subject key identifier."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> that represents the current object."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  id: TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a key identifier clause using the specified X.509 certificate."
  remarks: "A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier."
  syntax:
    content: public static bool TryCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, out System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> to create the key identifier clause for."
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
      description: "When this method returns, contains a <xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;></xref> that represents the key identifier clause. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> when a key identifier clause can be created for the specified X.509 certificate; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: X509SubjectKeyIdentifierClause(Byte[])
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: CanCreateFrom(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: GetX509SubjectKeyIdentifier()
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: Matches(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: X509SubjectKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: CanCreateFrom
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: GetX509SubjectKeyIdentifier
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: X509SubjectKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: X509SubjectKeyIdentifierClause.ToString
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: TryCreateFrom
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom
