### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderExceptionFallbackBuffer
  id: EncoderExceptionFallbackBuffer
  children:
  - System.Text.EncoderExceptionFallbackBuffer.#ctor
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  - System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  - System.Text.EncoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer
  fullName: System.Text.EncoderExceptionFallbackBuffer
  type: Class
  summary: "Emitir <xref:System.Text.EncoderFallbackException>Quando um carácter de entrada não é possível converter uma sequência de bytes de saída codificado.</xref:System.Text.EncoderFallbackException> Esta classe não pode ser herdada."
  remarks: "Um motivo comum de uma codificação ou descodificação operação falha é se a classe de codificação subjacente não fornece um mapeamento entre um caráter e uma sequência de bytes equivalente. Se o carácter de entrada não é possível converter para uma sequência de bytes de saída, a operação de codificação chama o <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>método, que emite <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException> </xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>       A <xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName>classe, que representa uma memória intermédia de dados utilizada numa operação de codificação, é a classe base para a classe EncoderExceptionFallbackBuffer.</xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName> No entanto, em vez de uma memória intermédia de dados, a classe de EncoderExceptionFallbackBuffer representa um comportamento padrão wherein é emitida uma exceção se falhar de uma operação de codificação. Sem memória intermédia de dados real existe e os membros concebidos para manipular uma memória intermédia fazer sem um trabalho considerável."
  syntax:
    content: 'public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer'
  inheritance:
  - System.Text.EncoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> classe."
  syntax:
    content: public EncoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Emite uma exceção porque não é possível codificar o carácter de entrada. Os parâmetros de especificar a posição de valor e o índice do caráter que não é possível converter."
  remarks: "O <xref:System.Text.Encoding.GetBytes%2A>e <xref:System.Text.Encoder.Convert%2A>métodos de chamada de contingência se encontrarem um caráter desconhecido na sua entrada.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Em resposta, contingência emite sempre <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException>"
  syntax:
    content: public override bool Fallback (char charUnknown, int index);
    parameters:
    - id: charUnknown
      type: System.Char
      description: "Um carácter de entrada."
    - id: index
      type: System.Int32
      description: "A posição de índice do caráter na memória intermédia de entrada."
    return:
      type: System.Boolean
      description: "Nenhum. Nenhum valor é devolvido porque o método de contingência sempre emite uma exceção."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "<code>charUnknown</code>Não é possível codificar. Este método sempre emite uma exceção que comunica o valor da <code>charUnknown</code> e <code>index</code> parâmetros."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Emite uma exceção porque não é possível codificar o carácter de entrada. Os parâmetros de especificar a posição de valor e o índice do par de substituição na entrada e não será utilizado o valor de retorno nominal."
  remarks: "O <xref:System.Text.Encoding.GetBytes%2A>e <xref:System.Text.Encoder.Convert%2A>métodos de chamada de contingência se encontrarem um par de substituição na sua entrada.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Em resposta, contingência sempre emite uma exceção."
  syntax:
    content: public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "O substituto alto do par de entrada."
    - id: charUnknownLow
      type: System.Char
      description: "O substituto baixo do par de entrada."
    - id: index
      type: System.Int32
      description: "A posição de índice do par de substituição na memória intermédia de entrada."
    return:
      type: System.Boolean
      description: "Nenhum. Nenhum valor é devolvido porque o método de contingência sempre emite uma exceção."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "O caráter representado pelo <code> charUnknownHigh </code> e <code> charUnknownLow </code> não pode ser codificado."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Either <code>charUnknownHigh</code> or <code>charUnknownLow</code> is invalid. <code>charUnknownHigh</code>não se situa entre U + D800 e U + DBFF, inclusive, ou <code> charUnknownLow </code> não se situa entre U + DC00 e U + DFFF, inclusive."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Obtém o caráter seguinte na memória intermédia de contingência exceção."
  remarks: "Porque <xref:System.Text.EncoderExceptionFallbackBuffer>não tem nenhum da memória intermédia de dados de exceção real, o método de GetNextChar sempre devolve o caráter Unicode nulo.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "O valor devolvido é sempre o caráter Unicode, NULL (U +&0000;).       Está definido um valor de retorno, embora seja unchanging, porque este método implementa um método abstracto."
  overload: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Faz com que a próxima chamada para o <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>método para aceder a posição de caráter de memória intermédia de dados de exceção que é anterior a posição actual.</xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "Porque <xref:System.Text.EncoderExceptionFallbackBuffer>não tem nenhum da memória intermédia de dados de exceção real, o método de MovePrevious sempre devolve `false`.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "O valor devolvido é sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Está definido um valor de retorno, embora seja unchanging, porque este método implementa um método abstracto."
  overload: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Obtém o número de carateres na atual <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> objeto que continuam a ser processado."
  remarks: "Porque <xref:System.Text.EncoderExceptionFallbackBuffer>não tem nenhum da memória intermédia de dados de exceção real, a propriedade restante devolve sempre zero.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "O valor devolvido é sempre zero.       Está definido um valor de retorno, embora seja unchanging, porque este método implementa um método abstracto."
  overload: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.EncoderFallbackBuffer
  isExternal: false
  name: System.Text.EncoderFallbackBuffer
- uid: System.Text.EncoderFallbackException
  isExternal: true
  name: System.Text.EncoderFallbackException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: EncoderExceptionFallbackBuffer.Fallback
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
