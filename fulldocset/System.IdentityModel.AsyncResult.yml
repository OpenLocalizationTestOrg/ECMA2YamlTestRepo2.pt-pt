### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.AsyncResult
  id: AsyncResult
  children:
  - System.IdentityModel.AsyncResult.#ctor
  - System.IdentityModel.AsyncResult.#ctor(System.Object)
  - System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  - System.IdentityModel.AsyncResult.AsyncState
  - System.IdentityModel.AsyncResult.AsyncWaitHandle
  - System.IdentityModel.AsyncResult.Complete(System.Boolean)
  - System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  - System.IdentityModel.AsyncResult.CompletedSynchronously
  - System.IdentityModel.AsyncResult.Dispose
  - System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  - System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  - System.IdentityModel.AsyncResult.Finalize
  - System.IdentityModel.AsyncResult.IsCompleted
  langs:
  - csharp
  name: AsyncResult
  nameWithType: AsyncResult
  fullName: System.IdentityModel.AsyncResult
  type: Class
  summary: "Uma classe base abstracta que implementa o <xref:System.IAsyncResult>interface.</xref:System.IAsyncResult> Funciona como uma classe base a partir do qual deriva <xref:System.IAsyncResult>objetos que podem ser utilizados para cenários comuns de programação assíncronos.</xref:System.IAsyncResult>"
  remarks: "Para obter mais informações, consulte o <xref:System.IAsyncResult?displayProperty=fullName>interface.</xref:System.IAsyncResult?displayProperty=fullName>       O <xref:System.IdentityModel.TypedAsyncResult%601>classe deriva de AsyncResult.</xref:System.IdentityModel.TypedAsyncResult%601>"
  syntax:
    content: 'public abstract class AsyncResult : IAsyncResult, IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IAsyncResult
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor
  id: '#ctor'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult()
  nameWithType: AsyncResult.AsyncResult()
  fullName: System.IdentityModel.AsyncResult.AsyncResult()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Chamado a partir de construtores em classes derivadas para inicializar uma instância do <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> classe que não tem um delegado de chamada de retorno ou um objeto de estado."
  syntax:
    content: protected AsyncResult ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult(Object)
  nameWithType: AsyncResult.AsyncResult(Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Chamado a partir de construtores em classes derivadas para inicializar uma instância do <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> classe que não tem um delegado de chamada de retorno mas tem um objeto de estado."
  syntax:
    content: protected AsyncResult (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um objeto definido pelo utilizador que qualificam ou contém informações sobre uma operação assíncrona."
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  id: '#ctor(System.AsyncCallback,System.Object)'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult(AsyncCallback,Object)
  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Chamado a partir de construtores em classes derivadas para inicializar uma instância do <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> classe que tem um delegado de chamada de retorno e um objeto de estado."
  syntax:
    content: protected AsyncResult (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado quando a operação assíncrona for concluída."
    - id: state
      type: System.Object
      description: "Um objeto definido pelo utilizador que qualificam ou contém informações sobre uma operação assíncrona."
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.AsyncState
  id: AsyncState
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
  fullName: System.IdentityModel.AsyncResult.AsyncState
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Obtém um objeto definido pelo utilizador que qualificam ou contém informações sobre uma operação assíncrona."
  remarks: "Para obter mais informações, consulte o <xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName>propriedade.</xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName>"
  syntax:
    content: public object AsyncState { get; }
    return:
      type: System.Object
      description: "Um objeto definido pelo utilizador que qualificam ou contém informações sobre uma operação assíncrona."
  overload: System.IdentityModel.AsyncResult.AsyncState*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle
  id: AsyncWaitHandle
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Obtém um <xref:System.Threading.WaitHandle>que é utilizado para aguardar que uma operação assíncrona concluir.</xref:System.Threading.WaitHandle>"
  remarks: "Para obter mais informações, consulte o <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName>propriedade.</xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: "A <xref:System.Threading.WaitHandle>que é utilizado para aguardar que uma operação assíncrona concluir.</xref:System.Threading.WaitHandle>"
  overload: System.IdentityModel.AsyncResult.AsyncWaitHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)
  id: Complete(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Complete(Boolean)
  nameWithType: AsyncResult.Complete(Boolean)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Chame esta versão do concluída quando a operação assíncrona foi concluída e não foi encontrada nenhuma excepção. Atualiza o estado da operação e notifica a chamada de retorno."
  syntax:
    content: protected void Complete (bool completedSynchronously);
    parameters:
    - id: completedSynchronously
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação assíncrona foi concluída de forma síncrona; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.AsyncResult.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  id: Complete(System.Boolean,System.Exception)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Complete(Boolean,Exception)
  nameWithType: AsyncResult.Complete(Boolean,Exception)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Chame esta versão do concluída se emitir uma exceção durante o processamento. Para além de notificar a chamada de retorno, captura a exceção e armazena-a para ser emitidas durante a chamada para o <xref:System.IdentityModel.AsyncResult.End*>método.</xref:System.IdentityModel.AsyncResult.End*>"
  syntax:
    content: protected void Complete (bool completedSynchronously, Exception exception);
    parameters:
    - id: completedSynchronously
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação assíncrona foi concluída de forma síncrona; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: exception
      type: System.Exception
      description: "A exceção que ocorreram durante o processamento da operação assíncrona."
  overload: System.IdentityModel.AsyncResult.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously
  id: CompletedSynchronously
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Obtém um valor que indica se a operação assíncrona concluída de forma síncrona."
  remarks: "Para obter mais informações, consulte o <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName>propriedade.</xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName>"
  syntax:
    content: public bool CompletedSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação assíncrona foi concluída de forma síncrona; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.AsyncResult.CompletedSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Dispose
  id: Dispose
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Dispose()
  nameWithType: AsyncResult.Dispose()
  fullName: System.IdentityModel.AsyncResult.Dispose()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Liberta os recursos utilizados pela instância atual do <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> classe."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AsyncResult.Dispose(Boolean)
  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Chamado <xref href=&quot;System.IdentityModel.AsyncResult.Dispose&quot;> </xref> e <xref:System.IdentityModel.AsyncResult.Finalize*>métodos para libertar os recursos geridos e utilizados pela instância atual do <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> classe</xref:System.IdentityModel.AsyncResult.Finalize*>"
  syntax:
    content: protected virtual void Dispose (bool isExplicitDispose);
    parameters:
    - id: isExplicitDispose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>indica que se trata de uma chamada explícita para Dispose."
  overload: System.IdentityModel.AsyncResult.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  id: End(System.IAsyncResult)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: End(IAsyncResult)
  nameWithType: AsyncResult.End(IAsyncResult)
  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Chamar este método quando o `End` funciona para a operação assíncrona foi concluída. Garante que a operação assíncrona estiver concluída e faz a algumas validação comuns."
  syntax:
    content: public static void End (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que representa o estado da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.AsyncResult.End*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Finalize
  id: Finalize
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Finalize()
  nameWithType: AsyncResult.Finalize()
  fullName: System.IdentityModel.AsyncResult.Finalize()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Permite a <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> objeto para tentar libertar recursos e efetuar outras operações de limpeza antes de que reclamada a através da recolha de lixo."
  syntax:
    content: ~AsyncResult ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.IsCompleted
  id: IsCompleted
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
  fullName: System.IdentityModel.AsyncResult.IsCompleted
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Obtém um valor que indica se a operação assíncrona foi concluída."
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação foi concluída; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.AsyncResult.IsCompleted*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.AsyncResult.#ctor
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult()
  nameWithType: AsyncResult.AsyncResult()
  fullName: System.IdentityModel.AsyncResult.AsyncResult()
- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult(Object)
  nameWithType: AsyncResult.AsyncResult(Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)
- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult(AsyncCallback,Object)
  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.AsyncResult.AsyncState
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
  fullName: System.IdentityModel.AsyncResult.AsyncState
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete(Boolean)
  nameWithType: AsyncResult.Complete(Boolean)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete(Boolean,Exception)
  nameWithType: AsyncResult.Complete(Boolean,Exception)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously
- uid: System.IdentityModel.AsyncResult.Dispose
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose()
  nameWithType: AsyncResult.Dispose()
  fullName: System.IdentityModel.AsyncResult.Dispose()
- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AsyncResult.Dispose(Boolean)
  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)
- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: End(IAsyncResult)
  nameWithType: AsyncResult.End(IAsyncResult)
  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.IdentityModel.AsyncResult.Finalize
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Finalize()
  nameWithType: AsyncResult.Finalize()
  fullName: System.IdentityModel.AsyncResult.Finalize()
- uid: System.IdentityModel.AsyncResult.IsCompleted
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
  fullName: System.IdentityModel.AsyncResult.IsCompleted
- uid: System.IdentityModel.AsyncResult.#ctor*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult
  nameWithType: AsyncResult.AsyncResult
- uid: System.IdentityModel.AsyncResult.AsyncState*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
- uid: System.IdentityModel.AsyncResult.Complete*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete
  nameWithType: AsyncResult.Complete
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
- uid: System.IdentityModel.AsyncResult.Dispose*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose
  nameWithType: AsyncResult.Dispose
- uid: System.IdentityModel.AsyncResult.End*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: End
  nameWithType: AsyncResult.End
- uid: System.IdentityModel.AsyncResult.Finalize*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Finalize
  nameWithType: AsyncResult.Finalize
- uid: System.IdentityModel.AsyncResult.IsCompleted*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
