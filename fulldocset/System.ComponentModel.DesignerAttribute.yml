### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DesignerAttribute
  id: DesignerAttribute
  children:
  - System.ComponentModel.DesignerAttribute.#ctor(System.String)
  - System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  - System.ComponentModel.DesignerAttribute.DesignerTypeName
  - System.ComponentModel.DesignerAttribute.Equals(System.Object)
  - System.ComponentModel.DesignerAttribute.GetHashCode
  - System.ComponentModel.DesignerAttribute.TypeId
  langs:
  - csharp
  name: DesignerAttribute
  nameWithType: DesignerAttribute
  fullName: System.ComponentModel.DesignerAttribute
  type: Class
  summary: "Especifica a classe utilizada para implementar os serviços de tempo de criação de um componente."
  remarks: "A classe que utiliza para os serviços de tempo de criação tem de implementar o <xref:System.ComponentModel.Design.IDesigner>interface.</xref:System.ComponentModel.Design.IDesigner>       Utilize o <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A>propriedade para localizar o tipo de base do estruturador.</xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> Utilize o <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A>propriedade obter o nome do tipo do estruturador associado a este membro.</xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A>       Para obter mais informações, consulte [atributos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a class called `MyForm`. `MyForm` has two attributes, a DesignerAttribute that specifies this class uses the <xref:System.Windows.Forms.Design.DocumentDesigner>, and a <xref:System.ComponentModel.DesignerCategoryAttribute> that specifies the <xref:System.ComponentModel.DesignerCategoryAttribute.Form> category.  \n  \n [!code-cpp[Classic DesignerAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._157_1.cpp)]\n [!code-vb[Classic DesignerAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._157_1.vb)]\n [!code-cs[Classic DesignerAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._157_1.cs)]  \n  \n The next example creates an instance of `MyForm`. Then it gets the attributes for the class, extracts the DesignerAttribute, and prints the name of the designer.  \n  \n [!code-cpp[Classic DesignerAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._157_2.cpp)]\n [!code-vb[Classic DesignerAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._157_2.vb)]\n [!code-cs[Classic DesignerAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._157_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      public sealed class DesignerAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String)
  nameWithType: DesignerAttribute.DesignerAttribute(String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> utilizando o nome do tipo que fornece serviços de tempo de criação de classe."
  remarks: "A classe que utiliza para os serviços de tempo de criação tem de implementar o <xref:System.ComponentModel.Design.IDesigner>interface.</xref:System.ComponentModel.Design.IDesigner>"
  syntax:
    content: public DesignerAttribute (string designerTypeName);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "A concatenação do nome completamente qualificado do tipo que fornece serviços de tempo de criação para o componente este atributo está vinculada a e o nome da assemblagem este tipo reside no."
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> utilizando o tipo que fornece serviços de tempo de criação de classe."
  remarks: "A classe que utiliza para os serviços de tempo de criação tem de implementar o <xref:System.ComponentModel.Design.IDesigner>interface.</xref:System.ComponentModel.Design.IDesigner>"
  syntax:
    content: public DesignerAttribute (Type designerType);
    parameters:
    - id: designerType
      type: System.Type
      description: "A <xref:System.Type>que representa a classe que fornece serviços de tempo de criação para o componente este atributo está vinculada.</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String,String)
  nameWithType: DesignerAttribute.DesignerAttribute(String,String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> utilizando o tipo de estruturador e a classe base para o estruturador de classe."
  remarks: "A classe que utiliza para os serviços de tempo de criação tem de implementar o <xref:System.ComponentModel.Design.IDesigner>interface.</xref:System.ComponentModel.Design.IDesigner>       O `designerBaseTypeName` parâmetro permite-lhe anexar mais de um tipo de estruturador para uma determinada classe."
  syntax:
    content: public DesignerAttribute (string designerTypeName, string designerBaseTypeName);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "A concatenação do nome completamente qualificado do tipo que fornece serviços de tempo de criação para o componente este atributo está vinculada a e o nome da assemblagem este tipo reside no."
    - id: designerBaseTypeName
      type: System.String
      description: "O nome completamente qualificado da classe base para associar a classe de designer."
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(String,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> classe, utilizando o nome da classe de designer e a classe base para o estruturador."
  remarks: "A classe que utiliza para os serviços de tempo de criação tem de implementar o <xref:System.ComponentModel.Design.IDesigner>interface.</xref:System.ComponentModel.Design.IDesigner>       O `designerBaseType` parâmetro permite-lhe anexar mais de um tipo de estruturador para uma determinada classe."
  syntax:
    content: public DesignerAttribute (string designerTypeName, Type designerBaseType);
    parameters:
    - id: designerTypeName
      type: System.String
      description: "A concatenação do nome completamente qualificado do tipo que fornece serviços de tempo de criação para o componente este atributo está vinculada a e o nome da assemblagem este tipo reside no."
    - id: designerBaseType
      type: System.Type
      description: "A <xref:System.Type>que representa a classe base para associar o `designerTypeName`.</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerAttribute(Type,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref> classe utilizando os tipos de designer e do estruturador classe base."
  remarks: "A classe que utiliza para os serviços de tempo de criação tem de implementar o <xref:System.ComponentModel.Design.IDesigner>interface.</xref:System.ComponentModel.Design.IDesigner>       O `designerBaseType` parâmetro permite-lhe anexar mais de um tipo de estruturador para uma determinada classe."
  syntax:
    content: public DesignerAttribute (Type designerType, Type designerBaseType);
    parameters:
    - id: designerType
      type: System.Type
      description: "A <xref:System.Type>que representa a classe que fornece serviços de tempo de criação para o componente este atributo está vinculada.</xref:System.Type>"
    - id: designerBaseType
      type: System.Type
      description: "A <xref:System.Type>que representa a classe base para associar o `designerType`.</xref:System.Type>"
  overload: System.ComponentModel.DesignerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  id: DesignerBaseTypeName
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o nome do tipo base neste estruturador."
  syntax:
    content: public string DesignerBaseTypeName { get; }
    return:
      type: System.String
      description: "O nome do tipo base neste estruturador."
  overload: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName
  id: DesignerTypeName
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o nome do tipo estruturador associado a este atributo estruturador."
  syntax:
    content: public string DesignerTypeName { get; }
    return:
      type: System.String
      description: "O nome do tipo estruturador associado a este atributo estruturador."
  overload: System.ComponentModel.DesignerAttribute.DesignerTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DesignerAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se o valor de objecto fornecido é igual a atual <xref href=&quot;System.ComponentModel.DesignerAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto de teste de igualdade de valor de."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de objecto fornecido é igual do atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DesignerAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DesignerAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve o código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash de número inteiro com sinal de 32 bits."
  overload: System.ComponentModel.DesignerAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DesignerAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.DesignerAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
  fullName: System.ComponentModel.DesignerAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um ID exclusivo para este tipo de atributo."
  remarks: "É utilizado com a filtragem algoritmos para identificar os dois atributos que são o mesmo tipo. Para a maioria dos atributos, esta ação apenas de devolve o <xref:System.Type>instância para o atributo.</xref:System.Type> <xref:System.ComponentModel.DesignerAttribute>as substituições para incluir o tipo do estruturador tipo base.</xref:System.ComponentModel.DesignerAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "Um ID exclusivo para este tipo de atributo."
  overload: System.ComponentModel.DesignerAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String)
  nameWithType: DesignerAttribute.DesignerAttribute(String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String,String)
  nameWithType: DesignerAttribute.DesignerAttribute(String,String)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,String)
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(String,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(String,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(String,Type)
- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute(Type,Type)
  nameWithType: DesignerAttribute.DesignerAttribute(Type,Type)
  fullName: System.ComponentModel.DesignerAttribute.DesignerAttribute(Type,Type)
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
  fullName: System.ComponentModel.DesignerAttribute.DesignerTypeName
- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: DesignerAttribute.Equals(Object)
  fullName: System.ComponentModel.DesignerAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.DesignerAttribute.GetHashCode
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: DesignerAttribute.GetHashCode()
  fullName: System.ComponentModel.DesignerAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DesignerAttribute.TypeId
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
  fullName: System.ComponentModel.DesignerAttribute.TypeId
- uid: System.ComponentModel.DesignerAttribute.#ctor*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerAttribute
  nameWithType: DesignerAttribute.DesignerAttribute
- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerBaseTypeName
  nameWithType: DesignerAttribute.DesignerBaseTypeName
- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: DesignerTypeName
  nameWithType: DesignerAttribute.DesignerTypeName
- uid: System.ComponentModel.DesignerAttribute.Equals*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: Equals
  nameWithType: DesignerAttribute.Equals
- uid: System.ComponentModel.DesignerAttribute.GetHashCode*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: DesignerAttribute.GetHashCode
- uid: System.ComponentModel.DesignerAttribute.TypeId*
  parent: System.ComponentModel.DesignerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerAttribute.TypeId
