### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  id: SqlDataSourceCommandEventArgs
  children:
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Updating&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Deleting&quot;> </xref> e <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Inserting&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlo."
  remarks: "Ao adicionar um delegado de processador de eventos para processar o <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, ou <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>eventos, pode efetuar qualquer pré-processamentos adicionais necessários ou cancelar o comando de base de dados completamente.</xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.Updating>       Porque a classe de SqlDataSourceCommandEventArgs deriva do <xref:System.ComponentModel.CancelEventArgs>classe, pode cancelar um pendente <xref:System.Web.UI.WebControls.SqlDataSource>comandos de base de dados através da definição de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade para `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.ComponentModel.CancelEventArgs> Pode examinar e manipular a <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A>coleção e outras propriedades de comando antes de executar o comando acedendo a <xref:System.Data.Common.DbCommand>objeto exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Parameters%2A> </xref:System.Data.Common.DbCommand.CommandText%2A>       A classe de SqlDataSourceCommandEventArgs é utilizada no <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>métodos para fornecer acesso a um <xref:System.Web.UI.WebControls.SqlDataSource>comandos de base de dados antes de ser executada.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> O <xref:System.Web.UI.WebControls.SqlDataSource>controlo expõe muitos eventos que pode processar para trabalhar com objetos de dados subjacente no decorrer de uma operação de dados.</xref:System.Web.UI.WebControls.SqlDataSource> A tabela seguinte lista os eventos e associados <xref:System.EventArgs>e classes de processador de eventos, para melhor ajudá-lo para os vários eventos que correspondem o ciclo de vida de uma operação de dados com o <xref:System.Web.UI.WebControls.SqlDataSource>controlo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.EventArgs>      | Evento | EventArgs | EventHandler |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>ocorre antes dos dados são obtidos. | <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>ocorrer antes de uma insert, update ou de operação de eliminação é efetuada. | SqlDataSourceCommandEventArgs | <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|   | <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>ocorrer após a obtenção de dados, inserir, atualizar ou eliminar operações de conclusão. | <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Selected></xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler></xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.Updating></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Selecting>"
  example:
  - "The following code example demonstrates how to display data retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control, and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_15_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_15_1.aspx)]"
  syntax:
    content: 'public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  id: '#ctor(System.Data.Common.DbCommand)'
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> classe, utilizando o objeto de comando de base de dados especificada."
  syntax:
    content: public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "Um <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objeto que representa o cancelable <> </> *>, <> </> *>, ou <xref:System.Web.UI.WebControls.SqlDataSource.Delete*>comando.</xref:System.Web.UI.WebControls.SqlDataSource.Delete*>"
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  id: Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o comando de base de dados pendentes."
  remarks: "Pode processar o <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, ou <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>eventos para examinar e manipular as propriedades do <xref:System.Data.Common.DbCommand>antes de que for executada pelo <xref:System.Web.UI.WebControls.SqlDataSource>controlo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.Updating> A ligação à origem de dados subjacente ainda não está aberta quando o delegado de processador de eventos é chamado. Por conseguinte, não é possível cancelar a operação de base de dados, chamando o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto diretamente.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> No entanto, pode cancelar a operação de base de dados através da definição de <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The data is initially displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> that ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically-generated insert button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records, and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField>, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1040_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1040_1.aspx)]"
  syntax:
    content: public System.Data.Common.DbCommand Command { get; }
    return:
      type: System.Data.Common.DbCommand
      description: "Um <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objeto que representa o comando de base de dados pendentes."
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
