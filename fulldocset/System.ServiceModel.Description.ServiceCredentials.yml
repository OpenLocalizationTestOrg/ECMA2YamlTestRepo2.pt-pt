### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.ServiceCredentials
  id: ServiceCredentials
  children:
  - System.ServiceModel.Description.ServiceCredentials.#ctor
  - System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)
  - System.ServiceModel.Description.ServiceCredentials.ClientCertificate
  - System.ServiceModel.Description.ServiceCredentials.Clone
  - System.ServiceModel.Description.ServiceCredentials.CloneCore
  - System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager
  - System.ServiceModel.Description.ServiceCredentials.ExceptionMapper
  - System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration
  - System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication
  - System.ServiceModel.Description.ServiceCredentials.Peer
  - System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication
  - System.ServiceModel.Description.ServiceCredentials.ServiceCertificate
  - System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration
  - System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication
  - System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication
  langs:
  - csharp
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
  type: Class
  summary: "Configures a service credential. Use this class to specify the credential for the service such as an X.509 certificate. Also, use this class to specify the authentication model for various client credentials such as user name and password validation."
  remarks: "This class is used as a parameter in the <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore%2A> method, by methods of the <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>, and is returned by the <xref:System.ServiceModel.ServiceHostBase.Credentials%2A?displayProperty=fullName> property."
  example:
  - "The following code shows how to override this class to implement custom service credentials.  \n  \n [!code-vb[c_CustomCredentials#4](~/add/codesnippet/visualbasic/t-system.servicemodel.de_29_1.vb)]\n [!code-cs[c_CustomCredentials#4](~/add/codesnippet/csharp/t-system.servicemodel.de_29_1.cs)]"
  syntax:
    content: 'public class ServiceCredentials : System.ServiceModel.Security.SecurityCredentialsManager, System.ServiceModel.Description.IServiceBehavior'
  inheritance:
  - System.Object
  - System.ServiceModel.Security.SecurityCredentialsManager
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: ServiceCredentials()
  nameWithType: ServiceCredentials.ServiceCredentials()
  fullName: System.ServiceModel.Description.ServiceCredentials.ServiceCredentials()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref> class."
  syntax:
    content: public ServiceCredentials ();
    parameters: []
  overload: System.ServiceModel.Description.ServiceCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)
  id: '#ctor(System.ServiceModel.Description.ServiceCredentials)'
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: ServiceCredentials(ServiceCredentials)
  nameWithType: ServiceCredentials.ServiceCredentials(ServiceCredentials)
  fullName: System.ServiceModel.Description.ServiceCredentials.ServiceCredentials(ServiceCredentials)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Initializes a new instance of <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref> from the specified <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref>."
  syntax:
    content: protected ServiceCredentials (System.ServiceModel.Description.ServiceCredentials other);
    parameters:
    - id: other
      type: System.ServiceModel.Description.ServiceCredentials
      description: "The <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref> instance used to initialize the new instance."
  overload: System.ServiceModel.Description.ServiceCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.ClientCertificate
  id: ClientCertificate
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: ServiceCredentials.ClientCertificate
  fullName: System.ServiceModel.Description.ServiceCredentials.ClientCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets the current client certificate authentication and provisioning settings for this service."
  remarks: "You can specify a client certificate authentication model using the <xref:System.IdentityModel.Claims.ClaimTypes.Authentication%2A> property. In the mutual certificate duplex scenario, you can specify an X.509 certificate to use in a response or callback using the <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate%2A> property."
  example:
  - "The following code shows how to access this property and use it to set additional properties.  \n  \n [!code-vb[c_CustomCertificateValidator#1](~/add/codesnippet/visualbasic/p-system.servicemodel.de_5_1.vb)]\n [!code-cs[c_CustomCertificateValidator#1](~/add/codesnippet/csharp/p-system.servicemodel.de_5_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.X509CertificateInitiatorServiceCredential ClientCertificate { get; }
    return:
      type: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
      description: "An <xref href=&quot;System.ServiceModel.Security.X509CertificateInitiatorServiceCredential&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.Clone
  id: Clone
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: Clone()
  nameWithType: ServiceCredentials.Clone()
  fullName: System.ServiceModel.Description.ServiceCredentials.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Creates a copy of the current instance."
  remarks: ''
  example:
  - "The following code shows how to call this method.  \n  \n [!code-cs[S_UEWindowsServiceCredential#3](~/add/codesnippet/csharp/m-system.servicemodel.de_0_1.cs)]\n [!code-vb[S_UEWindowsServiceCredential#3](~/add/codesnippet/visualbasic/m-system.servicemodel.de_0_1.vb)]"
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "A <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.CloneCore
  id: CloneCore
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: CloneCore()
  nameWithType: ServiceCredentials.CloneCore()
  fullName: System.ServiceModel.Description.ServiceCredentials.CloneCore()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Copies the essential members of the current instance."
  remarks: "The CloneCore method calls the <xref:System.ServiceModel.Description.ServiceCredentials.%23ctor%2A> constructor."
  syntax:
    content: protected virtual System.ServiceModel.Description.ServiceCredentials CloneCore ();
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "A <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager
  id: CreateSecurityTokenManager
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: CreateSecurityTokenManager()
  nameWithType: ServiceCredentials.CreateSecurityTokenManager()
  fullName: System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Creates a token manager for this service."
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager ();
    parameters: []
    return:
      type: System.IdentityModel.Selectors.SecurityTokenManager
      description: "A <xref href=&quot;System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.ExceptionMapper
  id: ExceptionMapper
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: ExceptionMapper
  nameWithType: ServiceCredentials.ExceptionMapper
  fullName: System.ServiceModel.Description.ServiceCredentials.ExceptionMapper
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets or sets the exception mapper associated with the service credentials."
  syntax:
    content: public System.ServiceModel.ExceptionMapper ExceptionMapper { get; set; }
    return:
      type: System.ServiceModel.ExceptionMapper
      description: "The exception mapper associated with the service credentials."
  overload: System.ServiceModel.Description.ServiceCredentials.ExceptionMapper*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration
  id: IdentityConfiguration
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: IdentityConfiguration
  nameWithType: ServiceCredentials.IdentityConfiguration
  fullName: System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets or sets the identity configuration for the service."
  syntax:
    content: public System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration { get; set; }
    return:
      type: System.IdentityModel.Configuration.IdentityConfiguration
      description: "The identity configuration for the service."
  overload: System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication
  id: IssuedTokenAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: IssuedTokenAuthentication
  nameWithType: ServiceCredentials.IssuedTokenAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets the current issued token (for example, SAML) authentication settings for this service."
  remarks: ''
  example:
  - "The following code shows how to access this property and use it to set additional properties.  \n  \n [!code-cs[c_FederatedService#2](~/add/codesnippet/csharp/p-system.servicemodel.de_15_1.cs)]\n [!code-vb[c_FederatedService#2](~/add/codesnippet/visualbasic/p-system.servicemodel.de_15_1.vb)]"
  syntax:
    content: public System.ServiceModel.Security.IssuedTokenServiceCredential IssuedTokenAuthentication { get; }
    return:
      type: System.ServiceModel.Security.IssuedTokenServiceCredential
      description: "An <xref href=&quot;System.ServiceModel.Security.IssuedTokenServiceCredential&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.Peer
  id: Peer
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: Peer
  nameWithType: ServiceCredentials.Peer
  fullName: System.ServiceModel.Description.ServiceCredentials.Peer
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets the current credential authentication and provisioning settings to be used by peer transport endpoints configured on the service."
  syntax:
    content: public System.ServiceModel.Security.PeerCredential Peer { get; }
    return:
      type: System.ServiceModel.Security.PeerCredential
      description: "A <xref href=&quot;System.ServiceModel.Security.PeerCredential&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.Peer*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication
  id: SecureConversationAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: SecureConversationAuthentication
  nameWithType: ServiceCredentials.SecureConversationAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets the current settings to be used by a secure conversation."
  remarks: "Use this class to specify a list of known claim types for the Security Context Token (SCT) cookies serialization and an encoder to encode and secure cookies information."
  example:
  - "The following code shows how to use this property to get the instance of the credential used by the service.  \n  \n [!code-cs[S_UEWindowsServiceCredential#2](~/add/codesnippet/csharp/c42d604a-a74f-4b27-b8a1-_1.cs)]\n [!code-vb[S_UEWindowsServiceCredential#2](~/add/codesnippet/visualbasic/c42d604a-a74f-4b27-b8a1-_1.vb)]"
  syntax:
    content: public System.ServiceModel.Security.SecureConversationServiceCredential SecureConversationAuthentication { get; }
    return:
      type: System.ServiceModel.Security.SecureConversationServiceCredential
      description: "A <xref href=&quot;System.ServiceModel.Security.SecureConversationServiceCredential&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.ServiceCertificate
  id: ServiceCertificate
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: ServiceCertificate
  nameWithType: ServiceCredentials.ServiceCertificate
  fullName: System.ServiceModel.Description.ServiceCredentials.ServiceCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets the current certificate associated with this service."
  remarks: "You can specify the certificate to use by calling members of the <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> object returned by this property.  \n  \n You can also set this value using the [\\&lt;certificate\\&gt;](../Topic/%3Ccertificate%3E%20for%20%3Cidentity%3E.md) element in a client application configuration file."
  example:
  - "This code shows how to specify the certificate that a service uses.  \n  \n A <xref:System.ServiceModel.ServiceHost> class is created, followed by a single complex code statement that does the following:  \n  \n-   <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> property is used to access an instance of <xref:System.ServiceModel.Description.ServiceCredentials>.  \n  \n-   The <xref:System.ServiceModel.Description.ServiceCredentials> instance then invokes ServiceCertificate.  \n  \n-   The ServiceCertificate property returns a <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> object, on which the <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate%2A> method is then called.  \n  \n [!code-cs[S_UEServiceCredentials#4](~/add/codesnippet/csharp/s_ueservicecredentials.cs/program.cs#4)]"
  syntax:
    content: public System.ServiceModel.Security.X509CertificateRecipientServiceCredential ServiceCertificate { get; }
    return:
      type: System.ServiceModel.Security.X509CertificateRecipientServiceCredential
      description: "An <xref href=&quot;System.ServiceModel.Security.X509CertificateRecipientServiceCredential&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.ServiceCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Adds this instance to a binding parameter collection. This is an infrastructure method and not intended to be called directly."
  remarks: "Some binding elements can sometimes access extra information when building factories. This class is a collection of objects that contain this extra information."
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A description of the service."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "The service host base."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "A collection of service endpoints."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "A collection of parameters."
  overload: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parameters</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Apply the dispatch behavior. This is an infrastructure method and not intended to be called directly."
  remarks: "Not implemented."
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "The service description."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "The service host base."
  overload: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Validates a service description. This is an infrastructure method and not intended to be called directly."
  remarks: "Not implemented."
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "The service description."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "The service host base."
  overload: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration
  id: UseIdentityConfiguration
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: UseIdentityConfiguration
  nameWithType: ServiceCredentials.UseIdentityConfiguration
  fullName: System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets or sets whether the service credential uses identity configuration."
  syntax:
    content: public bool UseIdentityConfiguration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the service credential uses identity configuration; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication
  id: UserNameAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: UserNameAuthentication
  nameWithType: ServiceCredentials.UserNameAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets the current user name/password authentication settings for this service."
  remarks: "You can specify the settings of the user name/password authentication by calling members of the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> class on this instance, such as <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>."
  example:
  - "The following code shows how to use this property to get the instance of the credential used by the service.  \n  \n [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/p-system.servicemodel.de_8_1.cs)]\n [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/p-system.servicemodel.de_8_1.vb)]"
  syntax:
    content: public System.ServiceModel.Security.UserNamePasswordServiceCredential UserNameAuthentication { get; }
    return:
      type: System.ServiceModel.Security.UserNamePasswordServiceCredential
      description: "A <xref href=&quot;System.ServiceModel.Security.UserNamePasswordServiceCredential&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication
  id: WindowsAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  langs:
  - csharp
  name: WindowsAuthentication
  nameWithType: ServiceCredentials.WindowsAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Gets the current Windows authentication settings for this service."
  remarks: "Use this class to specify whether to allow anonymous Windows users access by setting the <xref:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons%2A> property. Also, use this class to specify whether to include a group information to which users belong in the <xref:System.IdentityModel.Policy.AuthorizationContext> by setting the <xref:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups%2A> property."
  example:
  - "The following code shows how to use this property to get the instance of the credential used by the service.  \n  \n [!code-cs[S_UEWindowsServiceCredential#1](~/add/codesnippet/csharp/p-system.servicemodel.de_11_1.cs)]\n [!code-vb[S_UEWindowsServiceCredential#1](~/add/codesnippet/visualbasic/p-system.servicemodel.de_11_1.vb)]"
  syntax:
    content: public System.ServiceModel.Security.WindowsServiceCredential WindowsAuthentication { get; }
    return:
      type: System.ServiceModel.Security.WindowsServiceCredential
      description: "A <xref href=&quot;System.ServiceModel.Security.WindowsServiceCredential&quot;></xref> instance."
  overload: System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Security.SecurityCredentialsManager
  isExternal: false
  name: System.ServiceModel.Security.SecurityCredentialsManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Description.ServiceCredentials.#ctor
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ServiceCredentials()
  nameWithType: ServiceCredentials.ServiceCredentials()
  fullName: System.ServiceModel.Description.ServiceCredentials.ServiceCredentials()
- uid: System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ServiceCredentials(ServiceCredentials)
  nameWithType: ServiceCredentials.ServiceCredentials(ServiceCredentials)
  fullName: System.ServiceModel.Description.ServiceCredentials.ServiceCredentials(ServiceCredentials)
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.Description.ServiceCredentials.ClientCertificate
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ClientCertificate
  nameWithType: ServiceCredentials.ClientCertificate
  fullName: System.ServiceModel.Description.ServiceCredentials.ClientCertificate
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509CertificateInitiatorServiceCredential
  nameWithType: X509CertificateInitiatorServiceCredential
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
- uid: System.ServiceModel.Description.ServiceCredentials.Clone
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: Clone()
  nameWithType: ServiceCredentials.Clone()
  fullName: System.ServiceModel.Description.ServiceCredentials.Clone()
- uid: System.ServiceModel.Description.ServiceCredentials.CloneCore
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: CloneCore()
  nameWithType: ServiceCredentials.CloneCore()
  fullName: System.ServiceModel.Description.ServiceCredentials.CloneCore()
- uid: System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: CreateSecurityTokenManager()
  nameWithType: ServiceCredentials.CreateSecurityTokenManager()
  fullName: System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager()
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager
  fullName: System.IdentityModel.Selectors.SecurityTokenManager
- uid: System.ServiceModel.Description.ServiceCredentials.ExceptionMapper
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ExceptionMapper
  nameWithType: ServiceCredentials.ExceptionMapper
  fullName: System.ServiceModel.Description.ServiceCredentials.ExceptionMapper
- uid: System.ServiceModel.ExceptionMapper
  parent: System.ServiceModel
  isExternal: false
  name: ExceptionMapper
  nameWithType: ExceptionMapper
  fullName: System.ServiceModel.ExceptionMapper
- uid: System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: IdentityConfiguration
  nameWithType: ServiceCredentials.IdentityConfiguration
  fullName: System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration
- uid: System.IdentityModel.Configuration.IdentityConfiguration
  parent: System.IdentityModel.Configuration
  isExternal: false
  name: IdentityConfiguration
  nameWithType: IdentityConfiguration
  fullName: System.IdentityModel.Configuration.IdentityConfiguration
- uid: System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: IssuedTokenAuthentication
  nameWithType: ServiceCredentials.IssuedTokenAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication
- uid: System.ServiceModel.Security.IssuedTokenServiceCredential
  parent: System.ServiceModel.Security
  isExternal: false
  name: IssuedTokenServiceCredential
  nameWithType: IssuedTokenServiceCredential
  fullName: System.ServiceModel.Security.IssuedTokenServiceCredential
- uid: System.ServiceModel.Description.ServiceCredentials.Peer
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: Peer
  nameWithType: ServiceCredentials.Peer
  fullName: System.ServiceModel.Description.ServiceCredentials.Peer
- uid: System.ServiceModel.Security.PeerCredential
  parent: System.ServiceModel.Security
  isExternal: false
  name: PeerCredential
  nameWithType: PeerCredential
  fullName: System.ServiceModel.Security.PeerCredential
- uid: System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: SecureConversationAuthentication
  nameWithType: ServiceCredentials.SecureConversationAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication
- uid: System.ServiceModel.Security.SecureConversationServiceCredential
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential
- uid: System.ServiceModel.Description.ServiceCredentials.ServiceCertificate
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ServiceCertificate
  nameWithType: ServiceCredentials.ServiceCertificate
  fullName: System.ServiceModel.Description.ServiceCredentials.ServiceCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientServiceCredential
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509CertificateRecipientServiceCredential
  nameWithType: X509CertificateRecipientServiceCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientServiceCredential
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: UseIdentityConfiguration
  nameWithType: ServiceCredentials.UseIdentityConfiguration
  fullName: System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: UserNameAuthentication
  nameWithType: ServiceCredentials.UserNameAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential
  parent: System.ServiceModel.Security
  isExternal: false
  name: UserNamePasswordServiceCredential
  nameWithType: UserNamePasswordServiceCredential
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential
- uid: System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: WindowsAuthentication
  nameWithType: ServiceCredentials.WindowsAuthentication
  fullName: System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication
- uid: System.ServiceModel.Security.WindowsServiceCredential
  parent: System.ServiceModel.Security
  isExternal: false
  name: WindowsServiceCredential
  nameWithType: WindowsServiceCredential
  fullName: System.ServiceModel.Security.WindowsServiceCredential
- uid: System.ServiceModel.Description.ServiceCredentials.#ctor*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials.ServiceCredentials
- uid: System.ServiceModel.Description.ServiceCredentials.ClientCertificate*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ClientCertificate
  nameWithType: ServiceCredentials.ClientCertificate
- uid: System.ServiceModel.Description.ServiceCredentials.Clone*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: Clone
  nameWithType: ServiceCredentials.Clone
- uid: System.ServiceModel.Description.ServiceCredentials.CloneCore*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: CloneCore
  nameWithType: ServiceCredentials.CloneCore
- uid: System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: CreateSecurityTokenManager
  nameWithType: ServiceCredentials.CreateSecurityTokenManager
- uid: System.ServiceModel.Description.ServiceCredentials.ExceptionMapper*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ExceptionMapper
  nameWithType: ServiceCredentials.ExceptionMapper
- uid: System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: IdentityConfiguration
  nameWithType: ServiceCredentials.IdentityConfiguration
- uid: System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: IssuedTokenAuthentication
  nameWithType: ServiceCredentials.IssuedTokenAuthentication
- uid: System.ServiceModel.Description.ServiceCredentials.Peer*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: Peer
  nameWithType: ServiceCredentials.Peer
- uid: System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: SecureConversationAuthentication
  nameWithType: ServiceCredentials.SecureConversationAuthentication
- uid: System.ServiceModel.Description.ServiceCredentials.ServiceCertificate*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: ServiceCertificate
  nameWithType: ServiceCredentials.ServiceCertificate
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceCredentials.System.ServiceModel.Description.IServiceBehavior.Validate
- uid: System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: UseIdentityConfiguration
  nameWithType: ServiceCredentials.UseIdentityConfiguration
- uid: System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: UserNameAuthentication
  nameWithType: ServiceCredentials.UserNameAuthentication
- uid: System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication*
  parent: System.ServiceModel.Description.ServiceCredentials
  isExternal: false
  name: WindowsAuthentication
  nameWithType: ServiceCredentials.WindowsAuthentication
