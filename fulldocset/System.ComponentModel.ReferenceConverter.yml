### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ReferenceConverter
  id: ReferenceConverter
  children:
  - System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  - System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  langs:
  - csharp
  name: ReferenceConverter
  nameWithType: ReferenceConverter
  fullName: System.ComponentModel.ReferenceConverter
  type: Class
  summary: "Provides a type converter to convert object references to and from other representations."
  remarks: "The ReferenceConverter is typically used within the context of sited components or a design environment. Without a component site or a usable <xref:System.ComponentModel.ITypeDescriptorContext>, this converter is of little use.       This converter converts a reference of an object that implements the <xref:System.ComponentModel.IComponent> interface and displays its properties in the **Properties** window.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  You should never create an instance of the ReferenceConverter class. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.       This class provides the <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> method to check whether a particular value can be added to the standard values collection. If you do not want to add the value to the collection, override this method."
  syntax:
    content: 'public class ReferenceConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ReferenceConverter(Type)
  nameWithType: ReferenceConverter.ReferenceConverter(Type)
  fullName: System.ComponentModel.ReferenceConverter.ReferenceConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.ReferenceConverter&quot;></xref> class."
  syntax:
    content: public ReferenceConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type> that represents the type to associate with this reference converter."
  overload: System.ComponentModel.ReferenceConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets a value indicating whether this converter can convert an object in the given source type to a reference object using the specified context."
  remarks: "The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type> that represents the type you wish to convert from."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this object can perform the conversion; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.ReferenceConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converts the given object to the reference type."
  remarks: "The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> that specifies the culture used to represent the font."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to convert."
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the converted <code>value</code>."
  overload: System.ComponentModel.ReferenceConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be performed."
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converts the given value object to the reference type using the specified context and arguments."
  remarks: "This method most commonly converts types to and from string objects.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> that specifies the culture used to represent the font."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to convert."
    - id: destinationType
      type: System.Type
      description: "The type to convert the object to."
    return:
      type: System.Object
      description: "The converted object."
  overload: System.ComponentModel.ReferenceConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be performed."
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets a collection of standard values for the reference data type."
  remarks: "The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the data type does not support a standard set of values."
  overload: System.ComponentModel.ReferenceConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets a value indicating whether the list of standard values returned from <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*> is an exclusive list."
  remarks: "The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> because the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*> is an exhaustive list of possible values. This method never returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets a value indicating whether this object supports a standard set of values that can be picked from a list."
  remarks: "The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides a format context."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> because <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*> can be called to find a common set of values the object supports. This method never returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: IsValueAllowed(ITypeDescriptorContext,Object)
  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Returns a value indicating whether a particular value can be added to the standard values collection."
  remarks: "This method is called for each value that matches the type associated with this <xref:System.ComponentModel.ReferenceConverter> and for each component found that is of the associated type. By default, this method returns `true`, that is, it allows adding the value into the standard values collection."
  syntax:
    content: protected virtual bool IsValueAllowed (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides an additional context."
    - id: value
      type: System.Object
      description: "The value to check."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the value is allowed and can be added to the standard values collection; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the value cannot be added to the standard values collection."
  overload: System.ComponentModel.ReferenceConverter.IsValueAllowed*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ReferenceConverter(Type)
  nameWithType: ReferenceConverter.ReferenceConverter(Type)
  fullName: System.ComponentModel.ReferenceConverter.ReferenceConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: IsValueAllowed(ITypeDescriptorContext,Object)
  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.ReferenceConverter.#ctor*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ReferenceConverter
  nameWithType: ReferenceConverter.ReferenceConverter
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: ReferenceConverter.CanConvertFrom
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: ReferenceConverter.ConvertFrom
- uid: System.ComponentModel.ReferenceConverter.ConvertTo*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertTo
  nameWithType: ReferenceConverter.ConvertTo
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: ReferenceConverter.GetStandardValues
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: ReferenceConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: ReferenceConverter.GetStandardValuesSupported
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: IsValueAllowed
  nameWithType: ReferenceConverter.IsValueAllowed
