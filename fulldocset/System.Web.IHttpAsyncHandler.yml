### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpAsyncHandler
  id: IHttpAsyncHandler
  children:
  - System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  langs:
  - csharp
  name: IHttpAsyncHandler
  nameWithType: IHttpAsyncHandler
  fullName: System.Web.IHttpAsyncHandler
  type: Interface
  summary: "Define o contrato que tem de implementar objetos de processador assíncrono de HTTP."
  remarks: "Uma classe de IHttpAsyncHandler pode ser associada com uma extensão de nome de ficheiro ou de um determinado URL por um ficheiro de configuração, no `httpHandlers` secção de configuração. Infraestrutura do ASP.NET, em seguida, irá instanciar e chame o processador quando é recebido o pedido correspondente. Em alternativa, o processador pode ser definido num ficheiro .ashx e quando é recebido o pedido correspondente para o ficheiro de .ashx que o incorporado será executado."
  syntax:
    content: 'public interface IHttpAsyncHandler : System.Web.IHttpHandler'
  implements:
  - System.Web.IHttpHandler
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicia uma chamada assíncrona para o processador HTTP."
  syntax:
    content: public IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que fornece as referências a objetos intrínsecos do servidor (por exemplo, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) utilizado para pedidos HTTP de serviço."
    - id: cb
      type: System.AsyncCallback
      description: "O <xref:System.AsyncCallback>chamar depois de concluída a chamada de método assíncronas.</xref:System.AsyncCallback> Se `cb` é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o delegado não está a ser chamado."
    - id: extraData
      type: System.Object
      description: "Quaisquer dados adicionais necessárias para processar o pedido."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que contém informações sobre o estado do processo.</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornece um método de fim do processo assíncrona quando o processo termina."
  remarks: "Pode utilizar EndProcessRequest para emitir quaisquer exceções detetadas durante o processo de assíncrono."
  syntax:
    content: public void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que contém informações sobre o estado do processo.</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: IHttpAsyncHandler.BeginProcessRequest
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: IHttpAsyncHandler.EndProcessRequest
