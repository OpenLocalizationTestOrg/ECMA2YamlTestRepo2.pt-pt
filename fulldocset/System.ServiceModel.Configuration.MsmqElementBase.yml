### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.MsmqElementBase
  id: MsmqElementBase
  children:
  - System.ServiceModel.Configuration.MsmqElementBase.#ctor
  - System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue
  - System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue
  - System.ServiceModel.Configuration.MsmqElementBase.Durable
  - System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce
  - System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles
  - System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity
  - System.ServiceModel.Configuration.MsmqElementBase.Properties
  - System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled
  - System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling
  - System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount
  - System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay
  - System.ServiceModel.Configuration.MsmqElementBase.TimeToLive
  - System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing
  - System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal
  - System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration
  langs:
  - csharp
  name: MsmqElementBase
  nameWithType: MsmqElementBase
  fullName: System.ServiceModel.Configuration.MsmqElementBase
  type: Class
  summary: "Provides the base class with members common to the <xref href=&quot;System.ServiceModel.Configuration.MsmqIntegrationElement&quot;></xref> and <xref href=&quot;System.ServiceModel.Configuration.MsmqTransportElement&quot;></xref>."
  syntax:
    content: 'public abstract class MsmqElementBase : System.ServiceModel.Configuration.TransportElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  - System.ServiceModel.Configuration.TransportElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.BindingElementExtensionElement.BindingElementType
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.ServiceModel.Configuration.TransportElement.CreateBindingElement
  - System.ServiceModel.Configuration.TransportElement.CreateDefaultBindingElement
  - System.ServiceModel.Configuration.TransportElement.ManualAddressing
  - System.ServiceModel.Configuration.TransportElement.MaxBufferPoolSize
  - System.ServiceModel.Configuration.TransportElement.MaxReceivedMessageSize
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: MsmqElementBase()
  nameWithType: MsmqElementBase.MsmqElementBase()
  fullName: System.ServiceModel.Configuration.MsmqElementBase.MsmqElementBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.MsmqElementBase&quot;></xref> class."
  syntax:
    content: protected MsmqElementBase ();
    parameters: []
  overload: System.ServiceModel.Configuration.MsmqElementBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: MsmqElementBase.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Applies the settings of this binding element to a specified binding element."
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "A binding element that contains the settings to be applied."
  overload: System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: MsmqElementBase.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Copies settings from a specified <xref href=&quot;System.ServiceModel.Configuration.ServiceModelExtensionElement&quot;></xref> to this binding element."
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "The <xref href=&quot;System.ServiceModel.Configuration.ServiceModelExtensionElement&quot;></xref> that contains the values to be copied."
  overload: System.ServiceModel.Configuration.MsmqElementBase.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue
  id: CustomDeadLetterQueue
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: CustomDeadLetterQueue
  nameWithType: MsmqElementBase.CustomDeadLetterQueue
  fullName: System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a URI that contains the location of the per-application dead-letter queue, where messages that have expired or that have failed transfer or delivery are placed."
  remarks: "The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.       The URI that is specified by <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must use the Net.msmq scheme.       If <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue> or <xref:System.ServiceModel.DeadLetterQueue>, then <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must be set to `null`. If <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue>."
  syntax:
    content: public Uri CustomDeadLetterQueue { get; set; }
    return:
      type: System.Uri
      description: "The <xref:System.Uri> that contains the location of the per-application dead-letter queue. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue
  id: DeadLetterQueue
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: DeadLetterQueue
  nameWithType: MsmqElementBase.DeadLetterQueue
  fullName: System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets an enumeration value that indicates the type of dead-letter queue to use."
  remarks: "The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered. The dead-letter queue enumeration specifies the type of dead-letter queue to use. The values are:      -   None: If no dead-letter queue is required. Thus, if a message were to fail delivery, no record of it would be maintained in the dead-letter queue. This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `false`.      -   System: The system-wide dead-letter queue would be used to record messages that fail delivery. Message Queuing (also known as MSMQ) has a transactional system dead-letter queue and a nontransactional system dead-letter queue to record messages that failed delivery from transactional and nontransactional queues, respectively. This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`.      -   Custom: The queue specified in the <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is used to record messages that fail delivery.       The reasons that a message can fail to reach the receiving application include:      -   A transactional message is sent to a nontransactional queue.      -   A nontransactional message is sent to a transactional queue.      -   An unauthenticated message is sent to a queue that accepts only authenticated messages.      -   An unencrypted message is sent to a queue that accepts only encrypted messages.      -   The message expires before the message is delivered to a receiver.      -   The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.      -   The sender does not have the access rights needed to place the message in the destination queue.      -   The digital signature attached to the message is not valid.      -   An encrypted message cannot be decrypted by the destination queue manager.      -   The destination queue is purged or deleted before the message is retrieved."
  syntax:
    content: public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }
    return:
      type: System.ServiceModel.DeadLetterQueue
      description: "A <xref href=&quot;System.ServiceModel.DeadLetterQueue&quot;></xref> enumeration value that indicates the type of dead-letter queue to use."
  overload: System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.Durable
  id: Durable
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: Durable
  nameWithType: MsmqElementBase.Durable
  fullName: System.ServiceModel.Configuration.MsmqElementBase.Durable
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile."
  remarks: "A durable message survives a queue manager crash, while a volatile message does not. Volatile messages are useful when applications can tolerate occasional lost messages.       If <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`, the messages must be durable."
  syntax:
    content: public bool Durable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the messages processed by this binding are durable; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if they are volatile. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.MsmqElementBase.Durable*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce
  id: ExactlyOnce
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: ExactlyOnce
  nameWithType: MsmqElementBase.ExactlyOnce
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a Boolean value that indicates whether messages processed by this binding will be received exactly once."
  remarks: "A message can be sent with or without assurances. An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead-letter queue.       Messages sent with <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> set to `true` must be sent only to a transactional queue.       <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (also known as MSMQ) will ensure that a sent message is delivered to the receiving message queue once and only once, and if delivery fails, the message is sent to the dead-letter queue.       For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `false`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to `null`.       For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `true`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to a transactional system-wide dead-letter queue in Message Queuing."
  syntax:
    content: public bool ExactlyOnce { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if messages processed by this binding will be received exactly once; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: MsmqElementBase.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes this binding element with the content from the specified binding element."
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "A binding element that contains the settings to be used to initialize this binding element."
  overload: System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles
  id: MaxRetryCycles
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: MaxRetryCycles
  nameWithType: MsmqElementBase.MaxRetryCycles
  fullName: System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application."
  remarks: "A single retry cycle attempts to deliver a message to an application a specified number of times. The number of attempts made is set by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property. If the application fails to consume the message after the attempts at delivery have been exhausted, the message is sent to a retry queue. Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property. The <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property specifies the number of retry cycles that the application uses to attempt to deliver the message."
  syntax:
    content: public int MaxRetryCycles { get; set; }
    return:
      type: System.Int32
      description: "An integer that indicates the maximum number of retry cycles to attempt delivery of messages to the application. The default value is 2."
  overload: System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity
  id: MsmqTransportSecurity
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: MsmqTransportSecurity
  nameWithType: MsmqElementBase.MsmqTransportSecurity
  fullName: System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets an <xref href=&quot;System.ServiceModel.Configuration.MsmqTransportSecurityElement&quot;></xref> instance that encapsulates the transport security settings for a binding."
  syntax:
    content: public System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity { get; }
    return:
      type: System.ServiceModel.Configuration.MsmqTransportSecurityElement
      description: "An <xref href=&quot;System.ServiceModel.Configuration.MsmqTransportSecurityElement&quot;></xref> instance that encapsulates the transport security settings for a binding."
  overload: System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: Properties
  nameWithType: MsmqElementBase.Properties
  fullName: System.ServiceModel.Configuration.MsmqElementBase.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets a <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;></xref> instance that contains a collection of <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> objects that can be attributes or <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> objects of this configuration element."
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;></xref> instance that contains a collection of <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> objects that can be attributes or <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> objects of this binding configuration element."
  overload: System.ServiceModel.Configuration.MsmqElementBase.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled
  id: ReceiveContextEnabled
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: ReceiveContextEnabled
  nameWithType: MsmqElementBase.ReceiveContextEnabled
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that specifies if receive context for processing messages in queues is enabled."
  remarks: "When this is `true`, a service can “peek” a message on the queue to begin processing it, and, if anything goes wrong and an exception is thrown, it remains on the queue. Services can also “lock” messages in order to retry processing at a later point in time. ReceiveContext provides a mechanism for “completing” the message once processed so it can be removed from the queue. Messages are no longer being read and re-written to queues over the network, and individual messages aren’t bouncing across different service instances during processing."
  syntax:
    content: public bool ReceiveContextEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if receive context for processing messages in queues is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling
  id: ReceiveErrorHandling
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: ReceiveErrorHandling
  nameWithType: MsmqElementBase.ReceiveErrorHandling
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets an enumeration value that specifies how poison and nondispatchable messages are handled."
  remarks: "When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling>, the channel listener is faulted and a <xref:System.ServiceModel.ProtocolException> (wrapping a <xref:System.ServiceModel.MsmqPoisonMessageException>) is traced and thrown. The offending message is left in the queue and needs to be removed by some manual method. The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the offending message from the poison-message queue.       When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling>, the offending message is simply dropped.       When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling>, a negative acknowledgment is sent to the client and the offending message is removed from the poison-message queue. This option is available only on Message Queuing (also known as MSMQ) 4.0.       When set to <xref:System.ServiceModel.ReceiveErrorHandling>, the offending message is moved to the final poison subqueue. This option is available only on Message Queuing 4.0."
  syntax:
    content: public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }
    return:
      type: System.ServiceModel.ReceiveErrorHandling
      description: "A <xref href=&quot;System.ServiceModel.ReceiveErrorHandling&quot;></xref> value that specifies how poison and nondispatchable messages are handled."
  overload: System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount
  id: ReceiveRetryCount
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: ReceiveRetryCount
  nameWithType: MsmqElementBase.ReceiveRetryCount
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue."
  remarks: "If the maximum number of delivery attempts is reached and the message is not consumed by the application, then the message is sent to a retry queue for redelivery at some later point in time. The amount of time before the message is transferred back to the sending queue is controlled by <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>. If retry cycles reach the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> value, then either the message is sent to the poison-message queue, or a negative acknowledgment is sent back to the sender.       For more information, see <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>."
  syntax:
    content: public int ReceiveRetryCount { get; set; }
    return:
      type: System.Int32
      description: "A 32-bit signed integer that specifies the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue."
  overload: System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay
  id: RetryCycleDelay
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: RetryCycleDelay
  nameWithType: MsmqElementBase.RetryCycleDelay
  fullName: System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that could not be delivered immediately."
  remarks: "A single retry cycle attempts to deliver a message to a receiving application a specified number of times. The number of attempts made is specified by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property. If the application fails to consume the message after the specified number of immediate retries, the message is sent to a retry queue. Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property. The number of retry cycles is specified by the <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property."
  syntax:
    content: public TimeSpan RetryCycleDelay { get; set; }
    return:
      type: System.TimeSpan
      description: "The <xref:System.TimeSpan> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application. The default value is &quot;00:10:00&quot;."
  overload: System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.TimeToLive
  id: TimeToLive
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: TimeToLive
  nameWithType: MsmqElementBase.TimeToLive
  fullName: System.ServiceModel.Configuration.MsmqElementBase.TimeToLive
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire."
  remarks: "The <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> property is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications. A message in a queue that is not consumed by the receiving application within the time interval specified is said to be expired. Expired messages are sent to a special queue called the dead-letter queue. The location of the dead-letter queue is set with the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property or to the appropriate default, based on assurances."
  syntax:
    content: public TimeSpan TimeToLive { get; set; }
    return:
      type: System.TimeSpan
      description: "The <xref:System.TimeSpan> that indicates how long the messages can be in the queue before they expire. The default value is one day (01:00:00:00)."
  overload: System.ServiceModel.Configuration.MsmqElementBase.TimeToLive*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing
  id: UseMsmqTracing
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: UseMsmqTracing
  nameWithType: MsmqElementBase.UseMsmqTracing
  fullName: System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a Boolean value that indicates whether messages processed by this binding should be traced."
  remarks: "When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a computer running Message Queuing (also known as MSMQ)."
  syntax:
    content: public bool UseMsmqTracing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if messages processed by this binding should be traced; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal
  id: UseSourceJournal
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: UseSourceJournal
  nameWithType: MsmqElementBase.UseSourceJournal
  fullName: System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a Boolean value that indicates whether copies of messages processed by this binding should be stored in the source journal queue."
  remarks: "Queued applications that must keep a record of messages that have left the computer&quot;s outgoing queue can copy the messages to a journal queue. Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer&quot;s system journal queue."
  syntax:
    content: public bool UseSourceJournal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if copies of messages processed by this binding should be stored in the source journal queue; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration
  id: ValidityDuration
  parent: System.ServiceModel.Configuration.MsmqElementBase
  langs:
  - csharp
  name: ValidityDuration
  nameWithType: MsmqElementBase.ValidityDuration
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that specifies a connection time-out when used with queued channels."
  remarks: >-
    > [!IMPORTANT]

    >  If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.
  syntax:
    content: public TimeSpan ValidityDuration { get; set; }
    return:
      type: System.TimeSpan
      description: "A connection time-out when used with queued channels."
  overload: System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.TransportElement
  isExternal: false
  name: System.ServiceModel.Configuration.TransportElement
- uid: System.ServiceModel.Configuration.MsmqElementBase.#ctor
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: MsmqElementBase()
  nameWithType: MsmqElementBase.MsmqElementBase()
  fullName: System.ServiceModel.Configuration.MsmqElementBase.MsmqElementBase()
- uid: System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: MsmqElementBase.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: MsmqElementBase.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: CustomDeadLetterQueue
  nameWithType: MsmqElementBase.CustomDeadLetterQueue
  fullName: System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: DeadLetterQueue
  nameWithType: MsmqElementBase.DeadLetterQueue
  fullName: System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue
- uid: System.ServiceModel.DeadLetterQueue
  parent: System.ServiceModel
  isExternal: false
  name: DeadLetterQueue
  nameWithType: DeadLetterQueue
  fullName: System.ServiceModel.DeadLetterQueue
- uid: System.ServiceModel.Configuration.MsmqElementBase.Durable
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: Durable
  nameWithType: MsmqElementBase.Durable
  fullName: System.ServiceModel.Configuration.MsmqElementBase.Durable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ExactlyOnce
  nameWithType: MsmqElementBase.ExactlyOnce
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce
- uid: System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: MsmqElementBase.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: MaxRetryCycles
  nameWithType: MsmqElementBase.MaxRetryCycles
  fullName: System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: MsmqTransportSecurity
  nameWithType: MsmqElementBase.MsmqTransportSecurity
  fullName: System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity
- uid: System.ServiceModel.Configuration.MsmqTransportSecurityElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: MsmqTransportSecurityElement
  nameWithType: MsmqTransportSecurityElement
  fullName: System.ServiceModel.Configuration.MsmqTransportSecurityElement
- uid: System.ServiceModel.Configuration.MsmqElementBase.Properties
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: Properties
  nameWithType: MsmqElementBase.Properties
  fullName: System.ServiceModel.Configuration.MsmqElementBase.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: MsmqElementBase.ReceiveContextEnabled
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ReceiveErrorHandling
  nameWithType: MsmqElementBase.ReceiveErrorHandling
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling
- uid: System.ServiceModel.ReceiveErrorHandling
  parent: System.ServiceModel
  isExternal: false
  name: ReceiveErrorHandling
  nameWithType: ReceiveErrorHandling
  fullName: System.ServiceModel.ReceiveErrorHandling
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ReceiveRetryCount
  nameWithType: MsmqElementBase.ReceiveRetryCount
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount
- uid: System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: RetryCycleDelay
  nameWithType: MsmqElementBase.RetryCycleDelay
  fullName: System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Configuration.MsmqElementBase.TimeToLive
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: TimeToLive
  nameWithType: MsmqElementBase.TimeToLive
  fullName: System.ServiceModel.Configuration.MsmqElementBase.TimeToLive
- uid: System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: UseMsmqTracing
  nameWithType: MsmqElementBase.UseMsmqTracing
  fullName: System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing
- uid: System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: UseSourceJournal
  nameWithType: MsmqElementBase.UseSourceJournal
  fullName: System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal
- uid: System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ValidityDuration
  nameWithType: MsmqElementBase.ValidityDuration
  fullName: System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration
- uid: System.ServiceModel.Configuration.MsmqElementBase.#ctor*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: MsmqElementBase
  nameWithType: MsmqElementBase.MsmqElementBase
- uid: System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ApplyConfiguration
  nameWithType: MsmqElementBase.ApplyConfiguration
- uid: System.ServiceModel.Configuration.MsmqElementBase.CopyFrom*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: CopyFrom
  nameWithType: MsmqElementBase.CopyFrom
- uid: System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: CustomDeadLetterQueue
  nameWithType: MsmqElementBase.CustomDeadLetterQueue
- uid: System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: DeadLetterQueue
  nameWithType: MsmqElementBase.DeadLetterQueue
- uid: System.ServiceModel.Configuration.MsmqElementBase.Durable*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: Durable
  nameWithType: MsmqElementBase.Durable
- uid: System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ExactlyOnce
  nameWithType: MsmqElementBase.ExactlyOnce
- uid: System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: InitializeFrom
  nameWithType: MsmqElementBase.InitializeFrom
- uid: System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: MaxRetryCycles
  nameWithType: MsmqElementBase.MaxRetryCycles
- uid: System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: MsmqTransportSecurity
  nameWithType: MsmqElementBase.MsmqTransportSecurity
- uid: System.ServiceModel.Configuration.MsmqElementBase.Properties*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: Properties
  nameWithType: MsmqElementBase.Properties
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: MsmqElementBase.ReceiveContextEnabled
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ReceiveErrorHandling
  nameWithType: MsmqElementBase.ReceiveErrorHandling
- uid: System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ReceiveRetryCount
  nameWithType: MsmqElementBase.ReceiveRetryCount
- uid: System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: RetryCycleDelay
  nameWithType: MsmqElementBase.RetryCycleDelay
- uid: System.ServiceModel.Configuration.MsmqElementBase.TimeToLive*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: TimeToLive
  nameWithType: MsmqElementBase.TimeToLive
- uid: System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: UseMsmqTracing
  nameWithType: MsmqElementBase.UseMsmqTracing
- uid: System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: UseSourceJournal
  nameWithType: MsmqElementBase.UseSourceJournal
- uid: System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration*
  parent: System.ServiceModel.Configuration.MsmqElementBase
  isExternal: false
  name: ValidityDuration
  nameWithType: MsmqElementBase.ValidityDuration
