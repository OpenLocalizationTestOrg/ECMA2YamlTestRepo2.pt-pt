### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XmlLanguage
  id: XmlLanguage
  children:
  - System.Windows.Markup.XmlLanguage.Empty
  - System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  - System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  - System.Windows.Markup.XmlLanguage.GetSpecificCulture
  - System.Windows.Markup.XmlLanguage.IetfLanguageTag
  - System.Windows.Markup.XmlLanguage.ToString
  langs:
  - csharp
  name: XmlLanguage
  nameWithType: XmlLanguage
  fullName: System.Windows.Markup.XmlLanguage
  type: Class
  summary: "Represents a language tag for use in XAML markup."
  remarks: "The language tag may or may not have a registered <xref:System.Globalization.CultureInfo> present on the system where the XAML is interpreted.       This class is useful for dealing with values represented using `xml:lang` in XML.       Language tags can be specified in two-character form or in a hyphenated language-locale form. See [RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454).       Note that the XML specification allows the empty string for `xml:lang`, although that is not permitted by RFC 3066; therefore, the XmlLanguage type permits &quot;&quot; (empty attribute string). A default-constructed XmlLanguage behaves as if constructed with &quot;&quot; (empty string).      <a name=&quot;xamlAttributeUsage_XmlLanguage&quot;></a>    ## XAML Attribute Usage      ```   <object property=&quot;prefix&quot;/>   - or -   <object property=&quot;prefix-subcode&quot;/>   ```      <a name=&quot;xamlValues_XmlLanguage&quot;></a>    ## XAML Values    *prefix*    Language prefix, using the ISO 639-1 language prefix values. For example &quot;en&quot;, or &quot;zh&quot;. Uppercase values are accepted and converted to lowercase. This may also be an empty attribute, &quot;&quot;.       *subcode*    If provided, must be preceded by a single hyphen. Then, a subcode as defined by RFC 3066. The most typical usage, and the one which is most likely to properly map to a <xref:System.Globalization.CultureInfo>, is a country or regional designation such as &quot;-us&quot; or &quot;-hk&quot;. Uppercase values are accepted and converted to lowercase."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))]

      public class XmlLanguage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.Empty
  id: Empty
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: Empty
  nameWithType: XmlLanguage.Empty
  fullName: System.Windows.Markup.XmlLanguage.Empty
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "Gets a static <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref> instance as would be created by <xref:System.Windows.Markup.XmlLanguage.GetLanguage*> with the language tag as an empty attribute string."
  remarks: "This value is in effect the <xref:System.Windows.Markup.XmlLanguage> corresponding to <xref:System.String.Empty?displayProperty=fullName>, whose <xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A> result is <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>."
  syntax:
    content: public static System.Windows.Markup.XmlLanguage Empty { get; }
    return:
      type: System.Windows.Markup.XmlLanguage
      description: "The empty language tag version of <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>, for use in comparison operations."
  overload: System.Windows.Markup.XmlLanguage.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  id: GetEquivalentCulture
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetEquivalentCulture()
  nameWithType: XmlLanguage.GetEquivalentCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "Returns the appropriate equivalent <xref:System.Globalization.CultureInfo> for this <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>, if and only if such a <xref:System.Globalization.CultureInfo> is registered for the <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*> value of this <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>"
  remarks: "If no equivalent <xref:System.Globalization.CultureInfo> can be produced, this method raises an exception. If you do not wish to handle exceptions, call <xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A> instead."
  syntax:
    content: public System.Globalization.CultureInfo GetEquivalentCulture ();
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> that can be used for localization-globalization API calls that take that type as an argument."
  overload: System.Windows.Markup.XmlLanguage.GetEquivalentCulture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No registered <xref:System.Globalization.CultureInfo> for the provided <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref> exists, as determined by a call to <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag*>."
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  id: GetLanguage(System.String)
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetLanguage(String)
  nameWithType: XmlLanguage.GetLanguage(String)
  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "Returns a <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref> instance, based on a string representing the language per RFC 3066."
  remarks: "This method is effectively the constructor.       The language string may be empty, or else must conform to [RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454) rules:      -   The first subtag must consist of only [!INCLUDE[TLA#tla_ascii](~/add/includes/tlasharptla-ascii-md.md)] letters.      -   Additional subtags must consist [!INCLUDE[TLA#tla_ascii](~/add/includes/tlasharptla-ascii-md.md)] letters or numerals.      -   Subtags are separated by a single hyphen character.      -   Every subtag must be 1 to 8 characters long.      -   No leading or trailing hyphens are permitted."
  syntax:
    content: public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);
    parameters:
    - id: ietfLanguageTag
      type: System.String
      description: "An RFC 3066 language string, or empty string."
    return:
      type: System.Windows.Markup.XmlLanguage
      description: "A new <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref> with the provided string as its <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*> value."
  overload: System.Windows.Markup.XmlLanguage.GetLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ietfLanguageTag</code> parameter cannot be null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ietfLanguageTag</code> parameter was non-empty, but did not conform to the syntax specified in RFC 3066. See Remarks."
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture
  id: GetSpecificCulture
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: GetSpecificCulture()
  nameWithType: XmlLanguage.GetSpecificCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "Returns the most-closely-related non-neutral <xref:System.Globalization.CultureInfo> for this <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>."
  remarks: "If this <xref:System.Windows.Markup.XmlLanguage> is equal to <xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=fullName> then this method will return <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.       This method finds the registered <xref:System.Globalization.CultureInfo> matching the longest-possible prefix of this <xref:System.Windows.Markup.XmlLanguage>. If that registered <xref:System.Globalization.CultureInfo> is neutral (<xref:System.Globalization.CultureInfo.IsNeutralCulture%2A> is `true`), then this method relies on a call to <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> to map from a neutral <xref:System.Globalization.CultureInfo> to a specific one."
  syntax:
    content: public System.Globalization.CultureInfo GetSpecificCulture ();
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> that can be used for localization-globalization [!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)] calls that take that type as an argument."
  overload: System.Windows.Markup.XmlLanguage.GetSpecificCulture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No related non-neutral <xref:System.Globalization.CultureInfo> is registered for the current <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref> <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag*>."
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  id: IetfLanguageTag
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "Gets the string representation of the language tag."
  remarks: "This property may return a normalized version of the originally-specified string as provided to <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>.       This property may also return <xref:System.String.Empty> if an empty string was provided to <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>."
  syntax:
    content: public string IetfLanguageTag { get; }
    return:
      type: System.String
      description: "The string representation of the language tag."
  overload: System.Windows.Markup.XmlLanguage.IetfLanguageTag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XmlLanguage.ToString
  id: ToString
  parent: System.Windows.Markup.XmlLanguage
  langs:
  - csharp
  name: ToString()
  nameWithType: XmlLanguage.ToString()
  fullName: System.Windows.Markup.XmlLanguage.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Markup
  summary: "Returns a <xref:System.String> that represents the current <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>."
  remarks: "This returns the <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A> value of the current <xref:System.Windows.Markup.XmlLanguage>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> that represents the current <xref href=&quot;System.Windows.Markup.XmlLanguage&quot;></xref>."
  overload: System.Windows.Markup.XmlLanguage.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Markup.XmlLanguage.Empty
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: Empty
  nameWithType: XmlLanguage.Empty
  fullName: System.Windows.Markup.XmlLanguage.Empty
- uid: System.Windows.Markup.XmlLanguage
  parent: System.Windows.Markup
  isExternal: false
  name: XmlLanguage
  nameWithType: XmlLanguage
  fullName: System.Windows.Markup.XmlLanguage
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetEquivalentCulture()
  nameWithType: XmlLanguage.GetEquivalentCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetLanguage(String)
  nameWithType: XmlLanguage.GetLanguage(String)
  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetSpecificCulture()
  nameWithType: XmlLanguage.GetSpecificCulture()
  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag
- uid: System.Windows.Markup.XmlLanguage.ToString
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: ToString()
  nameWithType: XmlLanguage.ToString()
  fullName: System.Windows.Markup.XmlLanguage.ToString()
- uid: System.Windows.Markup.XmlLanguage.Empty*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: Empty
  nameWithType: XmlLanguage.Empty
- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetEquivalentCulture
  nameWithType: XmlLanguage.GetEquivalentCulture
- uid: System.Windows.Markup.XmlLanguage.GetLanguage*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetLanguage
  nameWithType: XmlLanguage.GetLanguage
- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: GetSpecificCulture
  nameWithType: XmlLanguage.GetSpecificCulture
- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: IetfLanguageTag
  nameWithType: XmlLanguage.IetfLanguageTag
- uid: System.Windows.Markup.XmlLanguage.ToString*
  parent: System.Windows.Markup.XmlLanguage
  isExternal: false
  name: ToString
  nameWithType: XmlLanguage.ToString
