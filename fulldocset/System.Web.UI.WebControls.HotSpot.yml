### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.HotSpot
  id: HotSpot
  children:
  - System.Web.UI.WebControls.HotSpot.#ctor
  - System.Web.UI.WebControls.HotSpot.AccessKey
  - System.Web.UI.WebControls.HotSpot.AlternateText
  - System.Web.UI.WebControls.HotSpot.GetCoordinates
  - System.Web.UI.WebControls.HotSpot.HotSpotMode
  - System.Web.UI.WebControls.HotSpot.IsTrackingViewState
  - System.Web.UI.WebControls.HotSpot.LoadViewState(System.Object)
  - System.Web.UI.WebControls.HotSpot.MarkupName
  - System.Web.UI.WebControls.HotSpot.NavigateUrl
  - System.Web.UI.WebControls.HotSpot.PostBackValue
  - System.Web.UI.WebControls.HotSpot.SaveViewState
  - System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.HotSpot.TabIndex
  - System.Web.UI.WebControls.HotSpot.Target
  - System.Web.UI.WebControls.HotSpot.ToString
  - System.Web.UI.WebControls.HotSpot.TrackViewState
  - System.Web.UI.WebControls.HotSpot.ViewState
  langs:
  - csharp
  name: HotSpot
  nameWithType: HotSpot
  fullName: System.Web.UI.WebControls.HotSpot
  type: Class
  summary: "Implements the basic functionality common to all hot spot shapes."
  remarks: "You cannot directly create instances of the abstract HotSpot class. Instead, this class is inherited by the <xref:System.Web.UI.WebControls.CircleHotSpot>, <xref:System.Web.UI.WebControls.RectangleHotSpot>, and <xref:System.Web.UI.WebControls.PolygonHotSpot> classes to provide the common basic functionality for a hot spot. You must derive from the HotSpot class to create a custom hot spot class that represents a unique shape that you define. However, you can define most shapes using the <xref:System.Web.UI.WebControls.CircleHotSpot>, <xref:System.Web.UI.WebControls.RectangleHotSpot>, and <xref:System.Web.UI.WebControls.PolygonHotSpot> classes.       When a HotSpot in an <xref:System.Web.UI.WebControls.ImageMap> control is clicked, the page either navigates to a URL, generates a postback to the server, or does nothing. The <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property specifies this behavior. To navigate to a URL, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.Navigate`. Use the <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> property to specify the URL to navigate to. To post back to the server, set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.PostBack`. Use the <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> property to specify a name for the HotSpot object. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data when the HotSpot object is clicked. If you want the HotSpot object to have no behavior set the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property to `HotSpotMode.Inactive`.       Alternately, you can use the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the containing <xref:System.Web.UI.WebControls.ImageMap> control to specify a HotSpot object&quot;s behavior. For more information, see <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A>."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public abstract class HotSpot : System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: HotSpot()
  nameWithType: HotSpot.HotSpot()
  fullName: System.Web.UI.WebControls.HotSpot.HotSpot()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> class."
  remarks: "This constructor is called by derived class constructors to initialize state in this type. The <xref:System.Web.UI.WebControls.HotSpot> class is abstract and therefore cannot be instantiated directly."
  syntax:
    content: protected HotSpot ();
    parameters: []
  overload: System.Web.UI.WebControls.HotSpot.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.AccessKey
  id: AccessKey
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: AccessKey
  nameWithType: HotSpot.AccessKey
  fullName: System.Web.UI.WebControls.HotSpot.AccessKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the access key that allows you to quickly navigate to the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region."
  remarks: "Use the AccessKey property to specify the keyboard shortcut for a <xref:System.Web.UI.WebControls.HotSpot> region. This allows you to navigate quickly to the region by pressing the ALT key and the key for the specified character on the keyboard. For example, setting the access key of a <xref:System.Web.UI.WebControls.HotSpot> region to the string &quot;D&quot; indicates that the user can navigate to the control by pressing ALT+D.       Only a single character string is allowed for the AccessKey property. If you attempt to set this property to a value that is neither `null`, <xref:System.String.Empty>, nor a single character string, an exception is thrown.      > [!NOTE] >  This property is supported only in Internet Explorer 4.0 and later.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual string AccessKey { get; set; }
    return:
      type: System.String
      description: "The access key for quick navigation to the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region. The default value is <xref:System.String.Empty>, which indicates that this property is not set."
  overload: System.Web.UI.WebControls.HotSpot.AccessKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified access key is neither <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, an empty string (&quot;&quot;), nor a single character string."
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.AlternateText
  id: AlternateText
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: AlternateText
  nameWithType: HotSpot.AlternateText
  fullName: System.Web.UI.WebControls.HotSpot.AlternateText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the alternate text to display for a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object in an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control when the image is unavailable or renders to a browser that does not support images."
  remarks: "Use the AlternateText property to specify the text to display for a <xref:System.Web.UI.WebControls.HotSpot> object in an <xref:System.Web.UI.WebControls.ImageMap> control when the image specified by the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property is unavailable.       When an <xref:System.Web.UI.WebControls.ImageMap> control is rendered to a browser that does not support images, instead of displaying an image, it renders a hyperlink for each <xref:System.Web.UI.WebControls.HotSpot> in the <xref:System.Web.UI.WebControls.ImageMap> control. The control retrieves the text to display for each hyperlink from the AlternateText property for each <xref:System.Web.UI.WebControls.HotSpot>. When a user clicks one of the hyperlinks, it behaves like a <xref:System.Web.UI.WebControls.HotSpot> by either navigating to a specified URL, generating a postback to the server, or doing nothing.       When the <xref:System.Web.UI.WebControls.ImageMap> control renders to a browser that supports the ToolTips feature, the value of the AlternateText property is displayed as a ToolTip for the <xref:System.Web.UI.WebControls.HotSpot>.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual string AlternateText { get; set; }
    return:
      type: System.String
      description: "The text displayed in place of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> when the <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control&quot;s image is unavailable. The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.HotSpot.AlternateText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.GetCoordinates
  id: GetCoordinates
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: GetCoordinates()
  nameWithType: HotSpot.GetCoordinates()
  fullName: System.Web.UI.WebControls.HotSpot.GetCoordinates()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "When overridden in a derived class, returns a string that represents the coordinates of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region."
  remarks: "When overridden in a derived class, the GetCoordinates method returns the string representation of the coordinates of the <xref:System.Web.UI.WebControls.HotSpot> region."
  syntax:
    content: public abstract string GetCoordinates ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the coordinates of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region."
  overload: System.Web.UI.WebControls.HotSpot.GetCoordinates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.HotSpotMode
  id: HotSpotMode
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: HotSpotMode
  nameWithType: HotSpot.HotSpotMode
  fullName: System.Web.UI.WebControls.HotSpot.HotSpotMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the behavior of a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object in an <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;></xref> control when the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> is clicked."
  remarks: "Use the HotSpotMode property to specify the behavior of a <xref:System.Web.UI.WebControls.HotSpot> object in an <xref:System.Web.UI.WebControls.ImageMap> control when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. This property is set using one of the <xref:System.Web.UI.WebControls.HotSpotMode> enumeration values. The following table lists the possible values.      |Value|Description|   |-----------|-----------------|   |`NotSet`|The <xref:System.Web.UI.WebControls.HotSpot> uses the behavior set by the <xref:System.Web.UI.WebControls.ImageMap> control&quot;s <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property. If the <xref:System.Web.UI.WebControls.ImageMap> control does not define the behavior, the <xref:System.Web.UI.WebControls.HotSpot> objects navigate to a URL.|   |`Inactive`|The <xref:System.Web.UI.WebControls.HotSpot> does not have any behavior.|   |`Navigate`|The <xref:System.Web.UI.WebControls.HotSpot> navigates to a URL.|   |`PostBack`|The <xref:System.Web.UI.WebControls.HotSpot> generates a postback to the server.|       You can specify <xref:System.Web.UI.WebControls.HotSpot> behavior on either the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property of the control or on the HotSpotMode property of each individual <xref:System.Web.UI.WebControls.HotSpot> object. If both properties are set, the HotSpotMode property specified on each individual <xref:System.Web.UI.WebControls.HotSpot> object takes precedence over the <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property on the <xref:System.Web.UI.WebControls.ImageMap> control.       If you specify `HotSpotMode.NotSet` for the HotSpotMode property of an individual <xref:System.Web.UI.WebControls.HotSpot> object, the <xref:System.Web.UI.WebControls.HotSpot> gets its behavior from the containing <xref:System.Web.UI.WebControls.ImageMap> control&quot;s <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property. In this scenario, if the <xref:System.Web.UI.WebControls.ImageMap> control&quot;s <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A> property is either not set to a value or is set to `HotSpotMode.NotSet`, the default behavior is to navigate to a URL.       If you specify `HotSpotMode.Navigate` for the HotSpotMode property of a <xref:System.Web.UI.WebControls.HotSpot> object, the <xref:System.Web.UI.WebControls.HotSpot> object navigates to a URL when the hot spot region is clicked. Use the <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> property to specify the URL to navigate to.       If you specify `HotSpotMode.PostBack` for the HotSpotMode property of a <xref:System.Web.UI.WebControls.HotSpot> object, the <xref:System.Web.UI.WebControls.HotSpot> object generates a post back to the server when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. Use the <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> property to specify a name for the <xref:System.Web.UI.WebControls.HotSpot>. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data on when a postback event occurs. When a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, the <xref:System.Web.UI.WebControls.ImageMap.Click> event is raised. To programmatically control the actions performed when a postback <xref:System.Web.UI.WebControls.HotSpot> is clicked, provide an event handler for the <xref:System.Web.UI.WebControls.ImageMap.Click> event.       To cause all <xref:System.Web.UI.WebControls.HotSpot> objects in an <xref:System.Web.UI.WebControls.ImageMap> control to have the same behavior, set the HotSpotMode property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to `HotSpotMode.NotSet` or do not specify a value for the HotSpotMode property.       To specify different behaviors for <xref:System.Web.UI.WebControls.HotSpot> objects in an <xref:System.Web.UI.WebControls.ImageMap> control, set the HotSpotMode property on each individual <xref:System.Web.UI.WebControls.HotSpot> object to either `HotSpotMode.Navigate`, `HotSpotMode.PostBack`, or `HotSpotMode.Inactive`.      > [!NOTE] >  If an <xref:System.Web.UI.WebControls.ImageMap> control&quot;s <xref:System.Web.UI.WebControls.ImageMap.HotSpotMode%2A?displayProperty=fullName> property or the HotSpotMode property on the <xref:System.Web.UI.WebControls.HotSpot> objects it contains is either not set to a value or set to `HotSpotMode.NotSet`, by default the behavior is `HotSpotMode.Navigate`.       If you specify `HotSpotMode.Inactive` for the HotSpotMode property, the <xref:System.Web.UI.WebControls.HotSpot> object does not have any behavior when it is clicked. You can use this value to create an inactive hot spot within a larger active hot spot. This option is provided to allow you to create more complex hot-spot zones within an <xref:System.Web.UI.WebControls.ImageMap> control.       To create an inactive area within an active hot spot, you must specify the inactive hot spot before the active hot spot in the <xref:System.Web.UI.WebControls.ImageMap> control. For example, the following <xref:System.Web.UI.WebControls.ImageMap> defines an active ring by specifying an inactive circular hot spot within a larger active circular hot spot:      ```   <asp:ImageMap ID=&quot;SaturnImage&quot;      ImageUrl=&quot;~/saturn.PNG&quot;      runat=&quot;server&quot; OnClick=&quot;SaturnImage_Click&quot;>     <asp:CircleHotSpot AlternateText=&quot;planet&quot; HotSpotMode=PostBack       PostBackValue=&quot;planet&quot; Radius=40 X=100 Y=100 />     <asp:CircleHotSpot HotSpotMode=Inactive        Radius=60 X=100 Y=100 />     <asp:CircleHotSpot AlternateText=&quot;rings&quot; HotSpotMode=PostBack       PostBackValue=&quot;rings&quot; Radius=80 X=100 Y=100 />   </asp:ImageMap>   ```"
  syntax:
    content: public virtual System.Web.UI.WebControls.HotSpotMode HotSpotMode { get; set; }
    return:
      type: System.Web.UI.WebControls.HotSpotMode
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.HotSpotMode&quot;></xref> enumeration values. The default is <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.HotSpot.HotSpotMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified type is not one of the <xref href=&quot;System.Web.UI.WebControls.HotSpotMode&quot;></xref> enumeration values."
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: HotSpot.IsTrackingViewState
  fullName: System.Web.UI.WebControls.HotSpot.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object is tracking its view-state changes."
  remarks: "The IsTrackingViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class."
  syntax:
    content: protected virtual bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object is tracking its view-state changes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.HotSpot.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: HotSpot.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.HotSpot.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restores the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s previously saved view state to the object."
  remarks: "This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).       The LoadViewState method is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.       This method restores view-state information for the <xref:System.Web.UI.WebControls.HotSpot> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.HotSpot.SaveViewState%2A> method."
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "An <xref:System.Object> that represents the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object to restore."
  overload: System.Web.UI.WebControls.HotSpot.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.MarkupName
  id: MarkupName
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: MarkupName
  nameWithType: HotSpot.MarkupName
  fullName: System.Web.UI.WebControls.HotSpot.MarkupName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "When overridden in a derived class, gets the string representation for the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s shape."
  remarks: "The MarkupName member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.       When overridden in a derived class, the MarkupName property gets a string that represents the name of the <xref:System.Web.UI.WebControls.HotSpot> object&quot;s shape."
  syntax:
    content: protected abstract string MarkupName { get; }
    return:
      type: System.String
      description: "A string that represents the name of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s shape."
  overload: System.Web.UI.WebControls.HotSpot.MarkupName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: HotSpot.NavigateUrl
  fullName: System.Web.UI.WebControls.HotSpot.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to navigate to when a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object is clicked."
  remarks: "Use the NavigateUrl property to specify the URL to navigate to when a <xref:System.Web.UI.WebControls.HotSpot> object is clicked. This property has an effect only when the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is set to `HotSpotMode.Navigate`, to navigate to a URL."
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "The URL to navigate to when a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object is clicked. The default is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.HotSpot.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.PostBackValue
  id: PostBackValue
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: PostBackValue
  nameWithType: HotSpot.PostBackValue
  fullName: System.Web.UI.WebControls.HotSpot.PostBackValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the name of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object to pass in the event data when the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> is clicked."
  remarks: "Use the PostBackValue property to specify a name for a <xref:System.Web.UI.WebControls.HotSpot> object. This name will be passed in the <xref:System.Web.UI.WebControls.ImageMapEventArgs> event data when the <xref:System.Web.UI.WebControls.HotSpot> is clicked. This property has an effect only when the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is set to `HotSpotMode.PostBack`, to generate a postback to the server.       To programmatically control the actions performed when a <xref:System.Web.UI.WebControls.HotSpot> object is clicked, provide an event handler for the <xref:System.Web.UI.WebControls.ImageMap.Click> event."
  syntax:
    content: public string PostBackValue { get; set; }
    return:
      type: System.String
      description: "The name of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object to pass in the event data when the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> is clicked. The default is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.HotSpot.PostBackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: HotSpot.SaveViewState()
  fullName: System.Web.UI.WebControls.HotSpot.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the changes to the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s view state since the time the page was posted back to the server."
  remarks: "The SaveViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.       View state is the accumulation of the values of a server control&quot;s properties. These values are automatically placed in the server control&quot;s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property&quot;s value is then persisted to a string object after the save state stage of the server control&quot;s life cycle. For more information, see [ASP.NET Application Life Cycle Overview for IIS 5.0 and 6.0](~/add/includes/ajax-current-ext-md.md).       When view state is saved, this string object is returned to the client as a variable that is stored in a hidden HTML input element. When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control&quot;s `ViewState` property. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "The <xref:System.Object> that contains the changes to the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s view state. If no view state is associated with the object, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.HotSpot.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: HotSpot.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object is tracking its view-state changes."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.IsTrackingViewState%2A?displayProperty=fullName> member to determine whether a <xref:System.Web.UI.WebControls.HotSpot> object is tracking view-state changes.       The IStateManager.IsTrackingViewState member is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object is tracking its view-state changes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: HotSpot.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restores the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s previously saved view state to the object."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.LoadViewState%2A?displayProperty=fullName> member to restore the view state for a <xref:System.Web.UI.WebControls.HotSpot> object.       The IStateManager.LoadViewState member is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "An <xref:System.Object> that contains the saved view state values for the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object to restore."
  overload: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: HotSpot.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the changes to the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s view state since the last time the page was posted back to the server."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.SaveViewState%2A?displayProperty=fullName> method to save the view state for the <xref:System.Web.UI.WebControls.HotSpot> region.       The IStateManager.SaveViewState method is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "The <xref:System.Object> that contains the changes to the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object&quot;s view state."
  overload: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: HotSpot.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Instructs the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region to track changes to its view state."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.HotSpot.TrackViewState%2A?displayProperty=fullName> method to start tracking view-state changes for the <xref:System.Web.UI.WebControls.HotSpot> region.       The IStateManager.TrackViewState method is an explicit interface member implementation. It can be used only when a <xref:System.Web.UI.WebControls.HotSpot> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.TabIndex
  id: TabIndex
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: TabIndex
  nameWithType: HotSpot.TabIndex
  fullName: System.Web.UI.WebControls.HotSpot.TabIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the tab index of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region."
  remarks: "Use the TabIndex property to specify or determine the tab index of a <xref:System.Web.UI.WebControls.HotSpot> region on the Web Forms page.       When you press the TAB key, the order in which the Web server controls receive focus is determined by the TabIndex property of each control. When a page is initially loaded, the first item that receives focus when the TAB key is pressed is the address bar. Next, the controls on the Web Forms page are tabbed to in ascending order, based on the value of the TabIndex property of each control, starting with the smallest positive, nonzero value. If multiple controls share the same tab index, the controls will receive focus in the order they are declared on the Web Forms page. Finally, controls that have a tab index of zero are tabbed to in the order they are declared.      > [!NOTE] >  Only controls with a nonzero tab index will render the `tabindex` attribute.       You can remove a <xref:System.Web.UI.WebControls.HotSpot> region from the tab order by setting the TabIndex property to a negative value.      > [!NOTE] >  This property is supported only in Internet Explorer 4.0 and later."
  syntax:
    content: public virtual short TabIndex { get; set; }
    return:
      type: System.Int16
      description: "The tab index of the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region. The default is 0, which indicates that this property is not set."
  overload: System.Web.UI.WebControls.HotSpot.TabIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified tab index is not between -32768 and 32767."
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.Target
  id: Target
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: Target
  nameWithType: HotSpot.Target
  fullName: System.Web.UI.WebControls.HotSpot.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the target window or frame in which to display the Web page content linked to when a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object that navigates to a URL is clicked."
  remarks: "Use the Target property to specify the frame or window that displays the Web page linked to when a <xref:System.Web.UI.WebControls.HotSpot> object that navigates to a URL is clicked. This property has an effect only when the <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> property is set to `HotSpotMode.Navigate`, to navigate to a URL. If this property is not set, the browser or window with focus refreshes when the <xref:System.Web.UI.WebControls.HotSpot> object is clicked.      > [!NOTE] >  The Target property renders as a `target` attribute. The `target` attribute on ANCHOR elements is not allowed in the XHTML 1.1 document type definition. Do not set the Target property if the rendered output for the <xref:System.Web.UI.WebControls.HotSpot> must be XHTML 1.1 compliant. For more information, refer to the topic [XHTML Standards in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] >  We strongly recommend that, when creating accessible Web pages, you avoid using the Target property to target another window. For more information, see [NIB: ASP.NET Accessibility](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).       The Target value must begin with a letter in the range of A to Z (case-insensitive), except for the following special values, which begin with an underscore.      |Target value|Description|   |------------------|-----------------|   |`_blank`|Renders the content in a new window without frames.|   |`_parent`|Renders the content in the immediate frameset parent.|   |`_search`|Renders the content in the search pane.|   |`_self`|Renders the content in the frame with focus.|   |`_top`|Renders the content in the full window without frames.|      > [!NOTE] >  Check your browser documentation to determine whether the `_search` value is supported.  For example, Internet Explorer 5.0 or later supports the `_search` target value."
  syntax:
    content: public virtual string Target { get; set; }
    return:
      type: System.String
      description: "The target window or frame in which to load the Web page linked to when a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object that navigates to a URL is clicked. The default value is an empty string (&quot;&quot;), which refreshes the window or frame with focus."
  overload: System.Web.UI.WebControls.HotSpot.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.ToString
  id: ToString
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: ToString()
  nameWithType: HotSpot.ToString()
  fullName: System.Web.UI.WebControls.HotSpot.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns the <xref:System.String> representation of this instance of a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object."
  remarks: "The ToString method returns a string that represents the current <xref:System.Web.UI.WebControls.HotSpot> object. For example, if the current <xref:System.Web.UI.WebControls.HotSpot> is an instance of the <xref:System.Web.UI.WebControls.CircleHotSpot> class, calling this method returns the string &quot;CircleHotSpot&quot;."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents this <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object."
  overload: System.Web.UI.WebControls.HotSpot.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: HotSpot.TrackViewState()
  fullName: System.Web.UI.WebControls.HotSpot.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Causes the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object to track changes to its view state so they can be stored in the object&quot;s <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object. This object is accessible through the &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; property."
  remarks: "The TrackViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.       This method is called automatically by ASP.NET when the <xref:System.Web.UI.WebControls.HotSpot> object is initialized."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.HotSpot.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpot.ViewState
  id: ViewState
  parent: System.Web.UI.WebControls.HotSpot
  langs:
  - csharp
  name: ViewState
  nameWithType: HotSpot.ViewState
  fullName: System.Web.UI.WebControls.HotSpot.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a dictionary of state information that allows you to save and restore the view state of a <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> object across multiple requests for the same page."
  remarks: "The ViewState member is used primarily by control developers when deriving a custom implementation from the <xref:System.Web.UI.WebControls.HotSpot> class.       A server control&quot;s view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use the ViewState property, which is an instance of the <xref:System.Web.UI.StateBag> class, to store the property values. The values are then passed as a variable to a hidden HTML element when subsequent requests are processed. For more information about saving server control view state, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md).       View state is enabled for all server controls by default, but there are circumstances in which you will want to disable it. For more information, see [ASP.NET Performance Overview](~/add/includes/ajax-current-ext-md.md).       For information about dictionaries and how to use them, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected System.Web.UI.StateBag ViewState { get; }
    return:
      type: System.Web.UI.StateBag
      description: "An instance of the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> class that contains the <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;></xref> region&quot;s view-state information."
  overload: System.Web.UI.WebControls.HotSpot.ViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.HotSpot.#ctor
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: HotSpot()
  nameWithType: HotSpot.HotSpot()
  fullName: System.Web.UI.WebControls.HotSpot.HotSpot()
- uid: System.Web.UI.WebControls.HotSpot.AccessKey
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: AccessKey
  nameWithType: HotSpot.AccessKey
  fullName: System.Web.UI.WebControls.HotSpot.AccessKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.HotSpot.AlternateText
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: AlternateText
  nameWithType: HotSpot.AlternateText
  fullName: System.Web.UI.WebControls.HotSpot.AlternateText
- uid: System.Web.UI.WebControls.HotSpot.GetCoordinates
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: GetCoordinates()
  nameWithType: HotSpot.GetCoordinates()
  fullName: System.Web.UI.WebControls.HotSpot.GetCoordinates()
- uid: System.Web.UI.WebControls.HotSpot.HotSpotMode
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: HotSpotMode
  nameWithType: HotSpot.HotSpotMode
  fullName: System.Web.UI.WebControls.HotSpot.HotSpotMode
- uid: System.Web.UI.WebControls.HotSpotMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HotSpotMode
  nameWithType: HotSpotMode
  fullName: System.Web.UI.WebControls.HotSpotMode
- uid: System.Web.UI.WebControls.HotSpot.IsTrackingViewState
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: IsTrackingViewState
  nameWithType: HotSpot.IsTrackingViewState
  fullName: System.Web.UI.WebControls.HotSpot.IsTrackingViewState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.HotSpot.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: HotSpot.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.HotSpot.LoadViewState(Object)
- uid: System.Web.UI.WebControls.HotSpot.MarkupName
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: MarkupName
  nameWithType: HotSpot.MarkupName
  fullName: System.Web.UI.WebControls.HotSpot.MarkupName
- uid: System.Web.UI.WebControls.HotSpot.NavigateUrl
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: NavigateUrl
  nameWithType: HotSpot.NavigateUrl
  fullName: System.Web.UI.WebControls.HotSpot.NavigateUrl
- uid: System.Web.UI.WebControls.HotSpot.PostBackValue
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: PostBackValue
  nameWithType: HotSpot.PostBackValue
  fullName: System.Web.UI.WebControls.HotSpot.PostBackValue
- uid: System.Web.UI.WebControls.HotSpot.SaveViewState
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: SaveViewState()
  nameWithType: HotSpot.SaveViewState()
  fullName: System.Web.UI.WebControls.HotSpot.SaveViewState()
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: HotSpot.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: HotSpot.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: HotSpot.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: HotSpot.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.HotSpot.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.HotSpot.TabIndex
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: TabIndex
  nameWithType: HotSpot.TabIndex
  fullName: System.Web.UI.WebControls.HotSpot.TabIndex
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Web.UI.WebControls.HotSpot.Target
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: Target
  nameWithType: HotSpot.Target
  fullName: System.Web.UI.WebControls.HotSpot.Target
- uid: System.Web.UI.WebControls.HotSpot.ToString
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: ToString()
  nameWithType: HotSpot.ToString()
  fullName: System.Web.UI.WebControls.HotSpot.ToString()
- uid: System.Web.UI.WebControls.HotSpot.TrackViewState
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: TrackViewState()
  nameWithType: HotSpot.TrackViewState()
  fullName: System.Web.UI.WebControls.HotSpot.TrackViewState()
- uid: System.Web.UI.WebControls.HotSpot.ViewState
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: ViewState
  nameWithType: HotSpot.ViewState
  fullName: System.Web.UI.WebControls.HotSpot.ViewState
- uid: System.Web.UI.StateBag
  parent: System.Web.UI
  isExternal: false
  name: StateBag
  nameWithType: StateBag
  fullName: System.Web.UI.StateBag
- uid: System.Web.UI.WebControls.HotSpot.#ctor*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: HotSpot
  nameWithType: HotSpot.HotSpot
- uid: System.Web.UI.WebControls.HotSpot.AccessKey*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: AccessKey
  nameWithType: HotSpot.AccessKey
- uid: System.Web.UI.WebControls.HotSpot.AlternateText*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: AlternateText
  nameWithType: HotSpot.AlternateText
- uid: System.Web.UI.WebControls.HotSpot.GetCoordinates*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: GetCoordinates
  nameWithType: HotSpot.GetCoordinates
- uid: System.Web.UI.WebControls.HotSpot.HotSpotMode*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: HotSpotMode
  nameWithType: HotSpot.HotSpotMode
- uid: System.Web.UI.WebControls.HotSpot.IsTrackingViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: IsTrackingViewState
  nameWithType: HotSpot.IsTrackingViewState
- uid: System.Web.UI.WebControls.HotSpot.LoadViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: LoadViewState
  nameWithType: HotSpot.LoadViewState
- uid: System.Web.UI.WebControls.HotSpot.MarkupName*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: MarkupName
  nameWithType: HotSpot.MarkupName
- uid: System.Web.UI.WebControls.HotSpot.NavigateUrl*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: NavigateUrl
  nameWithType: HotSpot.NavigateUrl
- uid: System.Web.UI.WebControls.HotSpot.PostBackValue*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: PostBackValue
  nameWithType: HotSpot.PostBackValue
- uid: System.Web.UI.WebControls.HotSpot.SaveViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: SaveViewState
  nameWithType: HotSpot.SaveViewState
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: HotSpot.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: HotSpot.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: HotSpot.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.HotSpot.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: HotSpot.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.HotSpot.TabIndex*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: TabIndex
  nameWithType: HotSpot.TabIndex
- uid: System.Web.UI.WebControls.HotSpot.Target*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: Target
  nameWithType: HotSpot.Target
- uid: System.Web.UI.WebControls.HotSpot.ToString*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: ToString
  nameWithType: HotSpot.ToString
- uid: System.Web.UI.WebControls.HotSpot.TrackViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: TrackViewState
  nameWithType: HotSpot.TrackViewState
- uid: System.Web.UI.WebControls.HotSpot.ViewState*
  parent: System.Web.UI.WebControls.HotSpot
  isExternal: false
  name: ViewState
  nameWithType: HotSpot.ViewState
