### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.ISimplexSessionRouter
  id: ISimplexSessionRouter
  children:
  - System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  langs:
  - csharp
  name: ISimplexSessionRouter
  nameWithType: ISimplexSessionRouter
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter
  type: Interface
  summary: "Defines the interface required to process messages from simplex session channels."
  remarks: "This contract has the following settings:      -   Sessions are required.      -   One way messages."
  syntax:
    content: >-
      [System.ServiceModel.ServiceContract(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", SessionMode=System.ServiceModel.SessionMode.Required)]

      public interface ISimplexSessionRouter
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  langs:
  - csharp
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Initiates the asynchronous processing of the message."
  syntax:
    content: public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The message to be processed."
    - id: callback
      type: System.AsyncCallback
      description: "An asynchronous callback delegate that is invoked when the message processing has completed."
    - id: state
      type: System.Object
      description: "A user-defined state object that is passed to the callback procedure."
    return:
      type: System.IAsyncResult
      description: "An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <xref:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage*>."
  overload: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  id: EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  langs:
  - csharp
  name: EndProcessMessage(IAsyncResult)
  nameWithType: ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Finishes asynchronous execution of message processing."
  syntax:
    content: public void EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage*>."
  overload: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: EndProcessMessage(IAsyncResult)
  nameWithType: ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage*
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: BeginProcessMessage
  nameWithType: ISimplexSessionRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage*
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: EndProcessMessage
  nameWithType: ISimplexSessionRouter.EndProcessMessage
