### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaTable
  id: MetaTable
  children:
  - System.Data.Linq.Mapping.MetaTable.#ctor
  - System.Data.Linq.Mapping.MetaTable.DeleteMethod
  - System.Data.Linq.Mapping.MetaTable.InsertMethod
  - System.Data.Linq.Mapping.MetaTable.Model
  - System.Data.Linq.Mapping.MetaTable.RowType
  - System.Data.Linq.Mapping.MetaTable.TableName
  - System.Data.Linq.Mapping.MetaTable.UpdateMethod
  langs:
  - csharp
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Data.Linq.Mapping.MetaTable
  type: Class
  summary: "Represents an abstraction of a database table or view."
  syntax:
    content: public abstract class MetaTable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaTable.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaTable
  langs:
  - csharp
  name: MetaTable()
  nameWithType: MetaTable.MetaTable()
  fullName: System.Data.Linq.Mapping.MetaTable.MetaTable()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Linq.Mapping.MetaTable&quot;></xref> class."
  syntax:
    content: protected MetaTable ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaTable.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaTable.DeleteMethod
  id: DeleteMethod
  parent: System.Data.Linq.Mapping.MetaTable
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: MetaTable.DeleteMethod
  fullName: System.Data.Linq.Mapping.MetaTable.DeleteMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets the <xref href=&quot;System.Data.Linq.DataContext&quot;></xref> method that is used to perform delete operations."
  syntax:
    content: public abstract System.Reflection.MethodInfo DeleteMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "The <xref:System.Reflection.MethodInfo> that corresponds to the method used for delete operations."
  overload: System.Data.Linq.Mapping.MetaTable.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaTable.InsertMethod
  id: InsertMethod
  parent: System.Data.Linq.Mapping.MetaTable
  langs:
  - csharp
  name: InsertMethod
  nameWithType: MetaTable.InsertMethod
  fullName: System.Data.Linq.Mapping.MetaTable.InsertMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets the <xref href=&quot;System.Data.Linq.DataContext&quot;></xref> method that is used to perform insert operations."
  syntax:
    content: public abstract System.Reflection.MethodInfo InsertMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "The <xref:System.Reflection.MethodInfo> that corresponds to the method used for insert operations."
  overload: System.Data.Linq.Mapping.MetaTable.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaTable.Model
  id: Model
  parent: System.Data.Linq.Mapping.MetaTable
  langs:
  - csharp
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Data.Linq.Mapping.MetaTable.Model
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets the <xref href=&quot;System.Data.Linq.Mapping.MetaModel&quot;></xref> that contains this <xref href=&quot;System.Data.Linq.Mapping.MetaTable&quot;></xref>."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaModel Model { get; }
    return:
      type: System.Data.Linq.Mapping.MetaModel
      description: "The <xref href=&quot;System.Data.Linq.Mapping.MetaModel&quot;></xref> that includes this MetaTable."
  overload: System.Data.Linq.Mapping.MetaTable.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaTable.RowType
  id: RowType
  parent: System.Data.Linq.Mapping.MetaTable
  langs:
  - csharp
  name: RowType
  nameWithType: MetaTable.RowType
  fullName: System.Data.Linq.Mapping.MetaTable.RowType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets the <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;></xref> that describes the type of the rows of the table."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType RowType { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "The type of rows in the table."
  overload: System.Data.Linq.Mapping.MetaTable.RowType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaTable.TableName
  id: TableName
  parent: System.Data.Linq.Mapping.MetaTable
  langs:
  - csharp
  name: TableName
  nameWithType: MetaTable.TableName
  fullName: System.Data.Linq.Mapping.MetaTable.TableName
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets the name of the table as defined by the database."
  syntax:
    content: public abstract string TableName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> representing the name of the table."
  overload: System.Data.Linq.Mapping.MetaTable.TableName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaTable.UpdateMethod
  id: UpdateMethod
  parent: System.Data.Linq.Mapping.MetaTable
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: MetaTable.UpdateMethod
  fullName: System.Data.Linq.Mapping.MetaTable.UpdateMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets the <xref href=&quot;System.Data.Linq.DataContext&quot;></xref> method that is used to perform update operations."
  syntax:
    content: public abstract System.Reflection.MethodInfo UpdateMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "The <xref:System.Reflection.MethodInfo> that corresponds to the method used for update operations."
  overload: System.Data.Linq.Mapping.MetaTable.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaTable.#ctor
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: MetaTable()
  nameWithType: MetaTable.MetaTable()
  fullName: System.Data.Linq.Mapping.MetaTable.MetaTable()
- uid: System.Data.Linq.Mapping.MetaTable.DeleteMethod
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: DeleteMethod
  nameWithType: MetaTable.DeleteMethod
  fullName: System.Data.Linq.Mapping.MetaTable.DeleteMethod
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Data.Linq.Mapping.MetaTable.InsertMethod
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: InsertMethod
  nameWithType: MetaTable.InsertMethod
  fullName: System.Data.Linq.Mapping.MetaTable.InsertMethod
- uid: System.Data.Linq.Mapping.MetaTable.Model
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
  fullName: System.Data.Linq.Mapping.MetaTable.Model
- uid: System.Data.Linq.Mapping.MetaModel
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Data.Linq.Mapping.MetaModel
- uid: System.Data.Linq.Mapping.MetaTable.RowType
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: RowType
  nameWithType: MetaTable.RowType
  fullName: System.Data.Linq.Mapping.MetaTable.RowType
- uid: System.Data.Linq.Mapping.MetaType
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
- uid: System.Data.Linq.Mapping.MetaTable.TableName
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: TableName
  nameWithType: MetaTable.TableName
  fullName: System.Data.Linq.Mapping.MetaTable.TableName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaTable.UpdateMethod
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: UpdateMethod
  nameWithType: MetaTable.UpdateMethod
  fullName: System.Data.Linq.Mapping.MetaTable.UpdateMethod
- uid: System.Data.Linq.Mapping.MetaTable.#ctor*
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable.MetaTable
- uid: System.Data.Linq.Mapping.MetaTable.DeleteMethod*
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: DeleteMethod
  nameWithType: MetaTable.DeleteMethod
- uid: System.Data.Linq.Mapping.MetaTable.InsertMethod*
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: InsertMethod
  nameWithType: MetaTable.InsertMethod
- uid: System.Data.Linq.Mapping.MetaTable.Model*
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: Model
  nameWithType: MetaTable.Model
- uid: System.Data.Linq.Mapping.MetaTable.RowType*
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: RowType
  nameWithType: MetaTable.RowType
- uid: System.Data.Linq.Mapping.MetaTable.TableName*
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: TableName
  nameWithType: MetaTable.TableName
- uid: System.Data.Linq.Mapping.MetaTable.UpdateMethod*
  parent: System.Data.Linq.Mapping.MetaTable
  isExternal: false
  name: UpdateMethod
  nameWithType: MetaTable.UpdateMethod
