### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  id: ConfigurationBasedIssuerNameRegistry
  children:
  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor
  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)
  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  langs:
  - csharp
  name: ConfigurationBasedIssuerNameRegistry
  nameWithType: ConfigurationBasedIssuerNameRegistry
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  type: Class
  summary: "Representa um registo de nome de emissor que mantém uma lista de emissores fidedignos carregado a partir de elementos no ficheiro de configuração de aplicação que associam cada nome do emissor do certificado x.&509; que é necessário para verificar a assinatura de tokens produzido pelo emissor."
  remarks: "The ConfigurationBasedIssuerNameRegistry class maintains a dictionary of trusted issuers by mapping the certificate of each trusted issuer to a name that refers to that issuer. The certificates are specified using the ASN.1 encoded form of the thumbprint. The issuer name can be any string, as long as it is unique within the scope of the application. This dictionary can be accessed through the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> property. The class can only resolve X.509 certificates.  \n  \n The map of trusted issuers is specified in a configuration file by adding entries under the [\\&lt;trustedIssuers\\&gt;](../Topic/%3CtrustedIssuers%3E.md) element. The `<trustedIssuers>` element is a child element of the [\\&lt;issuerNameRegistry\\&gt;](../Topic/%3CissuerNameRegistry%3E.md) element and it is valid when the ConfigurationBasedIssuerNameRegistry class is specified in the `type` attribute of that element. For more information, see the documentation for each of these elements in the [WIF Configuration Schema](~/add/includes/ajax-current-ext-md.md). For more information about issuer name registries, see the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class.  \n  \n You can derive from ConfigurationBasedIssuerNameRegistry to implement your own configuration based issuer name registry. Which methods you override will depend upon your implementation. For example, you can override the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to load configuration from a custom configuration schema."
  example:
  - "The following XML shows configuration for a ConfigurationBasedIssuerNameRegistry added for a collection of security token handlers. The `<trustedIssuers>` element behaves like a classic .NET configuration collection, allowing the `<add>`, `<delete>` and `<clear>` elements as child elements.  \n  \n```  \n<system.identityModel>  \n  <identityConfiguration>  \n    <securityTokenHandlersCollection>  \n      <securityTokenHandlerConfiguration>  \n        <issuerNameRegistry type=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel\">  \n          <trustedIssuers>  \n             <add thumbprint=\"97249e … 158de\" name=\"contoso.com\" />  \n         </trustedIssuers>  \n        </issuerNameRegistry>  \n      </securityTokenHandlerConfiguration>  \n  </identityConfiguration>  \n</system.identityModel>  \n```"
  syntax:
    content: 'public class ConfigurationBasedIssuerNameRegistry : System.IdentityModel.Tokens.IssuerNameRegistry'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.IssuerNameRegistry
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  langs:
  - csharp
  name: ConfigurationBasedIssuerNameRegistry()
  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&quot;> </xref> classe."
  syntax:
    content: public ConfigurationBasedIssuerNameRegistry ();
    parameters: []
  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)
  id: AddTrustedIssuer(System.String,System.String)
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  langs:
  - csharp
  name: AddTrustedIssuer(String,String)
  nameWithType: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String,String)
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Adiciona um emissor para o dicionário de emissores fidedignos."
  remarks: "Pode chamar este método para adicionar os emissores para o <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A>dicionário.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> Em classes derivadas, pode chamar este método do <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A>método para adicionar os emissores para o dicionário.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A>"
  syntax:
    content: public void AddTrustedIssuer (string certificateThumbprint, string name);
    parameters:
    - id: certificateThumbprint
      type: System.String
      description: "ASN.&1; codificado formato do thumbprint de certificado de emissor."
    - id: name
      type: System.String
      description: "O nome do emissor."
  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>certificateThumbprint</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou estar vazio.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O emissor especificado pelo <code> certificateThumbprint </code> já foi configurada. (O emissor já existe no <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*>dicionário.)</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
  id: ConfiguredTrustedIssuers
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  langs:
  - csharp
  name: ConfiguredTrustedIssuers
  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o dicionário de emissores fidedignos que tenham sido configurados para esta instância."
  remarks: "A chave de dicionário é o ASN.&1; codificado em forma do thumbprint do certificado de emissor fidedigno e o valor é o nome do emissor. O dicionário contém os emissores que foram especificados na configuração e os emissores adicionais que foram adicionados com a <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A>método.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> ConfiguredTrustedIssuers { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Um dicionário que contém os emissores fidedignos."
  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  langs:
  - csharp
  name: GetIssuerName(SecurityToken)
  nameWithType: ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Devolve o nome do emissor associado especificado <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> por mapear o thumbprint do certificado para um nome no dicionário de emissores fidedignos."
  remarks: "As procuras de implementação predefinidos do <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A>dicionário para o thumbprint do certificado x.&509; especificado na `securityToken`.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> Se for encontrada uma entrada, é devolvido o nome do emissor; caso contrário, `null` é devolvido. Se `securityToken` não é atribuível a partir do <xref:System.IdentityModel.Tokens.X509SecurityToken>, `null` é devolvido.</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: public override string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O token de segurança para o qual o nome do emissor é solicitado. Deve ser atribuível como <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>."
    return:
      type: System.String
      description: "O nome do emissor não existir uma entrada para o thumbprint do certificado do token no <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*>dicionário; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*>"
  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Carrega emissores fidedignos da configuração."
  remarks: "The LoadCustomConfiguration method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](../Topic/%3CissuerNameRegistry%3E.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  \n  \n This method is called by the configuration infrastructure. The default implementation loads configuration from a [\\&lt;trustedIssuers\\&gt;](../Topic/%3CtrustedIssuers%3E.md) element (configured under the [\\&lt;issuerNameRegistry\\&gt;](../Topic/%3CissuerNameRegistry%3E.md) element). You can override this method to provide support for your own custom configuration elements in derived classes."
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfiguration);
    parameters:
    - id: customConfiguration
      type: System.Xml.XmlNodeList
      description: "O XML que representa o mapa de emissores fidedignos especificado no ficheiro de configuração."
  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfiguration</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A configuração contém um ou mais elementos que não são reconhecidos."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: System.IdentityModel.Tokens.IssuerNameRegistry
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: ConfigurationBasedIssuerNameRegistry()
  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: AddTrustedIssuer(String,String)
  nameWithType: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String,String)
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: ConfiguredTrustedIssuers
  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: GetIssuerName(SecurityToken)
  nameWithType: ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor*
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: ConfigurationBasedIssuerNameRegistry
  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer*
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: AddTrustedIssuer
  nameWithType: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: ConfiguredTrustedIssuers
  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName*
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: GetIssuerName
  nameWithType: ConfigurationBasedIssuerNameRegistry.GetIssuerName
- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration
