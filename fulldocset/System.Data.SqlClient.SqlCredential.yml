### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCredential
  id: SqlCredential
  children:
  - System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)
  - System.Data.SqlClient.SqlCredential.Password
  - System.Data.SqlClient.SqlCredential.UserId
  langs:
  - csharp
  name: SqlCredential
  nameWithType: SqlCredential
  fullName: System.Data.SqlClient.SqlCredential
  type: Class
  summary: "SqlCredential provides a more secure way to specify the password for a login attempt using [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication.       SqlCredential is comprised of a user id and a password that will be used for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Authentication. The password in a SqlCredential object is of type <xref href=&quot;System.Security.SecureString&quot;></xref>.       SqlCredential cannot be inherited.       Windows Authentication (<xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;></xref>) remains the most secure way to log in to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database."
  remarks: "Use <xref:System.Data.SqlClient.SqlConnection.Credential%2A> to get or set a connection&quot;s SqlCredential object. Use <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> to change the password for a SqlCredential object. For information on how a SqlCredential object affects connection pool behavior, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).       An <xref:System.InvalidOperationException> exception will be raised if a non-null SqlCredential object is used in a connection with any of the following connection string keywords:      -   `Integrated Security = true`      -   `Password`      -   `User ID`      -   `Context Connection = true`       The following sample connects to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database using <xref:System.Data.SqlClient.SqlConnection.Credential%2A>:      ```   // change connection string in the APP.CONFIG file   <connectionStrings>     <add name=&quot;MyConnString&quot;          connectionString=&quot;Initial Catalog=myDB;Server=myServer&quot;          providerName=&quot;System.Data.SqlClient&quot; />   </connectionStrings>      // then use the following snippet:   using System.Configuration;      System.Windows.Controls.TextBox txtUserId = new System.Windows.Controls.TextBox();   System.Windows.Controls.PasswordBox txtPwd = new System.Windows.Controls.PasswordBox();      Configuration config = Configuration.WebConfigurationManager.OpenWebConfiguration(Null);   ConnectionStringSettings connString = config.ConnectionStrings.ConnectionString[“MyConnString”];      using (SqlConnection conn = new SqlConnection(connString.ConnectionString))   {   SecureString pwd = txtPwd.SecurePassword;   pwd.MakeReadOnly();   SqlCredential cred = new SqlCredential(txtUserId.Text, pwd);   conn.Credential = cred;   conn.Open();   ```"
  syntax:
    content: public sealed class SqlCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Data.SqlClient.SqlCredential
  langs:
  - csharp
  name: SqlCredential(String,SecureString)
  nameWithType: SqlCredential.SqlCredential(String,SecureString)
  fullName: System.Data.SqlClient.SqlCredential.SqlCredential(String,SecureString)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates an object of type <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref>."
  remarks: "The constructor does not accept null parameters. A <xref:System.String.Empty> value is allowed. An attempt to pass a null parameter in the constructor will raise an <xref:System.ArgumentNullException> exception."
  syntax:
    content: public SqlCredential (string userId, System.Security.SecureString password);
    parameters:
    - id: userId
      type: System.String
      description: "The user id."
    - id: password
      type: System.Security.SecureString
      description: "The password; a <xref href=&quot;System.Security.SecureString&quot;></xref> value marked as read-only.  Passing a read/write <xref href=&quot;System.Security.SecureString&quot;></xref> parameter will raise an <xref:System.ArgumentException>."
  overload: System.Data.SqlClient.SqlCredential.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCredential.Password
  id: Password
  parent: System.Data.SqlClient.SqlCredential
  langs:
  - csharp
  name: Password
  nameWithType: SqlCredential.Password
  fullName: System.Data.SqlClient.SqlCredential.Password
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the password component of the <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object."
  syntax:
    content: public System.Security.SecureString Password { get; }
    return:
      type: System.Security.SecureString
      description: "Returns the password component of the <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCredential.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCredential.UserId
  id: UserId
  parent: System.Data.SqlClient.SqlCredential
  langs:
  - csharp
  name: UserId
  nameWithType: SqlCredential.UserId
  fullName: System.Data.SqlClient.SqlCredential.UserId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the user ID component of the <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object."
  syntax:
    content: public string UserId { get; }
    return:
      type: System.String
      description: "Returns the user ID component of the <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object.."
  overload: System.Data.SqlClient.SqlCredential.UserId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: SqlCredential(String,SecureString)
  nameWithType: SqlCredential.SqlCredential(String,SecureString)
  fullName: System.Data.SqlClient.SqlCredential.SqlCredential(String,SecureString)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Data.SqlClient.SqlCredential.Password
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: Password
  nameWithType: SqlCredential.Password
  fullName: System.Data.SqlClient.SqlCredential.Password
- uid: System.Data.SqlClient.SqlCredential.UserId
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: UserId
  nameWithType: SqlCredential.UserId
  fullName: System.Data.SqlClient.SqlCredential.UserId
- uid: System.Data.SqlClient.SqlCredential.#ctor*
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: SqlCredential
  nameWithType: SqlCredential.SqlCredential
- uid: System.Data.SqlClient.SqlCredential.Password*
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: Password
  nameWithType: SqlCredential.Password
- uid: System.Data.SqlClient.SqlCredential.UserId*
  parent: System.Data.SqlClient.SqlCredential
  isExternal: false
  name: UserId
  nameWithType: SqlCredential.UserId
