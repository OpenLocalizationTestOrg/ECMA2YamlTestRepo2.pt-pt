### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  id: MemoryMappedFile
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  langs:
  - csharp
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
  type: Class
  summary: "Representa um ficheiro de mapeamento de memória."
  remarks: "Um ficheiro de mapeamento de memória mapeia o conteúdo de um ficheiro para o espaço do endereço lógico de uma aplicação. Os ficheiros de mapeamento de memória permitem programadores trabalhar com ficheiros extremamente grandes porque memória pode ser gerida em simultâneo e permitem acesso aleatório completado para um ficheiro sem a necessidade de pesquisa. Ficheiros de mapeamento de memória também podem ser partilhados em vários processos.       O <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A>métodos criar um ficheiro de mapeamento de memória a partir de um caminho especificado ou uma <xref:System.IO.FileStream>de um ficheiro existente no disco.</xref:System.IO.FileStream> </xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> As alterações sejam propagadas automaticamente para o disco quando o ficheiro é não mapeado.       O <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>são adequados para criar uma memória partilhada para comunicação entre processos (IPC) e criar um ficheiro de mapeamento de memória que não está mapeado para um ficheiro existente num disco; de métodos.</xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>       Um ficheiro de mapeamento de memória está associado um nome.       Pode criar várias vistas do ficheiro de mapeamento de memória, incluindo vistas de partes do ficheiro. Pode mapear a mesma parte de um ficheiro para a mais do que um endereço para criar a memória em simultâneo. Para duas vistas que deverá permanecer disponível em simultâneo, têm de ser criado a partir do mesmo ficheiro de mapeamento de memória. Criar dois mapeamentos de ficheiro do mesmo ficheiro com duas vistas não fornece simultaneidade."
  example:
  - "The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/t-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/t-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: 'public class MemoryMappedFile : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  id: CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória a partir de um ficheiro no disco."
  remarks: ''
  example:
  - "The following example uses the CreateFromFile method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/m-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho do ficheiro de mapa."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia vazia, contém apenas espaços em branco ou tem um ou mais carateres inválidos, tal como definido pelo &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; método.       - ou - <code>path</code> refere-se a um dispositivo inválido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema operativo. No Windows, caminhos tem de conter menos de 248 carateres e nomes de ficheiros tem de conter menos de 260 carateres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem as permissões necessárias para o ficheiro."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  id: CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tenha o modo de acesso especificado a partir de um ficheiro no disco."
  remarks: "O `mode` parâmetro diz respeito ao ficheiro de origem no disco. Pode utilizar apenas o <xref:System.IO.FileMode>valor de enumeração para criar o ficheiro de mapeamento de memória a partir do ficheiro de origem no disco.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "O caminho do ficheiro de mapa."
    - id: mode
      type: System.IO.FileMode
      description: "Modo de acesso must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tenha o modo de acesso especificado."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia vazia, contém apenas espaços em branco ou tem um ou mais carateres inválidos, tal como definido pelo &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; método.       - ou - <code>path</code> refere-se a um dispositivo inválido.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o ficheiro no disco não existe.       - ou - e/s um erro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema operativo. No Windows, caminhos tem de conter menos de 248 carateres e nomes de ficheiros tem de conter menos de 260 carateres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem as permissões necessárias para o ficheiro."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tenha o modo de acesso especificado e o nome de um ficheiro no disco."
  remarks: "O `mode` parâmetro diz respeito ao ficheiro de origem no disco. Pode utilizar apenas o <xref:System.IO.FileMode>valor de enumeração para criar o ficheiro de mapeamento de memória a partir do ficheiro de origem no disco.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o ficheiro de mapa."
    - id: mode
      type: System.IO.FileMode
      description: "Modo de acesso must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tenha o modo de acesso e o nome especificado."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia vazia, contém apenas espaços em branco ou tem um ou mais carateres inválidos, tal como definido pelo &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; método.       - ou - <code>path</code> refere-se a um dispositivo inválido.       - ou - <code>mapName</code> é uma cadeia vazia.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o ficheiro no disco não existe.       - ou - e/s um erro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema operativo. No Windows, caminhos tem de conter menos de 248 carateres e nomes de ficheiros tem de conter menos de 260 carateres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem as permissões necessárias para o ficheiro."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tenha o modo de acesso especificado, o nome e a capacidade de um ficheiro no disco."
  remarks: "O `mode` parâmetro diz respeito ao ficheiro de origem no disco.       Se `capacity` excede o tamanho do ficheiro no disco, o ficheiro no disco for aumentado para corresponder a capacidade especificada, mesmo que não existem dados são escritos para o ficheiro de mapeamento de memória. Para impedir que isto aconteça, especifique 0 (zero) para a capacidade predefinida, que irá definir internamente `capacity` para o tamanho do ficheiro no disco."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o ficheiro de mapa."
    - id: mode
      type: System.IO.FileMode
      description: "Modo de acesso pode ser qualquer uma do <xref href=&quot;System.IO.FileMode&quot;> </xref> valores de enumeração, exceto <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória. Especifique 0 para definir a capacidade para o tamanho do ficheiro no disco."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia vazia, contém apenas espaços em branco ou tem um ou mais carateres inválidos, tal como definido pelo &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; método.       - ou - <code>path</code> refere-se a um dispositivo inválido.       - ou - <code>mapName</code> é uma cadeia vazia.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é maior do que o tamanho do espaço de endereços lógico.       - ou - <code>capacity</code> é menor que zero.       - ou - <code>capacity</code> é menor que o tamanho do ficheiro (mas não zero).       - ou - <code>capacity</code> for zero e o tamanho do ficheiro no disco também é zero."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema operativo. No Windows, caminhos tem de conter menos de 248 carateres e nomes de ficheiros tem de conter menos de 260 carateres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem as permissões necessárias para o ficheiro."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tenha o modo de acesso especificado, o nome, a capacidade e o tipo de acesso a partir de um ficheiro no disco."
  remarks: "O `mode` parâmetro diz respeito ao ficheiro de origem no disco.       Se `capacity` excede o tamanho do ficheiro no disco, o ficheiro no disco for aumentado para corresponder a capacidade especificada, mesmo que não existem dados são escritos para o ficheiro de mapeamento de memória. Para impedir que isto aconteça, especifique 0 (zero) para a capacidade predefinida, que irá definir internamente `capacity` para o tamanho do ficheiro no disco."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o ficheiro de mapa."
    - id: mode
      type: System.IO.FileMode
      description: "Modo de acesso pode ser qualquer uma do <xref href=&quot;System.IO.FileMode&quot;> </xref> valores de enumeração, exceto <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória. Especifique 0 para definir a capacidade para o tamanho do ficheiro no disco."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>access</code> não é um valor permitido.       - ou - <code>path</code> Especifica um ficheiro vazio.       - ou - <code>access</code> está especificado como <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> e a capacidade é superior ao tamanho do ficheiro indicado pelo <code>path</code>.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é maior do que o tamanho do espaço de endereços lógico.       - ou - <code>capacity</code> é menor que zero.       - ou - <code>capacity</code> é menor que o tamanho do ficheiro (mas não zero).       - ou - <code>capacity</code> for zero e o tamanho do ficheiro no disco também é zero.       - ou - <code>access</code> não é um definido <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor.       - ou - o tamanho do ficheiro indicado pelo <code>path</code> é superior ao <code>capacity</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "- ou - e/s um erro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema operativo. No Windows, caminhos tem de conter menos de 248 carateres e nomes de ficheiros tem de conter menos de 260 carateres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem as permissões necessárias para o ficheiro."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória a partir de um ficheiro existente com o modo de acesso especificado, o nome, a inheritability e a capacidade."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "O fluxo do ficheiro do ficheiro existente."
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória. Especifique 0 para definir a capacidade para o tamanho do `filestream`."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória.       Este parâmetro não é possível definir <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores da enumeração que especifica se um identificador para o ficheiro de mapeamento de memória pode ser herdado por um processo subordinado. A predefinição é <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "Um valor que indica se deve fechar o ficheiro de origem ser transmitido em fluxo quando o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> é eliminado."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia.       - ou - <code>capacity</code> e o comprimento do ficheiro são zero.       - ou - <code>access</code> está definido como <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> ou <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração, que não é permitido.       - ou - <code>access</code> está definido como <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> e <code>capacity</code> é maior do que o comprimento de <xref uid=&quot;langword_csharp_filestream&quot; name=&quot;filestream&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero.       - ou - <code>capacity</code> é inferior ao tamanho do ficheiro.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração.       - ou - <code>inheritability</code> não é um <xref:System.IO.HandleInheritability> valor de enumeração."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tem o nome especificado, capacidade, tipo de acesso, as permissões de segurança, inheritability e requisito disposal de um ficheiro no disco."
  remarks: "Se `capacity` excede o tamanho do ficheiro no disco, o ficheiro no disco for aumentado para corresponder a capacidade especificada, mesmo que não existem dados são escritos para o ficheiro de mapeamento de memória. Para impedir que isto aconteça, especifique 0 (zero) para a capacidade predefinida, que irá definir internamente `capacity` para o tamanho do ficheiro no disco."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "O `fileStream` para o ficheiro de mapa."
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória. Especifique 0 para definir a capacidade para o tamanho do ficheiro no disco."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória.       Este parâmetro não é possível definir <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "As permissões que podem ser concedidas acesso a ficheiros e operações nos ficheiros de mapeamento de memória.       Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores da enumeração que especifica se um identificador para o ficheiro de mapeamento de memória pode ser herdado por um processo subordinado. A predefinição é <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>não eliminar `fileStream` depois do <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> está fechado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to dispose `fileStream`."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>capacity</code> e o comprimento do ficheiro são zero.       - ou - <code>access</code> está definido como o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> ou <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração, que não é permitido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>or <code>mapname</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor que zero.       - ou - <code>capacity</code> é inferior ao tamanho do ficheiro.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração.       - ou - <code>inheritability</code> não é um <xref:System.IO.HandleInheritability> valor de enumeração."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<code>fileStream</code>foi fechada."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>is set to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;></xref> when <code>fileStream</code>&quot;s access is set to <xref href=&quot;System.IO.FileAccess&quot;></xref> or <xref href=&quot;System.IO.FileAccess&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mapName</code>já existe."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  id: CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tenha a capacidade especificada na memória do sistema."
  remarks: "Utilize este método para criar um ficheiro de mapeamento de memória que não é continuado (ou seja, não associados a um ficheiro no disco), que pode utilizar para partilhar dados entre processos."
  example:
  - "The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file. The following sequence of actions occur:  \n  \n1.  Process A creates the memory-mapped file and writes a value to it.  \n  \n2.  Process B opens the memory-mapped file and writes a value to it.  \n  \n3.  Process C opens the memory-mapped file and writes a value to it.  \n  \n4.  Process A reads and displays the values from the memory-mapped file.  \n  \n5.  After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.  \n  \n To run this example, do the following:  \n  \n1.  Compile the applications and open three Command windows.  \n  \n2.  In the first Command window, run Process A.  \n  \n3.  In the second Command window, run Process B.  \n  \n4.  Return to Process A and press ENTER.  \n  \n5.  In the third Command window, run Process C.  \n  \n6.  Return to Process A and press ENTER.  \n  \n The output of Process A is as follows:  \n  \n```  \nStart Process B and press ENTER to continue.  \nStart Process C and press ENTER to continue.  \nProcess A says: True  \nProcess B says: False  \nProcess C says: True  \n```  \n  \n **Process A**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_1.cs)]  \n  \n **Process B**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_2.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_2.cs)]  \n  \n **Process C**  \n  \n [!code-cs[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_3.cs)]\n [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_3.vb)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem o nome especificado e a capacidade."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor ou igual a zero."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tenha a capacidade especificada e o tipo de acesso na memória do sistema."
  remarks: "Utilize este método para criar um ficheiro de mapeamento de memória que não é continuado (ou seja, não associados a um ficheiro no disco), que pode utilizar para partilhar dados entre processos."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>access</code> está definida como só de escrita com o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor ou igual a zero.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tem o nome especificado, capacidade, tipo de acesso, opções de alocação de memória e inheritability."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Uma combinação bit a bit dos valores de enumeração que especifica os opções de alocação de memória para o ficheiro de mapeamento de memória."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um valor que especifica se um identificador para o ficheiro de mapeamento de memória pode ser herdado por um processo subordinado. A predefinição é <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>access</code> está definida como só de escrita com o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor ou igual a zero.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração.       - ou - <code>inheritability</code> não é um <xref:System.IO.HandleInheritability> valor."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um ficheiro de mapeamento de memória que tenha a capacidade especificada, o tipo de acesso, a atribuição de memória, as permissões de segurança e inheritability na memória do sistema."
  remarks: "Utilize este método para criar um ficheiro de mapeamento de memória que não é continuado (ou seja, não associados a um ficheiro no disco), que pode utilizar para partilhar dados entre processos."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Uma combinação bit a bit dos valores de enumeração que especifica os opções de alocação de memória para o ficheiro de mapeamento de memória."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "As permissões que podem ser concedidas acesso a ficheiros e operações nos ficheiros de mapeamento de memória.       Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores da enumeração que especifica se um identificador para o ficheiro de mapeamento de memória pode ser herdado por um processo subordinado. A predefinição é <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>access</code> está definida como só de escrita com o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é menor ou igual a zero.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração.       - ou - <code>inheritability</code> não é um <xref:System.IO.HandleInheritability> valor de enumeração."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  id: CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria ou abre um ficheiro de mapeamento de memória que tenha a capacidade especificada na memória do sistema."
  remarks: "Utilize este método para criar ou abrir um ficheiro de mapeamento de memória que não é continuado (ou seja, não associados a um ficheiro no disco), que pode utilizar para partilhar dados entre processos."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem o nome especificado e o tamanho."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é maior do que o tamanho do espaço de endereços lógico.       - ou - <code>capacity</code> é menor ou igual a zero."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria ou abre um ficheiro de mapeamento de memória que tenha a capacidade especificada e o tipo de acesso na memória do sistema."
  remarks: "Utilize este método para criar ou abrir um ficheiro de mapeamento de memória que não é continuado (ou seja, não associados a um ficheiro no disco), que pode utilizar para partilhar dados entre processos."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>access</code> está definida como só de escrita com o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é maior do que o tamanho do espaço de endereços lógico.       - ou - <code>capacity</code> é menor ou igual a zero.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O sistema operativo negado o acesso ao ficheiro; especificado Por exemplo, o acesso está definido como <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> ou <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, mas o ficheiro ou diretório é só de leitura."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um novo ficheiro mapeada memória vazia ou abre um ficheiro de mapeada memória existente se existir com o mesmo nome. Se abrir um ficheiro existente, os argumentos de memória, capacidade e opções serão ignorados."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Uma combinação bit a bit dos valores que indicam as opções de alocação de memória a aplicar ao ficheiro."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um valor que especifica se um identificador para o ficheiro de mapeamento de memória pode ser herdado por um processo subordinado. A predefinição é <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>access</code> está definida como só de escrita com o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é maior do que o tamanho do espaço de endereços lógico.       - ou - <code>capacity</code> é menor ou igual a zero.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração.       - ou - <code>inheritability</code> não é um <xref:System.IO.HandleInheritability> valor de enumeração."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O sistema operativo negado o acesso ao ficheiro; especificado Por exemplo, o acesso está definido como <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> ou <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, mas o ficheiro ou diretório é só de leitura."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria ou abre um ficheiro de mapeamento de memória que tenha a capacidade especificada, o tipo de acesso, a atribuição de memória, as permissões de segurança e inheritability na memória do sistema."
  remarks: "Utilize este método para criar ou abrir um ficheiro de mapeamento de memória que não é continuado (ou seja, não associados a um ficheiro no disco), que pode utilizar para partilhar dados entre processos."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Um nome a atribuir ao ficheiro de mapeamento de memória."
    - id: capacity
      type: System.Int64
      description: "O tamanho máximo, em bytes, para alocar para o ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Uma combinação bit a bit dos valores de enumeração que especifica os opções de alocação de memória para o ficheiro de mapeamento de memória."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "As permissões que podem ser concedidas acesso a ficheiros e operações nos ficheiros de mapeamento de memória.       Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores da enumeração que especifica se um identificador para o ficheiro de mapeamento de memória pode ser herdado por um processo subordinado. A predefinição é <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia.       - ou - <code>access</code> está definida como só de escrita com o <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>é maior do que o tamanho do espaço de endereços lógico.       - ou - <code>capacity</code> é menor ou igual a zero.       - ou - <code>access</code> não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração.       - ou - <code>inheritability</code> não é um <xref:System.IO.HandleInheritability> valor de enumeração."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O sistema operativo negado especificado <code> access </code> para o ficheiro; por exemplo, <code> access </code> está definido como <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> ou <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, mas o ficheiro ou diretório é só de leitura."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  id: CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> que mapeia para uma vista do ficheiro de mapeamento de memória."
  remarks: "Pode utilizar a vista devolvida por este método de acesso aleatório para um ficheiro de mapeamento de memória."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Um bloco acessível aleatoriamente de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso ao ficheiro de mapeamento de memória não está autorizado."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  id: CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> que mapeia para uma vista do ficheiro de mapeamento de memória e de que tem o deslocamento especificado e o tamanho."
  remarks: "Pode utilizar a vista devolvida por este método de acesso aleatório para um ficheiro de mapeamento de memória.       Para criar uma vista completa do ficheiro de mapeamento de memória, especifique 0 (zero) para o `size` parâmetro. Se o fizer, o tamanho da vista pode ser inferior ou superior ao tamanho do ficheiro de origem no disco. Isto acontece porque as vistas são fornecidas em unidades de páginas de sistema e o tamanho da vista é arredondado para o próximo tamanho de página do sistema."
  example:
  - "The following example creates a view of a memory-mapped file and edits it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/visualbasic/eabd93aa-7563-4639-a698-_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/csharp/eabd93aa-7563-4639-a698-_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "O byte no qual pretende iniciar a vista."
    - id: size
      type: System.Int64
      description: "O tamanho da vista. Especifique de 0 (zero) para criar uma vista que inicia no `offset` e termina aproximadamente no fim do ficheiro de mapeamento de memória."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Um bloco acessível aleatoriamente de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>ou <code>size</code> é um valor negativo.       - ou - <code>size</code> é maior do que o espaço do endereço lógico."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso ao ficheiro de mapeamento de memória não está autorizado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> que mapeia para uma vista do ficheiro de mapeamento de memória, e que tenha especificado deslocamento, tamanho e restrições de acesso."
  remarks: "Pode utilizar a vista devolvida por este método de acesso aleatório para um ficheiro de mapeamento de memória.       Para criar uma vista completa do ficheiro de mapeamento de memória, especifique 0 (zero) para o `size` parâmetro. Se o fizer, o tamanho da vista pode ser inferior ou superior ao tamanho do ficheiro de origem no disco. Isto acontece porque as vistas são fornecidas em unidades de páginas de sistema e o tamanho da vista é arredondado para o próximo tamanho de página do sistema."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "O byte no qual pretende iniciar a vista."
    - id: size
      type: System.Int64
      description: "O tamanho da vista. Especifique de 0 (zero) para criar uma vista que inicia no `offset` e termina aproximadamente no fim do ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Um bloco acessível aleatoriamente de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>ou <code>size</code> é um valor negativo.       - ou - <code>size</code> é maior do que o espaço do endereço lógico."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>Não é válido para o ficheiro de mapeamento de memória."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  id: CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria uma sequência que mapeia para uma vista do ficheiro de mapeamento de memória."
  remarks: "Pode utilizar a sequência devolvida por este método para acesso sequencial para um ficheiro de mapeamento de memória, tal como para comunicações entre processos."
  example:
  - "The following example creates a stream and writes a value to it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/visualbasic/m-system.io.memorymapped_1_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/csharp/m-system.io.memorymapped_1_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Uma sequência de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso ao ficheiro de mapeamento de memória não está autorizado."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  id: CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria uma sequência que mapeia para uma vista do ficheiro de mapeamento de memória e de que tem o deslocamento especificado e o tamanho."
  remarks: "Pode utilizar a sequência devolvida por este método para acesso sequencial para um ficheiro de mapeamento de memória, tal como para comunicações entre processos.       Para criar uma vista completa do ficheiro de mapeamento de memória, especifique 0 (zero) para o `size` parâmetro. Se o fizer, o tamanho da vista pode ser inferior ou superior ao tamanho do ficheiro de origem no disco. Isto acontece porque as vistas são fornecidas em unidades de páginas de sistema e o tamanho da vista é arredondado para o próximo tamanho de página do sistema."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "O byte no qual pretende iniciar a vista."
    - id: size
      type: System.Int64
      description: "O tamanho da vista. Especifique de 0 (zero) para criar uma vista que inicia no `offset` e termina aproximadamente no fim do ficheiro de mapeamento de memória."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Uma sequência de memória que tenha o deslocamento especificado e o tamanho."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>ou <code>size</code> é um valor negativo.       - ou - <code>size</code> é maior do que o espaço do endereço lógico."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso ao ficheiro de mapeamento de memória não está autorizado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>é maior do que o total de memória virtual."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Cria uma sequência que mapeia para uma vista do ficheiro de mapeamento de memória e de que tem o deslocamento especificado, tamanho e tipo de acesso."
  remarks: "Pode utilizar a sequência devolvida por este método para acesso sequencial para um ficheiro de mapeamento de memória, tal como para comunicações entre processos.       Para criar uma vista completa do ficheiro de mapeamento de memória, especifique 0 (zero) para o `size` parâmetro. Se o fizer, o tamanho da vista pode ser inferior ou superior ao tamanho do ficheiro de origem no disco. Isto acontece porque as vistas são fornecidas em unidades de páginas de sistema e o tamanho da vista é arredondado para o próximo tamanho de página do sistema."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "O byte no qual pretende iniciar a vista."
    - id: size
      type: System.Int64
      description: "O tamanho da vista. Especifique de 0 (zero) para criar uma vista que inicia no `offset` e termina aproximadamente no fim do ficheiro de mapeamento de memória."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Um dos valores da enumeração que especifica o tipo de acesso permitido para o ficheiro de mapeamento de memória. A predefinição é <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Uma sequência de memória com as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>ou <code>size</code> é um valor negativo.       - ou - <code>size</code> é maior do que o espaço do endereço lógico.       - ou - <code>access </code>não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> valor de enumeração."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>Não é válido para o ficheiro de mapeamento de memória."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>é maior do que o total de memória virtual.       - ou - <code>access</code> é inválido para o ficheiro de mapeamento de memória."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  id: Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> e opcionalmente liberta os recursos geridos."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  id: GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Obtém o controlo de acesso ao recurso do ficheiro de mapeamento de memória."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "As permissões que podem ser concedidas acesso a ficheiros e operações nos ficheiros de mapeamento de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Falha de uma chamada subjacente para definir as informações de segurança."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Falha de uma chamada subjacente para definir as informações de segurança."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O ficheiro de mapeamento de memória está fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma atual é o Windows 98 ou anterior."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Falha de uma chamada subjacente para definir as informações de segurança.       - ou - o ficheiro de mapeamento de memória foi aberto como <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> só."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  id: OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Abre um ficheiro de mapeamento de memória existente que tem o nome especificado na memória do sistema."
  remarks: "O ficheiro de mapeamento de memória pode ser ambos um mapeamento de memória ficheiro continuado (associado a um ficheiro no disco) ou não persistente."
  example:
  - "**Opening a Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).  \n  \n [!code-cs[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/csharp/m-system.io.memorymapped_2_1.cs)]\n [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_2_1.vb)]  \n  \n **Opening a Non-Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file used for inter-process communication. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);
    parameters:
    - id: mapName
      type: System.String
      description: "O nome do ficheiro de mapeamento de memória para abrir."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem o nome especificado."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado para <code> mapName </code> não existe."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Abre um ficheiro de mapeamento de memória existente que tem os direitos de acesso e o nome especificados na memória do sistema."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);
    parameters:
    - id: mapName
      type: System.String
      description: "O nome do ficheiro de mapeamento de memória para abrir."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "Um dos valores da enumeração que especifica os direitos de acesso para aplicar o ficheiro de mapeamento de memória."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>Não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> valor de enumeração."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado para <code> mapName </code> não existe."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Abre um ficheiro de mapeamento de memória existente que tem o nome especificado, os direitos de acesso e inheritability na memória do sistema."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "O nome do ficheiro de mapeamento de memória para abrir."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "Um dos valores da enumeração que especifica os direitos de acesso para aplicar o ficheiro de mapeamento de memória."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores da enumeração que especifica se um identificador para o ficheiro de mapeamento de memória pode ser herdado por um processo subordinado. A predefinição é <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Um ficheiro de mapeamento de memória que tem as características especificadas."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>é uma cadeia vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>Não é um <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> valor de enumeração.       - ou - <code>inheritability</code> não é um <xref:System.IO.HandleInheritability> valor de enumeração."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O acesso solicitado é inválido para o ficheiro de mapeamento de memória."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado para <code> mapName </code> não existe."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  id: SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Obtém o identificador de ficheiro de um ficheiro de mapeamento de memória."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
      description: "O identificador para o ficheiro de mapeamento de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  id: SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Define o controlo de acesso para o recurso do ficheiro de mapeamento de memória."
  syntax:
    content: public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);
    parameters:
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "As permissões que podem ser concedidas acesso a ficheiros e operações nos ficheiros de mapeamento de memória."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>memoryMappedFileSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Falha de uma chamada subjacente para definir as informações de segurança."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Falha de uma chamada subjacente para definir as informações de segurança."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Falha de uma chamada subjacente para definir as informações de segurança."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileAccess
  nameWithType: MemoryMappedFileAccess
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileSecurity
  nameWithType: MemoryMappedFileSecurity
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileOptions
  nameWithType: MemoryMappedFileOptions
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewAccessor
  nameWithType: MemoryMappedViewAccessor
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewStream
  nameWithType: MemoryMappedViewStream
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileRights
  nameWithType: MemoryMappedFileRights
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: SafeMemoryMappedFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile
  nameWithType: MemoryMappedFile.CreateFromFile
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew
  nameWithType: MemoryMappedFile.CreateNew
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen
  nameWithType: MemoryMappedFile.CreateOrOpen
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor
  nameWithType: MemoryMappedFile.CreateViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream
  nameWithType: MemoryMappedFile.CreateViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose
  nameWithType: MemoryMappedFile.Dispose
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl
  nameWithType: MemoryMappedFile.GetAccessControl
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting
  nameWithType: MemoryMappedFile.OpenExisting
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl
  nameWithType: MemoryMappedFile.SetAccessControl
