### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.NetPeerTcpBinding
  id: NetPeerTcpBinding
  children:
  - System.ServiceModel.NetPeerTcpBinding.#ctor
  - System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)
  - System.ServiceModel.NetPeerTcpBinding.CreateBindingElements
  - System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  - System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  - System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  - System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  - System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  - System.ServiceModel.NetPeerTcpBinding.Port
  - System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  - System.ServiceModel.NetPeerTcpBinding.Resolver
  - System.ServiceModel.NetPeerTcpBinding.Scheme
  - System.ServiceModel.NetPeerTcpBinding.Security
  - System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity
  - System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  langs:
  - csharp
  name: NetPeerTcpBinding
  nameWithType: NetPeerTcpBinding
  fullName: System.ServiceModel.NetPeerTcpBinding
  type: Class
  summary: "Provides a secure binding for peer-to-peer network applications."
  remarks: "The NetPeerTcpBinding binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.       Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type. Channel factories produced using a configured instance of this type can be used to generate peer channels. A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).       This is one of the standard bindings provided by the Windows Communication Framework (WCF). It can be used in imperative code or specified in the corresponding XML configuration file for the application. The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized."
  syntax:
    content: >-
      [System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)]

      public class NetPeerTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: NetPeerTcpBinding()
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding()
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initializes a new default instance of the <xref href=&quot;System.ServiceModel.NetPeerTcpBinding&quot;></xref> class."
  syntax:
    content: public NetPeerTcpBinding ();
    parameters: []
  overload: System.ServiceModel.NetPeerTcpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: NetPeerTcpBinding(String)
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding(String)
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.NetPeerTcpBinding&quot;></xref> class with a specified configuration name."
  remarks: "This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name. If a configuration for that name already exists, the settings in the configuration file that contains that name are used. If the name does not already exist, the default configuration settings are used."
  syntax:
    content: public NetPeerTcpBinding (string configurationName);
    parameters:
    - id: configurationName
      type: System.String
      description: "The value of the <xref uid=&quot;langword_csharp_configurationName&quot; name=&quot;configurationName&quot; href=&quot;&quot;></xref> attribute that identifies the binding element whose settings are used to initialize the binding."
  overload: System.ServiceModel.NetPeerTcpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "The configuration is invalid."
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: NetPeerTcpBinding.CreateBindingElements()
  fullName: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Creates a collection with the binding elements for the binding."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "The &lt;xref:System.Collections.Generic.ICollection%601&gt; of type <xref:System.ServiceModel.Channels.BindingElement> that makes up the binding."
  overload: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: NetPeerTcpBinding.EnvelopeVersion
  fullName: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets the SOAP version used with this binding."
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "<xref:System.ServiceModel.EnvelopeVersion> that specifies the version of SOAP to use with this binding."
  overload: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  id: IsPnrpAvailable
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: IsPnrpAvailable
  nameWithType: NetPeerTcpBinding.IsPnrpAvailable
  fullName: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets whether the PNRP service is installed and available on the computer."
  syntax:
    content: public static bool IsPnrpAvailable { get; }
    return:
      type: System.Boolean
      description: "true if PNRP is installed and configured; false if it is not."
  overload: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  id: ListenIPAddress
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ListenIPAddress
  nameWithType: NetPeerTcpBinding.ListenIPAddress
  fullName: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the IP address used for listening by the local peer node."
  remarks: "If this property is not set, or is set to `null` or <xref:System.String.Empty>, the associated <xref:System.ServiceModel.PeerNode> listens on all global addresses (both IPv4 and IPv6) configured for the local machine.       If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address. IPv4 and IPv6 wildcard addresses are not considered valid.       If a non-`null` IP address string is specified for this property in conjunction with <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, then the IP address must be associated with a physical interface rather than a virtual one.       ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP). If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface). This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces. By setting this property to null, all global addresses are published in the global PNRP cloud."
  syntax:
    content: public System.Net.IPAddress ListenIPAddress { get; set; }
    return:
      type: System.Net.IPAddress
      description: "A <xref:System.String> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening."
  overload: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The provided address is invalid or incorrectly formed."
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer."
  remarks: "The value of MaxBufferPoolSize cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB)."
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int32> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes."
  overload: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding."
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int32> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding. The default value is 65,536 (64 KB)."
  overload: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Port
  id: Port
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Port
  nameWithType: NetPeerTcpBinding.Port
  fullName: System.ServiceModel.NetPeerTcpBinding.Port
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the network port on which to bind."
  remarks: "If the port value is invalid, <xref:System.ArgumentException> is raised. The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports."
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32> value that represents the network port on which this binding instance will process peer-specific TCP messages."
  overload: System.ServiceModel.NetPeerTcpBinding.Port*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: NetPeerTcpBinding.ReaderQuotas
  fullName: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the <xref:System.Xml.XmlDictionaryReaderQuotas> that is associated with this binding."
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "The <xref:System.Xml.XmlDictionaryReaderQuotas> that is associated with this binding."
  overload: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The application attempted to set this property to null."
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Resolver
  id: Resolver
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Resolver
  nameWithType: NetPeerTcpBinding.Resolver
  fullName: System.ServiceModel.NetPeerTcpBinding.Resolver
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets the <xref href=&quot;System.ServiceModel.PeerResolver&quot;></xref> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh."
  syntax:
    content: public System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver { get; }
    return:
      type: System.ServiceModel.PeerResolvers.PeerResolverSettings
      description: "A <xref href=&quot;System.ServiceModel.PeerResolver&quot;></xref> used to resolve a peer mesh ID to a set of <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;></xref> instances representing several nodes participating in the mesh."
  overload: System.ServiceModel.NetPeerTcpBinding.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: NetPeerTcpBinding.Scheme
  fullName: System.ServiceModel.NetPeerTcpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets the URI scheme used for the transport protocol associated with this binding."
  remarks: "This value must be &quot;net.p2p&quot;."
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "A <xref:System.String> that specifies the URI scheme for the specific transport protocol used for this binding."
  overload: System.ServiceModel.NetPeerTcpBinding.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Security
  id: Security
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Security
  nameWithType: NetPeerTcpBinding.Security
  fullName: System.ServiceModel.NetPeerTcpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets and sets the security to set on peer channels created by this binding."
  syntax:
    content: public System.ServiceModel.PeerSecuritySettings Security { get; set; }
    return:
      type: System.ServiceModel.PeerSecuritySettings
      description: "<xref href=&quot;System.ServiceModel.PeerSecuritySettings&quot;></xref> enumeration value that indicates the security to set on peer channels created by this binding. Security can be either message- or transport-specific."
  overload: System.ServiceModel.NetPeerTcpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets a value that specifies whether reader quota data for the binding should be serialized."
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "Returns <xref:System.Boolean> that specifies <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if reader quota data should be serialized, and <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if it should not be serialized."
  overload: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets a value that specifies whether security information for the binding should be serialized."
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "Returns <xref:System.Boolean> that specifies <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the security information for the binding should be serialized, and <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if it should not be serialized.."
  overload: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously."
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "If true, incoming requests are handled synchronously; if false, they are handled asynchronously. The default value is false, with requests handled asynchronously."
  overload: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: NetPeerTcpBinding()
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding()
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding()
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: NetPeerTcpBinding(String)
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding(String)
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: NetPeerTcpBinding.CreateBindingElements()
  fullName: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: NetPeerTcpBinding.EnvelopeVersion
  fullName: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: IsPnrpAvailable
  nameWithType: NetPeerTcpBinding.IsPnrpAvailable
  fullName: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ListenIPAddress
  nameWithType: NetPeerTcpBinding.ListenIPAddress
  fullName: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.NetPeerTcpBinding.Port
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Port
  nameWithType: NetPeerTcpBinding.Port
  fullName: System.ServiceModel.NetPeerTcpBinding.Port
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: NetPeerTcpBinding.ReaderQuotas
  fullName: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.NetPeerTcpBinding.Resolver
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Resolver
  nameWithType: NetPeerTcpBinding.Resolver
  fullName: System.ServiceModel.NetPeerTcpBinding.Resolver
- uid: System.ServiceModel.PeerResolvers.PeerResolverSettings
  parent: System.ServiceModel.PeerResolvers
  isExternal: false
  name: PeerResolverSettings
  nameWithType: PeerResolverSettings
  fullName: System.ServiceModel.PeerResolvers.PeerResolverSettings
- uid: System.ServiceModel.NetPeerTcpBinding.Scheme
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Scheme
  nameWithType: NetPeerTcpBinding.Scheme
  fullName: System.ServiceModel.NetPeerTcpBinding.Scheme
- uid: System.ServiceModel.NetPeerTcpBinding.Security
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Security
  nameWithType: NetPeerTcpBinding.Security
  fullName: System.ServiceModel.NetPeerTcpBinding.Security
- uid: System.ServiceModel.PeerSecuritySettings
  parent: System.ServiceModel
  isExternal: false
  name: PeerSecuritySettings
  nameWithType: PeerSecuritySettings
  fullName: System.ServiceModel.PeerSecuritySettings
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: NetPeerTcpBinding
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding
- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: NetPeerTcpBinding.CreateBindingElements
- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: NetPeerTcpBinding.EnvelopeVersion
- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: IsPnrpAvailable
  nameWithType: NetPeerTcpBinding.IsPnrpAvailable
- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ListenIPAddress
  nameWithType: NetPeerTcpBinding.ListenIPAddress
- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize
- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.NetPeerTcpBinding.Port*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Port
  nameWithType: NetPeerTcpBinding.Port
- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: NetPeerTcpBinding.ReaderQuotas
- uid: System.ServiceModel.NetPeerTcpBinding.Resolver*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Resolver
  nameWithType: NetPeerTcpBinding.Resolver
- uid: System.ServiceModel.NetPeerTcpBinding.Scheme*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Scheme
  nameWithType: NetPeerTcpBinding.Scheme
- uid: System.ServiceModel.NetPeerTcpBinding.Security*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Security
  nameWithType: NetPeerTcpBinding.Security
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity
- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
