### YamlMime:ManagedReference
items:
- uid: System.ServiceProcess.ServiceControllerPermissionEntry
  id: ServiceControllerPermissionEntry
  children:
  - System.ServiceProcess.ServiceControllerPermissionEntry.#ctor
  - System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)
  - System.ServiceProcess.ServiceControllerPermissionEntry.MachineName
  - System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess
  - System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName
  langs:
  - csharp
  name: ServiceControllerPermissionEntry
  nameWithType: ServiceControllerPermissionEntry
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry
  type: Class
  summary: "Defines the smallest unit of a code access security permission that is set for a <see cref=&quot;T:System.ServiceProcess.ServiceController&quot;></see>."
  remarks: "For more information on code access security, see [Code Access Security](../Topic/Code%20Access%20Security.md)."
  syntax:
    content: public class ServiceControllerPermissionEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.#ctor
  id: '#ctor'
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  langs:
  - csharp
  name: ServiceControllerPermissionEntry()
  nameWithType: ServiceControllerPermissionEntry.ServiceControllerPermissionEntry()
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceControllerPermissionEntry()
  type: Constructor
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Initializes a new instance of the <see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot;></see> class."
  syntax:
    content: public ServiceControllerPermissionEntry ();
    parameters: []
  overload: System.ServiceProcess.ServiceControllerPermissionEntry.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)
  id: '#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)'
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  langs:
  - csharp
  name: ServiceControllerPermissionEntry(ServiceControllerPermissionAccess,String,String)
  nameWithType: ServiceControllerPermissionEntry.ServiceControllerPermissionEntry(ServiceControllerPermissionAccess,String,String)
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceControllerPermissionEntry(ServiceControllerPermissionAccess,String,String)
  type: Constructor
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Initializes a new instance of the <see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionEntry&quot;></see> class with the specified permission access levels, the name of the computer, and a short name that identifies the service."
  syntax:
    content: public ServiceControllerPermissionEntry (System.ServiceProcess.ServiceControllerPermissionAccess permissionAccess, string machineName, string serviceName);
    parameters:
    - id: permissionAccess
      type: System.ServiceProcess.ServiceControllerPermissionAccess
      description: "One of the  values."
    - id: machineName
      type: System.String
      description: "The name of the computer on which the service resides."
    - id: serviceName
      type: System.String
      description: "The short name that identifies the service to the system."
  overload: System.ServiceProcess.ServiceControllerPermissionEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    serviceName is ."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    machineName is not valid.  \n  \n -or-  \n  \n serviceName is not valid."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.MachineName
  id: MachineName
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  langs:
  - csharp
  name: MachineName
  nameWithType: ServiceControllerPermissionEntry.MachineName
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.MachineName
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Gets the name of the computer on which the service resides."
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "The name of the computer that is running the service associated with the <see cref=&quot;T:System.ServiceProcess.ServiceController&quot;></see>."
  overload: System.ServiceProcess.ServiceControllerPermissionEntry.MachineName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess
  id: PermissionAccess
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  langs:
  - csharp
  name: PermissionAccess
  nameWithType: ServiceControllerPermissionEntry.PermissionAccess
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Gets the access levels used in the permissions request."
  syntax:
    content: public System.ServiceProcess.ServiceControllerPermissionAccess PermissionAccess { get; }
    return:
      type: System.ServiceProcess.ServiceControllerPermissionAccess
      description: "A bitwise combination of the <see cref=&quot;T:System.ServiceProcess.ServiceControllerPermissionAccess&quot;></see> values."
  overload: System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName
  id: ServiceName
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  langs:
  - csharp
  name: ServiceName
  nameWithType: ServiceControllerPermissionEntry.ServiceName
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "Gets the short name that identifies the service to the system."
  syntax:
    content: public string ServiceName { get; }
    return:
      type: System.String
      description: "The name of the service."
  overload: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.#ctor
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: ServiceControllerPermissionEntry()
  nameWithType: ServiceControllerPermissionEntry.ServiceControllerPermissionEntry()
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceControllerPermissionEntry()
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: ServiceControllerPermissionEntry(ServiceControllerPermissionAccess,String,String)
  nameWithType: ServiceControllerPermissionEntry.ServiceControllerPermissionEntry(ServiceControllerPermissionAccess,String,String)
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceControllerPermissionEntry(ServiceControllerPermissionAccess,String,String)
- uid: System.ServiceProcess.ServiceControllerPermissionAccess
  parent: System.ServiceProcess
  isExternal: false
  name: ServiceControllerPermissionAccess
  nameWithType: ServiceControllerPermissionAccess
  fullName: System.ServiceProcess.ServiceControllerPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.MachineName
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: MachineName
  nameWithType: ServiceControllerPermissionEntry.MachineName
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.MachineName
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: PermissionAccess
  nameWithType: ServiceControllerPermissionEntry.PermissionAccess
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: ServiceName
  nameWithType: ServiceControllerPermissionEntry.ServiceName
  fullName: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.#ctor*
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: ServiceControllerPermissionEntry
  nameWithType: ServiceControllerPermissionEntry.ServiceControllerPermissionEntry
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.MachineName*
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: MachineName
  nameWithType: ServiceControllerPermissionEntry.MachineName
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess*
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: PermissionAccess
  nameWithType: ServiceControllerPermissionEntry.PermissionAccess
- uid: System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName*
  parent: System.ServiceProcess.ServiceControllerPermissionEntry
  isExternal: false
  name: ServiceName
  nameWithType: ServiceControllerPermissionEntry.ServiceName
