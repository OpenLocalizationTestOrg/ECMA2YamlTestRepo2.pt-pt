### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationWriter
  id: XmlSerializationWriter
  children:
  - System.Xml.Serialization.XmlSerializationWriter.#ctor
  - System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  - System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.EscapeName
  - System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  - System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  - System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  - System.Xml.Serialization.XmlSerializationWriter.Namespaces
  - System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.Writer
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  langs:
  - csharp
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter
  fullName: System.Xml.Serialization.XmlSerializationWriter
  type: Class
  summary: "Represents an abstract class used for controlling serialization by the <xref:System.Xml.Serialization.XmlSerializer> class."
  remarks: "During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization that is derived from the abstract XmlSerializationWriter class. XmlSerializationWriter is also implemented within the .NET Framework for serialization of <xref:System.Web.Services.Discovery.DiscoveryDocument> and <xref:System.Web.Services.Description.ServiceDescription> objects into XML documents.       You should not derive classes from XmlSerializationWriter. Instead, call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method."
  syntax:
    content: 'public abstract class XmlSerializationWriter : System.Xml.Serialization.XmlSerializationGeneratedCode'
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: XmlSerializationWriter()
  nameWithType: XmlSerializationWriter.XmlSerializationWriter()
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Serialization.XmlSerializationWriter&quot;></xref> class."
  syntax:
    content: protected XmlSerializationWriter ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  id: AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  nameWithType: XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  fullName: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Stores an implementation of the <xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;></xref> delegate and the type it applies to, for a later invocation."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization that is derived from <xref:System.Xml.Serialization.XmlSerializationWriter>. During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> delegate. It does so for certain mappings between .NET Framework types and XML data types that are serialized via SOAP-encoded XML and are not root elements. Then, as necessary, a write method is called during serialization.       You should not directly create an instance of <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void AddWriteCallback (Type type, string typeName, string typeNs, System.Xml.Serialization.XmlSerializationWriteCallback callback);
    parameters:
    - id: type
      type: System.Type
      description: "The <xref:System.Type> of objects that are serialized."
    - id: typeName
      type: System.String
      description: "The name of the type of objects that are serialized."
    - id: typeNs
      type: System.String
      description: "The namespace of the type of objects that are serialized."
    - id: callback
      type: System.Xml.Serialization.XmlSerializationWriteCallback
      description: "An instance of the <xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;></xref> delegate."
  overload: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  id: CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateChoiceIdentifierValueException(String,String,String,String)
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates an unexpected name for an element that adheres to an XML Schema <xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;></xref> element declaration."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected Exception CreateChoiceIdentifierValueException (string value, string identifier, string name, string ns);
    parameters:
    - id: value
      type: System.String
      description: "The name that is not valid."
    - id: identifier
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;></xref> element declaration that the name belongs to."
    - id: name
      type: System.String
      description: "The expected local name of an element."
    - id: ns
      type: System.String
      description: "The expected namespace of an element."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  id: CreateInvalidAnyTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidAnyTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates the <xref:System.Xml.Serialization.XmlAnyElementAttribute> which has been invalidly applied to a member; only members that are of type <xref href=&quot;System.Xml.XmlNode&quot;></xref>, or derived from <xref href=&quot;System.Xml.XmlNode&quot;></xref>, are valid."
  syntax:
    content: protected Exception CreateInvalidAnyTypeException (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object that represents the invalid member."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  id: CreateInvalidAnyTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidAnyTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates the <xref:System.Xml.Serialization.XmlAnyElementAttribute> which has been invalidly applied to a member; only members that are of type <xref href=&quot;System.Xml.XmlNode&quot;></xref>, or derived from <xref href=&quot;System.Xml.XmlNode&quot;></xref>, are valid."
  syntax:
    content: protected Exception CreateInvalidAnyTypeException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The <xref:System.Type> that is invalid."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  id: CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidChoiceIdentifierValueException(String,String)
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates a failure while writing an array where an XML Schema <xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;></xref> element declaration is applied."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected Exception CreateInvalidChoiceIdentifierValueException (string type, string identifier);
    parameters:
    - id: type
      type: System.String
      description: "The type being serialized."
    - id: identifier
      type: System.String
      description: "A name for the <xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;></xref> element declaration."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  id: CreateInvalidEnumValueException(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidEnumValueException(Object,String)
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> for an invalid enumeration value."
  syntax:
    content: protected Exception CreateInvalidEnumValueException (object value, string typeName);
    parameters:
    - id: value
      type: System.Object
      description: "An object that represents the invalid enumeration."
    - id: typeName
      type: System.String
      description: "The XML type name."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  id: CreateMismatchChoiceException(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateMismatchChoiceException(String,String,String)
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates that a value for an XML element does not match an enumeration type."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected Exception CreateMismatchChoiceException (string value, string elementName, string enumValue);
    parameters:
    - id: value
      type: System.String
      description: "The value that is not valid."
    - id: elementName
      type: System.String
      description: "The name of the XML element with an invalid value."
    - id: enumValue
      type: System.String
      description: "The valid value."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  id: CreateUnknownAnyElementException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownAnyElementException(String,String)
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates that an XML element that should adhere to the XML Schema <xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;></xref> element declaration cannot be processed."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected Exception CreateUnknownAnyElementException (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "The XML element that cannot be processed."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  id: CreateUnknownTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected Exception CreateUnknownTypeException (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object whose type cannot be serialized."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  id: CreateUnknownTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Creates an <xref:System.InvalidOperationException> that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected Exception CreateUnknownTypeException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type that cannot be serialized."
    return:
      type: System.Exception
      description: "The newly created exception."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  id: EscapeName
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
  fullName: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Gets or sets a value that indicates whether the <xref:System.Xml.XmlConvert.EncodeName*> method is used to write valid XML."
  remarks: "The <xref:System.Xml.XmlConvert.EncodeName%2A> method writes valid XML from invalid sources. For example, the <xref:System.Data.DataColumn.ColumnName%2A> property of the <xref:System.Data.DataColumn> class can contain spaces, which are invalid as XML. The <xref:System.Xml.XmlConvert.DecodeName%2A> method reads the encoded XML and restores it to the original value. However, the <xref:System.Xml.Schema.XmlSchema.Read%2A> method of the <xref:System.Xml.Schema.XmlSchema> cannot read such encoded XML. In that case, set the EscapeName property to `false` to disable the encoding of the XML."
  syntax:
    content: protected bool EscapeName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*> method returns an encoded name; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.EscapeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  id: FromByteArrayBase64(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromByteArrayBase64(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayBase64(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Processes a base-64 byte array."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       Rather than return a string as other similar &quot;from&quot; methods, the static FromByteArrayBase64 method returns the original `byte[]` object to improve performance and conserve memory."
  syntax:
    content: protected static byte[] FromByteArrayBase64 (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "A base-64 <xref:System.Byte> array."
    return:
      type: System.Byte[]
      description: "The same byte array that was passed in as an argument."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  id: FromByteArrayHex(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromByteArrayHex(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayHex(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Produces a string from an input hexadecimal byte array."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromByteArrayHex method is static."
  syntax:
    content: protected static string FromByteArrayHex (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "A hexadecimal byte array to translate to a string."
    return:
      type: System.String
      description: "The byte array value converted to a string."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  id: FromChar(System.Char)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromChar(Char)
  nameWithType: XmlSerializationWriter.FromChar(Char)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar(Char)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Produces a string from an input <xref:System.Char>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromChar method is static."
  syntax:
    content: protected static string FromChar (char value);
    parameters:
    - id: value
      type: System.Char
      description: "A <xref:System.Char> to translate to a string."
    return:
      type: System.String
      description: "The <xref:System.Char> value converted to a string."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  id: FromDate(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromDate(DateTime)
  nameWithType: XmlSerializationWriter.FromDate(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDate(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Produces a string from a <xref:System.DateTime> object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromDate method is static."
  syntax:
    content: protected static string FromDate (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "A <xref:System.DateTime> to translate to a string."
    return:
      type: System.String
      description: "A string representation of the <xref:System.DateTime> that shows the date but no time."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromDate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  id: FromDateTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromDateTime(DateTime)
  nameWithType: XmlSerializationWriter.FromDateTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Produces a string from an input <xref:System.DateTime>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromDateTime method is static."
  syntax:
    content: protected static string FromDateTime (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "A <xref:System.DateTime> to translate to a string."
    return:
      type: System.String
      description: "A string representation of the <xref:System.DateTime> that shows the date and time."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  id: FromEnum(System.Int64,System.String[],System.Int64[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromEnum(Int64,String[],Int64[])
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Produces a string that consists of delimited identifiers that represent the enumeration members that have been set."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromEnum method is static."
  syntax:
    content: protected static string FromEnum (long value, string[] values, long[] ids);
    parameters:
    - id: value
      type: System.Int64
      description: "The enumeration value as a series of bitwise <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;></xref> operations."
    - id: values
      type: System.String[]
      description: "The enumeration&quot;s name values."
    - id: ids
      type: System.Int64[]
      description: "The enumeration&quot;s constant values."
    return:
      type: System.String
      description: "A string that consists of delimited identifiers, where each represents a member from the set enumerator list."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  id: FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromEnum(Int64,String[],Int64[],String)
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected static string FromEnum (long value, string[] values, long[] ids, string typeName);
    parameters:
    - id: value
      type: System.Int64
      description: "The enumeration value as a series of bitwise <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;></xref> operations."
    - id: values
      type: System.String[]
      description: "The values of the enumeration."
    - id: ids
      type: System.Int64[]
      description: "The constants of the enumeration."
    - id: typeName
      type: System.String
      description: "The name of the type"
    return:
      type: System.String
      description: "A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  id: FromTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromTime(DateTime)
  nameWithType: XmlSerializationWriter.FromTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromTime(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Produces a string from a <xref:System.DateTime> object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromTime method is static."
  syntax:
    content: protected static string FromTime (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "A <xref:System.DateTime> that is translated to a string."
    return:
      type: System.String
      description: "A string representation of the <xref:System.DateTime> object that shows the time but no date."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  id: FromXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlName(String)
  nameWithType: XmlSerializationWriter.FromXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Encodes a valid XML name by replacing characters that are not valid with escape sequences."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromXmlName method is static."
  syntax:
    content: protected static string FromXmlName (string name);
    parameters:
    - id: name
      type: System.String
      description: "A string to be used as an XML name."
    return:
      type: System.String
      description: "An encoded string."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  id: FromXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNCName(String)
  nameWithType: XmlSerializationWriter.FromXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Encodes a valid XML local name by replacing characters that are not valid with escape sequences."
  remarks: "The protected members of the <xref:System.Xml.Serialization.XmlSerializationWriter> class are intended for use by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromXmlNCName method is static."
  syntax:
    content: protected static string FromXmlNCName (string ncName);
    parameters:
    - id: ncName
      type: System.String
      description: "A string to be used as a local (unqualified) XML name."
    return:
      type: System.String
      description: "An encoded string."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  id: FromXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNmToken(String)
  nameWithType: XmlSerializationWriter.FromXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Encodes an XML name."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromXmlNmToken method is static."
  syntax:
    content: protected static string FromXmlNmToken (string nmToken);
    parameters:
    - id: nmToken
      type: System.String
      description: "An XML name to be encoded."
    return:
      type: System.String
      description: "An encoded string."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  id: FromXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNmTokens(String)
  nameWithType: XmlSerializationWriter.FromXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Encodes a space-delimited sequence of XML names into a single XML name."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The FromXmlNmTokens method is static."
  syntax:
    content: protected static string FromXmlNmTokens (string nmTokens);
    parameters:
    - id: nmTokens
      type: System.String
      description: "A space-delimited sequence of XML names to be encoded."
    return:
      type: System.String
      description: "An encoded string."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  id: FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlQualifiedName(XmlQualifiedName)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Returns an XML qualified name, with invalid characters replaced by escape sequences."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected string FromXmlQualifiedName (System.Xml.XmlQualifiedName xmlQualifiedName);
    parameters:
    - id: xmlQualifiedName
      type: System.Xml.XmlQualifiedName
      description: "An <xref:System.Xml.XmlQualifiedName> that represents the XML to be written."
    return:
      type: System.String
      description: "An XML qualified name, with invalid characters replaced by escape sequences."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  id: FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlQualifiedName(XmlQualifiedName,Boolean)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences."
  syntax:
    content: protected string FromXmlQualifiedName (System.Xml.XmlQualifiedName xmlQualifiedName, bool ignoreEmpty);
    parameters:
    - id: xmlQualifiedName
      type: System.Xml.XmlQualifiedName
      description: "An <xref:System.Xml.XmlQualifiedName> that represents the XML to be written."
    - id: ignoreEmpty
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to ignore empty spaces in the string; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "An XML qualified name, with invalid characters replaced by escape sequences."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: InitCallbacks()
  nameWithType: XmlSerializationWriter.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Initializes an instances of the <xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;></xref> delegate to serialize SOAP-encoded XML data."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization that is derived from <xref:System.Xml.Serialization.XmlSerializationWriter>. During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> delegate. It does so for certain mappings between .NET Framework types and XML data types that are serialized using SOAP-encoded XML and are not root elements. Then, as necessary, a write method is called during serialization.       The abstract InitCallbacks method is where the temporary derived class creates an instance of and initializes write callback methods.       You should not directly create an instance of <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected abstract void InitCallbacks ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  id: Namespaces
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
  fullName: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected System.Collections.ArrayList Namespaces { get; set; }
    return:
      type: System.Collections.ArrayList
      description: "An <xref href=&quot;System.Collections.ArrayList&quot;></xref> that contains the namespaces and prefix pairs."
  overload: System.Xml.Serialization.XmlSerializationWriter.Namespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  id: ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Gets a dynamically generated assembly by name."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The ResolveDynamicAssembly method is static."
  syntax:
    content: protected static System.Reflection.Assembly ResolveDynamicAssembly (string assemblyFullName);
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "The full name of the assembly."
    return:
      type: System.Reflection.Assembly
      description: "A dynamically generated assembly."
  overload: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  id: TopLevelElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: TopLevelElement()
  nameWithType: XmlSerializationWriter.TopLevelElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Initializes object references only while serializing a SOAP-encoded SOAP message."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `multiRef` element and to be referenced any number of times by substitute elements. The TopLevelElement method helps keep track of the objects that can be serialized as `multiRef` elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void TopLevelElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  id: WriteAttribute(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Instructs an <xref:System.Xml.XmlWriter> object to write an XML attribute that has no namespace specified for its name."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteAttribute (string localName, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML attribute."
    - id: value
      type: System.Byte[]
      description: "The value of the XML attribute as a byte array."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  id: WriteAttribute(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Instructs the <xref:System.Xml.XmlWriter> to write an XML attribute that has no namespace specified for its name."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteAttribute (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML attribute."
    - id: value
      type: System.String
      description: "The value of the XML attribute as a string."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  id: WriteAttribute(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Instructs an <xref:System.Xml.XmlWriter> object to write an XML attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteAttribute (string localName, string ns, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML attribute."
    - id: ns
      type: System.String
      description: "The namespace of the XML attribute."
    - id: value
      type: System.Byte[]
      description: "The value of the XML attribute as a byte array."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  id: WriteAttribute(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteAttribute (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML attribute."
    - id: ns
      type: System.String
      description: "The namespace of the XML attribute."
    - id: value
      type: System.String
      description: "The value of the XML attribute as a string."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  id: WriteAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML attribute where the namespace prefix is provided manually."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteAttribute (string prefix, string localName, string ns, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "The namespace prefix to write."
    - id: localName
      type: System.String
      description: "The local name of the XML attribute."
    - id: ns
      type: System.String
      description: "The namespace represented by the prefix."
    - id: value
      type: System.String
      description: "The value of the XML attribute as a string."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML node object within the body of a named XML element."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The WriteElementEncoded method is called only when writing SOAP-encoded XML, as described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteElementEncoded (System.Xml.XmlNode node, string name, string ns, bool isNullable, bool any);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "The XML node to write, possibly a child XML element."
    - id: name
      type: System.String
      description: "The local name of the parent XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the parent XML element to write."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the object to serialize is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: any
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the node, if an XML element, adheres to an XML Schema <xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;></xref> element declaration; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Instructs an <xref:System.Xml.XmlWriter> object to write an <xref href=&quot;System.Xml.XmlNode&quot;></xref> object within the body of a named XML element."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The WriteElementLiteral method is called only when writing literal XML that can be defined in an XML Schema document."
  syntax:
    content: protected void WriteElementLiteral (System.Xml.XmlNode node, string name, string ns, bool isNullable, bool any);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "The XML node to write, possibly a child XML element."
    - id: name
      type: System.String
      description: "The local name of the parent XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the parent XML element to write."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the object to serialize is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: any
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the node, if an XML element, adheres to an XML Schema <xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;></xref> element declaration; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified qualified name in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementQualifiedName (string localName, System.Xml.XmlQualifiedName value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "The name to write, using its prefix if namespace-qualified, in the element text."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified qualified name in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementQualifiedName (string localName, string ns, System.Xml.XmlQualifiedName value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "The name to write, using its prefix if namespace-qualified, in the element text."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified qualified name in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementQualifiedName (string localName, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "The name to write, using its prefix if namespace-qualified, in the element text."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified qualified name in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementQualifiedName (string localName, string ns, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "The name to write, using its prefix if namespace-qualified, in the element text."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  id: WriteElementString(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementString (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element to be written without namespace qualification."
    - id: value
      type: System.String
      description: "The text value of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  id: WriteElementString(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementString (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.String
      description: "The text value of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementString (string localName, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: value
      type: System.String
      description: "The text value of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementString (string localName, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.String
      description: "The text value of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  id: WriteElementStringRaw(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: value
      type: System.Byte[]
      description: "The text value of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  id: WriteElementStringRaw(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: value
      type: System.String
      description: "The text value of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: value
      type: System.Byte[]
      description: "The text value of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  id: WriteElementStringRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.Byte[]
      description: "The text value of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  id: WriteElementStringRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.String
      description: "The text value of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: value
      type: System.String
      description: "The text value of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.Byte[]
      description: "The text value of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with a specified value in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "The local name of the XML element."
    - id: ns
      type: System.String
      description: "The namespace of the XML element."
    - id: value
      type: System.String
      description: "The text value of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  id: WriteEmptyTag(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEmptyTag(String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element whose body is empty."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteEmptyTag (string name);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  id: WriteEmptyTag(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEmptyTag(String,String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element whose body is empty."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteEmptyTag (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  id: WriteEndElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEndElement()
  nameWithType: XmlSerializationWriter.WriteEndElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a <xref uid=&quot;langword_csharp_&lt;closing&gt;&quot; name=&quot;&lt;closing&gt;&quot; href=&quot;&quot;></xref> element tag."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteEndElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  id: WriteEndElement(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEndElement(Object)
  nameWithType: XmlSerializationWriter.WriteEndElement(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a <xref uid=&quot;langword_csharp_&lt;closing&gt;&quot; name=&quot;&lt;closing&gt;&quot; href=&quot;&quot;></xref> element tag."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteEndElement (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object being serialized."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  id: WriteId(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteId(Object)
  nameWithType: XmlSerializationWriter.WriteId(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteId(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an <xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;></xref> attribute that appears in a SOAP-encoded <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> element."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `multiRef` element identified by an `id` attribute. The `id` value can be referenced multiple times by `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteId (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object being serialized."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  id: WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNamespaceDeclarations(XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes the namespace declaration attributes."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteNamespaceDeclarations (System.Xml.Serialization.XmlSerializerNamespaces xmlns);
    parameters:
    - id: xmlns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "The XML namespaces to declare."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element whose body contains a valid XML qualified name. <xref:System.Xml.XmlWriter> inserts an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableQualifiedNameEncoded method is called only when writing SOAP-encoded XML, as described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteNullableQualifiedNameEncoded (string name, string ns, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "The XML qualified name to write in the body of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element whose body contains a valid XML qualified name. <xref:System.Xml.XmlWriter> inserts an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableQualifiedNameLiteral method is called only when writing literal XML that can be defined in an XML Schema document."
  syntax:
    content: protected void WriteNullableQualifiedNameLiteral (string name, string ns, System.Xml.XmlQualifiedName value);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "The XML qualified name to write in the body of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element that contains a string as the body. <xref:System.Xml.XmlWriter> inserts an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableStringEncoded method is called only when writing SOAP-encoded XML, as described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteNullableStringEncoded (string name, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.String
      description: "The string to write in the body of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a byte array as the body of an XML element. <xref:System.Xml.XmlWriter> inserts an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableStringEncodedRaw method is called only when writing SOAP-encoded XML, as described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteNullableStringEncodedRaw (string name, string ns, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.Byte[]
      description: "The byte array to write in the body of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element that contains a string as the body. <xref:System.Xml.XmlWriter> inserts an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableStringEncodedRaw method is called only when writing SOAP-encoded XML, as described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteNullableStringEncodedRaw (string name, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.String
      description: "The string to write in the body of the XML element."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "The name of the XML Schema data type to be written to the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  id: WriteNullableStringLiteral(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteral(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element that contains a string as the body. <xref:System.Xml.XmlWriter> inserts an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableStringLiteral method is called only when writing literal XML that can be defined in an XML Schema document."
  syntax:
    content: protected void WriteNullableStringLiteral (string name, string ns, string value);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.String
      description: "The string to write in the body of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  id: WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteralRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a byte array as the body of an XML element. <xref:System.Xml.XmlWriter> inserts an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableStringLiteralRaw method is called only when writing literal XML that can be defined in an XML Schema document."
  syntax:
    content: protected void WriteNullableStringLiteralRaw (string name, string ns, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.Byte[]
      description: "The byte array to write in the body of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  id: WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteralRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element that contains a string as the body. <xref:System.Xml.XmlWriter> inserts a <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the string&quot;s value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullableStringLiteralRaw method is called only when writing literal XML that can be defined in an XML Schema document."
  syntax:
    content: protected void WriteNullableStringLiteralRaw (string name, string ns, string value);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: value
      type: System.String
      description: "The string to write in the body of the XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  id: WriteNullTagEncoded(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagEncoded(String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullTagEncoded method is called only when writing SOAP-encoded XML, as described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteNullTagEncoded (string name);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  id: WriteNullTagEncoded(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagEncoded(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullTagEncoded method is called only when writing SOAP-encoded XML, as described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteNullTagEncoded (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  id: WriteNullTagLiteral(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagLiteral(String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullTagLiteral method is called only when writing literal XML that can be defined in an XML Schema document."
  syntax:
    content: protected void WriteNullTagLiteral (string name);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  id: WriteNullTagLiteral(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagLiteral(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element with an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       When set to `true`, the `nil` attribute from the XML Schema instance namespace (abbreviated `xsi`) indicates a null value.       The WriteNullTagLiteral method is called only when writing literal XML that can be defined in an XML Schema document."
  syntax:
    content: protected void WriteNullTagLiteral (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a SOAP message XML element that can contain a reference to a <xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;></xref> XML element for a given object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `<multiRef>` element identified by an `id` attribute. The `id` value can be referenced multiple times using `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o);
    parameters:
    - id: n
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: o
      type: System.Object
      description: "The object being serialized either in the current XML element or a <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> element that is referenced by the current element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a SOAP message XML element that can contain a reference to a <xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;></xref> XML element for a given object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `<multiRef>` element identified by an `id` attribute. The `id` value can be referenced multiple times using `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType);
    parameters:
    - id: n
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: o
      type: System.Object
      description: "The object being serialized either in the current XML element or a <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> element that referenced by the current element."
    - id: ambientType
      type: System.Type
      description: "The type stored in the object&quot;s type mapping (as opposed to the object&quot;s type found directly through the <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref> operation)."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a SOAP message XML element that can contain a reference to a <xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;></xref> XML element for a given object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `multiRef` element identified by an `id` attribute. The `id` value can be referenced multiple times using `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType, bool suppressReference);
    parameters:
    - id: n
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: o
      type: System.Object
      description: "The object being serialized either in the current XML element or a <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> element that is referenced by the current element."
    - id: ambientType
      type: System.Type
      description: "The type stored in the object&quot;s type mapping (as opposed to the object&quot;s type found directly through the <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref> operation)."
    - id: suppressReference
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a SOAP message XML element that can contain a reference to a <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> XML element for a given object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `multiRef` element identified by an `id` attribute. The `id` value can be referenced multiple times using `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType, bool suppressReference, bool isNullable);
    parameters:
    - id: n
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: o
      type: System.Object
      description: "The object being serialized either in the current XML element or a <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> element that referenced by the current element."
    - id: ambientType
      type: System.Type
      description: "The type stored in the object&quot;s type mapping (as opposed to the object&quot;s type found directly through the <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;></xref> operation)."
    - id: suppressReference
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the object to serialize is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer
  id: Writer
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
  fullName: System.Xml.Serialization.XmlSerializationWriter.Writer
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Gets or sets the <xref:System.Xml.XmlWriter> that is being used by the <xref href=&quot;System.Xml.Serialization.XmlSerializationWriter&quot;></xref>."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected System.Xml.XmlWriter Writer { get; set; }
    return:
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> used by the class instance."
  overload: System.Xml.Serialization.XmlSerializationWriter.Writer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  id: WriteReferencedElements
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencedElements()
  nameWithType: XmlSerializationWriter.WriteReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Serializes objects into SOAP-encoded <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> XML elements in a SOAP message."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `multiRef` element identified by an `id` attribute. The `id` value can be referenced multiple times using `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteReferencedElements ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  id: WriteReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a SOAP message XML element that contains a reference to a <xref uid=&quot;langword_csharp_multiRef &quot; name=&quot;multiRef &quot; href=&quot;&quot;></xref>element for a given object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `multiRef` element identified by an `id` attribute. The `id` value can be referenced multiple times using `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteReferencingElement (string n, string ns, object o);
    parameters:
    - id: n
      type: System.String
      description: "The local name of the referencing element being written."
    - id: ns
      type: System.String
      description: "The namespace of the referencing element being written."
    - id: o
      type: System.Object
      description: "The object being serialized."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  id: WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencingElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a SOAP message XML element that contains a reference to a <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;></xref> element for a given object."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       SOAP encoding allows a unique XML element to appear once within a SOAP message as a `multiRef` element identified by an `id` attribute. The `id` value can be referenced multiple times using `href` attributes (or `ref` attributes in SOAP 1.2) in substitute elements.       SOAP encoding is described in Section 5 of the SOAP 1.1 specification."
  syntax:
    content: protected void WriteReferencingElement (string n, string ns, object o, bool isNullable);
    parameters:
    - id: n
      type: System.String
      description: "The local name of the referencing element being written."
    - id: ns
      type: System.String
      description: "The namespace of the referencing element being written."
    - id: o
      type: System.Object
      description: "The object being serialized."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the object to serialize is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  id: WriteRpcResult(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteRpcResult(String,String)
  nameWithType: XmlSerializationWriter.WriteRpcResult(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a SOAP 1.2 RPC result element with a specified qualified name in its body."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The `result` element is defined in the namespace &quot;http://www.w3.org/2002/12/soap-rpc&quot;."
  syntax:
    content: protected void WriteRpcResult (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the result body."
    - id: ns
      type: System.String
      description: "The namespace of the result body."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  id: WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteSerializable(IXmlSerializable,String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an object that uses custom XML formatting as an XML element."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteSerializable (System.Xml.Serialization.IXmlSerializable serializable, string name, string ns, bool isNullable);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "An object that implements the <xref:System.Xml.Serialization.IXmlSerializable> interface that uses custom XML formatting."
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the <xref:System.Xml.Serialization.IXmlSerializable> class object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Instructs <xref href=&quot;System.Xml.XmlNode&quot;></xref> to write an object that uses custom XML formatting as an XML element."
  syntax:
    content: protected void WriteSerializable (System.Xml.Serialization.IXmlSerializable serializable, string name, string ns, bool isNullable, bool wrapped);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "An object that implements the <xref:System.Xml.Serialization.IXmlSerializable> interface that uses custom XML formatting."
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write an <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;></xref> attribute if the <xref:System.Xml.Serialization.IXmlSerializable> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to ignore writing the opening element tag; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to write the opening element tag."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  id: WriteStartDocument
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartDocument()
  nameWithType: XmlSerializationWriter.WriteStartDocument()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes the XML declaration if the writer is positioned at the start of an XML document."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteStartDocument ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  id: WriteStartElement(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an opening element tag, including any attributes."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteStartElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  id: WriteStartElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an opening element tag, including any attributes."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteStartElement (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  id: WriteStartElement(System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an opening element tag, including any attributes."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteStartElement (string name, string ns, bool writePrefixed);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write the element name with a prefix if none is available for the specified namespace; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  id: WriteStartElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an opening element tag, including any attributes."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: o
      type: System.Object
      description: "The object being serialized as an XML element."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an opening element tag, including any attributes."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o, bool writePrefixed);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: o
      type: System.Object
      description: "The object being serialized as an XML element."
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write the element name with a prefix if none is available for the specified namespace; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an opening element tag, including any attributes."
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o, bool writePrefixed, System.Xml.Serialization.XmlSerializerNamespaces xmlns);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the XML element to write."
    - id: ns
      type: System.String
      description: "The namespace of the XML element to write."
    - id: o
      type: System.Object
      description: "The object being serialized as an XML element."
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to write the element name with a prefix if none is available for the specified namespace; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: xmlns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "An instance of the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class that contains prefix and namespace pairs to be used in the generated XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  id: WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteTypedPrimitive(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an XML element whose text body is a value of a simple XML Schema data type."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The `xsi:type` attribute explicitly indicates the XML Schema data type. The prefix `xsi` refers to the XML Schema instance namespace."
  syntax:
    content: protected void WriteTypedPrimitive (string name, string ns, object o, bool xsiType);
    parameters:
    - id: name
      type: System.String
      description: "The local name of the element to write."
    - id: ns
      type: System.String
      description: "The namespace of the element to write."
    - id: o
      type: System.Object
      description: "The object to be serialized in the element body."
    - id: xsiType
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the XML element explicitly specifies the text value&quot;s type using the <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  id: WriteValue(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteValue(Byte[])
  nameWithType: XmlSerializationWriter.WriteValue(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a base-64 byte array."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteValue (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "The byte array to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  id: WriteValue(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteValue(String)
  nameWithType: XmlSerializationWriter.WriteValue(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes a specified string value."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "The value of the string to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  id: WriteXmlAttribute(System.Xml.XmlNode)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXmlAttribute(XmlNode)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes the specified <xref href=&quot;System.Xml.XmlNode&quot;></xref> as an XML attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteXmlAttribute (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "The XML node to write."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  id: WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXmlAttribute(XmlNode,Object)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes the specified <xref href=&quot;System.Xml.XmlNode&quot;></xref> object as an XML attribute."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure."
  syntax:
    content: protected void WriteXmlAttribute (System.Xml.XmlNode node, object container);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "The XML node to write."
    - id: container
      type: System.Object
      description: "An <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref> object (or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) used to generate a qualified name value for an <xref uid=&quot;langword_csharp_arrayType&quot; name=&quot;arrayType&quot; href=&quot;&quot;></xref> attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;)."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  id: WriteXsiType(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXsiType(String,String)
  nameWithType: XmlSerializationWriter.WriteXsiType(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Writes an <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref> attribute for an XML element that is being serialized into a document."
  remarks: "The protected members of <xref:System.Xml.Serialization.XmlSerializationWriter> are intended for use only by derived classes that are used internally within the .NET Framework XML serialization infrastructure.       The `xsi:type` attribute explicitly indicates the XML Schema data type. The prefix `xsi` refers to the XML Schema instance namespace."
  syntax:
    content: protected void WriteXsiType (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "The local name of an XML Schema data type."
    - id: ns
      type: System.String
      description: "The namespace of an XML Schema data type."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  isExternal: false
  name: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: XmlSerializationWriter()
  nameWithType: XmlSerializationWriter.XmlSerializationWriter()
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter()
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  nameWithType: XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  fullName: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializationWriteCallback
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationWriteCallback
  nameWithType: XmlSerializationWriteCallback
  fullName: System.Xml.Serialization.XmlSerializationWriteCallback
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateChoiceIdentifierValueException(String,String,String,String)
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidChoiceIdentifierValueException(String,String)
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidEnumValueException(Object,String)
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateMismatchChoiceException(String,String,String)
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownAnyElementException(String,String)
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
  fullName: System.Xml.Serialization.XmlSerializationWriter.EscapeName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayBase64(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayBase64(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayHex(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayHex(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromChar(Char)
  nameWithType: XmlSerializationWriter.FromChar(Char)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDate(DateTime)
  nameWithType: XmlSerializationWriter.FromDate(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDateTime(DateTime)
  nameWithType: XmlSerializationWriter.FromDateTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(DateTime)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum(Int64,String[],Int64[])
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum(Int64,String[],Int64[],String)
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromTime(DateTime)
  nameWithType: XmlSerializationWriter.FromTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromTime(DateTime)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlName(String)
  nameWithType: XmlSerializationWriter.FromXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNCName(String)
  nameWithType: XmlSerializationWriter.FromXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmToken(String)
  nameWithType: XmlSerializationWriter.FromXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmTokens(String)
  nameWithType: XmlSerializationWriter.FromXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName(XmlQualifiedName)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName(XmlQualifiedName,Boolean)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: InitCallbacks()
  nameWithType: XmlSerializationWriter.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks()
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
  fullName: System.Xml.Serialization.XmlSerializationWriter.Namespaces
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: TopLevelElement()
  nameWithType: XmlSerializationWriter.TopLevelElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag(String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag(String,String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement()
  nameWithType: XmlSerializationWriter.WriteEndElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement(Object)
  nameWithType: XmlSerializationWriter.WriteEndElement(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteId(Object)
  nameWithType: XmlSerializationWriter.WriteId(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteId(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNamespaceDeclarations(XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializerNamespaces
  nameWithType: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteral(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded(String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral(String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
  fullName: System.Xml.Serialization.XmlSerializationWriter.Writer
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencedElements()
  nameWithType: XmlSerializationWriter.WriteReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteRpcResult(String,String)
  nameWithType: XmlSerializationWriter.WriteRpcResult(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable(IXmlSerializable,String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartDocument()
  nameWithType: XmlSerializationWriter.WriteStartDocument()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteTypedPrimitive(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue(Byte[])
  nameWithType: XmlSerializationWriter.WriteValue(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue(String)
  nameWithType: XmlSerializationWriter.WriteValue(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute(XmlNode)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute(XmlNode,Object)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXsiType(String,String)
  nameWithType: XmlSerializationWriter.WriteXsiType(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter.XmlSerializationWriter
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: AddWriteCallback
  nameWithType: XmlSerializationWriter.AddWriteCallback
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateChoiceIdentifierValueException
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidChoiceIdentifierValueException
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidEnumValueException
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateMismatchChoiceException
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownAnyElementException
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayBase64
  nameWithType: XmlSerializationWriter.FromByteArrayBase64
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayHex
  nameWithType: XmlSerializationWriter.FromByteArrayHex
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromChar
  nameWithType: XmlSerializationWriter.FromChar
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDate
  nameWithType: XmlSerializationWriter.FromDate
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDateTime
  nameWithType: XmlSerializationWriter.FromDateTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum
  nameWithType: XmlSerializationWriter.FromEnum
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromTime
  nameWithType: XmlSerializationWriter.FromTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlName
  nameWithType: XmlSerializationWriter.FromXmlName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNCName
  nameWithType: XmlSerializationWriter.FromXmlNCName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmToken
  nameWithType: XmlSerializationWriter.FromXmlNmToken
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmTokens
  nameWithType: XmlSerializationWriter.FromXmlNmTokens
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: InitCallbacks
  nameWithType: XmlSerializationWriter.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: ResolveDynamicAssembly
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: TopLevelElement
  nameWithType: XmlSerializationWriter.TopLevelElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute
  nameWithType: XmlSerializationWriter.WriteAttribute
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementEncoded
  nameWithType: XmlSerializationWriter.WriteElementEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementLiteral
  nameWithType: XmlSerializationWriter.WriteElementLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString
  nameWithType: XmlSerializationWriter.WriteElementString
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw
  nameWithType: XmlSerializationWriter.WriteElementStringRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag
  nameWithType: XmlSerializationWriter.WriteEmptyTag
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement
  nameWithType: XmlSerializationWriter.WriteEndElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteId
  nameWithType: XmlSerializationWriter.WriteId
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNamespaceDeclarations
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameEncoded
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameLiteral
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncoded
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteral
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencedElements
  nameWithType: XmlSerializationWriter.WriteReferencedElements
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement
  nameWithType: XmlSerializationWriter.WriteReferencingElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteRpcResult
  nameWithType: XmlSerializationWriter.WriteRpcResult
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable
  nameWithType: XmlSerializationWriter.WriteSerializable
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartDocument
  nameWithType: XmlSerializationWriter.WriteStartDocument
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement
  nameWithType: XmlSerializationWriter.WriteStartElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteTypedPrimitive
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue
  nameWithType: XmlSerializationWriter.WriteValue
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute
  nameWithType: XmlSerializationWriter.WriteXmlAttribute
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXsiType
  nameWithType: XmlSerializationWriter.WriteXsiType
