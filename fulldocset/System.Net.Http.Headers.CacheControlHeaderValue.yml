### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  id: CacheControlHeaderValue
  children:
  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.CacheControlHeaderValue.Private
  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.Public
  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.CacheControlHeaderValue.ToString
  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  langs:
  - csharp
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
  type: Class
  summary: "Represents the value of the Cache-Control header."
  syntax:
    content: 'public class CacheControlHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> class."
  syntax:
    content: public CacheControlHeaderValue ();
    parameters: []
  overload: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determines whether the specified <xref:System.Object> is equal to the current <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> object."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare with the current object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified <xref:System.Object> is equal to the current object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  id: Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Cache-extension tokens, each with an optional assigned value."
  remarks: "This property represents the &quot;cache-extension&quot; directive in a cache-control header field on an HTTP request or HTTP response."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "A collection of cache-extension tokens each with an optional assigned value."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Serves as a hash function for a  <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> object."
  remarks: "A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.       The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash code for the current object."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  id: MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "The maximum age, specified in seconds, that the HTTP client is willing to accept a response."
  remarks: "This property represents the &quot;max-age&quot; directive in a cache-control header field on an HTTP request or HTTP response.       Unless the <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A> property is also set, the client is not willing to accept a stale response."
  syntax:
    content: public Nullable<TimeSpan> MaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "The time in seconds."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  id: MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether an HTTP client is willing to accept a response that has exceeded its expiration time."
  remarks: "This property represents if the &quot;max-stale&quot; directive is present in a cache-control header field on an HTTP request."
  syntax:
    content: public bool MaxStale { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  id: MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time."
  remarks: "This property represents the value assigned to &quot;max-stale&quot; directive in a cache-control header field on an HTTP request.       If the MaxStaleLimit property is assigned a value other than zero, then the client is willing to accept a response that has exceeded its expiration time by no more than the specified number of seconds. If a value of zero is assigned to the MaxStaleLimit property, then the client is willing to accept a stale response of any age."
  syntax:
    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "The time in seconds."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  id: MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "The freshness lifetime, in seconds, that an HTTP client is willing to accept a response."
  remarks: "This property represents the &quot;min-fresh&quot; directive in a cache-control header field on an HTTP request.       The  property indicates that the HTTP client is willing to accept a response whose freshness lifetime is no less than its current age plus the freshness lifetime specified time in seconds. The client wants a response that will still be fresh for at least the current age plus the freshness lifetime."
  syntax:
    content: public Nullable<TimeSpan> MinFresh { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "The time in seconds."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  id: MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale."
  remarks: "This property represents the &quot;must-revalidate&quot; directive in a cache-control header field on an HTTP response."
  syntax:
    content: public bool MustRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  id: NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether an HTTP client is willing to accept a cached response."
  remarks: "This property represents the &quot;no-cache&quot; directive in a cache-control header field on an HTTP request or HTTP response.       When the NoCache property is set to `true` present in a HTTP request message, an application should forward the request toward the origin server even if it has a cached copy of what is being requested."
  syntax:
    content: public bool NoCache { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the HTTP client is willing to accept a cached response; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  id: NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response."
  remarks: "This property represents fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response."
  syntax:
    content: public System.Collections.Generic.ICollection<string> NoCacheHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "A collection of fieldnames."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  id: NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether a cache must not store any part of either the HTTP request mressage or any response."
  remarks: "This property represents the &quot;no-store&quot; directive in a cache-control header field on an HTTP request or HTTP response.       The purpose of the NoStore property is to prevent the inadvertent release or retention of sensitive information. This property applies to the entire message, and may be sent either in an HTTP request or a response."
  syntax:
    content: public bool NoStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a cache must not store any part of either the HTTP request mressage or any response; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  id: NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether a cache or proxy must not change any aspect of the entity-body."
  remarks: "This property represents the &quot;no-transform&quot; directive in a cache-control header field on an HTTP request or HTTP response.       When the NoTransform is set to `true`, intermediate caches or rpoxies must not change any aspect of the entity body. Implementors of intermediate caches and proxies have found it useful to convert the media type of certain entity bodies. A non-transparent proxy might, for example, convert between image formats in order to save cache space or to reduce the amount of traffic on a slow link. Serious operational problems occur, however, when these transformations are applied to entity bodies intended for certain kinds of applications."
  syntax:
    content: public bool NoTransform { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a cache or proxy must not change any aspect of the entity-body; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  id: OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status."
  remarks: "This property represents the &quot;only-if-cached&quot; directive in a cache-control header field on an HTTP request."
  syntax:
    content: public bool OnlyIfCached { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converts a string to an <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> instance."
  syntax:
    content: public static System.Net.Http.Headers.CacheControlHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "A string that represents cache-control header value information."
    return:
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> instance."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code> is a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> reference."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code> is not valid cache-control header value information."
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  id: Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache."
  remarks: "This property represents the &quot;private&quot; directive in a cache-control header field on an HTTP response."
  syntax:
    content: public bool Private { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  id: PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response."
  remarks: "This property represents fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response."
  syntax:
    content: public System.Collections.Generic.ICollection<string> PrivateHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "A collection of fieldnames."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  id: ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches."
  remarks: "This property represents the &quot;proxy-revalidate&quot; directive in a cache-control header field on an HTTP response.       This property does not affect  non-shared user agent caches."
  syntax:
    content: public bool ProxyRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  id: Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache."
  remarks: "This property represents the &quot;public&quot; directive in a cache-control header field on an HTTP response."
  syntax:
    content: public bool Public { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  id: SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache."
  remarks: "This property represents the &quot;s-max-age&quot; directive in a cache-control header field on an HTTP response."
  syntax:
    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "The time in seconds."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Creates a new object that is a copy of the current <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> instance."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A copy of the current instance."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Returns a string that represents the current <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> object."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the current object."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determines whether a string is valid <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> information."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.CacheControlHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "The string to validate."
    - id: parsedValue
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "The <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> version of the string."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<NameValueHeaderValue>
  nameWithType: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals
  nameWithType: CacheControlHeaderValue.Equals
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: CacheControlHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse
  nameWithType: CacheControlHeaderValue.Parse
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString
  nameWithType: CacheControlHeaderValue.ToString
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: CacheControlHeaderValue.TryParse
