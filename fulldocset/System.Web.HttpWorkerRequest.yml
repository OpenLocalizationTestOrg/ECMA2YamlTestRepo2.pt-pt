### YamlMime:ManagedReference
items:
- uid: System.Web.HttpWorkerRequest
  id: HttpWorkerRequest
  children:
  - System.Web.HttpWorkerRequest.#ctor
  - System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)
  - System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Web.HttpWorkerRequest.CloseConnection
  - System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)
  - System.Web.HttpWorkerRequest.EndOfRequest
  - System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)
  - System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)
  - System.Web.HttpWorkerRequest.GetAppPath
  - System.Web.HttpWorkerRequest.GetAppPathTranslated
  - System.Web.HttpWorkerRequest.GetAppPoolID
  - System.Web.HttpWorkerRequest.GetBytesRead
  - System.Web.HttpWorkerRequest.GetClientCertificate
  - System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer
  - System.Web.HttpWorkerRequest.GetClientCertificateEncoding
  - System.Web.HttpWorkerRequest.GetClientCertificatePublicKey
  - System.Web.HttpWorkerRequest.GetClientCertificateValidFrom
  - System.Web.HttpWorkerRequest.GetClientCertificateValidUntil
  - System.Web.HttpWorkerRequest.GetConnectionID
  - System.Web.HttpWorkerRequest.GetFilePath
  - System.Web.HttpWorkerRequest.GetFilePathTranslated
  - System.Web.HttpWorkerRequest.GetHttpVerbName
  - System.Web.HttpWorkerRequest.GetHttpVersion
  - System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)
  - System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)
  - System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)
  - System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)
  - System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)
  - System.Web.HttpWorkerRequest.GetLocalAddress
  - System.Web.HttpWorkerRequest.GetLocalPort
  - System.Web.HttpWorkerRequest.GetPathInfo
  - System.Web.HttpWorkerRequest.GetPreloadedEntityBody
  - System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)
  - System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength
  - System.Web.HttpWorkerRequest.GetProtocol
  - System.Web.HttpWorkerRequest.GetQueryString
  - System.Web.HttpWorkerRequest.GetQueryStringRawBytes
  - System.Web.HttpWorkerRequest.GetRawUrl
  - System.Web.HttpWorkerRequest.GetRemoteAddress
  - System.Web.HttpWorkerRequest.GetRemoteName
  - System.Web.HttpWorkerRequest.GetRemotePort
  - System.Web.HttpWorkerRequest.GetRequestReason
  - System.Web.HttpWorkerRequest.GetServerName
  - System.Web.HttpWorkerRequest.GetServerVariable(System.String)
  - System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)
  - System.Web.HttpWorkerRequest.GetTotalEntityBodyLength
  - System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)
  - System.Web.HttpWorkerRequest.GetUnknownRequestHeaders
  - System.Web.HttpWorkerRequest.GetUriPath
  - System.Web.HttpWorkerRequest.GetUrlContextID
  - System.Web.HttpWorkerRequest.GetUserToken
  - System.Web.HttpWorkerRequest.GetVirtualPathToken
  - System.Web.HttpWorkerRequest.HasEntityBody
  - System.Web.HttpWorkerRequest.HeaderAccept
  - System.Web.HttpWorkerRequest.HeaderAcceptCharset
  - System.Web.HttpWorkerRequest.HeaderAcceptEncoding
  - System.Web.HttpWorkerRequest.HeaderAcceptLanguage
  - System.Web.HttpWorkerRequest.HeaderAcceptRanges
  - System.Web.HttpWorkerRequest.HeaderAge
  - System.Web.HttpWorkerRequest.HeaderAllow
  - System.Web.HttpWorkerRequest.HeaderAuthorization
  - System.Web.HttpWorkerRequest.HeaderCacheControl
  - System.Web.HttpWorkerRequest.HeaderConnection
  - System.Web.HttpWorkerRequest.HeaderContentEncoding
  - System.Web.HttpWorkerRequest.HeaderContentLanguage
  - System.Web.HttpWorkerRequest.HeaderContentLength
  - System.Web.HttpWorkerRequest.HeaderContentLocation
  - System.Web.HttpWorkerRequest.HeaderContentMd5
  - System.Web.HttpWorkerRequest.HeaderContentRange
  - System.Web.HttpWorkerRequest.HeaderContentType
  - System.Web.HttpWorkerRequest.HeaderCookie
  - System.Web.HttpWorkerRequest.HeaderDate
  - System.Web.HttpWorkerRequest.HeaderEtag
  - System.Web.HttpWorkerRequest.HeaderExpect
  - System.Web.HttpWorkerRequest.HeaderExpires
  - System.Web.HttpWorkerRequest.HeaderFrom
  - System.Web.HttpWorkerRequest.HeaderHost
  - System.Web.HttpWorkerRequest.HeaderIfMatch
  - System.Web.HttpWorkerRequest.HeaderIfModifiedSince
  - System.Web.HttpWorkerRequest.HeaderIfNoneMatch
  - System.Web.HttpWorkerRequest.HeaderIfRange
  - System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince
  - System.Web.HttpWorkerRequest.HeaderKeepAlive
  - System.Web.HttpWorkerRequest.HeaderLastModified
  - System.Web.HttpWorkerRequest.HeaderLocation
  - System.Web.HttpWorkerRequest.HeaderMaxForwards
  - System.Web.HttpWorkerRequest.HeaderPragma
  - System.Web.HttpWorkerRequest.HeaderProxyAuthenticate
  - System.Web.HttpWorkerRequest.HeaderProxyAuthorization
  - System.Web.HttpWorkerRequest.HeaderRange
  - System.Web.HttpWorkerRequest.HeaderReferer
  - System.Web.HttpWorkerRequest.HeaderRetryAfter
  - System.Web.HttpWorkerRequest.HeaderServer
  - System.Web.HttpWorkerRequest.HeaderSetCookie
  - System.Web.HttpWorkerRequest.HeadersSent
  - System.Web.HttpWorkerRequest.HeaderTe
  - System.Web.HttpWorkerRequest.HeaderTrailer
  - System.Web.HttpWorkerRequest.HeaderTransferEncoding
  - System.Web.HttpWorkerRequest.HeaderUpgrade
  - System.Web.HttpWorkerRequest.HeaderUserAgent
  - System.Web.HttpWorkerRequest.HeaderVary
  - System.Web.HttpWorkerRequest.HeaderVia
  - System.Web.HttpWorkerRequest.HeaderWarning
  - System.Web.HttpWorkerRequest.HeaderWwwAuthenticate
  - System.Web.HttpWorkerRequest.IsClientConnected
  - System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded
  - System.Web.HttpWorkerRequest.IsSecure
  - System.Web.HttpWorkerRequest.MachineConfigPath
  - System.Web.HttpWorkerRequest.MachineInstallDirectory
  - System.Web.HttpWorkerRequest.MapPath(System.String)
  - System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)
  - System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpWorkerRequest.ReasonCachePolicy
  - System.Web.HttpWorkerRequest.ReasonCacheSecurity
  - System.Web.HttpWorkerRequest.ReasonClientDisconnect
  - System.Web.HttpWorkerRequest.ReasonDefault
  - System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss
  - System.Web.HttpWorkerRequest.ReasonResponseCacheMiss
  - System.Web.HttpWorkerRequest.RequestHeaderMaximum
  - System.Web.HttpWorkerRequest.RequestTraceIdentifier
  - System.Web.HttpWorkerRequest.ResponseHeaderMaximum
  - System.Web.HttpWorkerRequest.RootWebConfigPath
  - System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)
  - System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)
  - System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)
  - System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)
  - System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)
  - System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)
  - System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)
  - System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)
  - System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)
  - System.Web.HttpWorkerRequest.SupportsAsyncFlush
  - System.Web.HttpWorkerRequest.SupportsAsyncRead
  langs:
  - csharp
  name: HttpWorkerRequest
  nameWithType: HttpWorkerRequest
  fullName: System.Web.HttpWorkerRequest
  type: Class
  summary: "This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests."
  remarks: "In most cases, your code will not deal with HttpWorkerRequest directly because request and response data are exposed through the <xref:System.Web.HttpRequest> and <xref:System.Web.HttpResponse> classes. Some internal ASP.NET classes extend this class. If your code implements its own hosting environment, it will need to extend this class to call the <xref:System.Web.HttpRuntime.ProcessRequest%2A> method. In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to <xref:System.Web.HttpRuntime.ProcessRequest%2A>. In this case, the derived class should keep a reference to the current HttpWorkerRequest and delegate most of the methods to it."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class HttpWorkerRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.#ctor
  id: '#ctor'
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HttpWorkerRequest()
  nameWithType: HttpWorkerRequest.HttpWorkerRequest()
  fullName: System.Web.HttpWorkerRequest.HttpWorkerRequest()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.HttpWorkerRequest&quot;></xref> class."
  remarks: "The HttpWorkerRequest constructor is the default constructor for the <xref:System.Web.HttpWorkerRequest> class."
  syntax:
    content: protected HttpWorkerRequest ();
    parameters: []
  overload: System.Web.HttpWorkerRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)
  id: BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpWorkerRequest.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpWorkerRequest.BeginFlush(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Sends the currently buffered response to the client."
  syntax:
    content: public virtual IAsyncResult BeginFlush (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "The method to call when a corresponding asynchronous operation completes."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous flush operation from other requests."
    return:
      type: System.IAsyncResult
      description: "The worker request buffers the status, headers, and response body until an asynchronous flush operation is initiated. If the underlying <xref href=&quot;System.Web.HttpWorkerRequest&quot;></xref> object supports asynchronous flush and this method is called from an asynchronous module event or asynchronous handler, the send operation is performed asynchronously. Otherwise, the implementation performs a synchronous flush operation."
  overload: System.Web.HttpWorkerRequest.BeginFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Web.HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Begins an asynchronous read operation of the request entity body."
  syntax:
    content: public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "The buffer to read the data into."
    - id: offset
      type: System.Int32
      description: "The byte offset in the buffer at which to begin writing data."
    - id: count
      type: System.Int32
      description: "The maximum number of bytes to read."
    - id: callback
      type: System.AsyncCallback
      description: "The method to call when a corresponding asynchronous operation completes."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous read from other requests."
    return:
      type: System.IAsyncResult
      description: "Begins an asynchronous read operation of the request entity body."
  overload: System.Web.HttpWorkerRequest.BeginRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.CloseConnection
  id: CloseConnection
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: CloseConnection()
  nameWithType: HttpWorkerRequest.CloseConnection()
  fullName: System.Web.HttpWorkerRequest.CloseConnection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Terminates the connection with the client."
  syntax:
    content: public virtual void CloseConnection ();
    parameters: []
  overload: System.Web.HttpWorkerRequest.CloseConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)
  id: EndFlush(System.IAsyncResult)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: EndFlush(IAsyncResult)
  nameWithType: HttpWorkerRequest.EndFlush(IAsyncResult)
  fullName: System.Web.HttpWorkerRequest.EndFlush(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Waits for the pending asynchronous flush operation to complete."
  syntax:
    content: public virtual void EndFlush (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A reference to the pending asynchronous request."
  overload: System.Web.HttpWorkerRequest.EndFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.EndOfRequest
  id: EndOfRequest
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: EndOfRequest()
  nameWithType: HttpWorkerRequest.EndOfRequest()
  fullName: System.Web.HttpWorkerRequest.EndOfRequest()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Used by the runtime to notify the <xref href=&quot;System.Web.HttpWorkerRequest&quot;></xref> that request processing for the current request is complete."
  syntax:
    content: public abstract void EndOfRequest ();
    parameters: []
  overload: System.Web.HttpWorkerRequest.EndOfRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: HttpWorkerRequest.EndRead(IAsyncResult)
  fullName: System.Web.HttpWorkerRequest.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Waits for the pending asynchronous read operation to complete."
  syntax:
    content: public virtual int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A reference to the pending asynchronous request."
    return:
      type: System.Int32
      description: "The number of bytes that have been read from the stream."
  overload: System.Web.HttpWorkerRequest.EndRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)
  id: FlushResponse(System.Boolean)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: FlushResponse(Boolean)
  nameWithType: HttpWorkerRequest.FlushResponse(Boolean)
  fullName: System.Web.HttpWorkerRequest.FlushResponse(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Sends all pending response data to the client."
  syntax:
    content: public abstract void FlushResponse (bool finalFlush);
    parameters:
    - id: finalFlush
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this is the last time response data will be flushed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.FlushResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetAppPath
  id: GetAppPath
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetAppPath()
  nameWithType: HttpWorkerRequest.GetAppPath()
  fullName: System.Web.HttpWorkerRequest.GetAppPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the virtual path to the currently executing server application."
  syntax:
    content: public virtual string GetAppPath ();
    parameters: []
    return:
      type: System.String
      description: "The virtual path of the current application."
  overload: System.Web.HttpWorkerRequest.GetAppPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetAppPathTranslated
  id: GetAppPathTranslated
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetAppPathTranslated()
  nameWithType: HttpWorkerRequest.GetAppPathTranslated()
  fullName: System.Web.HttpWorkerRequest.GetAppPathTranslated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the physical path to the currently executing server application."
  syntax:
    content: public virtual string GetAppPathTranslated ();
    parameters: []
    return:
      type: System.String
      description: "The physical path of the current application."
  overload: System.Web.HttpWorkerRequest.GetAppPathTranslated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetAppPoolID
  id: GetAppPoolID
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetAppPoolID()
  nameWithType: HttpWorkerRequest.GetAppPoolID()
  fullName: System.Web.HttpWorkerRequest.GetAppPoolID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the application pool ID for the current URL."
  syntax:
    content: public virtual string GetAppPoolID ();
    parameters: []
    return:
      type: System.String
      description: "Always returns null."
  overload: System.Web.HttpWorkerRequest.GetAppPoolID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetBytesRead
  id: GetBytesRead
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetBytesRead()
  nameWithType: HttpWorkerRequest.GetBytesRead()
  fullName: System.Web.HttpWorkerRequest.GetBytesRead()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the number of bytes read in from the client."
  syntax:
    content: public virtual long GetBytesRead ();
    parameters: []
    return:
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref> containing the number of bytes read."
  overload: System.Web.HttpWorkerRequest.GetBytesRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetClientCertificate
  id: GetClientCertificate
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetClientCertificate()
  nameWithType: HttpWorkerRequest.GetClientCertificate()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, gets the certification fields (specified in the X.509 standard) from a request issued by the client."
  remarks: "If no certificate is sent, the <xref:System.Web.HttpRequest.ClientCertificate%2A> collection returns empty."
  syntax:
    content: public virtual byte[] GetClientCertificate ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A byte array containing the stream of the entire certificate content."
  overload: System.Web.HttpWorkerRequest.GetClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer
  id: GetClientCertificateBinaryIssuer
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetClientCertificateBinaryIssuer()
  nameWithType: HttpWorkerRequest.GetClientCertificateBinaryIssuer()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the certificate issuer, in binary format."
  syntax:
    content: public virtual byte[] GetClientCertificateBinaryIssuer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A byte array containing the certificate issuer expressed in binary format."
  overload: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetClientCertificateEncoding
  id: GetClientCertificateEncoding
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetClientCertificateEncoding()
  nameWithType: HttpWorkerRequest.GetClientCertificateEncoding()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateEncoding()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the <xref:System.Text.Encoding> object in which the client certificate was encoded."
  syntax:
    content: public virtual int GetClientCertificateEncoding ();
    parameters: []
    return:
      type: System.Int32
      description: "The certificate encoding, expressed as an integer."
  overload: System.Web.HttpWorkerRequest.GetClientCertificateEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey
  id: GetClientCertificatePublicKey
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetClientCertificatePublicKey()
  nameWithType: HttpWorkerRequest.GetClientCertificatePublicKey()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, gets a <xref uid=&quot;langword_csharp_PublicKey&quot; name=&quot;PublicKey&quot; href=&quot;&quot;></xref> object associated with the client certificate."
  syntax:
    content: public virtual byte[] GetClientCertificatePublicKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A <xref uid=&quot;langword_csharp_PublicKey&quot; name=&quot;PublicKey&quot; href=&quot;&quot;></xref> object."
  overload: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom
  id: GetClientCertificateValidFrom
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetClientCertificateValidFrom()
  nameWithType: HttpWorkerRequest.GetClientCertificateValidFrom()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, gets the date when the certificate becomes valid. The date varies with international settings."
  syntax:
    content: public virtual DateTime GetClientCertificateValidFrom ();
    parameters: []
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime> object representing when the certificate becomes valid."
  overload: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil
  id: GetClientCertificateValidUntil
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetClientCertificateValidUntil()
  nameWithType: HttpWorkerRequest.GetClientCertificateValidUntil()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the certificate expiration date."
  syntax:
    content: public virtual DateTime GetClientCertificateValidUntil ();
    parameters: []
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime> object representing the date that the certificate expires."
  overload: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetConnectionID
  id: GetConnectionID
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetConnectionID()
  nameWithType: HttpWorkerRequest.GetConnectionID()
  fullName: System.Web.HttpWorkerRequest.GetConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the ID of the current connection."
  syntax:
    content: public virtual long GetConnectionID ();
    parameters: []
    return:
      type: System.Int64
      description: "Always returns 0."
  overload: System.Web.HttpWorkerRequest.GetConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetFilePath
  id: GetFilePath
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetFilePath()
  nameWithType: HttpWorkerRequest.GetFilePath()
  fullName: System.Web.HttpWorkerRequest.GetFilePath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the virtual path to the requested URI."
  syntax:
    content: public virtual string GetFilePath ();
    parameters: []
    return:
      type: System.String
      description: "The path to the requested URI."
  overload: System.Web.HttpWorkerRequest.GetFilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetFilePathTranslated
  id: GetFilePathTranslated
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetFilePathTranslated()
  nameWithType: HttpWorkerRequest.GetFilePathTranslated()
  fullName: System.Web.HttpWorkerRequest.GetFilePathTranslated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, &quot;/proj1/page.aspx&quot; to &quot;c:\dir\page.aspx&quot;)'
  syntax:
    content: public virtual string GetFilePathTranslated ();
    parameters: []
    return:
      type: System.String
      description: "The translated physical file path to the requested URI."
  overload: System.Web.HttpWorkerRequest.GetFilePathTranslated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetHttpVerbName
  id: GetHttpVerbName
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetHttpVerbName()
  nameWithType: HttpWorkerRequest.GetHttpVerbName()
  fullName: System.Web.HttpWorkerRequest.GetHttpVerbName()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the specified member of the request header."
  syntax:
    content: public abstract string GetHttpVerbName ();
    parameters: []
    return:
      type: System.String
      description: "The HTTP verb returned in the request header."
  overload: System.Web.HttpWorkerRequest.GetHttpVerbName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetHttpVersion
  id: GetHttpVersion
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetHttpVersion()
  nameWithType: HttpWorkerRequest.GetHttpVersion()
  fullName: System.Web.HttpWorkerRequest.GetHttpVersion()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Provides access to the HTTP version of the request (for example, &quot;HTTP/1.1&quot;)."
  syntax:
    content: public abstract string GetHttpVersion ();
    parameters: []
    return:
      type: System.String
      description: "The HTTP version returned in the request header."
  overload: System.Web.HttpWorkerRequest.GetHttpVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)
  id: GetKnownRequestHeader(System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetKnownRequestHeader(Int32)
  nameWithType: HttpWorkerRequest.GetKnownRequestHeader(Int32)
  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeader(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the standard HTTP request header that corresponds to the specified index."
  syntax:
    content: public virtual string GetKnownRequestHeader (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the header. For example, the <xref href=&quot;System.Web.HttpWorkerRequest.HeaderAllow&quot;></xref> field."
    return:
      type: System.String
      description: "The HTTP request header."
  overload: System.Web.HttpWorkerRequest.GetKnownRequestHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)
  id: GetKnownRequestHeaderIndex(System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetKnownRequestHeaderIndex(String)
  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderIndex(String)
  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the index number of the specified HTTP request header."
  syntax:
    content: public static int GetKnownRequestHeaderIndex (string header);
    parameters:
    - id: header
      type: System.String
      description: "The name of the header."
    return:
      type: System.Int32
      description: "The index number of the HTTP request header specified in the <code>header</code> parameter."
  overload: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)
  id: GetKnownRequestHeaderName(System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetKnownRequestHeaderName(Int32)
  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderName(Int32)
  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the name of the specified HTTP request header."
  syntax:
    content: public static string GetKnownRequestHeaderName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index number of the header."
    return:
      type: System.String
      description: "The name of the HTTP request header specified in the <code>index</code> parameter."
  overload: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)
  id: GetKnownResponseHeaderIndex(System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetKnownResponseHeaderIndex(String)
  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderIndex(String)
  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the index number of the specified HTTP response header."
  syntax:
    content: public static int GetKnownResponseHeaderIndex (string header);
    parameters:
    - id: header
      type: System.String
      description: "The name of the HTTP header."
    return:
      type: System.Int32
      description: "The index number of the HTTP response header specified in the <code>header</code> parameter."
  overload: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)
  id: GetKnownResponseHeaderName(System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetKnownResponseHeaderName(Int32)
  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderName(Int32)
  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the name of the specified HTTP response header."
  syntax:
    content: public static string GetKnownResponseHeaderName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index number of the header."
    return:
      type: System.String
      description: "The name of the HTTP response header specified in the <code>index</code> parameter."
  overload: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetLocalAddress
  id: GetLocalAddress
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetLocalAddress()
  nameWithType: HttpWorkerRequest.GetLocalAddress()
  fullName: System.Web.HttpWorkerRequest.GetLocalAddress()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Provides access to the specified member of the request header."
  syntax:
    content: public abstract string GetLocalAddress ();
    parameters: []
    return:
      type: System.String
      description: "The server IP address returned in the request header."
  overload: System.Web.HttpWorkerRequest.GetLocalAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetLocalPort
  id: GetLocalPort
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetLocalPort()
  nameWithType: HttpWorkerRequest.GetLocalPort()
  fullName: System.Web.HttpWorkerRequest.GetLocalPort()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Provides access to the specified member of the request header."
  syntax:
    content: public abstract int GetLocalPort ();
    parameters: []
    return:
      type: System.Int32
      description: "The server port number returned in the request header."
  overload: System.Web.HttpWorkerRequest.GetLocalPort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetPathInfo
  id: GetPathInfo
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetPathInfo()
  nameWithType: HttpWorkerRequest.GetPathInfo()
  fullName: System.Web.HttpWorkerRequest.GetPathInfo()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the <xref uid=&quot;langword_csharp_GetPathInfo&quot; name=&quot;GetPathInfo&quot; href=&quot;&quot;></xref> value is /tail."
  syntax:
    content: public virtual string GetPathInfo ();
    parameters: []
    return:
      type: System.String
      description: "Additional path information for a resource."
  overload: System.Web.HttpWorkerRequest.GetPathInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody
  id: GetPreloadedEntityBody
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetPreloadedEntityBody()
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody()
  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the portion of the HTTP request body that has already been read."
  syntax:
    content: public virtual byte[] GetPreloadedEntityBody ();
    parameters: []
    return:
      type: System.Byte[]
      description: "The portion of the HTTP request body that has been read."
  overload: System.Web.HttpWorkerRequest.GetPreloadedEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)
  id: GetPreloadedEntityBody(System.Byte[],System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetPreloadedEntityBody(Byte[],Int32)
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)
  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the portion of the HTTP request body that has currently been read by using the specified buffer data and byte offset."
  syntax:
    content: public virtual int GetPreloadedEntityBody (byte[] buffer, int offset);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "The data to read."
    - id: offset
      type: System.Int32
      description: "The byte offset at which to begin reading."
    return:
      type: System.Int32
      description: "The portion of the HTTP request body that has been read."
  overload: System.Web.HttpWorkerRequest.GetPreloadedEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength
  id: GetPreloadedEntityBodyLength
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetPreloadedEntityBodyLength()
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBodyLength()
  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the length of the portion of the HTTP request body that has currently been read."
  syntax:
    content: public virtual int GetPreloadedEntityBodyLength ();
    parameters: []
    return:
      type: System.Int32
      description: "An integer containing the length of the currently read HTTP request body."
  overload: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetProtocol
  id: GetProtocol
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetProtocol()
  nameWithType: HttpWorkerRequest.GetProtocol()
  fullName: System.Web.HttpWorkerRequest.GetProtocol()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS)."
  syntax:
    content: public virtual string GetProtocol ();
    parameters: []
    return:
      type: System.String
      description: "HTTPS if the <xref:System.Web.HttpWorkerRequest.IsSecure*> method is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, otherwise HTTP."
  overload: System.Web.HttpWorkerRequest.GetProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetQueryString
  id: GetQueryString
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetQueryString()
  nameWithType: HttpWorkerRequest.GetQueryString()
  fullName: System.Web.HttpWorkerRequest.GetQueryString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the query string specified in the request URL."
  syntax:
    content: public abstract string GetQueryString ();
    parameters: []
    return:
      type: System.String
      description: "The request query string."
  overload: System.Web.HttpWorkerRequest.GetQueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetQueryStringRawBytes
  id: GetQueryStringRawBytes
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetQueryStringRawBytes()
  nameWithType: HttpWorkerRequest.GetQueryStringRawBytes()
  fullName: System.Web.HttpWorkerRequest.GetQueryStringRawBytes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the response query string as an array of bytes."
  syntax:
    content: public virtual byte[] GetQueryStringRawBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "An array of bytes containing the response."
  overload: System.Web.HttpWorkerRequest.GetQueryStringRawBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetRawUrl
  id: GetRawUrl
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetRawUrl()
  nameWithType: HttpWorkerRequest.GetRawUrl()
  fullName: System.Web.HttpWorkerRequest.GetRawUrl()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the URL path contained in the request header with the query string appended."
  syntax:
    content: public abstract string GetRawUrl ();
    parameters: []
    return:
      type: System.String
      description: "The raw URL path of the request header."
  overload: System.Web.HttpWorkerRequest.GetRawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetRemoteAddress
  id: GetRemoteAddress
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetRemoteAddress()
  nameWithType: HttpWorkerRequest.GetRemoteAddress()
  fullName: System.Web.HttpWorkerRequest.GetRemoteAddress()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Provides access to the specified member of the request header."
  syntax:
    content: public abstract string GetRemoteAddress ();
    parameters: []
    return:
      type: System.String
      description: "The client&quot;s IP address."
  overload: System.Web.HttpWorkerRequest.GetRemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetRemoteName
  id: GetRemoteName
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetRemoteName()
  nameWithType: HttpWorkerRequest.GetRemoteName()
  fullName: System.Web.HttpWorkerRequest.GetRemoteName()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the name of the client computer."
  syntax:
    content: public virtual string GetRemoteName ();
    parameters: []
    return:
      type: System.String
      description: "The name of the client computer."
  overload: System.Web.HttpWorkerRequest.GetRemoteName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetRemotePort
  id: GetRemotePort
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetRemotePort()
  nameWithType: HttpWorkerRequest.GetRemotePort()
  fullName: System.Web.HttpWorkerRequest.GetRemotePort()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Provides access to the specified member of the request header."
  syntax:
    content: public abstract int GetRemotePort ();
    parameters: []
    return:
      type: System.Int32
      description: "The client&quot;s HTTP port number."
  overload: System.Web.HttpWorkerRequest.GetRemotePort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetRequestReason
  id: GetRequestReason
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetRequestReason()
  nameWithType: HttpWorkerRequest.GetRequestReason()
  fullName: System.Web.HttpWorkerRequest.GetRequestReason()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the reason for the request."
  syntax:
    content: public virtual int GetRequestReason ();
    parameters: []
    return:
      type: System.Int32
      description: "Reason code. The default is <xref uid=&quot;langword_csharp_ReasonResponseCacheMiss&quot; name=&quot;ReasonResponseCacheMiss&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.GetRequestReason*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetServerName
  id: GetServerName
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetServerName()
  nameWithType: HttpWorkerRequest.GetServerName()
  fullName: System.Web.HttpWorkerRequest.GetServerName()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the name of the local server."
  syntax:
    content: public virtual string GetServerName ();
    parameters: []
    return:
      type: System.String
      description: "The name of the local server."
  overload: System.Web.HttpWorkerRequest.GetServerName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetServerVariable(System.String)
  id: GetServerVariable(System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetServerVariable(String)
  nameWithType: HttpWorkerRequest.GetServerVariable(String)
  fullName: System.Web.HttpWorkerRequest.GetServerVariable(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a single server variable from a dictionary of server variables associated with the request."
  syntax:
    content: public virtual string GetServerVariable (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the requested server variable."
    return:
      type: System.String
      description: "The requested server variable."
  overload: System.Web.HttpWorkerRequest.GetServerVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)
  id: GetStatusDescription(System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetStatusDescription(Int32)
  nameWithType: HttpWorkerRequest.GetStatusDescription(Int32)
  fullName: System.Web.HttpWorkerRequest.GetStatusDescription(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a string that describes the name of the specified HTTP status code."
  syntax:
    content: public static string GetStatusDescription (int code);
    parameters:
    - id: code
      type: System.Int32
      description: "The HTTP status code."
    return:
      type: System.String
      description: "The status description. For example, GetStatusDescription (404) returns &quot;Not Found&quot;."
  overload: System.Web.HttpWorkerRequest.GetStatusDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength
  id: GetTotalEntityBodyLength
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetTotalEntityBodyLength()
  nameWithType: HttpWorkerRequest.GetTotalEntityBodyLength()
  fullName: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the length of the entire HTTP request body."
  syntax:
    content: public virtual int GetTotalEntityBodyLength ();
    parameters: []
    return:
      type: System.Int32
      description: "An integer containing the length of the entire HTTP request body."
  overload: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)
  id: GetUnknownRequestHeader(System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetUnknownRequestHeader(String)
  nameWithType: HttpWorkerRequest.GetUnknownRequestHeader(String)
  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a nonstandard HTTP request header value."
  syntax:
    content: public virtual string GetUnknownRequestHeader (string name);
    parameters:
    - id: name
      type: System.String
      description: "The header name."
    return:
      type: System.String
      description: "The header value."
  overload: System.Web.HttpWorkerRequest.GetUnknownRequestHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders
  id: GetUnknownRequestHeaders
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetUnknownRequestHeaders()
  nameWithType: HttpWorkerRequest.GetUnknownRequestHeaders()
  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Get all nonstandard HTTP header name-value pairs."
  syntax:
    content: public virtual string[][] GetUnknownRequestHeaders ();
    parameters: []
    return:
      type: System.String[][]
      description: "An array of header name-value pairs."
  overload: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetUriPath
  id: GetUriPath
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetUriPath()
  nameWithType: HttpWorkerRequest.GetUriPath()
  fullName: System.Web.HttpWorkerRequest.GetUriPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the virtual path to the requested URI."
  syntax:
    content: public abstract string GetUriPath ();
    parameters: []
    return:
      type: System.String
      description: "The path to the requested URI."
  overload: System.Web.HttpWorkerRequest.GetUriPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetUrlContextID
  id: GetUrlContextID
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetUrlContextID()
  nameWithType: HttpWorkerRequest.GetUrlContextID()
  fullName: System.Web.HttpWorkerRequest.GetUrlContextID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the context ID of the current connection."
  syntax:
    content: public virtual long GetUrlContextID ();
    parameters: []
    return:
      type: System.Int64
      description: "Always returns 0."
  overload: System.Web.HttpWorkerRequest.GetUrlContextID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetUserToken
  id: GetUserToken
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetUserToken()
  nameWithType: HttpWorkerRequest.GetUserToken()
  fullName: System.Web.HttpWorkerRequest.GetUserToken()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "When overridden in a derived class, returns the client&quot;s impersonation token."
  syntax:
    content: public virtual IntPtr GetUserToken ();
    parameters: []
    return:
      type: System.IntPtr
      description: "A value representing the client&quot;s impersonation token. The default is 0."
  overload: System.Web.HttpWorkerRequest.GetUserToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.GetVirtualPathToken
  id: GetVirtualPathToken
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: GetVirtualPathToken()
  nameWithType: HttpWorkerRequest.GetVirtualPathToken()
  fullName: System.Web.HttpWorkerRequest.GetVirtualPathToken()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the impersonation token for the request virtual path."
  syntax:
    content: public virtual IntPtr GetVirtualPathToken ();
    parameters: []
    return:
      type: System.IntPtr
      description: "An unmanaged memory pointer for the token for the request virtual path."
  overload: System.Web.HttpWorkerRequest.GetVirtualPathToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HasEntityBody
  id: HasEntityBody
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HasEntityBody()
  nameWithType: HttpWorkerRequest.HasEntityBody()
  fullName: System.Web.HttpWorkerRequest.HasEntityBody()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a value indicating whether the request contains body data."
  syntax:
    content: public bool HasEntityBody ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the request contains body data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.HasEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAccept
  id: HeaderAccept
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAccept
  nameWithType: HttpWorkerRequest.HeaderAccept
  fullName: System.Web.HttpWorkerRequest.HeaderAccept
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAccept = 20;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAcceptCharset
  id: HeaderAcceptCharset
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAcceptCharset
  nameWithType: HttpWorkerRequest.HeaderAcceptCharset
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptCharset
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Accept-Charset&quot; name=&quot;Accept-Charset&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAcceptCharset = 21;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAcceptEncoding
  id: HeaderAcceptEncoding
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAcceptEncoding
  nameWithType: HttpWorkerRequest.HeaderAcceptEncoding
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptEncoding
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Accept-Encoding&quot; name=&quot;Accept-Encoding&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAcceptEncoding = 22;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAcceptLanguage
  id: HeaderAcceptLanguage
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAcceptLanguage
  nameWithType: HttpWorkerRequest.HeaderAcceptLanguage
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptLanguage
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Accept-Language&quot; name=&quot;Accept-Language&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAcceptLanguage = 23;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAcceptRanges
  id: HeaderAcceptRanges
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAcceptRanges
  nameWithType: HttpWorkerRequest.HeaderAcceptRanges
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptRanges
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Accept-Ranges&quot; name=&quot;Accept-Ranges&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAcceptRanges = 20;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAge
  id: HeaderAge
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAge
  nameWithType: HttpWorkerRequest.HeaderAge
  fullName: System.Web.HttpWorkerRequest.HeaderAge
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Age&quot; name=&quot;Age&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAge = 21;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAllow
  id: HeaderAllow
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAllow
  nameWithType: HttpWorkerRequest.HeaderAllow
  fullName: System.Web.HttpWorkerRequest.HeaderAllow
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAllow = 10;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderAuthorization
  id: HeaderAuthorization
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderAuthorization
  nameWithType: HttpWorkerRequest.HeaderAuthorization
  fullName: System.Web.HttpWorkerRequest.HeaderAuthorization
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Authorization&quot; name=&quot;Authorization&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderAuthorization = 24;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderCacheControl
  id: HeaderCacheControl
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderCacheControl
  nameWithType: HttpWorkerRequest.HeaderCacheControl
  fullName: System.Web.HttpWorkerRequest.HeaderCacheControl
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "The index that represents the HTTP <xref uid=&quot;langword_csharp_Cache-Control&quot; name=&quot;Cache-Control&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderCacheControl = 0;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderConnection
  id: HeaderConnection
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderConnection
  nameWithType: HttpWorkerRequest.HeaderConnection
  fullName: System.Web.HttpWorkerRequest.HeaderConnection
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Connection&quot; name=&quot;Connection&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderConnection = 1;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderContentEncoding
  id: HeaderContentEncoding
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderContentEncoding
  nameWithType: HttpWorkerRequest.HeaderContentEncoding
  fullName: System.Web.HttpWorkerRequest.HeaderContentEncoding
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Content-Encoding&quot; name=&quot;Content-Encoding&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderContentEncoding = 13;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderContentLanguage
  id: HeaderContentLanguage
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderContentLanguage
  nameWithType: HttpWorkerRequest.HeaderContentLanguage
  fullName: System.Web.HttpWorkerRequest.HeaderContentLanguage
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Content-Language&quot; name=&quot;Content-Language&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderContentLanguage = 14;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderContentLength
  id: HeaderContentLength
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderContentLength
  nameWithType: HttpWorkerRequest.HeaderContentLength
  fullName: System.Web.HttpWorkerRequest.HeaderContentLength
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderContentLength = 11;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderContentLocation
  id: HeaderContentLocation
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderContentLocation
  nameWithType: HttpWorkerRequest.HeaderContentLocation
  fullName: System.Web.HttpWorkerRequest.HeaderContentLocation
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Content-Location&quot; name=&quot;Content-Location&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderContentLocation = 15;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderContentMd5
  id: HeaderContentMd5
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderContentMd5
  nameWithType: HttpWorkerRequest.HeaderContentMd5
  fullName: System.Web.HttpWorkerRequest.HeaderContentMd5
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Content-MD5&quot; name=&quot;Content-MD5&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderContentMd5 = 16;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderContentRange
  id: HeaderContentRange
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderContentRange
  nameWithType: HttpWorkerRequest.HeaderContentRange
  fullName: System.Web.HttpWorkerRequest.HeaderContentRange
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Content-Range&quot; name=&quot;Content-Range&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderContentRange = 17;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderContentType
  id: HeaderContentType
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderContentType
  nameWithType: HttpWorkerRequest.HeaderContentType
  fullName: System.Web.HttpWorkerRequest.HeaderContentType
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderContentType = 12;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderCookie
  id: HeaderCookie
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderCookie
  nameWithType: HttpWorkerRequest.HeaderCookie
  fullName: System.Web.HttpWorkerRequest.HeaderCookie
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Cookie&quot; name=&quot;Cookie&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderCookie = 25;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderDate
  id: HeaderDate
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderDate
  nameWithType: HttpWorkerRequest.HeaderDate
  fullName: System.Web.HttpWorkerRequest.HeaderDate
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderDate = 2;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderEtag
  id: HeaderEtag
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderEtag
  nameWithType: HttpWorkerRequest.HeaderEtag
  fullName: System.Web.HttpWorkerRequest.HeaderEtag
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_ETag&quot; name=&quot;ETag&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderEtag = 22;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderExpect
  id: HeaderExpect
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderExpect
  nameWithType: HttpWorkerRequest.HeaderExpect
  fullName: System.Web.HttpWorkerRequest.HeaderExpect
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Except&quot; name=&quot;Except&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderExpect = 26;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderExpires
  id: HeaderExpires
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderExpires
  nameWithType: HttpWorkerRequest.HeaderExpires
  fullName: System.Web.HttpWorkerRequest.HeaderExpires
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Expires&quot; name=&quot;Expires&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderExpires = 18;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderFrom
  id: HeaderFrom
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderFrom
  nameWithType: HttpWorkerRequest.HeaderFrom
  fullName: System.Web.HttpWorkerRequest.HeaderFrom
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_From&quot; name=&quot;From&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderFrom = 27;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderHost
  id: HeaderHost
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderHost
  nameWithType: HttpWorkerRequest.HeaderHost
  fullName: System.Web.HttpWorkerRequest.HeaderHost
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Host&quot; name=&quot;Host&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderHost = 28;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderIfMatch
  id: HeaderIfMatch
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderIfMatch
  nameWithType: HttpWorkerRequest.HeaderIfMatch
  fullName: System.Web.HttpWorkerRequest.HeaderIfMatch
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_If-Match&quot; name=&quot;If-Match&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderIfMatch = 29;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderIfModifiedSince
  id: HeaderIfModifiedSince
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderIfModifiedSince
  nameWithType: HttpWorkerRequest.HeaderIfModifiedSince
  fullName: System.Web.HttpWorkerRequest.HeaderIfModifiedSince
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_If-Modified-Since&quot; name=&quot;If-Modified-Since&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderIfModifiedSince = 30;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderIfNoneMatch
  id: HeaderIfNoneMatch
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderIfNoneMatch
  nameWithType: HttpWorkerRequest.HeaderIfNoneMatch
  fullName: System.Web.HttpWorkerRequest.HeaderIfNoneMatch
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_If-None-Match&quot; name=&quot;If-None-Match&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderIfNoneMatch = 31;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderIfRange
  id: HeaderIfRange
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderIfRange
  nameWithType: HttpWorkerRequest.HeaderIfRange
  fullName: System.Web.HttpWorkerRequest.HeaderIfRange
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_If-Range&quot; name=&quot;If-Range&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderIfRange = 32;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince
  id: HeaderIfUnmodifiedSince
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderIfUnmodifiedSince
  nameWithType: HttpWorkerRequest.HeaderIfUnmodifiedSince
  fullName: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_If-Unmodified-Since&quot; name=&quot;If-Unmodified-Since&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderIfUnmodifiedSince = 33;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderKeepAlive
  id: HeaderKeepAlive
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderKeepAlive
  nameWithType: HttpWorkerRequest.HeaderKeepAlive
  fullName: System.Web.HttpWorkerRequest.HeaderKeepAlive
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Keep-Alive&quot; name=&quot;Keep-Alive&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderKeepAlive = 3;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderLastModified
  id: HeaderLastModified
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderLastModified
  nameWithType: HttpWorkerRequest.HeaderLastModified
  fullName: System.Web.HttpWorkerRequest.HeaderLastModified
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Last-Modified&quot; name=&quot;Last-Modified&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderLastModified = 19;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderLocation
  id: HeaderLocation
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderLocation
  nameWithType: HttpWorkerRequest.HeaderLocation
  fullName: System.Web.HttpWorkerRequest.HeaderLocation
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderLocation = 23;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderMaxForwards
  id: HeaderMaxForwards
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderMaxForwards
  nameWithType: HttpWorkerRequest.HeaderMaxForwards
  fullName: System.Web.HttpWorkerRequest.HeaderMaxForwards
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Max-Forwards&quot; name=&quot;Max-Forwards&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderMaxForwards = 34;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderPragma
  id: HeaderPragma
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderPragma
  nameWithType: HttpWorkerRequest.HeaderPragma
  fullName: System.Web.HttpWorkerRequest.HeaderPragma
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderPragma = 4;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate
  id: HeaderProxyAuthenticate
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderProxyAuthenticate
  nameWithType: HttpWorkerRequest.HeaderProxyAuthenticate
  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Proxy-Authenticate&quot; name=&quot;Proxy-Authenticate&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderProxyAuthenticate = 24;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthorization
  id: HeaderProxyAuthorization
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderProxyAuthorization
  nameWithType: HttpWorkerRequest.HeaderProxyAuthorization
  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthorization
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Proxy-Authorization&quot; name=&quot;Proxy-Authorization&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderProxyAuthorization = 35;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderRange
  id: HeaderRange
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderRange
  nameWithType: HttpWorkerRequest.HeaderRange
  fullName: System.Web.HttpWorkerRequest.HeaderRange
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Range&quot; name=&quot;Range&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderRange = 37;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderReferer
  id: HeaderReferer
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderReferer
  nameWithType: HttpWorkerRequest.HeaderReferer
  fullName: System.Web.HttpWorkerRequest.HeaderReferer
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Referer&quot; name=&quot;Referer&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderReferer = 36;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderRetryAfter
  id: HeaderRetryAfter
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderRetryAfter
  nameWithType: HttpWorkerRequest.HeaderRetryAfter
  fullName: System.Web.HttpWorkerRequest.HeaderRetryAfter
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Retry-After&quot; name=&quot;Retry-After&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderRetryAfter = 25;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderServer
  id: HeaderServer
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderServer
  nameWithType: HttpWorkerRequest.HeaderServer
  fullName: System.Web.HttpWorkerRequest.HeaderServer
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderServer = 26;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderSetCookie
  id: HeaderSetCookie
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderSetCookie
  nameWithType: HttpWorkerRequest.HeaderSetCookie
  fullName: System.Web.HttpWorkerRequest.HeaderSetCookie
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Set-Cookie&quot; name=&quot;Set-Cookie&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderSetCookie = 27;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeadersSent
  id: HeadersSent
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeadersSent()
  nameWithType: HttpWorkerRequest.HeadersSent()
  fullName: System.Web.HttpWorkerRequest.HeadersSent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a value indicating whether HTTP response headers have been sent to the client for the current request."
  syntax:
    content: public virtual bool HeadersSent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if HTTP response headers have been sent to the client; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.HeadersSent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderTe
  id: HeaderTe
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderTe
  nameWithType: HttpWorkerRequest.HeaderTe
  fullName: System.Web.HttpWorkerRequest.HeaderTe
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_TE&quot; name=&quot;TE&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderTe = 38;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderTrailer
  id: HeaderTrailer
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderTrailer
  nameWithType: HttpWorkerRequest.HeaderTrailer
  fullName: System.Web.HttpWorkerRequest.HeaderTrailer
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Trailer&quot; name=&quot;Trailer&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderTrailer = 5;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderTransferEncoding
  id: HeaderTransferEncoding
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderTransferEncoding
  nameWithType: HttpWorkerRequest.HeaderTransferEncoding
  fullName: System.Web.HttpWorkerRequest.HeaderTransferEncoding
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Transfer-Encoding&quot; name=&quot;Transfer-Encoding&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderTransferEncoding = 6;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderUpgrade
  id: HeaderUpgrade
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderUpgrade
  nameWithType: HttpWorkerRequest.HeaderUpgrade
  fullName: System.Web.HttpWorkerRequest.HeaderUpgrade
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Upgrade&quot; name=&quot;Upgrade&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderUpgrade = 7;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderUserAgent
  id: HeaderUserAgent
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderUserAgent
  nameWithType: HttpWorkerRequest.HeaderUserAgent
  fullName: System.Web.HttpWorkerRequest.HeaderUserAgent
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderUserAgent = 39;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderVary
  id: HeaderVary
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderVary
  nameWithType: HttpWorkerRequest.HeaderVary
  fullName: System.Web.HttpWorkerRequest.HeaderVary
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderVary = 28;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderVia
  id: HeaderVia
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderVia
  nameWithType: HttpWorkerRequest.HeaderVia
  fullName: System.Web.HttpWorkerRequest.HeaderVia
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Via&quot; name=&quot;Via&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderVia = 8;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderWarning
  id: HeaderWarning
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderWarning
  nameWithType: HttpWorkerRequest.HeaderWarning
  fullName: System.Web.HttpWorkerRequest.HeaderWarning
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Warning&quot; name=&quot;Warning&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderWarning = 9;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate
  id: HeaderWwwAuthenticate
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: HeaderWwwAuthenticate
  nameWithType: HttpWorkerRequest.HeaderWwwAuthenticate
  fullName: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_WWW-Authenticate&quot; name=&quot;WWW-Authenticate&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int HeaderWwwAuthenticate = 29;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.IsClientConnected
  id: IsClientConnected
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: IsClientConnected()
  nameWithType: HttpWorkerRequest.IsClientConnected()
  fullName: System.Web.HttpWorkerRequest.IsClientConnected()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a value indicating whether the client connection is still active."
  syntax:
    content: public virtual bool IsClientConnected ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the client connection is still active; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.IsClientConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded
  id: IsEntireEntityBodyIsPreloaded
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: IsEntireEntityBodyIsPreloaded()
  nameWithType: HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()
  fullName: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a value indicating whether all request data is available and no further reads from the client are required."
  syntax:
    content: public virtual bool IsEntireEntityBodyIsPreloaded ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if all request data is available; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.IsSecure
  id: IsSecure
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: IsSecure()
  nameWithType: HttpWorkerRequest.IsSecure()
  fullName: System.Web.HttpWorkerRequest.IsSecure()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns a value indicating whether the connection uses SSL."
  syntax:
    content: public virtual bool IsSecure ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the connection is an SSL connection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.IsSecure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.MachineConfigPath
  id: MachineConfigPath
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: MachineConfigPath
  nameWithType: HttpWorkerRequest.MachineConfigPath
  fullName: System.Web.HttpWorkerRequest.MachineConfigPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the full physical path to the Machine.config file."
  syntax:
    content: public virtual string MachineConfigPath { get; }
    return:
      type: System.String
      description: "The physical path to the Machine.config file."
  overload: System.Web.HttpWorkerRequest.MachineConfigPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.MachineInstallDirectory
  id: MachineInstallDirectory
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: MachineInstallDirectory
  nameWithType: HttpWorkerRequest.MachineInstallDirectory
  fullName: System.Web.HttpWorkerRequest.MachineInstallDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the physical path to the directory where the ASP.NET binaries are installed."
  syntax:
    content: public virtual string MachineInstallDirectory { get; }
    return:
      type: System.String
      description: "The physical directory to the ASP.NET binary files."
  overload: System.Web.HttpWorkerRequest.MachineInstallDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpWorkerRequest.MapPath(String)
  fullName: System.Web.HttpWorkerRequest.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Returns the physical path corresponding to the specified virtual path."
  syntax:
    content: public virtual string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "The virtual path."
    return:
      type: System.String
      description: "The physical path that corresponds to the virtual path specified in the <code>virtualPath</code> parameter."
  overload: System.Web.HttpWorkerRequest.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)
  id: ReadEntityBody(System.Byte[],System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReadEntityBody(Byte[],Int32)
  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32)
  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reads request data from the client (when not preloaded)."
  remarks: "An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.       Use this overload to specify the response for message bodies greater than 2 GB."
  syntax:
    content: public virtual int ReadEntityBody (byte[] buffer, int size);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "The byte array to read data into."
    - id: size
      type: System.Int32
      description: "The maximum number of bytes to read."
    return:
      type: System.Int32
      description: "The number of bytes read."
  overload: System.Web.HttpWorkerRequest.ReadEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)
  id: ReadEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReadEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reads request data from the client (when not preloaded) by using the specified buffer to read from, byte offset, and maximum bytes."
  remarks: "An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.       Use this overload to specify the response for message bodies greater than 2 GB."
  syntax:
    content: public virtual int ReadEntityBody (byte[] buffer, int offset, int size);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "The byte array to read data into."
    - id: offset
      type: System.Int32
      description: "The byte offset at which to begin reading."
    - id: size
      type: System.Int32
      description: "The maximum number of bytes to read."
    return:
      type: System.Int32
      description: "The number of bytes read."
  overload: System.Web.HttpWorkerRequest.ReadEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReasonCachePolicy
  id: ReasonCachePolicy
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReasonCachePolicy
  nameWithType: HttpWorkerRequest.ReasonCachePolicy
  fullName: System.Web.HttpWorkerRequest.ReasonCachePolicy
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies a reason for the request."
  syntax:
    content: public const int ReasonCachePolicy = 2;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReasonCacheSecurity
  id: ReasonCacheSecurity
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReasonCacheSecurity
  nameWithType: HttpWorkerRequest.ReasonCacheSecurity
  fullName: System.Web.HttpWorkerRequest.ReasonCacheSecurity
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies a reason for the request."
  syntax:
    content: public const int ReasonCacheSecurity = 3;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReasonClientDisconnect
  id: ReasonClientDisconnect
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReasonClientDisconnect
  nameWithType: HttpWorkerRequest.ReasonClientDisconnect
  fullName: System.Web.HttpWorkerRequest.ReasonClientDisconnect
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies a reason for the request."
  syntax:
    content: public const int ReasonClientDisconnect = 4;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReasonDefault
  id: ReasonDefault
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReasonDefault
  nameWithType: HttpWorkerRequest.ReasonDefault
  fullName: System.Web.HttpWorkerRequest.ReasonDefault
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies a reason for the request. The default value is <xref href=&quot;System.Web.HttpWorkerRequest.ReasonResponseCacheMiss&quot;></xref>."
  syntax:
    content: public const int ReasonDefault = 0;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss
  id: ReasonFileHandleCacheMiss
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReasonFileHandleCacheMiss
  nameWithType: HttpWorkerRequest.ReasonFileHandleCacheMiss
  fullName: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies a reason for the request."
  syntax:
    content: public const int ReasonFileHandleCacheMiss = 1;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss
  id: ReasonResponseCacheMiss
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ReasonResponseCacheMiss
  nameWithType: HttpWorkerRequest.ReasonResponseCacheMiss
  fullName: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies a reason for the request."
  syntax:
    content: public const int ReasonResponseCacheMiss = 0;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.RequestHeaderMaximum
  id: RequestHeaderMaximum
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: RequestHeaderMaximum
  nameWithType: HttpWorkerRequest.RequestHeaderMaximum
  fullName: System.Web.HttpWorkerRequest.RequestHeaderMaximum
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Maximum&quot; name=&quot;Maximum&quot; href=&quot;&quot;></xref> HTTP request header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int RequestHeaderMaximum = 40;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.RequestTraceIdentifier
  id: RequestTraceIdentifier
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: RequestTraceIdentifier
  nameWithType: HttpWorkerRequest.RequestTraceIdentifier
  fullName: System.Web.HttpWorkerRequest.RequestTraceIdentifier
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the corresponding Event Tracking for Windows trace ID for the current request."
  remarks: "ASP.NET requests execute with the same trace ID as the corresponding IIS request. This facilitates tracking a request throughout its lifetime, starting with the HTTP.SYS kernel-mode HTTP listener, through the IIS service, and into the ASP.NET system. The IDs provided by IIS differ based on the platform and service pack level."
  syntax:
    content: public virtual Guid RequestTraceIdentifier { get; }
    return:
      type: System.Guid
      description: "A trace ID for the current ASP.NET request."
  overload: System.Web.HttpWorkerRequest.RequestTraceIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.ResponseHeaderMaximum
  id: ResponseHeaderMaximum
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: ResponseHeaderMaximum
  nameWithType: HttpWorkerRequest.ResponseHeaderMaximum
  fullName: System.Web.HttpWorkerRequest.ResponseHeaderMaximum
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the index number for the <xref uid=&quot;langword_csharp_Maximum&quot; name=&quot;Maximum&quot; href=&quot;&quot;></xref> HTTP response header."
  remarks: "The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods."
  syntax:
    content: public const int ResponseHeaderMaximum = 30;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.RootWebConfigPath
  id: RootWebConfigPath
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: RootWebConfigPath
  nameWithType: HttpWorkerRequest.RootWebConfigPath
  fullName: System.Web.HttpWorkerRequest.RootWebConfigPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the full physical path to the root Web.config file."
  remarks: "If you are implementing your own hosting environment, you may to override this property to return the location of your environment&quot;s root configuration file. An example of this is the <xref:System.Web.Hosting.SimpleWorkerRequest> class which provides a simple implementation of the <xref:System.Web.HttpWorkerRequest>. The <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=fullName> property of <xref:System.Web.Hosting.SimpleWorkerRequest> class overrides the RootWebConfigPath property of <xref:System.Web.HttpWorkerRequest> class."
  syntax:
    content: public virtual string RootWebConfigPath { get; }
    return:
      type: System.String
      description: "The physical path to the root Web.config file."
  overload: System.Web.HttpWorkerRequest.RootWebConfigPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)
  id: SendCalculatedContentLength(System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendCalculatedContentLength(Int32)
  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int32)
  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds a <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;></xref> HTTP header to the response for message bodies that are less than or equal to 2 GB."
  remarks: "When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response.       Use this overload to set the `Content-Length` header when the length of the response message body is less than or equal to 2 GB."
  syntax:
    content: public virtual void SendCalculatedContentLength (int contentLength);
    parameters:
    - id: contentLength
      type: System.Int32
      description: "The length of the response, in bytes."
  overload: System.Web.HttpWorkerRequest.SendCalculatedContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)
  id: SendCalculatedContentLength(System.Int64)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendCalculatedContentLength(Int64)
  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int64)
  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds a <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;></xref> HTTP header to the response for message bodies that are greater than 2 GB."
  remarks: "When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response. The default implementation calls the overload that takes a `contentLength` parameter of type <xref:System.Int32>.       Use this overload to specify the response for message bodies greater than 2 GB."
  syntax:
    content: public virtual void SendCalculatedContentLength (long contentLength);
    parameters:
    - id: contentLength
      type: System.Int64
      description: "The length of the response, in bytes."
  overload: System.Web.HttpWorkerRequest.SendCalculatedContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)
  id: SendKnownResponseHeader(System.Int32,System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendKnownResponseHeader(Int32,String)
  nameWithType: HttpWorkerRequest.SendKnownResponseHeader(Int32,String)
  fullName: System.Web.HttpWorkerRequest.SendKnownResponseHeader(Int32,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds a standard HTTP header to the response."
  syntax:
    content: public abstract void SendKnownResponseHeader (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: "The header index. For example, <xref href=&quot;System.Web.HttpWorkerRequest.HeaderContentLength&quot;></xref>."
    - id: value
      type: System.String
      description: "The value of the header."
  overload: System.Web.HttpWorkerRequest.SendKnownResponseHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)
  id: SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendResponseFromFile(IntPtr,Int64,Int64)
  nameWithType: HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send."
  syntax:
    content: public abstract void SendResponseFromFile (IntPtr handle, long offset, long length);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "The handle of the file to send."
    - id: offset
      type: System.Int64
      description: "The starting position in the file."
    - id: length
      type: System.Int64
      description: "The number of bytes to send."
  overload: System.Web.HttpWorkerRequest.SendResponseFromFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)
  id: SendResponseFromFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendResponseFromFile(String,Int64,Int64)
  nameWithType: HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send."
  syntax:
    content: public abstract void SendResponseFromFile (string filename, long offset, long length);
    parameters:
    - id: filename
      type: System.String
      description: "The name of the file to send."
    - id: offset
      type: System.Int64
      description: "The starting position in the file."
    - id: length
      type: System.Int64
      description: "The number of bytes to send."
  overload: System.Web.HttpWorkerRequest.SendResponseFromFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)
  id: SendResponseFromMemory(System.Byte[],System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendResponseFromMemory(Byte[],Int32)
  nameWithType: HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds the specified number of bytes from a byte array to the response."
  syntax:
    content: public abstract void SendResponseFromMemory (byte[] data, int length);
    parameters:
    - id: data
      type: System.Byte[]
      description: "The byte array to send."
    - id: length
      type: System.Int32
      description: "The number of bytes to send, starting at the first byte."
  overload: System.Web.HttpWorkerRequest.SendResponseFromMemory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)
  id: SendResponseFromMemory(System.IntPtr,System.Int32)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendResponseFromMemory(IntPtr,Int32)
  nameWithType: HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds the specified number of bytes from a block of memory to the response."
  syntax:
    content: public virtual void SendResponseFromMemory (IntPtr data, int length);
    parameters:
    - id: data
      type: System.IntPtr
      description: "An unmanaged pointer to the block of memory."
    - id: length
      type: System.Int32
      description: "The number of bytes to send."
  overload: System.Web.HttpWorkerRequest.SendResponseFromMemory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)
  id: SendStatus(System.Int32,System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendStatus(Int32,String)
  nameWithType: HttpWorkerRequest.SendStatus(Int32,String)
  fullName: System.Web.HttpWorkerRequest.SendStatus(Int32,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Specifies the HTTP status code and status description of the response, such as `SendStatus(200, &quot;Ok&quot;)`."
  syntax:
    content: public abstract void SendStatus (int statusCode, string statusDescription);
    parameters:
    - id: statusCode
      type: System.Int32
      description: "The status code to send"
    - id: statusDescription
      type: System.String
      description: "The status description to send."
  overload: System.Web.HttpWorkerRequest.SendStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)
  id: SendUnknownResponseHeader(System.String,System.String)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SendUnknownResponseHeader(String,String)
  nameWithType: HttpWorkerRequest.SendUnknownResponseHeader(String,String)
  fullName: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adds a nonstandard HTTP header to the response."
  syntax:
    content: public abstract void SendUnknownResponseHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the header to send."
    - id: value
      type: System.String
      description: "The value of the header."
  overload: System.Web.HttpWorkerRequest.SendUnknownResponseHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)
  id: SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)
  nameWithType: HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)
  fullName: System.Web.HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  syntax:
    content: public virtual void SetEndOfSendNotification (System.Web.HttpWorkerRequest.EndOfSendNotification callback, object extraData);
    parameters:
    - id: callback
      type: System.Web.HttpWorkerRequest.EndOfSendNotification
      description: "To be added."
    - id: extraData
      type: System.Object
      description: "To be added."
  overload: System.Web.HttpWorkerRequest.SetEndOfSendNotification*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SupportsAsyncFlush
  id: SupportsAsyncFlush
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SupportsAsyncFlush
  nameWithType: HttpWorkerRequest.SupportsAsyncFlush
  fullName: System.Web.HttpWorkerRequest.SupportsAsyncFlush
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a value that indicates whether asynchronous flush operations are supported."
  syntax:
    content: public virtual bool SupportsAsyncFlush { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if asynchronous flush operations are supported; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.SupportsAsyncFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpWorkerRequest.SupportsAsyncRead
  id: SupportsAsyncRead
  parent: System.Web.HttpWorkerRequest
  langs:
  - csharp
  name: SupportsAsyncRead
  nameWithType: HttpWorkerRequest.SupportsAsyncRead
  fullName: System.Web.HttpWorkerRequest.SupportsAsyncRead
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a value that indicates whether asynchronous read operations are supported."
  syntax:
    content: public virtual bool SupportsAsyncRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if asynchronous read operations are supported; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpWorkerRequest.SupportsAsyncRead*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpWorkerRequest.#ctor
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HttpWorkerRequest()
  nameWithType: HttpWorkerRequest.HttpWorkerRequest()
  fullName: System.Web.HttpWorkerRequest.HttpWorkerRequest()
- uid: System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpWorkerRequest.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpWorkerRequest.BeginFlush(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Web.HttpWorkerRequest.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpWorkerRequest.CloseConnection
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: CloseConnection()
  nameWithType: HttpWorkerRequest.CloseConnection()
  fullName: System.Web.HttpWorkerRequest.CloseConnection()
- uid: System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: EndFlush(IAsyncResult)
  nameWithType: HttpWorkerRequest.EndFlush(IAsyncResult)
  fullName: System.Web.HttpWorkerRequest.EndFlush(IAsyncResult)
- uid: System.Web.HttpWorkerRequest.EndOfRequest
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: EndOfRequest()
  nameWithType: HttpWorkerRequest.EndOfRequest()
  fullName: System.Web.HttpWorkerRequest.EndOfRequest()
- uid: System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: HttpWorkerRequest.EndRead(IAsyncResult)
  fullName: System.Web.HttpWorkerRequest.EndRead(IAsyncResult)
- uid: System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: FlushResponse(Boolean)
  nameWithType: HttpWorkerRequest.FlushResponse(Boolean)
  fullName: System.Web.HttpWorkerRequest.FlushResponse(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpWorkerRequest.GetAppPath
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetAppPath()
  nameWithType: HttpWorkerRequest.GetAppPath()
  fullName: System.Web.HttpWorkerRequest.GetAppPath()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpWorkerRequest.GetAppPathTranslated
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetAppPathTranslated()
  nameWithType: HttpWorkerRequest.GetAppPathTranslated()
  fullName: System.Web.HttpWorkerRequest.GetAppPathTranslated()
- uid: System.Web.HttpWorkerRequest.GetAppPoolID
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetAppPoolID()
  nameWithType: HttpWorkerRequest.GetAppPoolID()
  fullName: System.Web.HttpWorkerRequest.GetAppPoolID()
- uid: System.Web.HttpWorkerRequest.GetBytesRead
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetBytesRead()
  nameWithType: HttpWorkerRequest.GetBytesRead()
  fullName: System.Web.HttpWorkerRequest.GetBytesRead()
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.HttpWorkerRequest.GetClientCertificate
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificate()
  nameWithType: HttpWorkerRequest.GetClientCertificate()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificate()
- uid: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateBinaryIssuer()
  nameWithType: HttpWorkerRequest.GetClientCertificateBinaryIssuer()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer()
- uid: System.Web.HttpWorkerRequest.GetClientCertificateEncoding
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateEncoding()
  nameWithType: HttpWorkerRequest.GetClientCertificateEncoding()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateEncoding()
- uid: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificatePublicKey()
  nameWithType: HttpWorkerRequest.GetClientCertificatePublicKey()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey()
- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateValidFrom()
  nameWithType: HttpWorkerRequest.GetClientCertificateValidFrom()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom()
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateValidUntil()
  nameWithType: HttpWorkerRequest.GetClientCertificateValidUntil()
  fullName: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil()
- uid: System.Web.HttpWorkerRequest.GetConnectionID
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetConnectionID()
  nameWithType: HttpWorkerRequest.GetConnectionID()
  fullName: System.Web.HttpWorkerRequest.GetConnectionID()
- uid: System.Web.HttpWorkerRequest.GetFilePath
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetFilePath()
  nameWithType: HttpWorkerRequest.GetFilePath()
  fullName: System.Web.HttpWorkerRequest.GetFilePath()
- uid: System.Web.HttpWorkerRequest.GetFilePathTranslated
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetFilePathTranslated()
  nameWithType: HttpWorkerRequest.GetFilePathTranslated()
  fullName: System.Web.HttpWorkerRequest.GetFilePathTranslated()
- uid: System.Web.HttpWorkerRequest.GetHttpVerbName
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetHttpVerbName()
  nameWithType: HttpWorkerRequest.GetHttpVerbName()
  fullName: System.Web.HttpWorkerRequest.GetHttpVerbName()
- uid: System.Web.HttpWorkerRequest.GetHttpVersion
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetHttpVersion()
  nameWithType: HttpWorkerRequest.GetHttpVersion()
  fullName: System.Web.HttpWorkerRequest.GetHttpVersion()
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownRequestHeader(Int32)
  nameWithType: HttpWorkerRequest.GetKnownRequestHeader(Int32)
  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeader(Int32)
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownRequestHeaderIndex(String)
  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderIndex(String)
  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(String)
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownRequestHeaderName(Int32)
  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderName(Int32)
  fullName: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(Int32)
- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownResponseHeaderIndex(String)
  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderIndex(String)
  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(String)
- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownResponseHeaderName(Int32)
  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderName(Int32)
  fullName: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(Int32)
- uid: System.Web.HttpWorkerRequest.GetLocalAddress
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetLocalAddress()
  nameWithType: HttpWorkerRequest.GetLocalAddress()
  fullName: System.Web.HttpWorkerRequest.GetLocalAddress()
- uid: System.Web.HttpWorkerRequest.GetLocalPort
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetLocalPort()
  nameWithType: HttpWorkerRequest.GetLocalPort()
  fullName: System.Web.HttpWorkerRequest.GetLocalPort()
- uid: System.Web.HttpWorkerRequest.GetPathInfo
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetPathInfo()
  nameWithType: HttpWorkerRequest.GetPathInfo()
  fullName: System.Web.HttpWorkerRequest.GetPathInfo()
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetPreloadedEntityBody()
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody()
  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody()
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetPreloadedEntityBody(Byte[],Int32)
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)
  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBody(Byte[],Int32)
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetPreloadedEntityBodyLength()
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBodyLength()
  fullName: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength()
- uid: System.Web.HttpWorkerRequest.GetProtocol
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetProtocol()
  nameWithType: HttpWorkerRequest.GetProtocol()
  fullName: System.Web.HttpWorkerRequest.GetProtocol()
- uid: System.Web.HttpWorkerRequest.GetQueryString
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetQueryString()
  nameWithType: HttpWorkerRequest.GetQueryString()
  fullName: System.Web.HttpWorkerRequest.GetQueryString()
- uid: System.Web.HttpWorkerRequest.GetQueryStringRawBytes
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetQueryStringRawBytes()
  nameWithType: HttpWorkerRequest.GetQueryStringRawBytes()
  fullName: System.Web.HttpWorkerRequest.GetQueryStringRawBytes()
- uid: System.Web.HttpWorkerRequest.GetRawUrl
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRawUrl()
  nameWithType: HttpWorkerRequest.GetRawUrl()
  fullName: System.Web.HttpWorkerRequest.GetRawUrl()
- uid: System.Web.HttpWorkerRequest.GetRemoteAddress
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRemoteAddress()
  nameWithType: HttpWorkerRequest.GetRemoteAddress()
  fullName: System.Web.HttpWorkerRequest.GetRemoteAddress()
- uid: System.Web.HttpWorkerRequest.GetRemoteName
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRemoteName()
  nameWithType: HttpWorkerRequest.GetRemoteName()
  fullName: System.Web.HttpWorkerRequest.GetRemoteName()
- uid: System.Web.HttpWorkerRequest.GetRemotePort
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRemotePort()
  nameWithType: HttpWorkerRequest.GetRemotePort()
  fullName: System.Web.HttpWorkerRequest.GetRemotePort()
- uid: System.Web.HttpWorkerRequest.GetRequestReason
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRequestReason()
  nameWithType: HttpWorkerRequest.GetRequestReason()
  fullName: System.Web.HttpWorkerRequest.GetRequestReason()
- uid: System.Web.HttpWorkerRequest.GetServerName
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetServerName()
  nameWithType: HttpWorkerRequest.GetServerName()
  fullName: System.Web.HttpWorkerRequest.GetServerName()
- uid: System.Web.HttpWorkerRequest.GetServerVariable(System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetServerVariable(String)
  nameWithType: HttpWorkerRequest.GetServerVariable(String)
  fullName: System.Web.HttpWorkerRequest.GetServerVariable(String)
- uid: System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetStatusDescription(Int32)
  nameWithType: HttpWorkerRequest.GetStatusDescription(Int32)
  fullName: System.Web.HttpWorkerRequest.GetStatusDescription(Int32)
- uid: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetTotalEntityBodyLength()
  nameWithType: HttpWorkerRequest.GetTotalEntityBodyLength()
  fullName: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength()
- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUnknownRequestHeader(String)
  nameWithType: HttpWorkerRequest.GetUnknownRequestHeader(String)
  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeader(String)
- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUnknownRequestHeaders()
  nameWithType: HttpWorkerRequest.GetUnknownRequestHeaders()
  fullName: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders()
- uid: System.String[][]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[][]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[][]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpWorkerRequest.GetUriPath
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUriPath()
  nameWithType: HttpWorkerRequest.GetUriPath()
  fullName: System.Web.HttpWorkerRequest.GetUriPath()
- uid: System.Web.HttpWorkerRequest.GetUrlContextID
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUrlContextID()
  nameWithType: HttpWorkerRequest.GetUrlContextID()
  fullName: System.Web.HttpWorkerRequest.GetUrlContextID()
- uid: System.Web.HttpWorkerRequest.GetUserToken
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUserToken()
  nameWithType: HttpWorkerRequest.GetUserToken()
  fullName: System.Web.HttpWorkerRequest.GetUserToken()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.HttpWorkerRequest.GetVirtualPathToken
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetVirtualPathToken()
  nameWithType: HttpWorkerRequest.GetVirtualPathToken()
  fullName: System.Web.HttpWorkerRequest.GetVirtualPathToken()
- uid: System.Web.HttpWorkerRequest.HasEntityBody
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HasEntityBody()
  nameWithType: HttpWorkerRequest.HasEntityBody()
  fullName: System.Web.HttpWorkerRequest.HasEntityBody()
- uid: System.Web.HttpWorkerRequest.HeaderAccept
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAccept
  nameWithType: HttpWorkerRequest.HeaderAccept
  fullName: System.Web.HttpWorkerRequest.HeaderAccept
- uid: System.Web.HttpWorkerRequest.HeaderAcceptCharset
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAcceptCharset
  nameWithType: HttpWorkerRequest.HeaderAcceptCharset
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptCharset
- uid: System.Web.HttpWorkerRequest.HeaderAcceptEncoding
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAcceptEncoding
  nameWithType: HttpWorkerRequest.HeaderAcceptEncoding
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptEncoding
- uid: System.Web.HttpWorkerRequest.HeaderAcceptLanguage
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAcceptLanguage
  nameWithType: HttpWorkerRequest.HeaderAcceptLanguage
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptLanguage
- uid: System.Web.HttpWorkerRequest.HeaderAcceptRanges
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAcceptRanges
  nameWithType: HttpWorkerRequest.HeaderAcceptRanges
  fullName: System.Web.HttpWorkerRequest.HeaderAcceptRanges
- uid: System.Web.HttpWorkerRequest.HeaderAge
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAge
  nameWithType: HttpWorkerRequest.HeaderAge
  fullName: System.Web.HttpWorkerRequest.HeaderAge
- uid: System.Web.HttpWorkerRequest.HeaderAllow
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAllow
  nameWithType: HttpWorkerRequest.HeaderAllow
  fullName: System.Web.HttpWorkerRequest.HeaderAllow
- uid: System.Web.HttpWorkerRequest.HeaderAuthorization
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderAuthorization
  nameWithType: HttpWorkerRequest.HeaderAuthorization
  fullName: System.Web.HttpWorkerRequest.HeaderAuthorization
- uid: System.Web.HttpWorkerRequest.HeaderCacheControl
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderCacheControl
  nameWithType: HttpWorkerRequest.HeaderCacheControl
  fullName: System.Web.HttpWorkerRequest.HeaderCacheControl
- uid: System.Web.HttpWorkerRequest.HeaderConnection
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderConnection
  nameWithType: HttpWorkerRequest.HeaderConnection
  fullName: System.Web.HttpWorkerRequest.HeaderConnection
- uid: System.Web.HttpWorkerRequest.HeaderContentEncoding
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderContentEncoding
  nameWithType: HttpWorkerRequest.HeaderContentEncoding
  fullName: System.Web.HttpWorkerRequest.HeaderContentEncoding
- uid: System.Web.HttpWorkerRequest.HeaderContentLanguage
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderContentLanguage
  nameWithType: HttpWorkerRequest.HeaderContentLanguage
  fullName: System.Web.HttpWorkerRequest.HeaderContentLanguage
- uid: System.Web.HttpWorkerRequest.HeaderContentLength
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderContentLength
  nameWithType: HttpWorkerRequest.HeaderContentLength
  fullName: System.Web.HttpWorkerRequest.HeaderContentLength
- uid: System.Web.HttpWorkerRequest.HeaderContentLocation
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderContentLocation
  nameWithType: HttpWorkerRequest.HeaderContentLocation
  fullName: System.Web.HttpWorkerRequest.HeaderContentLocation
- uid: System.Web.HttpWorkerRequest.HeaderContentMd5
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderContentMd5
  nameWithType: HttpWorkerRequest.HeaderContentMd5
  fullName: System.Web.HttpWorkerRequest.HeaderContentMd5
- uid: System.Web.HttpWorkerRequest.HeaderContentRange
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderContentRange
  nameWithType: HttpWorkerRequest.HeaderContentRange
  fullName: System.Web.HttpWorkerRequest.HeaderContentRange
- uid: System.Web.HttpWorkerRequest.HeaderContentType
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderContentType
  nameWithType: HttpWorkerRequest.HeaderContentType
  fullName: System.Web.HttpWorkerRequest.HeaderContentType
- uid: System.Web.HttpWorkerRequest.HeaderCookie
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderCookie
  nameWithType: HttpWorkerRequest.HeaderCookie
  fullName: System.Web.HttpWorkerRequest.HeaderCookie
- uid: System.Web.HttpWorkerRequest.HeaderDate
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderDate
  nameWithType: HttpWorkerRequest.HeaderDate
  fullName: System.Web.HttpWorkerRequest.HeaderDate
- uid: System.Web.HttpWorkerRequest.HeaderEtag
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderEtag
  nameWithType: HttpWorkerRequest.HeaderEtag
  fullName: System.Web.HttpWorkerRequest.HeaderEtag
- uid: System.Web.HttpWorkerRequest.HeaderExpect
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderExpect
  nameWithType: HttpWorkerRequest.HeaderExpect
  fullName: System.Web.HttpWorkerRequest.HeaderExpect
- uid: System.Web.HttpWorkerRequest.HeaderExpires
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderExpires
  nameWithType: HttpWorkerRequest.HeaderExpires
  fullName: System.Web.HttpWorkerRequest.HeaderExpires
- uid: System.Web.HttpWorkerRequest.HeaderFrom
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderFrom
  nameWithType: HttpWorkerRequest.HeaderFrom
  fullName: System.Web.HttpWorkerRequest.HeaderFrom
- uid: System.Web.HttpWorkerRequest.HeaderHost
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderHost
  nameWithType: HttpWorkerRequest.HeaderHost
  fullName: System.Web.HttpWorkerRequest.HeaderHost
- uid: System.Web.HttpWorkerRequest.HeaderIfMatch
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderIfMatch
  nameWithType: HttpWorkerRequest.HeaderIfMatch
  fullName: System.Web.HttpWorkerRequest.HeaderIfMatch
- uid: System.Web.HttpWorkerRequest.HeaderIfModifiedSince
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderIfModifiedSince
  nameWithType: HttpWorkerRequest.HeaderIfModifiedSince
  fullName: System.Web.HttpWorkerRequest.HeaderIfModifiedSince
- uid: System.Web.HttpWorkerRequest.HeaderIfNoneMatch
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderIfNoneMatch
  nameWithType: HttpWorkerRequest.HeaderIfNoneMatch
  fullName: System.Web.HttpWorkerRequest.HeaderIfNoneMatch
- uid: System.Web.HttpWorkerRequest.HeaderIfRange
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderIfRange
  nameWithType: HttpWorkerRequest.HeaderIfRange
  fullName: System.Web.HttpWorkerRequest.HeaderIfRange
- uid: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderIfUnmodifiedSince
  nameWithType: HttpWorkerRequest.HeaderIfUnmodifiedSince
  fullName: System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince
- uid: System.Web.HttpWorkerRequest.HeaderKeepAlive
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderKeepAlive
  nameWithType: HttpWorkerRequest.HeaderKeepAlive
  fullName: System.Web.HttpWorkerRequest.HeaderKeepAlive
- uid: System.Web.HttpWorkerRequest.HeaderLastModified
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderLastModified
  nameWithType: HttpWorkerRequest.HeaderLastModified
  fullName: System.Web.HttpWorkerRequest.HeaderLastModified
- uid: System.Web.HttpWorkerRequest.HeaderLocation
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderLocation
  nameWithType: HttpWorkerRequest.HeaderLocation
  fullName: System.Web.HttpWorkerRequest.HeaderLocation
- uid: System.Web.HttpWorkerRequest.HeaderMaxForwards
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderMaxForwards
  nameWithType: HttpWorkerRequest.HeaderMaxForwards
  fullName: System.Web.HttpWorkerRequest.HeaderMaxForwards
- uid: System.Web.HttpWorkerRequest.HeaderPragma
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderPragma
  nameWithType: HttpWorkerRequest.HeaderPragma
  fullName: System.Web.HttpWorkerRequest.HeaderPragma
- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderProxyAuthenticate
  nameWithType: HttpWorkerRequest.HeaderProxyAuthenticate
  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthenticate
- uid: System.Web.HttpWorkerRequest.HeaderProxyAuthorization
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderProxyAuthorization
  nameWithType: HttpWorkerRequest.HeaderProxyAuthorization
  fullName: System.Web.HttpWorkerRequest.HeaderProxyAuthorization
- uid: System.Web.HttpWorkerRequest.HeaderRange
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderRange
  nameWithType: HttpWorkerRequest.HeaderRange
  fullName: System.Web.HttpWorkerRequest.HeaderRange
- uid: System.Web.HttpWorkerRequest.HeaderReferer
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderReferer
  nameWithType: HttpWorkerRequest.HeaderReferer
  fullName: System.Web.HttpWorkerRequest.HeaderReferer
- uid: System.Web.HttpWorkerRequest.HeaderRetryAfter
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderRetryAfter
  nameWithType: HttpWorkerRequest.HeaderRetryAfter
  fullName: System.Web.HttpWorkerRequest.HeaderRetryAfter
- uid: System.Web.HttpWorkerRequest.HeaderServer
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderServer
  nameWithType: HttpWorkerRequest.HeaderServer
  fullName: System.Web.HttpWorkerRequest.HeaderServer
- uid: System.Web.HttpWorkerRequest.HeaderSetCookie
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderSetCookie
  nameWithType: HttpWorkerRequest.HeaderSetCookie
  fullName: System.Web.HttpWorkerRequest.HeaderSetCookie
- uid: System.Web.HttpWorkerRequest.HeadersSent
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeadersSent()
  nameWithType: HttpWorkerRequest.HeadersSent()
  fullName: System.Web.HttpWorkerRequest.HeadersSent()
- uid: System.Web.HttpWorkerRequest.HeaderTe
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderTe
  nameWithType: HttpWorkerRequest.HeaderTe
  fullName: System.Web.HttpWorkerRequest.HeaderTe
- uid: System.Web.HttpWorkerRequest.HeaderTrailer
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderTrailer
  nameWithType: HttpWorkerRequest.HeaderTrailer
  fullName: System.Web.HttpWorkerRequest.HeaderTrailer
- uid: System.Web.HttpWorkerRequest.HeaderTransferEncoding
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderTransferEncoding
  nameWithType: HttpWorkerRequest.HeaderTransferEncoding
  fullName: System.Web.HttpWorkerRequest.HeaderTransferEncoding
- uid: System.Web.HttpWorkerRequest.HeaderUpgrade
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderUpgrade
  nameWithType: HttpWorkerRequest.HeaderUpgrade
  fullName: System.Web.HttpWorkerRequest.HeaderUpgrade
- uid: System.Web.HttpWorkerRequest.HeaderUserAgent
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderUserAgent
  nameWithType: HttpWorkerRequest.HeaderUserAgent
  fullName: System.Web.HttpWorkerRequest.HeaderUserAgent
- uid: System.Web.HttpWorkerRequest.HeaderVary
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderVary
  nameWithType: HttpWorkerRequest.HeaderVary
  fullName: System.Web.HttpWorkerRequest.HeaderVary
- uid: System.Web.HttpWorkerRequest.HeaderVia
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderVia
  nameWithType: HttpWorkerRequest.HeaderVia
  fullName: System.Web.HttpWorkerRequest.HeaderVia
- uid: System.Web.HttpWorkerRequest.HeaderWarning
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderWarning
  nameWithType: HttpWorkerRequest.HeaderWarning
  fullName: System.Web.HttpWorkerRequest.HeaderWarning
- uid: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeaderWwwAuthenticate
  nameWithType: HttpWorkerRequest.HeaderWwwAuthenticate
  fullName: System.Web.HttpWorkerRequest.HeaderWwwAuthenticate
- uid: System.Web.HttpWorkerRequest.IsClientConnected
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: IsClientConnected()
  nameWithType: HttpWorkerRequest.IsClientConnected()
  fullName: System.Web.HttpWorkerRequest.IsClientConnected()
- uid: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: IsEntireEntityBodyIsPreloaded()
  nameWithType: HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()
  fullName: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()
- uid: System.Web.HttpWorkerRequest.IsSecure
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: IsSecure()
  nameWithType: HttpWorkerRequest.IsSecure()
  fullName: System.Web.HttpWorkerRequest.IsSecure()
- uid: System.Web.HttpWorkerRequest.MachineConfigPath
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: MachineConfigPath
  nameWithType: HttpWorkerRequest.MachineConfigPath
  fullName: System.Web.HttpWorkerRequest.MachineConfigPath
- uid: System.Web.HttpWorkerRequest.MachineInstallDirectory
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: MachineInstallDirectory
  nameWithType: HttpWorkerRequest.MachineInstallDirectory
  fullName: System.Web.HttpWorkerRequest.MachineInstallDirectory
- uid: System.Web.HttpWorkerRequest.MapPath(System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpWorkerRequest.MapPath(String)
  fullName: System.Web.HttpWorkerRequest.MapPath(String)
- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReadEntityBody(Byte[],Int32)
  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32)
  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32)
- uid: System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReadEntityBody(Byte[],Int32,Int32)
  nameWithType: HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)
  fullName: System.Web.HttpWorkerRequest.ReadEntityBody(Byte[],Int32,Int32)
- uid: System.Web.HttpWorkerRequest.ReasonCachePolicy
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReasonCachePolicy
  nameWithType: HttpWorkerRequest.ReasonCachePolicy
  fullName: System.Web.HttpWorkerRequest.ReasonCachePolicy
- uid: System.Web.HttpWorkerRequest.ReasonCacheSecurity
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReasonCacheSecurity
  nameWithType: HttpWorkerRequest.ReasonCacheSecurity
  fullName: System.Web.HttpWorkerRequest.ReasonCacheSecurity
- uid: System.Web.HttpWorkerRequest.ReasonClientDisconnect
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReasonClientDisconnect
  nameWithType: HttpWorkerRequest.ReasonClientDisconnect
  fullName: System.Web.HttpWorkerRequest.ReasonClientDisconnect
- uid: System.Web.HttpWorkerRequest.ReasonDefault
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReasonDefault
  nameWithType: HttpWorkerRequest.ReasonDefault
  fullName: System.Web.HttpWorkerRequest.ReasonDefault
- uid: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReasonFileHandleCacheMiss
  nameWithType: HttpWorkerRequest.ReasonFileHandleCacheMiss
  fullName: System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss
- uid: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReasonResponseCacheMiss
  nameWithType: HttpWorkerRequest.ReasonResponseCacheMiss
  fullName: System.Web.HttpWorkerRequest.ReasonResponseCacheMiss
- uid: System.Web.HttpWorkerRequest.RequestHeaderMaximum
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: RequestHeaderMaximum
  nameWithType: HttpWorkerRequest.RequestHeaderMaximum
  fullName: System.Web.HttpWorkerRequest.RequestHeaderMaximum
- uid: System.Web.HttpWorkerRequest.RequestTraceIdentifier
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpWorkerRequest.RequestTraceIdentifier
  fullName: System.Web.HttpWorkerRequest.RequestTraceIdentifier
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Web.HttpWorkerRequest.ResponseHeaderMaximum
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ResponseHeaderMaximum
  nameWithType: HttpWorkerRequest.ResponseHeaderMaximum
  fullName: System.Web.HttpWorkerRequest.ResponseHeaderMaximum
- uid: System.Web.HttpWorkerRequest.RootWebConfigPath
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: RootWebConfigPath
  nameWithType: HttpWorkerRequest.RootWebConfigPath
  fullName: System.Web.HttpWorkerRequest.RootWebConfigPath
- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendCalculatedContentLength(Int32)
  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int32)
  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int32)
- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendCalculatedContentLength(Int64)
  nameWithType: HttpWorkerRequest.SendCalculatedContentLength(Int64)
  fullName: System.Web.HttpWorkerRequest.SendCalculatedContentLength(Int64)
- uid: System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendKnownResponseHeader(Int32,String)
  nameWithType: HttpWorkerRequest.SendKnownResponseHeader(Int32,String)
  fullName: System.Web.HttpWorkerRequest.SendKnownResponseHeader(Int32,String)
- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendResponseFromFile(IntPtr,Int64,Int64)
  nameWithType: HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(IntPtr,Int64,Int64)
- uid: System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendResponseFromFile(String,Int64,Int64)
  nameWithType: HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromFile(String,Int64,Int64)
- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendResponseFromMemory(Byte[],Int32)
  nameWithType: HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(Byte[],Int32)
- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendResponseFromMemory(IntPtr,Int32)
  nameWithType: HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)
  fullName: System.Web.HttpWorkerRequest.SendResponseFromMemory(IntPtr,Int32)
- uid: System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendStatus(Int32,String)
  nameWithType: HttpWorkerRequest.SendStatus(Int32,String)
  fullName: System.Web.HttpWorkerRequest.SendStatus(Int32,String)
- uid: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendUnknownResponseHeader(String,String)
  nameWithType: HttpWorkerRequest.SendUnknownResponseHeader(String,String)
  fullName: System.Web.HttpWorkerRequest.SendUnknownResponseHeader(String,String)
- uid: System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)
  nameWithType: HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)
  fullName: System.Web.HttpWorkerRequest.SetEndOfSendNotification(HttpWorkerRequest+EndOfSendNotification,Object)
- uid: System.Web.HttpWorkerRequest.EndOfSendNotification
  parent: System.Web
  isExternal: false
  name: HttpWorkerRequest+EndOfSendNotification
  nameWithType: HttpWorkerRequest+EndOfSendNotification
  fullName: System.Web.HttpWorkerRequest+EndOfSendNotification
- uid: System.Web.HttpWorkerRequest.SupportsAsyncFlush
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpWorkerRequest.SupportsAsyncFlush
  fullName: System.Web.HttpWorkerRequest.SupportsAsyncFlush
- uid: System.Web.HttpWorkerRequest.SupportsAsyncRead
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SupportsAsyncRead
  nameWithType: HttpWorkerRequest.SupportsAsyncRead
  fullName: System.Web.HttpWorkerRequest.SupportsAsyncRead
- uid: System.Web.HttpWorkerRequest.#ctor*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HttpWorkerRequest
  nameWithType: HttpWorkerRequest.HttpWorkerRequest
- uid: System.Web.HttpWorkerRequest.BeginFlush*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: BeginFlush
  nameWithType: HttpWorkerRequest.BeginFlush
- uid: System.Web.HttpWorkerRequest.BeginRead*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: BeginRead
  nameWithType: HttpWorkerRequest.BeginRead
- uid: System.Web.HttpWorkerRequest.CloseConnection*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: CloseConnection
  nameWithType: HttpWorkerRequest.CloseConnection
- uid: System.Web.HttpWorkerRequest.EndFlush*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: EndFlush
  nameWithType: HttpWorkerRequest.EndFlush
- uid: System.Web.HttpWorkerRequest.EndOfRequest*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: EndOfRequest
  nameWithType: HttpWorkerRequest.EndOfRequest
- uid: System.Web.HttpWorkerRequest.EndRead*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: EndRead
  nameWithType: HttpWorkerRequest.EndRead
- uid: System.Web.HttpWorkerRequest.FlushResponse*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: FlushResponse
  nameWithType: HttpWorkerRequest.FlushResponse
- uid: System.Web.HttpWorkerRequest.GetAppPath*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetAppPath
  nameWithType: HttpWorkerRequest.GetAppPath
- uid: System.Web.HttpWorkerRequest.GetAppPathTranslated*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetAppPathTranslated
  nameWithType: HttpWorkerRequest.GetAppPathTranslated
- uid: System.Web.HttpWorkerRequest.GetAppPoolID*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetAppPoolID
  nameWithType: HttpWorkerRequest.GetAppPoolID
- uid: System.Web.HttpWorkerRequest.GetBytesRead*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetBytesRead
  nameWithType: HttpWorkerRequest.GetBytesRead
- uid: System.Web.HttpWorkerRequest.GetClientCertificate*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificate
  nameWithType: HttpWorkerRequest.GetClientCertificate
- uid: System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateBinaryIssuer
  nameWithType: HttpWorkerRequest.GetClientCertificateBinaryIssuer
- uid: System.Web.HttpWorkerRequest.GetClientCertificateEncoding*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateEncoding
  nameWithType: HttpWorkerRequest.GetClientCertificateEncoding
- uid: System.Web.HttpWorkerRequest.GetClientCertificatePublicKey*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificatePublicKey
  nameWithType: HttpWorkerRequest.GetClientCertificatePublicKey
- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidFrom*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateValidFrom
  nameWithType: HttpWorkerRequest.GetClientCertificateValidFrom
- uid: System.Web.HttpWorkerRequest.GetClientCertificateValidUntil*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetClientCertificateValidUntil
  nameWithType: HttpWorkerRequest.GetClientCertificateValidUntil
- uid: System.Web.HttpWorkerRequest.GetConnectionID*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetConnectionID
  nameWithType: HttpWorkerRequest.GetConnectionID
- uid: System.Web.HttpWorkerRequest.GetFilePath*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetFilePath
  nameWithType: HttpWorkerRequest.GetFilePath
- uid: System.Web.HttpWorkerRequest.GetFilePathTranslated*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetFilePathTranslated
  nameWithType: HttpWorkerRequest.GetFilePathTranslated
- uid: System.Web.HttpWorkerRequest.GetHttpVerbName*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetHttpVerbName
  nameWithType: HttpWorkerRequest.GetHttpVerbName
- uid: System.Web.HttpWorkerRequest.GetHttpVersion*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetHttpVersion
  nameWithType: HttpWorkerRequest.GetHttpVersion
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeader*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownRequestHeader
  nameWithType: HttpWorkerRequest.GetKnownRequestHeader
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownRequestHeaderIndex
  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderIndex
- uid: System.Web.HttpWorkerRequest.GetKnownRequestHeaderName*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownRequestHeaderName
  nameWithType: HttpWorkerRequest.GetKnownRequestHeaderName
- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownResponseHeaderIndex
  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderIndex
- uid: System.Web.HttpWorkerRequest.GetKnownResponseHeaderName*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetKnownResponseHeaderName
  nameWithType: HttpWorkerRequest.GetKnownResponseHeaderName
- uid: System.Web.HttpWorkerRequest.GetLocalAddress*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetLocalAddress
  nameWithType: HttpWorkerRequest.GetLocalAddress
- uid: System.Web.HttpWorkerRequest.GetLocalPort*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetLocalPort
  nameWithType: HttpWorkerRequest.GetLocalPort
- uid: System.Web.HttpWorkerRequest.GetPathInfo*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetPathInfo
  nameWithType: HttpWorkerRequest.GetPathInfo
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBody*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetPreloadedEntityBody
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBody
- uid: System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetPreloadedEntityBodyLength
  nameWithType: HttpWorkerRequest.GetPreloadedEntityBodyLength
- uid: System.Web.HttpWorkerRequest.GetProtocol*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetProtocol
  nameWithType: HttpWorkerRequest.GetProtocol
- uid: System.Web.HttpWorkerRequest.GetQueryString*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetQueryString
  nameWithType: HttpWorkerRequest.GetQueryString
- uid: System.Web.HttpWorkerRequest.GetQueryStringRawBytes*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetQueryStringRawBytes
  nameWithType: HttpWorkerRequest.GetQueryStringRawBytes
- uid: System.Web.HttpWorkerRequest.GetRawUrl*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRawUrl
  nameWithType: HttpWorkerRequest.GetRawUrl
- uid: System.Web.HttpWorkerRequest.GetRemoteAddress*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRemoteAddress
  nameWithType: HttpWorkerRequest.GetRemoteAddress
- uid: System.Web.HttpWorkerRequest.GetRemoteName*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRemoteName
  nameWithType: HttpWorkerRequest.GetRemoteName
- uid: System.Web.HttpWorkerRequest.GetRemotePort*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRemotePort
  nameWithType: HttpWorkerRequest.GetRemotePort
- uid: System.Web.HttpWorkerRequest.GetRequestReason*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetRequestReason
  nameWithType: HttpWorkerRequest.GetRequestReason
- uid: System.Web.HttpWorkerRequest.GetServerName*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetServerName
  nameWithType: HttpWorkerRequest.GetServerName
- uid: System.Web.HttpWorkerRequest.GetServerVariable*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetServerVariable
  nameWithType: HttpWorkerRequest.GetServerVariable
- uid: System.Web.HttpWorkerRequest.GetStatusDescription*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetStatusDescription
  nameWithType: HttpWorkerRequest.GetStatusDescription
- uid: System.Web.HttpWorkerRequest.GetTotalEntityBodyLength*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetTotalEntityBodyLength
  nameWithType: HttpWorkerRequest.GetTotalEntityBodyLength
- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeader*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUnknownRequestHeader
  nameWithType: HttpWorkerRequest.GetUnknownRequestHeader
- uid: System.Web.HttpWorkerRequest.GetUnknownRequestHeaders*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUnknownRequestHeaders
  nameWithType: HttpWorkerRequest.GetUnknownRequestHeaders
- uid: System.Web.HttpWorkerRequest.GetUriPath*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUriPath
  nameWithType: HttpWorkerRequest.GetUriPath
- uid: System.Web.HttpWorkerRequest.GetUrlContextID*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUrlContextID
  nameWithType: HttpWorkerRequest.GetUrlContextID
- uid: System.Web.HttpWorkerRequest.GetUserToken*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetUserToken
  nameWithType: HttpWorkerRequest.GetUserToken
- uid: System.Web.HttpWorkerRequest.GetVirtualPathToken*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: GetVirtualPathToken
  nameWithType: HttpWorkerRequest.GetVirtualPathToken
- uid: System.Web.HttpWorkerRequest.HasEntityBody*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpWorkerRequest.HasEntityBody
- uid: System.Web.HttpWorkerRequest.HeadersSent*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: HeadersSent
  nameWithType: HttpWorkerRequest.HeadersSent
- uid: System.Web.HttpWorkerRequest.IsClientConnected*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpWorkerRequest.IsClientConnected
- uid: System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: IsEntireEntityBodyIsPreloaded
  nameWithType: HttpWorkerRequest.IsEntireEntityBodyIsPreloaded
- uid: System.Web.HttpWorkerRequest.IsSecure*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: IsSecure
  nameWithType: HttpWorkerRequest.IsSecure
- uid: System.Web.HttpWorkerRequest.MachineConfigPath*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: MachineConfigPath
  nameWithType: HttpWorkerRequest.MachineConfigPath
- uid: System.Web.HttpWorkerRequest.MachineInstallDirectory*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: MachineInstallDirectory
  nameWithType: HttpWorkerRequest.MachineInstallDirectory
- uid: System.Web.HttpWorkerRequest.MapPath*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: MapPath
  nameWithType: HttpWorkerRequest.MapPath
- uid: System.Web.HttpWorkerRequest.ReadEntityBody*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: ReadEntityBody
  nameWithType: HttpWorkerRequest.ReadEntityBody
- uid: System.Web.HttpWorkerRequest.RequestTraceIdentifier*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpWorkerRequest.RequestTraceIdentifier
- uid: System.Web.HttpWorkerRequest.RootWebConfigPath*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: RootWebConfigPath
  nameWithType: HttpWorkerRequest.RootWebConfigPath
- uid: System.Web.HttpWorkerRequest.SendCalculatedContentLength*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendCalculatedContentLength
  nameWithType: HttpWorkerRequest.SendCalculatedContentLength
- uid: System.Web.HttpWorkerRequest.SendKnownResponseHeader*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendKnownResponseHeader
  nameWithType: HttpWorkerRequest.SendKnownResponseHeader
- uid: System.Web.HttpWorkerRequest.SendResponseFromFile*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendResponseFromFile
  nameWithType: HttpWorkerRequest.SendResponseFromFile
- uid: System.Web.HttpWorkerRequest.SendResponseFromMemory*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendResponseFromMemory
  nameWithType: HttpWorkerRequest.SendResponseFromMemory
- uid: System.Web.HttpWorkerRequest.SendStatus*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendStatus
  nameWithType: HttpWorkerRequest.SendStatus
- uid: System.Web.HttpWorkerRequest.SendUnknownResponseHeader*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SendUnknownResponseHeader
  nameWithType: HttpWorkerRequest.SendUnknownResponseHeader
- uid: System.Web.HttpWorkerRequest.SetEndOfSendNotification*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SetEndOfSendNotification
  nameWithType: HttpWorkerRequest.SetEndOfSendNotification
- uid: System.Web.HttpWorkerRequest.SupportsAsyncFlush*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpWorkerRequest.SupportsAsyncFlush
- uid: System.Web.HttpWorkerRequest.SupportsAsyncRead*
  parent: System.Web.HttpWorkerRequest
  isExternal: false
  name: SupportsAsyncRead
  nameWithType: HttpWorkerRequest.SupportsAsyncRead
