### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement
  id: WSDualHttpBindingElement
  children:
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  langs:
  - csharp
  name: WSDualHttpBindingElement
  nameWithType: WSDualHttpBindingElement
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement
  type: Class
  summary: "Represents the configuration element for a secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries."
  remarks: "The wsDualHttpBinding is a secure, reliable, interoperable binding suitable for duplex service contracts. By default, it generates a run-time stack with WS-ReliableMessaging for reliability, WS-Security for message security and authentication, HTTP for message delivery, and a Text/XML message encoding.       This binding requires that the client has a public URI. It can be used to communicate reliably through one or more SOAP intermediaries."
  syntax:
    content: 'public class WSDualHttpBindingElement : System.ServiceModel.Configuration.StandardBindingElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.StandardBindingElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Name
  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: WSDualHttpBindingElement()
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.WSDualHttpBindingElement&quot;></xref> class."
  syntax:
    content: public WSDualHttpBindingElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: WSDualHttpBindingElement(String)
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.WSDualHttpBindingElement&quot;></xref> class with the specified name."
  syntax:
    content: public WSDualHttpBindingElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "The configuration name of the binding. This value should be unique because it is used as identification for the binding."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: WSDualHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets the type of this binding element."
  syntax:
    content: protected override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "The <xref:System.Type> of this binding element."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBindingElement.BypassProxyOnLocal
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a boolean value that specifies whether to bypass the proxy server for local addresses."
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the proxy server is bypassed for local addresses; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: WSDualHttpBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a URI that specifies the base address the client listens to for response messages from the service."
  remarks: "If this property has a value, this address (plus a GUID for each channel) is used for listening. Otherwise, the client base address is generated in a transport-specific manner."
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: "A URI that specifies the base address that the client listens to for response messages from the service."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBindingElement.HostNameComparisonMode
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the HTTP hostname comparison mode used to parse URIs."
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "A valid HostNameComparisonMode value that specifies whether the hostname is used to reach the service when matching on the URI. The default value is <xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;></xref>, which ignores the hostname in the match."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  id: InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: InitializeFrom(Binding)
  nameWithType: WSDualHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(Binding)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes this binding configuration section with the content of the specified binding collection."
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "A collection of binding elements."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBindingElement.MaxBufferPoolSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum amount of memory, in bytes, that can be allocated for the message buffer manager, which receives messages at the endpoints configured with this binding."
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBindingElement.MaxReceivedMessageSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding."
  remarks: "The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> class is bounded by the amount of memory allocated for each message. This bound on message size is intended to limit exposure to DoS-style attacks.       Note that the settings for <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize%2A> and MaxReceivedMessageSize, are local behavioral settings. This means that they are not transmitted to other endpoints in metadata. If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K. This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators."
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  id: MessageEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: MessageEncoding
  nameWithType: WSDualHttpBindingElement.MessageEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the encoder used to encode the message."
  syntax:
    content: public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }
    return:
      type: System.ServiceModel.WSMessageEncoding
      description: "A <xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;></xref> value that specifies the encoder used to encode the message. The default value is <xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;></xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: OnApplyConfiguration(Binding)
  nameWithType: WSDualHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(Binding)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Called when the content of a specified binding collection is applied to this binding configuration element."
  syntax:
    content: protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "The binding to be applied."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: Properties
  nameWithType: WSDualHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets a <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;></xref> instance that contains a collection of <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> objects that can be attributes or <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> objects of this configuration element."
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;></xref> instance that contains a collection of <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> objects that can be attributes or <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> objects of this configuration element."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WSDualHttpBindingElement.ProxyAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or set a URI that specifies the address of the HTTP proxy."
  remarks: "If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> property is set to `true`, the value of this property is ignored."
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "A URI that specifies the address of the HTTP proxy."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WSDualHttpBindingElement.ReaderQuotas
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding."
  remarks: "The complexity constraints include items such as a maximum element depth, or a maximum length for string content within the message. The constraints protect against a type of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources."
  syntax:
    content: public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }
    return:
      type: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
      description: "The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  id: ReliableSession
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ReliableSession
  nameWithType: WSDualHttpBindingElement.ReliableSession
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets a configuration element that specifies whether reliable sessions are enabled for the endpoint configured with this binding."
  remarks: "A reliable session is required for services configured with wsDualHttpBinding binding."
  syntax:
    content: public System.ServiceModel.Configuration.StandardBindingReliableSessionElement ReliableSession { get; }
    return:
      type: System.ServiceModel.Configuration.StandardBindingReliableSessionElement
      description: "An <xref href=&quot;System.ServiceModel.Configuration.ReliableSessionElement&quot;></xref> that specifies whether reliable sessions are enabled for the endpoint configured with this binding."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  id: Security
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: Security
  nameWithType: WSDualHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets the type of security to be used with this binding."
  syntax:
    content: public System.ServiceModel.Configuration.WSDualHttpSecurityElement Security { get; }
    return:
      type: System.ServiceModel.Configuration.WSDualHttpSecurityElement
      description: "The <xref href=&quot;System.ServiceModel.Configuration.WSDualHttpSecurityElement&quot;></xref> that specifies the security settings used with this binding."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  id: TextEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: TextEncoding
  nameWithType: WSDualHttpBindingElement.TextEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the character set encoding to be used for emitting messages on the binding."
  syntax:
    content: public System.Text.Encoding TextEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "A valid <xref:System.Text.Encoding> value that specifies the character set encoding to be used for emitting messages on the binding. The default is <xref:System.Text.UTF8Encoding>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  id: TransactionFlow
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: TransactionFlow
  nameWithType: WSDualHttpBindingElement.TransactionFlow
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a boolean value that specifies whether the binding supports flowing WS-Transactions."
  remarks: "The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header."
  syntax:
    content: public bool TransactionFlow { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the binding supports flowing WS-Transactions; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBindingElement.UseDefaultWebProxy
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a boolean value that specifies whether the system’s auto-configured HTTP proxy is used."
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the system’s auto-configured HTTP proxy is used; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: false
  name: System.ServiceModel.Configuration.StandardBindingElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: WSDualHttpBindingElement()
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement()
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: WSDualHttpBindingElement(String)
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WSDualHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBindingElement.BypassProxyOnLocal
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBindingElement.HostNameComparisonMode
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: InitializeFrom(Binding)
  nameWithType: WSDualHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(Binding)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBindingElement.MaxBufferPoolSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBindingElement.MaxReceivedMessageSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBindingElement.MessageEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
- uid: System.ServiceModel.WSMessageEncoding
  parent: System.ServiceModel
  isExternal: false
  name: WSMessageEncoding
  nameWithType: WSMessageEncoding
  fullName: System.ServiceModel.WSMessageEncoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration(Binding)
  nameWithType: WSDualHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(Binding)
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WSDualHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBindingElement.ProxyAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBindingElement.ReaderQuotas
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
- uid: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: XmlDictionaryReaderQuotasElement
  nameWithType: XmlDictionaryReaderQuotasElement
  fullName: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBindingElement.ReliableSession
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
- uid: System.ServiceModel.Configuration.StandardBindingReliableSessionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: StandardBindingReliableSessionElement
  nameWithType: StandardBindingReliableSessionElement
  fullName: System.ServiceModel.Configuration.StandardBindingReliableSessionElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
- uid: System.ServiceModel.Configuration.WSDualHttpSecurityElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: WSDualHttpSecurityElement
  nameWithType: WSDualHttpSecurityElement
  fullName: System.ServiceModel.Configuration.WSDualHttpSecurityElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBindingElement.TextEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBindingElement.TransactionFlow
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBindingElement.UseDefaultWebProxy
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: WSDualHttpBindingElement
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WSDualHttpBindingElement.BindingElementType
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBindingElement.BypassProxyOnLocal
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBindingElement.ClientBaseAddress
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: InitializeFrom
  nameWithType: WSDualHttpBindingElement.InitializeFrom
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBindingElement.MaxBufferPoolSize
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBindingElement.MessageEncoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration
  nameWithType: WSDualHttpBindingElement.OnApplyConfiguration
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WSDualHttpBindingElement.Properties
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBindingElement.ProxyAddress
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBindingElement.ReaderQuotas
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBindingElement.ReliableSession
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBindingElement.Security
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBindingElement.TextEncoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBindingElement.TransactionFlow
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBindingElement.UseDefaultWebProxy
