### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingGroup
  id: BindingGroup
  children:
  - System.Windows.Data.BindingGroup.#ctor
  - System.Windows.Data.BindingGroup.BeginEdit
  - System.Windows.Data.BindingGroup.BindingExpressions
  - System.Windows.Data.BindingGroup.CancelEdit
  - System.Windows.Data.BindingGroup.CanRestoreValues
  - System.Windows.Data.BindingGroup.CommitEdit
  - System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  - System.Windows.Data.BindingGroup.HasValidationError
  - System.Windows.Data.BindingGroup.IsDirty
  - System.Windows.Data.BindingGroup.Items
  - System.Windows.Data.BindingGroup.Name
  - System.Windows.Data.BindingGroup.NotifyOnValidationError
  - System.Windows.Data.BindingGroup.Owner
  - System.Windows.Data.BindingGroup.SharesProposedValues
  - System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  - System.Windows.Data.BindingGroup.UpdateSources
  - System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  - System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  - System.Windows.Data.BindingGroup.ValidationErrors
  - System.Windows.Data.BindingGroup.ValidationRules
  langs:
  - csharp
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
  type: Class
  summary: "Contém uma coleção de enlaces e <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos que são utilizados para validar um objeto."
  remarks: "Um BindingGroup cria uma relação entre vários enlaces, que pode ser validado e atualizados em conjunto. Por exemplo, suponha que uma aplicação pede ao utilizador para introduzir um endereço. A aplicação, em seguida, preenche um objeto do tipo `Address`, que tem as propriedades, `Street`, `City`, `ZipCode`, e `Country`, com os valores que o utilizador forneceu. A aplicação tem um painel que contém quatro <xref:System.Windows.Controls.TextBox>controlos, cada um dos quais é os dados vinculados a uma das propriedades do objeto.</xref:System.Windows.Controls.TextBox> Pode utilizar um <xref:System.Windows.Controls.ValidationRule>num BindingGroup para validar o `Address` objeto.</xref:System.Windows.Controls.ValidationRule> Se os enlaces de participam no BindingGroup a mesma, pode certificar-se de que o código de zip é válido para o país/região do endereço.       Definir a <xref:System.Windows.FrameworkElement.BindingGroup%2A>propriedade <xref:System.Windows.FrameworkElement>ou <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement.BindingGroup%2A> Elementos subordinados herdam o BindingGroup os respetivos elementos principais, basta tal como acontece com quaisquer outras propriedade herdável. Um enlace num elemento descendente é adicionado a um BindingGroup se ocorrer uma das seguintes situações:-origem o enlace e a <xref:System.Windows.FrameworkElement.DataContext%2A>do elemento que tenha o BindingGroup são o mesmo objeto e o <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>propriedade não está definida.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.FrameworkElement.DataContext%2A>      -O <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>é igual a propriedade de enlace de <xref:System.Windows.Data.BindingGroup.Name%2A>do <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>e não são explicitamente definidas como `null`.</xref:System.Windows.FrameworkContentElement.BindingGroup%2A> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       No exemplo do endereço, suponha que o <xref:System.Windows.FrameworkElement.DataContext%2A>do <xref:System.Windows.Controls.Panel>está definido para o objeto do tipo `Address`.</xref:System.Windows.Controls.Panel> </xref:System.Windows.FrameworkElement.DataContext%2A> O enlace para cada <xref:System.Windows.Controls.TextBox>é adicionado à BindingGroup do painel.</xref:System.Windows.Controls.TextBox>       Adicionar <xref:System.Windows.Controls.ValidationRule>objetos a um BindingGroup.</xref:System.Windows.Controls.ValidationRule> O BindingGroup é transmitida como primeiro parâmetro do <xref:System.Windows.Controls.ValidationRule.Validate%2A>método quando o <xref:System.Windows.Controls.ValidationRule>é executado.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> Pode utilizar o <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>ou <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>método em que BindingGroup para obter os valores propostos de objeto e o <xref:System.Windows.Data.BindingGroup.Items%2A>propriedade obter as origens dos enlaces.</xref:System.Windows.Data.BindingGroup.Items%2A> </xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A>       Um BindingGroup atualiza as origens do enlace ao mesmo tempo, em vez de cada enlace que está a ser atualizado em separado. Quando chamar um dos métodos para validar os dados (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, ou <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), o enlace para cada <xref:System.Windows.Controls.TextBox>no exemplo é validado e potencialmente atualizado.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A> </xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A> Quando um enlace faz parte de um BindingGroup, a origem do enlace não for atualizada até chamar <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>ou <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>no BindingGroup, a menos que defina explicitamente a <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>propriedade.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A>"
  example:
  - "The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires. The application displays the current information for the item below the form. The user can submit or cancel the changes.  \n  \n The application does the following to achieve this behavior.  \n  \n-   Creates a BindingGroup and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.  \n  \n The following example creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application. The root <xref:System.Windows.Controls.StackPanel> has a BindingGroup that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously. The binding objects on the `Price` property and the `OfferExpires` property become part of the BindingGroup and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values. The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the BindingGroup.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the event handlers for the application. When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the BindingGroup. If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction. If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction. When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the BindingGroup (in the previous example). `ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event and displays information about the validation error to the user. The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.  \n  \n [!code-cs[BindingGroupSnippets#WindowLogic](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#windowlogic)]\n [!code-vb[BindingGroupSnippets#WindowLogic](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#windowlogic)]  \n  \n The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the BindingGroup in the first example. The <xref:System.Windows.Controls.ValidationRule> uses the BindingGroup in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: 'public class BindingGroup : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> classe."
  syntax:
    content: public BindingGroup ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BeginEdit
  id: BeginEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Começa uma transação de edição nas origens do <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Se as origens do <xref:System.Windows.Data.BindingGroup>suportar rejeitar as alterações pendentes, pode chamar BeginEdit para iniciar a transação de edição, chamar <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>para guardar as alterações pendentes, chame <xref:System.Windows.Data.BindingGroup.CancelEdit%2A>para rejeitar as alterações pendentes.</xref:System.Windows.Data.BindingGroup.CancelEdit%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup>       Para cada objeto no <xref:System.Windows.Data.BindingGroup.Items%2A>que implementa <xref:System.ComponentModel.IEditableObject>, chamadas de BeginEdit <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls BeginEdit when a window loads to begin the edit transaction.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém uma coleção de <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> objetos que contém informações para cada enlace no <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "A <xref:System.Windows.Data.BindingExpression>pertence a um <xref:System.Windows.Data.BindingGroup>se ocorrer uma das seguintes casos:-origem o enlace e a <xref:System.Windows.FrameworkElement.DataContext%2A>do elemento que tenha o <xref:System.Windows.Data.BindingGroup>são o mesmo objeto e o <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>não está definido.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingExpression>      -O <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>propriedade do enlace e a <xref:System.Windows.Data.BindingGroup.Name%2A>do <xref:System.Windows.Data.BindingGroup>estão definidas para o mesmo valor não nulo e o <xref:System.Windows.Data.BindingGroup>pertence a um elemento principal do elemento de destino do enlace.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>      -Adicionar uma <xref:System.Windows.Data.BindingExpression>para BindingExpressions.</xref:System.Windows.Data.BindingExpression>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
      description: "Uma coleção de <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> objetos que contém informações para cada enlace no <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Termine a transação de edição e elimina as alterações pendentes."
  remarks: "Este método faz com que as origens rejeitar as alterações pendentes, se um objeto de origem é capaz de fazê-lo e termine a transação de edição. Em seguida, o método atualiza as propriedades de destino com os valores de origem guardado.       Para cada objeto no <xref:System.Windows.Data.BindingGroup.Items%2A>que implementa <xref:System.ComponentModel.IEditableObject>, chamadas de CancelEdit <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CancelEdit to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#CancelEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[BindingGroupSnippets#CancelEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  id: CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém se cada origem no enlace pode rejeitar as alterações pendentes e restaurar os valores originais."
  remarks: "Uma origem pode rejeitar as alterações pendentes se implementa <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject>"
  syntax:
    content: public bool CanRestoreValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se cada origem no enlace pode rejeitar as alterações pendentes e restaurar os valores originais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CanRestoreValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Executa todos os o <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos e atualiza as origens de enlace se todas as regras de validação com êxito."
  remarks: "Se cada <xref:System.Windows.Controls.ValidationRule>for bem sucedida, as causas deste método origens para consolidar as alterações pendentes e termine a transação de edição, se uma origem de objeto é capaz de processo.</xref:System.Windows.Controls.ValidationRule>       Para cada objeto no <xref:System.Windows.Data.BindingGroup.Items%2A>que implementa <xref:System.ComponentModel.IEditableObject>, chamadas de CommitEdit <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CommitEdit to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public bool CommitEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se cada <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> for bem sucedida e os valores são consolidar as origens; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Devolve o valor proposto para o item e a propriedade especificada."
  remarks: "Utilize este método no <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>método para obter o valor para ser submetido para a origem.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> O tipo de valor de retorno depende a fase em que o <xref:System.Windows.Controls.ValidationRule>ocorre.</xref:System.Windows.Controls.ValidationRule> Por exemplo, se um <xref:System.Windows.Controls.TextBox>estão vinculado a dados para uma propriedade do tipo número inteiro e <xref:System.Windows.Controls.ValidationRule>que chamadas GetValue tem respetivo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>definido como <xref:System.Windows.Controls.ValidationStep>, o método devolve uma cadeia.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Se o <xref:System.Windows.Controls.ValidationRule>tem respetivo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>definido como <xref:System.Windows.Controls.ValidationStep>, o método devolve qualquer tipo que é devolvido pelo conversor o enlace.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> Neste exemplo, GetValue normalmente devolve um número inteiro."
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the GetValue method to get values that the customer entered.  \n  \n [!code-cs[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#itembindgroupvalidationrule)]\n [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#itembindgroupvalidationrule)]"
  syntax:
    content: public object GetValue (object item, string propertyName);
    parameters:
    - id: item
      type: System.Object
      description: "O objeto que contém a propriedade especificada."
    - id: propertyName
      type: System.String
      description: "A propriedade cujo valor proposto obter."
    return:
      type: System.Object
      description: "O valor da propriedade propostas."
  overload: System.Windows.Data.BindingGroup.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é um enlace para o item especificado e a propriedade."
  - type: System.Windows.Data.ValueUnavailableException
    commentId: T:System.Windows.Data.ValueUnavailableException
    description: "O valor da propriedade especificada não está disponível, devido a um erro de conversão ou devido a falha de uma regra de validação anterior."
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> tem uma regra de validação falhada."
  syntax:
    content: public bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> tem uma regra de validação falhada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.IsDirty
  id: IsDirty
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> contém um valor proposto e que não foi escrito para a origem."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> contém um valor proposto e que não foi escrito para a origem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Items
  id: Items
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém as origens que são utilizadas pelos objetos de enlace no <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Cada objeto que é utilizado como uma origem é adicionado uma vez, para a propriedade de itens, mesmo se o objeto é utilizado como origem para vários enlaces. Muitas vezes, não há apenas um item de itens, que é o objeto que é a <xref:System.Windows.FrameworkElement.DataContext%2A>do elemento que utiliza o <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> É possível que um <xref:System.Windows.Data.BindingGroup>ter várias origens, no entanto.</xref:System.Windows.Data.BindingGroup> Por exemplo, se a objetos de enlace partilham o mesmo <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>mas utilizar objetos de origem diferente, cada objeto que é utilizado como uma origem de itens.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Também pode haver vários objetos nos itens se o caminho de um enlace é convertido numa propriedade aninhada da origem. Por exemplo, suponha que um <xref:System.Windows.Controls.TextBox>enlace do controlo é uma parte de um <xref:System.Windows.Data.BindingGroup>e a respetiva <xref:System.Windows.FrameworkElement.DataContext%2A>é um `Customer` objeto, que tem uma propriedade do tipo `Address`.</xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.TextBox> Se o <xref:System.Windows.Data.Binding.Path%2A>do <xref:System.Windows.Data.Binding>é o `Address.ZipCode` propriedade, o `Address` é adicionado à propriedade itens.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Path%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>). On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public System.Collections.IList Items { get; }
    return:
      type: System.Collections.IList
      description: "As origens que são utilizadas pelos objetos de enlace no <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Name
  id: Name
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o nome que identifique o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>, que podem ser utilizadas para incluir e excluir objetos de enlace no <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Se o nome é `null`, enlaces que tem uma origem que é o mesmo objeto como <xref:System.Windows.FrameworkElement.DataContext%2A>do elemento que tenha a <xref:System.Windows.Data.BindingGroup>participar no <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>       Pode incluir enlaces que tem uma origem que é diferente do <xref:System.Windows.FrameworkElement.DataContext%2A>do elemento principal que tenha o <xref:System.Windows.Data.BindingGroup>ao definir o nome do <xref:System.Windows.Data.BindingGroup>e o <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>propriedade de um enlace para o mesmo valor.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> Pode excluir enlaces que tenham a mesma origem como <xref:System.Windows.FrameworkElement.DataContext%2A>do elemento principal que tenha o <xref:System.Windows.Data.BindingGroup>ao definir o nome do <xref:System.Windows.Data.BindingGroup>e o <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>propriedade de um enlace para diferentes valores.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the Name of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome que identifique o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define se a &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; evento ocorre quando o estado de um <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> alterações."
  remarks: "O <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>evento anexado ocorre no elemento que tenha <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Windows.Data.BindingGroup> and sets NotifyOnValidationError to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event when a <xref:System.Windows.Controls.ValidationRule> fails.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event.  \n  \n [!code-cs[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#errorhandler)]\n [!code-vb[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#errorhandler)]"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; evento ocorre quando o estado de um <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> alterações; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Owner
  id: Owner
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém o objeto que isto <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> está atribuída."
  syntax:
    content: public System.Windows.DependencyObject Owner { get; }
    return:
      type: System.Windows.DependencyObject
      description: "O objeto que este <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> está atribuída."
  overload: System.Windows.Data.BindingGroup.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  id: SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> reutiliza valores que não foram confirmados para a origem de destino."
  remarks: "Um valor proposto é um valor que foi alterado no destino de um vínculo, mas não foi consolidado a origem. Por exemplo, suponha que há um vínculo bidirecional numa <xref:System.Windows.Controls.TextBox>e a <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>propriedade está definida como <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Controls.TextBox> Se o utilizador altera o valor da <xref:System.Windows.Controls.TextBox>, o valor proposto é o valor que está a ser o <xref:System.Windows.Controls.TextBox>antes de consolidar a origem.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Quando é SharesProposedValues `true`, a <xref:System.Windows.Data.BindingGroup>utiliza o valor proposto quando um enlace deixa o BindingGroup e outro enlace com a mesma origem associa o BindingGroup.</xref:System.Windows.Data.BindingGroup>  Por exemplo, suponha que uma aplicação permite que um utilizador editar vários campos e atualize o objeto de origem ao clicar num botão. Quando um campo não está a ser editado, a aplicação apresenta-o no <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> Quando o utilizador começa a editar um campo, a aplicação substitui o <xref:System.Windows.Controls.TextBlock>com <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBlock> Quando o utilizador termina a edição esse campo, a aplicação substitui o <xref:System.Windows.Controls.TextBox>com <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Controls.TextBox> Porque a origem não for atualizada até que o utilizador clica no botão, tem de haver uma forma do <xref:System.Windows.Controls.TextBlock>para apresentar o valor proposto.</xref:System.Windows.Controls.TextBlock> Definindo SharesProposedValues `true`, a aplicação irá apresentar alterações do utilizador a um campo, mesmo quando não tiver sido atualizada a origem."
  syntax:
    content: public bool SharesProposedValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> reutiliza valores que não foram consolidadas para a origem; caso contrário, de destino <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.SharesProposedValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  id: TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "A tentar obter o valor proposto para o item e a propriedade especificada."
  remarks: "Devolve TryGetValue `false` se não houver um enlace para o item especificado e a propriedade ou se o valor da propriedade especificada não está disponível, devido a um erro de conversão ou devido a falha de uma regra de validação anterior.       Utilize este método no <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>método para obter o valor para ser submetido para a origem.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> O tipo `value` depende a fase em que o <xref:System.Windows.Controls.ValidationRule>ocorre.</xref:System.Windows.Controls.ValidationRule> Por exemplo, se um <xref:System.Windows.Controls.TextBox>dados vinculado a uma propriedade do tipo número inteiro, `value` é uma cadeia, se a <xref:System.Windows.Controls.ValidationRule>que as chamadas TryGetValue tem respetivo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>definido como <xref:System.Windows.Controls.ValidationStep>.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Se o <xref:System.Windows.Controls.ValidationRule>tem respetivo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>definido como <xref:System.Windows.Controls.ValidationStep>, o tipo de `value` qualquer tipo que é devolvido pelo conversor o enlace.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> Neste exemplo, `value` é, normalmente, um número inteiro."
  example:
  - "The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the TryGetValue method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form. Then the example checks that if an item is over 100 dollars, it will be available for at least seven days. This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public bool TryGetValue (object item, string propertyName, out object value);
    parameters:
    - id: item
      type: System.Object
      description: "O objeto que contém a propriedade especificada."
    - id: propertyName
      type: System.String
      description: "A propriedade cujo valor proposto obter."
    - id: value
      type: System.Object
      description: "Quando este método devolve, contém um objecto que representa o valor da propriedade propostas. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor for o valor proposto para a propriedade especificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.UpdateSources
  id: UpdateSources
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Executa o conversor no enlace e a <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos que têm o <xref:System.Windows.Controls.ValidationRule.ValidationStep*>propriedade definida como <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, ou <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> e guarda os valores dos destinos para os objetos de origem se todas as regras de validação com êxito.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "Este método atualiza a origem, se cada <xref:System.Windows.Controls.ValidationRule>for bem sucedida, mas não irá causar origens consolidar as alterações pendentes e termine a transação de edição.</xref:System.Windows.Controls.ValidationRule> Ou seja, se o objeto de origem implementa <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> Chamar este método não irá causar <xref:System.ComponentModel.IEditableObject.EndEdit%2A>ser chamado.</xref:System.ComponentModel.IEditableObject.EndEdit%2A> Utilize o <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>método para que as origens de consolidar as alterações pendentes.</xref:System.Windows.Data.BindingGroup.CommitEdit%2A>"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example calls UpdateSources to validate the bindings and save the values to the source if all the validation rules succeed.  \n  \n [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]\n [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]"
  syntax:
    content: public bool UpdateSources ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se todas as regras de validação for bem-sucedida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.UpdateSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  id: ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve incluir o <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Quando é ValidatesOnNotifyDataError `true`, o enlace verifica e relatórios de erros que são gerados por uma origem de dados que implemente <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>"
  syntax:
    content: public bool ValidatesOnNotifyDataError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  id: ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Executa o conversor no enlace e a <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos que têm o <xref:System.Windows.Controls.ValidationRule.ValidationStep*>propriedade definida como <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> ou <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "As origens não são atualizadas ao chamar este método."
  syntax:
    content: public bool ValidateWithoutUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as regras de validação for bem-sucedida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  id: ValidationErrors
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém uma coleção de <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> objetos que causou o <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> ser inválido."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError> ValidationErrors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
      description: "Uma coleção de <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> objetos que causou <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> ser inválido.  O valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se existirem erros."
  overload: System.Windows.Data.BindingGroup.ValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém uma coleção de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos validar os objetos de origem no <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Quando um <xref:System.Windows.Controls.ValidationRule>é adicionada a um <xref:System.Windows.Data.BindingGroup>, a <xref:System.Windows.Data.BindingGroup>seja transmitido como primeiro parâmetro do <xref:System.Windows.Controls.ValidationRule.Validate%2A>método.</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.ValidationRule> Pode obter os valores propostos de objeto utilizando o <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>ou <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>método.</xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A> Pode obter os objetos que estão as origens dos enlaces do <xref:System.Windows.Data.BindingGroup.Items%2A>propriedade.</xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example shows the `ValidateDateAndPrice` class. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Uma coleção de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos validar os objetos de origem no <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ValueUnavailableException
  parent: System.Windows.Data
  isExternal: false
  name: ValueUnavailableException
  nameWithType: ValueUnavailableException
  fullName: System.Windows.Data.ValueUnavailableException
- uid: System.Windows.Data.BindingGroup.#ctor
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
- uid: System.Windows.Data.BindingGroup.BeginEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingExpressionBase>
  nameWithType: Collection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.CancelEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingGroup.CommitEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingGroup.HasValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.BindingGroup.Name
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
- uid: System.Windows.Data.BindingGroup.UpdateSources
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ValidationError>
  nameWithType: ReadOnlyCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Controls.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.ValidationRules
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.#ctor*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup.BindingGroup
- uid: System.Windows.Data.BindingGroup.BeginEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit
  nameWithType: BindingGroup.BeginEdit
- uid: System.Windows.Data.BindingGroup.BindingExpressions*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
- uid: System.Windows.Data.BindingGroup.CancelEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit
  nameWithType: BindingGroup.CancelEdit
- uid: System.Windows.Data.BindingGroup.CanRestoreValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
- uid: System.Windows.Data.BindingGroup.CommitEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit
  nameWithType: BindingGroup.CommitEdit
- uid: System.Windows.Data.BindingGroup.GetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue
  nameWithType: BindingGroup.GetValue
- uid: System.Windows.Data.BindingGroup.HasValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
- uid: System.Windows.Data.BindingGroup.Name*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue
  nameWithType: BindingGroup.TryGetValue
- uid: System.Windows.Data.BindingGroup.UpdateSources*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources
  nameWithType: BindingGroup.UpdateSources
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate
  nameWithType: BindingGroup.ValidateWithoutUpdate
- uid: System.Windows.Data.BindingGroup.ValidationErrors*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
- uid: System.Windows.Data.BindingGroup.ValidationRules*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
