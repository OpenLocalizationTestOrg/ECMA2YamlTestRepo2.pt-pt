### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2
  id: HashEnumerator`2
  children:
  - Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)
  - Microsoft.VisualC.StlClr.HashEnumerator`2.Current
  - Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose
  - Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)
  - Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext
  - Microsoft.VisualC.StlClr.HashEnumerator`2.Reset
  langs:
  - csharp
  name: HashEnumerator<TKey,TValue>
  nameWithType: HashEnumerator<TKey,TValue>
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>
  type: Class
  syntax:
    content: 'public class HashEnumerator<TKey,TValue> : Microsoft.VisualC.StlClr.HashEnumeratorBase<TKey,TValue>, System.Collections.Generic.IEnumerator<TValue>'
    typeParameters:
    - id: TKey
      description: "To be added."
    - id: TValue
      description: "To be added."
  inheritance:
  - System.Object
  - Microsoft.VisualC.StlClr.HashEnumeratorBase`2
  implements:
  - System.Collections.Generic.IEnumerator<TValue>
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)'
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  langs:
  - csharp
  name: HashEnumerator(INode<TValue>)
  nameWithType: HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public HashEnumerator (Microsoft.VisualC.StlClr.Generic.INode<TValue> _First);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.INode`1
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Current
  id: Current
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  langs:
  - csharp
  name: Current
  nameWithType: HashEnumerator<TKey,TValue>.Current
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Current
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public virtual TValue Current { get; set; }
    return:
      type: TValue
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.Current*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose
  id: Dispose
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  langs:
  - csharp
  name: Dispose()
  nameWithType: HashEnumerator<TKey,TValue>.Dispose()
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HashEnumerator<TKey,TValue>.Dispose(Boolean)
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext
  id: MoveNext
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  langs:
  - csharp
  name: MoveNext()
  nameWithType: HashEnumerator<TKey,TValue>.MoveNext()
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.MoveNext()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public override bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Reset
  id: Reset
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  langs:
  - csharp
  name: Reset()
  nameWithType: HashEnumerator<TKey,TValue>.Reset()
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Reset()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualC.StlClr.HashEnumeratorBase`2
  isExternal: false
  name: Microsoft.VisualC.StlClr.HashEnumeratorBase<TKey,TValue>
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: HashEnumerator(INode<TValue>)
  nameWithType: HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.INode`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: INode<TValue>
  nameWithType: INode<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Current
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: Current
  nameWithType: HashEnumerator<TKey,TValue>.Current
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Current
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: Dispose()
  nameWithType: HashEnumerator<TKey,TValue>.Dispose()
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose()
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HashEnumerator<TKey,TValue>.Dispose(Boolean)
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: MoveNext()
  nameWithType: HashEnumerator<TKey,TValue>.MoveNext()
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.MoveNext()
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Reset
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: Reset()
  nameWithType: HashEnumerator<TKey,TValue>.Reset()
  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Reset()
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor*
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: HashEnumerator<TKey,TValue>
  nameWithType: HashEnumerator<TKey,TValue>.HashEnumerator<TKey,TValue>
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Current*
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: Current
  nameWithType: HashEnumerator<TKey,TValue>.Current
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose*
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: Dispose
  nameWithType: HashEnumerator<TKey,TValue>.Dispose
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext*
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: MoveNext
  nameWithType: HashEnumerator<TKey,TValue>.MoveNext
- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Reset*
  parent: Microsoft.VisualC.StlClr.HashEnumerator`2
  isExternal: false
  name: Reset
  nameWithType: HashEnumerator<TKey,TValue>.Reset
