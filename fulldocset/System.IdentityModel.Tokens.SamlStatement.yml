### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlStatement
  id: SamlStatement
  children:
  - System.IdentityModel.Tokens.SamlStatement.#ctor
  - System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  - System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  - System.IdentityModel.Tokens.SamlStatement.MakeReadOnly
  - System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlStatement
  nameWithType: SamlStatement
  fullName: System.IdentityModel.Tokens.SamlStatement
  type: Class
  summary: "Represents a claim for a <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> security token."
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions, which can specify when the subject was authenticated. The claims in a SAML assertion are represented by SAML statements, which are represented by the SamlStatement class.       The SAML specification defines the following statement types:      -   <xref:System.IdentityModel.Tokens.SamlAttributeStatement>      -   <xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>      -   <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>      -   <xref:System.IdentityModel.Tokens.SamlSubjectStatement>"
  syntax:
    content: public abstract class SamlStatement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: SamlStatement()
  nameWithType: SamlStatement.SamlStatement()
  fullName: System.IdentityModel.Tokens.SamlStatement.SamlStatement()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref> class."
  syntax:
    content: protected SamlStatement ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  id: CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  nameWithType: SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  fullName: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates an authorization policy for a <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> security token."
  remarks: "Use the CreatePolicy method to get an authorization policy for a <xref:System.IdentityModel.Tokens.SamlSecurityToken> security token."
  syntax:
    content: public abstract System.IdentityModel.Policy.IAuthorizationPolicy CreatePolicy (System.IdentityModel.Claims.ClaimSet issuer, System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator samlAuthenticator);
    parameters:
    - id: issuer
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;></xref> that represents the issuer of the <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> security token."
    - id: samlAuthenticator
      type: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;></xref> to authenticate the <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> security token."
    return:
      type: System.IdentityModel.Policy.IAuthorizationPolicy
      description: "An <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref> that represents an authorization policy for the <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> security token."
  overload: System.IdentityModel.Tokens.SamlStatement.CreatePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlStatement.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, gets a value that indicates whether the properties of this instance are read-only."
  remarks: "Classes that derive from the <xref:System.IdentityModel.Tokens.SamlStatement> class, should set the IsReadOnly property to `true` when the <xref:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly%2A> method is called."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the properties of this instance are read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlStatement.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlStatement.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Causes this instance to be read-only."
  remarks: "When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SamlStatement.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set."
  syntax:
    content: public abstract void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, reads the SAML statement from the specified XML reader."
  remarks: "Use the ReadXml method to read in a SAML statement, validate the XML, and set the appropriate properties that correspond to the attributes and elements."
  syntax:
    content: public abstract void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A <xref:System.Xml.XmlDictionaryReader> to read the SAML statement."
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref> that is capable of reading XML elements in the SAML statement that is defined in the SAML specification."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that reads the <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref> clause of the digital signature."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref> that determines the security token that created the digital signature."
  overload: System.IdentityModel.Tokens.SamlStatement.ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlStatement
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the SAML statement into the specified XML serializer."
  syntax:
    content: public abstract void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A <xref:System.Xml.XmlDictionaryWriter> to write the SAML statement."
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref> that is capable of writing XML elements in a SAML assertion."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that is capable of writing <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref> clauses."
  overload: System.IdentityModel.Tokens.SamlStatement.WriteXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SamlStatement.#ctor
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: SamlStatement()
  nameWithType: SamlStatement.SamlStatement()
  fullName: System.IdentityModel.Tokens.SamlStatement.SamlStatement()
- uid: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  nameWithType: SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
  fullName: System.IdentityModel.Tokens.SamlStatement.CreatePolicy(ClaimSet,SamlSecurityTokenAuthenticator)
- uid: System.IdentityModel.Policy.IAuthorizationPolicy
  parent: System.IdentityModel.Policy
  isExternal: false
  name: IAuthorizationPolicy
  nameWithType: IAuthorizationPolicy
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
- uid: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlStatement.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlStatement.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlStatement.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlStatement.#ctor*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: SamlStatement
  nameWithType: SamlStatement.SamlStatement
- uid: System.IdentityModel.Tokens.SamlStatement.CreatePolicy*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: CreatePolicy
  nameWithType: SamlStatement.CreatePolicy
- uid: System.IdentityModel.Tokens.SamlStatement.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlStatement.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlStatement.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlStatement.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlStatement.ReadXml*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: ReadXml
  nameWithType: SamlStatement.ReadXml
- uid: System.IdentityModel.Tokens.SamlStatement.WriteXml*
  parent: System.IdentityModel.Tokens.SamlStatement
  isExternal: false
  name: WriteXml
  nameWithType: SamlStatement.WriteXml
