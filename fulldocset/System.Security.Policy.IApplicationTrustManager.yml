### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.IApplicationTrustManager
  id: IApplicationTrustManager
  children:
  - System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  langs:
  - csharp
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
  type: Interface
  summary: "Determina se uma aplicação deve ser executada e qual o conjunto de permissões deve ser concedido ao mesmo."
  remarks: "Gestores de confiança tem de implementar a interface IApplicationTrustManager. As chamadas de anfitrião a <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>método para determinar se uma aplicação deve ser executada e devem ser concedidas as permissões para a aplicação.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>       No [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] e mais tarde, existe apenas um Gestor de fidedignidade, que pode ser uma implementação personalizada da IApplicationTrustManager interface. A implementação de Gestor de fidedignidade predefinida solicita ao utilizador permissão para instalar a aplicação e as permissões concedidas à aplicação de elevação. Noutras implementações do Gestor de fidedignidade podem fornecer experiências de utilizador diferente. Por exemplo, uma implementação pode verificar uma lista de enterprise para as aplicações fidedignas em vez de pedir ao utilizador para obter essa informação."
  example:
  - "The following example shows a simple implementation of IApplicationTrustManager.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/csharp/t-system.security.policy_3_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/visualbasic/t-system.security.policy_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IApplicationTrustManager : System.Security.ISecurityEncodable
  implements:
  - System.Security.ISecurityEncodable
  platform:
  - net462
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se uma aplicação deve ser executada e qual o conjunto de permissões deve ser concedido ao mesmo."
  remarks: "O método de DetermineApplicationTrust é chamado pelo anfitrião para determinar se uma aplicação deve ser executada e que conjunto de permissões deve ser concedido. DetermineApplicationTrust devolve um <xref:System.Security.Policy.ApplicationTrust>objeto com um <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>definir a propriedade que contém uma permissão que representa as permissões para ser concedida a cada assemblagem em execução dentro do contexto da aplicação.</xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> </xref:System.Security.Policy.ApplicationTrust> Não aplicam as permissões concedidas a assemblagens na cache de assemblagem global. O <xref:System.Security.Policy.ApplicationTrust>objeto também tem um <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>propriedade que define o Gestor de fidedignidade para indicar se a aplicação deve ser considerados fidedigna.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> </xref:System.Security.Policy.ApplicationTrust> Se o Gestor de fidedignidade indica que a aplicação pode ser fidedigna, o anfitrião ativa a aplicação e atribui as assemblagens o conjunto de permissões fornecida no <xref:System.Security.Policy.ApplicationTrust>coleção.</xref:System.Security.Policy.ApplicationTrust>"
  example:
  - "The following example shows an implementation of the DetermineApplicationTrust method for a custom trust manager. This code example is part of a larger example provided for the <xref:System.Security.Policy.IApplicationTrustManager> interface.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/csharp/24b6db65-f82b-47e4-ac93-_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/visualbasic/24b6db65-f82b-47e4-ac93-_1.vb)]"
  syntax:
    content: public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "O contexto de ativação para a aplicação."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "O contexto de Gestor de fidedignidade para a aplicação."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Um objeto que contenha segurança tomar decisões sobre a aplicação."
  overload: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust
