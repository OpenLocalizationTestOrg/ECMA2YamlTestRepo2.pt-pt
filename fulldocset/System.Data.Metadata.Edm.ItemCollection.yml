### YamlMime:ManagedReference
items:
- uid: System.Data.Metadata.Edm.ItemCollection
  id: ItemCollection
  children:
  - System.Data.Metadata.Edm.ItemCollection.DataSpace
  - System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetItems``1
  - System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  langs:
  - csharp
  name: ItemCollection
  nameWithType: ItemCollection
  fullName: System.Data.Metadata.Edm.ItemCollection
  type: Class
  summary: "A base class for <xref href=&quot;System.Data.Metadata.Edm.ObjectItemCollection&quot;></xref>, <xref href=&quot;System.Data.Metadata.Edm.EdmItemCollection&quot;></xref>, and <xref href=&quot;System.Data.Mapping.StorageMappingItemCollection&quot;></xref> classes. Uma classe de ItemCollection é uma classe abstracta e fornece as principais API para carregar e que contém os metadados de memória. Esta classe é derivada do &lt;xref:System.Data.Metadata.Edm.ReadOnlyMetadataCollection%601&gt; classe."
  remarks: "Para obter mais informações, consulte [coleções do Item (metadados)](http://msdn.microsoft.com/en-us/3051a40a-ff45-42f8-8f93-7545e427a404)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public abstract class ItemCollection : System.Data.Metadata.Edm.ReadOnlyMetadataCollection<System.Data.Metadata.Edm.GlobalItem>
  inheritance:
  - System.Collections.ObjectModel.ReadOnlyCollection`1
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  implements: []
  inheritedMembers:
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace
  id: DataSpace
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: DataSpace
  nameWithType: ItemCollection.DataSpace
  fullName: System.Data.Metadata.Edm.ItemCollection.DataSpace
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Obtém o modelo de dados associado a esta coleção de itens."
  remarks: "Esta propriedade devolve <xref:System.Data.Metadata.Edm.DataSpace> <xref:System.Data.Metadata.Edm.ObjectItemCollection>; <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.EdmItemCollection>; and <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Mapping.StorageMappingItemCollection>.</xref:System.Data.Mapping.StorageMappingItemCollection></xref:System.Data.Metadata.Edm.DataSpace></xref:System.Data.Metadata.Edm.EdmItemCollection></xref:System.Data.Metadata.Edm.DataSpace></xref:System.Data.Metadata.Edm.ObjectItemCollection></xref:System.Data.Metadata.Edm.DataSpace>"
  syntax:
    content: public System.Data.Metadata.Edm.DataSpace DataSpace { get; }
    return:
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo de dados associado a esta coleção de itens."
  overload: System.Data.Metadata.Edm.ItemCollection.DataSpace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)
  id: GetEntityContainer(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetEntityContainer(String)
  nameWithType: ItemCollection.GetEntityContainer(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto utilizando o nome do contentor de entidade especificada."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Se não houver nenhum contentor de entidades, este método devolve um valor nulo; caso contrário, devolve primeiro."
  overload: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)
  id: GetEntityContainer(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetEntityContainer(String,Boolean)
  nameWithType: ItemCollection.GetEntityContainer(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto utilizando o nome do contentor de entidade especificada."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Se não houver nenhum contentor de entidades, este método devolve um valor nulo; caso contrário, devolve o primeiro contentor de entidade."
  overload: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)
  id: GetFunctions(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetFunctions(String)
  nameWithType: ItemCollection.GetFunctions(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve todas as sobrecargas das funções utilizando o nome especificado desta colecção de itens."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string functionName);
    parameters:
    - id: functionName
      type: System.String
      description: "O nome completo da função."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Uma colecção do tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; que contém todas as funções com o nome especificado."
  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)
  id: GetFunctions(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetFunctions(String,Boolean)
  nameWithType: ItemCollection.GetFunctions(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve todas as sobrecargas das funções utilizando o nome especificado desta colecção de itens."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string functionName, bool ignoreCase);
    parameters:
    - id: functionName
      type: System.String
      description: "O nome completo da função."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Uma colecção do tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; que contém todas as funções com o nome especificado."
  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  id: GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  nameWithType: ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve todas as sobrecargas das funções utilizando o nome especificado desta colecção de itens."
  syntax:
    content: protected static System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (System.Collections.Generic.Dictionary<string,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>> functionCollection, string functionName, bool ignoreCase);
    parameters:
    - id: functionCollection
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}}
      description: "Um dicionário de funções."
    - id: functionName
      type: System.String
      description: "O nome completo da função."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Uma colecção do tipo ReadOnlyCollection que contém todas as funções com o nome especificado."
  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)
  id: GetItem``1(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetItem(String)
  nameWithType: ItemCollection.GetItem(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public T GetItem<T> (string identity) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)
  id: GetItem``1(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetItem(String,Boolean)
  nameWithType: ItemCollection.GetItem(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public T GetItem<T> (string identity, bool ignoreCase) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    - id: ignoreCase
      type: System.Boolean
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetItems``1
  id: GetItems``1
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetItems()
  nameWithType: ItemCollection.GetItems()
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItems()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public virtual System.Collections.ObjectModel.ReadOnlyCollection<T> GetItems<T> () where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.ItemCollection.GetItems<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetType(String,String)
  nameWithType: ItemCollection.GetType(String,String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado e o nome de espaço de nomes nesta coleção de itens."
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: "Um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto que representa o tipo que corresponde ao nome de tipo especificado e o nome de espaço de nomes nesta coleção de itens. Se não houver nenhum tipo correspondente, este método devolve um valor nulo."
  overload: System.Data.Metadata.Edm.ItemCollection.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)
  id: GetType(System.String,System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetType(String,String,Boolean)
  nameWithType: ItemCollection.GetType(String,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado e o nome de espaço de nomes desta colecção de itens."
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: "Um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto que representa o tipo que corresponde ao nome de tipo especificado e o nome de espaço de nomes nesta coleção de itens. Se não houver nenhum tipo correspondente, este método devolve um valor nulo."
  overload: System.Data.Metadata.Edm.ItemCollection.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetEntityContainer(String,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto utilizando o nome do contentor de entidade especificada. Se não houver nenhum contentor de entidades, o parâmetro de saída contém nulo; caso contrário, contém o primeiro contentor de entidade."
  syntax:
    content: public bool TryGetEntityContainer (string name, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto. Se não houver nenhum contentor de entidades, este parâmetro de saída contém nulo; caso contrário, contém o primeiro contentor de entidade."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um contentor de entidade que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetEntityContainer(String,Boolean,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto utilizando o nome do contentor de entidade especificada. Se não houver nenhum contentor de entidades, este parâmetro de saída contém nulo; caso contrário, contém o primeiro contentor de entidade."
  syntax:
    content: public bool TryGetEntityContainer (string name, bool ignoreCase, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto. Se não houver nenhum contentor de entidades, este parâmetro de saída contém nulo; caso contrário, contém o primeiro contentor de entidade."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um contentor de entidade que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)
  id: TryGetItem``1(System.String,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetItem(String,T)
  nameWithType: ItemCollection.TryGetItem(String,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public bool TryGetItem<T> (string identity, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    - id: item
      type: T
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)
  id: TryGetItem``1(System.String,System.Boolean,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetItem(String,Boolean,T)
  nameWithType: ItemCollection.TryGetItem(String,Boolean,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,Boolean,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public bool TryGetItem<T> (string identity, bool ignoreCase, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    - id: ignoreCase
      type: System.Boolean
      description: "A adicionar."
    - id: item
      type: T
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetType(String,String,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado e o nome de espaço de nomes desta colecção de itens."
  syntax:
    content: public bool TryGetType (string name, string namespaceName, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "Quando este método devolve, este parâmetro de saída contém um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto. Se não houver nenhum tipo com o nome especificado e o nome de espaço de nomes nesta coleção de item, este parâmetro de saída contém nulo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetType(String,String,Boolean,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,Boolean,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,Boolean,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado e o nome de espaço de nomes desta colecção de itens."
  syntax:
    content: public bool TryGetType (string name, string namespaceName, bool ignoreCase, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "Quando este método devolve, este parâmetro de saída contém um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto. Se não houver nenhum tipo com o nome especificado e o nome de espaço de nomes nesta coleção de item, este parâmetro de saída contém nulo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<System.Data.Metadata.Edm.GlobalItem>
- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: DataSpace
  nameWithType: ItemCollection.DataSpace
  fullName: System.Data.Metadata.Edm.ItemCollection.DataSpace
- uid: System.Data.Metadata.Edm.DataSpace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: DataSpace
  nameWithType: DataSpace
  fullName: System.Data.Metadata.Edm.DataSpace
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetEntityContainer(String)
  nameWithType: ItemCollection.GetEntityContainer(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String)
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetEntityContainer(String,Boolean)
  nameWithType: ItemCollection.GetEntityContainer(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetFunctions(String)
  nameWithType: ItemCollection.GetFunctions(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetFunctions(String,Boolean)
  nameWithType: ItemCollection.GetFunctions(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String,Boolean)
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  nameWithType: ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,ReadOnlyCollection<EdmFunction>>
  nameWithType: Dictionary<String,ReadOnlyCollection<EdmFunction>>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItem(String)
  nameWithType: ItemCollection.GetItem(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItem(String,Boolean)
  nameWithType: ItemCollection.GetItem(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String,Boolean)
- uid: System.Data.Metadata.Edm.ItemCollection.GetItems``1
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItems()
  nameWithType: ItemCollection.GetItems()
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItems()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetType(String,String)
  nameWithType: ItemCollection.GetType(String,String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String)
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetType(String,String,Boolean)
  nameWithType: ItemCollection.GetType(String,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String,Boolean)
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetEntityContainer(String,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,EntityContainer)
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetEntityContainer(String,Boolean,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetItem(String,T)
  nameWithType: ItemCollection.TryGetItem(String,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,T)
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetItem(String,Boolean,T)
  nameWithType: ItemCollection.TryGetItem(String,Boolean,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,Boolean,T)
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetType(String,String,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,EdmType)
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetType(String,String,Boolean,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,Boolean,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,Boolean,EdmType)
- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: DataSpace
  nameWithType: ItemCollection.DataSpace
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetEntityContainer
  nameWithType: ItemCollection.GetEntityContainer
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetFunctions
  nameWithType: ItemCollection.GetFunctions
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItem<T>
  nameWithType: ItemCollection.GetItem<T>
- uid: System.Data.Metadata.Edm.ItemCollection.GetItems<T>*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItems<T>
  nameWithType: ItemCollection.GetItems<T>
- uid: System.Data.Metadata.Edm.ItemCollection.GetType*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetType
  nameWithType: ItemCollection.GetType
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetEntityContainer
  nameWithType: ItemCollection.TryGetEntityContainer
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetItem<T>
  nameWithType: ItemCollection.TryGetItem<T>
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetType
  nameWithType: ItemCollection.TryGetType
