### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AuthenticationServiceManager
  id: AuthenticationServiceManager
  children:
  - System.Web.UI.AuthenticationServiceManager.#ctor
  - System.Web.UI.AuthenticationServiceManager.Path
  langs:
  - csharp
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager
  fullName: System.Web.UI.AuthenticationServiceManager
  type: Class
  summary: "Configura a localização de uma implementação do serviço de autenticação personalizada."
  remarks: "A classe de AuthenticationServiceManager corresponde de <xref:System.Web.UI.ScriptManager.AuthenticationService%2A>propriedade o <xref:System.Web.UI.ScriptManager>ou <xref:System.Web.UI.ScriptManagerProxy>controlo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.AuthenticationService%2A>       A autenticação do serviço Web é utilizada por aplicações com capacidade de AJAX para iniciar sessão e terminar a sessão a partir de script de cliente. Pode utilizar AuthenticationServiceManager para fornecer o caminho de uma implementação alternativa da autenticação do serviço Web em vez de utilizar o serviço Web incorporado, que é fornecido pelas funcionalidades do ASP.NET AJAX.       Para utilizar o serviço de autenticação na sua aplicação, tem de ativá-la no ficheiro de configuração. Se utilizar a serviço Web de autenticação incorporado, não é necessário declarar explicitamente a autenticação do service manager na página.       Para criar o seu próprio serviço de autenticação, tem de implementar um serviço Web que tem dois métodos: `Login` e `Logout`. Além disso, estes métodos requerem a mesma assinatura da autenticação incorporada do serviço Web.       O exemplo seguinte mostra a estrutura básica de classe que tem de ser implementada numa classe de serviço Web de autenticação personalizado.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] para utilizar uma serviço Web de autenticação personalizado, pode adicionar o serviço de forma declarativa na marcação, incluindo um `<AuthenticationService>` elemento dentro do `<asp:ScriptManager>` elemento na página, conforme mostrado no exemplo seguinte.      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <AuthenticationService Path=&quot;MyAuthenticationService.asmx&quot; />   </asp:ScriptManager>   ```Pode configurar também programaticamente <xref:System.Web.UI.AuthenticationServiceManager.Path%2A>para utilizar uma serviço Web de autenticação personalizado.</xref:System.Web.UI.AuthenticationServiceManager.Path%2A>       Independentemente da indica se a secção declarativa para o serviço de autenticação está na página, se o serviço de autenticação está ativado no ficheiro de configuração, em seguida, as aplicações com capacidade de AJAX irão incluir uma variável de ECMAScript (JavaScript) na página composta. Isto permite que o script de cliente determinar se o utilizador atual é autenticado."
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class AuthenticationServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.AuthenticationServiceManager&quot;> </xref> classe."
  syntax:
    content: public AuthenticationServiceManager ();
    parameters: []
  overload: System.Web.UI.AuthenticationServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.Path
  id: Path
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o caminho do serviço de autenticação."
  remarks: "Se a propriedade de caminho não for definida, em seguida, o valor de retorno é <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> Neste caso, a funcionalidade de AJAX do ASP.NET, em seguida, irá utilizar a autenticação incorporada do serviço Web que corresponde ao caminho predefinido interno seguintes: ~ / ScriptServices_AuthenticationService.asmx. O mesmo comportamento ocorre se definir o caminho para um valor vazio ou `null`.       Caminho pode ser especificado o <xref:System.Web.UI.ScriptManager>controlo ou um associados <xref:System.Web.UI.ScriptManagerProxy>controlo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Quando o caminho está definido no <xref:System.Web.UI.ScriptManagerProxy>aplicam do nível, os seguintes avisos:-se existirem vários proxies na hierarquia de controlo, o caminho tem de ser definido em cada instância de proxy.</xref:System.Web.UI.ScriptManagerProxy>      -Se o caminho está explicitamente definido numa instância de proxy, o valor tem de ser igual para todos os outros proxies em que esta propriedade for definida explicitamente."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "O caminho do serviço Web de autenticação personalizado."
  overload: System.Web.UI.AuthenticationServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Foi definido mais do que um caminho exclusivo na hierarquia de controlo."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
- uid: System.Web.UI.AuthenticationServiceManager.Path
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AuthenticationServiceManager.#ctor*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager
- uid: System.Web.UI.AuthenticationServiceManager.Path*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
