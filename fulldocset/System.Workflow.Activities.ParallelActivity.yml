### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ParallelActivity
  id: ParallelActivity
  children:
  - System.Workflow.Activities.ParallelActivity.#ctor
  - System.Workflow.Activities.ParallelActivity.#ctor(System.String)
  - System.Workflow.Activities.ParallelActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ParallelActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ParallelActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  langs:
  - csharp
  name: ParallelActivity
  nameWithType: ParallelActivity
  fullName: System.Workflow.Activities.ParallelActivity
  type: Class
  summary: "Runs a set of child activities at the same time. This class cannot be inherited."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The order in which child activities are run is non-deterministic.       The ParallelActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the ParallelActivity can contain other activities. The <xref:System.Workflow.Activities.SequenceActivity> activity is the only activity that can be the child of a ParallelActivity.       Only one activity can run at a time.       The ParallelActivity only finishes when all children are complete.       The ParallelActivity is especially useful when there are one or more blocking activities, such as the <xref:System.Workflow.Activities.DelayActivity> activity, in one or more of the branches. In this scenario, the ParallelActivity actually switches to a different branch when the <xref:System.Workflow.Activities.DelayActivity> is blocked. If there are no blocking activities in any one of the ParallelActivity branches then the activity uses a non-deterministic sequence."
  example:
  - "The following code example shows how to create a new instance of the ParallelActivity class, add the ParallelActivity class to the <xref:System.Workflow.Activities.WhileActivity> class, and add two <xref:System.Workflow.Activities.SequenceActivity> classes to the ParallelActivity class.  This code example is part of the WhileAndParallel SDK sample from the WhileAndParallelWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using While and Parallel](http://msdn.microsoft.com/en-us/776a25cc-6aed-4754-b680-996213831b84).  \n  \n [!code-cs[wf_samples#276](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#276)]\n [!code-vb[wf_samples#276](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#276)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ParallelDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.Activities.ParallelToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ParallelActivity), "Resources.Parallel.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ParallelValidator))]

      [System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)]

      public sealed class ParallelActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  implements:
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: ParallelActivity()
  nameWithType: ParallelActivity.ParallelActivity()
  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.ParallelActivity&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.ParallelActivity> class, add the <xref:System.Workflow.Activities.ParallelActivity> class to the <xref:System.Workflow.Activities.WhileActivity> class, and add two <xref:System.Workflow.Activities.SequenceActivity> classes to the <xref:System.Workflow.Activities.ParallelActivity> class.  This code example is part of the WhileAndParallel SDK Sample from the WhileAndParallelWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using While and Parallel](http://msdn.microsoft.com/en-us/776a25cc-6aed-4754-b680-996213831b84).  \n  \n [!code-cs[wf_samples#276](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#276)]\n [!code-vb[wf_samples#276](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#276)]"
  syntax:
    content: public ParallelActivity ();
    parameters: []
  overload: System.Workflow.Activities.ParallelActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: ParallelActivity(String)
  nameWithType: ParallelActivity.ParallelActivity(String)
  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.ParallelActivity&quot;></xref> class using the name of the activity."
  syntax:
    content: public ParallelActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "The user-defined name of the activity."
  overload: System.Workflow.Activities.ParallelActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ParallelActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ParallelActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "To be added."
  overload: System.Workflow.Activities.ParallelActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ParallelActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ParallelActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "To be added."
  overload: System.Workflow.Activities.ParallelActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    - id: addedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext rootExecutionContext, System.Workflow.ComponentModel.Activity removedActivity);
    parameters:
    - id: rootExecutionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    - id: removedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: ParallelActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.ParallelActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "To be added."
  overload: System.Workflow.Activities.ParallelActivity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
  overload: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  isEii: true
  parent: System.Workflow.Activities.ParallelActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  nameWithType: ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  fullName: System.Workflow.Activities.ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "To be added."
    - id: e
      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
      description: "To be added."
  overload: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: System.Workflow.ComponentModel.CompositeActivity
- uid: System.Workflow.Activities.ParallelActivity.#ctor
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: ParallelActivity()
  nameWithType: ParallelActivity.ParallelActivity()
  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity()
- uid: System.Workflow.Activities.ParallelActivity.#ctor(System.String)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: ParallelActivity(String)
  nameWithType: ParallelActivity.ParallelActivity(String)
  fullName: System.Workflow.Activities.ParallelActivity.ParallelActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ParallelActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ParallelActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ParallelActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ParallelActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ParallelActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ParallelActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
- uid: System.Workflow.Activities.ParallelActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: ParallelActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.ParallelActivity.OnClosed(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
- uid: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  nameWithType: ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  fullName: System.Workflow.Activities.ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatusChangedEventArgs
  nameWithType: ActivityExecutionStatusChangedEventArgs
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
- uid: System.Workflow.Activities.ParallelActivity.#ctor*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: ParallelActivity
  nameWithType: ParallelActivity.ParallelActivity
- uid: System.Workflow.Activities.ParallelActivity.Cancel*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: Cancel
  nameWithType: ParallelActivity.Cancel
- uid: System.Workflow.Activities.ParallelActivity.Execute*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: Execute
  nameWithType: ParallelActivity.Execute
- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeAdd*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnActivityChangeAdd
  nameWithType: ParallelActivity.OnActivityChangeAdd
- uid: System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnActivityChangeRemove
  nameWithType: ParallelActivity.OnActivityChangeRemove
- uid: System.Workflow.Activities.ParallelActivity.OnClosed*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnClosed
  nameWithType: ParallelActivity.OnClosed
- uid: System.Workflow.Activities.ParallelActivity.OnWorkflowChangesCompleted*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: OnWorkflowChangesCompleted
  nameWithType: ParallelActivity.OnWorkflowChangesCompleted
- uid: System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*
  parent: System.Workflow.Activities.ParallelActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
  nameWithType: ParallelActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
