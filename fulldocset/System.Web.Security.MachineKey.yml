### YamlMime:ManagedReference
items:
- uid: System.Web.Security.MachineKey
  id: MachineKey
  children:
  - System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  - System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  - System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  - System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  langs:
  - csharp
  name: MachineKey
  nameWithType: MachineKey
  fullName: System.Web.Security.MachineKey
  type: Class
  summary: "Provides a way to encrypt or hash data (or both) by using the same algorithms and key values that are used for ASP.NET forms authentication and view state."
  remarks: "The MachineKey class provides methods that expose the hashing and encryption logic that ASP.NET provides. For information about which encryption and hashing algorithms ASP.NET uses, and the key values that it uses with them, see [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).      > [!WARNING] >  The  MachineKey APIs should only be used in an ASP.NET app. Behavior of the MachineKey APIs outside the context of an ASP.NET application is undefined"
  syntax:
    content: public static class MachineKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  id: Decode(System.String,System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Decode(String,MachineKeyProtection)
  nameWithType: MachineKey.Decode(String,MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Decode(String,MachineKeyProtection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Decodes and/or validates data that has been encrypted or provided with a hash-based message authentication code (HMAC)."
  remarks: "For information about which encryption and hashing algorithms ASP.NET uses to decrypt and validate the data that is passed in, see [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)."
  example:
  - For a code example, see the <xref:System.Web.Security.MachineKey> class overview.
  syntax:
    content: public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);
    parameters:
    - id: encodedData
      type: System.String
      description: "The encrypted data to decrypt and/or validate."
    - id: protectionOption
      type: System.Web.Security.MachineKeyProtection
      description: "Indicates whether the `encodedData` parameter should be encrypted and/or hashed."
    return:
      type: System.Byte[]
      description: "A <xref:System.Byte> array that represents the decrypted data."
  overload: System.Web.Security.MachineKey.Decode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  id: Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Encode(Byte[],MachineKeyProtection)
  nameWithType: MachineKey.Encode(Byte[],MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Encode(Byte[],MachineKeyProtection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Encrypts data and/or appends a hash-based message authentication code (HMAC)."
  remarks: "For information about which encryption and hashing algorithms ASP.NET uses to decrypt and validate the data that is passed in, see [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)."
  example:
  - For a code example, see the <xref:System.Web.Security.MachineKey> class overview.
  syntax:
    content: public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);
    parameters:
    - id: data
      type: System.Byte[]
      description: "The data to encrypt."
    - id: protectionOption
      type: System.Web.Security.MachineKeyProtection
      description: "Indicates whether the `data` parameter should be encrypted and/or hashed."
    return:
      type: System.String
      description: "The encrypted value, the input value with an HMAC appended, or the result of encrypting the input value with an HMAC appended."
  overload: System.Web.Security.MachineKey.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  id: Protect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Protect(Byte[],String[])
  nameWithType: MachineKey.Protect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Protect(Byte[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Protects the specified data by encrypting or signing it."
  remarks: "This method supersedes the <xref:System.Web.Security.MachineKey.Encode%2A> method, which requires the caller to specify whether the plaintext data should be encrypted, signed, or both. The Protect method performs the appropriate operation and securely protects the data. Ciphertext data produced by this method can only be deciphered by the <xref:System.Web.Security.MachineKey.Unprotect%2A> method.       The `purposes` parameter is an optional list of reasons that can lock the ciphertext to a specific purpose. This parameter lets you isolate cryptographic operations performed by different subsystems within an application. A malicious client should not be able to get the result of one subsystem&quot;s Protect method and feed it as input to another subsystem&quot;s <xref:System.Web.Security.MachineKey.Unprotect%2A> method, which could compromise application security. The `purposes` parameter helps ensure that protected data can only be used by the component that originally generated it. Applications should make sure that each subsystem uses a unique `purposes` list.       For example, to protect or unprotect an authentication token, you could call the method using code like the following example:      ```c#   MachineKey.Protect(..., &quot;Authentication token&quot;);   MachineKey.Unprotect(..., &quot;Authentication token&quot;);   ```      ```vb   MachineKey.Protect(..., &quot;Authentication token&quot;)   MachineKey.Unprotect(..., &quot;Authentication token&quot;)   ```       Applications can dynamically generate the `purposes` parameter. In that case, prefix user-supplied values with a fixed value (like &quot;`Username:` &quot; + *username*) to minimize the risk of a malicious client crafting input that matches a token that is used by some other part of the system. Any dynamically-generated strings should come after fixed strings. For example, to protect or unprotect a private message that is tied to a specific user, use code like the following example:      ```c#   MachineKey.Protect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username);   MachineKey.Unprotect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username);   ```      ```vb   MachineKey.Protect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username)   MachineKey.Unprotect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username)   ```       When the <xref:System.Web.Security.MachineKey.Unprotect%2A> method is called, the value that is provided for the `purposes` parameter must be the same value that was provided to the Protect method. Otherwise the operation will fail with a <xref:System.Security.Cryptography.CryptographicException> exception.       The configuration settings that are required for the <xref:System.Web.Configuration.MachineKeyCompatibilityMode?displayProperty=fullName> option are required for this method even if the <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName> property is not set to the <xref:System.Web.Configuration.MachineKeyCompatibilityMode> option."
  syntax:
    content: public static byte[] Protect (byte[] userData, string[] purposes);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "The data to protect. This data is passed as plaintext."
    - id: purposes
      type: System.String[]
      description: "A list of purposes for the data. If this value is specified, the same list must be passed to the <xref:System.Web.Security.MachineKey.Unprotect*> method in order to decipher the returned ciphertext."
    return:
      type: System.Byte[]
      description: "The ciphertext data."
  overload: System.Web.Security.MachineKey.Protect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userData</code> parameter is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The purposes array contains one or more whitespace-only entries."
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  id: Unprotect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Unprotect(Byte[],String[])
  nameWithType: MachineKey.Unprotect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Unprotect(Byte[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Unprotects the specified data, which was protected by the <xref:System.Web.Security.MachineKey.Protect*> method."
  remarks: "For information about this method, see the <xref:System.Web.Security.MachineKey.Protect%2A> method."
  syntax:
    content: public static byte[] Unprotect (byte[] protectedData, string[] purposes);
    parameters:
    - id: protectedData
      type: System.Byte[]
      description: "The ciphertext data to unprotect."
    - id: purposes
      type: System.String[]
      description: "A list of purposes that describe what the data is meant for. This must be the same value that was passed to the <xref:System.Web.Security.MachineKey.Protect*> method when the data was protected."
    return:
      type: System.Byte[]
      description: "The plaintext data."
  overload: System.Web.Security.MachineKey.Unprotect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>protectedData</code> parameter is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The purposes array contains one or more whitespace-only entries."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Possible causes include the following:      -   The protected data was tampered with.      -   The value of the <code>purposes</code> parameter is not the same as the value that was specified when the data was protected.      -   The application is deployed to more than one server and is using auto-generated encryption keys."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Decode(String,MachineKeyProtection)
  nameWithType: MachineKey.Decode(String,MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Decode(String,MachineKeyProtection)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MachineKeyProtection
  parent: System.Web.Security
  isExternal: false
  name: MachineKeyProtection
  nameWithType: MachineKeyProtection
  fullName: System.Web.Security.MachineKeyProtection
- uid: System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Encode(Byte[],MachineKeyProtection)
  nameWithType: MachineKey.Encode(Byte[],MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Encode(Byte[],MachineKeyProtection)
- uid: System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Protect(Byte[],String[])
  nameWithType: MachineKey.Protect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Protect(Byte[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Unprotect(Byte[],String[])
  nameWithType: MachineKey.Unprotect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Unprotect(Byte[],String[])
- uid: System.Web.Security.MachineKey.Decode*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Decode
  nameWithType: MachineKey.Decode
- uid: System.Web.Security.MachineKey.Encode*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Encode
  nameWithType: MachineKey.Encode
- uid: System.Web.Security.MachineKey.Protect*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Protect
  nameWithType: MachineKey.Protect
- uid: System.Web.Security.MachineKey.Unprotect*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Unprotect
  nameWithType: MachineKey.Unprotect
