### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  id: ListViewUpdatedEventArgs
  children:
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  langs:
  - csharp
  name: ListViewUpdatedEventArgs
  nameWithType: ListViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.ListView.ItemUpdated&quot;></xref> event."
  remarks: "The <xref:System.Web.UI.WebControls.ListView> control raises the <xref:System.Web.UI.WebControls.ListView.ItemUpdated> event when the <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> method is called or when an Update button in the control is clicked, but after the <xref:System.Web.UI.WebControls.ListView> control updates the item. (An Update button is a button whose `CommandName` property is set to &quot;Update&quot;.) This enables you to provide an event-handling method that performs a custom routine whenever this event occurs, such as checking the results of an update operation.       A ListViewUpdatedEventArgs object is passed to the event-handling method. This object enables you to determine the number of items updated and to get any exceptions that might have occurred. To determine the number of items that were affected by the update operation, use the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> property. To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> property. You can indicate whether the exception was handled in the event-handling method by setting the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> property. You can access the original field values by using the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> property. You can access updated field values by using the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A> property.       By default, the <xref:System.Web.UI.WebControls.ListView> item returns to read-only mode after an update operation. If you handle an exception that occurred during the update operation, you can keep the <xref:System.Web.UI.WebControls.ListView> item in edit mode by setting the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.       For a list of initial property values for an instance of the ListViewUpdatedEventArgs class, see the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.%23ctor%2A> constructor."
  example:
  - "The following example shows how to use the ListViewUpdatedEventArgs object to determine whether an exception occurred during an update operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_339_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_339_1.aspx)]"
  syntax:
    content: 'public class ListViewUpdatedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: ListViewUpdatedEventArgs(Int32,Exception)
  nameWithType: ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.ListViewUpdatedEventArgs&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.      > [!NOTE] >  This constructor is primarily used by control developers when they raise events.       The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>|The value of the `affectedRows` parameter.|   |<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>|The <xref:System.Exception?displayProperty=fullName> object that is contained in the `e` parameter.|   |<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>|`false`.|   |<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>|`false`.|"
  syntax:
    content: public ListViewUpdatedEventArgs (int affectedRows, Exception exception);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "The number of rows that were affected by the update operation."
    - id: exception
      type: System.Exception
      description: "The exception that was raised when the update operation was performed, if any. If no exception is raised, use <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: ListViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets the number of rows that were affected by the update operation."
  remarks: "Use the AffectedRows property to determine the number of rows that were affected by the update operation, as returned by the data source. Because typically only one item is updated, this property usually contains a value of 0 or 1.       Sometimes during the update operation an error can occur that does not raise an exception. In that case, the AffectedRows property can be used to verify that an item was updated."
  example:
  - "The following example shows how to use the AffectedRows property to verify that an item was updated. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_677_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_677_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "The number of rows that were affected by the update operation."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: ListViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets the exception, if any, that was raised during the update operation."
  remarks: "Use the Exception property to determine the exception (if any) that was raised during the update operation. If no exception was raised, this property returns `null`.      > [!NOTE] >  If an exception was raised and you handle the exception in the event handler, set the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`. Otherwise, the <xref:System.Web.UI.WebControls.ListView> control re-throws the exception."
  example:
  - "The following example shows how to use the Exception property to determine whether an exception occurred during an update operation. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_764_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_764_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "The exception that was raised during the update operation, if any; if no exception was raised, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: ListViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that indicates whether an exception that was raised during the update operation was handled during the event."
  remarks: "If an exception is raised during the update operation, use the ExceptionHandled property to indicate whether you have handled the exception during the event. If this property is set to `true`, the exception is considered handled and is not re-thrown by the <xref:System.Web.UI.WebControls.ListView> control. If this property is set to `false`, the <xref:System.Web.UI.WebControls.ListView> control re-throws the exception. To determine which exception was raised, use the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> property."
  example:
  - "The following example shows how to use the ExceptionHandled property to indicate that the exception was handled in the event handler. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_148_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_148_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the exception was handled in the event handler; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  id: KeepInEditMode
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: KeepInEditMode
  nameWithType: ListViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that indicates whether the <xref href=&quot;System.Web.UI.WebControls.ListView&quot;></xref> control should remain in edit mode after an update operation."
  remarks: "By default, the <xref:System.Web.UI.WebControls.ListView> control returns to read-only mode after an update operation. Set the KeepInEditMode property to `true` to specify that the <xref:System.Web.UI.WebControls.ListView> control should remain in edit mode. This also preserves the values that the user has entered."
  example:
  - "The following example shows how to use the KeepInEditMode property to keep a <xref:System.Web.UI.WebControls.ListView> control in edit mode when an exception occurs. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_74_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_74_1.aspx)]"
  syntax:
    content: public bool KeepInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control should remain in edit mode after an update operation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: ListViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets a dictionary that contains the new values for the updated item."
  remarks: "Use the NewValues property to access the new field values for the updated item. For example, you can use these values to keep a log of updated items.       The NewValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated item.      > [!NOTE] >  As a shortcut, you can use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "The new values for the updated item."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: ListViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets a dictionary that contains the original values for the updated item."
  remarks: "Use the OldValues property to access the original field values for the updated item. For example, you can use these values to keep a log of updated items.       The OldValues property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface. The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated item.      > [!NOTE] >  As a shortcut, you can use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly."
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "The original values for the updated item."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ListViewUpdatedEventArgs(Int32,Exception)
  nameWithType: ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ListViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: ListViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ListViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: ListViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: ListViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: ListViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ListViewUpdatedEventArgs
  nameWithType: ListViewUpdatedEventArgs.ListViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ListViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: ListViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ListViewUpdatedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: ListViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: ListViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: ListViewUpdatedEventArgs.OldValues
