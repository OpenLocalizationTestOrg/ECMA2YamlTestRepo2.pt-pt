### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpAnySourceMulticastClient
  id: UdpAnySourceMulticastClient
  children:
  - System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  - System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  - System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  langs:
  - csharp
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient
  type: Class
  summary: "Um recetor de cliente para o tráfego multicast de qualquer origem, também conhecido como qualquer origem de Multicast (ASM) ou à Internet padrão Multicast (ISM)."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpAnySourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Cria uma nova <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> cliente UDP que pode subscrever para um endereço de grupo e receber os datagramas de uma origem."
  remarks: "O construtor de UdpAnySourceMulticastClient associa um socket multicast UDP com um endereço de grupo e a porta, mas não vincular ou caso contrário, utilize o socket.       O `groupAddress` parâmetro pode ser um IPv6 ou IPv4 multicast endereço.       O `localPort` parâmetro não tem de especificar uma porta inferior a 1.024."
  syntax:
    content: public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: groupAddress
      type: System.Net.IPAddress
      description: "O endereço de multicast de grupo para este recetor subscrever."
    - id: localPort
      type: System.Int32
      description: "A porta local para este recetor à qual vincular."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. referência"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>é inferior a 0 - ou - <code>localPort</code> é maior que 65535."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Vincula o socket e começa a uma operação de associação ao grupo de multicast para permitir datagramas ser recebida a partir de qualquer participante de grupo."
  remarks: "O método BeginJoinGroup está vinculado a um socket multicast UDP para uma porta local e associa um grupo de multicast para permitir que os datagramas ser recebida a partir de qualquer participante grupo multicast. A porta local e o endereço multicast grupo estão especificados no <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>construtor.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>       O método especificado no `callback` parâmetro é invocado quando a conclusão da operação para aderir ao grupo de multicast.       Se for necessário pelo runtime, o método BeginJoinGroup também executa uma verificação de política para verificar que o cliente está autorizado a aceder ao grupo de multicast. Se o cliente não é permitido o acesso, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um método de chamada de retorno para invocar quando a operação for concluída."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Devolve <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que referencia esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast já foi associado ou uma operação de associação está atualmente em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Começa a operação de receção de um pacote do associados a um grupo de multicast e invoca a chamada de retorno especificada quando chegou no grupo de um pacote de qualquer remetente."
  remarks: "O método BeginReceiveFromGroup é iniciada uma operação de receção de um pacote UDP do grupo de multicast associado de qualquer remetente. A porta local e o endereço multicast grupo estão especificados no <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>construtor.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> O cliente de multicast tem também de ter concluído uma associação ao grupo de multicast.       O método especificado no `callback` parâmetro é invocado quando recebeu um pacote.       É possível ter uma falha de socket se uma operação de receção falhar de forma síncrona, apesar de este ser invulgar com UDP. Se ocorrer uma falha de socket, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia para armazenar os dados recebidos."
    - id: offset
      type: System.Int32
      description: "O deslocamento, em bytes, do início do `buffer` onde os dados devem ser armazenados."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes para receber e armazenar no `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "O método de chamada de retorno para invocar quando concluir a operação."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Devolve <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que referencia esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é inferior a 0 - ou - <code>offset</code> é superior ao comprimento do <code>buffer</code>.       - ou - <code>count</code> é inferior a 0 - ou - <code>offset</code> plus a contagem é superior ao comprimento do <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  id: BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Começa a operação de envio de um pacote unicast para o destino especificado."
  remarks: "O método BeginSendTo é iniciada uma operação de envio de um pacote UDP para o grupo de multicast associado.       O cliente tem de ter concluído uma associação ao grupo de multicast. O endereço de destino especificado no `remoteEndPoint` parâmetro tem de ter já enviado um pacote de multicast para este recetor. Alguns protocolos utilizam estas informações para transmitir ao longo do controlo de fluxo, qualidade de estatísticas de serviço ou mensagens de recuperação.       O método especificado no `callback` parâmetro é invocado quando recebeu um pacote.       A transmissão é apenas permitida se o endereço especificado no `remoteEndPoint` parâmetro já foi enviado um pacote de multicast para este recetor. Se o cliente não é permitido o acesso, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       Se a porta de destino especificado no `remoteEndPoint` parâmetro é inferior a 1.024, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       É possível ter uma falha de socket se uma operação de receção falhar de forma síncrona, apesar de este ser invulgar com UDP. Se ocorrer uma falha de socket, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia que contém os dados para enviar."
    - id: offset
      type: System.Int32
      description: "O deslocamento, em bytes, do início do `buffer` para ler os dados a serem enviados."
    - id: count
      type: System.Int32
      description: "O número de bytes para enviar a partir de `buffer`."
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: "Ponto final remoto ao qual o pacote está a ser enviados."
    - id: callback
      type: System.AsyncCallback
      description: "O método de chamada de retorno para invocar quando concluir a operação."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Devolve <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que referencia esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é inferior a 0 - ou - <code>offset</code> é superior ao comprimento do <code>buffer</code>.       - ou - <code>count</code> é inferior a 0 - ou - <code>offset</code> plus a contagem é superior ao comprimento do <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Começa a operação de envio de um pacote a um grupo de multicast associado e invoca a chamada de retorno especificada, quando um pacote foi enviado para o grupo."
  remarks: "O método BeginSendToGroup é iniciada uma operação de envio de um pacote UDP para o grupo de multicast associado.       O cliente tem de ter concluído uma associação ao grupo de multicast.       O método especificado no `callback` parâmetro é invocado quando recebeu um pacote.       É possível ter uma falha de socket se uma operação de receção falhar de forma síncrona, apesar de este ser invulgar com UDP. Se ocorrer uma falha de socket, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia que contém os dados para enviar."
    - id: offset
      type: System.Int32
      description: "O deslocamento, em bytes, do início do `buffer` para ler os dados a serem enviados."
    - id: count
      type: System.Int32
      description: "O número de bytes para enviar a partir de `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "O método de chamada de retorno para invocar quando concluir a operação."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Devolve <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que referencia esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é inferior a 0 - ou - <code>offset</code> é superior ao comprimento do <code>buffer</code>.       - ou - <code>count</code> é inferior a 0 - ou - <code>offset</code> plus a contagem é superior ao comprimento do <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  id: BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Bloqueia a uma origem de modo a que os pacotes multicast provenientes do mesmo já não são recebidas."
  remarks: "O método BlockSource bloqueia pacotes multicast provenientes de um endereço de origem especificada de que está a ser recebido. O cliente tem de ter concluído uma associação ao grupo de multicast.       O `sourceAddress` parâmetro pode ser o endereço de um IPv6 ou IPv4, mas o `sourceAddress` parâmetro tem de corresponder a família de endereços de que o cliente associados a um grupo de multicast.       O método especificado no `callback` parâmetro é invocado quando recebeu um pacote.       Se ocorrer uma falha de socket ao efetuar a operação de origem de blocos, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void BlockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "O endereço de origem para bloquear."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Deixa o grupo de multicast e disponibiliza todos os recursos utilizados pela instância atual do <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> classe e <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> subjacentes"
  remarks: "É possível chamar Dispose quando tiver terminado de utilizando <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> O método de Dispose deixa o <xref:System.Net.Sockets.UdpAnySourceMulticastClient>num Estado não utilizável.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> Depois de chamar Dispose, tem de libertar todas as referências ao <xref:System.Net.Sockets.UdpAnySourceMulticastClient>para que o recoletor de lixo pode reclame a memória que a <xref:System.Net.Sockets.UdpAnySourceMulticastClient>foi occupying.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> </xref:System.Net.Sockets.UdpAnySourceMulticastClient>       Chamar sempre Disposebefore versão sua última referência <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.Net.Sockets.UdpAnySourceMulticastClient>do objeto <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Concluir a operação do grupo de associação assíncrona a um grupo de multicast."
  remarks: "O método EndJoinGroup conclui um enlace assíncrono para uma operação de socket e aderir a um grupo de multicast.       Se for necessário pelo runtime, o método EndJoinGroup também executa uma verificação de política para verificar que o cliente está autorizado a aceder ao grupo de multicast. Se o cliente não é permitido o acesso, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       Se ocorrer uma falha de socket ao efetuar a operação de associação de grupo, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação assíncrona de associação."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  id: EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Concluir a operação assíncrona de receção de um pacote do associados a um grupo de multicast e fornece as informações que recebeu."
  remarks: "O método EndReceiveFromGroup concluir uma operação assíncrona para receber um pacote de um grupo de multicast.       Se ocorrer uma falha de socket ao efetuar a operação de receção, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado a assíncronas a operação de receção."
    - id: source
      type: System.Net.IPEndPoint
      description: "O ponto final de origem em que foi recebeu o pacote."
    return:
      type: System.Int32
      description: "O comprimento, em bytes, da mensagem armazenado no parâmetro de memória intermédia transmitido para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>método.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  id: EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Concluir a operação de envio de um pacote unicast para o destino especificado."
  remarks: "O método EndSendTo concluir uma operação assíncrona para enviar um pacote para o endereço de destino especificado.       Se ocorrer uma falha de socket ao efetuar a operação de receção, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendTo (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação de envio assíncrono."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  id: EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Concluir a operação de envio de um pacote a um grupo de multicast."
  remarks: "O método EndSendToGroup concluir uma operação assíncrona para enviar um pacote para um grupo de multicast.       Se ocorrer uma falha de socket ao efetuar a operação de receção, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação de envio assíncrono."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Obtém ou define um valor que especifica se os pacotes multicast de saída são entregues à aplicação de envio."
  remarks: "Tráfego multicast é um método dimensionável para a comunicação de muitos para muitos na Internet. Um processo subscreve um endereço de multicast de grupo. Em seguida, quaisquer pacotes enviados por um processo subscrito para o grupo de multicast são recebidos por cada outro processo subscrito ao endereço multicast. A propriedade MulticastLoopback controla se qualquer processo no computador local recebe o pacotes multicast enviados pelo cliente para o grupo de multicast."
  syntax:
    content: public bool MulticastLoopback { get; set; }
    return:
      type: System.Boolean
      description: "Devolve <xref:System.Boolean>.</xref:System.Boolean>       Um valor que indica se os pacotes de saída para um grupo de multicast são entregues à aplicação de envio de mensagens em fila."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Obtém ou define o tamanho, em bytes, da memória intermédia de receção do <xref:System.Net.Sockets.Socket>utilizada para operações de receção multicast neste <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> instância.</xref:System.Net.Sockets.Socket>"
  remarks: "A propriedade ReceiveBufferSize obtém ou define o tamanho, em bytes, da memória intermédia de receção de subjacentes <xref:System.Net.Sockets.Socket>utilizada para operações de receção multicast neste <xref:System.Net.Sockets.UdpAnySourceMulticastClient>instância.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> </xref:System.Net.Sockets.Socket> Especificamente, a propriedade ReceiveBufferSize controla o tamanho da memória intermédia utilizada pela pilha de quando é recebido um pacote, mas a aplicação ainda não chamado o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>método.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> Se esta memória intermédia obtém preenchida cópias de segurança e pacotes mantém futuras antes das chamadas de aplicação a <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>e <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A>métodos, os pacotes antigos irão obter removidos.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> A aplicação nunca será capaz de receber os pacotes antigos e, em vez disso, irá receber pacotes mais recentes quando chama o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>método.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>       O tamanho predefinido de memória intermédia de receção no Windows é 8.192 bytes."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Devolve <xref:System.Int32>.</xref:System.Int32>       O tamanho, em bytes, da memória intermédia de receção."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tamanho de memória intermédia especificado é inferior a 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Obtém ou define o tamanho, em bytes, da memória intermédia de envio do <xref:System.Net.Sockets.Socket>utilizada para operações de envio multicast neste <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> instância.</xref:System.Net.Sockets.Socket>"
  remarks: "A propriedade SendBufferSize obtém ou define o tamanho, em bytes, da memória intermédia de envio do Socket subjacente utilizada para operações de envio multicast neste <xref:System.Net.Sockets.UdpAnySourceMulticastClient>instância.</xref:System.Net.Sockets.UdpAnySourceMulticastClient>       chamadas para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A>ou <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A>métodos irão demorar mais tempo para chamar a chamada de retorno dependendo do valor da propriedade SendBufferSize se a memória intermédia de envio estiver cheia.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> A propriedade SendBufferSize controla apenas se da memória intermédia permanece o utilizador bloqueado na memória física até concluir o envio.       O tamanho predefinido da memória intermédia send no Windows é 8.192 bytes."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Devolve <xref:System.Int32>.</xref:System.Int32>       O tamanho, em bytes, da memória intermédia de envio."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tamanho de memória intermédia especificado é inferior a 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  id: UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Unblocks uma origem que anteriormente foi bloqueada por uma chamada para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>método para que os pacotes multicast provenientes do mesmo podem ser recebidos.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>"
  remarks: "O método UnblockSource unblocks pacotes multicast proveniente de um endereço de origem especificada, pelo que podem ser recebidos. O endereço de origem especificado tem anteriormente foram bloqueado por uma chamada para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>método.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>       O cliente tem de ter concluído uma associação ao grupo de multicast.       O `sourceAddress` parâmetro pode ser um IPv6 ou IPv4 multicast endereço.       Se o endereço de origem especificada no `sourceAddress` parâmetro anteriormente não foi bloqueado por uma chamada para o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>método, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>       Se ocorrer uma falha de socket ao efetuar a operação de desbloqueio de origem, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void UnblockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "O endereço de origem para o desbloquear."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource
  nameWithType: UdpAnySourceMulticastClient.BlockSource
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpAnySourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo
  nameWithType: UdpAnySourceMulticastClient.EndSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource
  nameWithType: UdpAnySourceMulticastClient.UnblockSource
