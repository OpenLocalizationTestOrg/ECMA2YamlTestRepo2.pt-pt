### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyObjectType
  id: DependencyObjectType
  children:
  - System.Windows.DependencyObjectType.BaseType
  - System.Windows.DependencyObjectType.FromSystemType(System.Type)
  - System.Windows.DependencyObjectType.GetHashCode
  - System.Windows.DependencyObjectType.Id
  - System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  - System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  - System.Windows.DependencyObjectType.Name
  - System.Windows.DependencyObjectType.SystemType
  langs:
  - csharp
  name: DependencyObjectType
  nameWithType: DependencyObjectType
  fullName: System.Windows.DependencyObjectType
  type: Class
  summary: "Implementa uma cache de tipo subjacente para todos os <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> tipos derivados."
  remarks: "DependencyObjectType representa um sistema subjacente específico ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) <xref:System.Type>de um <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Type> DependencyObjectType é, essencialmente, um wrapper para a ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) <xref:System.Type>para que o se pode expandir a algumas das suas capacidades.</xref:System.Type>       Esta classe não tem nenhum construtor público. As instâncias desta classe só podem ser obtidas através de propriedades noutros objetos (tais como <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName>), ou através do método estático <xref:System.Windows.DependencyObjectType.FromSystemType%2A>.</xref:System.Windows.DependencyObjectType.FromSystemType%2A> </xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName>"
  syntax:
    content: public class DependencyObjectType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.BaseType
  id: BaseType
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
  fullName: System.Windows.DependencyObjectType.BaseType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém o <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> da classe base imediata de atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  syntax:
    content: public System.Windows.DependencyObjectType BaseType { get; }
    return:
      type: System.Windows.DependencyObjectType
      description: "O tipo de classe base."
  overload: System.Windows.DependencyObjectType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.FromSystemType(System.Type)
  id: FromSystemType(System.Type)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: FromSystemType(Type)
  nameWithType: DependencyObjectType.FromSystemType(Type)
  fullName: System.Windows.DependencyObjectType.FromSystemType(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Devolve um <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> que representa um determinado sistema ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) tipo."
  remarks: "Cada <xref:System.Windows.DependencyObject>mantém um <xref:System.Windows.DependencyObject.DependencyObjectType%2A>propriedade que devolva uma <xref:System.Windows.DependencyObjectType>, mas é necessário ter um determinado <xref:System.Windows.DependencyObject>instância.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyObjectType> </xref:System.Windows.DependencyObject.DependencyObjectType%2A> </xref:System.Windows.DependencyObject> Pode utilizar este método de utilitário estático se ainda não tiver uma <xref:System.Windows.DependencyObject>instância e requerem um <xref:System.Windows.DependencyObjectType>.</xref:System.Windows.DependencyObjectType> </xref:System.Windows.DependencyObject>"
  example:
  - "The following example calls FromSystemType , creating a <xref:System.Windows.DependencyObjectType> based on the type of the <xref:System.Windows.Window> class.  \n  \n [!code-cs[PropertiesOvwSupport#DOTFromSystemType](~/add/codesnippet/csharp/PropertiesOvwSupport/page3.xaml.cs#dotfromsystemtype)]\n [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/add/codesnippet/visualbasic/propertiesovwsupport/page3.xaml.vb#dotfromsystemtype)]"
  syntax:
    content: public static System.Windows.DependencyObjectType FromSystemType (Type systemType);
    parameters:
    - id: systemType
      type: System.Type
      description: "O sistema ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) tipo converter."
    return:
      type: System.Windows.DependencyObjectType
      description: "A <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> que representa o sistema ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) tipo."
  overload: System.Windows.DependencyObjectType.FromSystemType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.GetHashCode
  id: GetHashCode
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyObjectType.GetHashCode()
  fullName: System.Windows.DependencyObjectType.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Devolve o código hash para este <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  remarks: "Esta implementação está ligada ao valor da <xref:System.Windows.DependencyObjectType.Id%2A>propriedade.</xref:System.Windows.DependencyObjectType.Id%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash de número inteiro com sinal de 32 bits."
  overload: System.Windows.DependencyObjectType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.Id
  id: Id
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: Id
  nameWithType: DependencyObjectType.Id
  fullName: System.Windows.DependencyObjectType.Id
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém um identificador exclusivo baseado em zero para operações de pesquisa da matriz de tempo de constante."
  remarks: "Não utilize para funções de hash gerais. Não há nenhuma garantia este valor. -Pode variar entre execuções de aplicação."
  syntax:
    content: public int Id { get; }
    return:
      type: System.Int32
      description: "Um identificador interno."
  overload: System.Windows.DependencyObjectType.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  id: IsInstanceOfType(System.Windows.DependencyObject)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: IsInstanceOfType(DependencyObject)
  nameWithType: DependencyObjectType.IsInstanceOfType(DependencyObject)
  fullName: System.Windows.DependencyObjectType.IsInstanceOfType(DependencyObject)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se o objeto especificado é uma instância de atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  remarks: "Objetos do mesmo tipo exato devolvem `true`."
  syntax:
    content: public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "O objeto para a comparação com a atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a classe representada pelo atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> é na hierarquia de herança do <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> transmitido como <code> d </code>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyObjectType.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  id: IsSubclassOf(System.Windows.DependencyObjectType)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: IsSubclassOf(DependencyObjectType)
  nameWithType: DependencyObjectType.IsSubclassOf(DependencyObjectType)
  fullName: System.Windows.DependencyObjectType.IsSubclassOf(DependencyObjectType)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> deriva de especificado <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  syntax:
    content: public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);
    parameters:
    - id: dependencyObjectType
      type: System.Windows.DependencyObjectType
      description: "O <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> dependencyObjectType </code> parâmetro e atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> representam os tipos de classes e a classe representada pelo atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> deriva da classe representada pelo <code> dependencyObjectType </code>. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Este método devolve também <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <code> dependencyObjectType </code> e atual <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> representam da mesma classe."
  overload: System.Windows.DependencyObjectType.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.Name
  id: Name
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: Name
  nameWithType: DependencyObjectType.Name
  fullName: System.Windows.DependencyObjectType.Name
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém o nome do representado [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] tipo de sistema."
  remarks: "O valor do nome é a mesma cadeia como o nome do nome do tipo de <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome do representado [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] tipo de sistema."
  overload: System.Windows.DependencyObjectType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.SystemType
  id: SystemType
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
  fullName: System.Windows.DependencyObjectType.SystemType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém o [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] tipo de sistema representado por este <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  syntax:
    content: public Type SystemType { get; }
    return:
      type: System.Type
      description: "O [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] tipo de sistema representado por este <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  overload: System.Windows.DependencyObjectType.SystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.DependencyObjectType.BaseType
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
  fullName: System.Windows.DependencyObjectType.BaseType
- uid: System.Windows.DependencyObjectType
  parent: System.Windows
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObjectType
  fullName: System.Windows.DependencyObjectType
- uid: System.Windows.DependencyObjectType.FromSystemType(System.Type)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: FromSystemType(Type)
  nameWithType: DependencyObjectType.FromSystemType(Type)
  fullName: System.Windows.DependencyObjectType.FromSystemType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.DependencyObjectType.GetHashCode
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObjectType.GetHashCode()
  fullName: System.Windows.DependencyObjectType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.DependencyObjectType.Id
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Id
  nameWithType: DependencyObjectType.Id
  fullName: System.Windows.DependencyObjectType.Id
- uid: System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsInstanceOfType(DependencyObject)
  nameWithType: DependencyObjectType.IsInstanceOfType(DependencyObject)
  fullName: System.Windows.DependencyObjectType.IsInstanceOfType(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsSubclassOf(DependencyObjectType)
  nameWithType: DependencyObjectType.IsSubclassOf(DependencyObjectType)
  fullName: System.Windows.DependencyObjectType.IsSubclassOf(DependencyObjectType)
- uid: System.Windows.DependencyObjectType.Name
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Name
  nameWithType: DependencyObjectType.Name
  fullName: System.Windows.DependencyObjectType.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.DependencyObjectType.SystemType
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
  fullName: System.Windows.DependencyObjectType.SystemType
- uid: System.Windows.DependencyObjectType.BaseType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
- uid: System.Windows.DependencyObjectType.FromSystemType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: FromSystemType
  nameWithType: DependencyObjectType.FromSystemType
- uid: System.Windows.DependencyObjectType.GetHashCode*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyObjectType.GetHashCode
- uid: System.Windows.DependencyObjectType.Id*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Id
  nameWithType: DependencyObjectType.Id
- uid: System.Windows.DependencyObjectType.IsInstanceOfType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsInstanceOfType
  nameWithType: DependencyObjectType.IsInstanceOfType
- uid: System.Windows.DependencyObjectType.IsSubclassOf*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsSubclassOf
  nameWithType: DependencyObjectType.IsSubclassOf
- uid: System.Windows.DependencyObjectType.Name*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Name
  nameWithType: DependencyObjectType.Name
- uid: System.Windows.DependencyObjectType.SystemType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
