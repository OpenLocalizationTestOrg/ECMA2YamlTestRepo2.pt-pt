### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlAssertion
  id: SamlAssertion
  children:
  - System.IdentityModel.Tokens.SamlAssertion.#ctor
  - System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  - System.IdentityModel.Tokens.SamlAssertion.Advice
  - System.IdentityModel.Tokens.SamlAssertion.AssertionId
  - System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData
  - System.IdentityModel.Tokens.SamlAssertion.Conditions
  - System.IdentityModel.Tokens.SamlAssertion.IsReadOnly
  - System.IdentityModel.Tokens.SamlAssertion.IssueInstant
  - System.IdentityModel.Tokens.SamlAssertion.Issuer
  - System.IdentityModel.Tokens.SamlAssertion.MajorVersion
  - System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly
  - System.IdentityModel.Tokens.SamlAssertion.MinorVersion
  - System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)
  - System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlAssertion.SigningCredentials
  - System.IdentityModel.Tokens.SamlAssertion.SigningToken
  - System.IdentityModel.Tokens.SamlAssertion.Statements
  - System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)
  - System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlAssertion
  nameWithType: SamlAssertion
  fullName: System.IdentityModel.Tokens.SamlAssertion
  type: Class
  summary: "Represents a Security Assertion Markup Language 1.1 (SAML 1.1) assertion."
  remarks: "The SamlAssertion class corresponds to the `<saml:Assertion>` XML element that is defined in the OASIS SAML 1.1 specification.       The claims for <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens are contained within a SamlAssertion. A SamlAssertion has an extensible set of claims known as SAML statements that are represented by the <xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A> property. The SAML authority that issued the SAML assertion is specified in the <xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A> property."
  syntax:
    content: public class SamlAssertion
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: SamlAssertion()
  nameWithType: SamlAssertion.SamlAssertion()
  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> class."
  syntax:
    content: public SamlAssertion ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAssertion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  id: '#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})'
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> class using the specified SAML assertion identifier, issuer of the assertion, the date and time when the assertion was issued, a set of processing conditions, additional information, and a collection of SAML statements."
  remarks: "The `assertionId` parameter must start with a letter or the &quot;_&quot; character."
  syntax:
    content: public SamlAssertion (string assertionId, string issuer, DateTime issueInstant, System.IdentityModel.Tokens.SamlConditions samlConditions, System.IdentityModel.Tokens.SamlAdvice samlAdvice, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> samlStatements);
    parameters:
    - id: assertionId
      type: System.String
      description: "The identifier for the assertion."
    - id: issuer
      type: System.String
      description: "The SAML authority that issued this SAML assertion."
    - id: issueInstant
      type: System.DateTime
      description: "A <xref:System.DateTime> that specifies when the SAML assertion was issued."
    - id: samlConditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;></xref> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion."
    - id: samlAdvice
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion."
    - id: samlStatements
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
      description: "An &lt;xref:System.Collections.Generic.IEnumerable%601&gt; of type <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref> that contain SAML statements."
  overload: System.IdentityModel.Tokens.SamlAssertion.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assertionId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assertionId</code> is <xref:System.String.Empty>       -or-       <code>assertionId</code> does not start with a letter or the &quot;_&quot; character.       -or-       <code>issuer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>issuer</code> is <xref:System.String.Empty>       -or-       <code>samlStatements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>samlStatements</code> does not contain any elements       -or-       <code>samlStatements</code> contains a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> element"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.Advice
  id: Advice
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: Advice
  nameWithType: SamlAssertion.Advice
  fullName: System.IdentityModel.Tokens.SamlAssertion.Advice
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets additional information related to the <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> that is supplied by the SAML authority that can aide in the processing of the SAML assertion."
  remarks: "The Advice property corresponds to the `<saml:Advice>` element defined in the Assertions and Protocol for the OASIS SAML specification."
  syntax:
    content: public System.IdentityModel.Tokens.SamlAdvice Advice { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> that specifies additional information that is supplied by the SAML authority that can aide in the processing of the SAML assertion."
  overload: System.IdentityModel.Tokens.SamlAssertion.Advice*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The Advice property is set and the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.AssertionId
  id: AssertionId
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: AssertionId
  nameWithType: SamlAssertion.AssertionId
  fullName: System.IdentityModel.Tokens.SamlAssertion.AssertionId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the identifier for this assertion."
  remarks: "The AssertionId property corresponds to the `AssertionID` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification."
  syntax:
    content: public string AssertionId { get; set; }
    return:
      type: System.String
      description: "The identifier for this assertion."
  overload: System.IdentityModel.Tokens.SamlAssertion.AssertionId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and an attempt is made to set the AssertionId property."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An attempt is made to set the AssertionId property to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData
  id: CanWriteSourceData
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: CanWriteSourceData
  nameWithType: SamlAssertion.CanWriteSourceData
  fullName: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether this assertion was deserialized from XML source and can re-emit the XML data unchanged."
  remarks: "The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.      > [!IMPORTANT] >  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion &quot;template&quot; is loaded and certain bits of data are filled in, the Id must be changed."
  syntax:
    content: public virtual bool CanWriteSourceData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this assertion can re-emit the XML source data unchanged; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.Conditions
  id: Conditions
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: Conditions
  nameWithType: SamlAssertion.Conditions
  fullName: System.IdentityModel.Tokens.SamlAssertion.Conditions
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets a set of conditions that may be taken into account when assessing the validity of the SAML assertion."
  remarks: "The Conditions property corresponds to the `<saml:Conditions>` element defined in the OASIS SAML 1.1 specification."
  syntax:
    content: public System.IdentityModel.Tokens.SamlConditions Conditions { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;></xref> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion."
  overload: System.IdentityModel.Tokens.SamlAssertion.Conditions*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and an attempt is made to set the Conditions property."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlAssertion.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value indicating whether the properties of this instance are read-only."
  remarks: "To make this instance of the <xref:System.IdentityModel.Tokens.SamlAssertion> class read-only, call the <xref:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly%2A> method."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the properties of this instance are read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.IssueInstant
  id: IssueInstant
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: IssueInstant
  nameWithType: SamlAssertion.IssueInstant
  fullName: System.IdentityModel.Tokens.SamlAssertion.IssueInstant
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the date and time when the SAML assertion was issued."
  remarks: "The IssueInstant property corresponds to the `IssueInstant` attribute of the `<saml:Assertion>` element defined in the OASIS 1.1 SAML specification."
  syntax:
    content: public DateTime IssueInstant { get; set; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime> expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued."
  overload: System.IdentityModel.Tokens.SamlAssertion.IssueInstant*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and an attempt is made to set the IssueInstant property."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.Issuer
  id: Issuer
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: Issuer
  nameWithType: SamlAssertion.Issuer
  fullName: System.IdentityModel.Tokens.SamlAssertion.Issuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the name of the SAML authority that issued this SAML assertion."
  remarks: "The Issuer property corresponds to the `Issuer` attribute of the `<saml:Assertion>` element defined in the OASIS SAML 1.1 specification."
  syntax:
    content: public string Issuer { get; set; }
    return:
      type: System.String
      description: "The SAML authority that issued this SAML assertion."
  overload: System.IdentityModel.Tokens.SamlAssertion.Issuer*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and an attempt is made to set the Issuer property."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An attempt is made to set the Issuer property to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.MajorVersion
  id: MajorVersion
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: MajorVersion
  nameWithType: SamlAssertion.MajorVersion
  fullName: System.IdentityModel.Tokens.SamlAssertion.MajorVersion
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the major version of the SAML specification to which this SAML assertion conforms."
  remarks: "The MajorVersion property corresponds to the `MajorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification."
  syntax:
    content: public int MajorVersion { get; }
    return:
      type: System.Int32
      description: "The major version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue*> property."
  overload: System.IdentityModel.Tokens.SamlAssertion.MajorVersion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlAssertion.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Causes this instance to be read-only."
  remarks: "When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is set to `true`."
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.MinorVersion
  id: MinorVersion
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: MinorVersion
  nameWithType: SamlAssertion.MinorVersion
  fullName: System.IdentityModel.Tokens.SamlAssertion.MinorVersion
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the minor version of the SAML specification to which this SAML assertion conforms."
  remarks: "The MinorVersion property corresponds to the `MinorVersion` attribute of the `<saml:Assertion>` element defined in the Assertions and Protocol for the OASIS SAML specification."
  syntax:
    content: public int MinorVersion { get; }
    return:
      type: System.Int32
      description: "The minor version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <xref:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue*> property."
  overload: System.IdentityModel.Tokens.SamlAssertion.MinorVersion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)
  id: ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)
  nameWithType: SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)
  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the digital signature for a SAML assertion from an XML reader."
  remarks: "When the ReadSignature method is called, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property is set."
  syntax:
    content: protected void ReadSignature (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver, System.IdentityModel.Tokens.SamlSerializer samlSerializer);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A <xref:System.Xml.XmlDictionaryReader> to read the digital signature."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that reads the <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref> clause of the digital signature."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref> that determines the security token that created the digital signature."
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref> that is capable of reading XML elements that are defined in the SAML specification."
  overload: System.IdentityModel.Tokens.SamlAssertion.ReadSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       the digital signature has not been read from the SAML assertion yet."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads a SAML assertion from the specified XML reader."
  syntax:
    content: public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A <xref:System.Xml.XmlDictionaryReader> to read the SAML assertion."
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that reads the <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref> clause of the digital signature."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref> that determines the security token that created the digital signature."
  overload: System.IdentityModel.Tokens.SamlAssertion.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "the ReadXml method had been previously called and that SAML assertion was digitally signed."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>reader</code> does not refer to a SAML assertion that is compliant with the SAML 1.1 specification."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SamlAssertion.SigningCredentials
  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the security credentials that are used to digitally sign the SAML assertion."
  remarks: "The SigningCredentials property represents the credentials that are used to sign a SAML assertion when it is serialized into XML. Similarly, the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningToken%2A> property represents the security token that signed a SAML token in an incoming SOAP message."
  syntax:
    content: public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;></xref> that is used to digitally sign the SAML assertion."
  overload: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*> property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and an attempt is made to set the SigningCredentials property."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.SigningToken
  id: SigningToken
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: SigningToken
  nameWithType: SamlAssertion.SigningToken
  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the security token contained in or referenced by a digitally signed SAML assertion."
  remarks: "When the <xref:System.IdentityModel.Tokens.SamlAssertion.ReadXml%2A> method is called and a SAML assertion is digitally signed, the digital signature is set to the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property. When the SAML assertion is not digitally signed, the value of the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property is `null`."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken SigningToken { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> contained in or referenced by a digitally signed SAML assertion."
  overload: System.IdentityModel.Tokens.SamlAssertion.SigningToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.Statements
  id: Statements
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: Statements
  nameWithType: SamlAssertion.Statements
  fullName: System.IdentityModel.Tokens.SamlAssertion.Statements
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the set of SAML statements associated with the SAML assertion."
  remarks: "Use the <xref:System.IdentityModel.Tokens.SamlAssertion.%23ctor%2A> to set the SAML statements associated with a SAML assertion or add it directly to the collection that is returned by this property when the <xref:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly%2A> property is `false`.       The following table maps the three types of SAML statements defined in the Assertions and Protocol for the OASIS SAML specification to their respective types.      |Statement Type|CLR Type|   |--------------------|--------------|   |Authentication|<xref:System.IdentityModel.Tokens.SamlAuthenticationStatement>|   |Attribute|<xref:System.IdentityModel.Tokens.SamlAttributeStatement>|   |Authorization decision|<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>|   |Statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlStatement>|   |Subject statement defined in an extension schema|<xref:System.IdentityModel.Tokens.SamlSubjectStatement>|"
  syntax:
    content: public System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement> Statements { get; }
    return:
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
      description: "An &lt;xref:System.Collections.Generic.IList%601&gt; of type <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref> that contains the SAML statements associated with the SAML assertion."
  overload: System.IdentityModel.Tokens.SamlAssertion.Statements*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)
  id: WriteSourceData(System.Xml.XmlWriter)
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: WriteSourceData(XmlWriter)
  nameWithType: SamlAssertion.WriteSourceData(XmlWriter)
  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(XmlWriter)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the source data, if available."
  remarks: "The default implementation preserves the source data when read using the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion%2A> method and can re-emit the original data as long as the <xref:System.IdentityModel.Tokens.Saml.SamlAssertion.AssertionId%2A> property has not changed from the time that assertion was read.      > [!IMPORTANT] >  It is very important that SAML assertions with different data have different IDs. If implementing a scheme whereby an assertion &quot;template&quot; is loaded and certain bits of data are filled in, the Id must be changed."
  syntax:
    content: public virtual void WriteSourceData (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The XML writer with which to write the source data."
  overload: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No source data is available"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAssertion
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the SAML assertion into the specified XML writer as a <xref uid=&quot;langword_csharp_&lt;saml:Assertion&gt;&quot; name=&quot;&lt;saml:Assertion&gt;&quot; href=&quot;&quot;></xref> element."
  syntax:
    content: public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A <xref:System.Xml.XmlDictionaryWriter> to write the SAML assertion."
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref> that is capable of writing the objects in the <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> to XML."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that is capable of writing <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref> clauses."
  overload: System.IdentityModel.Tokens.SamlAssertion.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "the <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> is configured such that serializing it into XML would result non-compliance with the SAML v1.1 specification."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: SamlAssertion()
  nameWithType: SamlAssertion.SamlAssertion()
  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion()
- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlAssertion.SamlAssertion(String,String,DateTime,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SamlConditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlConditions
  nameWithType: SamlConditions
  fullName: System.IdentityModel.Tokens.SamlConditions
- uid: System.IdentityModel.Tokens.SamlAdvice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAdvice
  nameWithType: SamlAdvice
  fullName: System.IdentityModel.Tokens.SamlAdvice
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlStatement>
  nameWithType: IEnumerable<SamlStatement>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAssertion.Advice
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Advice
  nameWithType: SamlAssertion.Advice
  fullName: System.IdentityModel.Tokens.SamlAssertion.Advice
- uid: System.IdentityModel.Tokens.SamlAssertion.AssertionId
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: AssertionId
  nameWithType: SamlAssertion.AssertionId
  fullName: System.IdentityModel.Tokens.SamlAssertion.AssertionId
- uid: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: CanWriteSourceData
  nameWithType: SamlAssertion.CanWriteSourceData
  fullName: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlAssertion.Conditions
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Conditions
  nameWithType: SamlAssertion.Conditions
  fullName: System.IdentityModel.Tokens.SamlAssertion.Conditions
- uid: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAssertion.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlAssertion.IssueInstant
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: IssueInstant
  nameWithType: SamlAssertion.IssueInstant
  fullName: System.IdentityModel.Tokens.SamlAssertion.IssueInstant
- uid: System.IdentityModel.Tokens.SamlAssertion.Issuer
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Issuer
  nameWithType: SamlAssertion.Issuer
  fullName: System.IdentityModel.Tokens.SamlAssertion.Issuer
- uid: System.IdentityModel.Tokens.SamlAssertion.MajorVersion
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: MajorVersion
  nameWithType: SamlAssertion.MajorVersion
  fullName: System.IdentityModel.Tokens.SamlAssertion.MajorVersion
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlAssertion.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlAssertion.MinorVersion
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: MinorVersion
  nameWithType: SamlAssertion.MinorVersion
  fullName: System.IdentityModel.Tokens.SamlAssertion.MinorVersion
- uid: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)
  nameWithType: SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)
  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadSignature(XmlDictionaryReader,SecurityTokenSerializer,SecurityTokenResolver,SamlSerializer)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAssertion.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: SigningCredentials
  nameWithType: SamlAssertion.SigningCredentials
  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Tokens.SamlAssertion.SigningToken
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: SigningToken
  nameWithType: SamlAssertion.SigningToken
  fullName: System.IdentityModel.Tokens.SamlAssertion.SigningToken
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SamlAssertion.Statements
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Statements
  nameWithType: SamlAssertion.Statements
  fullName: System.IdentityModel.Tokens.SamlAssertion.Statements
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SamlStatement>
  nameWithType: IList<SamlStatement>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: WriteSourceData(XmlWriter)
  nameWithType: SamlAssertion.WriteSourceData(XmlWriter)
  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAssertion.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlAssertion.#ctor*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: SamlAssertion
  nameWithType: SamlAssertion.SamlAssertion
- uid: System.IdentityModel.Tokens.SamlAssertion.Advice*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Advice
  nameWithType: SamlAssertion.Advice
- uid: System.IdentityModel.Tokens.SamlAssertion.AssertionId*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: AssertionId
  nameWithType: SamlAssertion.AssertionId
- uid: System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: CanWriteSourceData
  nameWithType: SamlAssertion.CanWriteSourceData
- uid: System.IdentityModel.Tokens.SamlAssertion.Conditions*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Conditions
  nameWithType: SamlAssertion.Conditions
- uid: System.IdentityModel.Tokens.SamlAssertion.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAssertion.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlAssertion.IssueInstant*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: IssueInstant
  nameWithType: SamlAssertion.IssueInstant
- uid: System.IdentityModel.Tokens.SamlAssertion.Issuer*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Issuer
  nameWithType: SamlAssertion.Issuer
- uid: System.IdentityModel.Tokens.SamlAssertion.MajorVersion*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: MajorVersion
  nameWithType: SamlAssertion.MajorVersion
- uid: System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlAssertion.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlAssertion.MinorVersion*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: MinorVersion
  nameWithType: SamlAssertion.MinorVersion
- uid: System.IdentityModel.Tokens.SamlAssertion.ReadSignature*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: ReadSignature
  nameWithType: SamlAssertion.ReadSignature
- uid: System.IdentityModel.Tokens.SamlAssertion.ReadXml*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: ReadXml
  nameWithType: SamlAssertion.ReadXml
- uid: System.IdentityModel.Tokens.SamlAssertion.SigningCredentials*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: SigningCredentials
  nameWithType: SamlAssertion.SigningCredentials
- uid: System.IdentityModel.Tokens.SamlAssertion.SigningToken*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: SigningToken
  nameWithType: SamlAssertion.SigningToken
- uid: System.IdentityModel.Tokens.SamlAssertion.Statements*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: Statements
  nameWithType: SamlAssertion.Statements
- uid: System.IdentityModel.Tokens.SamlAssertion.WriteSourceData*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: WriteSourceData
  nameWithType: SamlAssertion.WriteSourceData
- uid: System.IdentityModel.Tokens.SamlAssertion.WriteXml*
  parent: System.IdentityModel.Tokens.SamlAssertion
  isExternal: false
  name: WriteXml
  nameWithType: SamlAssertion.WriteXml
