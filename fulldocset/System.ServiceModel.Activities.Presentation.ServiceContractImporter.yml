### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  id: ServiceContractImporter
  children:
  - System.ServiceModel.Activities.Presentation.ServiceContractImporter.ContractTypeViewStateKey
  - System.ServiceModel.Activities.Presentation.ServiceContractImporter.GenerateActivityTemplates(System.Type)
  - System.ServiceModel.Activities.Presentation.ServiceContractImporter.SaveActivityTemplate(System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder)
  - System.ServiceModel.Activities.Presentation.ServiceContractImporter.SelectContractType(System.Reflection.AssemblyName,System.Collections.Generic.IList{System.Reflection.AssemblyName},System.Activities.Presentation.EditingContext)
  langs:
  - csharp
  name: ServiceContractImporter
  nameWithType: ServiceContractImporter
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  type: Class
  summary: "Representa um importador de contrato de serviço."
  syntax:
    content: public static class ServiceContractImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.ContractTypeViewStateKey
  id: ContractTypeViewStateKey
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  langs:
  - csharp
  name: ContractTypeViewStateKey
  nameWithType: ServiceContractImporter.ContractTypeViewStateKey
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.ContractTypeViewStateKey
  type: Field
  assemblies:
  - System.Activities.Core.Presentation
  namespace: System.ServiceModel.Activities.Presentation
  summary: "Especifica a chave de estado de vista do tipo de contrato."
  syntax:
    content: public const string ContractTypeViewStateKey;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.GenerateActivityTemplates(System.Type)
  id: GenerateActivityTemplates(System.Type)
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  langs:
  - csharp
  name: GenerateActivityTemplates(Type)
  nameWithType: ServiceContractImporter.GenerateActivityTemplates(Type)
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.GenerateActivityTemplates(Type)
  type: Method
  assemblies:
  - System.Activities.Core.Presentation
  namespace: System.ServiceModel.Activities.Presentation
  summary: "Gera um modelos de actividade de serviço com um tipo de contrato especificado."
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder> GenerateActivityTemplates (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "O tipo de contrato de serviço."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder}
      description: "Uma coleção de modelos de actividade do serviço."
  overload: System.ServiceModel.Activities.Presentation.ServiceContractImporter.GenerateActivityTemplates*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SaveActivityTemplate(System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder)
  id: SaveActivityTemplate(System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder)
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  langs:
  - csharp
  name: SaveActivityTemplate(ActivityTemplateFactoryBuilder)
  nameWithType: ServiceContractImporter.SaveActivityTemplate(ActivityTemplateFactoryBuilder)
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SaveActivityTemplate(ActivityTemplateFactoryBuilder)
  type: Method
  assemblies:
  - System.Activities.Core.Presentation
  namespace: System.ServiceModel.Activities.Presentation
  summary: "Guarda um modelo de atividade do contrato de serviço."
  syntax:
    content: public static string SaveActivityTemplate (System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder activityTemplate);
    parameters:
    - id: activityTemplate
      type: System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder
      description: "O modelo de atividade para guardar."
    return:
      type: System.String
      description: "O modelo de atividade."
  overload: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SaveActivityTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SelectContractType(System.Reflection.AssemblyName,System.Collections.Generic.IList{System.Reflection.AssemblyName},System.Activities.Presentation.EditingContext)
  id: SelectContractType(System.Reflection.AssemblyName,System.Collections.Generic.IList{System.Reflection.AssemblyName},System.Activities.Presentation.EditingContext)
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  langs:
  - csharp
  name: SelectContractType(AssemblyName,IList<AssemblyName>,EditingContext)
  nameWithType: ServiceContractImporter.SelectContractType(AssemblyName,IList<AssemblyName>,EditingContext)
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SelectContractType(AssemblyName,IList<AssemblyName>,EditingContext)
  type: Method
  assemblies:
  - System.Activities.Core.Presentation
  namespace: System.ServiceModel.Activities.Presentation
  summary: "Obtém um tipo de contrato com um nome de assemblagem local especificado na lista de assemblagens referenciadas."
  syntax:
    content: public static Type SelectContractType (System.Reflection.AssemblyName localAssemblyName, System.Collections.Generic.IList<System.Reflection.AssemblyName> referencedAssemblies, System.Activities.Presentation.EditingContext editingContext);
    parameters:
    - id: localAssemblyName
      type: System.Reflection.AssemblyName
      description: "O nome de assemblagem local."
    - id: referencedAssemblies
      type: System.Collections.Generic.IList{System.Reflection.AssemblyName}
      description: "As assemblagens referenciadas."
    - id: editingContext
      type: System.Activities.Presentation.EditingContext
      description: "O contexto de edição."
    return:
      type: System.Type
      description: "O tipo de contrato de serviço."
  overload: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SelectContractType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.ContractTypeViewStateKey
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  isExternal: false
  name: ContractTypeViewStateKey
  nameWithType: ServiceContractImporter.ContractTypeViewStateKey
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.ContractTypeViewStateKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.GenerateActivityTemplates(System.Type)
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  isExternal: false
  name: GenerateActivityTemplates(Type)
  nameWithType: ServiceContractImporter.GenerateActivityTemplates(Type)
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.GenerateActivityTemplates(Type)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ActivityTemplateFactoryBuilder>
  nameWithType: IEnumerable<ActivityTemplateFactoryBuilder>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder
    name: ActivityTemplateFactoryBuilder
    nameWithType: ActivityTemplateFactoryBuilder
    fullName: ActivityTemplateFactoryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SaveActivityTemplate(System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder)
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  isExternal: false
  name: SaveActivityTemplate(ActivityTemplateFactoryBuilder)
  nameWithType: ServiceContractImporter.SaveActivityTemplate(ActivityTemplateFactoryBuilder)
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SaveActivityTemplate(ActivityTemplateFactoryBuilder)
- uid: System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder
  parent: System.Activities.Presentation.Toolbox
  isExternal: false
  name: ActivityTemplateFactoryBuilder
  nameWithType: ActivityTemplateFactoryBuilder
  fullName: System.Activities.Presentation.Toolbox.ActivityTemplateFactoryBuilder
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SelectContractType(System.Reflection.AssemblyName,System.Collections.Generic.IList{System.Reflection.AssemblyName},System.Activities.Presentation.EditingContext)
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  isExternal: false
  name: SelectContractType(AssemblyName,IList<AssemblyName>,EditingContext)
  nameWithType: ServiceContractImporter.SelectContractType(AssemblyName,IList<AssemblyName>,EditingContext)
  fullName: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SelectContractType(AssemblyName,IList<AssemblyName>,EditingContext)
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Collections.Generic.IList{System.Reflection.AssemblyName}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<AssemblyName>
  nameWithType: IList<AssemblyName>
  fullName: System.Collections.Generic.IList<System.Reflection.AssemblyName>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Reflection.AssemblyName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: AssemblyName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.EditingContext
  parent: System.Activities.Presentation
  isExternal: false
  name: EditingContext
  nameWithType: EditingContext
  fullName: System.Activities.Presentation.EditingContext
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.GenerateActivityTemplates*
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  isExternal: false
  name: GenerateActivityTemplates
  nameWithType: ServiceContractImporter.GenerateActivityTemplates
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SaveActivityTemplate*
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  isExternal: false
  name: SaveActivityTemplate
  nameWithType: ServiceContractImporter.SaveActivityTemplate
- uid: System.ServiceModel.Activities.Presentation.ServiceContractImporter.SelectContractType*
  parent: System.ServiceModel.Activities.Presentation.ServiceContractImporter
  isExternal: false
  name: SelectContractType
  nameWithType: ServiceContractImporter.SelectContractType
