### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector4
  id: Vector4
  children:
  - System.Numerics.Vector4.#ctor(System.Single)
  - System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  - System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  - System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.CopyTo(System.Single[])
  - System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  - System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  - System.Numerics.Vector4.Equals(System.Object)
  - System.Numerics.Vector4.GetHashCode
  - System.Numerics.Vector4.Length
  - System.Numerics.Vector4.LengthSquared
  - System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  - System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  - System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  - System.Numerics.Vector4.One
  - System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  - System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  - System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.ToString
  - System.Numerics.Vector4.ToString(System.String)
  - System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  - System.Numerics.Vector4.UnitW
  - System.Numerics.Vector4.UnitX
  - System.Numerics.Vector4.UnitY
  - System.Numerics.Vector4.UnitZ
  - System.Numerics.Vector4.W
  - System.Numerics.Vector4.X
  - System.Numerics.Vector4.Y
  - System.Numerics.Vector4.Z
  - System.Numerics.Vector4.Zero
  langs:
  - csharp
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
  type: Struct
  summary: "Represents a vector with four single-precision floating-point values."
  remarks: "The Vector4 structure provides support for hardware acceleration."
  syntax:
    content: 'public struct Vector4 : IEquatable<System.Numerics.Vector4>, IFormattable'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Vector4>
  - System.IFormattable
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Single)
  nameWithType: Vector4.Vector4(Single)
  fullName: System.Numerics.Vector4.Vector4(Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Creates a new <xref href=&quot;System.Numerics.Vector4&quot;></xref> object whose four elements have the same value."
  syntax:
    content: public Vector4 (float value);
    parameters:
    - id: value
      type: System.Single
      description: "The value to assign to all four elements."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Vector3,Single)
  nameWithType: Vector4.Vector4(Vector3,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector3,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Constructs a new <xref href=&quot;System.Numerics.Vector4&quot;></xref> object from the specified <xref href=&quot;System.Numerics.Vector3&quot;></xref> object and a W component."
  syntax:
    content: public Vector4 (System.Numerics.Vector3 value, float w);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "The vector to use for the X, Y, and Z components."
    - id: w
      type: System.Single
      description: "The W component."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  id: '#ctor(System.Numerics.Vector2,System.Single,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Vector2,Single,Single)
  nameWithType: Vector4.Vector4(Vector2,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector2,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Creates a   new <xref href=&quot;System.Numerics.Vector4&quot;></xref> object from the specified <xref href=&quot;System.Numerics.Vector2&quot;></xref> object and a Z and a W component."
  syntax:
    content: public Vector4 (System.Numerics.Vector2 value, float z, float w);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "The vector to use for the X and Y components."
    - id: z
      type: System.Single
      description: "The Z component."
    - id: w
      type: System.Single
      description: "The W component."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Vector4(Single,Single,Single,Single)
  nameWithType: Vector4.Vector4(Single,Single,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Creates a vector whose elements have the specified values."
  syntax:
    content: public Vector4 (float x, float y, float z, float w);
    parameters:
    - id: x
      type: System.Single
      description: "The value to assign to the <xref href=&quot;System.Numerics.Vector4.X&quot;></xref> field."
    - id: y
      type: System.Single
      description: "The value to assign to the <xref href=&quot;System.Numerics.Vector4.Y&quot;></xref> field."
    - id: z
      type: System.Single
      description: "The value to assign to the <xref href=&quot;System.Numerics.Vector4.Z&quot;></xref> field."
    - id: w
      type: System.Single
      description: "The value to assign to the <xref href=&quot;System.Numerics.Vector4.W&quot;></xref> field."
  overload: System.Numerics.Vector4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  id: Abs(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Abs(Vector4)
  nameWithType: Vector4.Abs(Vector4)
  fullName: System.Numerics.Vector4.Abs(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a vector whose elements are the absolute values of each of the specified vector&quot;s elements."
  syntax:
    content: public static System.Numerics.Vector4 Abs (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "A vector."
    return:
      type: System.Numerics.Vector4
      description: "The absolute value vector."
  overload: System.Numerics.Vector4.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Add(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Add(Vector4,Vector4)
  nameWithType: Vector4.Add(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Add(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Adds two vectors together."
  syntax:
    content: public static System.Numerics.Vector4 Add (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector to add."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector to add."
    return:
      type: System.Numerics.Vector4
      description: "The summed vector."
  overload: System.Numerics.Vector4.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  id: Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Clamp(Vector4,Vector4,Vector4)
  nameWithType: Vector4.Clamp(Vector4,Vector4,Vector4)
  fullName: System.Numerics.Vector4.Clamp(Vector4,Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Restricts a vector between a minimum and a maximum value."
  syntax:
    content: public static System.Numerics.Vector4 Clamp (System.Numerics.Vector4 value1, System.Numerics.Vector4 min, System.Numerics.Vector4 max);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "The vector to restrict."
    - id: min
      type: System.Numerics.Vector4
      description: "The minimum value."
    - id: max
      type: System.Numerics.Vector4
      description: "The maximum value."
    return:
      type: System.Numerics.Vector4
      description: "The restricted vector."
  overload: System.Numerics.Vector4.Clamp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.CopyTo(System.Single[])
  id: CopyTo(System.Single[])
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: CopyTo(Single[])
  nameWithType: Vector4.CopyTo(Single[])
  fullName: System.Numerics.Vector4.CopyTo(Single[])
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Copies the elements of the vector to a specified array."
  remarks: '`array` must have at least four elements. The method copies the vector''s elements starting at index 0.'
  syntax:
    content: public void CopyTo (float[] array);
    parameters:
    - id: array
      type: System.Single[]
      description: "The destination array."
  overload: System.Numerics.Vector4.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The number of elements in the current instance is greater than in the array."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code> is multidimensional."
  platform:
  - net462
- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  id: CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: CopyTo(Single[],Int32)
  nameWithType: Vector4.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector4.CopyTo(Single[],Int32)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Copies the elements of the vector to a specified array starting at a specified index position."
  remarks: '`array` must have a sufficient number of elements to accommodate the four vector elements. In other words, elements `index` through `index` + 3 must already exist in `array`.'
  syntax:
    content: public void CopyTo (float[] array, int index);
    parameters:
    - id: array
      type: System.Single[]
      description: "The destination array."
    - id: index
      type: System.Int32
      description: "The index at which to copy the first element of the vector."
  overload: System.Numerics.Vector4.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The number of elements in the current instance is greater than in the array."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.       -or-       <code>index</code> is greater than or equal to the array length."
  - type: System.RankException
    commentId: T:System.RankException
    description: "<code>array</code> is multidimensional."
  platform:
  - net462
- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Distance(Vector4,Vector4)
  nameWithType: Vector4.Distance(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Distance(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Computes the Euclidean distance between the two given points."
  syntax:
    content: public static float Distance (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "The first point."
    - id: value2
      type: System.Numerics.Vector4
      description: "The second point."
    return:
      type: System.Single
      description: "The distance."
  overload: System.Numerics.Vector4.Distance*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  id: DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: DistanceSquared(Vector4,Vector4)
  nameWithType: Vector4.DistanceSquared(Vector4,Vector4)
  fullName: System.Numerics.Vector4.DistanceSquared(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the Euclidean distance squared between two specified points."
  syntax:
    content: public static float DistanceSquared (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "The first point."
    - id: value2
      type: System.Numerics.Vector4
      description: "The second point."
    return:
      type: System.Single
      description: "The distance squared."
  overload: System.Numerics.Vector4.DistanceSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Divide(Vector4,Vector4)
  nameWithType: Vector4.Divide(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Divide(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divides the first vector by the second."
  syntax:
    content: public static System.Numerics.Vector4 Divide (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The vector resulting from the division."
  overload: System.Numerics.Vector4.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  id: Divide(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Divide(Vector4,Single)
  nameWithType: Vector4.Divide(Vector4,Single)
  fullName: System.Numerics.Vector4.Divide(Vector4,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divides the specified vector by a specified scalar value."
  syntax:
    content: public static System.Numerics.Vector4 Divide (System.Numerics.Vector4 left, float divisor);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The vector."
    - id: divisor
      type: System.Single
      description: "The scalar value."
    return:
      type: System.Numerics.Vector4
      description: "The vector that results from the division."
  overload: System.Numerics.Vector4.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Dot(Vector4,Vector4)
  nameWithType: Vector4.Dot(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Dot(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the dot product of two vectors."
  syntax:
    content: public static float Dot (System.Numerics.Vector4 vector1, System.Numerics.Vector4 vector2);
    parameters:
    - id: vector1
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: vector2
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Single
      description: "The dot product."
  overload: System.Numerics.Vector4.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  id: Equals(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Equals(Vector4)
  nameWithType: Vector4.Equals(Vector4)
  fullName: System.Numerics.Vector4.Equals(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a value that indicates whether this instance and another vector are equal."
  remarks: "Two vectors are equal if their <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, <xref:System.Numerics.Vector4>, and <xref:System.Numerics.Vector4> elements are equal."
  syntax:
    content: public bool Equals (System.Numerics.Vector4 other);
    parameters:
    - id: other
      type: System.Numerics.Vector4
      description: "The other vector."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two vectors are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector4.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Vector4.Equals(Object)
  fullName: System.Numerics.Vector4.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a value that indicates whether this instance and a specified object are equal."
  remarks: "The current instance and `obj` are equal if `obj` is a <xref:System.Numerics.Vector4> object and their corresponding elements are equal."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare with the current instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current instance and <code>obj</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;></xref>. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector4.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Vector4.GetHashCode()
  fullName: System.Numerics.Vector4.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the hash code for this instance."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "The hash code."
  overload: System.Numerics.Vector4.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Length
  id: Length
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Length()
  nameWithType: Vector4.Length()
  fullName: System.Numerics.Vector4.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the length of this vector object."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "The vector&quot;s length."
  overload: System.Numerics.Vector4.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Vector4.LengthSquared()
  fullName: System.Numerics.Vector4.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the length of the vector squared."
  remarks: "This operation offers better performance than a call to the <xref:System.Numerics.Vector4.Length%2A> method."
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "The vector&quot;s length squared."
  overload: System.Numerics.Vector4.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  id: Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Lerp(Vector4,Vector4,Single)
  nameWithType: Vector4.Lerp(Vector4,Vector4,Single)
  fullName: System.Numerics.Vector4.Lerp(Vector4,Vector4,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Performs a linear interpolation between two vectors based on the given weighting."
  syntax:
    content: public static System.Numerics.Vector4 Lerp (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2, float amount);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: value2
      type: System.Numerics.Vector4
      description: "The second vector."
    - id: amount
      type: System.Single
      description: "A value between 0 and 1 that indicates the weight of `value2`."
    return:
      type: System.Numerics.Vector4
      description: "The interpolated vector."
  overload: System.Numerics.Vector4.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Max(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Max(Vector4,Vector4)
  nameWithType: Vector4.Max(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Max(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors."
  syntax:
    content: public static System.Numerics.Vector4 Max (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: value2
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The maximized vector."
  overload: System.Numerics.Vector4.Max*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Min(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Min(Vector4,Vector4)
  nameWithType: Vector4.Min(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Min(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors."
  syntax:
    content: public static System.Numerics.Vector4 Min (System.Numerics.Vector4 value1, System.Numerics.Vector4 value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: value2
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The minimized vector."
  overload: System.Numerics.Vector4.Min*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Multiply(Vector4,Vector4)
  nameWithType: Vector4.Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplies two vectors together."
  syntax:
    content: public static System.Numerics.Vector4 Multiply (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The product vector."
  overload: System.Numerics.Vector4.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  id: Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Multiply(Vector4,Single)
  nameWithType: Vector4.Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplies a vector by a specified scalar."
  syntax:
    content: public static System.Numerics.Vector4 Multiply (System.Numerics.Vector4 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The vector to multiply."
    - id: right
      type: System.Single
      description: "The scalar value."
    return:
      type: System.Numerics.Vector4
      description: "The scaled vector."
  overload: System.Numerics.Vector4.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  id: Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Multiply(Single,Vector4)
  nameWithType: Vector4.Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Single,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplies a scalar value by a specified vector."
  syntax:
    content: public static System.Numerics.Vector4 Multiply (float left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Single
      description: "The scaled value."
    - id: right
      type: System.Numerics.Vector4
      description: "The vector."
    return:
      type: System.Numerics.Vector4
      description: "The scaled vector."
  overload: System.Numerics.Vector4.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  id: Negate(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Negate(Vector4)
  nameWithType: Vector4.Negate(Vector4)
  fullName: System.Numerics.Vector4.Negate(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Negates a specified vector."
  syntax:
    content: public static System.Numerics.Vector4 Negate (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "The vector to negate."
    return:
      type: System.Numerics.Vector4
      description: "The negated vector."
  overload: System.Numerics.Vector4.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  id: Normalize(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Normalize(Vector4)
  nameWithType: Vector4.Normalize(Vector4)
  fullName: System.Numerics.Vector4.Normalize(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a vector with the same direction as the specified vector, but with a length of one."
  syntax:
    content: public static System.Numerics.Vector4 Normalize (System.Numerics.Vector4 vector);
    parameters:
    - id: vector
      type: System.Numerics.Vector4
      description: "The vector to normalize."
    return:
      type: System.Numerics.Vector4
      description: "The normalized vector."
  overload: System.Numerics.Vector4.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.One
  id: One
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: One
  nameWithType: Vector4.One
  fullName: System.Numerics.Vector4.One
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Gets a vector whose 4 elements are equal to one."
  remarks: "A vector whose four elements are equal to one (that is, it returns the vector `(1,1,1,1)`."
  syntax:
    content: public static System.Numerics.Vector4 One { get; }
    return:
      type: System.Numerics.Vector4
      description: "Returns <xref href=&quot;System.Numerics.Vector4&quot;></xref>."
  overload: System.Numerics.Vector4.One*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Addition(Vector4,Vector4)
  nameWithType: Vector4.op_Addition(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Addition(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Adds two vectors together."
  remarks: "The Addition method defines the addition operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_Addition (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector to add."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector to add."
    return:
      type: System.Numerics.Vector4
      description: "The summed vector."
  overload: System.Numerics.Vector4.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Division(Vector4,Vector4)
  nameWithType: Vector4.op_Division(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divides the first vector by the second."
  remarks: "The Division method defines the division operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_Division (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The vector that results from dividing <code>left</code> by <code>right</code>."
  overload: System.Numerics.Vector4.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  id: op_Division(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Division(Vector4,Single)
  nameWithType: Vector4.op_Division(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Divides the specified vector by a specified scalar value."
  remarks: "The Division method defines the division operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_Division (System.Numerics.Vector4 value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "The vector."
    - id: value2
      type: System.Single
      description: "The scalar value."
    return:
      type: System.Numerics.Vector4
      description: "The result of the division."
  overload: System.Numerics.Vector4.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Equality(Vector4,Vector4)
  nameWithType: Vector4.op_Equality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Equality(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a value that indicates whether each pair of elements in two specified vectors is equal."
  remarks: "Two <xref:System.Numerics.Vector4> objects are equal if each element in `left` is equal to the corresponding element in `right`."
  syntax:
    content: public static bool op_Equality (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector to compare."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector4.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Inequality(Vector4,Vector4)
  nameWithType: Vector4.op_Inequality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Inequality(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a value that indicates whether two specified vectors are not equal."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector to compare."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Vector4.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Multiply(Vector4,Vector4)
  nameWithType: Vector4.op_Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiplies two vectors together."
  remarks: "The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_Multiply (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The product vector."
  overload: System.Numerics.Vector4.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  id: op_Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Multiply(Vector4,Single)
  nameWithType: Vector4.op_Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiples the specified vector by the specified scalar value."
  remarks: "The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_Multiply (System.Numerics.Vector4 left, float right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The vector."
    - id: right
      type: System.Single
      description: "The scalar value."
    return:
      type: System.Numerics.Vector4
      description: "The scaled vector."
  overload: System.Numerics.Vector4.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  id: op_Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Multiply(Single,Vector4)
  nameWithType: Vector4.op_Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Single,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Multiples the scalar value by the specified vector."
  remarks: "The Multiply method defines the multiplication operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_Multiply (float left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Single
      description: "The vector."
    - id: right
      type: System.Numerics.Vector4
      description: "The scalar value."
    return:
      type: System.Numerics.Vector4
      description: "The scaled vector."
  overload: System.Numerics.Vector4.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_Subtraction(Vector4,Vector4)
  nameWithType: Vector4.op_Subtraction(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Subtraction(Vector4,Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Subtracts the second vector from the first."
  remarks: "The Subtraction method defines the subtraction operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_Subtraction (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The vector that results from subtracting <code>right</code> from <code>left</code>."
  overload: System.Numerics.Vector4.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  id: op_UnaryNegation(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: op_UnaryNegation(Vector4)
  nameWithType: Vector4.op_UnaryNegation(Vector4)
  fullName: System.Numerics.Vector4.op_UnaryNegation(Vector4)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Negates the specified vector."
  remarks: "The UnaryNegation method defines the unary negation operation for <xref:System.Numerics.Vector4> objects."
  syntax:
    content: public static System.Numerics.Vector4 op_UnaryNegation (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "The vector to negate."
    return:
      type: System.Numerics.Vector4
      description: "The negated vector."
  overload: System.Numerics.Vector4.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  id: SquareRoot(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: SquareRoot(Vector4)
  nameWithType: Vector4.SquareRoot(Vector4)
  fullName: System.Numerics.Vector4.SquareRoot(Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns a vector whose elements are the square root of each of a specified vector&quot;s elements."
  syntax:
    content: public static System.Numerics.Vector4 SquareRoot (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "A vector."
    return:
      type: System.Numerics.Vector4
      description: "The square root vector."
  overload: System.Numerics.Vector4.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Subtract(Vector4,Vector4)
  nameWithType: Vector4.Subtract(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Subtract(Vector4,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Subtracts the second vector from the first."
  syntax:
    content: public static System.Numerics.Vector4 Subtract (System.Numerics.Vector4 left, System.Numerics.Vector4 right);
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "The first vector."
    - id: right
      type: System.Numerics.Vector4
      description: "The second vector."
    return:
      type: System.Numerics.Vector4
      description: "The difference vector."
  overload: System.Numerics.Vector4.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.ToString
  id: ToString
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: ToString()
  nameWithType: Vector4.ToString()
  fullName: System.Numerics.Vector4.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the string representation of the current instance using default formatting."
  remarks: "This method returns a string in which each element of the vector is formatted using the &quot;G&quot; (general) format string and the formatting conventions of the current thread culture. The &quot;\\<&quot; and &quot;>&quot; characters are used to begin and end the string, and the current culture&quot;s <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "The string representation of the current instance."
  overload: System.Numerics.Vector4.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Vector4.ToString(String)
  fullName: System.Numerics.Vector4.ToString(String)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the string representation of the current instance using the specified format string to format individual elements."
  remarks: "This method returns a string in which each element of the vector is formatted using `format` and the current culture&quot;s formatting conventions. The &quot;\\<&quot; and &quot;>&quot; characters are used to begin and end the string, and the current culture&quot;s <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element."
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: "A [standard](~/add/includes/ajax-current-ext-md.md) or [custom numeric format string](~/add/includes/ajax-current-ext-md.md) that defines the format of individual elements."
    return:
      type: System.String
      description: "The string representation of the current instance."
  overload: System.Numerics.Vector4.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: Vector4.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector4.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting."
  remarks: "This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`. The &quot;\\<&quot; and &quot;>&quot; characters are used to begin and end the string, and the format provider&quot;s <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=fullName> property followed by a space is used to separate each element."
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: "A [standard](~/add/includes/ajax-current-ext-md.md) or [custom numeric format string](~/add/includes/ajax-current-ext-md.md) that defines the format of individual elements."
    - id: formatProvider
      type: System.IFormatProvider
      description: "A format provider that supplies culture-specific formatting information."
    return:
      type: System.String
      description: "The string representation of the current instance."
  overload: System.Numerics.Vector4.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector4.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector2,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transforms a two-dimensional vector by a specified 4x4 matrix."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector2 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "The vector to transform."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "The transformation matrix."
    return:
      type: System.Numerics.Vector4
      description: "The transformed vector."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector4.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector2,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transforms a two-dimensional vector by the specified Quaternion rotation value."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector2 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "The vector to rotate."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "The rotation to apply."
    return:
      type: System.Numerics.Vector4
      description: "The transformed vector."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector4.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector3,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transforms a three-dimensional vector by a specified 4x4 matrix."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector3 position, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: position
      type: System.Numerics.Vector3
      description: "The vector to transform."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "The transformation matrix."
    return:
      type: System.Numerics.Vector4
      description: "The transformed vector."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector4.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector3,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transforms a three-dimensional vector by the specified Quaternion rotation value."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector3 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "The vector to rotate."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "The rotation to apply."
    return:
      type: System.Numerics.Vector4
      description: "The transformed vector."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector4,Matrix4x4)
  nameWithType: Vector4.Transform(Vector4,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector4,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transforms a four-dimensional vector by a specified 4x4 matrix."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector4 vector, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: vector
      type: System.Numerics.Vector4
      description: "The vector to transform."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "The transformation matrix."
    return:
      type: System.Numerics.Vector4
      description: "The transformed vector."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Transform(Vector4,Quaternion)
  nameWithType: Vector4.Transform(Vector4,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector4,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Transforms a four-dimensional vector by the specified Quaternion rotation value."
  syntax:
    content: public static System.Numerics.Vector4 Transform (System.Numerics.Vector4 value, System.Numerics.Quaternion rotation);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "The vector to rotate."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "The rotation to apply."
    return:
      type: System.Numerics.Vector4
      description: "The transformed vector."
  overload: System.Numerics.Vector4.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitW
  id: UnitW
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitW
  nameWithType: Vector4.UnitW
  fullName: System.Numerics.Vector4.UnitW
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Gets the vector (0,0,0,1)."
  syntax:
    content: public static System.Numerics.Vector4 UnitW { get; }
    return:
      type: System.Numerics.Vector4
      description: "The vector `(0,0,0,1)`."
  overload: System.Numerics.Vector4.UnitW*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitX
  id: UnitX
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitX
  nameWithType: Vector4.UnitX
  fullName: System.Numerics.Vector4.UnitX
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Gets the vector (1,0,0,0)."
  syntax:
    content: public static System.Numerics.Vector4 UnitX { get; }
    return:
      type: System.Numerics.Vector4
      description: "The vector `(1,0,0,0)`."
  overload: System.Numerics.Vector4.UnitX*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitY
  id: UnitY
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitY
  nameWithType: Vector4.UnitY
  fullName: System.Numerics.Vector4.UnitY
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Gets the vector (0,1,0,0)."
  syntax:
    content: public static System.Numerics.Vector4 UnitY { get; }
    return:
      type: System.Numerics.Vector4
      description: "The vector `(0,1,0,0)`.."
  overload: System.Numerics.Vector4.UnitY*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.UnitZ
  id: UnitZ
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: UnitZ
  nameWithType: Vector4.UnitZ
  fullName: System.Numerics.Vector4.UnitZ
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Gets the vector `(0,0,1,0)`."
  syntax:
    content: public static System.Numerics.Vector4 UnitZ { get; }
    return:
      type: System.Numerics.Vector4
      description: "The vector `(0,0,1,0)`."
  overload: System.Numerics.Vector4.UnitZ*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.W
  id: W
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: W
  nameWithType: Vector4.W
  fullName: System.Numerics.Vector4.W
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "The W component of the vector."
  syntax:
    content: public float W;
    return:
      type: System.Single
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.X
  id: X
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: X
  nameWithType: Vector4.X
  fullName: System.Numerics.Vector4.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "The X component of the vector."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Y
  id: Y
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Y
  nameWithType: Vector4.Y
  fullName: System.Numerics.Vector4.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "The Y component of the vector."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Z
  id: Z
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Z
  nameWithType: Vector4.Z
  fullName: System.Numerics.Vector4.Z
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "The Z component of the vector."
  syntax:
    content: public float Z;
    return:
      type: System.Single
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Vector4.Zero
  id: Zero
  parent: System.Numerics.Vector4
  langs:
  - csharp
  name: Zero
  nameWithType: Vector4.Zero
  fullName: System.Numerics.Vector4.Zero
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "Gets a vector whose 4 elements are equal to zero."
  syntax:
    content: public static System.Numerics.Vector4 Zero { get; }
    return:
      type: System.Numerics.Vector4
      description: "A vector whose four elements are equal to zero (that is, it returns the vector `(0,0,0,0)`."
  overload: System.Numerics.Vector4.Zero*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.RankException
  isExternal: true
  name: System.RankException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Numerics.Vector4.#ctor(System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Single)
  nameWithType: Vector4.Vector4(Single)
  fullName: System.Numerics.Vector4.Vector4(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Vector3,Single)
  nameWithType: Vector4.Vector4(Vector3,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector3,Single)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Vector2,Single,Single)
  nameWithType: Vector4.Vector4(Vector2,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Vector2,Single,Single)
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4(Single,Single,Single,Single)
  nameWithType: Vector4.Vector4(Single,Single,Single,Single)
  fullName: System.Numerics.Vector4.Vector4(Single,Single,Single,Single)
- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Abs(Vector4)
  nameWithType: Vector4.Abs(Vector4)
  fullName: System.Numerics.Vector4.Abs(Vector4)
- uid: System.Numerics.Vector4
  parent: System.Numerics
  isExternal: false
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Add(Vector4,Vector4)
  nameWithType: Vector4.Add(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Add(Vector4,Vector4)
- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Clamp(Vector4,Vector4,Vector4)
  nameWithType: Vector4.Clamp(Vector4,Vector4,Vector4)
  fullName: System.Numerics.Vector4.Clamp(Vector4,Vector4,Vector4)
- uid: System.Numerics.Vector4.CopyTo(System.Single[])
  parent: System.Numerics.Vector4
  isExternal: false
  name: CopyTo(Single[])
  nameWithType: Vector4.CopyTo(Single[])
  fullName: System.Numerics.Vector4.CopyTo(Single[])
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector4
  isExternal: false
  name: CopyTo(Single[],Int32)
  nameWithType: Vector4.CopyTo(Single[],Int32)
  fullName: System.Numerics.Vector4.CopyTo(Single[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Distance(Vector4,Vector4)
  nameWithType: Vector4.Distance(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Distance(Vector4,Vector4)
- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: DistanceSquared(Vector4,Vector4)
  nameWithType: Vector4.DistanceSquared(Vector4,Vector4)
  fullName: System.Numerics.Vector4.DistanceSquared(Vector4,Vector4)
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Divide(Vector4,Vector4)
  nameWithType: Vector4.Divide(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Divide(Vector4,Vector4)
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Divide(Vector4,Single)
  nameWithType: Vector4.Divide(Vector4,Single)
  fullName: System.Numerics.Vector4.Divide(Vector4,Single)
- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Dot(Vector4,Vector4)
  nameWithType: Vector4.Dot(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Dot(Vector4,Vector4)
- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Equals(Vector4)
  nameWithType: Vector4.Equals(Vector4)
  fullName: System.Numerics.Vector4.Equals(Vector4)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector4.Equals(System.Object)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Equals(Object)
  nameWithType: Vector4.Equals(Object)
  fullName: System.Numerics.Vector4.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector4.GetHashCode
  parent: System.Numerics.Vector4
  isExternal: false
  name: GetHashCode()
  nameWithType: Vector4.GetHashCode()
  fullName: System.Numerics.Vector4.GetHashCode()
- uid: System.Numerics.Vector4.Length
  parent: System.Numerics.Vector4
  isExternal: false
  name: Length()
  nameWithType: Vector4.Length()
  fullName: System.Numerics.Vector4.Length()
- uid: System.Numerics.Vector4.LengthSquared
  parent: System.Numerics.Vector4
  isExternal: false
  name: LengthSquared()
  nameWithType: Vector4.LengthSquared()
  fullName: System.Numerics.Vector4.LengthSquared()
- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Lerp(Vector4,Vector4,Single)
  nameWithType: Vector4.Lerp(Vector4,Vector4,Single)
  fullName: System.Numerics.Vector4.Lerp(Vector4,Vector4,Single)
- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Max(Vector4,Vector4)
  nameWithType: Vector4.Max(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Max(Vector4,Vector4)
- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Min(Vector4,Vector4)
  nameWithType: Vector4.Min(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Min(Vector4,Vector4)
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply(Vector4,Vector4)
  nameWithType: Vector4.Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Vector4)
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply(Vector4,Single)
  nameWithType: Vector4.Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.Multiply(Vector4,Single)
- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply(Single,Vector4)
  nameWithType: Vector4.Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.Multiply(Single,Vector4)
- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Negate(Vector4)
  nameWithType: Vector4.Negate(Vector4)
  fullName: System.Numerics.Vector4.Negate(Vector4)
- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Normalize(Vector4)
  nameWithType: Vector4.Normalize(Vector4)
  fullName: System.Numerics.Vector4.Normalize(Vector4)
- uid: System.Numerics.Vector4.One
  parent: System.Numerics.Vector4
  isExternal: false
  name: One
  nameWithType: Vector4.One
  fullName: System.Numerics.Vector4.One
- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Addition(Vector4,Vector4)
  nameWithType: Vector4.op_Addition(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Addition(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Division(Vector4,Vector4)
  nameWithType: Vector4.op_Division(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Division(Vector4,Single)
  nameWithType: Vector4.op_Division(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Division(Vector4,Single)
- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Equality(Vector4,Vector4)
  nameWithType: Vector4.op_Equality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Equality(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Inequality(Vector4,Vector4)
  nameWithType: Vector4.op_Inequality(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Inequality(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply(Vector4,Vector4)
  nameWithType: Vector4.op_Multiply(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply(Vector4,Single)
  nameWithType: Vector4.op_Multiply(Vector4,Single)
  fullName: System.Numerics.Vector4.op_Multiply(Vector4,Single)
- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply(Single,Vector4)
  nameWithType: Vector4.op_Multiply(Single,Vector4)
  fullName: System.Numerics.Vector4.op_Multiply(Single,Vector4)
- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Subtraction(Vector4,Vector4)
  nameWithType: Vector4.op_Subtraction(Vector4,Vector4)
  fullName: System.Numerics.Vector4.op_Subtraction(Vector4,Vector4)
- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_UnaryNegation(Vector4)
  nameWithType: Vector4.op_UnaryNegation(Vector4)
  fullName: System.Numerics.Vector4.op_UnaryNegation(Vector4)
- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: SquareRoot(Vector4)
  nameWithType: Vector4.SquareRoot(Vector4)
  fullName: System.Numerics.Vector4.SquareRoot(Vector4)
- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Subtract(Vector4,Vector4)
  nameWithType: Vector4.Subtract(Vector4,Vector4)
  fullName: System.Numerics.Vector4.Subtract(Vector4,Vector4)
- uid: System.Numerics.Vector4.ToString
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString()
  nameWithType: Vector4.ToString()
  fullName: System.Numerics.Vector4.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Vector4.ToString(System.String)
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString(String)
  nameWithType: Vector4.ToString(String)
  fullName: System.Numerics.Vector4.ToString(String)
- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: Vector4.ToString(String,IFormatProvider)
  fullName: System.Numerics.Vector4.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector2,Matrix4x4)
  nameWithType: Vector4.Transform(Vector2,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector2,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector2,Quaternion)
  nameWithType: Vector4.Transform(Vector2,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector2,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector3,Matrix4x4)
  nameWithType: Vector4.Transform(Vector3,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector3,Matrix4x4)
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector3,Quaternion)
  nameWithType: Vector4.Transform(Vector3,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector3,Quaternion)
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector4,Matrix4x4)
  nameWithType: Vector4.Transform(Vector4,Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(Vector4,Matrix4x4)
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform(Vector4,Quaternion)
  nameWithType: Vector4.Transform(Vector4,Quaternion)
  fullName: System.Numerics.Vector4.Transform(Vector4,Quaternion)
- uid: System.Numerics.Vector4.UnitW
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitW
  nameWithType: Vector4.UnitW
  fullName: System.Numerics.Vector4.UnitW
- uid: System.Numerics.Vector4.UnitX
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitX
  nameWithType: Vector4.UnitX
  fullName: System.Numerics.Vector4.UnitX
- uid: System.Numerics.Vector4.UnitY
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitY
  nameWithType: Vector4.UnitY
  fullName: System.Numerics.Vector4.UnitY
- uid: System.Numerics.Vector4.UnitZ
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitZ
  nameWithType: Vector4.UnitZ
  fullName: System.Numerics.Vector4.UnitZ
- uid: System.Numerics.Vector4.W
  parent: System.Numerics.Vector4
  isExternal: false
  name: W
  nameWithType: Vector4.W
  fullName: System.Numerics.Vector4.W
- uid: System.Numerics.Vector4.X
  parent: System.Numerics.Vector4
  isExternal: false
  name: X
  nameWithType: Vector4.X
  fullName: System.Numerics.Vector4.X
- uid: System.Numerics.Vector4.Y
  parent: System.Numerics.Vector4
  isExternal: false
  name: Y
  nameWithType: Vector4.Y
  fullName: System.Numerics.Vector4.Y
- uid: System.Numerics.Vector4.Z
  parent: System.Numerics.Vector4
  isExternal: false
  name: Z
  nameWithType: Vector4.Z
  fullName: System.Numerics.Vector4.Z
- uid: System.Numerics.Vector4.Zero
  parent: System.Numerics.Vector4
  isExternal: false
  name: Zero
  nameWithType: Vector4.Zero
  fullName: System.Numerics.Vector4.Zero
- uid: System.Numerics.Vector4.#ctor*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Vector4
  nameWithType: Vector4.Vector4
- uid: System.Numerics.Vector4.Abs*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Abs
  nameWithType: Vector4.Abs
- uid: System.Numerics.Vector4.Add*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Add
  nameWithType: Vector4.Add
- uid: System.Numerics.Vector4.Clamp*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Clamp
  nameWithType: Vector4.Clamp
- uid: System.Numerics.Vector4.CopyTo*
  parent: System.Numerics.Vector4
  isExternal: false
  name: CopyTo
  nameWithType: Vector4.CopyTo
- uid: System.Numerics.Vector4.Distance*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Distance
  nameWithType: Vector4.Distance
- uid: System.Numerics.Vector4.DistanceSquared*
  parent: System.Numerics.Vector4
  isExternal: false
  name: DistanceSquared
  nameWithType: Vector4.DistanceSquared
- uid: System.Numerics.Vector4.Divide*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Divide
  nameWithType: Vector4.Divide
- uid: System.Numerics.Vector4.Dot*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Dot
  nameWithType: Vector4.Dot
- uid: System.Numerics.Vector4.Equals*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Equals
  nameWithType: Vector4.Equals
- uid: System.Numerics.Vector4.GetHashCode*
  parent: System.Numerics.Vector4
  isExternal: false
  name: GetHashCode
  nameWithType: Vector4.GetHashCode
- uid: System.Numerics.Vector4.Length*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Length
  nameWithType: Vector4.Length
- uid: System.Numerics.Vector4.LengthSquared*
  parent: System.Numerics.Vector4
  isExternal: false
  name: LengthSquared
  nameWithType: Vector4.LengthSquared
- uid: System.Numerics.Vector4.Lerp*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Lerp
  nameWithType: Vector4.Lerp
- uid: System.Numerics.Vector4.Max*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Max
  nameWithType: Vector4.Max
- uid: System.Numerics.Vector4.Min*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Min
  nameWithType: Vector4.Min
- uid: System.Numerics.Vector4.Multiply*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Multiply
  nameWithType: Vector4.Multiply
- uid: System.Numerics.Vector4.Negate*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Negate
  nameWithType: Vector4.Negate
- uid: System.Numerics.Vector4.Normalize*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Normalize
  nameWithType: Vector4.Normalize
- uid: System.Numerics.Vector4.One*
  parent: System.Numerics.Vector4
  isExternal: false
  name: One
  nameWithType: Vector4.One
- uid: System.Numerics.Vector4.op_Addition*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Addition
  nameWithType: Vector4.op_Addition
- uid: System.Numerics.Vector4.op_Division*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Division
  nameWithType: Vector4.op_Division
- uid: System.Numerics.Vector4.op_Equality*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Equality
  nameWithType: Vector4.op_Equality
- uid: System.Numerics.Vector4.op_Inequality*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Inequality
  nameWithType: Vector4.op_Inequality
- uid: System.Numerics.Vector4.op_Multiply*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Multiply
  nameWithType: Vector4.op_Multiply
- uid: System.Numerics.Vector4.op_Subtraction*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_Subtraction
  nameWithType: Vector4.op_Subtraction
- uid: System.Numerics.Vector4.op_UnaryNegation*
  parent: System.Numerics.Vector4
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Vector4.op_UnaryNegation
- uid: System.Numerics.Vector4.SquareRoot*
  parent: System.Numerics.Vector4
  isExternal: false
  name: SquareRoot
  nameWithType: Vector4.SquareRoot
- uid: System.Numerics.Vector4.Subtract*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Subtract
  nameWithType: Vector4.Subtract
- uid: System.Numerics.Vector4.ToString*
  parent: System.Numerics.Vector4
  isExternal: false
  name: ToString
  nameWithType: Vector4.ToString
- uid: System.Numerics.Vector4.Transform*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Transform
  nameWithType: Vector4.Transform
- uid: System.Numerics.Vector4.UnitW*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitW
  nameWithType: Vector4.UnitW
- uid: System.Numerics.Vector4.UnitX*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitX
  nameWithType: Vector4.UnitX
- uid: System.Numerics.Vector4.UnitY*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitY
  nameWithType: Vector4.UnitY
- uid: System.Numerics.Vector4.UnitZ*
  parent: System.Numerics.Vector4
  isExternal: false
  name: UnitZ
  nameWithType: Vector4.UnitZ
- uid: System.Numerics.Vector4.Zero*
  parent: System.Numerics.Vector4
  isExternal: false
  name: Zero
  nameWithType: Vector4.Zero
