### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphics
  id: BufferedGraphics
  children:
  - System.Drawing.BufferedGraphics.Dispose
  - System.Drawing.BufferedGraphics.Finalize
  - System.Drawing.BufferedGraphics.Graphics
  - System.Drawing.BufferedGraphics.Render
  - System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  - System.Drawing.BufferedGraphics.Render(System.IntPtr)
  langs:
  - csharp
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
  type: Class
  summary: "Fornece uma memória intermédia de gráficos de memória intermédia duplo."
  remarks: "A classe de BufferedGraphics permite-lhe implementar personalizado duplo colocação em memória intermédia para a sua gráficos. Fornece um wrapper de memória intermédia de gráficos, juntamente com métodos que pode utilizar para escrever na memória intermédia e compor o respetivo conteúdo para um dispositivo de saída.       Gráficos que utilizam a memória intermédia duplo podem reduzir ou eliminar flicker é causado por uma superfície de apresentação de um novo desenho. Quando utiliza a memória intermédia duplo, gráficos atualizados são desenhados primeiro uma memória intermédia na memória e os conteúdos desta memória intermédia rapidamente, em seguida, são escritos para alguns ou todos os a superfície de apresentados. Esta substituição relativamente breve os gráficos apresentados normalmente reduz ou elimina flicker que ocorre, por vezes, quando são atualizados gráficos.      > [!NOTE] > A forma mais simples para utilizar a memória intermédia duplo é a definição de <xref:System.Windows.Forms.ControlStyles>controlar o sinalizador de estilo utilizando um controlo de <xref:System.Windows.Forms.Control.SetStyle%2A>método.</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> Definir o <xref:System.Windows.Forms.ControlStyles>Sinalizador para um controlo redireciona todas as desenho para o controlo através de uma memória intermédia gráficos predefinida, sem necessidade de quaisquer códigos adicionais.</xref:System.Windows.Forms.ControlStyles> Este sinalizador está definido como `true` por predefinição.       A classe de BufferedGraphics não tem nenhum construtor público e tem de ser criada pelo <xref:System.Drawing.BufferedGraphicsContext>para um domínio de aplicação utilizando o respetivo <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método.</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphicsContext> Pode obter o <xref:System.Drawing.BufferedGraphicsContext>para o domínio de aplicação atual do estática <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>propriedade.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> </xref:System.Drawing.BufferedGraphicsContext>       O <xref:System.Drawing.BufferedGraphics.Graphics%2A>propriedade pode ser utilizada para desenhar a memória intermédia de gráficos.</xref:System.Drawing.BufferedGraphics.Graphics%2A> Esta propriedade fornece acesso a <xref:System.Drawing.Graphics>objeto desenha na memória intermédia de gráficos atribuído para este objeto BufferedGraphics.</xref:System.Drawing.Graphics>       O <xref:System.Drawing.BufferedGraphics.Render%2A>método com sem argumentos desenha os conteúdos dos gráficos memória intermédia para a superfície de especificado quando a memória intermédia foi alocada.</xref:System.Drawing.BufferedGraphics.Render%2A> Outras sobrecargas do <xref:System.Drawing.BufferedGraphics.Render%2A>método permitem-lhe especificar uma <xref:System.Drawing.Graphics>objeto ou um <xref:System.IntPtr>objeto que aponta para um contexto de dispositivo para a qual desenhar o conteúdo da memória intermédia de gráficos.</xref:System.IntPtr> </xref:System.Drawing.Graphics> </xref:System.Drawing.BufferedGraphics.Render%2A>       Para mais informações sobre o desenho duplo colocado na memória intermédia de gráficos, consulte [duplo gráficos colocado na memória intermédia](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using a BufferedGraphics object to draw graphics using several types of buffering implementations. Clicking the form alternately starts and stops a timer that causes draw updates. The draw updates allow you to observe the effect of double buffering. Right-clicking the form cycles through the following drawing modes:  \n  \n-   Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.  \n  \n [!code-cpp[BufferedGraphicsExample#1](~/add/codesnippet/cpp/t-system.drawing.buffere_1_1.cpp)]\n [!code-cs[BufferedGraphicsExample#1](~/add/codesnippet/csharp/t-system.drawing.buffere_1_1.cs)]\n [!code-vb[BufferedGraphicsExample#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphics : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> objeto."
  remarks: "É possível chamar Dispose quando tiver terminado com o <xref:System.Drawing.BufferedGraphics>objeto.</xref:System.Drawing.BufferedGraphics> O método de Dispose deixa o <xref:System.Drawing.BufferedGraphics>objetos num Estado não utilizável.</xref:System.Drawing.BufferedGraphics> Depois de chamar Dispose, tem de libertar todas as referências para o <xref:System.Drawing.BufferedGraphics>objeto para o recoletor de lixo pode reclame a memória que a <xref:System.Drawing.BufferedGraphics>objeto foi occupying.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphics> Para obter mais informações, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md) e [implementar um método eliminar](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de libertar uma última referência para o <xref:System.Drawing.BufferedGraphics>objeto.</xref:System.Drawing.BufferedGraphics> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.Drawing.BufferedGraphics>do objeto `Finalize` método.</xref:System.Drawing.BufferedGraphics>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Permite que um objeto para tentar libertar recursos e efetuar outras operações de limpeza antes de que reclamada a através da recolha de lixo."
  syntax:
    content: ~BufferedGraphics ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Graphics
  id: Graphics
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém um <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objeto que produz a memória intermédia de gráficos."
  remarks: "Esta propriedade fornece um <xref:System.Drawing.Graphics>objeto desenha na memória intermédia de gráficos atribuído para este <xref:System.Drawing.BufferedGraphics>objeto.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objeto que produz a memória intermédia de gráficos."
  overload: System.Drawing.BufferedGraphics.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render
  id: Render
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Escreve o conteúdo da memória intermédia de gráficos para o dispositivo predefinido."
  remarks: "Este método escreve o conteúdo da memória intermédia de gráficos para o dispositivo especificado ao chamar o <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>método o <xref:System.Drawing.BufferedGraphicsContext>utilizado para criar esta <xref:System.Drawing.BufferedGraphics>objeto.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>"
  syntax:
    content: public void Render ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  id: Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Escreve o conteúdo da memória intermédia de gráficos especificado <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objeto."
  remarks: "Este método escreve o conteúdo da memória intermédia de gráficos especificado <xref:System.Drawing.Graphics>objeto.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#5](~/add/codesnippet/csharp/m-system.drawing.buffere_1_1.cs)]\n [!code-cpp[BufferingExamples#5](~/add/codesnippet/cpp/m-system.drawing.buffere_1_1.cpp)]\n [!code-vb[BufferingExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: public void Render (System.Drawing.Graphics target);
    parameters:
    - id: target
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objeto ao qual pretende escrever o conteúdo da memória intermédia de gráficos."
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  id: Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Escreve o conteúdo da memória intermédia de gráficos para o contexto de dispositivo associado a especificado <xref:System.IntPtr>processar.</xref:System.IntPtr>"
  remarks: "Este método escreve o conteúdo da memória intermédia de gráficos para o contexto de dispositivo associado a especificado <xref:System.IntPtr>processar.</xref:System.IntPtr>"
  example:
  - "The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#6](~/add/codesnippet/csharp/m-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#6](~/add/codesnippet/cpp/m-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public void Render (IntPtr targetDC);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que aponta para o contexto de dispositivo para o qual pretende escrever o conteúdo da memória intermédia de gráficos.</xref:System.IntPtr>"
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.BufferedGraphics.Dispose
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
- uid: System.Drawing.BufferedGraphics.Finalize
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
- uid: System.Drawing.BufferedGraphics.Graphics
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.BufferedGraphics.Render
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphics.Dispose*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphics.Dispose
- uid: System.Drawing.BufferedGraphics.Finalize*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphics.Finalize
- uid: System.Drawing.BufferedGraphics.Graphics*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
- uid: System.Drawing.BufferedGraphics.Render*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render
  nameWithType: BufferedGraphics.Render
