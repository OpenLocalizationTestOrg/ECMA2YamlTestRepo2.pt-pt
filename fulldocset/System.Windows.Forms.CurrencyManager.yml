### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.CurrencyManager
  id: CurrencyManager
  children:
  - System.Windows.Forms.CurrencyManager.AddNew
  - System.Windows.Forms.CurrencyManager.CancelCurrentEdit
  - System.Windows.Forms.CurrencyManager.CheckEmpty
  - System.Windows.Forms.CurrencyManager.Count
  - System.Windows.Forms.CurrencyManager.Current
  - System.Windows.Forms.CurrencyManager.EndCurrentEdit
  - System.Windows.Forms.CurrencyManager.finalType
  - System.Windows.Forms.CurrencyManager.GetItemProperties
  - System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)
  - System.Windows.Forms.CurrencyManager.ItemChanged
  - System.Windows.Forms.CurrencyManager.List
  - System.Windows.Forms.CurrencyManager.ListChanged
  - System.Windows.Forms.CurrencyManager.listposition
  - System.Windows.Forms.CurrencyManager.MetaDataChanged
  - System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  - System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.Position
  - System.Windows.Forms.CurrencyManager.Refresh
  - System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)
  - System.Windows.Forms.CurrencyManager.ResumeBinding
  - System.Windows.Forms.CurrencyManager.SuspendBinding
  - System.Windows.Forms.CurrencyManager.UpdateIsBinding
  langs:
  - csharp
  name: CurrencyManager
  nameWithType: CurrencyManager
  fullName: System.Windows.Forms.CurrencyManager
  type: Class
  summary: "Manages a list of <xref href=&quot;System.Windows.Forms.Binding&quot;></xref> objects."
  remarks: "The CurrencyManager derives from the <xref:System.Windows.Forms.BindingManagerBase> class. Use the <xref:System.Windows.Forms.BindingContext> to return either a CurrencyManager or a <xref:System.Windows.Forms.PropertyManager>. The actual object returned depends on the data source and data member passed to the <xref:System.Windows.Forms.BindingContext.Item%2A> property of the <xref:System.Windows.Forms.BindingContext>. If the data source is an object that can return only a single property (instead of a list of objects), the type will be a <xref:System.Windows.Forms.PropertyManager>. For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> will be returned. If, on the other hand, the data source is an object that implements the <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, or <xref:System.ComponentModel.IBindingList> interface, a CurrencyManager will be returned.       The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property returns the current item in the underlying list. To change the current item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to a new value. The value must be greater than 0 and must be less than the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.       If the underlying data source implements the <xref:System.ComponentModel.IBindingList> interface, and the <xref:System.ComponentModel.IBindingList.AllowNew%2A> property is set to `true`, you can use the <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> method."
  example:
  - "The following code example binds a <xref:System.Windows.Forms.TextBox> control to a column in a <xref:System.Data.DataTable>, gets the CurrencyManager for the binding, and sets its position.  \n  \n [!code-cs[Classic CurrencyManager Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_31_1.cs)]\n [!code-cpp[Classic CurrencyManager Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_31_1.cpp)]\n [!code-vb[Classic CurrencyManager Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_31_1.vb)]"
  syntax:
    content: 'public class CurrencyManager : System.Windows.Forms.BindingManagerBase'
  inheritance:
  - System.Object
  - System.Windows.Forms.BindingManagerBase
  implements: []
  inheritedMembers:
  - System.Windows.Forms.BindingManagerBase.BindingComplete
  - System.Windows.Forms.BindingManagerBase.Bindings
  - System.Windows.Forms.BindingManagerBase.CurrentChanged
  - System.Windows.Forms.BindingManagerBase.CurrentItemChanged
  - System.Windows.Forms.BindingManagerBase.DataError
  - System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)
  - System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)
  - System.Windows.Forms.BindingManagerBase.IsBindingSuspended
  - System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  - System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler
  - System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)
  - System.Windows.Forms.BindingManagerBase.onPositionChangedHandler
  - System.Windows.Forms.BindingManagerBase.PositionChanged
  - System.Windows.Forms.BindingManagerBase.PullData
  - System.Windows.Forms.BindingManagerBase.PushData
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.AddNew
  id: AddNew
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: AddNew()
  nameWithType: CurrencyManager.AddNew()
  fullName: System.Windows.Forms.CurrencyManager.AddNew()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds a new item to the underlying list."
  remarks: "This method is supported only if the data source implements the <xref:System.ComponentModel.IBindingList> interface and the data source allows adding rows (<xref:System.ComponentModel.IBindingList.AllowNew%2A> is `true`).      > [!NOTE] >  This property was designed to allow complex-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to add new items to list.       You typically use this property only if you are creating your own control that incorporates the <xref:System.Windows.Forms.CurrencyManager>. Otherwise, to add items if the data source is a <xref:System.Data.DataView>, use the <xref:System.Data.DataView.AddNew%2A?displayProperty=fullName> method of the <xref:System.Data.DataView> class. If the data source is a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTable.NewRow%2A> method and add the row to the <xref:System.Data.DataRowCollection>."
  example:
  - "The following code example adds a new item to the list with the AddNew method.  \n  \n [!code-cpp[Classic CurrencyManager.AddNew Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_53_1.cpp)]\n [!code-cs[Classic CurrencyManager.AddNew Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_53_1.cs)]\n [!code-vb[Classic CurrencyManager.AddNew Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_53_1.vb)]"
  syntax:
    content: public override void AddNew ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.AddNew*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying data source does not implement <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref>, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <xref href=&quot;System.Data.DataView&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.CancelCurrentEdit
  id: CancelCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: CancelCurrentEdit()
  nameWithType: CurrencyManager.CancelCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.CancelCurrentEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cancels the current edit operation."
  remarks: "This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface. If the objects contained within the data source do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.      > [!NOTE] >  This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to cancel edits. For example, when the user presses the ESC key, the CancelCurrentEdit method is called on the <xref:System.Windows.Forms.CurrencyManager> for the <xref:System.Windows.Forms.DataGrid>. Unless you are creating a control that requires this same functionality, you should not use this method. Instead, use the <xref:System.Data.DataRowView.CancelEdit%2A> method of the <xref:System.Data.DataRowView> class."
  example:
  - "The following code example uses the CancelCurrentEdit when the user presses the ESC key.  \n  \n [!code-cs[Classic CurrencyManager.CancelCurrentEdit Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_77_1.cs)]\n [!code-vb[Classic CurrencyManager.CancelCurrentEdit Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_77_1.vb)]\n [!code-cpp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_77_1.cpp)]"
  syntax:
    content: public override void CancelCurrentEdit ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.CancelCurrentEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.CheckEmpty
  id: CheckEmpty
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: CheckEmpty()
  nameWithType: CurrencyManager.CheckEmpty()
  fullName: System.Windows.Forms.CurrencyManager.CheckEmpty()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Throws an exception if there is no list, or the list is empty."
  syntax:
    content: protected void CheckEmpty ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.CheckEmpty*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "There is no list, or the list is empty."
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Count
  id: Count
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Count
  nameWithType: CurrencyManager.Count
  fullName: System.Windows.Forms.CurrencyManager.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the number of items in the list."
  remarks: "Use the count property to determine when the end of a list has been reached. Because the <xref:System.Windows.Forms.CurrencyManager> maintains a 0-based array of items, the end of the list is always Count minus one."
  example:
  - "The following code example iterates through the list until the final item, determined by the Count property, is reached.  \n  \n [!code-cs[Classic CurrencyManager.Count Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_28_1.cs)]\n [!code-cpp[Classic CurrencyManager.Count Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_28_1.cpp)]\n [!code-vb[Classic CurrencyManager.Count Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_28_1.vb)]"
  syntax:
    content: public override int Count { get; }
    return:
      type: System.Int32
      description: "The number of items in the list."
  overload: System.Windows.Forms.CurrencyManager.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Current
  id: Current
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Current
  nameWithType: CurrencyManager.Current
  fullName: System.Windows.Forms.CurrencyManager.Current
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the current item in the list."
  remarks: "In order to get the current item, you must know its data type in order to cast it correctly. For example, if the data source is a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, you must cast the current item as a <xref:System.Data.DataRowView> object."
  example:
  - "The following code example uses the Current property to print the `ContactName` field for the current item in the list.  \n  \n [!code-cs[Classic CurrencyManager.Current Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_57_1.cs)]\n [!code-vb[Classic CurrencyManager.Current Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_57_1.vb)]\n [!code-cpp[Classic CurrencyManager.Current Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_57_1.cpp)]"
  syntax:
    content: public override object Current { get; }
    return:
      type: System.Object
      description: "A list item of type <xref:System.Object>."
  overload: System.Windows.Forms.CurrencyManager.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.EndCurrentEdit
  id: EndCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: EndCurrentEdit()
  nameWithType: CurrencyManager.EndCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.EndCurrentEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ends the current edit operation."
  remarks: "This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> or <xref:System.ComponentModel.ICancelAddNew> interfaces.      > [!NOTE] >  This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGridView> control. Unless you are creating a control that requires this same functionality, you should not use this method. Instead, if the data source is either a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, use the <xref:System.Data.DataRowView.EndEdit%2A> method of the <xref:System.Data.DataRowView> class."
  example:
  - "The following code example demonstrates how to use the EndCurrentEdit method.  \n  \n [!code-cpp[Classic CurrencyManager.EndCurrentEdit Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_109_1.cpp)]\n [!code-vb[Classic CurrencyManager.EndCurrentEdit Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_109_1.vb)]\n [!code-cs[Classic CurrencyManager.EndCurrentEdit Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_109_1.cs)]"
  syntax:
    content: public override void EndCurrentEdit ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.EndCurrentEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.finalType
  id: finalType
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: finalType
  nameWithType: CurrencyManager.finalType
  fullName: System.Windows.Forms.CurrencyManager.finalType
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Specifies the data type of the list."
  syntax:
    content: protected Type finalType;
    return:
      type: System.Type
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.GetItemProperties
  id: GetItemProperties
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: GetItemProperties()
  nameWithType: CurrencyManager.GetItemProperties()
  fullName: System.Windows.Forms.CurrencyManager.GetItemProperties()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the property descriptor collection for the underlying list."
  remarks: "The <xref:System.ComponentModel.PropertyDescriptorCollection> for the <xref:System.Windows.Forms.CurrencyManager> is used to specify a column in the list."
  example:
  - "The following code example uses the GetItemProperties method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>. The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.  \n  \n [!code-cs[Classic CurrencyManager.GetItemProperties Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_97_1.cs)]\n [!code-cpp[Classic CurrencyManager.GetItemProperties Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_97_1.cpp)]\n [!code-vb[Classic CurrencyManager.GetItemProperties Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_97_1.vb)]"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;></xref> for the list."
  overload: System.Windows.Forms.CurrencyManager.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)
  id: GetListName(System.Collections.ArrayList)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: GetListName(ArrayList)
  nameWithType: CurrencyManager.GetListName(ArrayList)
  fullName: System.Windows.Forms.CurrencyManager.GetListName(ArrayList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the name of the list supplying the data for the binding using the specified set of bound properties."
  remarks: "For the GetListName method to be successful, the underlying list must be of type <xref:System.ComponentModel.ITypedList>."
  syntax:
    content: protected override string GetListName (System.Collections.ArrayList listAccessors);
    parameters:
    - id: listAccessors
      type: System.Collections.ArrayList
      description: "An <xref href=&quot;System.Collections.ArrayList&quot;></xref> of properties to be found in the data source."
    return:
      type: System.String
      description: "If successful, a <xref:System.String> containing name of the list supplying the data for the binding; otherwise, an <xref:System.String> string."
  overload: System.Windows.Forms.CurrencyManager.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.ItemChanged
  id: ItemChanged
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: ItemChanged
  nameWithType: CurrencyManager.ItemChanged
  fullName: System.Windows.Forms.CurrencyManager.ItemChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the current item has been altered."
  remarks: "The ItemChanged event will occur when the user calls the <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> or <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> method.       The ItemChanged event occurs only when the item itself has been changed in some manner. For example, if the value of an item is changed from 10 to 42, the event will occur. This should not be confused with the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event where the item has been changed to a new item.       The event will also occur if the underlying data changes. For example, if you change the value of a <xref:System.Data.DataRowView>, the ItemChanged event will occur.      > [!NOTE] >  If you are creating your own control that uses the <xref:System.Windows.Forms.CurrencyManager>, you should use the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName> instead of the ItemChanged event. The <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A> property of the <xref:System.ComponentModel.ListChangedEventArgs> enables you to determine the type of action that has occurred.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example adds event handlers for the ItemChanged and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.  \n  \n [!code-cpp[Classic CurrencyManager.ItemChanged Example#1](~/add/codesnippet/cpp/e-system.windows.forms.c_44_1.cpp)]\n [!code-vb[Classic CurrencyManager.ItemChanged Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_44_1.vb)]\n [!code-cs[Classic CurrencyManager.ItemChanged Example#1](~/add/codesnippet/csharp/e-system.windows.forms.c_44_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.ItemChangedEventHandler ItemChanged;
    return:
      type: System.Windows.Forms.ItemChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.List
  id: List
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: List
  nameWithType: CurrencyManager.List
  fullName: System.Windows.Forms.CurrencyManager.List
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the list for this <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;></xref>."
  remarks: "The object returned by the List property can be cast to any type that implements the <xref:System.Collections.IList> interface. This will be commonly used when you know the type of the underlying list. For example, if you are data-bound to a <xref:System.Data.DataSet>, the underlying list is a <xref:System.Data.DataView> (which implements <xref:System.Collections.IList>). Other classes that implement the interface (this is not a complete list) include <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.CollectionBase>.       How you use the List property depends on the class that implements the <xref:System.Collections.IList> interface. For example, you can use the List property to determine the name of the list. If the data source implements the <xref:System.ComponentModel.ITypedList> interface, you can use the <xref:System.ComponentModel.ITypedList.GetListName%2A> method to return the name of the current table. This is shown in the C# code below:      ```c#   private void PrintCurrentListName(DataGrid myDataGrid){       CurrencyManager myCM = (CurrencyManager)       BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];       IList myList = myCM.List;       ITypedList thisList = (ITypedList) myList;       Console.WriteLine(thisList.GetListName(null));    }   ```"
  example:
  - "The following code example allows users to edit a set of records, but not add any new ones. In the <xref:System.Windows.Forms.DataGrid.Navigate> event of a <xref:System.Windows.Forms.DataGrid> control, the <xref:System.Collections.IList> returned by the List property is cast to a <xref:System.Data.DataView> variable. The <xref:System.Data.DataView.AllowNew%2A> property of the <xref:System.Data.DataView> is set to `false`.  \n  \n [!code-cs[CurrencyManager.List Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_107_1.cs)]\n [!code-cpp[CurrencyManager.List Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_107_1.cpp)]\n [!code-vb[CurrencyManager.List Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_107_1.vb)]"
  syntax:
    content: public System.Collections.IList List { get; }
    return:
      type: System.Collections.IList
      description: "An <xref:System.Collections.IList> that contains the list."
  overload: System.Windows.Forms.CurrencyManager.List*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.ListChanged
  id: ListChanged
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: ListChanged
  nameWithType: CurrencyManager.ListChanged
  fullName: System.Windows.Forms.CurrencyManager.ListChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the list changes or an item in the list changes."
  remarks: "The ListChanged event is thrown by the <xref:System.Windows.Forms.CurrencyManager> class when changes to an item are made using methods such as <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>. This event can also occur when the data source is edited directly if it implements the <xref:System.ComponentModel.IBindingListView> interface.       The associated `OnListChanged` method is a private method in this class.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ListChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`. Then ensure that the event handler is associated with the ListChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#192](~/add/codesnippet/csharp/e-system.windows.forms.c_59_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#192](~/add/codesnippet/visualbasic/e-system.windows.forms.c_59_1.vb)]"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.listposition
  id: listposition
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: listposition
  nameWithType: CurrencyManager.listposition
  fullName: System.Windows.Forms.CurrencyManager.listposition
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Specifies the current position of the <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;></xref> in the list."
  remarks: "If the value of the <xref:System.Windows.Forms.CurrencyManager.Count%2A> property is greater than 0, the listposition field is a number between 0 and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1. If <xref:System.Windows.Forms.CurrencyManager.Count%2A> is 0, listposition is -1."
  syntax:
    content: protected int listposition;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.MetaDataChanged
  id: MetaDataChanged
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: MetaDataChanged
  nameWithType: CurrencyManager.MetaDataChanged
  fullName: System.Windows.Forms.CurrencyManager.MetaDataChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the metadata of the <xref:System.Windows.Forms.CurrencyManager.List*> has changed."
  remarks: "The metadata of the <xref:System.Windows.Forms.CurrencyManager.List%2A> consists of the schema of the underlying <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=fullName>. The MetaDataChanged event is raised when that schema has changed. For example, the MetaDataChanged event is raised when a <xref:System.Data.DataColumn> is programmatically added to a <xref:System.Data.DataTable>.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MetaDataChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`. Then ensure that the event handler is associated with the MetaDataChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#193](~/add/codesnippet/csharp/e-system.windows.forms.c_76_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#193](~/add/codesnippet/visualbasic/e-system.windows.forms.c_76_1.vb)]"
  syntax:
    content: public event EventHandler MetaDataChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)
  id: OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnCurrentChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingManagerBase.CurrentChanged&quot;></xref> event."
  syntax:
    content: protected override void OnCurrentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "The <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.CurrencyManager.OnCurrentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)
  id: OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingManagerBase.CurrentItemChanged&quot;></xref> event."
  syntax:
    content: protected override void OnCurrentItemChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "The <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  id: OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnItemChanged(ItemChangedEventArgs)
  nameWithType: CurrencyManager.OnItemChanged(ItemChangedEventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnItemChanged(ItemChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.CurrencyManager.ItemChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnItemChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnItemChanged (System.Windows.Forms.ItemChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.ItemChangedEventArgs
      description: "An <xref href=&quot;System.Windows.Forms.ItemChangedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.CurrencyManager.OnItemChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)
  id: OnMetaDataChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnMetaDataChanged(EventArgs)
  nameWithType: CurrencyManager.OnMetaDataChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.CurrencyManager.MetaDataChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnMetaDataChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected void OnMetaDataChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.CurrencyManager.OnMetaDataChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)
  id: OnPositionChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnPositionChanged(EventArgs)
  nameWithType: CurrencyManager.OnPositionChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnPositionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingManagerBase.PositionChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnPositionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnPositionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.CurrencyManager.OnPositionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Position
  id: Position
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Position
  nameWithType: CurrencyManager.Position
  fullName: System.Windows.Forms.CurrencyManager.Position
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the position you are at within the list."
  remarks: "An important property of the <xref:System.Windows.Forms.CurrencyManager> class is the Position property. In a list of items, you can view only one item out of the entire list. To determine which item is viewed, set the Position to a number between 0 (the beginning of the list) and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1 (the end of the list).       Therefore, the Position determines the currency, or place in the list, of all controls bound to the same <xref:System.Windows.Forms.CurrencyManager>. For example, imagine a list consisting of two columns called &quot;FirstName&quot; and &quot;LastName&quot;. Two <xref:System.Windows.Forms.TextBox> controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column. When the Position of the common <xref:System.Windows.Forms.CurrencyManager> is set to the third position, both controls display the appropriate values for that position in the list. In other words, if the item at position three consists of the first name &quot;John&quot; and the last name &quot;Smith&quot;, the bound controls will display &quot;John&quot; and &quot;Smith&quot;."
  example:
  - "The following code examples use the Position property to allow navigation through a list.  \n  \n [!code-cpp[Classic CurrencyManager.Position Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_83_1.cpp)]\n [!code-cs[Classic CurrencyManager.Position Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_83_1.cs)]\n [!code-vb[Classic CurrencyManager.Position Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_83_1.vb)]"
  syntax:
    content: public override int Position { get; set; }
    return:
      type: System.Int32
      description: "A number between 0 and <xref:System.Windows.Forms.CurrencyManager.Count*> minus 1."
  overload: System.Windows.Forms.CurrencyManager.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Refresh
  id: Refresh
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Refresh()
  nameWithType: CurrencyManager.Refresh()
  fullName: System.Windows.Forms.CurrencyManager.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Forces a repopulation of the data-bound list."
  remarks: "Use the Refresh method when the data source does not support notification when it is changed (for example, if it is an <xref:System.Array>)."
  example:
  - "The following code example creates an array and binds it to a <xref:System.Windows.Forms.TextBox> control, and then changes one value. The Refresh method can be called to update the value displayed by the <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic CurrencyManager.Refresh Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_16_1.cs)]\n [!code-cpp[Classic CurrencyManager.Refresh Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_16_1.cpp)]\n [!code-vb[Classic CurrencyManager.Refresh Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_16_1.vb)]"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: CurrencyManager.RemoveAt(Int32)
  fullName: System.Windows.Forms.CurrencyManager.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the item at the specified index."
  remarks: "The RemoveAt method was designed to allow complex controls, such as the <xref:System.Windows.Forms.DataGrid> control, to remove items from the list. You should not use this method to actually remove items. Instead, use the <xref:System.Data.DataView.Delete%2A> method of the <xref:System.Data.DataView> class to delete items."
  example:
  - "The following code example uses the RemoveAt method to remove the item at position 0 in the list.  \n  \n [!code-cs[Classic CurrencyManager.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_71_1.cs)]\n [!code-cpp[Classic CurrencyManager.RemoveAt Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_71_1.cpp)]\n [!code-vb[Classic CurrencyManager.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_71_1.vb)]"
  syntax:
    content: public override void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the item to remove from the list."
  overload: System.Windows.Forms.CurrencyManager.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "There is no row at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.ResumeBinding
  id: ResumeBinding
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: ResumeBinding()
  nameWithType: CurrencyManager.ResumeBinding()
  fullName: System.Windows.Forms.CurrencyManager.ResumeBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Resumes data binding."
  remarks: "<xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and ResumeBinding are two methods that allow the temporary suspension and resumption of in a simple data binding scenario. You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.      > [!NOTE] >  Using <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> prevents changes from being pushed into the data source until ResumeBinding is called but does not prevent changes in the data source from affecting the bound controls. Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event. Calling this method will not prevent these events from occurring. For this reason, <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and ResumeBinding are designed for use with simple-bound controls, such as a <xref:System.Windows.Forms.TextBox>. Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`."
  example:
  - "The following code example demonstrates how to use the ResumeBinding method.  \n  \n [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_40_1.vb)]\n [!code-cs[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/csharp/m-system.windows.forms.c_40_1.cs)]\n [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/cpp/m-system.windows.forms.c_40_1.cpp)]"
  syntax:
    content: public override void ResumeBinding ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.ResumeBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.SuspendBinding
  id: SuspendBinding
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: SuspendBinding()
  nameWithType: CurrencyManager.SuspendBinding()
  fullName: System.Windows.Forms.CurrencyManager.SuspendBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Suspends data binding to prevents changes from updating the bound data source."
  remarks: "The SuspendBinding and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> methods allow the temporary suspension and resumption of data binding in a simple binding scenario. You would typically suspend data binding if the user must make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.      > [!NOTE] >  <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being applied to the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring. Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events, such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event. Therefore, calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent complex-bound controls from receiving events to update the data source. For this reason, <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control. Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`."
  example:
  - "The following code example demonstrates how to use the SuspendBinding method.  \n  \n [!code-vb[BindingManagerBase_Suspend_Resume_Binding#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_69_1.vb)]\n [!code-cs[BindingManagerBase_Suspend_Resume_Binding#1](~/add/codesnippet/csharp/m-system.windows.forms.c_69_1.cs)]\n [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#1](~/add/codesnippet/cpp/m-system.windows.forms.c_69_1.cpp)]"
  syntax:
    content: public override void SuspendBinding ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.SuspendBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.UpdateIsBinding
  id: UpdateIsBinding
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: UpdateIsBinding()
  nameWithType: CurrencyManager.UpdateIsBinding()
  fullName: System.Windows.Forms.CurrencyManager.UpdateIsBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Updates the status of the binding."
  syntax:
    content: protected override void UpdateIsBinding ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.UpdateIsBinding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: System.Windows.Forms.BindingManagerBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Windows.Forms.CurrencyManager.AddNew
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: AddNew()
  nameWithType: CurrencyManager.AddNew()
  fullName: System.Windows.Forms.CurrencyManager.AddNew()
- uid: System.Windows.Forms.CurrencyManager.CancelCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CancelCurrentEdit()
  nameWithType: CurrencyManager.CancelCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.CancelCurrentEdit()
- uid: System.Windows.Forms.CurrencyManager.CheckEmpty
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CheckEmpty()
  nameWithType: CurrencyManager.CheckEmpty()
  fullName: System.Windows.Forms.CurrencyManager.CheckEmpty()
- uid: System.Windows.Forms.CurrencyManager.Count
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Count
  nameWithType: CurrencyManager.Count
  fullName: System.Windows.Forms.CurrencyManager.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.CurrencyManager.Current
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Current
  nameWithType: CurrencyManager.Current
  fullName: System.Windows.Forms.CurrencyManager.Current
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.CurrencyManager.EndCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: EndCurrentEdit()
  nameWithType: CurrencyManager.EndCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.EndCurrentEdit()
- uid: System.Windows.Forms.CurrencyManager.finalType
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: finalType
  nameWithType: CurrencyManager.finalType
  fullName: System.Windows.Forms.CurrencyManager.finalType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.CurrencyManager.GetItemProperties
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetItemProperties()
  nameWithType: CurrencyManager.GetItemProperties()
  fullName: System.Windows.Forms.CurrencyManager.GetItemProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetListName(ArrayList)
  nameWithType: CurrencyManager.GetListName(ArrayList)
  fullName: System.Windows.Forms.CurrencyManager.GetListName(ArrayList)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Windows.Forms.CurrencyManager.ItemChanged
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ItemChanged
  nameWithType: CurrencyManager.ItemChanged
  fullName: System.Windows.Forms.CurrencyManager.ItemChanged
- uid: System.Windows.Forms.ItemChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: ItemChangedEventHandler
  nameWithType: ItemChangedEventHandler
  fullName: System.Windows.Forms.ItemChangedEventHandler
- uid: System.Windows.Forms.CurrencyManager.List
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: List
  nameWithType: CurrencyManager.List
  fullName: System.Windows.Forms.CurrencyManager.List
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Forms.CurrencyManager.ListChanged
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ListChanged
  nameWithType: CurrencyManager.ListChanged
  fullName: System.Windows.Forms.CurrencyManager.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.Windows.Forms.CurrencyManager.listposition
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: listposition
  nameWithType: CurrencyManager.listposition
  fullName: System.Windows.Forms.CurrencyManager.listposition
- uid: System.Windows.Forms.CurrencyManager.MetaDataChanged
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: MetaDataChanged
  nameWithType: CurrencyManager.MetaDataChanged
  fullName: System.Windows.Forms.CurrencyManager.MetaDataChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(EventArgs)
- uid: System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnItemChanged(ItemChangedEventArgs)
  nameWithType: CurrencyManager.OnItemChanged(ItemChangedEventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnItemChanged(ItemChangedEventArgs)
- uid: System.Windows.Forms.ItemChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: ItemChangedEventArgs
  nameWithType: ItemChangedEventArgs
  fullName: System.Windows.Forms.ItemChangedEventArgs
- uid: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnMetaDataChanged(EventArgs)
  nameWithType: CurrencyManager.OnMetaDataChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(EventArgs)
- uid: System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnPositionChanged(EventArgs)
  nameWithType: CurrencyManager.OnPositionChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnPositionChanged(EventArgs)
- uid: System.Windows.Forms.CurrencyManager.Position
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Position
  nameWithType: CurrencyManager.Position
  fullName: System.Windows.Forms.CurrencyManager.Position
- uid: System.Windows.Forms.CurrencyManager.Refresh
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Refresh()
  nameWithType: CurrencyManager.Refresh()
  fullName: System.Windows.Forms.CurrencyManager.Refresh()
- uid: System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: CurrencyManager.RemoveAt(Int32)
  fullName: System.Windows.Forms.CurrencyManager.RemoveAt(Int32)
- uid: System.Windows.Forms.CurrencyManager.ResumeBinding
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ResumeBinding()
  nameWithType: CurrencyManager.ResumeBinding()
  fullName: System.Windows.Forms.CurrencyManager.ResumeBinding()
- uid: System.Windows.Forms.CurrencyManager.SuspendBinding
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: SuspendBinding()
  nameWithType: CurrencyManager.SuspendBinding()
  fullName: System.Windows.Forms.CurrencyManager.SuspendBinding()
- uid: System.Windows.Forms.CurrencyManager.UpdateIsBinding
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: UpdateIsBinding()
  nameWithType: CurrencyManager.UpdateIsBinding()
  fullName: System.Windows.Forms.CurrencyManager.UpdateIsBinding()
- uid: System.Windows.Forms.CurrencyManager.AddNew*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: AddNew
  nameWithType: CurrencyManager.AddNew
- uid: System.Windows.Forms.CurrencyManager.CancelCurrentEdit*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CancelCurrentEdit
  nameWithType: CurrencyManager.CancelCurrentEdit
- uid: System.Windows.Forms.CurrencyManager.CheckEmpty*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CheckEmpty
  nameWithType: CurrencyManager.CheckEmpty
- uid: System.Windows.Forms.CurrencyManager.Count*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Count
  nameWithType: CurrencyManager.Count
- uid: System.Windows.Forms.CurrencyManager.Current*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Current
  nameWithType: CurrencyManager.Current
- uid: System.Windows.Forms.CurrencyManager.EndCurrentEdit*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: EndCurrentEdit
  nameWithType: CurrencyManager.EndCurrentEdit
- uid: System.Windows.Forms.CurrencyManager.GetItemProperties*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetItemProperties
  nameWithType: CurrencyManager.GetItemProperties
- uid: System.Windows.Forms.CurrencyManager.GetListName*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetListName
  nameWithType: CurrencyManager.GetListName
- uid: System.Windows.Forms.CurrencyManager.List*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: List
  nameWithType: CurrencyManager.List
- uid: System.Windows.Forms.CurrencyManager.OnCurrentChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentChanged
  nameWithType: CurrencyManager.OnCurrentChanged
- uid: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentItemChanged
  nameWithType: CurrencyManager.OnCurrentItemChanged
- uid: System.Windows.Forms.CurrencyManager.OnItemChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnItemChanged
  nameWithType: CurrencyManager.OnItemChanged
- uid: System.Windows.Forms.CurrencyManager.OnMetaDataChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnMetaDataChanged
  nameWithType: CurrencyManager.OnMetaDataChanged
- uid: System.Windows.Forms.CurrencyManager.OnPositionChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnPositionChanged
  nameWithType: CurrencyManager.OnPositionChanged
- uid: System.Windows.Forms.CurrencyManager.Position*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Position
  nameWithType: CurrencyManager.Position
- uid: System.Windows.Forms.CurrencyManager.Refresh*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Refresh
  nameWithType: CurrencyManager.Refresh
- uid: System.Windows.Forms.CurrencyManager.RemoveAt*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: RemoveAt
  nameWithType: CurrencyManager.RemoveAt
- uid: System.Windows.Forms.CurrencyManager.ResumeBinding*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ResumeBinding
  nameWithType: CurrencyManager.ResumeBinding
- uid: System.Windows.Forms.CurrencyManager.SuspendBinding*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: SuspendBinding
  nameWithType: CurrencyManager.SuspendBinding
- uid: System.Windows.Forms.CurrencyManager.UpdateIsBinding*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: UpdateIsBinding
  nameWithType: CurrencyManager.UpdateIsBinding
