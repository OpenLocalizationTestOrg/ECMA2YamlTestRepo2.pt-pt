### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaDataMember
  id: MetaDataMember
  children:
  - System.Data.Linq.Mapping.MetaDataMember.#ctor
  - System.Data.Linq.Mapping.MetaDataMember.Association
  - System.Data.Linq.Mapping.MetaDataMember.AutoSync
  - System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  - System.Data.Linq.Mapping.MetaDataMember.DbType
  - System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  - System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  - System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Expression
  - System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  - System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  - System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  - System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  - System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  - System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  - System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  - System.Data.Linq.Mapping.MetaDataMember.IsVersion
  - System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  - System.Data.Linq.Mapping.MetaDataMember.MappedName
  - System.Data.Linq.Mapping.MetaDataMember.Member
  - System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Name
  - System.Data.Linq.Mapping.MetaDataMember.Ordinal
  - System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  - System.Data.Linq.Mapping.MetaDataMember.StorageMember
  - System.Data.Linq.Mapping.MetaDataMember.Type
  - System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  langs:
  - csharp
  name: MetaDataMember
  nameWithType: MetaDataMember
  fullName: System.Data.Linq.Mapping.MetaDataMember
  type: Class
  summary: "Representa o mapeamento entre um campo ou uma propriedade de um objeto de domínio para uma coluna de uma tabela de base de dados."
  syntax:
    content: public abstract class MetaDataMember
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Linq.Mapping.MetaDataMember&quot;> </xref> classe."
  syntax:
    content: protected MetaDataMember ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  id: Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> que corresponde a este membro."
  remarks: "Esta propriedade representa uma associação de base de dados, como uma chave externa a relação de chave primária."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAssociation
      description: "Correspondente <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> se existe um; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.Association*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  id: AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o comportamento de repetição de leitura para este membro para inserção e operações de atualização."
  syntax:
    content: public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }
    return:
      type: System.Data.Linq.Mapping.AutoSync
      description: "Um <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> enumeração."
  overload: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  id: CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se o valor deste membro pode ser atribuído a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valor."
  remarks: "Esta propriedade está dependente do <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>propriedade e são fornecidas para sua comodidade.</xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>"
  syntax:
    content: public abstract bool CanBeNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro pode ser atribuído a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o tipo da coluna de base de dados correspondente."
  remarks: "Este será o texto exato utilizado para definir a coluna num comando de declaração de tabela de Transact-SQL. Se não, por isso, definido, o tipo de coluna de base de dados é inferido a partir do tipo de membro."
  syntax:
    content: public abstract string DbType { get; }
    return:
      type: System.String
      description: "O tipo da coluna como uma cadeia de base de dados."
  overload: System.Data.Linq.Mapping.MetaDataMember.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  id: DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> que contém este membro de dados."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "O meta-tipo que contém o membro atual."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  id: DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o descritor de acesso que é utilizado para obter e definir a origem diferida deste membro."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "O descritor de acesso utilizada para aceder à origem de diferida para este membro."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  id: DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o descritor de acesso que é utilizado para obter e definir o valor deste membro deferido (sem causar obtenção)."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "O descritor de acesso utilizada para aceder ao valor diferido para este membro."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  id: Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém a expressão que define uma coluna calculada."
  syntax:
    content: public abstract string Expression { get; }
    return:
      type: System.String
      description: "A expressão para a coluna calculada como uma cadeia."
  overload: System.Data.Linq.Mapping.MetaDataMember.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  id: IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se este membro define uma relação de associação."
  syntax:
    content: public abstract bool IsAssociation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro define uma relação de associação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  id: IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se este membro é gerado automaticamente pela base de dados."
  remarks: "Gerado automaticamente membros são sincronizados imediatamente após a linha de dados correspondente é inserida. Inserir chave gerada do acionador valores não são suportados."
  syntax:
    content: public abstract bool IsDbGenerated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro é gerado automaticamente pela base de dados; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  id: IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Especifica se este membro é declarado pelo tipo especificado."
  syntax:
    content: public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);
    parameters:
    - id: type
      type: System.Data.Linq.Mapping.MetaType
      description: "O tipo de verificação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro é declarado pelo tipo especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  id: IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se o comportamento predefinido é carregar este membro numa base diferida."
  syntax:
    content: public abstract bool IsDeferred { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro carregada de forma diferida por predefinição; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  id: IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se este membro representa o discriminador de herança."
  remarks: "Esta propriedade pode ser `true` para no máximo, um membro de mais superiores de mapeado classe numa hierarquia."
  syntax:
    content: public abstract bool IsDiscriminator { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro representa o discriminador de herança; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  id: IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se este membro está mapeado para uma coluna (ou restrição)."
  remarks: "Uma classe pode ter uma combinação de membros persistentes e não persistente. Membros persistentes são mapeados enquanto não se encontram mapeados membros não persistente. Uma classe mapeada tem de ter pelo menos um membro persistente."
  syntax:
    content: public abstract bool IsPersistent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro está mapeado para uma coluna (ou restrição); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se este membro é parte da identidade de tipo."
  remarks: "Se esta propriedade é `true`, o membro de classe representa uma coluna que faz parte de chave exclusiva da tabela. Mais do que um membro da classe pode ter esta propriedade definida como `true` para uma chave que é um compostos das colunas associados. Para uma classe de entidade, pelo menos um membro tem de ter este atributo e deve ser mapeado para a chave primária ou uma chave única na tabela correspondente ou de vista. Caso contrário, o LINQ to SQL considera instâncias da classe como só de leitura com o objetivo de submeter as alterações à base de dados.       O conjunto de colunas identificado com IsPrimaryKey não são necessários para a chave primária. Estes simplesmente denotam um conjunto que identifica de forma exclusiva a entidade. As alternativas comuns incluem clustering colunas de índice ou outras colunas de chaves exclusivas."
  syntax:
    content: public abstract bool IsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro faz parte da identidade do tipo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  id: IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém se este membro representa a versão de linha ou o carimbo."
  remarks: "Números de versão são incrementados e colunas timestamp são atualizadas sempre que a linha associada é atualizada."
  syntax:
    content: public abstract bool IsVersion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro representa a versão de linha ou timestamp; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  id: LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> método que é utilizado para executar operações de carga."
  syntax:
    content: public abstract System.Reflection.MethodInfo LoadMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "O método de carregamento como <xref:System.Reflection.MethodInfo>.</xref:System.Reflection.MethodInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  id: MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o nome da coluna (ou restrição) na base de dados."
  syntax:
    content: public abstract string MappedName { get; }
    return:
      type: System.String
      description: "O nome da coluna (ou restrição) como uma cadeia."
  overload: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  id: Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o <xref:System.Reflection.MemberInfo>.</xref:System.Reflection.MemberInfo> subjacente"
  syntax:
    content: public abstract System.Reflection.MemberInfo Member { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Informações de atributo e metadados de membro."
  overload: System.Data.Linq.Mapping.MetaDataMember.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  id: MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o descritor de acesso que é utilizado para obter ou definir o valor deste membro."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "O acessor."
  overload: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  id: Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o nome de membro, mesmo que o <xref:System.Reflection.MemberInfo>nome.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "O nome do utilizador, mesmo que o <xref:System.Reflection.MemberInfo>nome.</xref:System.Reflection.MemberInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  id: Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém a posição ordinal deste membro no esquema predefinido dos resultados da consulta."
  syntax:
    content: public abstract int Ordinal { get; }
    return:
      type: System.Int32
      description: "A posição ordinal."
  overload: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  id: StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o descritor de acesso que é utilizado para obter ou definir o valor de armazenamento deste membro."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "O acessor para o valor de armazenamento deste membro."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  id: StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o membro que armazena os dados para este membro."
  syntax:
    content: public abstract System.Reflection.MemberInfo StorageMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "O membro de armazenamento."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  id: Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém o tipo deste membro."
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "O tipo do membro atual."
  overload: System.Data.Linq.Mapping.MetaDataMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  id: UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Obtém a política de verificação de concorrência otimista para este membro."
  remarks: "Se a classe não tem um membro de versão (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> definido como `true`), a deteção é feita ao comparar valores originais de membro com o estado atual da base de dados.</xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A>       A propriedade UpdateCheck determina como o LINQ to SQL implementa a deteção de conflitos em simultaneidade otimista. Apenas os membros com esta propriedade é definida como <xref:System.Data.Linq.Mapping.UpdateCheck>ou <xref:System.Data.Linq.Mapping.UpdateCheck>são considerados durante a deteção de conflitos.</xref:System.Data.Linq.Mapping.UpdateCheck> </xref:System.Data.Linq.Mapping.UpdateCheck>"
  syntax:
    content: public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }
    return:
      type: System.Data.Linq.Mapping.UpdateCheck
      description: "An <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;></xref> enum."
  overload: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaAssociation
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAssociation
  nameWithType: MetaAssociation
  fullName: System.Data.Linq.Mapping.MetaAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.AutoSync
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: AutoSync
  nameWithType: AutoSync
  fullName: System.Data.Linq.Mapping.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaType
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaAccessor
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAccessor
  nameWithType: MetaAccessor
  fullName: System.Data.Linq.Mapping.MetaAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
- uid: System.Data.Linq.Mapping.UpdateCheck
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: UpdateCheck
  nameWithType: UpdateCheck
  fullName: System.Data.Linq.Mapping.UpdateCheck
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember
  nameWithType: MetaDataMember.MetaDataMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Association*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy
  nameWithType: MetaDataMember.IsDeclaredBy
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
