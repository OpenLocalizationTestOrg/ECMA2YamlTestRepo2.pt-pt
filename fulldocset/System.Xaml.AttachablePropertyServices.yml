### YamlMime:ManagedReference
items:
- uid: System.Xaml.AttachablePropertyServices
  id: AttachablePropertyServices
  children:
  - System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  - System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  - System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  - System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  - System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  - System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  langs:
  - csharp
  name: AttachablePropertyServices
  nameWithType: AttachablePropertyServices
  fullName: System.Xaml.AttachablePropertyServices
  type: Class
  summary: "Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store."
  remarks: "Most functionality in this class relies on an attached property store, which generally implements the <xref:System.Xaml.IAttachedPropertyStore> interface. However, parameters for passing the store into AttachablePropertyServices are not typed as the interface and are instead typed as `object`. This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.       Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store. Do not pass `null` to indicate that you do not have an <xref:System.Xaml.IAttachedPropertyStore> to use. Passing `null` enters code paths that do nothing. Passing an object that is non-null, but evaluates as `null` on an attempted <xref:System.Xaml.IAttachedPropertyStore> cast, uses the default attachable property store."
  syntax:
    content: public static class AttachablePropertyServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  id: CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Copies all attachable property/value pairs from a specified attachable property store and into a destination array."
  remarks: "Calling this method invokes an underlying <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic."
  syntax:
    content: public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,object>[] array, int index);
    parameters:
    - id: instance
      type: System.Object
      description: "A specific attachable property store that implements <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;></xref>; or any non-null object to access a static default attachable property store."
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
      description: "The destination array. The array is a generic array, should be passed undimensioned, and should have components of <xref href=&quot;System.Xaml.AttachableMemberIdentifier&quot;></xref> and <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The source index into which to copy."
  overload: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  id: GetAttachedPropertyCount(System.Object)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: GetAttachedPropertyCount(Object)
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)
  fullName: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Returns the count of the attachable property entries that are in the specified store."
  syntax:
    content: public static int GetAttachedPropertyCount (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "A specific attachable property store that implements <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;></xref>; or any non-null object to access a static default attachable property store."
    return:
      type: System.Int32
      description: "The integer count of entries in the store."
  overload: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  id: RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: RemoveProperty(Object,AttachableMemberIdentifier)
  nameWithType: AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  fullName: System.Xaml.AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Removes the entry for the specified attachable property from the specified store."
  remarks: "Stores are per instance; therefore, in a store, the `name` value should be unambiguous."
  syntax:
    content: public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);
    parameters:
    - id: instance
      type: System.Object
      description: "A specific attachable property store that implements <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;></xref>; or any non-null object to access a static default attachable property store."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "The identifier for the attachable property entry to remove from the store."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if an attachable property entry for <code>name</code> was found in the store and removed from it; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.AttachablePropertyServices.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  id: SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: SetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Sets a value for the specified attachable property in the specified store."
  syntax:
    content: public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);
    parameters:
    - id: instance
      type: System.Object
      description: "A specific attachable property store that implements <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;></xref>; or any non-null object to use a static default attachable property store."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "The identifier of the attachable property entry for which to set a value."
    - id: value
      type: System.Object
      description: "The value to set."
  overload: System.Xaml.AttachablePropertyServices.SetProperty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A value could not be set in the store."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  id: TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: TryGetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store."
  syntax:
    content: public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);
    parameters:
    - id: instance
      type: System.Object
      description: "A specific attachable property store that implements <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;></xref>; or any non-null object to use a static default attachable property store."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "The identifier of the attachable property entry for which to get a value."
    - id: value
      type: System.Object
      description: "Out parameter. When this method returns, contains the destination object for the value if `name` exists in the store and has a value."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if an attachable property entry for <code>name</code> was found in the store and a value was posted to <code>value</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.AttachablePropertyServices.TryGetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  id: TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: TryGetProperty(Object,AttachableMemberIdentifier,T)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  syntax:
    content: public static bool TryGetProperty<T> (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);
    parameters:
    - id: instance
      type: System.Object
      description: "To be added."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "To be added."
    - id: value
      type: T
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Xaml.AttachablePropertyServices.TryGetProperty<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<AttachableMemberIdentifier,Object>
  nameWithType: KeyValuePair<AttachableMemberIdentifier,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.AttachableMemberIdentifier
    name: AttachableMemberIdentifier
    nameWithType: AttachableMemberIdentifier
    fullName: AttachableMemberIdentifier
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: GetAttachedPropertyCount(Object)
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)
  fullName: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(Object)
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: RemoveProperty(Object,AttachableMemberIdentifier)
  nameWithType: AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  fullName: System.Xaml.AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.AttachableMemberIdentifier
  parent: System.Xaml
  isExternal: false
  name: AttachableMemberIdentifier
  nameWithType: AttachableMemberIdentifier
  fullName: System.Xaml.AttachableMemberIdentifier
- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: SetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty(Object,AttachableMemberIdentifier,T)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: CopyPropertiesTo
  nameWithType: AttachablePropertyServices.CopyPropertiesTo
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: GetAttachedPropertyCount
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: RemoveProperty
  nameWithType: AttachablePropertyServices.RemoveProperty
- uid: System.Xaml.AttachablePropertyServices.SetProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: SetProperty
  nameWithType: AttachablePropertyServices.SetProperty
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty
  nameWithType: AttachablePropertyServices.TryGetProperty
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty<T>*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty<T>
  nameWithType: AttachablePropertyServices.TryGetProperty<T>
