### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  id: IChartStorageHandler
  children:
  - System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete(System.String)
  - System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists(System.String)
  - System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load(System.String)
  - System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save(System.String,System.Byte[])
  langs:
  - csharp
  name: IChartStorageHandler
  nameWithType: IChartStorageHandler
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  type: Interface
  summary: "Defines methods to manage rendered chart images stored in an external medium."
  syntax:
    content: public interface IChartStorageHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete(System.String)
  id: Delete(System.String)
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  langs:
  - csharp
  name: Delete(String)
  nameWithType: IChartStorageHandler.Delete(String)
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Deletes the data from the external medium."
  syntax:
    content: public void Delete (string key);
    parameters:
    - id: key
      type: System.String
      description: "Index key."
  overload: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists(System.String)
  id: Exists(System.String)
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  langs:
  - csharp
  name: Exists(String)
  nameWithType: IChartStorageHandler.Exists(String)
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Checks for the existence of data under a specified key."
  syntax:
    content: public bool Exists (string key);
    parameters:
    - id: key
      type: System.String
      description: "Index key."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if data exists under specified key, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load(System.String)
  id: Load(System.String)
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  langs:
  - csharp
  name: Load(String)
  nameWithType: IChartStorageHandler.Load(String)
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Loads the data from the external medium."
  syntax:
    content: public byte[] Load (string key);
    parameters:
    - id: key
      type: System.String
      description: "Index key."
    return:
      type: System.Byte[]
      description: "A <xref uid=&quot;langword_csharp_byte&quot; name=&quot;byte&quot; href=&quot;&quot;></xref> array that contains the image data."
  overload: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save(System.String,System.Byte[])
  id: Save(System.String,System.Byte[])
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  langs:
  - csharp
  name: Save(String,Byte[])
  nameWithType: IChartStorageHandler.Save(String,Byte[])
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save(String,Byte[])
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Saves the data to the external medium."
  syntax:
    content: public void Save (string key, byte[] data);
    parameters:
    - id: key
      type: System.String
      description: "Index key."
    - id: data
      type: System.Byte[]
      description: "The image data to save."
  overload: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete(System.String)
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Delete(String)
  nameWithType: IChartStorageHandler.Delete(String)
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists(System.String)
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Exists(String)
  nameWithType: IChartStorageHandler.Exists(String)
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load(System.String)
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Load(String)
  nameWithType: IChartStorageHandler.Load(String)
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save(System.String,System.Byte[])
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Save(String,Byte[])
  nameWithType: IChartStorageHandler.Save(String,Byte[])
  fullName: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save(String,Byte[])
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Delete*
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Delete
  nameWithType: IChartStorageHandler.Delete
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Exists*
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Exists
  nameWithType: IChartStorageHandler.Exists
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Load*
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Load
  nameWithType: IChartStorageHandler.Load
- uid: System.Web.UI.DataVisualization.Charting.IChartStorageHandler.Save*
  parent: System.Web.UI.DataVisualization.Charting.IChartStorageHandler
  isExternal: false
  name: Save
  nameWithType: IChartStorageHandler.Save
