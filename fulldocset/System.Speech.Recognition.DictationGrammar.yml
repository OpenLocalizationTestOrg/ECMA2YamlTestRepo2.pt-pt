### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.DictationGrammar
  id: DictationGrammar
  children:
  - System.Speech.Recognition.DictationGrammar.#ctor
  - System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  - System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  langs:
  - csharp
  name: DictationGrammar
  nameWithType: DictationGrammar
  fullName: System.Speech.Recognition.DictationGrammar
  type: Class
  summary: "Represents a speech recognition grammar used for free text dictation."
  remarks: "This class provides applications with a predefined language model that can process spoken user input into text. This class supports both default and custom DictationGrammar objects. For information about selecting a dictation grammar, see the <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29> constructor.       By default, the DictationGrammar language model is context free. It does not make use of specific words or word order to identify and interpret audio input. To add context to the dictation grammar, use the <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method.      > [!NOTE] >  DictationGrammar objects do not support the <xref:System.Speech.Recognition.Grammar.Priority%2A> property. DictationGrammar throws a <xref:System.NotSupportedException> if <xref:System.Speech.Recognition.Grammar.Priority%2A> is set."
  example:
  - "The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object. The first grammar is the default dictation grammar. The second grammar is the spelling dictation grammar. The third grammar is the default dictation grammar that includes a context phrase. The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine LoadDictationGrammars()  \n{  \n  \n  // Create a default dictation grammar.  \n  DictationGrammar defaultDictationGrammar = new DictationGrammar();  \n  defaultDictationGrammar.Name = \"default dictation\";  \n  defaultDictationGrammar.Enabled = true;  \n  \n  // Create the spelling dictation grammar.  \n  DictationGrammar spellingDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation#spelling\");  \n  spellingDictationGrammar.Name = \"spelling dictation\";  \n  spellingDictationGrammar.Enabled = true;  \n  \n  // Create the question dictation grammar.  \n  DictationGrammar customDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation\");  \n  customDictationGrammar.Name = \"question dictation\";  \n  customDictationGrammar.Enabled = true;  \n  \n  // Create a SpeechRecognitionEngine object and add the grammars to it.  \n  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  \n  recoEngine.LoadGrammar(defaultDictationGrammar);  \n  recoEngine.LoadGrammar(spellingDictationGrammar);  \n  recoEngine.LoadGrammar(customDictationGrammar);  \n  \n  // Add a context to customDictationGrammar.  \n  customDictationGrammar.SetDictationContext(\"How do you\", null);  \n  \n  return recoEngine;  \n}  \n  \n```"
  syntax:
    content: 'public class DictationGrammar : System.Speech.Recognition.Grammar'
  inheritance:
  - System.Object
  - System.Speech.Recognition.Grammar
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initializes a new instance of the <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;></xref> class for the default dictation grammar provided by Windows Desktop Speech Technology."
  remarks: "The default dictation grammar emulates standard dictation practices, including punctuation. It does not support the spelling of a word."
  syntax:
    content: public DictationGrammar ();
    parameters: []
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Initializes a new instance of the <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;></xref> class with a specific dictation grammar."
  remarks: "The Speech platform uses a specialized URI syntax to define the custom dictation grammar. The value `grammar:dictation` indicates the default dictation grammar. The value `grammar:dictation#spelling` indicates the spelling dictation grammar."
  syntax:
    content: public DictationGrammar (string topic);
    parameters:
    - id: topic
      type: System.String
      description: "An XML-compliant Universal Resource Identifier (URI) that specifies the dictation grammar, either `grammar:dictation` or `grammar:dictation#spelling`."
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  id: SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Adds a context to a dictation grammar that has been loaded by a <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;></xref> or a <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;></xref> object."
  remarks: "By default, the dictation grammar does not make use of specific words or word order to identify and interpret audio input. When a context is added to a dictation grammar, the recognition engine uses the `precedingText` and `subsequentText` to identify when to interpret speech as dictation.      > [!NOTE] >  A dictation grammar must be loaded by a <xref:System.Speech.Recognition.SpeechRecognizer> or <xref:System.Speech.Recognition.SpeechRecognitionEngine> object before you can use SetDictationContext to add a context.       The following table describes how the recognition engine uses the two parameters to determine when to use the dictation grammar.      |`precedingText`|`subsequentText`|Description|   |---------------------|----------------------|-----------------|   |not `null`|not `null`|The recognition engine uses the terms to bracket possible candidate phrases.|   |`null`|not `null`|The recognition engine uses the `subsequentText` to finish dictation.|   |not `null`|`null`|The recognition engine uses the `precedingText` to start dictation.|   |`null`|`null`|The recognition engine does not use a context when using the dictation grammar.|"
  syntax:
    content: public void SetDictationContext (string precedingText, string subsequentText);
    parameters:
    - id: precedingText
      type: System.String
      description: "Text that indicates the start of a dictation context."
    - id: subsequentText
      type: System.String
      description: "Text that indicates the end of a dictation context."
  overload: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.Grammar
  isExternal: false
  name: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
- uid: System.Speech.Recognition.DictationGrammar.#ctor*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar
  nameWithType: DictationGrammar.DictationGrammar
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext
  nameWithType: DictationGrammar.SetDictationContext
