### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.DictationGrammar
  id: DictationGrammar
  children:
  - System.Speech.Recognition.DictationGrammar.#ctor
  - System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  - System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  langs:
  - csharp
  name: DictationGrammar
  nameWithType: DictationGrammar
  fullName: System.Speech.Recognition.DictationGrammar
  type: Class
  summary: "Representa uma gramática de reconhecimento de voz utilizada para ditado texto livre."
  remarks: "Esta classe fornece às aplicações com um modelo de idiomas predefinidos que pode processar a entrada de utilizador ditas texto. Esta classe suporta predefinidos e personalizados objectos DictationGrammar. Para obter informações sobre como selecionar uma gramática ditado, consulte o <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>construtor.</xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>       Por predefinição, o modelo de linguagem DictationGrammar é livre de contexto. Não faz a utilização de palavras específicas ou ordem para identificar e interpretar a entrada de áudio do word. Para adicionar o contexto para a gramática de ditado, utilize o <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>método.</xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>      > [!NOTE] > Objectos DictationGrammar não suportam o <xref:System.Speech.Recognition.Grammar.Priority%2A>propriedade.</xref:System.Speech.Recognition.Grammar.Priority%2A> DictationGrammar emite um <xref:System.NotSupportedException>se <xref:System.Speech.Recognition.Grammar.Priority%2A>está definido.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.NotSupportedException>"
  example:
  - "The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object. The first grammar is the default dictation grammar. The second grammar is the spelling dictation grammar. The third grammar is the default dictation grammar that includes a context phrase. The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine LoadDictationGrammars()  \n{  \n  \n  // Create a default dictation grammar.  \n  DictationGrammar defaultDictationGrammar = new DictationGrammar();  \n  defaultDictationGrammar.Name = \"default dictation\";  \n  defaultDictationGrammar.Enabled = true;  \n  \n  // Create the spelling dictation grammar.  \n  DictationGrammar spellingDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation#spelling\");  \n  spellingDictationGrammar.Name = \"spelling dictation\";  \n  spellingDictationGrammar.Enabled = true;  \n  \n  // Create the question dictation grammar.  \n  DictationGrammar customDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation\");  \n  customDictationGrammar.Name = \"question dictation\";  \n  customDictationGrammar.Enabled = true;  \n  \n  // Create a SpeechRecognitionEngine object and add the grammars to it.  \n  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  \n  recoEngine.LoadGrammar(defaultDictationGrammar);  \n  recoEngine.LoadGrammar(spellingDictationGrammar);  \n  recoEngine.LoadGrammar(customDictationGrammar);  \n  \n  // Add a context to customDictationGrammar.  \n  customDictationGrammar.SetDictationContext(\"How do you\", null);  \n  \n  return recoEngine;  \n}  \n  \n```"
  syntax:
    content: 'public class DictationGrammar : System.Speech.Recognition.Grammar'
  inheritance:
  - System.Object
  - System.Speech.Recognition.Grammar
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> classe para a gramática de ditado predefinido fornecida pela tecnologia de reconhecimento de voz de ambiente de trabalho do Windows."
  remarks: "A gramática de ditado predefinido emula práticas ditado padrão, incluindo pontuação. Não suporta a ortografia de uma palavra."
  syntax:
    content: public DictationGrammar ();
    parameters: []
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> classe com uma gramática ditado específico."
  remarks: "A plataforma de voz utiliza uma sintaxe URI especializada para definir a gramática de ditado personalizado. O valor `grammar:dictation` indica a gramática de ditado predefinido. O valor `grammar:dictation#spelling` indica a gramática de ditado ortografia."
  syntax:
    content: public DictationGrammar (string topic);
    parameters:
    - id: topic
      type: System.String
      description: "Um XML compatível Universal Resource Identifier (URI) que especifica a gramática de ditado ou `grammar:dictation` ou `grammar:dictation#spelling`."
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  id: SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Adiciona um contexto de uma gramática ditado que foi carregado por um <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> ou um <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> objeto."
  remarks: "Por predefinição, a gramática de ditado torne a utilização de palavras específicas ordem para identificar e interpretar a entrada de áudio do word. Quando é adicionado um contexto de uma gramática ditado, utiliza o motor de reconhecimento de `precedingText` e `subsequentText` para identificar quando interpretar reconhecimento de voz como ditado.      > [!NOTE] > Uma gramática ditado têm de ser carregada por um <xref:System.Speech.Recognition.SpeechRecognizer>ou <xref:System.Speech.Recognition.SpeechRecognitionEngine>antes de poder utilizar SetDictationContext para adicionar um contexto de objeto.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer>       A tabela seguinte descreve como o motor de reconhecimento utiliza os dois parâmetros para determinar quando deve utilizar a gramática de ditado.      | `precedingText`|`subsequentText`| Descrição |   |---------------------|----------------------|-----------------|   |not `null`|not `null`| O motor de reconhecimento utiliza os termos de licenciamento para Reto expressões possíveis candidatos. |   | `null`|not `null`| Utiliza o motor de reconhecimento de `subsequentText` para concluir ditado. |   |not `null`|`null`| Utiliza o motor de reconhecimento de `precedingText` Iniciar ditado. |   | `null`|`null`| O motor de reconhecimento não utiliza um contexto quando utilizar a gramática de ditado. |"
  syntax:
    content: public void SetDictationContext (string precedingText, string subsequentText);
    parameters:
    - id: precedingText
      type: System.String
      description: "Texto que indica o início de um contexto de ditado."
    - id: subsequentText
      type: System.String
      description: "Texto que indica o fim de um contexto de ditado."
  overload: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.Grammar
  isExternal: false
  name: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
- uid: System.Speech.Recognition.DictationGrammar.#ctor*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar
  nameWithType: DictationGrammar.DictationGrammar
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext
  nameWithType: DictationGrammar.SetDictationContext
