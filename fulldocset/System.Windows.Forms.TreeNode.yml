### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TreeNode
  id: TreeNode
  children:
  - System.Windows.Forms.TreeNode.#ctor
  - System.Windows.Forms.TreeNode.#ctor(System.String)
  - System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNode.BackColor
  - System.Windows.Forms.TreeNode.BeginEdit
  - System.Windows.Forms.TreeNode.Bounds
  - System.Windows.Forms.TreeNode.Checked
  - System.Windows.Forms.TreeNode.Clone
  - System.Windows.Forms.TreeNode.Collapse
  - System.Windows.Forms.TreeNode.Collapse(System.Boolean)
  - System.Windows.Forms.TreeNode.ContextMenu
  - System.Windows.Forms.TreeNode.ContextMenuStrip
  - System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.EndEdit(System.Boolean)
  - System.Windows.Forms.TreeNode.EnsureVisible
  - System.Windows.Forms.TreeNode.Expand
  - System.Windows.Forms.TreeNode.ExpandAll
  - System.Windows.Forms.TreeNode.FirstNode
  - System.Windows.Forms.TreeNode.ForeColor
  - System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  - System.Windows.Forms.TreeNode.FullPath
  - System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)
  - System.Windows.Forms.TreeNode.Handle
  - System.Windows.Forms.TreeNode.ImageIndex
  - System.Windows.Forms.TreeNode.ImageKey
  - System.Windows.Forms.TreeNode.Index
  - System.Windows.Forms.TreeNode.IsEditing
  - System.Windows.Forms.TreeNode.IsExpanded
  - System.Windows.Forms.TreeNode.IsSelected
  - System.Windows.Forms.TreeNode.IsVisible
  - System.Windows.Forms.TreeNode.LastNode
  - System.Windows.Forms.TreeNode.Level
  - System.Windows.Forms.TreeNode.Name
  - System.Windows.Forms.TreeNode.NextNode
  - System.Windows.Forms.TreeNode.NextVisibleNode
  - System.Windows.Forms.TreeNode.NodeFont
  - System.Windows.Forms.TreeNode.Nodes
  - System.Windows.Forms.TreeNode.Parent
  - System.Windows.Forms.TreeNode.PrevNode
  - System.Windows.Forms.TreeNode.PrevVisibleNode
  - System.Windows.Forms.TreeNode.Remove
  - System.Windows.Forms.TreeNode.SelectedImageIndex
  - System.Windows.Forms.TreeNode.SelectedImageKey
  - System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.StateImageIndex
  - System.Windows.Forms.TreeNode.StateImageKey
  - System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Windows.Forms.TreeNode.Tag
  - System.Windows.Forms.TreeNode.Text
  - System.Windows.Forms.TreeNode.Toggle
  - System.Windows.Forms.TreeNode.ToolTipText
  - System.Windows.Forms.TreeNode.ToString
  - System.Windows.Forms.TreeNode.TreeView
  langs:
  - csharp
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
  type: Class
  summary: "Represents a node of a <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>."
  remarks: "The <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection holds all the child TreeNode objects assigned to the current TreeNode. You can add, remove, or clone a TreeNode; when you do this, all child tree nodes are added, removed, or cloned. Each TreeNode can contain a collection of other TreeNode objects. This can make it difficult to determine where you are in the <xref:System.Windows.Forms.TreeView> when iterating through the collection. To determine your location in a tree structure, use the <xref:System.Windows.Forms.TreeNode.FullPath%2A> property. The <xref:System.Windows.Forms.TreeNode.FullPath%2A> string can be parsed using the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> string value to determine where a TreeNode label begins and ends.       The TreeNode label is set by setting the <xref:System.Windows.Forms.TreeNode.Text%2A> property explicitly. The alternative is to create the tree node using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the <xref:System.Windows.Forms.TreeNode.Text%2A> property. The label is displayed next to the TreeNode image, if one is displayed.       To display images next to the tree nodes, assign an <xref:System.Windows.Forms.ImageList> to the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control and assign an <xref:System.Drawing.Image> by referencing its index value in the <xref:System.Windows.Forms.ImageList> property. Set the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is in an unselected state. Likewise, set the <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> property to the index value of the <xref:System.Drawing.Image> you want to display when the TreeNode is selected.       Selecting specific tree nodes and iterating through the <xref:System.Windows.Forms.TreeView.Nodes%2A> collection can be achieved by using the following property values: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>. Assign the TreeNode returned by one of aforementioned properties to the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property to select that tree node in the <xref:System.Windows.Forms.TreeView> control.       Tree nodes can be expanded to display the next level of child tree nodes. The user can expand the TreeNode by pressing the plus (+) button next to the TreeNode, if one is displayed, or you can expand the TreeNode by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method. To expand all child tree node levels in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection, call the <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> method. You can collapse the child TreeNode level by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method, or the user can press the minus (-) button next to the TreeNode, if one is displayed. You can also call the <xref:System.Windows.Forms.TreeNode.Toggle%2A> method to alternate the TreeNode between the expanded and collapsed states.       Tree nodes can optionally display a check box. To display the check boxes, set the <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> property of the <xref:System.Windows.Forms.TreeView> to `true`. The <xref:System.Windows.Forms.TreeNode.Checked%2A> property is set to `true` for tree nodes that are in a checked state."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the TreeNode objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_1_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/t-system.windows.forms.t_1_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/t-system.windows.forms.t_1_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))]

      public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Windows.Forms.TreeNode.TreeNode()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/m-system.windows.forms.t_46_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/m-system.windows.forms.t_46_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_46_1.vb)]"
  syntax:
    content: public TreeNode ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> class with the specified label text."
  remarks: "The `text` parameter value is assigned to the node&quot;s <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_17_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_17_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_17_1.cpp)]"
  syntax:
    content: public TreeNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.TreeNode(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.TreeNode(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> class using the specified serialization information and context."
  syntax:
    content: protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> that contains the data to deserialize the class."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream."
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])
  id: '#ctor(System.String,System.Windows.Forms.TreeNode[])'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,TreeNode[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> class with the specified label text and child tree nodes."
  remarks: "The `text` parameter value is assigned to the node&quot;s <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property."
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/f9da6810-4d20-4683-b032-_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/f9da6810-4d20-4683-b032-_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/f9da6810-4d20-4683-b032-_1.vb)]"
  syntax:
    content: public TreeNode (string text, System.Windows.Forms.TreeNode[] children);
    parameters:
    - id: text
      type: System.String
      description: "The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."
    - id: children
      type: System.Windows.Forms.TreeNode[]
      description: "An array of child <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> objects."
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String,Int32,Int32)
  nameWithType: TreeNode.TreeNode(String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> class with the specified label text and images to display when the tree node is in a selected and unselected state."
  remarks: "The `text` parameter value is assigned to the node&quot;s <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property. The image referenced in the `imageIndex` property is displayed when the tree node is not selected. Likewise, the image referenced in the `selectedImageIndex` property is displayed when the tree node is in a selected state."
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/8c41dd24-47e3-4299-bfdf-_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/8c41dd24-47e3-4299-bfdf-_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/8c41dd24-47e3-4299-bfdf-_1.cs)]"
  syntax:
    content: public TreeNode (string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: text
      type: System.String
      description: "The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."
    - id: imageIndex
      type: System.Int32
      description: "The index value of <xref href=&quot;System.Drawing.Image&quot;></xref> to display when the tree node is unselected."
    - id: selectedImageIndex
      type: System.Int32
      description: "The index value of <xref href=&quot;System.Drawing.Image&quot;></xref> to display when the tree node is selected."
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])
  id: '#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])'
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeNode(String,Int32,Int32,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> class with the specified label text, child tree nodes, and images to display when the tree node is in a selected and unselected state."
  remarks: "The `text` parameter value is assigned to the node&quot;s <xref:System.Windows.Forms.TreeNode.Text%2A> property and becomes the tree node label. The `imageIndex` and `selectedImageIndex` values are the index values of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property. The image referenced in the `imageIndex` parameter is displayed when the tree node is not selected. Likewise, the image referenced in the `selectedImageIndex` parameter is displayed when the tree node is in a selected state. The tree nodes that are contained in the `children` array are added to the <xref:System.Windows.Forms.TreeNodeCollection> that is stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property."
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/737755cf-fb88-4601-a0bc-_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/737755cf-fb88-4601-a0bc-_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/737755cf-fb88-4601-a0bc-_1.cs)]"
  syntax:
    content: public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);
    parameters:
    - id: text
      type: System.String
      description: "The label <xref:System.Windows.Forms.TreeNode.Text*> of the new tree node."
    - id: imageIndex
      type: System.Int32
      description: "The index value of <xref href=&quot;System.Drawing.Image&quot;></xref> to display when the tree node is unselected."
    - id: selectedImageIndex
      type: System.Int32
      description: "The index value of <xref href=&quot;System.Drawing.Image&quot;></xref> to display when the tree node is selected."
    - id: children
      type: System.Windows.Forms.TreeNode[]
      description: "An array of child <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> objects."
  overload: System.Windows.Forms.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.BackColor
  id: BackColor
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: BackColor
  nameWithType: TreeNode.BackColor
  fullName: System.Windows.Forms.TreeNode.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the background color of the tree node."
  remarks: "If the BackColor property is set to <xref:System.Drawing.Color?displayProperty=fullName>, the <xref:System.Drawing.Color> used is the <xref:System.Windows.Forms.Control.BackColor%2A> property value of the <xref:System.Windows.Forms.TreeView> control that the tree node is assigned to."
  example:
  - "The following code example highlights any <xref:System.Windows.Forms.TreeNode> objects a <xref:System.Windows.Forms.TreeView> control that has its <xref:System.Windows.Forms.TreeNode.Checked%2A> property set to `true` by setting its BackColor property to <xref:System.Drawing.Color.Yellow%2A>. This code requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-vb[TreeNode_Checked#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_251_1.vb)]\n [!code-cpp[TreeNode_Checked#1](~/add/codesnippet/cpp/p-system.windows.forms.t_251_1.cpp)]\n [!code-cs[TreeNode_Checked#1](~/add/codesnippet/csharp/p-system.windows.forms.t_251_1.cs)]"
  syntax:
    content: public System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "The background <xref href=&quot;System.Drawing.Color&quot;></xref> of the tree node. The default is <xref href=&quot;System.Drawing.Color&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.BeginEdit
  id: BeginEdit
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: TreeNode.BeginEdit()
  fullName: System.Windows.Forms.TreeNode.BeginEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initiates the editing of the tree node label."
  remarks: "A typical scenario to use this method is to call it on the <xref:System.Windows.Forms.MenuItem.Click> event of a <xref:System.Windows.Forms.MenuItem> or <xref:System.Windows.Forms.ContextMenu>.      > [!NOTE] >  This method only works if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the <xref:System.Windows.Forms.TreeView> is set to `true`. If <xref:System.Windows.Forms.TreeView.LabelEdit%2A> is set to `false`, an exception is thrown and the tree node will not be put into an editable state."
  example:
  - "The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right-clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \n  \n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_77_1.cpp)]\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_77_1.cs)]\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_77_1.vb)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.BeginEdit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '&lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A?displayProperty=fullName&gt; is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.'
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Bounds
  id: Bounds
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Bounds
  nameWithType: TreeNode.Bounds
  fullName: System.Windows.Forms.TreeNode.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the bounds of the tree node."
  remarks: "The coordinates are relative to the upper-left corner of the <xref:System.Windows.Forms.TreeView> control."
  example:
  - "The following code example changes the size <xref:System.Windows.Forms.TreeNode.NodeFont%2A> to the specified size and adjusts the <xref:System.Windows.Forms.TreeView.ItemHeight%2A> of the tree node's parent <xref:System.Windows.Forms.TreeView> control. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView> control with a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.ComboBox> that contains font sizes.  \n  \n [!code-cs[TreeNode_Bounds#2](~/add/codesnippet/csharp/p-system.windows.forms.t_227_1.cs)]\n [!code-cpp[TreeNode_Bounds#2](~/add/codesnippet/cpp/p-system.windows.forms.t_227_1.cpp)]\n [!code-vb[TreeNode_Bounds#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_227_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounds of the tree node."
  overload: System.Windows.Forms.TreeNode.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Checked
  id: Checked
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Windows.Forms.TreeNode.Checked
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the tree node is in a checked state."
  remarks: ''
  example:
  - "The following code example highlights any <xref:System.Windows.Forms.TreeNode> objects a <xref:System.Windows.Forms.TreeView> control that has its Checked property set to `true` by setting its <xref:System.Windows.Forms.TreeNode.BackColor%2A> property to <xref:System.Drawing.Color.Yellow%2A>. This code requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-vb[TreeNode_Checked#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_26_1.vb)]\n [!code-cpp[TreeNode_Checked#1](~/add/codesnippet/cpp/p-system.windows.forms.t_26_1.cpp)]\n [!code-cs[TreeNode_Checked#1](~/add/codesnippet/csharp/p-system.windows.forms.t_26_1.cs)]"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the tree node is in a checked state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Clone
  id: Clone
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Windows.Forms.TreeNode.Clone()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Copies the tree node and the entire subtree rooted at this tree node."
  remarks: "The tree structure from the tree node being cloned and below is copied. Any child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode> being cloned are included in the new tree node and subtree.       The Clone method performs a shallow copy of the node. If the value of the <xref:System.Windows.Forms.TreeNode.Tag%2A> property is a reference type, both the original and cloned copy will point to the same single instance of the <xref:System.Windows.Forms.TreeNode.Tag%2A> value."
  example:
  - "The following code example clones the last child tree node of the last root tree node and inserts the clone as the first root tree node in the `TreeNodeCollection`. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects and a <xref:System.Windows.Forms.Button>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#3](~/add/codesnippet/visualbasic/m-system.windows.forms.t_43_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#3](~/add/codesnippet/csharp/m-system.windows.forms.t_43_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#3](~/add/codesnippet/cpp/m-system.windows.forms.t_43_1.cpp)]"
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "The <xref:System.Object> that represents the cloned <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Collapse
  id: Collapse
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Windows.Forms.TreeNode.Collapse()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Collapses the tree node."
  remarks: "The Collapse method collapses the current <xref:System.Windows.Forms.TreeNode> and its child nodes. If you want to collapse only the current <xref:System.Windows.Forms.TreeNode>, use the <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=fullName> overload, passing `true` to ignore its child nodes.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state."
  example:
  - "The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method, it is collapsed by calling the Collapse method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_7_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/m-system.windows.forms.t_7_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/m-system.windows.forms.t_7_1.cpp)]"
  syntax:
    content: public void Collapse ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Collapse(System.Boolean)
  id: Collapse(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Collapse(Boolean)
  nameWithType: TreeNode.Collapse(Boolean)
  fullName: System.Windows.Forms.TreeNode.Collapse(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Collapses the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> and optionally collapses its children."
  remarks: "Use the Collapse method, passing `true`, when you want to collapse a node but leave its child nodes in their expanded state."
  syntax:
    content: public void Collapse (bool ignoreChildren);
    parameters:
    - id: ignoreChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to leave the child nodes in their current state; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to collapse the child nodes."
  overload: System.Windows.Forms.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ContextMenu
  id: ContextMenu
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ContextMenu
  nameWithType: TreeNode.ContextMenu
  fullName: System.Windows.Forms.TreeNode.ContextMenu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the shortcut menu that is associated with this tree node."
  remarks: "The preferred way to associate a shortcut menu with a tree node is with the <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> property."
  syntax:
    content: public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }
    return:
      type: System.Windows.Forms.ContextMenu
      description: "The <xref href=&quot;System.Windows.Forms.ContextMenu&quot;></xref> that is associated with the tree node."
  overload: System.Windows.Forms.TreeNode.ContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ContextMenuStrip
  id: ContextMenuStrip
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ContextMenuStrip
  nameWithType: TreeNode.ContextMenuStrip
  fullName: System.Windows.Forms.TreeNode.ContextMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the shortcut menu associated with this tree node."
  remarks: "The shortcut menu is shown when the user right-clicks the tree node."
  syntax:
    content: public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "The <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;></xref> associated with the tree node."
  overload: System.Windows.Forms.TreeNode.ContextMenuStrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Deserialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Deserialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Deserialize(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Loads the state of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> from the specified <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>."
  syntax:
    content: protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> that describes the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during deserialization."
  overload: System.Windows.Forms.TreeNode.Deserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.EndEdit(System.Boolean)
  id: EndEdit(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: EndEdit(Boolean)
  nameWithType: TreeNode.EndEdit(Boolean)
  fullName: System.Windows.Forms.TreeNode.EndEdit(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ends the editing of the tree node label."
  remarks: ''
  example:
  - "The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \n  \n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_40_1.cpp)]\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_40_1.cs)]\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_40_1.vb)]"
  syntax:
    content: public void EndEdit (bool cancel);
    parameters:
    - id: cancel
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the editing of the tree node label text was canceled without being saved; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.EndEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.EnsureVisible
  id: EnsureVisible
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: EnsureVisible()
  nameWithType: TreeNode.EnsureVisible()
  fullName: System.Windows.Forms.TreeNode.EnsureVisible()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ensures that the tree node is visible, expanding tree nodes and scrolling the tree view control as necessary."
  remarks: "When the EnsureVisible method is called, the tree is expanded and scrolled to ensure that the current tree node is visible in the <xref:System.Windows.Forms.TreeView>. This method is useful if you are selecting a tree node in code based on certain criteria. By calling this method after you select the node, the user can see and interact with the selected node.      > [!NOTE] >  If the <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=fullName> property is set to a value that is larger than the height of the tree view control, calling this method has unexpected results."
  example:
  - "The following code example brings the last child tree node of the last root tree node into view in the tree view when a button is clicked. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.Button>. There should be enough tree nodes so that they are not all visible in the tree view control.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_34_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#2](~/add/codesnippet/csharp/m-system.windows.forms.t_34_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#2](~/add/codesnippet/cpp/m-system.windows.forms.t_34_1.cpp)]"
  syntax:
    content: public void EnsureVisible ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.EnsureVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Expand
  id: Expand
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Windows.Forms.TreeNode.Expand()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Expands the tree node."
  remarks: "The Expand method expands the current <xref:System.Windows.Forms.TreeNode> down to the next level of nodes.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the Expand method is called, the child nodes appear in their previously expanded state."
  example:
  - "The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the Expand method, it is collapsed by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_74_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/m-system.windows.forms.t_74_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/m-system.windows.forms.t_74_1.cpp)]"
  syntax:
    content: public void Expand ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Expand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ExpandAll
  id: ExpandAll
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Windows.Forms.TreeNode.ExpandAll()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Expands all the child tree nodes."
  remarks: "The ExpandAll method expands all the child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state."
  example:
  - "The following code example expands all the tree nodes in a <xref:System.Windows.Forms.TreeView> control when a <xref:System.Windows.Forms.CheckBox> is checked, and collapses the <xref:System.Windows.Forms.TreeNode.FirstNode%2A> when the <xref:System.Windows.Forms.CheckBox> is cleared. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.CheckBox>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \n  \n [!code-cpp[TreeNode_ForeColor#1](~/add/codesnippet/cpp/m-system.windows.forms.t_38_1.cpp)]\n [!code-cs[TreeNode_ForeColor#1](~/add/codesnippet/csharp/m-system.windows.forms.t_38_1.cs)]\n [!code-vb[TreeNode_ForeColor#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_38_1.vb)]"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.FirstNode
  id: FirstNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: FirstNode
  nameWithType: TreeNode.FirstNode
  fullName: System.Windows.Forms.TreeNode.FirstNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the first child tree node in the tree node collection."
  remarks: "The FirstNode is the first child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node. If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the FirstNode property returns `null`."
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_89_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_89_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_89_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode FirstNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "The first child <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> in the <xref:System.Windows.Forms.TreeNode.Nodes*> collection."
  overload: System.Windows.Forms.TreeNode.FirstNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ForeColor
  nameWithType: TreeNode.ForeColor
  fullName: System.Windows.Forms.TreeNode.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the foreground color of the tree node."
  remarks: "If `null`, the <xref:System.Drawing.Color> used is the <xref:System.Windows.Forms.Control.ForeColor%2A> property value of the <xref:System.Windows.Forms.TreeView> control that the tree node is assigned to."
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_178_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_178_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_178_1.vb)]"
  syntax:
    content: public System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "The foreground <xref href=&quot;System.Drawing.Color&quot;></xref> of the tree node."
  overload: System.Windows.Forms.TreeNode.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  id: FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: FromHandle(TreeView,IntPtr)
  nameWithType: TreeNode.FromHandle(TreeView,IntPtr)
  fullName: System.Windows.Forms.TreeNode.FromHandle(TreeView,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the tree node with the specified handle and assigned to the specified tree view control."
  remarks: "When a node is added to the <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=fullName> collection, the <xref:System.Windows.Forms.TreeView> control sends an NM_CUSTOMDRAW notification before the node handle is available. If you override the <xref:System.Windows.Forms.Control.WndProc%2A> method of the <xref:System.Windows.Forms.TreeView> to provide custom drawing in response to this notification, you should always check the return value of this method for `null` before you attempt to access the node."
  example:
  - "The following code example gets the <xref:System.Windows.Forms.TreeNode> that was collapsed and creates a copy of it using its <xref:System.Windows.Forms.TreeNode.Handle%2A> property. The original <xref:System.Windows.Forms.TreeNode> is removed from the <xref:System.Windows.Forms.TreeNodeCollection>, and the copy is added to the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> control should have two or more root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#3](~/add/codesnippet/cpp/0a58bc0d-b346-4d14-af9f-_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#3](~/add/codesnippet/csharp/0a58bc0d-b346-4d14-af9f-_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#3](~/add/codesnippet/visualbasic/0a58bc0d-b346-4d14-af9f-_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);
    parameters:
    - id: tree
      type: System.Windows.Forms.TreeView
      description: "The <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref> that contains the tree node."
    - id: handle
      type: System.IntPtr
      description: "The handle of the tree node."
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> that represents the tree node assigned to the specified <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref> control with the specified handle."
  overload: System.Windows.Forms.TreeNode.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.FullPath
  id: FullPath
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: FullPath
  nameWithType: TreeNode.FullPath
  fullName: System.Windows.Forms.TreeNode.FullPath
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the path from the root tree node to the current tree node."
  remarks: "The path consists of the labels of all the tree nodes that must be navigated to reach this tree node, starting at the root tree node. The node labels are separated by the delimiter character specified in the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of the <xref:System.Windows.Forms.TreeView> control that contains this node. For example, if the delimiter character of the tree view control named &quot;Location&quot; is set to the backslash character, (\\\\), the FullPath property value is &quot;Country\\Region\\State&quot;."
  example:
  - "The following code example sets the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of a <xref:System.Windows.Forms.TreeView> and displays the number of child tree nodes that are contained in the <xref:System.Windows.Forms.TreeNodeCollection> of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \n  \n [!code-cpp[TreeNode_ForeColor#2](~/add/codesnippet/cpp/p-system.windows.forms.t_103_1.cpp)]\n [!code-cs[TreeNode_ForeColor#2](~/add/codesnippet/csharp/p-system.windows.forms.t_103_1.cs)]\n [!code-vb[TreeNode_ForeColor#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_103_1.vb)]"
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "The path from the root tree node to the current tree node."
  overload: System.Windows.Forms.TreeNode.FullPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The node is not contained in a <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)
  id: GetNodeCount(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: GetNodeCount(Boolean)
  nameWithType: TreeNode.GetNodeCount(Boolean)
  fullName: System.Windows.Forms.TreeNode.GetNodeCount(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the number of child tree nodes."
  remarks: ''
  example:
  - "The following code example sets the <xref:System.Windows.Forms.TreeView.PathSeparator%2A> property of a <xref:System.Windows.Forms.TreeView> and displays the number of child tree nodes that are contained in the <xref:System.Windows.Forms.TreeNodeCollection> of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects (preferably with three or more levels).  \n  \n [!code-cpp[TreeNode_ForeColor#2](~/add/codesnippet/cpp/m-system.windows.forms.t_75_1.cpp)]\n [!code-cs[TreeNode_ForeColor#2](~/add/codesnippet/csharp/m-system.windows.forms.t_75_1.cs)]\n [!code-vb[TreeNode_ForeColor#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_75_1.vb)]"
  syntax:
    content: public int GetNodeCount (bool includeSubTrees);
    parameters:
    - id: includeSubTrees
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the resulting count includes all tree nodes indirectly rooted at this tree node; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "The number of child tree nodes assigned to the <xref:System.Windows.Forms.TreeNode.Nodes*> collection."
  overload: System.Windows.Forms.TreeNode.GetNodeCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Handle
  id: Handle
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Handle
  nameWithType: TreeNode.Handle
  fullName: System.Windows.Forms.TreeNode.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the handle of the tree node."
  remarks: "If a handle is not already created when the Handle property is referenced, it is created."
  example:
  - "The following code example gets the <xref:System.Windows.Forms.TreeNode> that was collapsed and creates a copy of it using its Handle property. The original <xref:System.Windows.Forms.TreeNode> is removed from the <xref:System.Windows.Forms.TreeNodeCollection>, and the copy is added to the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> control should have two or more root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#3](~/add/codesnippet/cpp/p-system.windows.forms.t_268_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#3](~/add/codesnippet/csharp/p-system.windows.forms.t_268_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#3](~/add/codesnippet/visualbasic/p-system.windows.forms.t_268_1.vb)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "The tree node handle."
  overload: System.Windows.Forms.TreeNode.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ImageIndex
  id: ImageIndex
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ImageIndex
  nameWithType: TreeNode.ImageIndex
  fullName: System.Windows.Forms.TreeNode.ImageIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the image list index value of the image displayed when the tree node is in the unselected state."
  remarks: "The ImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property.      > [!NOTE] >  The default value of the ImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.ImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to.       The <xref:System.Windows.Forms.TreeNode.ImageKey%2A> and ImageIndex properties are mutually exclusive; therefore, if one property is set, the other is ignored. If you set the <xref:System.Windows.Forms.TreeNode.ImageKey%2A> property, the ImageIndex property is automatically set to -1. Alternatively, if you set ImageIndex, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> is automatically set to an empty string (&quot;&quot;)."
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> that contains `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_272_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/p-system.windows.forms.t_272_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/p-system.windows.forms.t_272_1.cs)]"
  syntax:
    content: public int ImageIndex { get; set; }
    return:
      type: System.Int32
      description: "A zero-based index value that represents the image position in the assigned <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.ImageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ImageKey
  id: ImageKey
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ImageKey
  nameWithType: TreeNode.ImageKey
  fullName: System.Windows.Forms.TreeNode.ImageKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the key for the image associated with this tree node when the node is in an unselected state."
  remarks: "The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the containing <xref:System.Windows.Forms.TreeView> control.       The ImageKey is case-insensitive.       The ImageKey and <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> properties are mutually exclusive; if one property is set, the other is ignored. If you set the ImageKey property, the <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, ImageKey is automatically set to an empty string (&quot;&quot;)."
  syntax:
    content: public string ImageKey { get; set; }
    return:
      type: System.String
      description: "The key for the image associated with this tree node when the node is in an unselected state."
  overload: System.Windows.Forms.TreeNode.ImageKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Index
  id: Index
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Index
  nameWithType: TreeNode.Index
  fullName: System.Windows.Forms.TreeNode.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the position of the tree node in the tree node collection."
  remarks: ''
  example:
  - "The following code example displays the <xref:System.Windows.Forms.TreeNode.Text%2A> and Index property values of the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeNode.Parent%2A> property of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have at least two root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#2](~/add/codesnippet/cpp/p-system.windows.forms.t_120_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#2](~/add/codesnippet/csharp/p-system.windows.forms.t_120_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_120_1.vb)]"
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: "A zero-based index value that represents the position of the tree node in the <xref:System.Windows.Forms.TreeNode.Nodes*> collection."
  overload: System.Windows.Forms.TreeNode.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsEditing
  id: IsEditing
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsEditing
  nameWithType: TreeNode.IsEditing
  fullName: System.Windows.Forms.TreeNode.IsEditing
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the tree node is in an editable state."
  remarks: ''
  example:
  - "The following code example lets the user edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>. When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`. If a nonroot tree node was selected, it is put into an editable state, letting the user edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.  \n  \n [!code-cpp[classic treenode.beginedit example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_7_1.cpp)]\n [!code-cs[classic treenode.beginedit example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_7_1.cs)]\n [!code-vb[classic treenode.beginedit example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_7_1.vb)]"
  syntax:
    content: public bool IsEditing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the tree node is in editable state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.IsEditing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsExpanded
  id: IsExpanded
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsExpanded
  nameWithType: TreeNode.IsExpanded
  fullName: System.Windows.Forms.TreeNode.IsExpanded
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the tree node is in the expanded state."
  remarks: ''
  example:
  - "The following code example toggles the selected node when a button is clicked. If the selected node is collapsed, it is expanded, if it is expanded by calling the <xref:System.Windows.Forms.TreeNode.Expand%2A> method, it is collapsed by calling the <xref:System.Windows.Forms.TreeNode.Collapse%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has at least one <xref:System.Windows.Forms.TreeNode> with at least one child <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_106_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#1](~/add/codesnippet/csharp/p-system.windows.forms.t_106_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#1](~/add/codesnippet/cpp/p-system.windows.forms.t_106_1.cpp)]"
  syntax:
    content: public bool IsExpanded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the tree node is in the expanded state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.IsExpanded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsSelected
  id: IsSelected
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsSelected
  nameWithType: TreeNode.IsSelected
  fullName: System.Windows.Forms.TreeNode.IsSelected
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the tree node is in the selected state."
  remarks: ''
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> containing several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_224_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_224_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_224_1.cpp)]"
  syntax:
    content: public bool IsSelected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the tree node is in the selected state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.IsSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.IsVisible
  id: IsVisible
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: IsVisible
  nameWithType: TreeNode.IsVisible
  fullName: System.Windows.Forms.TreeNode.IsVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the tree node is visible or partially visible."
  remarks: ''
  example:
  - "The following code example brings the last child tree node of the last root tree node into view in the tree view when a button is clicked. This example requires that you have a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form> that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.Button>. There should be enough tree nodes so that they are not all visible in the tree view control.  \n  \n [!code-vb[TreeNode_EnsureVisible_4#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_184_1.vb)]\n [!code-cs[TreeNode_EnsureVisible_4#2](~/add/codesnippet/csharp/p-system.windows.forms.t_184_1.cs)]\n [!code-cpp[TreeNode_EnsureVisible_4#2](~/add/codesnippet/cpp/p-system.windows.forms.t_184_1.cpp)]"
  syntax:
    content: public bool IsVisible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the tree node is visible or partially visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.LastNode
  id: LastNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: LastNode
  nameWithType: TreeNode.LastNode
  fullName: System.Windows.Forms.TreeNode.LastNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the last child tree node."
  remarks: "The LastNode is the last child <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the current tree node. If the <xref:System.Windows.Forms.TreeNode> has no child tree node, the LastNode property returns `null`."
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_169_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_169_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_169_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode LastNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> that represents the last child tree node."
  overload: System.Windows.Forms.TreeNode.LastNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Level
  id: Level
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Level
  nameWithType: TreeNode.Level
  fullName: System.Windows.Forms.TreeNode.Level
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the zero-based depth of the tree node in the <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref> control."
  remarks: "For the Level property, the root node is considered the first level of nesting and returns 0."
  syntax:
    content: public int Level { get; }
    return:
      type: System.Int32
      description: "The zero-based depth of the tree node in the <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref> control."
  overload: System.Windows.Forms.TreeNode.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Name
  id: Name
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Name
  nameWithType: TreeNode.Name
  fullName: System.Windows.Forms.TreeNode.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the name of the tree node."
  remarks: "The Name of a <xref:System.Windows.Forms.TreeNode> is also the node&quot;s key, when the node is part of a <xref:System.Windows.Forms.TreeNodeCollection>. If the node does not have a name, Name returns an empty string (&quot;&quot;)."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String> that represents the name of the tree node."
  overload: System.Windows.Forms.TreeNode.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.NextNode
  id: NextNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: NextNode
  nameWithType: TreeNode.NextNode
  fullName: System.Windows.Forms.TreeNode.NextNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the next sibling tree node."
  remarks: "The NextNode is the next sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node&quot;s parent <xref:System.Windows.Forms.TreeNode>. If there is no next tree node, the NextNode property returns `null`."
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_51_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_51_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_51_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode NextNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> that represents the next sibling tree node."
  overload: System.Windows.Forms.TreeNode.NextNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.NextVisibleNode
  id: NextVisibleNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: NextVisibleNode
  nameWithType: TreeNode.NextVisibleNode
  fullName: System.Windows.Forms.TreeNode.NextVisibleNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the next visible tree node."
  remarks: "The NextVisibleNode can be a child, sibling, or a tree node from another branch. If there is no next tree node, the NextVisibleNode property returns `null`."
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_267_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_267_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_267_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode NextVisibleNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> that represents the next visible tree node."
  overload: System.Windows.Forms.TreeNode.NextVisibleNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.NodeFont
  id: NodeFont
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: NodeFont
  nameWithType: TreeNode.NodeFont
  fullName: System.Windows.Forms.TreeNode.NodeFont
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the font that is used to display the text on the tree node label."
  remarks: "If `null`, the <xref:System.Drawing.Font> used is the <xref:System.Windows.Forms.Control.Font%2A> property value of the <xref:System.Windows.Forms.TreeView> control that this node is attached to.      > [!NOTE] >  If the node font is larger than the <xref:System.Windows.Forms.Control.Font%2A> property value that is set in the <xref:System.Windows.Forms.TreeView> control, the tree node label text is clipped."
  example:
  - "The following code example changes the size of NodeFont to the specified size and adjusts the <xref:System.Windows.Forms.TreeView.ItemHeight%2A> of the tree node's parent <xref:System.Windows.Forms.TreeView> control. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that contains a collection of <xref:System.Windows.Forms.TreeNode> objects, and a <xref:System.Windows.Forms.ComboBox> that contains font sizes.  \n  \n [!code-cs[TreeNode_Bounds#2](~/add/codesnippet/csharp/p-system.windows.forms.t_20_1.cs)]\n [!code-cpp[TreeNode_Bounds#2](~/add/codesnippet/cpp/p-system.windows.forms.t_20_1.cpp)]\n [!code-vb[TreeNode_Bounds#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_20_1.vb)]"
  syntax:
    content: public System.Drawing.Font NodeFont { get; set; }
    return:
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> that is used to display the text on the tree node label."
  overload: System.Windows.Forms.TreeNode.NodeFont*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Nodes
  id: Nodes
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Nodes
  nameWithType: TreeNode.Nodes
  fullName: System.Windows.Forms.TreeNode.Nodes
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the collection of <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> objects assigned to the current tree node."
  remarks: "The Nodes property can hold a collection of other <xref:System.Windows.Forms.TreeNode> objects. Each of the tree node in the collection has a Nodes property that can contain its own <xref:System.Windows.Forms.TreeNodeCollection>. This nesting of tree nodes can make it difficult to navigate a tree structure. The <xref:System.Windows.Forms.TreeNode.FullPath%2A> property makes it easier to determine your location in a tree."
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls named `treeView1` and `treeView2`, and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_107_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/p-system.windows.forms.t_107_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/p-system.windows.forms.t_107_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNodeCollection Nodes { get; }
    return:
      type: System.Windows.Forms.TreeNodeCollection
      description: "A <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;></xref> that represents the tree nodes assigned to the current tree node."
  overload: System.Windows.Forms.TreeNode.Nodes*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Parent
  id: Parent
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Windows.Forms.TreeNode.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the parent tree node of the current tree node."
  remarks: "If the tree node is at the root level, the Parent property returns `null`."
  example:
  - "The following code example displays the <xref:System.Windows.Forms.TreeNode.Text%2A> and <xref:System.Windows.Forms.TreeNode.Index%2A> property values of the <xref:System.Windows.Forms.TreeNode> represented by the Parent property of the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName>. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have at least two root nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#2](~/add/codesnippet/cpp/p-system.windows.forms.t_38_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#2](~/add/codesnippet/csharp/p-system.windows.forms.t_38_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_38_1.vb)]"
  syntax:
    content: public System.Windows.Forms.TreeNode Parent { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> that represents the parent of the current tree node."
  overload: System.Windows.Forms.TreeNode.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.PrevNode
  id: PrevNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: PrevNode
  nameWithType: TreeNode.PrevNode
  fullName: System.Windows.Forms.TreeNode.PrevNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the previous sibling tree node."
  remarks: "The PrevNode is the previous sibling <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeNodeCollection> stored in the <xref:System.Windows.Forms.TreeNode.Nodes%2A> property of the tree node&quot;s parent <xref:System.Windows.Forms.TreeNode>. If there is no previous tree node, the PrevNode property returns `null`."
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_237_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_237_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_237_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode PrevNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> that represents the previous sibling tree node."
  overload: System.Windows.Forms.TreeNode.PrevNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.PrevVisibleNode
  id: PrevVisibleNode
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: PrevVisibleNode
  nameWithType: TreeNode.PrevVisibleNode
  fullName: System.Windows.Forms.TreeNode.PrevVisibleNode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the previous visible tree node."
  remarks: "The PrevVisibleNode can be a child, sibling, or a tree node from another branch. If there is no previous tree node, the PrevVisibleNode property returns `null`."
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_203_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_203_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_203_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeNode PrevVisibleNode { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> that represents the previous visible tree node."
  overload: System.Windows.Forms.TreeNode.PrevVisibleNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Remove
  id: Remove
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Remove()
  nameWithType: TreeNode.Remove()
  fullName: System.Windows.Forms.TreeNode.Remove()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the current tree node from the tree view control."
  remarks: "When the Remove method is called, the tree node, and any child tree nodes that are assigned to the <xref:System.Windows.Forms.TreeNode>, are removed from the <xref:System.Windows.Forms.TreeView>. The removed child nodes are removed from the <xref:System.Windows.Forms.TreeView> but are still attached to this tree node."
  example:
  - "The following code example removes a <xref:System.Windows.Forms.TreeNode> when the user right-clicks the mouse over it and toggles it from expanded to collapsed when the user clicks the mouse wheel over it. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have two or more root tree nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#1](~/add/codesnippet/cpp/m-system.windows.forms.t_3_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#1](~/add/codesnippet/csharp/m-system.windows.forms.t_3_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_3_1.vb)]"
  syntax:
    content: public void Remove ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.SelectedImageIndex
  id: SelectedImageIndex
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: SelectedImageIndex
  nameWithType: TreeNode.SelectedImageIndex
  fullName: System.Windows.Forms.TreeNode.SelectedImageIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the image list index value of the image that is displayed when the tree node is in the selected state."
  remarks: "The SelectedImageIndex value is the index value of an <xref:System.Drawing.Image> stored in the <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=fullName> property.      > [!NOTE] >  The default value of the SelectedImageIndex property is the same as the <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> property of the <xref:System.Windows.Forms.TreeView> control that the <xref:System.Windows.Forms.TreeNode> is assigned to."
  example:
  - "The following code example creates and assigns an <xref:System.Windows.Forms.ImageList> to a <xref:System.Windows.Forms.TreeView> control and fills the <xref:System.Windows.Forms.TreeView> control with <xref:System.Windows.Forms.TreeNode> objects. The tree nodes are assigned images from the <xref:System.Windows.Forms.ImageList> that is displayed when the tree node is in a selected or unselected state. This example requires that you have a <xref:System.Windows.Forms.Form> containing a <xref:System.Windows.Forms.TreeView>, and an <xref:System.Collections.ArrayList> containing `Customer` objects that each contain `Order` objects. It also requires that the `Customer` and `Order` objects are defined.  \n  \n [!code-vb[TreeNode_TreeNode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_172_1.vb)]\n [!code-cpp[TreeNode_TreeNode#1](~/add/codesnippet/cpp/p-system.windows.forms.t_172_1.cpp)]\n [!code-cs[TreeNode_TreeNode#1](~/add/codesnippet/csharp/p-system.windows.forms.t_172_1.cs)]"
  syntax:
    content: public int SelectedImageIndex { get; set; }
    return:
      type: System.Int32
      description: "A zero-based index value that represents the image position in an <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.SelectedImageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.SelectedImageKey
  id: SelectedImageKey
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: SelectedImageKey
  nameWithType: TreeNode.SelectedImageKey
  fullName: System.Windows.Forms.TreeNode.SelectedImageKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the key of the image displayed in the tree node when it is in a selected state."
  remarks: "The image key returned by this property is contained in the <xref:System.Windows.Forms.TreeView.ImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control."
  syntax:
    content: public string SelectedImageKey { get; set; }
    return:
      type: System.String
      description: "The key of the image displayed when the tree node is in a selected state."
  overload: System.Windows.Forms.TreeNode.SelectedImageKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Serialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Serialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Serialize(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Saves the state of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> to the specified <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>."
  syntax:
    content: protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> that describes the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The <xref:System.Runtime.Serialization.StreamingContext> that indicates the state of the stream during serialization"
  overload: System.Windows.Forms.TreeNode.Serialize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.StateImageIndex
  id: StateImageIndex
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: StateImageIndex
  nameWithType: TreeNode.StateImageIndex
  fullName: System.Windows.Forms.TreeNode.StateImageIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the index of the image that is used to indicate the state of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> when the parent <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref> has its <xref:System.Windows.Forms.TreeView.CheckBoxes*> property set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  remarks: "The image index that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageIndex is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageIndex.       The StateImageIndex returns -1 when not set. The <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> and StateImageIndex properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> property, the StateImageIndex property is automatically set to -1. Alternatively, if you set StateImageIndex, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> is automatically set to an empty string (&quot;&quot;)."
  syntax:
    content: public int StateImageIndex { get; set; }
    return:
      type: System.Int32
      description: "The index of the image that is used to indicate the state of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.StateImageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified index is less than -1 or greater than 14."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.StateImageKey
  id: StateImageKey
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: StateImageKey
  nameWithType: TreeNode.StateImageKey
  fullName: System.Windows.Forms.TreeNode.StateImageKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the key of the image that is used to indicate the state of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref> when the parent <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref> has its <xref:System.Windows.Forms.TreeView.CheckBoxes*> property set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  remarks: "The image key that is returned by this property is contained in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> property of the parent <xref:System.Windows.Forms.TreeView> control.       If the parent <xref:System.Windows.Forms.TreeView> has check boxes enabled, the StateImageKey is ignored and the node will display the first or second image in the <xref:System.Windows.Forms.TreeView.StateImageList%2A> set on the parent <xref:System.Windows.Forms.TreeView> to indicate an unchecked or checked state, respectively. Toggling the <xref:System.Windows.Forms.TreeNode.Checked%2A> property does not affect the value of the StateImageKey.       The StateImageKey and <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> properties are mutually exclusive, meaning if one is set, the other is ignored. If you set the StateImageKey property, the <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> property is automatically set to -1. Alternatively, if you set <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, StateImageKey is automatically set to an empty string (&quot;&quot;). You should set the StateImageKey to an image with a corresponding index between 0 and 14. You can set the StateImageKey to an image with an index value greater than 14 (an exception will not be thrown), but the image may not be displayed"
  syntax:
    content: public string StateImageKey { get; set; }
    return:
      type: System.String
      description: "The key of the image that is used to indicate the state of the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.StateImageKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Populates a serialization information object with the data needed to serialize the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> that contains the data to serialize the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext> that contains the destination information for this serialization."
  overload: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Tag
  id: Tag
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Tag
  nameWithType: TreeNode.Tag
  fullName: System.Windows.Forms.TreeNode.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the object that contains data about the tree node."
  remarks: "Any <xref:System.Object> derived type can be assigned to this property. If this property is being set through the Windows Forms designer, only text can be assigned.      > [!CAUTION] >  The <xref:System.Windows.Forms.TreeNode.Clone%2A> method performs a shallow copy of the node. If the value of the Tag property is a reference type, both the original and cloned copy will point to the same single instance of the Tag value."
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the Tag property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_222_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_222_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_222_1.vb)]"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains data about the tree node. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Text
  id: Text
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Windows.Forms.TreeNode.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the text displayed in the label of the tree node."
  remarks: "The maximum number of characters that a <xref:System.Windows.Forms.TreeNode> can display is 259. If a <xref:System.String> that has more than 259 characters is assigned to this property, only the first 259 characters are displayed.       This property cannot be set by the user if the <xref:System.Windows.Forms.TreeView.LabelEdit%2A> property of the parent <xref:System.Windows.Forms.TreeView> is set to `false`. The alternative to explicitly setting this property is to create the tree node by using one of the <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructors that has a string parameter that represents the Text property. The label is displayed next to the <xref:System.Windows.Forms.TreeNode> image, if one is displayed."
  example:
  - "The following code example creates a root tree node to assign child tree nodes to. A child tree node for each `Customer` object in an <xref:System.Collections.ArrayList> is added to the root tree node as well as a child tree node for each `Order` object assigned to the `Customer` object. The `Customer` object is assigned to the <xref:System.Windows.Forms.TreeNode.Tag%2A> property, and the tree nodes representing `Customer` objects are displayed with <xref:System.Drawing.Color.Orange%2A> text. This example requires that you have a `Customer` and `Order` object defined, a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>, and an <xref:System.Collections.ArrayList> named `customerArray` that contains `Customer` objects.  \n  \n [!code-cs[TreeNode_Bounds#1](~/add/codesnippet/csharp/p-system.windows.forms.t_94_1.cs)]\n [!code-cpp[TreeNode_Bounds#1](~/add/codesnippet/cpp/p-system.windows.forms.t_94_1.cpp)]\n [!code-vb[TreeNode_Bounds#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_94_1.vb)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "The text displayed in the label of the tree node."
  overload: System.Windows.Forms.TreeNode.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.Toggle
  id: Toggle
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: Toggle()
  nameWithType: TreeNode.Toggle()
  fullName: System.Windows.Forms.TreeNode.Toggle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Toggles the tree node to either the expanded or collapsed state."
  remarks: "The tree node is toggled to the state opposite its current state, either expanded or collapsed.      > [!NOTE] >  The state of a <xref:System.Windows.Forms.TreeNode> is persisted. For example, if the next level of child nodes was not collapsed previously, when the <xref:System.Windows.Forms.TreeNode.Expand%2A> method is called, the child nodes appear in their previously expanded state."
  example:
  - "The following code example removes a <xref:System.Windows.Forms.TreeNode> when the user right-clicks the mouse over it and toggles it from expanded to collapsed when the user clicks the mouse wheel over it. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control on it. The <xref:System.Windows.Forms.TreeView> should have two or more root tree nodes, each having at least one child node.  \n  \n [!code-cpp[Windows.Forms.TreeNode#1](~/add/codesnippet/cpp/m-system.windows.forms.t_28_1.cpp)]\n [!code-cs[Windows.Forms.TreeNode#1](~/add/codesnippet/csharp/m-system.windows.forms.t_28_1.cs)]\n [!code-vb[Windows.Forms.TreeNode#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_28_1.vb)]"
  syntax:
    content: public void Toggle ();
    parameters: []
  overload: System.Windows.Forms.TreeNode.Toggle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ToolTipText
  id: ToolTipText
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ToolTipText
  nameWithType: TreeNode.ToolTipText
  fullName: System.Windows.Forms.TreeNode.ToolTipText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the text that appears when the mouse pointer hovers over a <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  remarks: "You must set the <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> property of the parent <xref:System.Windows.Forms.TreeView> to `true` for the ToolTipText to be visible at run time.       If the <xref:System.Windows.Forms.TreeView> control has a ToolTip and also contains a <xref:System.Windows.Forms.TreeNode> that has a <xref:System.Windows.Forms.ToolTip>, only the <xref:System.Windows.Forms.ToolTip> for the node will be shown."
  example:
  - "The following code example demonstrates how to use the ToolTipText and <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> properties. To run this example, paste the following code into a Windows Form and call `InitializeTreeViewWithToolTips` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \n  \n [!code-cs[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/add/codesnippet/csharp/p-system.windows.forms.t_52_1.cs)]\n [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/add/codesnippet/visualbasic/p-system.windows.forms.t_52_1.vb)]"
  syntax:
    content: public string ToolTipText { get; set; }
    return:
      type: System.String
      description: "Gets the text that appears when the mouse pointer hovers over a <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.TreeNode.ToolTipText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.ToString
  id: ToString
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: ToString()
  nameWithType: TreeNode.ToString()
  fullName: System.Windows.Forms.TreeNode.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a string that represents the current object."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the current object."
  overload: System.Windows.Forms.TreeNode.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNode.TreeView
  id: TreeView
  parent: System.Windows.Forms.TreeNode
  langs:
  - csharp
  name: TreeView
  nameWithType: TreeNode.TreeView
  fullName: System.Windows.Forms.TreeNode.TreeView
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the parent tree view that the tree node is assigned to."
  remarks: ''
  example:
  - "The following code example selects the appropriate <xref:System.Windows.Forms.TreeNode> after determining if the <xref:System.Windows.Forms.TreeNode> passed in is selected and which <xref:System.Windows.Forms.TreeNode> to select. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> control that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains several <xref:System.Windows.Forms.TreeNode> objects. It also requires that you have a <xref:System.Windows.Forms.ComboBox> with the following items: \"Previous\", \"PreviousVisible\", \"Next\", \"NextVisible\", \"First\", and \"Last\".  \n  \n [!code-cs[TreeNode_Parent#1](~/add/codesnippet/csharp/p-system.windows.forms.t_40_1.cs)]\n [!code-vb[TreeNode_Parent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_40_1.vb)]\n [!code-cpp[TreeNode_Parent#1](~/add/codesnippet/cpp/p-system.windows.forms.t_40_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.TreeView TreeView { get; }
    return:
      type: System.Windows.Forms.TreeView
      description: "A <xref href=&quot;System.Windows.Forms.TreeView&quot;></xref> that represents the parent tree view that the tree node is assigned to, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the node has not been assigned to a tree view."
  overload: System.Windows.Forms.TreeNode.TreeView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Forms.TreeNode.#ctor
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Windows.Forms.TreeNode.TreeNode()
- uid: System.Windows.Forms.TreeNode.#ctor(System.String)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.TreeNode(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.TreeNode(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,TreeNode[])
- uid: System.Windows.Forms.TreeNode[]
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode[]
  spec.csharp:
  - uid: System.Windows.Forms.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String,Int32,Int32)
  nameWithType: TreeNode.TreeNode(String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode(String,Int32,Int32,TreeNode[])
  nameWithType: TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
  fullName: System.Windows.Forms.TreeNode.TreeNode(String,Int32,Int32,TreeNode[])
- uid: System.Windows.Forms.TreeNode.BackColor
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BackColor
  nameWithType: TreeNode.BackColor
  fullName: System.Windows.Forms.TreeNode.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.TreeNode.BeginEdit
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BeginEdit()
  nameWithType: TreeNode.BeginEdit()
  fullName: System.Windows.Forms.TreeNode.BeginEdit()
- uid: System.Windows.Forms.TreeNode.Bounds
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Bounds
  nameWithType: TreeNode.Bounds
  fullName: System.Windows.Forms.TreeNode.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.TreeNode.Checked
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Windows.Forms.TreeNode.Checked
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TreeNode.Clone
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Windows.Forms.TreeNode.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.TreeNode.Collapse
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Windows.Forms.TreeNode.Collapse()
- uid: System.Windows.Forms.TreeNode.Collapse(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Collapse(Boolean)
  nameWithType: TreeNode.Collapse(Boolean)
  fullName: System.Windows.Forms.TreeNode.Collapse(Boolean)
- uid: System.Windows.Forms.TreeNode.ContextMenu
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenu
  nameWithType: TreeNode.ContextMenu
  fullName: System.Windows.Forms.TreeNode.ContextMenu
- uid: System.Windows.Forms.ContextMenu
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: System.Windows.Forms.ContextMenu
- uid: System.Windows.Forms.TreeNode.ContextMenuStrip
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenuStrip
  nameWithType: TreeNode.ContextMenuStrip
  fullName: System.Windows.Forms.TreeNode.ContextMenuStrip
- uid: System.Windows.Forms.ContextMenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenuStrip
  nameWithType: ContextMenuStrip
  fullName: System.Windows.Forms.ContextMenuStrip
- uid: System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Deserialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Deserialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Deserialize(SerializationInfo,StreamingContext)
- uid: System.Windows.Forms.TreeNode.EndEdit(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EndEdit(Boolean)
  nameWithType: TreeNode.EndEdit(Boolean)
  fullName: System.Windows.Forms.TreeNode.EndEdit(Boolean)
- uid: System.Windows.Forms.TreeNode.EnsureVisible
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EnsureVisible()
  nameWithType: TreeNode.EnsureVisible()
  fullName: System.Windows.Forms.TreeNode.EnsureVisible()
- uid: System.Windows.Forms.TreeNode.Expand
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Windows.Forms.TreeNode.Expand()
- uid: System.Windows.Forms.TreeNode.ExpandAll
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Windows.Forms.TreeNode.ExpandAll()
- uid: System.Windows.Forms.TreeNode.FirstNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FirstNode
  nameWithType: TreeNode.FirstNode
  fullName: System.Windows.Forms.TreeNode.FirstNode
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.Windows.Forms.TreeNode.ForeColor
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ForeColor
  nameWithType: TreeNode.ForeColor
  fullName: System.Windows.Forms.TreeNode.ForeColor
- uid: System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FromHandle(TreeView,IntPtr)
  nameWithType: TreeNode.FromHandle(TreeView,IntPtr)
  fullName: System.Windows.Forms.TreeNode.FromHandle(TreeView,IntPtr)
- uid: System.Windows.Forms.TreeView
  parent: System.Windows.Forms
  isExternal: false
  name: TreeView
  nameWithType: TreeView
  fullName: System.Windows.Forms.TreeView
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.TreeNode.FullPath
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FullPath
  nameWithType: TreeNode.FullPath
  fullName: System.Windows.Forms.TreeNode.FullPath
- uid: System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: GetNodeCount(Boolean)
  nameWithType: TreeNode.GetNodeCount(Boolean)
  fullName: System.Windows.Forms.TreeNode.GetNodeCount(Boolean)
- uid: System.Windows.Forms.TreeNode.Handle
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Handle
  nameWithType: TreeNode.Handle
  fullName: System.Windows.Forms.TreeNode.Handle
- uid: System.Windows.Forms.TreeNode.ImageIndex
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageIndex
  nameWithType: TreeNode.ImageIndex
  fullName: System.Windows.Forms.TreeNode.ImageIndex
- uid: System.Windows.Forms.TreeNode.ImageKey
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageKey
  nameWithType: TreeNode.ImageKey
  fullName: System.Windows.Forms.TreeNode.ImageKey
- uid: System.Windows.Forms.TreeNode.Index
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Index
  nameWithType: TreeNode.Index
  fullName: System.Windows.Forms.TreeNode.Index
- uid: System.Windows.Forms.TreeNode.IsEditing
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsEditing
  nameWithType: TreeNode.IsEditing
  fullName: System.Windows.Forms.TreeNode.IsEditing
- uid: System.Windows.Forms.TreeNode.IsExpanded
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsExpanded
  nameWithType: TreeNode.IsExpanded
  fullName: System.Windows.Forms.TreeNode.IsExpanded
- uid: System.Windows.Forms.TreeNode.IsSelected
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsSelected
  nameWithType: TreeNode.IsSelected
  fullName: System.Windows.Forms.TreeNode.IsSelected
- uid: System.Windows.Forms.TreeNode.IsVisible
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsVisible
  nameWithType: TreeNode.IsVisible
  fullName: System.Windows.Forms.TreeNode.IsVisible
- uid: System.Windows.Forms.TreeNode.LastNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: LastNode
  nameWithType: TreeNode.LastNode
  fullName: System.Windows.Forms.TreeNode.LastNode
- uid: System.Windows.Forms.TreeNode.Level
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Level
  nameWithType: TreeNode.Level
  fullName: System.Windows.Forms.TreeNode.Level
- uid: System.Windows.Forms.TreeNode.Name
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Name
  nameWithType: TreeNode.Name
  fullName: System.Windows.Forms.TreeNode.Name
- uid: System.Windows.Forms.TreeNode.NextNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextNode
  nameWithType: TreeNode.NextNode
  fullName: System.Windows.Forms.TreeNode.NextNode
- uid: System.Windows.Forms.TreeNode.NextVisibleNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextVisibleNode
  nameWithType: TreeNode.NextVisibleNode
  fullName: System.Windows.Forms.TreeNode.NextVisibleNode
- uid: System.Windows.Forms.TreeNode.NodeFont
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NodeFont
  nameWithType: TreeNode.NodeFont
  fullName: System.Windows.Forms.TreeNode.NodeFont
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.TreeNode.Nodes
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Nodes
  nameWithType: TreeNode.Nodes
  fullName: System.Windows.Forms.TreeNode.Nodes
- uid: System.Windows.Forms.TreeNodeCollection
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Windows.Forms.TreeNodeCollection
- uid: System.Windows.Forms.TreeNode.Parent
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Windows.Forms.TreeNode.Parent
- uid: System.Windows.Forms.TreeNode.PrevNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevNode
  nameWithType: TreeNode.PrevNode
  fullName: System.Windows.Forms.TreeNode.PrevNode
- uid: System.Windows.Forms.TreeNode.PrevVisibleNode
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevVisibleNode
  nameWithType: TreeNode.PrevVisibleNode
  fullName: System.Windows.Forms.TreeNode.PrevVisibleNode
- uid: System.Windows.Forms.TreeNode.Remove
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Remove()
  nameWithType: TreeNode.Remove()
  fullName: System.Windows.Forms.TreeNode.Remove()
- uid: System.Windows.Forms.TreeNode.SelectedImageIndex
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageIndex
  nameWithType: TreeNode.SelectedImageIndex
  fullName: System.Windows.Forms.TreeNode.SelectedImageIndex
- uid: System.Windows.Forms.TreeNode.SelectedImageKey
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageKey
  nameWithType: TreeNode.SelectedImageKey
  fullName: System.Windows.Forms.TreeNode.SelectedImageKey
- uid: System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Serialize(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.Serialize(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.Serialize(SerializationInfo,StreamingContext)
- uid: System.Windows.Forms.TreeNode.StateImageIndex
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageIndex
  nameWithType: TreeNode.StateImageIndex
  fullName: System.Windows.Forms.TreeNode.StateImageIndex
- uid: System.Windows.Forms.TreeNode.StateImageKey
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageKey
  nameWithType: TreeNode.StateImageKey
  fullName: System.Windows.Forms.TreeNode.StateImageKey
- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Windows.Forms.TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Windows.Forms.TreeNode.Tag
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Tag
  nameWithType: TreeNode.Tag
  fullName: System.Windows.Forms.TreeNode.Tag
- uid: System.Windows.Forms.TreeNode.Text
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Windows.Forms.TreeNode.Text
- uid: System.Windows.Forms.TreeNode.Toggle
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Toggle()
  nameWithType: TreeNode.Toggle()
  fullName: System.Windows.Forms.TreeNode.Toggle()
- uid: System.Windows.Forms.TreeNode.ToolTipText
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToolTipText
  nameWithType: TreeNode.ToolTipText
  fullName: System.Windows.Forms.TreeNode.ToolTipText
- uid: System.Windows.Forms.TreeNode.ToString
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToString()
  nameWithType: TreeNode.ToString()
  fullName: System.Windows.Forms.TreeNode.ToString()
- uid: System.Windows.Forms.TreeNode.TreeView
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeView
  nameWithType: TreeNode.TreeView
  fullName: System.Windows.Forms.TreeNode.TreeView
- uid: System.Windows.Forms.TreeNode.#ctor*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode.TreeNode
- uid: System.Windows.Forms.TreeNode.BackColor*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BackColor
  nameWithType: TreeNode.BackColor
- uid: System.Windows.Forms.TreeNode.BeginEdit*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: BeginEdit
  nameWithType: TreeNode.BeginEdit
- uid: System.Windows.Forms.TreeNode.Bounds*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Bounds
  nameWithType: TreeNode.Bounds
- uid: System.Windows.Forms.TreeNode.Checked*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
- uid: System.Windows.Forms.TreeNode.Clone*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Clone
  nameWithType: TreeNode.Clone
- uid: System.Windows.Forms.TreeNode.Collapse*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Collapse
  nameWithType: TreeNode.Collapse
- uid: System.Windows.Forms.TreeNode.ContextMenu*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenu
  nameWithType: TreeNode.ContextMenu
- uid: System.Windows.Forms.TreeNode.ContextMenuStrip*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ContextMenuStrip
  nameWithType: TreeNode.ContextMenuStrip
- uid: System.Windows.Forms.TreeNode.Deserialize*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Deserialize
  nameWithType: TreeNode.Deserialize
- uid: System.Windows.Forms.TreeNode.EndEdit*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EndEdit
  nameWithType: TreeNode.EndEdit
- uid: System.Windows.Forms.TreeNode.EnsureVisible*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: EnsureVisible
  nameWithType: TreeNode.EnsureVisible
- uid: System.Windows.Forms.TreeNode.Expand*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Expand
  nameWithType: TreeNode.Expand
- uid: System.Windows.Forms.TreeNode.ExpandAll*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ExpandAll
  nameWithType: TreeNode.ExpandAll
- uid: System.Windows.Forms.TreeNode.FirstNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FirstNode
  nameWithType: TreeNode.FirstNode
- uid: System.Windows.Forms.TreeNode.ForeColor*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ForeColor
  nameWithType: TreeNode.ForeColor
- uid: System.Windows.Forms.TreeNode.FromHandle*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FromHandle
  nameWithType: TreeNode.FromHandle
- uid: System.Windows.Forms.TreeNode.FullPath*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: FullPath
  nameWithType: TreeNode.FullPath
- uid: System.Windows.Forms.TreeNode.GetNodeCount*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: GetNodeCount
  nameWithType: TreeNode.GetNodeCount
- uid: System.Windows.Forms.TreeNode.Handle*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Handle
  nameWithType: TreeNode.Handle
- uid: System.Windows.Forms.TreeNode.ImageIndex*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageIndex
  nameWithType: TreeNode.ImageIndex
- uid: System.Windows.Forms.TreeNode.ImageKey*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ImageKey
  nameWithType: TreeNode.ImageKey
- uid: System.Windows.Forms.TreeNode.Index*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Index
  nameWithType: TreeNode.Index
- uid: System.Windows.Forms.TreeNode.IsEditing*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsEditing
  nameWithType: TreeNode.IsEditing
- uid: System.Windows.Forms.TreeNode.IsExpanded*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsExpanded
  nameWithType: TreeNode.IsExpanded
- uid: System.Windows.Forms.TreeNode.IsSelected*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsSelected
  nameWithType: TreeNode.IsSelected
- uid: System.Windows.Forms.TreeNode.IsVisible*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: IsVisible
  nameWithType: TreeNode.IsVisible
- uid: System.Windows.Forms.TreeNode.LastNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: LastNode
  nameWithType: TreeNode.LastNode
- uid: System.Windows.Forms.TreeNode.Level*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Level
  nameWithType: TreeNode.Level
- uid: System.Windows.Forms.TreeNode.Name*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Name
  nameWithType: TreeNode.Name
- uid: System.Windows.Forms.TreeNode.NextNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextNode
  nameWithType: TreeNode.NextNode
- uid: System.Windows.Forms.TreeNode.NextVisibleNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NextVisibleNode
  nameWithType: TreeNode.NextVisibleNode
- uid: System.Windows.Forms.TreeNode.NodeFont*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: NodeFont
  nameWithType: TreeNode.NodeFont
- uid: System.Windows.Forms.TreeNode.Nodes*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Nodes
  nameWithType: TreeNode.Nodes
- uid: System.Windows.Forms.TreeNode.Parent*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
- uid: System.Windows.Forms.TreeNode.PrevNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevNode
  nameWithType: TreeNode.PrevNode
- uid: System.Windows.Forms.TreeNode.PrevVisibleNode*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: PrevVisibleNode
  nameWithType: TreeNode.PrevVisibleNode
- uid: System.Windows.Forms.TreeNode.Remove*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Remove
  nameWithType: TreeNode.Remove
- uid: System.Windows.Forms.TreeNode.SelectedImageIndex*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageIndex
  nameWithType: TreeNode.SelectedImageIndex
- uid: System.Windows.Forms.TreeNode.SelectedImageKey*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: SelectedImageKey
  nameWithType: TreeNode.SelectedImageKey
- uid: System.Windows.Forms.TreeNode.Serialize*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Serialize
  nameWithType: TreeNode.Serialize
- uid: System.Windows.Forms.TreeNode.StateImageIndex*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageIndex
  nameWithType: TreeNode.StateImageIndex
- uid: System.Windows.Forms.TreeNode.StateImageKey*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: StateImageKey
  nameWithType: TreeNode.StateImageKey
- uid: System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: TreeNode.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Windows.Forms.TreeNode.Tag*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Tag
  nameWithType: TreeNode.Tag
- uid: System.Windows.Forms.TreeNode.Text*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
- uid: System.Windows.Forms.TreeNode.Toggle*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: Toggle
  nameWithType: TreeNode.Toggle
- uid: System.Windows.Forms.TreeNode.ToolTipText*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToolTipText
  nameWithType: TreeNode.ToolTipText
- uid: System.Windows.Forms.TreeNode.ToString*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: ToString
  nameWithType: TreeNode.ToString
- uid: System.Windows.Forms.TreeNode.TreeView*
  parent: System.Windows.Forms.TreeNode
  isExternal: false
  name: TreeView
  nameWithType: TreeNode.TreeView
