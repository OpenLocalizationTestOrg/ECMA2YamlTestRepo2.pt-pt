### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "Provides a mechanism for enumerating all available OLE DB providers within the local network."
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Creates an instance of the <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;></xref> class."
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retrieves a <xref href=&quot;System.Data.DataTable&quot;></xref> that contains information about all visible OLE DB providers."
  remarks: "The table that is returned by this method contains the following columns, all of which contain strings:      |Column Ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface IParseDisplayName. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|   |5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Returns a <xref href=&quot;System.Data.DataTable&quot;></xref> that contains information about the visible OLE DB providers."
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The provider does not support ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Exception has occurred in the underlying provider."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Uses a specific OLE DB enumerator to return an <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref> that contains information about the currently installed OLE DB providers, without requiring an instance of the <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;></xref> class."
  remarks: "The reader that is returned by this method contains the following columns, all of which contain strings:      |Column ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLE DB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker by using the native COM interface **IParseDisplayName**. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which **GetSourcesRowset** was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|       OLE DB provides several enumerator components, including MSDAENUM, MSDASQL Enumerator, SQLNCLI Enumerator, SQLOLEDB Enumerator, and others. For more information about the enumerator components and how to use them, see the [OLE DB Programmer&quot;s Reference](http://go.microsoft.com/fwlink/?LinkId=45232)."
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>."
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Returns an <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref> that contains information about the requested OLE DB providers, using the specified OLE DB enumerator."
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The provider does not support **ISourcesRowset**."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "An exception has occurred in the underlying provider."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Returns an <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref> that contains information about the currently installed OLE DB providers, without requiring an instance of the <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;></xref> class."
  remarks: "The reader returned by this method contains the following columns, all of which contain strings:      |Column Ordinal|Column|Description|   |--------------------|------------|-----------------|   |0|SOURCES_NAME|The invariant name of the native OLEDB data source or enumerator.|   |1|SOURCES_PARSENAME|A human-readable name that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_PARSENAME column returned by the native OLE DB sources rowset.|   |2|SOURCES_DESCRIPTION|Description of the native OLE DB data source. Corresponds to the SOURCES_DESCRIPTION column returned by the native OLE DB sources rowset.|   |3|SOURCES_TYPE|One of the following enumeration members: Binder (0), DataSource_MDP (1), DataSource_TDP (2), Enumerator (3). These correspond to the values returned in the SOURCES_TYPE column of the native OLE DB sources rowset.|   |4|SOURCES_ISPARENT|Applicable to enumerators only. If `true`, indicates that the entry applies to the same enumerator on which GetSourcesRowset was called, implying that it is also included in the sub-enumeration. Corresponds to the SOURCES_ISPARENT column of the native OLE DB sources rowset|   |5|SOURCES_CLSID|A human-readable name, that can be converted to a moniker using the native COM interface IParseDisplayName. Corresponds to the SOURCES_CLSID column returned by the native OLE DB sources rowset.|"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Returns a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref> that contains information about the visible OLE DB providers."
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The provider does not support ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Exception has occurred in the underlying provider."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
