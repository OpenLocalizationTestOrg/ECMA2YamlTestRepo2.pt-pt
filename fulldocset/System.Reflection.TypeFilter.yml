### YamlMime:ManagedReference
items:
- uid: System.Reflection.TypeFilter
  id: TypeFilter
  langs:
  - csharp
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  summary: "Filters the classes represented in an array of <xref:System.Type> objects."
  remarks: "The `TypeFilter` delegate is used to filter a list of classes. Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects. The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns. Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method. See the Visual C++ code example given in the description for `Delegate`."
  example:
  - "This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \n  \n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate bool TypeFilter(Type m, object filterCriteria);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
