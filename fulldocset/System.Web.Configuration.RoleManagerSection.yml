### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.RoleManagerSection
  id: RoleManagerSection
  children:
  - System.Web.Configuration.RoleManagerSection.#ctor
  - System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  - System.Web.Configuration.RoleManagerSection.CookieName
  - System.Web.Configuration.RoleManagerSection.CookiePath
  - System.Web.Configuration.RoleManagerSection.CookieProtection
  - System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  - System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  - System.Web.Configuration.RoleManagerSection.CookieTimeout
  - System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  - System.Web.Configuration.RoleManagerSection.DefaultProvider
  - System.Web.Configuration.RoleManagerSection.Domain
  - System.Web.Configuration.RoleManagerSection.Enabled
  - System.Web.Configuration.RoleManagerSection.MaxCachedResults
  - System.Web.Configuration.RoleManagerSection.Properties
  - System.Web.Configuration.RoleManagerSection.Providers
  langs:
  - csharp
  name: RoleManagerSection
  nameWithType: RoleManagerSection
  fullName: System.Web.Configuration.RoleManagerSection
  type: Class
  summary: "Define as definições de configuração que são utilizadas para suportar a infraestrutura de gestão da função de aplicações Web. Esta classe não pode ser herdada."
  remarks: "A classe de RoleManagerSection fornece uma forma de aceder e modificar o conteúdo de programaticamente o `roleManager` secção do ficheiro de configuração."
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the RoleManagerSection class. The second demonstrates how to use the RoleManagerSection type.  \n  \n The following configuration file example shows how to declaratively specify values for several properties of the RoleManagerSection class.  \n  \n```  \n<system.web>  \n  <roleManager   \n    enabled=\"false\"   \n    cacheRolesInCookie=\"false\"   \n    cookieName=\".ASPXROLES\" cookieTimeout=\"30\"  \n    cookiePath=\"/\" cookieRequireSSL=\"false\"  \n    cookieSlidingExpiration=\"true\" createPersistentCookie=\"false\"  \n    cookieProtection=\"All\"   \n    defaultProvider=\"AspNetSqlRoleProvider\"  \n    maxCachedResults=\"25\"  >  \n    <providers>  \n      <add   \n        name=\"AspNetSqlRoleProvider\"  \n        connectionStringName=\"LocalSqlServer\"   \n        applicationName=\"/\"  \n        type=\"System.Web.Security.SqlRoleProvider, System.Web,  \n          Version=2.0.3600.0, Culture=neutral,  \n          PublicKeyToken=b03f5f7f11d50a3a\" />  \n      <add   \n        name=\"AspNetWindowsTokenRoleProvider\"   \n        applicationName=\"/\"  \n        type=\"System.Web.Security.WindowsTokenRoleProvider, System.Web,   \n          Version=2.0.3600.0, Culture=neutral,   \n          PublicKeyToken=b03f5f7f11d50a3a\" />  \n    </providers>  \n  </roleManager>  \n</system.web>  \n```  \n  \n The following code example demonstrates how to use the RoleManagerSection type.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_91_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/csharp/t-system.web.configurati_91_1.cs)]"
  syntax:
    content: 'public sealed class RoleManagerSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: RoleManagerSection()
  nameWithType: RoleManagerSection.RoleManagerSection()
  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Configuration.RoleManagerSection&quot;> </xref> classe utilizando as predefinições."
  remarks: "O construtor de RoleManagerSection não se destina a ser utilizado diretamente a partir do seu código. Denomina-se pelo sistema de configuração do ASP.NET. Obter uma instância do <xref:System.Web.Configuration.RoleManagerSection>classe utilizando o <xref:System.Configuration.Configuration.GetSection%2A>método.</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.RoleManagerSection>       A tabela seguinte mostra as definições predefinidas que são utilizadas para o construtor de RoleManagerSection.      | Propriedade | Valor predefinido |   |--------------|-------------------|   | <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|&quot;. ASPXROLES &quot;|   | <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|&quot; /&quot;|   | <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>| `All`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>| `true`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|&30;, em minutos |   | <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|&quot; AspNetSqlRoleProvider &quot;|   | <xref:System.Web.Configuration.RoleManagerSection.Domain%2A>| Uma cadeia vazia (&quot;&quot;) |   | <xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|</xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A></xref:System.Web.Configuration.RoleManagerSection.Domain%2A></xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A></xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A></xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A></xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A></xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A></xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A></xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A></xref:System.Web.Configuration.RoleManagerSection.CookieName%2A></xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A></xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>"
  syntax:
    content: public RoleManagerSection ();
    parameters: []
  overload: System.Web.Configuration.RoleManagerSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  id: CacheRolesInCookie
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define um valor que indica se as funções do utilizador atual são colocadas em cache num cookie."
  remarks: "A propriedade CacheRolesInCookie devolve um valor booleano que indica se o armazenamento de cookie para nomes de funções está ativado.       Quando a propriedade CacheRolesInCookie está definida como `true` no ficheiro de configuração, as informações de função para cada utilizador são armazenadas num cookie no cliente. Quando verifica a gestão de funções para determinar se um utilizador está numa função específica, o cookie de funções é verificado antes de chamar o fornecedor de funções para verificar a lista de funções na origem de dados. O cookie é atualizado dinamicamente no cliente para colocar em cache os nomes de função validados mais recentemente.       Pode melhorar a fiabilidade dos nomes de função que são colocadas em cache num cookie, especificando um <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>propriedade quando configura o `roleManager` secção do ficheiro de configuração.</xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> A predefinição <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>propriedade é `All`, que encripta os nomes de função no cookie e valida que o conteúdo do cookie não foram alterado.</xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>"
  example:
  - "The following code example demonstrates how to use the CacheRolesInCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_254_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/csharp/p-system.web.configurati_254_1.cs)]"
  syntax:
    content: public bool CacheRolesInCookie { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as funções do utilizador atual são colocadas em cache num cookie; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieName
  id: CookieName
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
  fullName: System.Web.Configuration.RoleManagerSection.CookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o nome do cookie que é utilizada para nomes de funções de cache."
  remarks: "A propriedade CookieName devolve o nome do cookie que é utilizada para nomes de funções de cache. Pode especificar o nome do cookie onde funções são colocadas em cache para a sua aplicação através da definição de `cookieName` atributo no ficheiro Web. config para a sua aplicação ASP.NET. Isto é útil quando pretender identificar exclusivamente um cookie para a sua aplicação ou quando um cookie é partilhado entre várias aplicações."
  example:
  - "The following code example demonstrates how to use the CookieName property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_120_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/csharp/p-system.web.configurati_120_1.cs)]"
  syntax:
    content: public string CookieName { get; set; }
    return:
      type: System.String
      description: "O nome do cookie usado para nomes de funções de cache. A predefinição é &quot;. ASPXROLES&quot;."
  overload: System.Web.Configuration.RoleManagerSection.CookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookiePath
  id: CookiePath
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
  fullName: System.Web.Configuration.RoleManagerSection.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o caminho virtual do cookie que é utilizado para colocar em cache nomes de funções."
  remarks: "Pode especificar o caminho do cookie onde são colocadas em cache nomes de função para a sua aplicação através da definição de `cookiePath` atributo no ficheiro Web. config para a sua aplicação ASP.NET. A propriedade CookiePath devolve o valor da `cookiePath` atributo do ficheiro Web. config. O caminho é sensível às maiúsculas e minúsculas."
  example:
  - "The following code example demonstrates how to use the CookiePath property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_217_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/csharp/p-system.web.configurati_217_1.cs)]"
  syntax:
    content: public string CookiePath { get; set; }
    return:
      type: System.String
      description: "O caminho do cookie usado para armazenar os nomes de função. A predefinição é &quot;/&quot;."
  overload: System.Web.Configuration.RoleManagerSection.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection
  id: CookieProtection
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o tipo de segurança que é utilizado para proteger o cookie que coloca em cache nomes de funções."
  remarks: "A propriedade CookieProtection descreve como informações num cookie é guardada seguramente. Pode especificar o tipo de segurança do cookie onde funções são colocadas em cache para a sua aplicação através da definição de `cookieProtection` atributo no ficheiro Web. config para a sua aplicação ASP.NET. O `cookieProtection` atributo demora um <xref:System.Web.Security.CookieProtection>valor de enumeração de `All`, `Encryption`, `None`, ou `Validation`.</xref:System.Web.Security.CookieProtection> A predefinição é `All`. Lembre-se de que utilize o valor predefinido para a propriedade CookieProtection se pretender que tanto a validação de dados, como a encriptação para ajudar a proteger o cookie. Para melhorar a proteção dos seus cookies, também pode definir o <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>propriedade `true`.</xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>"
  example:
  - "The following code example demonstrates how to use the CookieProtection property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_134_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/csharp/p-system.web.configurati_134_1.cs)]"
  syntax:
    content: public System.Web.Security.CookieProtection CookieProtection { get; set; }
    return:
      type: System.Web.Security.CookieProtection
      description: "O tipo de proteção de segurança utilizado dentro de cookie em que são colocadas em cache nomes de funções. A predefinição é <xref uid=&quot;langword_csharp_All&quot; name=&quot;All&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  id: CookieRequireSSL
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define um valor que indica se o cookie que é utilizada para nomes de funções de cache necessita de uma ligação de Secure Sockets Layer (SSL) para ser reencaminhado para o servidor."
  remarks: "Pode especificar se o SSL é necessário para devolver o cookie de nomes de função para o servidor ao definir o `cookieRequireSSL` atributo no ficheiro Web. config para a sua aplicação ASP.NET."
  example:
  - "The following code example demonstrates how to use the CookieRequireSSL property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_311_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/csharp/p-system.web.configurati_311_1.cs)]"
  syntax:
    content: public bool CookieRequireSSL { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não for necessária uma ligação SSL para devolver ao servidor de cookie onde os nomes de função são colocadas em cache; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  id: CookieSlidingExpiration
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define um valor que indica se o cookie é utilizado para colocar em cache nomes de função será reposto periodicamente."
  remarks: "Pode especificar se o cookie que é utilizada para nomes de função da cache é periodicamente repor ou expirado, a uma altura fixa no tempo utilizando o `cookieSlidingExpiration` atributo no ficheiro Web. config para a sua aplicação ASP.NET. Se `true`, a expiração de cookie inicialmente está definida para a data e hora atuais e <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>propriedade, em minutos.</xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Enquanto o utilizador continua a utilizar ativamente a aplicação ASP.NET, a data de expiração e hora do cookie é automaticamente atualizada, se não houver inferior a metade do <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>restantes.</xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> A predefinição é `true`."
  example:
  - "The following code example demonstrates how to use the CookieSlidingExpiration property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_403_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/csharp/p-system.web.configurati_403_1.cs)]"
  syntax:
    content: public bool CookieSlidingExpiration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a data de expiração de cookie de nomes de função e a hora serão repostos periodicamente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout
  id: CookieTimeout
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o número de minutos antes de expira o cookie que é utilizada para nomes de funções de cache."
  remarks: "A propriedade CookieTimeout define um valor que especifica o número de minutos antes de expira o cookie de nomes de função. A predefinição é 30 minutos. Se o <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>propriedade é `false`, a propriedade CookieTimeout é ignorada.</xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>"
  example:
  - "The following code example demonstrates how to use the CookieTimeout property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_267_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/csharp/p-system.web.configurati_267_1.cs)]"
  syntax:
    content: public TimeSpan CookieTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>que é o número de minutos antes de expira o cookie usado para nomes de funções de cache.</xref:System.TimeSpan> A predefinição é 30, em minutos."
  overload: System.Web.Configuration.RoleManagerSection.CookieTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  id: CreatePersistentCookie
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Indica se é utilizado para um cookie baseados em sessão ou um cookie persistente para colocar em cache nomes de funções."
  remarks: "A propriedade CreatePersistentCookie indica se é ou não o cookie que é utilizada para nomes de cache de função deve ser um cookie baseados em sessão, o que significa que o cookie é perdido quando o browser é fechado, ou um cookie persistente, o que significa que o cookie está disponível entre sessões do browser. A predefinição é `false`, que indica que um cookie de sessão é utilizado para colocar em cache nomes de funções."
  example:
  - "The following code example demonstrates how to use the CreatePersistentCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_216_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/csharp/p-system.web.configurati_216_1.cs)]"
  syntax:
    content: public bool CreatePersistentCookie { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para tornar o cookie de nomes de função persistente entre sessões do browser; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider
  id: DefaultProvider
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o nome do fornecedor predefinido que é utilizado para gerir funções."
  remarks: "A propriedade DefaultProvider tem de corresponder um valor com nome no `providers` subsecção do `roleManager` secção de um ficheiro de configuração. Uma cadeia vazia (&quot;&quot;) não é um valor válido para a propriedade DefaultProvider."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_283_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/csharp/p-system.web.configurati_283_1.cs)]"
  syntax:
    content: public string DefaultProvider { get; set; }
    return:
      type: System.String
      description: "O nome de um fornecedor no <xref:System.Web.Configuration.RoleManagerSection.Providers*>.</xref:System.Web.Configuration.RoleManagerSection.Providers*> A predefinição é &quot;AspNetSqlRoleProvider&quot;."
  overload: System.Web.Configuration.RoleManagerSection.DefaultProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Domain
  id: Domain
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Domain
  nameWithType: RoleManagerSection.Domain
  fullName: System.Web.Configuration.RoleManagerSection.Domain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o nome do domínio que estão associado com o cookie é utilizado para colocar em cache nomes de funções."
  remarks: "A propriedade de domínio está definida na configuração de uma aplicação ASP.NET, utilizando o `domain` atributo o `roleManager` elemento de configuração. Se for especificado nenhum valor na configuração para o `domain` atributo devolve de propriedade domínio `null` e a função atribui as predefinições de domínio de cookie para o comportamento do <xref:System.Web.HttpCookie.Domain%2A>propriedade.</xref:System.Web.HttpCookie.Domain%2A> A predefinição é uma cadeia vazia."
  syntax:
    content: public string Domain { get; set; }
    return:
      type: System.String
      description: "O <xref:System.Web.HttpCookie.Domain*>do cookie usado para nomes de funções de cache.</xref:System.Web.HttpCookie.Domain*> A predefinição é uma cadeia vazia (<xref uid=&quot;langword_csharp_&quot;&quot;&quot; name=&quot;&quot;&quot;&quot; href=&quot;&quot;></xref>)."
  overload: System.Web.Configuration.RoleManagerSection.Domain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Enabled
  id: Enabled
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
  fullName: System.Web.Configuration.RoleManagerSection.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define um valor que indica se a funcionalidade de gestão de função ASP.NET está ativada."
  remarks: "A propriedade Enabled devolve um valor booleano que indica se é ou não a funcionalidade de gestão de função ASP.NET pode ser acedida em tempo de execução."
  example:
  - "The following code example demonstrates how to use the Enabled property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/visualbasic/p-system.web.configurati_156_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/csharp/p-system.web.configurati_156_1.cs)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se estiver ativada a funcionalidade de gestão de função ASP.NET; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  id: MaxCachedResults
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o número máximo de funções ASP.NET coloca em cache o cookie de função."
  remarks: "O <xref:System.Web.Security.Roles.MaxCachedResults%2A>propriedade devolve um número inteiro que indica o número máximo de funções ASP.NET coloca em cache o cookie de função.</xref:System.Web.Security.Roles.MaxCachedResults%2A> A predefinição é 25."
  syntax:
    content: public int MaxCachedResults { get; set; }
    return:
      type: System.Int32
      description: "Um valor que indica o número máximo de funções ASP.NET coloca em cache o cookie de função. A predefinição é 25."
  overload: System.Web.Configuration.RoleManagerSection.MaxCachedResults*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Properties
  id: Properties
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Properties
  nameWithType: RoleManagerSection.Properties
  fullName: System.Web.Configuration.RoleManagerSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A adicionar."
  overload: System.Web.Configuration.RoleManagerSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Providers
  id: Providers
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Providers
  nameWithType: RoleManagerSection.Providers
  fullName: System.Web.Configuration.RoleManagerSection.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém um <xref href=&quot;System.Configuration.ProviderSettingsCollection&quot;> </xref> objeto do <xref href=&quot;System.Configuration.ProviderSettings&quot;> </xref> elementos."
  remarks: "Fornecedores de gestão de função são componentes que fornecem acesso aos tipos de funções para um site. Pode especificar fornecedores de gestão de função no `providers` subsecção do `roleManager` secção de um ficheiro de configuração.       O <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>propriedade especifica o fornecedor que é utilizado por predefinição.</xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>"
  example:
  - "The following code example demonstrates how to use the Providers property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_354_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/csharp/p-system.web.configurati_354_1.cs)]"
  syntax:
    content: public System.Configuration.ProviderSettingsCollection Providers { get; }
    return:
      type: System.Configuration.ProviderSettingsCollection
      description: "A <xref href=&quot;System.Configuration.ProviderSettingsCollection&quot;> </xref> que contém os fornecedores das definições definidas dentro de <xref uid=&quot;langword_csharp_providers&quot; name=&quot;providers&quot; href=&quot;&quot;> </xref> subsecção do <xref uid=&quot;langword_csharp_roleManager&quot; name=&quot;roleManager&quot; href=&quot;&quot;> </xref> secção do ficheiro de configuração."
  overload: System.Web.Configuration.RoleManagerSection.Providers*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.RoleManagerSection.#ctor
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: RoleManagerSection()
  nameWithType: RoleManagerSection.RoleManagerSection()
  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.RoleManagerSection.CookieName
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
  fullName: System.Web.Configuration.RoleManagerSection.CookieName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.RoleManagerSection.CookiePath
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
  fullName: System.Web.Configuration.RoleManagerSection.CookiePath
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection
- uid: System.Web.Security.CookieProtection
  parent: System.Web.Security
  isExternal: false
  name: CookieProtection
  nameWithType: CookieProtection
  fullName: System.Web.Security.CookieProtection
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider
- uid: System.Web.Configuration.RoleManagerSection.Domain
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Domain
  nameWithType: RoleManagerSection.Domain
  fullName: System.Web.Configuration.RoleManagerSection.Domain
- uid: System.Web.Configuration.RoleManagerSection.Enabled
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
  fullName: System.Web.Configuration.RoleManagerSection.Enabled
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.RoleManagerSection.Properties
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Properties
  nameWithType: RoleManagerSection.Properties
  fullName: System.Web.Configuration.RoleManagerSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.RoleManagerSection.Providers
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Providers
  nameWithType: RoleManagerSection.Providers
  fullName: System.Web.Configuration.RoleManagerSection.Providers
- uid: System.Configuration.ProviderSettingsCollection
  parent: System.Configuration
  isExternal: false
  name: ProviderSettingsCollection
  nameWithType: ProviderSettingsCollection
  fullName: System.Configuration.ProviderSettingsCollection
- uid: System.Web.Configuration.RoleManagerSection.#ctor*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: RoleManagerSection
  nameWithType: RoleManagerSection.RoleManagerSection
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
- uid: System.Web.Configuration.RoleManagerSection.CookieName*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
- uid: System.Web.Configuration.RoleManagerSection.CookiePath*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
- uid: System.Web.Configuration.RoleManagerSection.Domain*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Domain
  nameWithType: RoleManagerSection.Domain
- uid: System.Web.Configuration.RoleManagerSection.Enabled*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
- uid: System.Web.Configuration.RoleManagerSection.Properties*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Properties
  nameWithType: RoleManagerSection.Properties
- uid: System.Web.Configuration.RoleManagerSection.Providers*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Providers
  nameWithType: RoleManagerSection.Providers
