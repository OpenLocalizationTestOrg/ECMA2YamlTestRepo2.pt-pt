### YamlMime:ManagedReference
items:
- uid: System.Activities.Argument
  id: Argument
  children:
  - System.Activities.Argument.ArgumentType
  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  - System.Activities.Argument.Direction
  - System.Activities.Argument.EvaluationOrder
  - System.Activities.Argument.Expression
  - System.Activities.Argument.Get(System.Activities.ActivityContext)
  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  - System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  - System.Activities.Argument.ResultValue
  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  - System.Activities.Argument.UnspecifiedEvaluationOrder
  langs:
  - csharp
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
  type: Class
  summary: "The abstract base class that represents a binding terminal that supports the flow of data into and out of an activity."
  syntax:
    content: public abstract class Argument
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Argument.ArgumentType
  id: ArgumentType
  parent: System.Activities.Argument
  langs:
  - csharp
  name: ArgumentType
  nameWithType: Argument.ArgumentType
  fullName: System.Activities.Argument.ArgumentType
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the data type for the data bound to this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public Type ArgumentType { get; }
    return:
      type: System.Type
      description: "The data type for the data bound to this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  overload: System.Activities.Argument.ArgumentType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  id: Create(System.Type,System.Activities.ArgumentDirection)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Create(Type,ArgumentDirection)
  nameWithType: Argument.Create(Type,ArgumentDirection)
  fullName: System.Activities.Argument.Create(Type,ArgumentDirection)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Initializes and returns a new <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public static System.Activities.Argument Create (Type type, System.Activities.ArgumentDirection direction);
    parameters:
    - id: type
      type: System.Type
      description: "The data type of the <xref href=&quot;System.Activities.Argument&quot;></xref>."
    - id: direction
      type: System.Activities.ArgumentDirection
      description: "One of the enumeration values that specifies the direction of the flow of data through the <xref href=&quot;System.Activities.Argument&quot;></xref>."
    return:
      type: System.Activities.Argument
      description: "The newly created argument."
  overload: System.Activities.Argument.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  id: CreateReference(System.Activities.Argument,System.String)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: CreateReference(Argument,String)
  nameWithType: Argument.CreateReference(Argument,String)
  fullName: System.Activities.Argument.CreateReference(Argument,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Creates a new argument that references the specified target argument using the specified referenced argument name."
  syntax:
    content: public static System.Activities.Argument CreateReference (System.Activities.Argument argumentToReference, string referencedArgumentName);
    parameters:
    - id: argumentToReference
      type: System.Activities.Argument
      description: "The target argument to reference."
    - id: referencedArgumentName
      type: System.String
      description: "The name of the referenced argument."
    return:
      type: System.Activities.Argument
      description: "A new argument that references the specified target argument."
  overload: System.Activities.Argument.CreateReference*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Direction
  id: Direction
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Direction
  nameWithType: Argument.Direction
  fullName: System.Activities.Argument.Direction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets an <xref href=&quot;System.Activities.ArgumentDirection&quot;></xref> that specifies whether the <xref href=&quot;System.Activities.Argument&quot;></xref> represents the flow of data into an activity, out of an activity, or both into and out of an activity."
  syntax:
    content: public System.Activities.ArgumentDirection Direction { get; }
    return:
      type: System.Activities.ArgumentDirection
      description: "One of the enumeration values that specifies the direction of the flow of data through the <xref href=&quot;System.Activities.Argument&quot;></xref>."
  overload: System.Activities.Argument.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.EvaluationOrder
  id: EvaluationOrder
  parent: System.Activities.Argument
  langs:
  - csharp
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
  fullName: System.Activities.Argument.EvaluationOrder
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets or sets a zero-based value that specifies the order in which the argument is evaluated."
  remarks: "By default, the evaluation order of the argument is unspecified and is equal to the <xref:System.Activities.Argument.UnspecifiedEvaluationOrder> value. Set EvaluationOrder to a value greater or equal to zero to specify an evaluation order for this argument. [!INCLUDE[wf2](~/add/includes/wf2-md.md)] evaluates arguments with a specified evaluation order in ascending order. Note that arguments with an unspecified evaluation order are evaluated before those with a specified evaluation order."
  syntax:
    content: public int EvaluationOrder { get; set; }
    return:
      type: System.Int32
      description: "A zero-based value that specifies the order in which the argument is evaluated."
  overload: System.Activities.Argument.EvaluationOrder*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is less than zero and not equal to <xref href=&quot;System.Activities.Argument.UnspecifiedEvaluationOrder&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Argument.Expression
  id: Expression
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Expression
  nameWithType: Argument.Expression
  fullName: System.Activities.Argument.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets or sets an <xref href=&quot;System.Activities.ActivityWithResult&quot;></xref> that represents the value of the data bound to this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public System.Activities.ActivityWithResult Expression { get; set; }
    return:
      type: System.Activities.ActivityWithResult
      description: "The value of the data bound to this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  overload: System.Activities.Argument.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the value of the argument using the specified activity context."
  syntax:
    content: public object Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "The current activity context."
    return:
      type: System.Object
      description: "The value of the argument."
  overload: System.Activities.Argument.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  id: Get``1(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T Get<T> (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Activities.Argument.Get<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: Argument.GetLocation(ActivityContext)
  fullName: System.Activities.Argument.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the <xref href=&quot;System.Activities.Location&quot;></xref> for this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public System.Activities.Location GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "The activity context of the executing activity."
    return:
      type: System.Activities.Location
      description: "The location for this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  overload: System.Activities.Argument.GetLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.ResultValue
  id: ResultValue
  parent: System.Activities.Argument
  langs:
  - csharp
  name: ResultValue
  nameWithType: Argument.ResultValue
  fullName: System.Activities.Argument.ResultValue
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Represents the constant value of “Result”, which corresponds to the name of the <xref:System.Activities.ActivityWithResult.Result*> property of type <xref href=&quot;System.Activities.OutArgument&quot;></xref> in the expression base class <xref href=&quot;System.Activities.ActivityWithResult&quot;></xref>."
  remarks: "Use this constant to reference the result of an expression activity when using late binding."
  syntax:
    content: public const string ResultValue;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  id: Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Set(ActivityContext,Object)
  nameWithType: Argument.Set(ActivityContext,Object)
  fullName: System.Activities.Argument.Set(ActivityContext,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Sets the value of the argument using the specified activity context."
  syntax:
    content: public void Set (System.Activities.ActivityContext context, object value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "The current activity context."
    - id: value
      type: System.Object
      description: "The value for the argument."
  overload: System.Activities.Argument.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.UnspecifiedEvaluationOrder
  id: UnspecifiedEvaluationOrder
  parent: System.Activities.Argument
  langs:
  - csharp
  name: UnspecifiedEvaluationOrder
  nameWithType: Argument.UnspecifiedEvaluationOrder
  fullName: System.Activities.Argument.UnspecifiedEvaluationOrder
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Represents the value of the <xref:System.Activities.Argument.EvaluationOrder*> property for an argument with an unspecified evaluation order. This value is read-only."
  syntax:
    content: public static readonly int UnspecifiedEvaluationOrder;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Activities.Argument.ArgumentType
  parent: System.Activities.Argument
  isExternal: false
  name: ArgumentType
  nameWithType: Argument.ArgumentType
  fullName: System.Activities.Argument.ArgumentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  parent: System.Activities.Argument
  isExternal: false
  name: Create(Type,ArgumentDirection)
  nameWithType: Argument.Create(Type,ArgumentDirection)
  fullName: System.Activities.Argument.Create(Type,ArgumentDirection)
- uid: System.Activities.Argument
  parent: System.Activities
  isExternal: false
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  parent: System.Activities.Argument
  isExternal: false
  name: CreateReference(Argument,String)
  nameWithType: Argument.CreateReference(Argument,String)
  fullName: System.Activities.Argument.CreateReference(Argument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Argument.Direction
  parent: System.Activities.Argument
  isExternal: false
  name: Direction
  nameWithType: Argument.Direction
  fullName: System.Activities.Argument.Direction
- uid: System.Activities.Argument.EvaluationOrder
  parent: System.Activities.Argument
  isExternal: false
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
  fullName: System.Activities.Argument.EvaluationOrder
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Argument.Expression
  parent: System.Activities.Argument
  isExternal: false
  name: Expression
  nameWithType: Argument.Expression
  fullName: System.Activities.Argument.Expression
- uid: System.Activities.ActivityWithResult
  parent: System.Activities
  isExternal: false
  name: ActivityWithResult
  nameWithType: ActivityWithResult
  fullName: System.Activities.ActivityWithResult
- uid: System.Activities.Argument.Get(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: Argument.GetLocation(ActivityContext)
  fullName: System.Activities.Argument.GetLocation(ActivityContext)
- uid: System.Activities.Location
  parent: System.Activities
  isExternal: false
  name: Location
  nameWithType: Location
  fullName: System.Activities.Location
- uid: System.Activities.Argument.ResultValue
  parent: System.Activities.Argument
  isExternal: false
  name: ResultValue
  nameWithType: Argument.ResultValue
  fullName: System.Activities.Argument.ResultValue
- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.Argument
  isExternal: false
  name: Set(ActivityContext,Object)
  nameWithType: Argument.Set(ActivityContext,Object)
  fullName: System.Activities.Argument.Set(ActivityContext,Object)
- uid: System.Activities.Argument.UnspecifiedEvaluationOrder
  parent: System.Activities.Argument
  isExternal: false
  name: UnspecifiedEvaluationOrder
  nameWithType: Argument.UnspecifiedEvaluationOrder
  fullName: System.Activities.Argument.UnspecifiedEvaluationOrder
- uid: System.Activities.Argument.ArgumentType*
  parent: System.Activities.Argument
  isExternal: false
  name: ArgumentType
  nameWithType: Argument.ArgumentType
- uid: System.Activities.Argument.Create*
  parent: System.Activities.Argument
  isExternal: false
  name: Create
  nameWithType: Argument.Create
- uid: System.Activities.Argument.CreateReference*
  parent: System.Activities.Argument
  isExternal: false
  name: CreateReference
  nameWithType: Argument.CreateReference
- uid: System.Activities.Argument.Direction*
  parent: System.Activities.Argument
  isExternal: false
  name: Direction
  nameWithType: Argument.Direction
- uid: System.Activities.Argument.EvaluationOrder*
  parent: System.Activities.Argument
  isExternal: false
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
- uid: System.Activities.Argument.Expression*
  parent: System.Activities.Argument
  isExternal: false
  name: Expression
  nameWithType: Argument.Expression
- uid: System.Activities.Argument.Get*
  parent: System.Activities.Argument
  isExternal: false
  name: Get
  nameWithType: Argument.Get
- uid: System.Activities.Argument.Get<T>*
  parent: System.Activities.Argument
  isExternal: false
  name: Get<T>
  nameWithType: Argument.Get<T>
- uid: System.Activities.Argument.GetLocation*
  parent: System.Activities.Argument
  isExternal: false
  name: GetLocation
  nameWithType: Argument.GetLocation
- uid: System.Activities.Argument.Set*
  parent: System.Activities.Argument
  isExternal: false
  name: Set
  nameWithType: Argument.Set
