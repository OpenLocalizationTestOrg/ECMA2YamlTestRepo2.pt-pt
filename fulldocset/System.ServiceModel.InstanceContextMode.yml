### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.InstanceContextMode
  id: InstanceContextMode
  children:
  - System.ServiceModel.InstanceContextMode.PerCall
  - System.ServiceModel.InstanceContextMode.PerSession
  - System.ServiceModel.InstanceContextMode.Single
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
  type: Enum
  summary: "Specifies the number of service instances available for handling calls that are contained in incoming messages."
  remarks: "The <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> manages the association between the channel and the user-defined service objects. Use the InstanceContextMode enumeration with the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property to specify the lifetime of the <xref:System.ServiceModel.InstanceContext> object. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] can create a new <xref:System.ServiceModel.InstanceContext> object for every call, every session or specify that the <xref:System.ServiceModel.InstanceContext> object is bound to a single service object. For a working example, see the [Instancing](~/add/includes/ajax-current-ext-md.md).       The Single value specifies that a single <xref:System.ServiceModel.InstanceContext> object should be used for the lifetime of the service.      > [!NOTE] >  If the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value is set to Single the result is that your service can only process one message at a time unless you also set the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> value to <xref:System.ServiceModel.ConcurrencyMode>."
  example:
  - "The following code illustrates how to set the InstanceContextMode for a service class:  \n  \n [!code-cs[S_ReliableSession#1](~/add/codesnippet/csharp/t-system.servicemodel.in_1.cs)]\n [!code-vb[S_ReliableSession#1](~/add/codesnippet/visualbasic/t-system.servicemodel.in_1.vb)]"
  syntax:
    content: public enum InstanceContextMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.PerCall
  id: PerCall
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: PerCall
  nameWithType: InstanceContextMode.PerCall
  fullName: System.ServiceModel.InstanceContextMode.PerCall
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A new <xref:System.ServiceModel.InstanceContext> object is created prior to and recycled subsequent to each call. If the channel does not create a session this value behaves as if it were PerCall."
  syntax:
    content: PerCall
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.PerSession
  id: PerSession
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: PerSession
  nameWithType: InstanceContextMode.PerSession
  fullName: System.ServiceModel.InstanceContextMode.PerSession
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A new <xref:System.ServiceModel.InstanceContext> object is created for each session."
  syntax:
    content: PerSession
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.Single
  id: Single
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: Single
  nameWithType: InstanceContextMode.Single
  fullName: System.ServiceModel.InstanceContextMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Only one <xref:System.ServiceModel.InstanceContext> object is used for all incoming calls and is not recycled subsequent to the calls. If a service object does not exist, one is created."
  remarks: >-
    > [!NOTE]

    >  For singleton lifetime behavior (for example, if the host application calls the [System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri\[\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=True) constructor and passes an object to use as the service), the service class must set <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> to Single, or an exception is thrown when the service host is opened.
  syntax:
    content: Single
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.InstanceContextMode.PerCall
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: PerCall
  nameWithType: InstanceContextMode.PerCall
  fullName: System.ServiceModel.InstanceContextMode.PerCall
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode.PerSession
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: PerSession
  nameWithType: InstanceContextMode.PerSession
  fullName: System.ServiceModel.InstanceContextMode.PerSession
- uid: System.ServiceModel.InstanceContextMode.Single
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: Single
  nameWithType: InstanceContextMode.Single
  fullName: System.ServiceModel.InstanceContextMode.Single
