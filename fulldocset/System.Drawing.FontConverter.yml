### YamlMime:ManagedReference
items:
- uid: System.Drawing.FontConverter
  id: FontConverter
  children:
  - System.Drawing.FontConverter.#ctor
  - System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.Drawing.FontConverter.Finalize
  - System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: FontConverter
  nameWithType: FontConverter
  fullName: System.Drawing.FontConverter
  type: Class
  summary: "Converte <xref href=&quot;System.Drawing.Font&quot;> </xref> objetos de dados de um tipo para outro."
  remarks: "É utilizado um conversor de tipos para converter valores entre tipos de dados. Um conversor de tipos também suporta a configuração de propriedade no momento da conceção, fornecendo a conversão do valor de texto ou uma lista de valores que os utilizadores podem selecionar a partir de. A classe de FontConverter através de acesso a <xref:System.ComponentModel.TypeDescriptor>classe chamando a <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>método.</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> </xref:System.ComponentModel.TypeDescriptor>"
  example:
  - "The following code example demonstrates how to use the FontConverter to convert a <xref:System.Drawing.Font> to and from a string. This example is designed to be used with Windows Forms. Paste this code into a form and call the `ShowFontStringConversion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.Converters#3](~/add/codesnippet/cpp/t-system.drawing.fontcon_1.cpp)]\n [!code-cs[System.Drawing.Converters#3](~/add/codesnippet/csharp/t-system.drawing.fontcon_1.cs)]\n [!code-vb[System.Drawing.Converters#3](~/add/codesnippet/visualbasic/t-system.drawing.fontcon_1.vb)]"
  syntax:
    content: 'public class FontConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.FontConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: FontConverter()
  nameWithType: FontConverter.FontConverter()
  fullName: System.Drawing.FontConverter.FontConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova <xref href=&quot;System.Drawing.FontConverter&quot;> </xref> objeto."
  remarks: "Deve aceder um <xref:System.Drawing.FontConverter>objeto através de <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName>método.</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName> </xref:System.Drawing.FontConverter>"
  syntax:
    content: public FontConverter ();
    parameters: []
  overload: System.Drawing.FontConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: FontConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.FontConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se este conversor pode converter um objeto no tipo de origem especificada para o tipo nativo do conversor."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um contexto de formatador. Este objeto pode ser utilizado para obter informações adicionais sobre este conversor está a ser chamado a partir do ambiente. Esta situação pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, por isso, deve verificar sempre. Além disso, as propriedades no objeto context também podem devolver <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: sourceType
      type: System.Type
      description: "O tipo que pretende converter de."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se este objeto pode efetuar a conversão."
  overload: System.Drawing.FontConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: FontConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.FontConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém um valor que indica se este conversor pode converter um objeto para o tipo de destino especificado utilizando o contexto."
  remarks: "O `context` parâmetro pode ser utilizado para extrair informações adicionais sobre o ambiente este conversor está a ser invocado a partir de. Isto pode ser `null`, por isso sempre a existência. Além disso, podem devolver propriedades no objeto context `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref uid=&quot;langword_csharp_ITypeDescriptorContext&quot; name=&quot;ITypeDescriptorContext&quot; href=&quot;&quot;> </xref> objeto que fornece um contexto de formato."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>objeto que representa o tipo que pretende converter.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se este conversor pode efetuar a conversão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.FontConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: FontConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.FontConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte o objeto especificado para o tipo nativo do conversor."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um contexto de formatador. Este objeto pode ser utilizado para obter informações adicionais sobre este conversor está a ser chamado a partir do ambiente. Esta situação pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, por isso, deve verificar sempre. Além disso, as propriedades no objeto context também podem devolver <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> objeto que especifica o idioma utilizado para representar o tipo de letra."
    - id: value
      type: System.Object
      description: "O objeto a converter."
    return:
      type: System.Object
      description: "O objecto convertido."
  overload: System.Drawing.FontConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não foi possível efetuar a conversão."
  platform:
  - net462
- uid: System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: FontConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.FontConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte o objeto especificado para outro tipo."
  remarks: "A conversão de tipo mais comuns é a de e para um tipo de cadeia. As chamadas de implementação predefinidos do <xref:System.Object.ToString%2A>método do objeto se o objeto é válido e se o tipo de destino é cadeia.</xref:System.Object.ToString%2A>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um contexto de formatador. Este objeto pode ser utilizado para obter informações adicionais sobre este conversor está a ser chamado a partir do ambiente. Esta situação pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, por isso, deve verificar sempre. Além disso, as propriedades no objeto context também podem devolver <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>objeto que especifica o idioma utilizado para representar o objeto.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "O objeto a converter."
    - id: destinationType
      type: System.Type
      description: "O tipo de dados ao converter o objeto."
    return:
      type: System.Object
      description: "O objecto convertido."
  overload: System.Drawing.FontConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A conversão não teve êxito."
  platform:
  - net462
- uid: System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: FontConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.FontConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um objeto deste tipo utilizando um conjunto de valores de propriedade especificado para o objeto."
  syntax:
    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um descritor de tipo através do qual pode ser fornecido o contexto adicional."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "Um dicionário de valores de propriedade de novo. O dicionário contém uma série de pares nome-valor, um para cada propriedade devolveu o <xref:System.Drawing.FontConverter.GetProperties*>método.</xref:System.Drawing.FontConverter.GetProperties*>"
    return:
      type: System.Object
      description: "O objeto criado recentemente, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não foi possível criar o objeto. Devolve a implementação predefinida <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       CreateInstance útil para a criação de objetos não são das partições que tem as propriedades das partições."
  overload: System.Drawing.FontConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.Finalize
  id: Finalize
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: Finalize()
  nameWithType: FontConverter.Finalize()
  fullName: System.Drawing.FontConverter.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Permite a <xref href=&quot;System.Drawing.FontConverter&quot;> </xref> para tentar libertar recursos e efetuar outras operações de limpeza antes do <xref href=&quot;System.Drawing.FontConverter&quot;> </xref> é reclamada a recolha de lixo."
  syntax:
    content: ~FontConverter ();
    parameters: []
  overload: System.Drawing.FontConverter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se a alterar um valor deste objeto deve requerer uma chamada para o <xref:System.Drawing.FontConverter.CreateInstance*>método para criar um novo valor.</xref:System.Drawing.FontConverter.CreateInstance*>"
  syntax:
    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um descritor de tipo através do qual pode ser fornecido o contexto adicional."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;> </xref> objecto deve ser chamado quando uma alteração é feito para uma ou mais propriedades deste objeto, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.FontConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: FontConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.FontConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o conjunto de propriedades para este tipo. Por predefinição, um tipo não tem quaisquer propriedades para devolver."
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um descritor de tipo através do qual pode ser fornecido o contexto adicional."
    - id: value
      type: System.Object
      description: "O valor do objeto para obter as propriedades."
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz de <xref:System.Attribute>objetos que descrevem as propriedades.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "O conjunto de propriedades que devem ser disponibilizado para este tipo de dados. Se não existem propriedades devem ser expostas, isto pode devolver <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Devolve a implementação predefinida sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       Uma implementação fácil deste método pode chamar o <xref:System.ComponentModel.TypeConverter.GetProperties*>método para o tipo de dados correto.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.Drawing.FontConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: FontConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determina se este objeto suporta propriedades. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um descritor de tipo através do qual pode ser fornecido o contexto adicional."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o método GetPropertiesSupported deve ser chamado para localizar as propriedades deste objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.FontConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Drawing.FontConverter.#ctor
  parent: System.Drawing.FontConverter
  isExternal: false
  name: FontConverter()
  nameWithType: FontConverter.FontConverter()
  fullName: System.Drawing.FontConverter.FontConverter()
- uid: System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.FontConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: FontConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.FontConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.FontConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: FontConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.FontConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.FontConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: FontConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.FontConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.FontConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: FontConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.FontConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.FontConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: FontConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.FontConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Drawing.FontConverter.Finalize
  parent: System.Drawing.FontConverter
  isExternal: false
  name: Finalize()
  nameWithType: FontConverter.Finalize()
  fullName: System.Drawing.FontConverter.Finalize()
- uid: System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.FontConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: FontConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.FontConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: FontConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Drawing.FontConverter.#ctor*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: FontConverter
  nameWithType: FontConverter.FontConverter
- uid: System.Drawing.FontConverter.CanConvertFrom*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: FontConverter.CanConvertFrom
- uid: System.Drawing.FontConverter.CanConvertTo*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: FontConverter.CanConvertTo
- uid: System.Drawing.FontConverter.ConvertFrom*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: FontConverter.ConvertFrom
- uid: System.Drawing.FontConverter.ConvertTo*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: ConvertTo
  nameWithType: FontConverter.ConvertTo
- uid: System.Drawing.FontConverter.CreateInstance*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: CreateInstance
  nameWithType: FontConverter.CreateInstance
- uid: System.Drawing.FontConverter.Finalize*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: Finalize
  nameWithType: FontConverter.Finalize
- uid: System.Drawing.FontConverter.GetCreateInstanceSupported*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: FontConverter.GetCreateInstanceSupported
- uid: System.Drawing.FontConverter.GetProperties*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: GetProperties
  nameWithType: FontConverter.GetProperties
- uid: System.Drawing.FontConverter.GetPropertiesSupported*
  parent: System.Drawing.FontConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: FontConverter.GetPropertiesSupported
