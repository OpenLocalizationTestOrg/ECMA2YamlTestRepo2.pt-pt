### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ImageList
  id: ImageList
  children:
  - System.Windows.Forms.ImageList.#ctor
  - System.Windows.Forms.ImageList.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.ImageList.ColorDepth
  - System.Windows.Forms.ImageList.Dispose(System.Boolean)
  - System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Drawing.Point,System.Int32)
  - System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.ImageList.Handle
  - System.Windows.Forms.ImageList.HandleCreated
  - System.Windows.Forms.ImageList.Images
  - System.Windows.Forms.ImageList.ImageSize
  - System.Windows.Forms.ImageList.ImageStream
  - System.Windows.Forms.ImageList.RecreateHandle
  - System.Windows.Forms.ImageList.Tag
  - System.Windows.Forms.ImageList.ToString
  - System.Windows.Forms.ImageList.TransparentColor
  langs:
  - csharp
  name: ImageList
  nameWithType: ImageList
  fullName: System.Windows.Forms.ImageList
  type: Class
  summary: "Provides methods to manage a collection of <xref href=&quot;System.Drawing.Image&quot;></xref> objects. This class cannot be inherited."
  remarks: "ImageList is typically used by other controls, such as the <xref:System.Windows.Forms.ListView>, <xref:System.Windows.Forms.TreeView>, or <xref:System.Windows.Forms.ToolBar>. You can add bitmaps or icons to the ImageList, and the other controls are able to use the images as they require.       ImageList uses a handle to manage the list of images. The <xref:System.Windows.Forms.ImageList.Handle%2A> is not created until certain operations, such as getting the <xref:System.Windows.Forms.ImageList.Handle%2A> or calling <xref:System.Windows.Forms.ImageList.Draw%2A>, are performed on the image list. Performing other operations, such as setting the <xref:System.Windows.Forms.ImageList.ColorDepth%2A> or <xref:System.Windows.Forms.ImageList.ImageSize%2A> will cause the <xref:System.Windows.Forms.ImageList.Handle%2A> to be recreated. Therefore, you should perform these operations before you add images to the ImageList. In addition, when you work with forms that will be localized, you should always add an ImageList and images when the Language property of a form is set to Default. Changing the form&quot;s language before you add images will corrupt the application resource files."
  example:
  - "The following code example shows how to select, remove, and display images.  \n  \n [!code-cs[Classic ImageList Example#1](~/add/codesnippet/csharp/t-system.windows.forms.i_1_1.cs)]\n [!code-cpp[Classic ImageList Example#1](~/add/codesnippet/cpp/t-system.windows.forms.i_1_1.cpp)]\n [!code-vb[Classic ImageList Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.i_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Images")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ImageListCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ImageListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageListConverter))]

      public sealed class ImageList : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: ImageList()
  nameWithType: ImageList.ImageList()
  fullName: System.Windows.Forms.ImageList.ImageList()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref> class with default values for <xref:System.Windows.Forms.ImageList.ColorDepth*>, <xref:System.Windows.Forms.ImageList.ImageSize*>, and <xref:System.Windows.Forms.ImageList.TransparentColor*>."
  remarks: "The following table shows initial property values for an instance of <xref:System.Windows.Forms.ImageList>.      |Item|Description|   |----------|-----------------|   |<xref:System.Windows.Forms.ImageList.ColorDepth%2A>|In the .NET Framework version 1.0, the default is <xref:System.Windows.Forms.ColorDepth>. In the .NET Framework version 1.1 or later, the default is <xref:System.Windows.Forms.ColorDepth>.|   |<xref:System.Windows.Forms.ImageList.ImageSize%2A>|The default is a <xref:System.Drawing.Size> object with a height and width of 16 by 16.|   |<xref:System.Windows.Forms.ImageList.TransparentColor%2A>|The default value is <xref:System.Drawing.Color.Transparent%2A>.|"
  example:
  - "The following code example demonstrates constructing an ImageList, adding images to the <xref:System.Windows.Forms.ImageList.Images%2A> property, setting the <xref:System.Windows.Forms.ImageList.ImageSize%2A> property, and using the <xref:System.Windows.Forms.ImageList.Draw%2A> method. To run this example, place it in a form containing a button named `Button1`. The example assumes the existence of `FeatherTexture.bmp` and `Gone Fishing.bmp` at c:\\Windows\\\\. Change the example accordingly if the bitmaps do not exist on your system, or exist at another location.  \n  \n [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/cpp/m-system.windows.forms.i_10_1.cpp)]\n [!code-cs[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/csharp/m-system.windows.forms.i_10_1.cs)]\n [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/visualbasic/m-system.windows.forms.i_10_1.vb)]"
  syntax:
    content: public ImageList ();
    parameters: []
  overload: System.Windows.Forms.ImageList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: ImageList(IContainer)
  nameWithType: ImageList.ImageList(IContainer)
  fullName: System.Windows.Forms.ImageList.ImageList(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref> class, associating it with a container."
  remarks: "The <xref:System.Windows.Forms.ImageList> constructor enables you to associate a <xref:System.Windows.Forms.ImageList> with any <xref:System.ComponentModel.Container> object. By associating the <xref:System.Windows.Forms.ImageList> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.ImageList> to the <xref:System.ComponentModel.Container>. This can be useful if you use a number of components in your application, and want to dispose of all of them simultaneously. For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the Container will force disposal of all of these components as well."
  syntax:
    content: public ImageList (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "An object implementing <xref href=&quot;System.ComponentModel.IContainer&quot;></xref> to associate with this instance of <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  overload: System.Windows.Forms.ImageList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.ColorDepth
  id: ColorDepth
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: ColorDepth
  nameWithType: ImageList.ColorDepth
  fullName: System.Windows.Forms.ImageList.ColorDepth
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the color depth of the image list."
  remarks: "When you set the color depth to a new value, the <xref:System.Windows.Forms.ImageList.Handle%2A> for the image list is recreated. Because setting the ColorDepth property causes the handle to be recreated, you should set ColorDepth prior to setting the <xref:System.Windows.Forms.ImageList.Images%2A> property. When the handle for the <xref:System.Windows.Forms.ImageList> has been created, setting the ColorDepth or <xref:System.Windows.Forms.ImageList.ImageSize%2A> properties in code, after setting the <xref:System.Windows.Forms.ImageList.Images%2A> property, will cause the collection of images set for the <xref:System.Windows.Forms.ImageList.Images%2A> property to be deleted."
  syntax:
    content: public System.Windows.Forms.ColorDepth ColorDepth { get; set; }
    return:
      type: System.Windows.Forms.ColorDepth
      description: "The number of available colors for the image. In the .NET Framework version 1.0, the default is <xref href=&quot;System.Windows.Forms.ColorDepth&quot;></xref>. In the .NET Framework version 1.1 or later, the default is <xref href=&quot;System.Windows.Forms.ColorDepth&quot;></xref>."
  overload: System.Windows.Forms.ImageList.ColorDepth*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The color depth is not a valid <xref href=&quot;System.Windows.Forms.ColorDepth&quot;></xref> enumeration value."
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ImageList.Dispose(Boolean)
  fullName: System.Windows.Forms.ImageList.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Forms.ImageList.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Drawing.Point,System.Int32)
  id: Draw(System.Drawing.Graphics,System.Drawing.Point,System.Int32)
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: Draw(Graphics,Point,Int32)
  nameWithType: ImageList.Draw(Graphics,Point,Int32)
  fullName: System.Windows.Forms.ImageList.Draw(Graphics,Point,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the image indicated by the specified index on the specified <xref href=&quot;System.Drawing.Graphics&quot;></xref> at the given location."
  remarks: ''
  example:
  - "The following code example demonstrates constructing an <xref:System.Windows.Forms.ImageList.%23ctor%2A>, adding images to the <xref:System.Windows.Forms.ImageList.Images%2A> property, setting the <xref:System.Windows.Forms.ImageList.ImageSize%2A> property, and using the Draw method. To run this example, place it in a form containing a button named `Button1`. The example assumes the existence of `FeatherTexture.bmp` and `Gone Fishing.bmp` at c:\\Windows\\\\. Change the example accordingly if the bitmaps do not exist on your system, or exist at another location.  \n  \n [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/cpp/bb472394-1f54-47bb-9d8f-_1.cpp)]\n [!code-cs[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/csharp/bb472394-1f54-47bb-9d8f-_1.cs)]\n [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/visualbasic/bb472394-1f54-47bb-9d8f-_1.vb)]"
  syntax:
    content: public void Draw (System.Drawing.Graphics g, System.Drawing.Point pt, int index);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: pt
      type: System.Drawing.Point
      description: "The location defined by a <xref href=&quot;System.Drawing.Point&quot;></xref> at which to draw the image."
    - id: index
      type: System.Int32
      description: "The index of the image in the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref> to draw."
  overload: System.Windows.Forms.ImageList.Draw*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The index is less than 0.       -or-       The index is greater than or equal to the count of images in the image list."
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32)
  id: Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: Draw(Graphics,Int32,Int32,Int32)
  nameWithType: ImageList.Draw(Graphics,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ImageList.Draw(Graphics,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the image indicated by the given index on the specified <xref href=&quot;System.Drawing.Graphics&quot;></xref> at the specified location."
  syntax:
    content: public void Draw (System.Drawing.Graphics g, int x, int y, int index);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The horizontal position at which to draw the image."
    - id: y
      type: System.Int32
      description: "The vertical position at which to draw the image."
    - id: index
      type: System.Int32
      description: "The index of the image in the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref> to draw."
  overload: System.Windows.Forms.ImageList.Draw*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The index is less than 0.       -or-       The index is greater than or equal to the count of images in the image list."
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: Draw(Graphics,Int32,Int32,Int32,Int32,Int32)
  nameWithType: ImageList.Draw(Graphics,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ImageList.Draw(Graphics,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the image indicated by the given index on the specified <xref href=&quot;System.Drawing.Graphics&quot;></xref> using the specified location and size."
  remarks: "The image is stretched or compressed as necessary to fit the bounds provided."
  syntax:
    content: public void Draw (System.Drawing.Graphics g, int x, int y, int width, int height, int index);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to draw on."
    - id: x
      type: System.Int32
      description: "The horizontal position at which to draw the image."
    - id: y
      type: System.Int32
      description: "The vertical position at which to draw the image."
    - id: width
      type: System.Int32
      description: "The width, in pixels, of the destination image."
    - id: height
      type: System.Int32
      description: "The height, in pixels, of the destination image."
    - id: index
      type: System.Int32
      description: "The index of the image in the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref> to draw."
  overload: System.Windows.Forms.ImageList.Draw*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The index is less than 0.       -or-       The index is greater than or equal to the count of images in the image list."
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.Handle
  id: Handle
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: Handle
  nameWithType: ImageList.Handle
  fullName: System.Windows.Forms.ImageList.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the handle of the image list object."
  remarks: "This corresponds to a Win32 HIMAGELIST handle. The handle is not created until you need to use it. Getting the handle causes it to be created."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "The handle for the image list. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ImageList.Handle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Creating the handle for the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref> failed."
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.HandleCreated
  id: HandleCreated
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: HandleCreated
  nameWithType: ImageList.HandleCreated
  fullName: System.Windows.Forms.ImageList.HandleCreated
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the underlying Win32 handle has been created."
  syntax:
    content: public bool HandleCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Windows.Forms.ImageList.Handle*> has been created; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ImageList.HandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.Images
  id: Images
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: Images
  nameWithType: ImageList.Images
  fullName: System.Windows.Forms.ImageList.Images
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref:System.Windows.Forms.ImageList.ImageCollection> for this image list."
  remarks: "If the image collection has not yet been created, it is created when you retrieve this property."
  example:
  - "The following code example demonstrates constructing an <xref:System.Windows.Forms.ImageList.%23ctor%2A>, adding images to the Images property, setting the <xref:System.Windows.Forms.ImageList.ImageSize%2A> property, and using the <xref:System.Windows.Forms.ImageList.Draw%2A> method. To run this example, place it in a form containing a button named `Button1`. The example assumes the existence of `FeatherTexture.bmp` and `Gone Fishing.bmp` at c:\\Windows\\\\. Change the example accordingly if the bitmaps do not exist on your system, or exist at another location.  \n  \n [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/cpp/p-system.windows.forms.i_0_1.cpp)]\n [!code-cs[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/csharp/p-system.windows.forms.i_0_1.cs)]\n [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/visualbasic/p-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ImageList.ImageCollection Images { get; }
    return:
      type: System.Windows.Forms.ImageList.ImageCollection
      description: "The collection of images."
  overload: System.Windows.Forms.ImageList.Images*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.ImageSize
  id: ImageSize
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: ImageSize
  nameWithType: ImageList.ImageSize
  fullName: System.Windows.Forms.ImageList.ImageSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the size of the images in the image list."
  remarks: "Setting the ImageSize property prior to adding images to the image collection causes the images to be resized to the image size specified.       When you set the ImageSize property to a new value, the <xref:System.Windows.Forms.ImageList.Handle%2A> for the image list is recreated.       Because setting the ImageSize property causes the handle to be recreated, you should set ImageSize prior to setting the <xref:System.Windows.Forms.ImageList.Images%2A> property. When the handle for the <xref:System.Windows.Forms.ImageList> has been created, setting the <xref:System.Windows.Forms.ImageList.ColorDepth%2A> or ImageSize properties in code, after setting the <xref:System.Windows.Forms.ImageList.Images%2A> property, will cause the collection of images set for the <xref:System.Windows.Forms.ImageList.Images%2A> property to be deleted."
  example:
  - "The following code example demonstrates constructing an <xref:System.Windows.Forms.ImageList.%23ctor%2A>, adding images to the <xref:System.Windows.Forms.ImageList.Images%2A> property, setting the ImageSize property, and using the <xref:System.Windows.Forms.ImageList.Draw%2A> method. To run this example, place it in a form containing a button named `Button1`. The example assumes the existence of `FeatherTexture.bmp` and `Gone Fishing.bmp` at c:\\Windows\\\\. Change the example accordingly if the bitmaps do not exist on your system, or exist at another location.  \n  \n [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/cpp/p-system.windows.forms.i_6_1.cpp)]\n [!code-cs[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/csharp/p-system.windows.forms.i_6_1.cs)]\n [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/add/codesnippet/visualbasic/p-system.windows.forms.i_6_1.vb)]"
  syntax:
    content: public System.Drawing.Size ImageSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref> that defines the height and width, in pixels, of the images in the list. The default size is 16 by 16. The maximum size is 256 by 256."
  overload: System.Windows.Forms.ImageList.ImageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value assigned is equal to <xref:System.Drawing.Size.IsEmpty*>.       -or-       The value of the height or width is less than or equal to 0.       -or-       The value of the height or width is greater than 256."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The new size has a dimension less than 0 or greater than 256."
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.ImageStream
  id: ImageStream
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: ImageStream
  nameWithType: ImageList.ImageStream
  fullName: System.Windows.Forms.ImageList.ImageStream
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref href=&quot;System.Windows.Forms.ImageListStreamer&quot;></xref> associated with this image list."
  remarks: "The <xref:System.Windows.Forms.ImageListStreamer> is the data portion of the image list. When you work with forms that will be localized, you should always add an <xref:System.Windows.Forms.ImageList> and images when the Language property of a form is set to Default. Changing the form&quot;s language before you add images will corrupt the image stream.       You can pass this handle to another instance of an <xref:System.Windows.Forms.ImageList>."
  syntax:
    content: public System.Windows.Forms.ImageListStreamer ImageStream { get; set; }
    return:
      type: System.Windows.Forms.ImageListStreamer
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the image list is empty; otherwise, a <xref href=&quot;System.Windows.Forms.ImageListStreamer&quot;></xref> for this <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  overload: System.Windows.Forms.ImageList.ImageStream*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.RecreateHandle
  id: RecreateHandle
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: RecreateHandle
  nameWithType: ImageList.RecreateHandle
  fullName: System.Windows.Forms.ImageList.RecreateHandle
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.ImageList.Handle*> is recreated."
  remarks: "You can use this event to do special processing when the <xref:System.Windows.Forms.ImageList.Handle%2A> is recreated by actions such as changing the <xref:System.Windows.Forms.ImageList.ColorDepth%2A> or <xref:System.Windows.Forms.ImageList.ImageSize%2A>. Special processing may be required because setting the <xref:System.Windows.Forms.ImageList.ColorDepth%2A> or the <xref:System.Windows.Forms.ImageList.ImageSize%2A> property after setting the <xref:System.Windows.Forms.ImageList.Images%2A> property causes the handle to be recreated and the images to be discarded."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RecreateHandle event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ImageList> named `ImageList1`. Then ensure that the event handler is associated with the RecreateHandle event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#160](~/add/codesnippet/csharp/e-system.windows.forms.i_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#160](~/add/codesnippet/visualbasic/e-system.windows.forms.i_1.vb)]"
  syntax:
    content: public event EventHandler RecreateHandle;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.Tag
  id: Tag
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: Tag
  nameWithType: ImageList.Tag
  fullName: System.Windows.Forms.ImageList.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets an object that contains additional data about the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains additional data about the <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  overload: System.Windows.Forms.ImageList.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.ToString
  id: ToString
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: ToString()
  nameWithType: ImageList.ToString()
  fullName: System.Windows.Forms.ImageList.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a string that represents the current <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  remarks: "The ToString method returns a string that includes the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> and <xref:System.Windows.Forms.ImageList.ImageSize%2A> properties."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the current <xref href=&quot;System.Windows.Forms.ImageList&quot;></xref>."
  overload: System.Windows.Forms.ImageList.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ImageList.TransparentColor
  id: TransparentColor
  parent: System.Windows.Forms.ImageList
  langs:
  - csharp
  name: TransparentColor
  nameWithType: ImageList.TransparentColor
  fullName: System.Windows.Forms.ImageList.TransparentColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the color to treat as transparent."
  remarks: "The transparent color is not rendered when the image is drawn."
  syntax:
    content: public System.Drawing.Color TransparentColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "One of the <xref href=&quot;System.Drawing.Color&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_Transparent&quot; name=&quot;Transparent&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ImageList.TransparentColor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.ImageList.#ctor
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ImageList()
  nameWithType: ImageList.ImageList()
  fullName: System.Windows.Forms.ImageList.ImageList()
- uid: System.Windows.Forms.ImageList.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ImageList(IContainer)
  nameWithType: ImageList.ImageList(IContainer)
  fullName: System.Windows.Forms.ImageList.ImageList(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.ImageList.ColorDepth
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ColorDepth
  nameWithType: ImageList.ColorDepth
  fullName: System.Windows.Forms.ImageList.ColorDepth
- uid: System.Windows.Forms.ColorDepth
  parent: System.Windows.Forms
  isExternal: false
  name: ColorDepth
  nameWithType: ColorDepth
  fullName: System.Windows.Forms.ColorDepth
- uid: System.Windows.Forms.ImageList.Dispose(System.Boolean)
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ImageList.Dispose(Boolean)
  fullName: System.Windows.Forms.ImageList.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Drawing.Point,System.Int32)
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Draw(Graphics,Point,Int32)
  nameWithType: ImageList.Draw(Graphics,Point,Int32)
  fullName: System.Windows.Forms.ImageList.Draw(Graphics,Point,Int32)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Draw(Graphics,Int32,Int32,Int32)
  nameWithType: ImageList.Draw(Graphics,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ImageList.Draw(Graphics,Int32,Int32,Int32)
- uid: System.Windows.Forms.ImageList.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Draw(Graphics,Int32,Int32,Int32,Int32,Int32)
  nameWithType: ImageList.Draw(Graphics,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.ImageList.Draw(Graphics,Int32,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.ImageList.Handle
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Handle
  nameWithType: ImageList.Handle
  fullName: System.Windows.Forms.ImageList.Handle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.ImageList.HandleCreated
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: HandleCreated
  nameWithType: ImageList.HandleCreated
  fullName: System.Windows.Forms.ImageList.HandleCreated
- uid: System.Windows.Forms.ImageList.Images
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Images
  nameWithType: ImageList.Images
  fullName: System.Windows.Forms.ImageList.Images
- uid: System.Windows.Forms.ImageList.ImageCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ImageList+ImageCollection
  nameWithType: ImageList+ImageCollection
  fullName: System.Windows.Forms.ImageList+ImageCollection
- uid: System.Windows.Forms.ImageList.ImageSize
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ImageSize
  nameWithType: ImageList.ImageSize
  fullName: System.Windows.Forms.ImageList.ImageSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.ImageList.ImageStream
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ImageStream
  nameWithType: ImageList.ImageStream
  fullName: System.Windows.Forms.ImageList.ImageStream
- uid: System.Windows.Forms.ImageListStreamer
  parent: System.Windows.Forms
  isExternal: false
  name: ImageListStreamer
  nameWithType: ImageListStreamer
  fullName: System.Windows.Forms.ImageListStreamer
- uid: System.Windows.Forms.ImageList.RecreateHandle
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: RecreateHandle
  nameWithType: ImageList.RecreateHandle
  fullName: System.Windows.Forms.ImageList.RecreateHandle
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ImageList.Tag
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Tag
  nameWithType: ImageList.Tag
  fullName: System.Windows.Forms.ImageList.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.ImageList.ToString
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ToString()
  nameWithType: ImageList.ToString()
  fullName: System.Windows.Forms.ImageList.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.ImageList.TransparentColor
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: TransparentColor
  nameWithType: ImageList.TransparentColor
  fullName: System.Windows.Forms.ImageList.TransparentColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ImageList.#ctor*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ImageList
  nameWithType: ImageList.ImageList
- uid: System.Windows.Forms.ImageList.ColorDepth*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ColorDepth
  nameWithType: ImageList.ColorDepth
- uid: System.Windows.Forms.ImageList.Dispose*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Dispose
  nameWithType: ImageList.Dispose
- uid: System.Windows.Forms.ImageList.Draw*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Draw
  nameWithType: ImageList.Draw
- uid: System.Windows.Forms.ImageList.Handle*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Handle
  nameWithType: ImageList.Handle
- uid: System.Windows.Forms.ImageList.HandleCreated*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: HandleCreated
  nameWithType: ImageList.HandleCreated
- uid: System.Windows.Forms.ImageList.Images*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Images
  nameWithType: ImageList.Images
- uid: System.Windows.Forms.ImageList.ImageSize*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ImageSize
  nameWithType: ImageList.ImageSize
- uid: System.Windows.Forms.ImageList.ImageStream*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ImageStream
  nameWithType: ImageList.ImageStream
- uid: System.Windows.Forms.ImageList.Tag*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: Tag
  nameWithType: ImageList.Tag
- uid: System.Windows.Forms.ImageList.ToString*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: ToString
  nameWithType: ImageList.ToString
- uid: System.Windows.Forms.ImageList.TransparentColor*
  parent: System.Windows.Forms.ImageList
  isExternal: false
  name: TransparentColor
  nameWithType: ImageList.TransparentColor
