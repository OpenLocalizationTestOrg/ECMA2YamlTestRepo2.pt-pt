### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  id: WebPartAuthorizationEventHandler
  langs:
  - csharp
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  type: Delegate
  summary: "Represents the method that handles the <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;></xref> event of a <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref> object."
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised before a Web Parts control is added to a Web Parts zone. You can specify which Web Parts controls can be added to a zone by customizing how the event is handled. The method specified in the WebPartAuthorizationEventHandler delegate is called when an <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event is raised.       Page developers can provide custom handlers for Web Parts events by adding an `OnAuthorizeWebPart` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)."
  syntax:
    content: public delegate void WebPartAuthorizationEventHandler(object sender, WebPartAuthorizationEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
