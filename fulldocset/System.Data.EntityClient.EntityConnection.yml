### YamlMime:ManagedReference
items:
- uid: System.Data.EntityClient.EntityConnection
  id: EntityConnection
  children:
  - System.Data.EntityClient.EntityConnection.#ctor
  - System.Data.EntityClient.EntityConnection.#ctor(System.String)
  - System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  - System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.BeginTransaction
  - System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  - System.Data.EntityClient.EntityConnection.Close
  - System.Data.EntityClient.EntityConnection.ConnectionString
  - System.Data.EntityClient.EntityConnection.ConnectionTimeout
  - System.Data.EntityClient.EntityConnection.CreateCommand
  - System.Data.EntityClient.EntityConnection.CreateDbCommand
  - System.Data.EntityClient.EntityConnection.Database
  - System.Data.EntityClient.EntityConnection.DataSource
  - System.Data.EntityClient.EntityConnection.DbProviderFactory
  - System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  - System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  - System.Data.EntityClient.EntityConnection.Open
  - System.Data.EntityClient.EntityConnection.ServerVersion
  - System.Data.EntityClient.EntityConnection.State
  - System.Data.EntityClient.EntityConnection.StoreConnection
  langs:
  - csharp
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
  type: Class
  summary: "Contém uma referência a um modelo conceptual e uma ligação à origem de dados. Esta classe não pode ser herdada."
  remarks: "Para evitar inadvertidamente colocar objetos, tais como <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>sincronizados com os seus metadados, a EntityConnection tem de bloquear os seus metadados.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Sem alterações à cadeia de ligação são permitidas depois dos metadados está bloqueado. Seguem-se dois cenários em que está bloqueado metadados:-a EntityConnection instância é construída através do construtor predefinido ou através de <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>construtor, que aceita uma cadeia de ligação.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> Em ambos os casos a cadeia de ligação poderá ter sido alterada várias vezes antes da ligação está aberta. Chamar <xref:System.Data.EntityClient.EntityConnection.Open%2A>ou <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>bloqueia os metadados.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -A instância a EntityConnection é construída através de do <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>construtor, que aceita um <xref:System.Data.Metadata.Edm.MetadataWorkspace>e <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> Neste caso, os metadados está bloqueado durante a construção. Sem alterações à cadeia de ligação nunca são permitidas.       Quando os metadados estiver carregado, a EntityConnection verifica o modelo conceptual, o modelo de armazenamento e que o ficheiro de mapeamento estão presentes todos os.       Para obter exemplos de código, consulte [trabalhar com EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: 'public sealed class EntityConnection : System.Data.Common.DbConnection'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.GetSchema
  - System.Data.Common.DbConnection.GetSchema(System.String)
  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor
  id: '#ctor'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> classe."
  remarks: "Para evitar inadvertidamente colocar objetos, tais como <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>sincronizados com os seus metadados <xref:System.Data.EntityClient.EntityConnection>tem de bloquear os seus metadados.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Sem alterações à cadeia de ligação são permitidas depois dos metadados está bloqueado. Seguem-se dois cenários em que está bloqueado metadados: - <xref:System.Data.EntityClient.EntityConnection>instância é construída através do construtor predefinido ou através de <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>construtor, que aceita uma cadeia de ligação.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> Em ambos os casos a cadeia de ligação poderá ter sido alterada várias vezes antes da ligação está aberta. Chamar <xref:System.Data.EntityClient.EntityConnection.Open%2A>ou <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>bloqueia os metadados.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -A <xref:System.Data.EntityClient.EntityConnection>instância é construída através de do <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>construtor, que aceita um <xref:System.Data.Metadata.Edm.MetadataWorkspace>e <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> Neste caso, os metadados está bloqueado durante a construção. Sem alterações à cadeia de ligação nunca são permitidas.       Quando os metadados estiver carregado, o <xref:System.Data.EntityClient.EntityConnection>verifica se o modelo conceptual, o modelo de armazenamento e o ficheiro de mapeamento estão todos presentes.</xref:System.Data.EntityClient.EntityConnection>       Para obter exemplos de código, consulte [trabalhar com EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> classe, com base na cadeia de ligação."
  remarks: "Gerar uma cadeia de ligação com nome que é armazenada no ficheiro de configuração da aplicação. Esta cadeia de ligação com nome pode ser fornecida em vez do `connectionString` parâmetro quando instanciar a <xref:System.Data.EntityClient.EntityConnection>classe.</xref:System.Data.EntityClient.EntityConnection>       Para evitar colocar inadvertidamente objetos <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>sincronizados com os seus metadados <xref:System.Data.EntityClient.EntityConnection>tem de bloquear os seus metadados.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Sem alterações à cadeia de ligação são permitidas depois dos metadados está bloqueado. Seguem-se dois cenários em que está bloqueado metadados: - <xref:System.Data.EntityClient.EntityConnection>instância é construída através o construtor predefinido ou através deste construtor (a EntityConnection), que aceita uma cadeia de ligação.</xref:System.Data.EntityClient.EntityConnection> Em ambos os casos a cadeia de ligação poderá ter sido alterada várias vezes antes da ligação está aberta. Chamar <xref:System.Data.EntityClient.EntityConnection.Open%2A>ou <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>bloqueia os metadados.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -A <xref:System.Data.EntityClient.EntityConnection>instância é construída através de do <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>construtor, que aceita um <xref:System.Data.Metadata.Edm.MetadataWorkspace>e <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> Neste caso, os metadados está bloqueado durante a construção. Sem alterações à cadeia de ligação nunca são permitidas.       Quando os metadados estiver carregado, o <xref:System.Data.EntityClient.EntityConnection>verifica se o modelo conceptual, o modelo de armazenamento e o ficheiro de mapeamento estão todos presentes.</xref:System.Data.EntityClient.EntityConnection>       Para obter exemplos de código, consulte [trabalhar com EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "A cadeia de ligação específica do fornecedor."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uma palavra-chave da cadeia de ligação inválido foi fornecido ou uma palavra-chave da cadeia de ligação necessárias não foi fornecida."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> classe com uma determinada <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> e <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref>."
  remarks: "Este construtor permite-lhe criar um <xref:System.Data.EntityClient.EntityConnection>de metadados que é um ficheiro num disco ou a um recurso incorporado numa assemblagem.</xref:System.Data.EntityClient.EntityConnection>       Para evitar inadvertidamente colocar objetos, tais como <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>sincronizados com os seus metadados do <xref:System.Data.EntityClient.EntityConnection>tem de bloquear os seus metadados.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Sem alterações à cadeia de ligação são permitidas depois dos metadados está bloqueado. Seguem-se dois cenários em que está bloqueado metadados: - <xref:System.Data.EntityClient.EntityConnection>instância é construída através do construtor predefinido ou através de <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>construtor, que aceita uma cadeia de ligação.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> Em ambos os casos a cadeia de ligação poderá ter sido alterada várias vezes antes da ligação está aberta. Chamar <xref:System.Data.EntityClient.EntityConnection.Open%2A>ou <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>bloqueia os metadados.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -A <xref:System.Data.EntityClient.EntityConnection>instância é construída através deste construtor (a EntityConnection), que aceita um <xref:System.Data.Metadata.Edm.MetadataWorkspace>e <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection> Neste caso, os metadados está bloqueado durante a construção. Sem alterações à cadeia de ligação nunca são permitidas.       Quando os metadados estiver carregado, o <xref:System.Data.EntityClient.EntityConnection>verifica se o modelo conceptual, o modelo de armazenamento e o ficheiro de mapeamento estão todos presentes.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);
    parameters:
    - id: workspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "A <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> estar associado este <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Ligação para esta origem de dados subjacentes <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> objeto."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>workspace</code> or <code>connection</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O modelo concetual está em falta a partir da área de trabalho.       - ou - ficheiro de mapeamento está em falta na área de trabalho.       - ou - o modelo de armazenamento se encontra em falta a área de trabalho.       - ou - <code> connection </code> não se encontra no estado fechado."
  - type: System.Data.ProviderIncompatibleException
    commentId: T:System.Data.ProviderIncompatibleException
    description: "O <code> connection </code> não é de um fornecedor ADO.NET Entity Framework compatível."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "A adicionar."
    return:
      type: System.Data.Common.DbTransaction
      description: "A adicionar."
  overload: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Começa uma transação utilizando o fornecedor subjacente."
  remarks: "O método BeginTransaction utiliza o <xref:System.Data.IsolationLevel>nível de isolamento da transação.</xref:System.Data.IsolationLevel> Para especificar um nível de isolamento diferentes, chame <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Este valor pode ser interpretado diferente pelos fornecedores subjacentes diferentes. Se pretender que a aplicação ser portáteis através de vários fornecedores,-explicitamente deve especificar o nível de isolamento da transação chamando <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>       Qualquer momento de determinado não podem existir mais do que uma transação ativa que foi criada através da BeginTransaction. Uma tentativa de chamar qualquer uma das sobrecargas BeginTransaction uma <xref:System.Data.EntityClient.EntityConnection>que já tem um resultados de transação atual no <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. O devolvido <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> instância mais tarde pode ser associada a <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> ao executar o comando em que transação."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O fornecedor subjacente não é conhecido.       - ou - foi efetuada a chamada para BeginTransaction num <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> que já tem uma transação atual.       - ou - o estado do <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> não é <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Começa uma transação com o nível de isolamento especificado utilizando o fornecedor subjacente."
  remarks: "Qualquer momento de determinado pode existir mais do que uma transação ativa que foi criada através da <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Uma tentativa de chamar qualquer uma das <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>sobrecargas uma <xref:System.Data.EntityClient.EntityConnection>que já tem um resultados de transação atual no <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "O nível de isolamento da transação."
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. O devolvido <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> instância mais tarde pode ser associada a <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> ao executar o comando em que transação."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O fornecedor subjacente não é conhecido.       - ou - a chamada para <xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>foi efetuada num <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> que já tem uma transação atual.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>       - ou - o estado do <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> não é <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Não suportada."
  remarks: "O método ChangeDatabase é necessário quando efetuar a derivação de <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> Este método não é suportado e irá elevar <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "Não suportada."
  overload: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Quando o método é chamado."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Close
  id: Close
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Fecha a ligação à base de dados."
  remarks: "Se o fornecedor de dados subjacente não é conhecido, a chamada de Close não produz qualquer efeito."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao fechar a ligação."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Obtém ou define o <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> cadeia de ligação."
  remarks: "An `EntityClient` connection string consists of a sequence of keyword/value parameter pairs separated by semicolons. The equals sign (=) connects each keyword and its value. The following table lists the valid names for keyword values in the ConnectionString.  \n  \n|Keyword|Description|  \n|-------------|-----------------|  \n|`Provider`|Required if the `Name` keyword is not specified. The provider name, which is used to retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider. This value is constant.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty value for the `Provider` keyword is required. This keyword is mutually exclusive with the `Name` keyword.|  \n|`Provider Connection String`|Optional. Specifies the provider-specific connection string that is passed to the underlying data source. This connection string is expressed by using valid keyword/value pairs for the data provider. An invalid `Provider Connection String` will cause a run-time error when it is evaluated by the data source.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.<br /><br /> The value of the `Provider Connection String` must be surrounded by quotes. The following is an example:<br /><br /> `Provider Connection String =\"Server=serverName; User ID = userID\";`<br /><br /> The following example is not going to work:<br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  \n|`Metadata`|Required if the `Name` keyword is not specified. A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information. The following is an example:<br /><br /> `Metadata=`<br /><br /> `c:\\model &#124; c:\\model\\sql\\mapping.msl;`<br /><br /> Blank spaces on each side of the pipe separator are ignored.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.|  \n|`Name`|The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values. In this case, you cannot supply them directly in the connection string. The `Name` keyword is not allowed in a configuration file.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty values for Provider keyword is required.<br /><br /> This keyword is mutually exclusive with all the other connection string keywords.|  \n  \n The application can supply the keyword/values directly in the ConnectionString property, or it can specify a value for the `Name` keyword. If the `Name` keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:  \n  \n `Name=AdventureWorksEntities;`  \n  \n If the `Name` keyword is used in the ConnectionString property, other keywords are not allowed. The `Name` keyword refers to a named connection string that is stored in the `connectionStrings` section in an application configuration file, as shown in the following example. The `Provider`, `Metadata`, and `Provider Connection String` values are retrieved from the configuration file at run time.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The keyword/value pairs can also be supplied directly in the ConnectionString property, as shown in the following example. In this case, the `Name` keyword is not used.  \n  \n```  \n\"Provider=System.Data.SqlClient;  \nMetadata=c:\\metadata|c:\\Metadata\\Sql;  \nProvider Connection String= 'Data Source=localhost;  \n    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' \"  \n```  \n  \n To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \n  \n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> string that supplies part of the underlying provider connection string. Note that the `Provider` name cannot be set by using the `SqlConnectionStringBuilder`, because it does not use valid `SqlConnection` syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> string by setting `EntityConnectionStringBuilder` properties.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "A cadeia de ligação necessária para estabelecer a ligação inicial para uma origem de dados. O valor predefinido é uma cadeia vazia. Numa ligação fechada, atualmente definida valor é devolvido. Não se tiver sido definido nenhum valor, é devolvida uma cadeia vazia."
  overload: System.Data.EntityClient.EntityConnection.ConnectionString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi efetuada uma tentativa para definir a propriedade ConnectionString após o [a EntityConnection](~/add/includes/ajax-current-ext-md.md)do <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> foi inicializado. O [MetadataWorkspace](~/add/includes/ajax-current-ext-md.md) é inicializado ou quando o <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> instância é construída através a sobrecarga que recebe um <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> como um parâmetro, ou quando o <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> instância foi aberta."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uma palavra-chave da cadeia de ligação inválido foi fornecido ou uma palavra-chave da cadeia de ligação necessárias não foi fornecida."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Obtém o número de segundos de espera ao tentar estabelecer uma ligação antes de terminar a tentativa e de gerar um erro."
  remarks: "Devolve zero se o fornecedor de dados subjacente não é conhecido."
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "O tempo (em segundos) de espera por uma ligação abrir. O valor predefinido é o tempo limite predefinido do fornecedor de dados subjacente."
  overload: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor definido é inferior a 0."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Cria uma nova instância de um <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref>, com o <xref:System.Data.EntityClient.EntityCommand.Connection*>definido para este <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>.</xref:System.Data.EntityClient.EntityCommand.Connection*>"
  syntax:
    content: public System.Data.EntityClient.EntityCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityCommand
      description: "Um <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> objeto."
  overload: System.Data.EntityClient.EntityConnection.CreateCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O nome do fornecedor de dados subjacente não é conhecido."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A adicionar."
  overload: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Database
  id: Database
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Obtém o nome da base de dados atual ou a base de dados que será utilizado após uma ligação está aberta."
  remarks: "Para o valor de palavra-chave específica, tal como `Database`, que mapeia para a propriedade de base de dados, consulte a documentação para o fornecedor de dados subjacente. Para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalentes palavras-chave, consulte a documentação para o <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>propriedade.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "O valor da <xref uid=&quot;langword_csharp_Database&quot; name=&quot;Database&quot; href=&quot;&quot;> </xref> propriedade do fornecedor de dados subjacente."
  overload: System.Data.EntityClient.EntityConnection.Database*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O fornecedor de dados subjacente não é conhecido."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DataSource
  id: DataSource
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Obtém o nome ou endereço de rede da origem de dados para ligar a."
  remarks: "Para o valor de palavra-chave específica, tal como `DataSource`, que mapeia para a propriedade de origem de dados, consulte a documentação para o fornecedor de dados subjacente. Para [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] equivalentes palavras-chave, consulte a documentação para o <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>propriedade.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "O nome da origem de dados. O valor predefinido é uma cadeia vazia."
  overload: System.Data.EntityClient.EntityConnection.DataSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O fornecedor de dados subjacente não é conhecido."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "A adicionar."
  overload: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.EntityClient.EntityConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Isto enlists <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> na transação especificada."
  remarks: "Este método reencaminha a chamada para a ligação da origem de dados para a inscrição explicitamente na transmitido <xref:System.Transactions.Transaction>.</xref:System.Transactions.Transaction>"
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "O objeto de transação para inscrever no."
  overload: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O estado do <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> não é <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  id: GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Devolve o <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> associada a este <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  remarks: "A <xref:System.Data.Metadata.Edm.MetadataWorkspace>é criado automaticamente quando o <xref:System.Data.EntityClient.EntityConnection>classe é criada.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> O processo de criação poderá gerar exceções específicas de metadados. Metadados que é carregado na memória e uma aplicação de modelo de dados de entidade (EDM) utiliza esses metadados para aceder às informações sobre a origem de dados subjacente. Para obter mais informações, consulte [ADO.NET metadados](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5).       Para evitar inadvertidamente colocar objetos, tais como <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>sincronizados com os seus metadados <xref:System.Data.EntityClient.EntityConnection>tem de bloquear os seus metadados.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Sem alterações à cadeia de ligação são permitidas depois dos metadados está bloqueado. Seguem-se dois cenários em que está bloqueado metadados: - <xref:System.Data.EntityClient.EntityConnection>instância é construída através do construtor predefinido ou através de <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>construtor, que aceita uma cadeia de ligação.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> Em ambos os casos a cadeia de ligação pode ser alterada várias vezes antes da ligação está aberta. <xref:System.Data.EntityClient.EntityConnection.Open%2A>ou <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>bloqueia os metadados.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A></xref:System.Data.EntityClient.EntityConnection.Open%2A>      -A <xref:System.Data.EntityClient.EntityConnection>instância é construída através de do <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>construtor, que aceita um <xref:System.Data.Metadata.Edm.MetadataWorkspace>e <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> Neste caso, os metadados está bloqueado durante a construção. Sem alterações à cadeia de ligação nunca são permitidas.       Quando os metadados estiver carregado, o <xref:System.Data.EntityClient.EntityConnection>verifica se o modelo conceptual, o modelo de armazenamento e o ficheiro de mapeamento estão todos presentes.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "O <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> associada a este <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  exceptions:
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "A cadeia de ligação inline contém um inválido <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> valor de palavra-chave."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Open
  id: Open
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Estabelece uma ligação à origem de dados, chamando do fornecedor de dados subjacente<xref uid=&quot;langword_csharp_ Open&quot; name=&quot; Open&quot; href=&quot;&quot;> </xref> método."
  remarks: "Para evitar inadvertidamente colocar objetos, tais como <xref:System.Data.Common.CommandTrees>e <xref:System.Data.Objects.ObjectContext>sincronizados com os seus metadados <xref:System.Data.EntityClient.EntityConnection>tem de bloquear os seus metadados.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Sem alterações à cadeia de ligação são permitidas depois dos metadados está bloqueado. Seguem-se dois cenários em que está bloqueado metadados: - <xref:System.Data.EntityClient.EntityConnection>instância é construída através do construtor predefinido ou através de <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>construtor, que aceita uma cadeia de ligação.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> Em ambos os casos a cadeia de ligação poderá ter sido alterada várias vezes antes da ligação está aberta. Chamar <xref:System.Data.EntityClient.EntityConnection.Open%2A>ou <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>bloqueia os metadados.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      -O <xref:System.Data.EntityClient.EntityConnection>instância é construída através de <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>construtor, o qual que aceita um <xref:System.Data.Metadata.Edm.MetadataWorkspace>e <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> Neste caso, os metadados está bloqueado durante a construção. Sem alterações à cadeia de ligação nunca são permitidas.       Quando os metadados estiver carregado, o <xref:System.Data.EntityClient.EntityConnection>verifica se o modelo conceptual, o modelo de armazenamento e o ficheiro de mapeamento estão todos presentes.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorre um erro ao abrir a ligação ou o nome do fornecedor de dados subjacente não é conhecido."
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "A cadeia de ligação inline contém um inválido <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> valor de palavra-chave."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Obtém uma cadeia que contém a versão da origem de dados à qual o cliente está ligado."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "A versão da origem de dados que está contida na cadeia de ligação de fornecedor."
  overload: System.Data.EntityClient.EntityConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.State
  id: State
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Obtém o <xref href=&quot;System.Data.ConnectionState&quot;> </xref> propriedade do fornecedor subjacente se o <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> está aberta. Caso contrário, devolve <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "<xref href=&quot;System.Data.ConnectionState&quot;></xref>, se e apenas se ambos os <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>do estado interno e o fornecedor subjacente <xref href=&quot;System.Data.ConnectionState&quot;> </xref> estão abertas. Se o <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>do estado está aberto, mas o fornecedor <xref href=&quot;System.Data.ConnectionState&quot;> </xref> estiver fechado, esta propriedade devolve <xref href=&quot;System.Data.ConnectionState&quot;> </xref>. Caso contrário, devolve <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  id: StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Fornece acesso para a ligação de origem de dados subjacente, que é utilizado pelo <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> objeto."
  remarks: "Se o <xref:System.Data.EntityClient.EntityConnection>objeto está fechado, a ligação da origem de dados devolvidos será fechada.</xref:System.Data.EntityClient.EntityConnection> Se estiver aberto, será devolvida uma ligação de origem de dados aberto. Se as informações de ligação da origem de dados foi definidas, o valor devolvido é sempre não nulo. Se não houver nenhuma informações de ligação da origem de dados (por exemplo, se utilizou o construtor predefinido e não foi definida nenhuma cadeia de ligação posteriormente), em seguida, é devolvida uma referência nula.       A mesma ligação de origem de dados utilizada pelo Entity Framework pode ser partilhada com outras partes de uma aplicação. A ligação da origem de dados é devolvida como uma <xref:System.Data.Common.DbConnection>de objeto do <xref:System.Data.Objects.ObjectContext.Connection%2A>propriedade <xref:System.Data.Objects.ObjectContext>, ou da propriedade StoreConnection de <xref:System.Data.EntityClient.EntityConnection>.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.Connection%2A> </xref:System.Data.Common.DbConnection>"
  syntax:
    content: public System.Data.Common.DbConnection StoreConnection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "O <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> para a ligação de origem de dados."
  overload: System.Data.EntityClient.EntityConnection.StoreConnection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.ProviderIncompatibleException
  parent: System.Data
  isExternal: false
  name: ProviderIncompatibleException
  nameWithType: ProviderIncompatibleException
  fullName: System.Data.ProviderIncompatibleException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.MetadataException
  parent: System.Data
  isExternal: false
  name: MetadataException
  nameWithType: MetadataException
  fullName: System.Data.MetadataException
- uid: System.Data.EntityClient.EntityConnection.#ctor
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
- uid: System.Data.EntityClient.EntityTransaction
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityTransaction
  nameWithType: EntityTransaction
  fullName: System.Data.EntityClient.EntityTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
- uid: System.Data.EntityClient.EntityConnection.Close
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
- uid: System.Data.EntityClient.EntityCommand
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityCommand
  nameWithType: EntityCommand
  fullName: System.Data.EntityClient.EntityCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.EntityClient.EntityConnection.Database
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
- uid: System.Data.EntityClient.EntityConnection.Open
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
- uid: System.Data.EntityClient.EntityConnection.#ctor*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection.EntityConnection
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: EntityConnection.BeginDbTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: EntityConnection.BeginTransaction
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: EntityConnection.ChangeDatabase
- uid: System.Data.EntityClient.EntityConnection.Close*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close
  nameWithType: EntityConnection.Close
- uid: System.Data.EntityClient.EntityConnection.ConnectionString*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
- uid: System.Data.EntityClient.EntityConnection.CreateCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand
  nameWithType: EntityConnection.CreateCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: EntityConnection.CreateDbCommand
- uid: System.Data.EntityClient.EntityConnection.Database*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose
  nameWithType: EntityConnection.Dispose
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: EntityConnection.EnlistTransaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace
  nameWithType: EntityConnection.GetMetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.Open*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open
  nameWithType: EntityConnection.Open
- uid: System.Data.EntityClient.EntityConnection.ServerVersion*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
- uid: System.Data.EntityClient.EntityConnection.StoreConnection*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
