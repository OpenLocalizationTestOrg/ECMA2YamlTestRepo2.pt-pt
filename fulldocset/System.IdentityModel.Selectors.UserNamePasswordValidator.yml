### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  id: UserNamePasswordValidator
  children:
  - System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  - System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  - System.IdentityModel.Selectors.UserNamePasswordValidator.None
  - System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  langs:
  - csharp
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
  type: Class
  summary: "Validates a username and password."
  remarks: 'Use the UserNamePasswordValidator class to specify how a username and password is validated. This can be done by deriving a class from UserNamePasswordValidator and override the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method. For more information about creating a custom user name and password validator, see [How to: Use a Custom User Name and Password Validator](~/add/includes/ajax-current-ext-md.md).'
  example:
  - >-
    [!code-vb[c_UsernameValidator#1](~/add/codesnippet/visualbasic/t-system.identitymodel.s_4_1.vb)]
     [!code-cs[c_UsernameValidator#1](~/add/codesnippet/csharp/t-system.identitymodel.s_4_1.cs)]
  syntax:
    content: public abstract class UserNamePasswordValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: UserNamePasswordValidator()
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;></xref> class."
  syntax:
    content: protected UserNamePasswordValidator ();
    parameters: []
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  id: CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: CreateMembershipProviderValidator(MembershipProvider)
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets an instance of a <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;></xref> that validates a username and password using the specified membership provider."
  remarks: "The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class."
  syntax:
    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator CreateMembershipProviderValidator (System.Web.Security.MembershipProvider provider);
    parameters:
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "A <xref:System.Web.Security.MembershipProvider> to validate the username and password."
    return:
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "An <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;></xref> that validates a username and password using <code>provider</code>."
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  id: None
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: None
  nameWithType: UserNamePasswordValidator.None
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a validator that performs no validation on the username and password. As a result, the username and password are always deemed valid."
  remarks: "The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class."
  syntax:
    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator None { get; }
    return:
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "An <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;></xref> that performs no validation on the username and password."
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.None*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  id: Validate(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: Validate(String,String)
  nameWithType: UserNamePasswordValidator.Validate(String,String)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "When overridden in a derived class, validates the specified username and password."
  remarks: "Override the Validate method to specify how the username and password is validated. If the username and password do not pass validation, then throw a <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>."
  example:
  - >-
    [!code-vb[c_UsernameValidator#2](~/add/codesnippet/visualbasic/6855a484-3e15-4d15-ac89-_1.vb)]
     [!code-cs[c_UsernameValidator#2](~/add/codesnippet/csharp/6855a484-3e15-4d15-ac89-_1.cs)]
  syntax:
    content: public abstract void Validate (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "The username to validate."
    - id: password
      type: System.String
      description: "The password to validate."
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: UserNamePasswordValidator()
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: CreateMembershipProviderValidator(MembershipProvider)
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: None
  nameWithType: UserNamePasswordValidator.None
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: Validate(String,String)
  nameWithType: UserNamePasswordValidator.Validate(String,String)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: CreateMembershipProviderValidator
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: None
  nameWithType: UserNamePasswordValidator.None
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: Validate
  nameWithType: UserNamePasswordValidator.Validate
