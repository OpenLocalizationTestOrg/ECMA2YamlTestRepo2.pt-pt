### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellCollection
  id: DataGridViewCellCollection
  children:
  - System.Windows.Forms.DataGridViewCellCollection.#ctor(System.Windows.Forms.DataGridViewRow)
  - System.Windows.Forms.DataGridViewCellCollection.Add(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.AddRange(System.Windows.Forms.DataGridViewCell[])
  - System.Windows.Forms.DataGridViewCellCollection.Clear
  - System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  - System.Windows.Forms.DataGridViewCellCollection.Contains(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.IndexOf(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.Item(System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.Item(System.String)
  - System.Windows.Forms.DataGridViewCellCollection.List
  - System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Windows.Forms.DataGridViewCellCollection.Remove(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.RemoveAt(System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataGridViewCellCollection
  nameWithType: DataGridViewCellCollection
  fullName: System.Windows.Forms.DataGridViewCellCollection
  type: Class
  summary: "Represents a collection of cells in a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  remarks: "DataGridViewCellCollection objects are retrieved by the <xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=fullName> property."
  syntax:
    content: >-
      [System.ComponentModel.ListBindable(false)]

      public class DataGridViewCellCollection : System.Windows.Forms.BaseCollection, System.Collections.IList
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Windows.Forms.BaseCollection
  implements:
  - System.Collections.IList
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BaseCollection.Count
  - System.Windows.Forms.BaseCollection.GetEnumerator
  - System.Windows.Forms.BaseCollection.IsReadOnly
  - System.Windows.Forms.BaseCollection.IsSynchronized
  - System.Windows.Forms.BaseCollection.SyncRoot
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.#ctor(System.Windows.Forms.DataGridViewRow)
  id: '#ctor(System.Windows.Forms.DataGridViewRow)'
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: DataGridViewCellCollection(DataGridViewRow)
  nameWithType: DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
  fullName: System.Windows.Forms.DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> class."
  syntax:
    content: public DataGridViewCellCollection (System.Windows.Forms.DataGridViewRow dataGridViewRow);
    parameters:
    - id: dataGridViewRow
      type: System.Windows.Forms.DataGridViewRow
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> that owns the collection."
  overload: System.Windows.Forms.DataGridViewCellCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Add(System.Windows.Forms.DataGridViewCell)
  id: Add(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Add(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Add(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Add(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds a cell to the collection."
  remarks: "Use this method to populate a <xref:System.Windows.Forms.DataGridViewRow> with cells before you add the row to a <xref:System.Windows.Forms.DataGridView> control. Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful."
  syntax:
    content: public virtual int Add (System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to add to the collection."
    return:
      type: System.Int32
      description: "The position in which to insert the new element."
  overload: System.Windows.Forms.DataGridViewCellCollection.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       <code>dataGridViewCell</code> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.AddRange(System.Windows.Forms.DataGridViewCell[])
  id: AddRange(System.Windows.Forms.DataGridViewCell[])
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: AddRange(DataGridViewCell[])
  nameWithType: DataGridViewCellCollection.AddRange(DataGridViewCell[])
  fullName: System.Windows.Forms.DataGridViewCellCollection.AddRange(DataGridViewCell[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds an array of cells to the collection."
  remarks: "Use this method to populate a <xref:System.Windows.Forms.DataGridViewRow> with cells before you add the row to a <xref:System.Windows.Forms.DataGridView> control. Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful."
  syntax:
    content: public virtual void AddRange (System.Windows.Forms.DataGridViewCell[] dataGridViewCells);
    parameters:
    - id: dataGridViewCells
      type: System.Windows.Forms.DataGridViewCell[]
      description: "The array of <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> objects to add to the collection."
  overload: System.Windows.Forms.DataGridViewCellCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataGridViewCells</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       At least one value in <code>dataGridViewCells</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       At least one cell in <code>dataGridViewCells</code> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>.       -or-       At least two values in <code>dataGridViewCells</code> are references to the same <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Clear
  id: Clear
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataGridViewCellCollection.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Clears all cells from the collection."
  remarks: "Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control. Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCellCollection.Clear*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataGridViewCellCollection.CollectionChanged
  fullName: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the collection is changed."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CollectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridViewCellCollection> named `DataGridViewCellCollection1`. Then ensure that the event handler is associated with the CollectionChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#371](~/add/codesnippet/csharp/e-system.windows.forms.d_133_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#371](~/add/codesnippet/visualbasic/e-system.windows.forms.d_133_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Contains(System.Windows.Forms.DataGridViewCell)
  id: Contains(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Contains(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Contains(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Contains(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether the specified cell is contained in the collection."
  syntax:
    content: public virtual bool Contains (System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to locate in the collection."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>dataGridViewCell</code> is in the collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  id: CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: CopyTo(DataGridViewCell[],Int32)
  nameWithType: DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Copies the entire collection of cells into an array at a specified location within the array."
  syntax:
    content: public void CopyTo (System.Windows.Forms.DataGridViewCell[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Forms.DataGridViewCell[]
      description: "The destination array to which the contents will be copied."
    - id: index
      type: System.Int32
      description: "The index of the element in `array` at which to start copying."
  overload: System.Windows.Forms.DataGridViewCellCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.IndexOf(System.Windows.Forms.DataGridViewCell)
  id: IndexOf(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: IndexOf(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.IndexOf(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.IndexOf(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the index of the specified cell."
  syntax:
    content: public int IndexOf (System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "The cell to locate in the collection."
    return:
      type: System.Int32
      description: "The zero-based index of the value of <code>dataGridViewCell</code> parameter, if it is found in the collection; otherwise, -1."
  overload: System.Windows.Forms.DataGridViewCellCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  id: Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Insert(Int32,DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inserts a cell into the collection at the specified index."
  remarks: "Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control. Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful."
  syntax:
    content: public virtual void Insert (int index, System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which to place `dataGridViewCell`."
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to insert."
  overload: System.Windows.Forms.DataGridViewCellCollection.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       <code>dataGridViewCell</code> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataGridViewCellCollection.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the cell at the provided index location. In C#, this property is the indexer for the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> class."
  syntax:
    content: public System.Windows.Forms.DataGridViewCell this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the cell to get or set."
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> stored at the given index."
  overload: System.Windows.Forms.DataGridViewCellCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified value when setting this property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified cell when setting this property already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       The specified cell when setting this property already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than 0.       -or-       <code>index</code> is equal to or greater than the number of cells in the collection."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataGridViewCellCollection.Item(String)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the cell in the column with the provided name. In C#, this property is the indexer for the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> class."
  syntax:
    content: public System.Windows.Forms.DataGridViewCell this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "The name of the column in which to get or set the cell."
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> stored in the column with the given name."
  overload: System.Windows.Forms.DataGridViewCellCollection.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>columnName</code> does not match the name of any columns in the control."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified value when setting this property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified cell when setting this property already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       The specified cell when setting this property already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.List
  id: List
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: List
  nameWithType: DataGridViewCellCollection.List
  fullName: System.Windows.Forms.DataGridViewCellCollection.List
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets an <xref href=&quot;System.Collections.ArrayList&quot;></xref> containing <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> objects."
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection.CollectionChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCollectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Remove(System.Windows.Forms.DataGridViewCell)
  id: Remove(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Remove(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Remove(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Remove(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the specified cell from the collection."
  remarks: "Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control. Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful."
  syntax:
    content: public virtual void Remove (System.Windows.Forms.DataGridViewCell cell);
    parameters:
    - id: cell
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to remove from the collection."
  overload: System.Windows.Forms.DataGridViewCellCollection.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>cell</code> could not be found in the collection."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the cell at the specified index."
  remarks: "Use this method to alter the collection before you add the containing row to a <xref:System.Windows.Forms.DataGridView> control. Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful."
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to be removed."
  overload: System.Windows.Forms.DataGridViewCellCollection.RemoveAt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Copies the elements of the collection to the specified array, starting at the specified index."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in the array at which copying begins."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.       -or-       The number of elements in the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> is greater than the available space from <code>index</code> to the end of <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> cannot be cast automatically to the type of <code>array</code>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the number of elements contained in the collection."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "The number of elements in the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether access to the collection is synchronized (thread safe)."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets an object that can be used to synchronize access to the collection."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns an enumerator that iterates through a collection."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds an item to the collection."
  remarks: "Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to add to the collection."
    return:
      type: System.Int32
      description: "The position into which the new element was inserted."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>value</code> is not a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       <code>value</code> represents a cell that already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Clears the collection."
  remarks: "Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether the collection contains the specified value."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to locate in the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>value</code> is found in the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines the index of a specific item in a collection."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to locate in the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "The index of value if found in the list; otherwise, -1."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inserts an item into the collection at the specified position."
  remarks: "Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which value should be inserted."
    - id: value
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to insert into the IList.Insert."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>value</code> is not a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       <code>dataGridViewCell</code> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the collection has a fixed size."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the collection has a fixed size."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the element at the specified index."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the item to get or set."
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> at the specified index."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The specified value when setting this property is not a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified value when setting this property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified cell when setting this property already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       The specified cell when setting this property already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than 0.       -or-       <code>index</code> is equal to or greater than the number of cells in the collection."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the first occurrence of a specific object from the collection."
  remarks: "Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to remove from the collection."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>value</code> is not a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>cell</code> could not be found in the collection."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> at the specified index."
  remarks: "Once you add the row to a control, the number of cells it contains always matches the number of columns in the control, so this method is no longer useful.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridViewCellCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The position at which to remove the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row that owns this <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
references:
- uid: System.Windows.Forms.BaseCollection
  isExternal: false
  name: System.Windows.Forms.BaseCollection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Windows.Forms.DataGridViewCellCollection.#ctor(System.Windows.Forms.DataGridViewRow)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: DataGridViewCellCollection(DataGridViewRow)
  nameWithType: DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
  fullName: System.Windows.Forms.DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
- uid: System.Windows.Forms.DataGridViewRow
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRow
  nameWithType: DataGridViewRow
  fullName: System.Windows.Forms.DataGridViewRow
- uid: System.Windows.Forms.DataGridViewCellCollection.Add(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Add(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Add(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Add(DataGridViewCell)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataGridViewCell
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCell
  nameWithType: DataGridViewCell
  fullName: System.Windows.Forms.DataGridViewCell
- uid: System.Windows.Forms.DataGridViewCellCollection.AddRange(System.Windows.Forms.DataGridViewCell[])
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: AddRange(DataGridViewCell[])
  nameWithType: DataGridViewCellCollection.AddRange(DataGridViewCell[])
  fullName: System.Windows.Forms.DataGridViewCellCollection.AddRange(DataGridViewCell[])
- uid: System.Windows.Forms.DataGridViewCell[]
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCell
  nameWithType: DataGridViewCell
  fullName: System.Windows.Forms.DataGridViewCell[]
  spec.csharp:
  - uid: System.Windows.Forms.DataGridViewCell
    name: DataGridViewCell
    nameWithType: DataGridViewCell
    fullName: DataGridViewCell[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.DataGridViewCellCollection.Clear
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Clear()
  nameWithType: DataGridViewCellCollection.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.Clear()
- uid: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataGridViewCellCollection.CollectionChanged
  fullName: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Windows.Forms.DataGridViewCellCollection.Contains(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Contains(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Contains(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Contains(DataGridViewCell)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCellCollection.CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: CopyTo(DataGridViewCell[],Int32)
  nameWithType: DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.IndexOf(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: IndexOf(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.IndexOf(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.IndexOf(DataGridViewCell)
- uid: System.Windows.Forms.DataGridViewCellCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Insert(Int32,DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataGridViewCellCollection.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.String)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataGridViewCellCollection.Item(String)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.DataGridViewCellCollection.List
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: List
  nameWithType: DataGridViewCellCollection.List
  fullName: System.Windows.Forms.DataGridViewCellCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Windows.Forms.DataGridViewCellCollection.Remove(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Remove(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Remove(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Remove(DataGridViewCell)
- uid: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.Count
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Clear()
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.#ctor*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: DataGridViewCellCollection
  nameWithType: DataGridViewCellCollection.DataGridViewCellCollection
- uid: System.Windows.Forms.DataGridViewCellCollection.Add*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Add
  nameWithType: DataGridViewCellCollection.Add
- uid: System.Windows.Forms.DataGridViewCellCollection.AddRange*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: AddRange
  nameWithType: DataGridViewCellCollection.AddRange
- uid: System.Windows.Forms.DataGridViewCellCollection.Clear*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Clear
  nameWithType: DataGridViewCellCollection.Clear
- uid: System.Windows.Forms.DataGridViewCellCollection.Contains*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Contains
  nameWithType: DataGridViewCellCollection.Contains
- uid: System.Windows.Forms.DataGridViewCellCollection.CopyTo*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataGridViewCellCollection.CopyTo
- uid: System.Windows.Forms.DataGridViewCellCollection.IndexOf*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataGridViewCellCollection.IndexOf
- uid: System.Windows.Forms.DataGridViewCellCollection.Insert*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Insert
  nameWithType: DataGridViewCellCollection.Insert
- uid: System.Windows.Forms.DataGridViewCellCollection.Item*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Item
  nameWithType: DataGridViewCellCollection.Item
- uid: System.Windows.Forms.DataGridViewCellCollection.List*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: List
  nameWithType: DataGridViewCellCollection.List
- uid: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: OnCollectionChanged
  nameWithType: DataGridViewCellCollection.OnCollectionChanged
- uid: System.Windows.Forms.DataGridViewCellCollection.Remove*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Remove
  nameWithType: DataGridViewCellCollection.Remove
- uid: System.Windows.Forms.DataGridViewCellCollection.RemoveAt*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataGridViewCellCollection.RemoveAt
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.CopyTo
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.Count
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Clear
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Remove
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: DataGridViewCellCollection.System.Collections.IList.RemoveAt
