### YamlMime:ManagedReference
items:
- uid: System._AppDomain
  id: _AppDomain
  children:
  - System._AppDomain.AppendPrivatePath(System.String)
  - System._AppDomain.AssemblyLoad
  - System._AppDomain.AssemblyResolve
  - System._AppDomain.BaseDirectory
  - System._AppDomain.ClearPrivatePath
  - System._AppDomain.ClearShadowCopyPath
  - System._AppDomain.CreateInstance(System.String,System.String)
  - System._AppDomain.CreateInstance(System.String,System.String,System.Object[])
  - System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System._AppDomain.CreateInstanceFrom(System.String,System.String)
  - System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])
  - System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  - System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)
  - System._AppDomain.DomainUnload
  - System._AppDomain.DynamicDirectory
  - System._AppDomain.Equals(System.Object)
  - System._AppDomain.Evidence
  - System._AppDomain.ExecuteAssembly(System.String)
  - System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  - System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  - System._AppDomain.FriendlyName
  - System._AppDomain.GetAssemblies
  - System._AppDomain.GetData(System.String)
  - System._AppDomain.GetHashCode
  - System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System._AppDomain.GetLifetimeService
  - System._AppDomain.GetType
  - System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System._AppDomain.GetTypeInfoCount(System.UInt32@)
  - System._AppDomain.InitializeLifetimeService
  - System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System._AppDomain.Load(System.Byte[])
  - System._AppDomain.Load(System.Reflection.AssemblyName)
  - System._AppDomain.Load(System.String)
  - System._AppDomain.Load(System.Byte[],System.Byte[])
  - System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  - System._AppDomain.Load(System.String,System.Security.Policy.Evidence)
  - System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  - System._AppDomain.ProcessExit
  - System._AppDomain.RelativeSearchPath
  - System._AppDomain.ResourceResolve
  - System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  - System._AppDomain.SetCachePath(System.String)
  - System._AppDomain.SetData(System.String,System.Object)
  - System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  - System._AppDomain.SetShadowCopyPath(System.String)
  - System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)
  - System._AppDomain.ShadowCopyFiles
  - System._AppDomain.ToString
  - System._AppDomain.TypeResolve
  - System._AppDomain.UnhandledException
  langs:
  - csharp
  name: _AppDomain
  nameWithType: _AppDomain
  fullName: System._AppDomain
  type: Interface
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("05F696DC-2B29-3663-AD8B-C4389CF2A713")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface _AppDomain
  implements: []
  platform:
  - net462
- uid: System._AppDomain.AppendPrivatePath(System.String)
  id: AppendPrivatePath(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: AppendPrivatePath(String)
  nameWithType: _AppDomain.AppendPrivatePath(String)
  fullName: System._AppDomain.AppendPrivatePath(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void AppendPrivatePath (string path);
    parameters:
    - id: path
      type: System.String
      description: "To be added."
  overload: System._AppDomain.AppendPrivatePath*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.AssemblyLoad
  id: AssemblyLoad
  parent: System._AppDomain
  langs:
  - csharp
  name: AssemblyLoad
  nameWithType: _AppDomain.AssemblyLoad
  fullName: System._AppDomain.AssemblyLoad
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public event AssemblyLoadEventHandler AssemblyLoad;
    return:
      type: System.AssemblyLoadEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.AssemblyResolve
  id: AssemblyResolve
  parent: System._AppDomain
  langs:
  - csharp
  name: AssemblyResolve
  nameWithType: _AppDomain.AssemblyResolve
  fullName: System._AppDomain.AssemblyResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public event ResolveEventHandler AssemblyResolve;
    return:
      type: System.ResolveEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.BaseDirectory
  id: BaseDirectory
  parent: System._AppDomain
  langs:
  - csharp
  name: BaseDirectory
  nameWithType: _AppDomain.BaseDirectory
  fullName: System._AppDomain.BaseDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public string BaseDirectory { get; }
    return:
      type: System.String
      description: "To be added."
  overload: System._AppDomain.BaseDirectory*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ClearPrivatePath
  id: ClearPrivatePath
  parent: System._AppDomain
  langs:
  - csharp
  name: ClearPrivatePath()
  nameWithType: _AppDomain.ClearPrivatePath()
  fullName: System._AppDomain.ClearPrivatePath()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void ClearPrivatePath ();
    parameters: []
  overload: System._AppDomain.ClearPrivatePath*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ClearShadowCopyPath
  id: ClearShadowCopyPath
  parent: System._AppDomain
  langs:
  - csharp
  name: ClearShadowCopyPath()
  nameWithType: _AppDomain.ClearShadowCopyPath()
  fullName: System._AppDomain.ClearShadowCopyPath()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void ClearShadowCopyPath ();
    parameters: []
  overload: System._AppDomain.ClearShadowCopyPath*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.CreateInstance(System.String,System.String)
  id: CreateInstance(System.String,System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstance(String,String)
  nameWithType: _AppDomain.CreateInstance(String,String)
  fullName: System._AppDomain.CreateInstance(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "To be added."
    - id: typeName
      type: System.String
      description: "To be added."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "To be added."
  overload: System._AppDomain.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Object[])
  id: CreateInstance(System.String,System.String,System.Object[])
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstance(String,String,Object[])
  nameWithType: _AppDomain.CreateInstance(String,String,Object[])
  fullName: System._AppDomain.CreateInstance(String,String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);
    parameters:
    - id: assemblyName
      type: System.String
      description: "To be added."
    - id: typeName
      type: System.String
      description: "To be added."
    - id: activationAttributes
      type: System.Object[]
      description: "To be added."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "To be added."
  overload: System._AppDomain.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: _AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System._AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);
    parameters:
    - id: assemblyName
      type: System.String
      description: "To be added."
    - id: typeName
      type: System.String
      description: "To be added."
    - id: ignoreCase
      type: System.Boolean
      description: "To be added."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "To be added."
    - id: binder
      type: System.Reflection.Binder
      description: "To be added."
    - id: args
      type: System.Object[]
      description: "To be added."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "To be added."
    - id: activationAttributes
      type: System.Object[]
      description: "To be added."
    - id: securityAttributes
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "To be added."
  overload: System._AppDomain.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String)
  id: CreateInstanceFrom(System.String,System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstanceFrom(String,String)
  nameWithType: _AppDomain.CreateInstanceFrom(String,String)
  fullName: System._AppDomain.CreateInstanceFrom(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);
    parameters:
    - id: assemblyFile
      type: System.String
      description: "To be added."
    - id: typeName
      type: System.String
      description: "To be added."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "To be added."
  overload: System._AppDomain.CreateInstanceFrom*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])
  id: CreateInstanceFrom(System.String,System.String,System.Object[])
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstanceFrom(String,String,Object[])
  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Object[])
  fullName: System._AppDomain.CreateInstanceFrom(String,String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);
    parameters:
    - id: assemblyFile
      type: System.String
      description: "To be added."
    - id: typeName
      type: System.String
      description: "To be added."
    - id: activationAttributes
      type: System.Object[]
      description: "To be added."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "To be added."
  overload: System._AppDomain.CreateInstanceFrom*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System._AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);
    parameters:
    - id: assemblyFile
      type: System.String
      description: "To be added."
    - id: typeName
      type: System.String
      description: "To be added."
    - id: ignoreCase
      type: System.Boolean
      description: "To be added."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "To be added."
    - id: binder
      type: System.Reflection.Binder
      description: "To be added."
    - id: args
      type: System.Object[]
      description: "To be added."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "To be added."
    - id: activationAttributes
      type: System.Object[]
      description: "To be added."
    - id: securityAttributes
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "To be added."
  overload: System._AppDomain.CreateInstanceFrom*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: dir
      type: System.String
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: dir
      type: System.String
      description: "To be added."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "To be added."
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: dir
      type: System.String
      description: "To be added."
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: dir
      type: System.String
      description: "To be added."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "To be added."
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: "To be added."
    - id: dir
      type: System.String
      description: "To be added."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "To be added."
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: "To be added."
    - id: isSynchronized
      type: System.Boolean
      description: "To be added."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "To be added."
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)
  id: DoCallBack(System.CrossAppDomainDelegate)
  parent: System._AppDomain
  langs:
  - csharp
  name: DoCallBack(CrossAppDomainDelegate)
  nameWithType: _AppDomain.DoCallBack(CrossAppDomainDelegate)
  fullName: System._AppDomain.DoCallBack(CrossAppDomainDelegate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void DoCallBack (CrossAppDomainDelegate theDelegate);
    parameters:
    - id: theDelegate
      type: System.CrossAppDomainDelegate
      description: "To be added."
  overload: System._AppDomain.DoCallBack*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DomainUnload
  id: DomainUnload
  parent: System._AppDomain
  langs:
  - csharp
  name: DomainUnload
  nameWithType: _AppDomain.DomainUnload
  fullName: System._AppDomain.DomainUnload
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public event EventHandler DomainUnload;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.DynamicDirectory
  id: DynamicDirectory
  parent: System._AppDomain
  langs:
  - csharp
  name: DynamicDirectory
  nameWithType: _AppDomain.DynamicDirectory
  fullName: System._AppDomain.DynamicDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public string DynamicDirectory { get; }
    return:
      type: System.String
      description: "To be added."
  overload: System._AppDomain.DynamicDirectory*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Equals(System.Object)
  id: Equals(System.Object)
  parent: System._AppDomain
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _AppDomain.Equals(Object)
  fullName: System._AppDomain.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System._AppDomain.Equals*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Evidence
  id: Evidence
  parent: System._AppDomain
  langs:
  - csharp
  name: Evidence
  nameWithType: _AppDomain.Evidence
  fullName: System._AppDomain.Evidence
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; }
    return:
      type: System.Security.Policy.Evidence
      description: "To be added."
  overload: System._AppDomain.Evidence*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ExecuteAssembly(System.String)
  id: ExecuteAssembly(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: ExecuteAssembly(String)
  nameWithType: _AppDomain.ExecuteAssembly(String)
  fullName: System._AppDomain.ExecuteAssembly(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public int ExecuteAssembly (string assemblyFile);
    parameters:
    - id: assemblyFile
      type: System.String
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System._AppDomain.ExecuteAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: ExecuteAssembly(String,Evidence)
  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence)
  fullName: System._AppDomain.ExecuteAssembly(String,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyFile
      type: System.String
      description: "To be added."
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System._AppDomain.ExecuteAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  parent: System._AppDomain
  langs:
  - csharp
  name: ExecuteAssembly(String,Evidence,String[])
  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence,String[])
  fullName: System._AppDomain.ExecuteAssembly(String,Evidence,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args);
    parameters:
    - id: assemblyFile
      type: System.String
      description: "To be added."
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: "To be added."
    - id: args
      type: System.String[]
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System._AppDomain.ExecuteAssembly*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.FriendlyName
  id: FriendlyName
  parent: System._AppDomain
  langs:
  - csharp
  name: FriendlyName
  nameWithType: _AppDomain.FriendlyName
  fullName: System._AppDomain.FriendlyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public string FriendlyName { get; }
    return:
      type: System.String
      description: "To be added."
  overload: System._AppDomain.FriendlyName*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetAssemblies
  id: GetAssemblies
  parent: System._AppDomain
  langs:
  - csharp
  name: GetAssemblies()
  nameWithType: _AppDomain.GetAssemblies()
  fullName: System._AppDomain.GetAssemblies()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly[] GetAssemblies ();
    parameters: []
    return:
      type: System.Reflection.Assembly[]
      description: "To be added."
  overload: System._AppDomain.GetAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetData(System.String)
  id: GetData(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetData(String)
  nameWithType: _AppDomain.GetData(String)
  fullName: System._AppDomain.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "To be added."
    return:
      type: System.Object
      description: "To be added."
  overload: System._AppDomain.GetData*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetHashCode
  id: GetHashCode
  parent: System._AppDomain
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _AppDomain.GetHashCode()
  fullName: System._AppDomain.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System._AppDomain.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "To be added."
    - id: rgszNames
      type: System.IntPtr
      description: "To be added."
    - id: cNames
      type: System.UInt32
      description: "To be added."
    - id: lcid
      type: System.UInt32
      description: "To be added."
    - id: rgDispId
      type: System.IntPtr
      description: "To be added."
  overload: System._AppDomain.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetLifetimeService
  id: GetLifetimeService
  parent: System._AppDomain
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: _AppDomain.GetLifetimeService()
  fullName: System._AppDomain.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System._AppDomain.GetLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetType
  id: GetType
  parent: System._AppDomain
  langs:
  - csharp
  name: GetType()
  nameWithType: _AppDomain.GetType()
  fullName: System._AppDomain.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "To be added."
  overload: System._AppDomain.GetType*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "To be added."
    - id: lcid
      type: System.UInt32
      description: "To be added."
    - id: ppTInfo
      type: System.IntPtr
      description: "To be added."
  overload: System._AppDomain.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _AppDomain.GetTypeInfoCount(UInt32)
  fullName: System._AppDomain.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "To be added."
  overload: System._AppDomain.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System._AppDomain
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: _AppDomain.InitializeLifetimeService()
  fullName: System._AppDomain.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System._AppDomain.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System._AppDomain
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "To be added."
    - id: riid
      type: System.Guid
      description: "To be added."
    - id: lcid
      type: System.UInt32
      description: "To be added."
    - id: wFlags
      type: System.Int16
      description: "To be added."
    - id: pDispParams
      type: System.IntPtr
      description: "To be added."
    - id: pVarResult
      type: System.IntPtr
      description: "To be added."
    - id: pExcepInfo
      type: System.IntPtr
      description: "To be added."
    - id: puArgErr
      type: System.IntPtr
      description: "To be added."
  overload: System._AppDomain.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Load(System.Byte[])
  id: Load(System.Byte[])
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(Byte[])
  nameWithType: _AppDomain.Load(Byte[])
  fullName: System._AppDomain.Load(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly Load (byte[] rawAssembly);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: "To be added."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System._AppDomain.Load*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Load(System.Reflection.AssemblyName)
  id: Load(System.Reflection.AssemblyName)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(AssemblyName)
  nameWithType: _AppDomain.Load(AssemblyName)
  fullName: System._AppDomain.Load(AssemblyName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);
    parameters:
    - id: assemblyRef
      type: System.Reflection.AssemblyName
      description: "To be added."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System._AppDomain.Load*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Load(System.String)
  id: Load(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(String)
  nameWithType: _AppDomain.Load(String)
  fullName: System._AppDomain.Load(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly Load (string assemblyString);
    parameters:
    - id: assemblyString
      type: System.String
      description: "To be added."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System._AppDomain.Load*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Load(System.Byte[],System.Byte[])
  id: Load(System.Byte[],System.Byte[])
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(Byte[],Byte[])
  nameWithType: _AppDomain.Load(Byte[],Byte[])
  fullName: System._AppDomain.Load(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: "To be added."
    - id: rawSymbolStore
      type: System.Byte[]
      description: "To be added."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System._AppDomain.Load*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  id: Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(AssemblyName,Evidence)
  nameWithType: _AppDomain.Load(AssemblyName,Evidence)
  fullName: System._AppDomain.Load(AssemblyName,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyRef
      type: System.Reflection.AssemblyName
      description: "To be added."
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System._AppDomain.Load*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Load(System.String,System.Security.Policy.Evidence)
  id: Load(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(String,Evidence)
  nameWithType: _AppDomain.Load(String,Evidence)
  fullName: System._AppDomain.Load(String,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyString
      type: System.String
      description: "To be added."
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System._AppDomain.Load*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  id: Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(Byte[],Byte[],Evidence)
  nameWithType: _AppDomain.Load(Byte[],Byte[],Evidence)
  fullName: System._AppDomain.Load(Byte[],Byte[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: "To be added."
    - id: rawSymbolStore
      type: System.Byte[]
      description: "To be added."
    - id: securityEvidence
      type: System.Security.Policy.Evidence
      description: "To be added."
    return:
      type: System.Reflection.Assembly
      description: "To be added."
  overload: System._AppDomain.Load*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ProcessExit
  id: ProcessExit
  parent: System._AppDomain
  langs:
  - csharp
  name: ProcessExit
  nameWithType: _AppDomain.ProcessExit
  fullName: System._AppDomain.ProcessExit
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public event EventHandler ProcessExit;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.RelativeSearchPath
  id: RelativeSearchPath
  parent: System._AppDomain
  langs:
  - csharp
  name: RelativeSearchPath
  nameWithType: _AppDomain.RelativeSearchPath
  fullName: System._AppDomain.RelativeSearchPath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public string RelativeSearchPath { get; }
    return:
      type: System.String
      description: "To be added."
  overload: System._AppDomain.RelativeSearchPath*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ResourceResolve
  id: ResourceResolve
  parent: System._AppDomain
  langs:
  - csharp
  name: ResourceResolve
  nameWithType: _AppDomain.ResourceResolve
  fullName: System._AppDomain.ResourceResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public event ResolveEventHandler ResourceResolve;
    return:
      type: System.ResolveEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  id: SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetAppDomainPolicy(PolicyLevel)
  nameWithType: _AppDomain.SetAppDomainPolicy(PolicyLevel)
  fullName: System._AppDomain.SetAppDomainPolicy(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void SetAppDomainPolicy (System.Security.Policy.PolicyLevel domainPolicy);
    parameters:
    - id: domainPolicy
      type: System.Security.Policy.PolicyLevel
      description: "To be added."
  overload: System._AppDomain.SetAppDomainPolicy*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.SetCachePath(System.String)
  id: SetCachePath(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetCachePath(String)
  nameWithType: _AppDomain.SetCachePath(String)
  fullName: System._AppDomain.SetCachePath(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void SetCachePath (string s);
    parameters:
    - id: s
      type: System.String
      description: "To be added."
  overload: System._AppDomain.SetCachePath*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: _AppDomain.SetData(String,Object)
  fullName: System._AppDomain.SetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "To be added."
    - id: data
      type: System.Object
      description: "To be added."
  overload: System._AppDomain.SetData*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  id: SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetPrincipalPolicy(PrincipalPolicy)
  nameWithType: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)
  fullName: System._AppDomain.SetPrincipalPolicy(PrincipalPolicy)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy policy);
    parameters:
    - id: policy
      type: System.Security.Principal.PrincipalPolicy
      description: "To be added."
  overload: System._AppDomain.SetPrincipalPolicy*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.SetShadowCopyPath(System.String)
  id: SetShadowCopyPath(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetShadowCopyPath(String)
  nameWithType: _AppDomain.SetShadowCopyPath(String)
  fullName: System._AppDomain.SetShadowCopyPath(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void SetShadowCopyPath (string s);
    parameters:
    - id: s
      type: System.String
      description: "To be added."
  overload: System._AppDomain.SetShadowCopyPath*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)
  id: SetThreadPrincipal(System.Security.Principal.IPrincipal)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetThreadPrincipal(IPrincipal)
  nameWithType: _AppDomain.SetThreadPrincipal(IPrincipal)
  fullName: System._AppDomain.SetThreadPrincipal(IPrincipal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public void SetThreadPrincipal (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "To be added."
  overload: System._AppDomain.SetThreadPrincipal*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ShadowCopyFiles
  id: ShadowCopyFiles
  parent: System._AppDomain
  langs:
  - csharp
  name: ShadowCopyFiles
  nameWithType: _AppDomain.ShadowCopyFiles
  fullName: System._AppDomain.ShadowCopyFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public bool ShadowCopyFiles { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System._AppDomain.ShadowCopyFiles*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.ToString
  id: ToString
  parent: System._AppDomain
  langs:
  - csharp
  name: ToString()
  nameWithType: _AppDomain.ToString()
  fullName: System._AppDomain.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System._AppDomain.ToString*
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.TypeResolve
  id: TypeResolve
  parent: System._AppDomain
  langs:
  - csharp
  name: TypeResolve
  nameWithType: _AppDomain.TypeResolve
  fullName: System._AppDomain.TypeResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public event ResolveEventHandler TypeResolve;
    return:
      type: System.ResolveEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System._AppDomain.UnhandledException
  id: UnhandledException
  parent: System._AppDomain
  langs:
  - csharp
  name: UnhandledException
  nameWithType: _AppDomain.UnhandledException
  fullName: System._AppDomain.UnhandledException
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public event UnhandledExceptionEventHandler UnhandledException;
    return:
      type: System.UnhandledExceptionEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System._AppDomain.AppendPrivatePath(System.String)
  parent: System._AppDomain
  isExternal: false
  name: AppendPrivatePath(String)
  nameWithType: _AppDomain.AppendPrivatePath(String)
  fullName: System._AppDomain.AppendPrivatePath(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System._AppDomain.AssemblyLoad
  parent: System._AppDomain
  isExternal: false
  name: AssemblyLoad
  nameWithType: _AppDomain.AssemblyLoad
  fullName: System._AppDomain.AssemblyLoad
- uid: System.AssemblyLoadEventHandler
  parent: System
  isExternal: false
  name: AssemblyLoadEventHandler
  nameWithType: AssemblyLoadEventHandler
  fullName: System.AssemblyLoadEventHandler
- uid: System._AppDomain.AssemblyResolve
  parent: System._AppDomain
  isExternal: false
  name: AssemblyResolve
  nameWithType: _AppDomain.AssemblyResolve
  fullName: System._AppDomain.AssemblyResolve
- uid: System.ResolveEventHandler
  parent: System
  isExternal: false
  name: ResolveEventHandler
  nameWithType: ResolveEventHandler
  fullName: System.ResolveEventHandler
- uid: System._AppDomain.BaseDirectory
  parent: System._AppDomain
  isExternal: false
  name: BaseDirectory
  nameWithType: _AppDomain.BaseDirectory
  fullName: System._AppDomain.BaseDirectory
- uid: System._AppDomain.ClearPrivatePath
  parent: System._AppDomain
  isExternal: false
  name: ClearPrivatePath()
  nameWithType: _AppDomain.ClearPrivatePath()
  fullName: System._AppDomain.ClearPrivatePath()
- uid: System._AppDomain.ClearShadowCopyPath
  parent: System._AppDomain
  isExternal: false
  name: ClearShadowCopyPath()
  nameWithType: _AppDomain.ClearShadowCopyPath()
  fullName: System._AppDomain.ClearShadowCopyPath()
- uid: System._AppDomain.CreateInstance(System.String,System.String)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance(String,String)
  nameWithType: _AppDomain.CreateInstance(String,String)
  fullName: System._AppDomain.CreateInstance(String,String)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Object[])
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance(String,String,Object[])
  nameWithType: _AppDomain.CreateInstance(String,String,Object[])
  fullName: System._AppDomain.CreateInstance(String,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: _AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System._AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom(String,String)
  nameWithType: _AppDomain.CreateInstanceFrom(String,String)
  fullName: System._AppDomain.CreateInstanceFrom(String,String)
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom(String,String,Object[])
  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Object[])
  fullName: System._AppDomain.CreateInstanceFrom(String,String,Object[])
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: _AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System._AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)
- uid: System.Reflection.Emit.AssemblyBuilder
  parent: System.Reflection.Emit
  isExternal: true
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection.Emit.AssemblyBuilderAccess
  parent: System.Reflection.Emit
  isExternal: true
  name: AssemblyBuilderAccess
  nameWithType: AssemblyBuilderAccess
  fullName: System.Reflection.Emit.AssemblyBuilderAccess
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)
  fullName: System._AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)
- uid: System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)
  parent: System._AppDomain
  isExternal: false
  name: DoCallBack(CrossAppDomainDelegate)
  nameWithType: _AppDomain.DoCallBack(CrossAppDomainDelegate)
  fullName: System._AppDomain.DoCallBack(CrossAppDomainDelegate)
- uid: System.CrossAppDomainDelegate
  parent: System
  isExternal: false
  name: CrossAppDomainDelegate
  nameWithType: CrossAppDomainDelegate
  fullName: System.CrossAppDomainDelegate
- uid: System._AppDomain.DomainUnload
  parent: System._AppDomain
  isExternal: false
  name: DomainUnload
  nameWithType: _AppDomain.DomainUnload
  fullName: System._AppDomain.DomainUnload
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System._AppDomain.DynamicDirectory
  parent: System._AppDomain
  isExternal: false
  name: DynamicDirectory
  nameWithType: _AppDomain.DynamicDirectory
  fullName: System._AppDomain.DynamicDirectory
- uid: System._AppDomain.Equals(System.Object)
  parent: System._AppDomain
  isExternal: false
  name: Equals(Object)
  nameWithType: _AppDomain.Equals(Object)
  fullName: System._AppDomain.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System._AppDomain.Evidence
  parent: System._AppDomain
  isExternal: false
  name: Evidence
  nameWithType: _AppDomain.Evidence
  fullName: System._AppDomain.Evidence
- uid: System._AppDomain.ExecuteAssembly(System.String)
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly(String)
  nameWithType: _AppDomain.ExecuteAssembly(String)
  fullName: System._AppDomain.ExecuteAssembly(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly(String,Evidence)
  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence)
  fullName: System._AppDomain.ExecuteAssembly(String,Evidence)
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly(String,Evidence,String[])
  nameWithType: _AppDomain.ExecuteAssembly(String,Evidence,String[])
  fullName: System._AppDomain.ExecuteAssembly(String,Evidence,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.FriendlyName
  parent: System._AppDomain
  isExternal: false
  name: FriendlyName
  nameWithType: _AppDomain.FriendlyName
  fullName: System._AppDomain.FriendlyName
- uid: System._AppDomain.GetAssemblies
  parent: System._AppDomain
  isExternal: false
  name: GetAssemblies()
  nameWithType: _AppDomain.GetAssemblies()
  fullName: System._AppDomain.GetAssemblies()
- uid: System.Reflection.Assembly[]
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly[]
  spec.csharp:
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.GetData(System.String)
  parent: System._AppDomain
  isExternal: false
  name: GetData(String)
  nameWithType: _AppDomain.GetData(String)
  fullName: System._AppDomain.GetData(String)
- uid: System._AppDomain.GetHashCode
  parent: System._AppDomain
  isExternal: false
  name: GetHashCode()
  nameWithType: _AppDomain.GetHashCode()
  fullName: System._AppDomain.GetHashCode()
- uid: System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System._AppDomain.GetLifetimeService
  parent: System._AppDomain
  isExternal: false
  name: GetLifetimeService()
  nameWithType: _AppDomain.GetLifetimeService()
  fullName: System._AppDomain.GetLifetimeService()
- uid: System._AppDomain.GetType
  parent: System._AppDomain
  isExternal: false
  name: GetType()
  nameWithType: _AppDomain.GetType()
  fullName: System._AppDomain.GetType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System._AppDomain.GetTypeInfoCount(System.UInt32@)
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _AppDomain.GetTypeInfoCount(UInt32)
  fullName: System._AppDomain.GetTypeInfoCount(UInt32)
- uid: System._AppDomain.InitializeLifetimeService
  parent: System._AppDomain
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: _AppDomain.InitializeLifetimeService()
  fullName: System._AppDomain.InitializeLifetimeService()
- uid: System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System._AppDomain
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System._AppDomain.Load(System.Byte[])
  parent: System._AppDomain
  isExternal: false
  name: Load(Byte[])
  nameWithType: _AppDomain.Load(Byte[])
  fullName: System._AppDomain.Load(Byte[])
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.Load(System.Reflection.AssemblyName)
  parent: System._AppDomain
  isExternal: false
  name: Load(AssemblyName)
  nameWithType: _AppDomain.Load(AssemblyName)
  fullName: System._AppDomain.Load(AssemblyName)
- uid: System._AppDomain.Load(System.String)
  parent: System._AppDomain
  isExternal: false
  name: Load(String)
  nameWithType: _AppDomain.Load(String)
  fullName: System._AppDomain.Load(String)
- uid: System._AppDomain.Load(System.Byte[],System.Byte[])
  parent: System._AppDomain
  isExternal: false
  name: Load(Byte[],Byte[])
  nameWithType: _AppDomain.Load(Byte[],Byte[])
  fullName: System._AppDomain.Load(Byte[],Byte[])
- uid: System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: Load(AssemblyName,Evidence)
  nameWithType: _AppDomain.Load(AssemblyName,Evidence)
  fullName: System._AppDomain.Load(AssemblyName,Evidence)
- uid: System._AppDomain.Load(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: Load(String,Evidence)
  nameWithType: _AppDomain.Load(String,Evidence)
  fullName: System._AppDomain.Load(String,Evidence)
- uid: System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: Load(Byte[],Byte[],Evidence)
  nameWithType: _AppDomain.Load(Byte[],Byte[],Evidence)
  fullName: System._AppDomain.Load(Byte[],Byte[],Evidence)
- uid: System._AppDomain.ProcessExit
  parent: System._AppDomain
  isExternal: false
  name: ProcessExit
  nameWithType: _AppDomain.ProcessExit
  fullName: System._AppDomain.ProcessExit
- uid: System._AppDomain.RelativeSearchPath
  parent: System._AppDomain
  isExternal: false
  name: RelativeSearchPath
  nameWithType: _AppDomain.RelativeSearchPath
  fullName: System._AppDomain.RelativeSearchPath
- uid: System._AppDomain.ResourceResolve
  parent: System._AppDomain
  isExternal: false
  name: ResourceResolve
  nameWithType: _AppDomain.ResourceResolve
  fullName: System._AppDomain.ResourceResolve
- uid: System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  parent: System._AppDomain
  isExternal: false
  name: SetAppDomainPolicy(PolicyLevel)
  nameWithType: _AppDomain.SetAppDomainPolicy(PolicyLevel)
  fullName: System._AppDomain.SetAppDomainPolicy(PolicyLevel)
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System._AppDomain.SetCachePath(System.String)
  parent: System._AppDomain
  isExternal: false
  name: SetCachePath(String)
  nameWithType: _AppDomain.SetCachePath(String)
  fullName: System._AppDomain.SetCachePath(String)
- uid: System._AppDomain.SetData(System.String,System.Object)
  parent: System._AppDomain
  isExternal: false
  name: SetData(String,Object)
  nameWithType: _AppDomain.SetData(String,Object)
  fullName: System._AppDomain.SetData(String,Object)
- uid: System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  parent: System._AppDomain
  isExternal: false
  name: SetPrincipalPolicy(PrincipalPolicy)
  nameWithType: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)
  fullName: System._AppDomain.SetPrincipalPolicy(PrincipalPolicy)
- uid: System.Security.Principal.PrincipalPolicy
  parent: System.Security.Principal
  isExternal: false
  name: PrincipalPolicy
  nameWithType: PrincipalPolicy
  fullName: System.Security.Principal.PrincipalPolicy
- uid: System._AppDomain.SetShadowCopyPath(System.String)
  parent: System._AppDomain
  isExternal: false
  name: SetShadowCopyPath(String)
  nameWithType: _AppDomain.SetShadowCopyPath(String)
  fullName: System._AppDomain.SetShadowCopyPath(String)
- uid: System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)
  parent: System._AppDomain
  isExternal: false
  name: SetThreadPrincipal(IPrincipal)
  nameWithType: _AppDomain.SetThreadPrincipal(IPrincipal)
  fullName: System._AppDomain.SetThreadPrincipal(IPrincipal)
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System._AppDomain.ShadowCopyFiles
  parent: System._AppDomain
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: _AppDomain.ShadowCopyFiles
  fullName: System._AppDomain.ShadowCopyFiles
- uid: System._AppDomain.ToString
  parent: System._AppDomain
  isExternal: false
  name: ToString()
  nameWithType: _AppDomain.ToString()
  fullName: System._AppDomain.ToString()
- uid: System._AppDomain.TypeResolve
  parent: System._AppDomain
  isExternal: false
  name: TypeResolve
  nameWithType: _AppDomain.TypeResolve
  fullName: System._AppDomain.TypeResolve
- uid: System._AppDomain.UnhandledException
  parent: System._AppDomain
  isExternal: false
  name: UnhandledException
  nameWithType: _AppDomain.UnhandledException
  fullName: System._AppDomain.UnhandledException
- uid: System.UnhandledExceptionEventHandler
  parent: System
  isExternal: false
  name: UnhandledExceptionEventHandler
  nameWithType: UnhandledExceptionEventHandler
  fullName: System.UnhandledExceptionEventHandler
- uid: System._AppDomain.AppendPrivatePath*
  parent: System._AppDomain
  isExternal: false
  name: AppendPrivatePath
  nameWithType: _AppDomain.AppendPrivatePath
- uid: System._AppDomain.BaseDirectory*
  parent: System._AppDomain
  isExternal: false
  name: BaseDirectory
  nameWithType: _AppDomain.BaseDirectory
- uid: System._AppDomain.ClearPrivatePath*
  parent: System._AppDomain
  isExternal: false
  name: ClearPrivatePath
  nameWithType: _AppDomain.ClearPrivatePath
- uid: System._AppDomain.ClearShadowCopyPath*
  parent: System._AppDomain
  isExternal: false
  name: ClearShadowCopyPath
  nameWithType: _AppDomain.ClearShadowCopyPath
- uid: System._AppDomain.CreateInstance*
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance
  nameWithType: _AppDomain.CreateInstance
- uid: System._AppDomain.CreateInstanceFrom*
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom
  nameWithType: _AppDomain.CreateInstanceFrom
- uid: System._AppDomain.DefineDynamicAssembly*
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly
  nameWithType: _AppDomain.DefineDynamicAssembly
- uid: System._AppDomain.DoCallBack*
  parent: System._AppDomain
  isExternal: false
  name: DoCallBack
  nameWithType: _AppDomain.DoCallBack
- uid: System._AppDomain.DynamicDirectory*
  parent: System._AppDomain
  isExternal: false
  name: DynamicDirectory
  nameWithType: _AppDomain.DynamicDirectory
- uid: System._AppDomain.Equals*
  parent: System._AppDomain
  isExternal: false
  name: Equals
  nameWithType: _AppDomain.Equals
- uid: System._AppDomain.Evidence*
  parent: System._AppDomain
  isExternal: false
  name: Evidence
  nameWithType: _AppDomain.Evidence
- uid: System._AppDomain.ExecuteAssembly*
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly
  nameWithType: _AppDomain.ExecuteAssembly
- uid: System._AppDomain.FriendlyName*
  parent: System._AppDomain
  isExternal: false
  name: FriendlyName
  nameWithType: _AppDomain.FriendlyName
- uid: System._AppDomain.GetAssemblies*
  parent: System._AppDomain
  isExternal: false
  name: GetAssemblies
  nameWithType: _AppDomain.GetAssemblies
- uid: System._AppDomain.GetData*
  parent: System._AppDomain
  isExternal: false
  name: GetData
  nameWithType: _AppDomain.GetData
- uid: System._AppDomain.GetHashCode*
  parent: System._AppDomain
  isExternal: false
  name: GetHashCode
  nameWithType: _AppDomain.GetHashCode
- uid: System._AppDomain.GetIDsOfNames*
  parent: System._AppDomain
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _AppDomain.GetIDsOfNames
- uid: System._AppDomain.GetLifetimeService*
  parent: System._AppDomain
  isExternal: false
  name: GetLifetimeService
  nameWithType: _AppDomain.GetLifetimeService
- uid: System._AppDomain.GetType*
  parent: System._AppDomain
  isExternal: false
  name: GetType
  nameWithType: _AppDomain.GetType
- uid: System._AppDomain.GetTypeInfo*
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfo
  nameWithType: _AppDomain.GetTypeInfo
- uid: System._AppDomain.GetTypeInfoCount*
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _AppDomain.GetTypeInfoCount
- uid: System._AppDomain.InitializeLifetimeService*
  parent: System._AppDomain
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: _AppDomain.InitializeLifetimeService
- uid: System._AppDomain.Invoke*
  parent: System._AppDomain
  isExternal: false
  name: Invoke
  nameWithType: _AppDomain.Invoke
- uid: System._AppDomain.Load*
  parent: System._AppDomain
  isExternal: false
  name: Load
  nameWithType: _AppDomain.Load
- uid: System._AppDomain.RelativeSearchPath*
  parent: System._AppDomain
  isExternal: false
  name: RelativeSearchPath
  nameWithType: _AppDomain.RelativeSearchPath
- uid: System._AppDomain.SetAppDomainPolicy*
  parent: System._AppDomain
  isExternal: false
  name: SetAppDomainPolicy
  nameWithType: _AppDomain.SetAppDomainPolicy
- uid: System._AppDomain.SetCachePath*
  parent: System._AppDomain
  isExternal: false
  name: SetCachePath
  nameWithType: _AppDomain.SetCachePath
- uid: System._AppDomain.SetData*
  parent: System._AppDomain
  isExternal: false
  name: SetData
  nameWithType: _AppDomain.SetData
- uid: System._AppDomain.SetPrincipalPolicy*
  parent: System._AppDomain
  isExternal: false
  name: SetPrincipalPolicy
  nameWithType: _AppDomain.SetPrincipalPolicy
- uid: System._AppDomain.SetShadowCopyPath*
  parent: System._AppDomain
  isExternal: false
  name: SetShadowCopyPath
  nameWithType: _AppDomain.SetShadowCopyPath
- uid: System._AppDomain.SetThreadPrincipal*
  parent: System._AppDomain
  isExternal: false
  name: SetThreadPrincipal
  nameWithType: _AppDomain.SetThreadPrincipal
- uid: System._AppDomain.ShadowCopyFiles*
  parent: System._AppDomain
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: _AppDomain.ShadowCopyFiles
- uid: System._AppDomain.ToString*
  parent: System._AppDomain
  isExternal: false
  name: ToString
  nameWithType: _AppDomain.ToString
