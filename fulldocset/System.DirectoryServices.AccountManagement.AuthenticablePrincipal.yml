### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  id: AuthenticablePrincipal
  children:
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  langs:
  - csharp
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  type: Class
  summary: "Contém os dados de conta e contacte comuns para principais, que podem ser autenticados."
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class AuthenticablePrincipal : System.DirectoryServices.AccountManagement.Principal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> classe utilizando o contexto especificado. Este construtor é chamado pelo construtores de classe derivada ao inicializar a classe base e não se destina a ser utilizado diretamente a partir do seu código."
  remarks: "Classes de extensão personalizado que derivam esta classe podem chamar a este construtor partir o construtor de classes derivadas para inicializar a classe base. Para obter mais informações, consulte o [Principal extensões](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) tópico de descrição geral."
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> classe utilizando o contexto especificado, o nome da conta do SAM, a palavra-passe e ativada valor. Este construtor é chamado pelo construtores de classe derivada ao inicializar a classe base e não se destina a ser utilizado diretamente a partir do seu código."
  remarks: "Classes de extensão personalizado que derivam esta classe podem chamar a este construtor partir o construtor de classes derivadas para inicializar a classe base. Para obter mais informações, consulte o [Principal extensões](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) tópico de descrição geral."
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: samAccountName
      type: System.String
      description: "O nome de conta do SAM para este principal."
    - id: password
      type: System.String
      description: "A palavra-passe para esta conta."
    - id: enabled
      type: System.Boolean
      description: "Um valor booleano que especifica se a conta está ativada."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  id: AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o tipo Nullable <xref:System.DateTime>que especifica a data e hora da conta expirar.</xref:System.DateTime>"
  remarks: "Tal como com todos os <xref:System.DateTime>Propriedades no <xref:System.DirectoryServices.AccountManagement>, a hora devolvido está em formato UTC.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  Para converter a hora local, chame o <xref:System.DateTime.ToLocalTime%2A>método no objeto de retorno.</xref:System.DateTime.ToLocalTime%2A>       Quando definir o AccountExpirationDate, a hora será predefinido para UTC.  Se pretender escrever na hora local, em seguida, especifique a <xref:System.DateTime.Kind%2A>propriedade do seu <xref:System.DateTime>objeto como <xref:DateTimeKind.Local>.</xref:DateTimeKind.Local> </xref:System.DateTime> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public Nullable<DateTime> AccountExpirationDate { get; set; }
    return:
      type: System.Nullable{System.DateTime}
      description: "A <xref:System.DateTime>que especifica a data e hora em que a conta expira ou nulo se a conta nunca expira.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  id: AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o Nullable <xref:System.DateTime>que especifica a data e hora em que a conta foi bloqueada.</xref:System.DateTime>"
  remarks: "O tempo de bloqueio de conta é dependente do sistema e não pode ser definido através da API de gestão de conta. Para desbloquear a conta, utilize o <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount%2A>método.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount%2A>       É possível que uma conta poderá não ficar bloqueada quando o <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A>devolve um valor não nulo.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A> As aplicações devem utilizar o <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut%2A>método para determinar se a conta está bloqueada.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut%2A>       Tal como com todos os <xref:System.DateTime>Propriedades no <xref:System.DirectoryServices.AccountManagement>, a hora devolvido está em formato UTC.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  Para converter a hora local, chame o <xref:System.DateTime.ToLocalTime%2A>método no objeto de retorno.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> AccountLockoutTime { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "A <xref:System.DateTime>que especifica a data e hora em que a conta foi bloqueada ou nulo não se for definido nenhum tempo de bloqueio da conta.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  id: AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve um <xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>objeto, para utilização com [consulta por exemplo](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) para definir propriedades só de leitura antes de passar o objeto para o <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;> </xref>.</xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>"
  remarks: "Consulte o [consulta por exemplo](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) documentação para obter exemplos."
  syntax:
    content: public virtual System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }
    return:
      type: System.DirectoryServices.AccountManagement.AdvancedFilters
      description: "Um <xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>objeto.</xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  id: AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor booleano que especifica se a encriptação reversível palavra-passe está ativada para esta conta."
  syntax:
    content: public bool AllowReversiblePasswordEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a encriptação reversível palavra-passe está ativada para esta conta; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  id: BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o número de tentativas de início de sessão a utilizar credenciais incorretas para esta conta."
  syntax:
    content: public int BadLogonCount { get; }
    return:
      type: System.Int32
      description: "O número de início de sessão tenta utilizar credenciais incorretas para esta conta."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  id: Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> que contém o X509 certificados para esta conta."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> que contém o X509 certificados para esta conta."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Altera a palavra-passe da conta da palavra-passe antiga para a nova palavra-passe. Não utilize esta opção com um <xref href=&quot;System.DirectoryServices.AccountManagement.ComputerPrincipal&quot;> </xref>."
  remarks: "Este método não se destina a ser principais do computador. Chamar isto com um <xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>fará com que um <xref:System.NotSupportedException>para ser emitida.</xref:System.NotSupportedException> </xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>"
  syntax:
    content: public void ChangePassword (string oldPassword, string newPassword);
    parameters:
    - id: oldPassword
      type: System.String
      description: "A palavra-passe é alterada."
    - id: newPassword
      type: System.String
      description: "A nova palavra-passe."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O principal tem não foram continuado."
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "A nova palavra-passe não cumpre os requisitos de complexidade."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O principal não é um utilizador."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  id: DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor nulo booleano que especifica se a conta pode ser delegada."
  syntax:
    content: public bool DelegationPermitted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a conta pode ser delegada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  id: Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor nulo booleano que especifica se esta conta está ativada para autenticação."
  remarks: "Se o principal não tem foi continuado no arquivo, esta propriedade devolve um valor nula. Depois do principal é persistente, a predefinição ativada depende o arquivo. Os arquivos de AD DS e AD LDS desativar novos principais de quando estes são mantidas, enquanto SAM permite novos principais de quando estes são mantidas. A aplicação apenas pode definir esta propriedade para um valor após tem foi continuada no arquivo."
  syntax:
    content: public Nullable<bool> Enabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o principal estiver ativada, ou nulo se a conta tem não foram continuada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A aplicação tentou definir um valor nulo para esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  id: ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Expirar a palavra-passe para esta conta. Isto irá forçar o utilizador altere a sua palavra-passe no próximo início de sessão."
  remarks: "Chame este método para forçar o utilizador altere a palavra-passe no próximo início de sessão."
  syntax:
    content: public void ExpirePasswordNow ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "Ocorreu uma exceção ao guardar as alterações para o arquivo."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de objetos de principais de autenticação que tenham tente uma palavra-passe incorreta registada na data especificada e intervalo de tempo."
  remarks: "A hora será predefinido para UTC.  Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:DateTimeKind.Local>.</xref:DateTimeKind.Local> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora de try a palavra-passe incorreta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm tente um início de sessão incorreto registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> objetos ou uma coleção vazia se não existem resultados forem encontrados."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByBadPasswordAttempt<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A adicionar."
    - id: time
      type: System.DateTime
      description: "A adicionar."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A adicionar."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "A adicionar."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de objetos de principal de autenticação que têm um prazo de expiração da conta registado no intervalo de tempo e data especificada."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora de expiração da conta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm uma expiração da conta registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> objetos."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByExpirationTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A adicionar."
    - id: time
      type: System.DateTime
      description: "A adicionar."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A adicionar."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "A adicionar."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de objetos de principal de autenticação que têm um tempo de bloqueio de conta registado no intervalo de tempo e data especificada."
  remarks: "A hora será predefinido para UTC.  Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora do bloqueio da conta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm um bloqueio da conta registado."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> objetos."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLockoutTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A adicionar."
    - id: time
      type: System.DateTime
      description: "A adicionar."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A adicionar."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "A adicionar."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de objetos de principais de autenticação que tenham um início de sessão de conta registado no intervalo de tempo e data especificada."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  example:
  - "The following code connects to the ADAM instance hosted by the server \"adamHost1.fabrikam.com\" on port number \"5000.\" The username (adamAdmin), and password (SecretPwd123) are specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed for all authenticable principals under the container \"DC=adamApp1,DC=fabrikam,DC=com\" that have not logged on to this ADAM instance for the last 45 days. The principals returned by the search are then deleted.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(  \n                                      ContextType.ApplicationDirectory,   \n                                      \"adamHost1.fabrikam.com:5000\",   \n                                      \"DC=adamApp1,DC=fabrikam,DC=com\",   \n                                      \"adamAdmin\", \"SecretPwd123\");  \n  \nPrincipalSearchResult<AuthenticablePrincipal> oldPrincipals =   \n                     AuthenticablePrincipal.FindByLogonTime(ctx,   \n                            (DateTime.Now - new TimeSpan(45, 0, 0, 0)),   \n                            MatchType.LessThan);  \n  \nforeach (Principal p in oldPrincipals)  \n{  \n    p.Delete();  \n}  \n  \noldPrincipals.Dispose();  \nctx.Dispose();  \n  \n```"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora do registo de início de sessão.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm um início de sessão de conta registado."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> objetos."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLogonTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A adicionar."
    - id: time
      type: System.DateTime
      description: "A adicionar."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A adicionar."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "A adicionar."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de autenticação principais objetos que têm uma palavra-passe de conta definir registada na data especificada e intervalo de tempo."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora do conjunto de palavra-passe.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm uma palavra-passe definida registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> objetos."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByPasswordSetTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "A adicionar."
    - id: time
      type: System.DateTime
      description: "A adicionar."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A adicionar."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "A adicionar."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  id: HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o diretório inicial para esta conta."
  syntax:
    content: public string HomeDirectory { get; set; }
    return:
      type: System.String
      description: "A home page do diretório para esta conta, ou nula não existir nenhum diretório de raiz."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  id: HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define a unidade raiz para esta conta."
  syntax:
    content: public string HomeDrive { get; set; }
    return:
      type: System.String
      description: "A unidade raiz para a conta ou nulo se não existir nenhuma unidade raiz existe."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  id: IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve um valor booleano que especifica se a conta está atualmente bloqueada."
  remarks: "É possível que uma conta poderá não ficar bloqueada quando o <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A>devolve um valor não nulo.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A> Este método calcula o valor correto específicas do arquivo de bloqueio para determinar se a conta está bloqueada."
  syntax:
    content: public bool IsAccountLockedOut ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a conta está bloqueada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  id: LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o Nullable <xref:System.DateTime>que especifica a data e hora da última tentativa de palavra-passe incorreta nesta conta.</xref:System.DateTime>"
  remarks: "Tal como com todos os <xref:System.DateTime>Propriedades no <xref:System.DirectoryServices.AccountManagement>, a hora devolvido está em formato UTC.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  Para converter a hora local, chame o <xref:System.DateTime.ToLocalTime%2A>método no objeto de retorno.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastBadPasswordAttempt { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Tipo Nullable <xref:System.DateTime>que especifica a data e hora da última tentativa de palavra-passe incorreta nesta conta ou nulo se não são registadas tentativas de palavra-passe incorreta.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  id: LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o Nullable <xref:System.DateTime>que especifica a data e hora do último início de sessão para esta conta.</xref:System.DateTime>"
  remarks: "Tal como com todos os <xref:System.DateTime>Propriedades no <xref:System.DirectoryServices.AccountManagement>, a hora devolvido está em formato UTC.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  Para converter a hora local, chame o <xref:System.DateTime.ToLocalTime%2A>método no objeto de retorno.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastLogon { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Tipo Nullable <xref:System.DateTime>que especifica a data e hora do último início de sessão para esta conta.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  id: LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém o Nullable <xref:System.DateTime>que especifica a última data e hora em que a palavra-passe foi definida para esta conta.</xref:System.DateTime>"
  remarks: "Tal como com todos os <xref:System.DateTime>Propriedades no <xref:System.DirectoryServices.AccountManagement>, a hora devolvido está em formato UTC.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  Para converter a hora local, chame o <xref:System.DateTime.ToLocalTime%2A>método no objeto de retorno.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastPasswordSet { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Tipo Nullable <xref:System.DateTime>que especifica a última data e hora em que a palavra-passe foi definida para esta conta.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  id: PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor booleano que especifica se a palavra-passe expira para esta conta."
  syntax:
    content: public bool PasswordNeverExpires { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a palavra-passe expirar para esta conta; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  id: PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor booleano que especifica se uma palavra-passe é obrigatória para esta conta."
  syntax:
    content: public bool PasswordNotRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma palavra-passe é obrigatória para esta conta; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  id: PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o número de vezes quando o principal pode iniciar sessão."
  syntax:
    content: public byte[] PermittedLogonTimes { get; set; }
    return:
      type: System.Byte[]
      description: "Os tempos de início de sessão permitido para esta conta."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  id: PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém a lista de estações de trabalho que este principal tem permissão para iniciar sessão."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalValueCollection<string> PermittedWorkstations { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
      description: "A lista mutável de estações de trabalho que este principal tem permissão para iniciar sessão."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  id: RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Atualiza uma palavra-passe expirada."
  syntax:
    content: public void RefreshExpiredPassword ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "Ocorreu uma exceção ao guardar as alterações para o arquivo."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  id: ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o caminho do script para esta conta."
  syntax:
    content: public string ScriptPath { get; set; }
    return:
      type: System.String
      description: "Um caminho do script para esta conta ou nulo se não houver nenhum caminho de script."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  id: SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Define a palavra-passe de conta para o valor especificado."
  syntax:
    content: public void SetPassword (string newPassword);
    parameters:
    - id: newPassword
      type: System.String
      description: "A nova palavra-passe."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "Emite uma exceção se a função invocadora não tem direitos adequados, a nova palavra-passe não cumpre os requisitos de complexidade de palavra-passe ou para qualquer outro motivo que subjacentes armazena rejeitar alterar a palavra-passe."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  id: SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor booleano que especifica se um smart card é necessária para iniciar sessão na conta."
  syntax:
    content: public bool SmartcardLogonRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um smart card é necessário para iniciar sessão nesta conta; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  id: UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Desbloqueia a conta se de que está atualmente bloqueado."
  remarks: ''
  example:
  - "The following example code connects to the LDAP domain \"fabrikam.com\" with the username (administrator) and password (SecretPwd123) initialized in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed to find the user with name \"John Smith\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor: \"CN=Users,DC=fabrikam,DC=com.\"  If the user is found, a check is performed to determine whether this user's account has been locked out. If the account has been locked out, the code example unlocks the account.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,   \n                                         \"fabrikam.com\",   \n                                         \"CN=Users,DC=fabrikam,DC=com\",   \n                                         \"administrator\",   \n                                         \"SecretPwd123\");  \n  \nUserPrincipal usr = UserPrincipal.FindByIdentity(ctx, \"John Smith\");  \nif (usr != null)  \n{  \n    if (usr.IsAccountLockedOut())  \n        usr.UnlockAccount();  \n  \n    usr.Dispose();  \n}  \nctx.Dispose();   \n```"
  syntax:
    content: public void UnlockAccount ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "Ocorreu uma exceção ao guardar as alterações para o arquivo."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  id: UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define um valor booleano que especifica se o utilizador pode alterar a palavra-passe para esta conta. Não utilize esta opção com um <xref href=&quot;System.DirectoryServices.AccountManagement.ComputerPrincipal&quot;> </xref>."
  remarks: "Este método não se destina a ser principais do computador. Chamar isto com um <xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>fará com que um <xref:System.NotSupportedException>para ser emitida.</xref:System.NotSupportedException> </xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>"
  syntax:
    content: public bool UserCannotChangePassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o utilizador não tem permissão para alterar a palavra-passe; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Este objeto principal não é um utilizador."
  platform:
  - net462
references:
- uid: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.Principal
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.AccountManagement.PasswordException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PasswordException
  nameWithType: PasswordException
  fullName: System.DirectoryServices.AccountManagement.PasswordException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
    name: AuthenticablePrincipal
    nameWithType: AuthenticablePrincipal
    fullName: AuthenticablePrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalValueCollection<String>
  nameWithType: PrincipalValueCollection<String>
  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<System.String>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1
    name: PrincipalValueCollection
    nameWithType: PrincipalValueCollection
    fullName: PrincipalValueCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword
  nameWithType: AuthenticablePrincipal.ChangePassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt<T>
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime
  nameWithType: AuthenticablePrincipal.FindByExpirationTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime<T>
  nameWithType: AuthenticablePrincipal.FindByExpirationTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime
  nameWithType: AuthenticablePrincipal.FindByLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime<T>
  nameWithType: AuthenticablePrincipal.FindByLockoutTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime
  nameWithType: AuthenticablePrincipal.FindByLogonTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime<T>
  nameWithType: AuthenticablePrincipal.FindByLogonTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime<T>
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword
  nameWithType: AuthenticablePrincipal.SetPassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount
  nameWithType: AuthenticablePrincipal.UnlockAccount
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
