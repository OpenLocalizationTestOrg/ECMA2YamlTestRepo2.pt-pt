### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Transform
  id: Transform
  children:
  - System.Security.Cryptography.Xml.Transform.#ctor
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetInnerXml
  - System.Security.Cryptography.Xml.Transform.GetOutput
  - System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.InputTypes
  - System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.Transform.OutputTypes
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  langs:
  - csharp
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
  type: Class
  summary: "Representa a classe base abstrata de que todos os <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> derivam de elementos que podem ser utilizados numa assinatura digital de XML."
  remarks: "Quando efetua a assinatura XML e a verificação, o `Transform`> elemento descreve a forma como o signatário transformados o objeto de dados foi assinado.  O Verificador de um documento, em seguida, utiliza o `Transform`> elemento para transformar os dados assinados da mesma forma.  Se o Verificador de não é possível transformar os dados assinados da mesma forma, não é possível verificar o documento.       Utilize uma classe que derive da classe de transformação sempre que precisar de adicionar um ou mais objetos de transformação para um documento XML encriptado ou para um documento XML assinado.       Para obter mais informações sobre o `<Transform>` elemento, consulte a especificação de XMLDSIG está disponível a partir de Consortium World Wide Web (W3C) em www.w3.org/TR/xmldsig-core/, ou a especificação de encriptação de XML, que está disponível a partir de W3C em www.w3.org/TR/xmlenc-core/."
  syntax:
    content: public abstract class Transform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> classe."
  syntax:
    content: protected Transform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o Uniform Resource Identifier (URI) que identifica o algoritmo realizado a transformação atual."
  remarks: "Esta propriedade correspondente para o atributo de algoritmo de um `<Transform>` elemento de uma assinatura XMLDSIG. Por exemplo, o algoritmo de URI para a transformação decoding Base64 é definido como http://www.w3.org/2000/09/xmldsig#base64 na especificação XMLDSIG (secção 6.6.2).       Comodamente pode definir este valor utilizando um dos campos estáticos associados com a <xref:System.Security.Cryptography.Xml.SignedXml>classe.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public string Algorithm { get; set; }
    return:
      type: System.String
      description: "O URI que identifique o algoritmo realizado atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.Transform.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Context
  id: Context
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define um <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto que representa o contexto de documento sob a qual atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto está em execução."
  remarks: "Quando um documento de assinatura, a propriedade de contexto representa o valor transmitido para o <xref:System.Security.Cryptography.Xml.SignedXml>construtor.</xref:System.Security.Cryptography.Xml.SignedXml>  Ao verificar um documento, a propriedade de contexto representa <xref:System.Security.Cryptography.Xml.Signature>objeto.</xref:System.Security.Cryptography.Xml.Signature>       A propriedade de contexto é definida automaticamente durante o cálculo de assinatura e a verificação, mas antes de serem invocadas transformações."
  syntax:
    content: public System.Xml.XmlElement Context { get; set; }
    return:
      type: System.Xml.XmlElement
      description: "Um <xref href=&quot;System.Xml.XmlElement&quot;> </xref> objeto que representa o contexto de documento sob a qual atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto está em execução."
  overload: System.Security.Cryptography.Xml.Transform.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  id: GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, devolve o resumo associado a um <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  syntax:
    content: public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "O <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> objecto utilizado para criar um resumo."
    return:
      type: System.Byte[]
      description: "O resumo associado a um <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, devolve uma representação XML dos parâmetros do <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto que são adequados para ser incluído como subelementos de um XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: ''
  example:
  - "If a <xref:System.Security.Cryptography.Xml.Transform> object represents an XPath transform using the XPath expression `self::text()`,a call to GetInnerXml results in an <xref:System.Xml.XmlNodeList> object that represents the following XML element:  \n  \n```  \n<XPath>   \n  self::text()   \n</XPath>  \n```  \n  \n This element corresponds to the transform-specific content of the `<Transform>` element as defined in Section 4.3.3.4 of the XMLDSIG specification. For the above XPath transform, the entire `<Transform>` element is as follows:  \n  \n```  \n<Transform Algorithm=\"http://www.w3.org/TR/1999/REC-xpath-19991116\">   \n  <XPath>   \n    self::text()   \n  </XPath>   \n</Transform>  \n```"
  syntax:
    content: protected abstract System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "Uma lista de nós XML que representam o conteúdo de transformação específicas necessário para descrever atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto num XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, devolve o resultado da atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  syntax:
    content: public abstract object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "A saída da atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, devolve o resultado da atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto do tipo especificado."
  remarks: "O método de GetOutput devolve o resultado da transformação atual após a execução no valor definido anteriormente por uma chamada para o <xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>método.</xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>       O tipo de objeto devolvido tem de ser um dos objetos de tipo no <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>propriedade.</xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>"
  syntax:
    content: public abstract object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo do resultado a devolver. Tem de ser um dos tipos do <xref:System.Security.Cryptography.Xml.Transform.OutputTypes*>propriedade.</xref:System.Security.Cryptography.Xml.Transform.OutputTypes*>"
    return:
      type: System.Object
      description: "A saída da atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objecto como um objeto do tipo especificado."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Devolve a representação XML do atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  remarks: "O <xref:System.Xml.XmlElement>objecto devolvido por este método está em conformidade com o esquema de XML para o `<Transform>` elemento definido na secção 4.3.3.4 a especificação de XMLDSIG.</xref:System.Xml.XmlElement>"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "A representação XML do atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.Transform.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, obtém uma matriz de tipos que são entradas válidas para o <xref:System.Security.Cryptography.Xml.Transform.LoadInput*>método atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto.</xref:System.Security.Cryptography.Xml.Transform.LoadInput*>"
  remarks: "A matriz devolvida pela propriedade InputTypes tem de conter pelo menos um elemento porque cada <xref:System.Security.Cryptography.Xml.Transform>objeto tem de aceitar a pelo menos um tipo como entrada válida.</xref:System.Security.Cryptography.Xml.Transform>       A <xref:System.Security.Cryptography.Xml.Transform>objeto normalmente aceita um ou mais dos seguintes tipos de como entrada: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, ou <xref:System.Xml.XmlNodeList>.</xref:System.Xml.XmlNodeList> </xref:System.Xml.XmlDocument> </xref:System.IO.Stream> </xref:System.Security.Cryptography.Xml.Transform>"
  syntax:
    content: public abstract Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "Uma matriz de tipos de entrada válidos para o atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto; pode passar apenas os objetos de um destes tipos para o <xref:System.Security.Cryptography.Xml.Transform.LoadInput*>método atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto.</xref:System.Security.Cryptography.Xml.Transform.LoadInput*>"
  overload: System.Security.Cryptography.Xml.Transform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, analisa especificado <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> objeto como conteúdo específico da transformação de um <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> elemento e configura o estado interno da atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto para corresponder a <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Este método é utilizado para processar subelementos de um `<Transform>` elemento."
  syntax:
    content: public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "Um <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> objeto que especifica a conteúdo específico da transformação para atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, carrega a entrada especificada para o atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  remarks: "O tipo de objeto de entrada tem de ser um dos tipos do <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>propriedade.</xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>"
  syntax:
    content: public abstract void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "A entrada para carregar para o atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.Transform.LoadInput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Quando substituí-lo de uma classe derivada, obtém uma matriz de tipos que são possíveis saídas do <xref:System.Security.Cryptography.Xml.Transform.GetOutput*>métodos de atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto.</xref:System.Security.Cryptography.Xml.Transform.GetOutput*>"
  remarks: "A matriz devolvida pela propriedade OutputTypes tem de conter pelo menos um elemento porque cada transformação tem de gerar pelo menos um tipo como saída."
  syntax:
    content: public abstract Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "Uma matriz de tipos de saída válido para o atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto; apenas objectos de um destes tipos são devolvidos pelo <xref:System.Security.Cryptography.Xml.Transform.GetOutput*>métodos de atual <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> objeto.</xref:System.Security.Cryptography.Xml.Transform.GetOutput*>"
  overload: System.Security.Cryptography.Xml.Transform.OutputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  id: PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define um <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objeto que contém os espaços de nomes que são propagados para a assinatura."
  remarks: "Espaços de nomes XML são utilizados para distinguir diferentes elementos num documento que têm o mesmo nome.       O <xref:System.Collections.Hashtable>chaves da propriedade PropagatedNamespaces são os prefixos de espaço de nomes e o <xref:System.Collections.Hashtable>os valores são o espaço de nomes (URIs) Uniform Resource Identifiers.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable>       A propriedade PropagatedNamespaces está definida automaticamente durante o cálculo de assinatura e a verificação, mas antes de serem invocadas transformações."
  syntax:
    content: public System.Collections.Hashtable PropagatedNamespaces { get; }
    return:
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;> </xref> objeto que contém os espaços de nomes que são propagados para a assinatura."
  overload: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A propriedade de PropagatedNamespaces foi definida como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Define o atual <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto."
  remarks: "O <xref:System.Xml.XmlResolver>classe resolve recursos externos de XML com o nome por um Uniform Resource Identifier (URI).</xref:System.Xml.XmlResolver> Se não confiar na origem do ficheiro XML, poderá não quiser permitir que o ficheiro XML aceder a recursos de computador com o nome o URI. A propriedade de resolução permite-lhe controlar o nível de acesso com ficheiros XML para recursos de computador, especificando diferentes <xref:System.Xml.XmlResolver>objetos.</xref:System.Xml.XmlResolver> Se não pretender permitir que qualquer acesso, pode definir esta propriedade `null` (`Nothing` no Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Atual <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto. Esta propriedade está predefinida para uma <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.Transform.Resolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Transform.Context
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.Transform.#ctor*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform
  nameWithType: Transform.Transform
- uid: System.Security.Cryptography.Xml.Transform.Algorithm*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
- uid: System.Security.Cryptography.Xml.Transform.Context*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput
  nameWithType: Transform.GetDigestedOutput
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml
  nameWithType: Transform.GetInnerXml
- uid: System.Security.Cryptography.Xml.Transform.GetOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput
  nameWithType: Transform.GetOutput
- uid: System.Security.Cryptography.Xml.Transform.GetXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml
  nameWithType: Transform.GetXml
- uid: System.Security.Cryptography.Xml.Transform.InputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml
  nameWithType: Transform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.Transform.LoadInput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput
  nameWithType: Transform.LoadInput
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
- uid: System.Security.Cryptography.Xml.Transform.Resolver*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
