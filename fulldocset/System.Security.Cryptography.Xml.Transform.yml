### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Transform
  id: Transform
  children:
  - System.Security.Cryptography.Xml.Transform.#ctor
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetInnerXml
  - System.Security.Cryptography.Xml.Transform.GetOutput
  - System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.InputTypes
  - System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.Transform.OutputTypes
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  langs:
  - csharp
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
  type: Class
  summary: "Represents the abstract base class from which all <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> elements that can be used in an XML digital signature derive."
  remarks: "When performing XML signing and verification, the <`Transform`> element describes how the signer transformed the data object that was signed.  The verifier of a document then uses the <`Transform`> element to transform the signed data in the same manner.  If the verifier cannot transform the signed data in the same manner, the document cannot be verified.       Use a class that derives from the Transform class whenever you need to add one or more transform objects to an encrypted XML document or to a signed XML document.       For more information about the `<Transform>` element, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or the XML encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/."
  syntax:
    content: public abstract class Transform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> class."
  syntax:
    content: protected Transform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the Uniform Resource Identifier (URI) that identifies the algorithm performed by the current transform."
  remarks: "This property corresponds to the Algorithm attribute of a `<Transform>` element in an XMLDSIG signature. For example, the algorithm URI for the Base64 decoding transform is defined as http://www.w3.org/2000/09/xmldsig#base64 in the XMLDSIG specification (Section 6.6.2).       You can conveniently set this value using one of the static fields associated with the <xref:System.Security.Cryptography.Xml.SignedXml> class."
  syntax:
    content: public string Algorithm { get; set; }
    return:
      type: System.String
      description: "The URI that identifies the algorithm performed by the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Context
  id: Context
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets an <xref href=&quot;System.Xml.XmlElement&quot;></xref> object that represents the document context under which the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object is running."
  remarks: "When signing a document, the Context property represents the value passed to the <xref:System.Security.Cryptography.Xml.SignedXml> constructor.  When verifying a document, the Context property represents <xref:System.Security.Cryptography.Xml.Signature> object.       The Context property is set automatically during signature computation and checking, but before transforms are invoked."
  syntax:
    content: public System.Xml.XmlElement Context { get; set; }
    return:
      type: System.Xml.XmlElement
      description: "An <xref href=&quot;System.Xml.XmlElement&quot;></xref> object that represents the document context under which the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object is running."
  overload: System.Security.Cryptography.Xml.Transform.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  id: GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, returns the digest associated with a <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  syntax:
    content: public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "The <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;></xref> object used to create a digest."
    return:
      type: System.Byte[]
      description: "The digest associated with a <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, returns an XML representation of the parameters of the <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object that are suitable to be included as subelements of an XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  remarks: ''
  example:
  - "If a <xref:System.Security.Cryptography.Xml.Transform> object represents an XPath transform using the XPath expression `self::text()`,a call to GetInnerXml results in an <xref:System.Xml.XmlNodeList> object that represents the following XML element:  \n  \n```  \n<XPath>   \n  self::text()   \n</XPath>  \n```  \n  \n This element corresponds to the transform-specific content of the `<Transform>` element as defined in Section 4.3.3.4 of the XMLDSIG specification. For the above XPath transform, the entire `<Transform>` element is as follows:  \n  \n```  \n<Transform Algorithm=\"http://www.w3.org/TR/1999/REC-xpath-19991116\">   \n  <XPath>   \n    self::text()   \n  </XPath>   \n</Transform>  \n```"
  syntax:
    content: protected abstract System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object in an XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, returns the output of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  syntax:
    content: public abstract object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "The output of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, returns the output of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object of the specified type."
  remarks: "The GetOutput method returns the output of the current transform after it is run on the value previously set by a call to the <xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A> method.       The type of the returned object must be one of the type objects in the <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A> property."
  syntax:
    content: public abstract object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type of the output to return. This must be one of the types in the <xref:System.Security.Cryptography.Xml.Transform.OutputTypes*> property."
    return:
      type: System.Object
      description: "The output of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object as an object of the specified type."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the XML representation of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  remarks: "The <xref:System.Xml.XmlElement> object returned by this method conforms to the XML Scheme for the `<Transform>` element defined in Section 4.3.3.4 of the XMLDSIG specification."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "The XML representation of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, gets an array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.Transform.LoadInput*> method of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  remarks: "The array returned by the InputTypes property must contain at least one element because every <xref:System.Security.Cryptography.Xml.Transform> object must accept at least one type as valid input.       A <xref:System.Security.Cryptography.Xml.Transform> object typically accepts one or more of the following types as input: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, or <xref:System.Xml.XmlNodeList>."
  syntax:
    content: public abstract Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "An array of valid input types for the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object; you can pass only objects of one of these types to the <xref:System.Security.Cryptography.Xml.Transform.LoadInput*> method of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, parses the specified <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> object as transform-specific content of a <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element and configures the internal state of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object to match the <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  remarks: "This method is used to process subelements of a `<Transform>` element."
  syntax:
    content: public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "An <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> object that specifies transform-specific content for the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, loads the specified input into the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  remarks: "The type of the input object must be one of the types in the <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A> property."
  syntax:
    content: public abstract void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The input to load into the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.LoadInput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "When overridden in a derived class, gets an array of types that are possible outputs from the <xref:System.Security.Cryptography.Xml.Transform.GetOutput*> methods of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  remarks: "The array returned by the OutputTypes property must contain at least one element because every transform must generate at least one type as output."
  syntax:
    content: public abstract Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "An array of valid output types for the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object; only objects of one of these types are returned from the <xref:System.Security.Cryptography.Xml.Transform.GetOutput*> methods of the current <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.OutputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  id: PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets a <xref href=&quot;System.Collections.Hashtable&quot;></xref> object that contains the namespaces that are propagated into the signature."
  remarks: "XML namespaces are used to distinguish different elements in a document that have the same name.       The <xref:System.Collections.Hashtable> keys of the PropagatedNamespaces property are the namespace prefixes and the <xref:System.Collections.Hashtable> values are the namespace Uniform Resource Identifiers (URIs).       The PropagatedNamespaces property is set automatically during signature computation and checking, but before transforms are invoked."
  syntax:
    content: public System.Collections.Hashtable PropagatedNamespaces { get; }
    return:
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;></xref> object that contains the namespaces that are propagated into the signature."
  overload: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The PropagatedNamespaces property was set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Sets the current <xref href=&quot;System.Xml.XmlResolver&quot;></xref> object."
  remarks: "The <xref:System.Xml.XmlResolver> class resolves external XML resources named by a Uniform Resource Identifier (URI). If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI. The Resolver property allows you to control the level of access that XML files have to computer resources by specifying different <xref:System.Xml.XmlResolver> objects. If you do not want to allow any access, you can set this property to `null` (`Nothing` in Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "The current <xref href=&quot;System.Xml.XmlResolver&quot;></xref> object. This property defaults to an <xref href=&quot;System.Xml.XmlSecureResolver&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.Transform.Resolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Transform.Context
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.Transform.#ctor*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform
  nameWithType: Transform.Transform
- uid: System.Security.Cryptography.Xml.Transform.Algorithm*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
- uid: System.Security.Cryptography.Xml.Transform.Context*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput
  nameWithType: Transform.GetDigestedOutput
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml
  nameWithType: Transform.GetInnerXml
- uid: System.Security.Cryptography.Xml.Transform.GetOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput
  nameWithType: Transform.GetOutput
- uid: System.Security.Cryptography.Xml.Transform.GetXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml
  nameWithType: Transform.GetXml
- uid: System.Security.Cryptography.Xml.Transform.InputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml
  nameWithType: Transform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.Transform.LoadInput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput
  nameWithType: Transform.LoadInput
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
- uid: System.Security.Cryptography.Xml.Transform.Resolver*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
