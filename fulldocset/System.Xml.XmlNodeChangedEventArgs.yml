### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNodeChangedEventArgs
  id: XmlNodeChangedEventArgs
  children:
  - System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  - System.Xml.XmlNodeChangedEventArgs.Action
  - System.Xml.XmlNodeChangedEventArgs.NewParent
  - System.Xml.XmlNodeChangedEventArgs.NewValue
  - System.Xml.XmlNodeChangedEventArgs.Node
  - System.Xml.XmlNodeChangedEventArgs.OldParent
  - System.Xml.XmlNodeChangedEventArgs.OldValue
  langs:
  - csharp
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs
  fullName: System.Xml.XmlNodeChangedEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserted&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserting&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeRemoved&quot;></xref> and <xref href=&quot;System.Xml.XmlDocument.NodeRemoving&quot;></xref> events."
  remarks: "The following C# code shows how to use the event handler.      ```   //Add a new event handler.   XmlDocument doc = new XmlDocument();   doc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);   //Define the event handler.   void NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)   {    Console.WriteLine(&quot;Node &quot; + args.Node.Name + &quot; inserted!!&quot;);   }   ```      > [!NOTE] >  If an operation is comprised of multiple actions, it results in multiple events. For example, an <xref:System.Xml.XmlNode.AppendChild%2A> call may have to remove the node being appended from its previous parent. In this case you will see a `NodeRemoved` event followed by a `NodeInserted` event."
  syntax:
    content: 'public class XmlNodeChangedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  id: '#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)'
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.XmlNodeChangedEventArgs&quot;></xref> class."
  syntax:
    content: public XmlNodeChangedEventArgs (System.Xml.XmlNode node, System.Xml.XmlNode oldParent, System.Xml.XmlNode newParent, string oldValue, string newValue, System.Xml.XmlNodeChangedAction action);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "The <xref href=&quot;System.Xml.XmlNode&quot;></xref> that generated the event."
    - id: oldParent
      type: System.Xml.XmlNode
      description: "The old parent <xref href=&quot;System.Xml.XmlNode&quot;></xref> of the <xref href=&quot;System.Xml.XmlNode&quot;></xref> that generated the event."
    - id: newParent
      type: System.Xml.XmlNode
      description: "The new parent <xref href=&quot;System.Xml.XmlNode&quot;></xref> of the <xref href=&quot;System.Xml.XmlNode&quot;></xref> that generated the event."
    - id: oldValue
      type: System.String
      description: "The old value of the <xref href=&quot;System.Xml.XmlNode&quot;></xref> that generated the event."
    - id: newValue
      type: System.String
      description: "The new value of the <xref href=&quot;System.Xml.XmlNode&quot;></xref> that generated the event."
    - id: action
      type: System.Xml.XmlNodeChangedAction
      description: "The <xref href=&quot;System.Xml.XmlNodeChangedAction&quot;></xref>."
  overload: System.Xml.XmlNodeChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  id: Action
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets a value indicating what type of node change event is occurring."
  syntax:
    content: public System.Xml.XmlNodeChangedAction Action { get; }
    return:
      type: System.Xml.XmlNodeChangedAction
      description: "An <xref uid=&quot;langword_csharp_XmlNodeChangedAction&quot; name=&quot;XmlNodeChangedAction&quot; href=&quot;&quot;></xref> value describing the node change event.       <table><thead><tr><th> XmlNodeChangedAction Value       </th><th> Description       </th></tr></thead><tbody><tr><td> Insert       </td><td> A node has been or will be inserted.       </td></tr><tr><td> Remove       </td><td> A node has been or will be removed.       </td></tr><tr><td> Change       </td><td> A node has been or will be changed.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    The <xref uid=&quot;langword_csharp_Action&quot; name=&quot;Action&quot; href=&quot;&quot;></xref> value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  id: NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> after the operation completes."
  syntax:
    content: public System.Xml.XmlNode NewParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "The value of the <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;></xref> after the operation completes. This property returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the node is being removed.       <div class=&quot;alert NOTE&quot;>    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.NewParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  id: NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the new value of the node."
  syntax:
    content: public string NewValue { get; }
    return:
      type: System.String
      description: "The new value of the node. This property returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the node is neither an attribute nor a text node, or if the node is being removed.       If called in a <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;></xref> event, <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;></xref> returns the value of the node if the change is successful. If called in a <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;></xref> event, <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;></xref> returns the current value of the node."
  overload: System.Xml.XmlNodeChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  id: Node
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the <xref href=&quot;System.Xml.XmlNode&quot;></xref> that is being added, removed or changed."
  syntax:
    content: public System.Xml.XmlNode Node { get; }
    return:
      type: System.Xml.XmlNode
      description: "The <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;></xref> that is being added, removed or changed; this property never returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlNodeChangedEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  id: OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the value of the <xref:System.Xml.XmlNode.ParentNode*> before the operation began."
  syntax:
    content: public System.Xml.XmlNode OldParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "The value of the <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;></xref> before the operation began. This property returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the node did not have a parent.       <div class=&quot;alert NOTE&quot;>    For attribute nodes this property returns the <xref:System.Xml.XmlAttribute.OwnerElement*>.      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.OldParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  id: OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the original value of the node."
  syntax:
    content: public string OldValue { get; }
    return:
      type: System.String
      description: "The original value of the node. This property returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the node is neither an attribute nor a text node, or if the node is being inserted.       If called in a <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;></xref> event, <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;></xref> returns the current value of the node that will be replaced if the change is successful. If called in a <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;></xref> event, <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;></xref> returns the value of node prior to the change."
  overload: System.Xml.XmlNodeChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNodeChangedAction
  parent: System.Xml
  isExternal: false
  name: XmlNodeChangedAction
  nameWithType: XmlNodeChangedAction
  fullName: System.Xml.XmlNodeChangedAction
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.Action*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
