### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNodeChangedEventArgs
  id: XmlNodeChangedEventArgs
  children:
  - System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  - System.Xml.XmlNodeChangedEventArgs.Action
  - System.Xml.XmlNodeChangedEventArgs.NewParent
  - System.Xml.XmlNodeChangedEventArgs.NewValue
  - System.Xml.XmlNodeChangedEventArgs.Node
  - System.Xml.XmlNodeChangedEventArgs.OldParent
  - System.Xml.XmlNodeChangedEventArgs.OldValue
  langs:
  - csharp
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs
  fullName: System.Xml.XmlNodeChangedEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserted&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserting&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeRemoved&quot;></xref> and <xref href=&quot;System.Xml.XmlDocument.NodeRemoving&quot;></xref> events."
  remarks: "O código do c# seguinte mostra como utilizar o processador de eventos.      ```   //Add a new event handler.   XmlDocument doc = new XmlDocument();   doc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);   //Define the event handler.   void NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)   {    Console.WriteLine(&quot;Node &quot; + args.Node.Name + &quot; inserted!!&quot;);   }   ```      > [!NOTE]> Se uma operação é composta por várias ações, que resulta em vários eventos. Por exemplo, um <xref:System.Xml.XmlNode.AppendChild%2A>chamada poderá ter de remover o nó a ser anexado a partir do respetivo elemento principal anterior.</xref:System.Xml.XmlNode.AppendChild%2A> Neste caso, verá um `NodeRemoved` eventos seguido por um `NodeInserted` eventos."
  syntax:
    content: 'public class XmlNodeChangedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  id: '#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)'
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlNodeChangedEventArgs&quot;> </xref> classe."
  syntax:
    content: public XmlNodeChangedEventArgs (System.Xml.XmlNode node, System.Xml.XmlNode oldParent, System.Xml.XmlNode newParent, string oldValue, string newValue, System.Xml.XmlNodeChangedAction action);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que gerou o evento."
    - id: oldParent
      type: System.Xml.XmlNode
      description: "O principal antigo <xref href=&quot;System.Xml.XmlNode&quot;> </xref> do <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que gerou o evento."
    - id: newParent
      type: System.Xml.XmlNode
      description: "O novo elemento principal <xref href=&quot;System.Xml.XmlNode&quot;> </xref> do <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que gerou o evento."
    - id: oldValue
      type: System.String
      description: "O valor antigo o <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que gerou o evento."
    - id: newValue
      type: System.String
      description: "O novo valor da <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que gerou o evento."
    - id: action
      type: System.Xml.XmlNodeChangedAction
      description: "The <xref href=&quot;System.Xml.XmlNodeChangedAction&quot;></xref>."
  overload: System.Xml.XmlNodeChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  id: Action
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém um valor que indica o tipo de evento de alteração do nó está a ocorrer."
  syntax:
    content: public System.Xml.XmlNodeChangedAction Action { get; }
    return:
      type: System.Xml.XmlNodeChangedAction
      description: "Um <xref uid=&quot;langword_csharp_XmlNodeChangedAction&quot; name=&quot;XmlNodeChangedAction&quot; href=&quot;&quot;> </xref> evento de alteração de valor que descrevem o nó.       <table><thead><tr><th> Valor de XmlNodeChangedAction       </th><th> Descrição       </th></tr></thead><tbody><tr><td> Inserir       </td><td> Um nó foi ou será inserido.       </td></tr><tr><td> Remove       </td><td> Um nó foi ou será removido.       </td></tr><tr><td> Alteração       </td><td> Um nó foi ou será alterado.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    O <xref uid=&quot;langword_csharp_Action&quot; name=&quot;Action&quot; href=&quot;&quot;> </xref> valor não distingue entre quando o evento ocorreu (antes ou depois). Pode criar processadores de eventos separado para processar ambas as instâncias.      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  id: NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o valor da <xref:System.Xml.XmlNode.ParentNode*>depois de concluída a operação.</xref:System.Xml.XmlNode.ParentNode*>"
  syntax:
    content: public System.Xml.XmlNode NewParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "O valor da <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> depois de concluída a operação. Esta propriedade devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o nó está a ser removido.       <div class=&quot;alert NOTE&quot;>    Para nós de atributo esta propriedade devolve <xref:System.Xml.XmlAttribute.OwnerElement*>.</xref:System.Xml.XmlAttribute.OwnerElement*>      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.NewParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  id: NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o novo valor do nó."
  syntax:
    content: public string NewValue { get; }
    return:
      type: System.String
      description: "O novo valor do nó. Esta propriedade devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o nó não é um atributo nem um nó de texto, ou se o nó está a ser removido.       Se a chamada <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;> </xref> evento, <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;> </xref> devolve o valor do nó se a alteração é efetuada com êxito. Se a chamada <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;> </xref> evento, <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;> </xref> devolve o valor atual do nó."
  overload: System.Xml.XmlNodeChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  id: Node
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que está a ser adicionado, removidas ou alteradas."
  syntax:
    content: public System.Xml.XmlNode Node { get; }
    return:
      type: System.Xml.XmlNode
      description: "O <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> que está a ser adicionada, removidas ou alteradas; esta propriedade nunca devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlNodeChangedEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  id: OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o valor da <xref:System.Xml.XmlNode.ParentNode*>antes da operação teve início.</xref:System.Xml.XmlNode.ParentNode*>"
  syntax:
    content: public System.Xml.XmlNode OldParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "O valor da <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> antes de iniciar a operação. Esta propriedade devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o nó não tinha um elemento principal.       <div class=&quot;alert NOTE&quot;>    Para nós de atributo esta propriedade devolve <xref:System.Xml.XmlAttribute.OwnerElement*>.</xref:System.Xml.XmlAttribute.OwnerElement*>      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.OldParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  id: OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o valor original do nó."
  syntax:
    content: public string OldValue { get; }
    return:
      type: System.String
      description: "O valor original do nó. Esta propriedade devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o nó não é um atributo nem um nó de texto, ou se o nó está a ser introduzido.       Se a chamada <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;> </xref> evento, <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;> </xref> devolve o valor atual do nó que será substituído se a alteração é efetuada com êxito. Se a chamada <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;> </xref> evento, <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;> </xref> devolve o valor do nó antes da alteração."
  overload: System.Xml.XmlNodeChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNodeChangedAction
  parent: System.Xml
  isExternal: false
  name: XmlNodeChangedAction
  nameWithType: XmlNodeChangedAction
  fullName: System.Xml.XmlNodeChangedAction
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.Action*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
