### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.DependencyObject
  id: DependencyObject
  children:
  - System.Workflow.ComponentModel.DependencyObject.#ctor
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.Finalize
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  langs:
  - csharp
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
  type: Class
  summary: "A classe base para todos os objetos que tem as propriedades de dependência. Esta classe tem de ser herdada."
  remarks: >-
    > [!NOTE]

    >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class DependencyObject : IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Quando implementada numa classe derivada, inicializa uma nova instância do <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> classe."
  syntax:
    content: protected DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Adiciona um processador para um evento de um <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  remarks: 'Quando cria um delegado, identifique o método que processa o evento. Para associar o evento com o processador de eventos, adicione uma instância do delegado para o evento. A menos que remove o delegado, o processador de eventos é chamado sempre que o evento ocorre. Podem ser adicionados vários delegados para processar um evento. Para obter mais informações sobre o delegado de processador de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  example:
  - "Handlers are added and removed using the following code. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void AddHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>que representa o valor desta propriedade.</xref:System.Object> Neste caso, um <xref:System.Delegate>tipo.</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Qualquer um dos argumentos é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> dependencyEvent </code> representa um non-evento <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  id: DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o valor que indica se esta instância é na conceção ou o modo de tempo de execução."
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esta instância é no modo de estrutura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  id: Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Liberta os recursos não geridos e, opcionalmente, liberta os recursos geridos utilizados pelo <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  id: Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Oferecido como uma substituição para &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; para limpar quaisquer recursos geridos deterministicamente."
  remarks: "Normalmente, isto é necessário apenas quando os processadores de ficheiros de recursos não geridos, tais como HWNDS não processados, Win32, e outros são lançados."
  syntax:
    content: ~DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  id: GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Fornece acesso para o <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> associado especificada <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  syntax:
    content: public System.Workflow.ComponentModel.ActivityBind GetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityBind
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> associado especificada <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  id: GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o <xref:System.Object>que é o assunto de um <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Object>"
  remarks: "O <xref:System.Object>que é o assunto do <xref:System.Workflow.ComponentModel.ActivityBind>.</xref:System.Workflow.ComponentModel.ActivityBind> </xref:System.Object> Quando substituí-lo de uma classe derivada, este método pode ser utilizado para personalizar a forma como em que foi resolvido um enlace especificado."
  syntax:
    content: protected virtual object GetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, Type targetType);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: targetType
      type: System.Type
      description: "O <xref:System.Type>do destino do <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Type>"
    return:
      type: System.Object
      description: "O <xref:System.Object>que é o assunto de um <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  id: GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected T[] GetInvocationList<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A adicionar."
    return:
      type: T[]
      description: "A adicionar."
  overload: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Fornece acesso ao valor de designado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  remarks: "Este membro é normalmente utilizado na propriedade obtém a furnish o valor do valor de dependência com nome."
  example:
  - "The following code shows how to use GetValue to return the value represented by a named dependency property in the context of get and set. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#231](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#231)]\n [!code-vb[WF_Samples#231](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#231)]"
  syntax:
    content: public object GetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Object
      description: "O objeto que representa o valor de designado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Fornece acesso ao objeto vinculado de um <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> e ignora o <xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>substituir.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  remarks: "Este método é útil dentro de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>implementação de substituição.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> Normalmente, o <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>substituir código invoca o GetValueBase e, em seguida, adiciona códigos adicionais.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>       Para implementar o <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>substituir, <xref:System.Workflow.ComponentModel.PropertyMetadata>podem ser utilizados em <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>/<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> chamadas.</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>"
  syntax:
    content: public object GetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> para obter o valor da."
    return:
      type: System.Object
      description: "O objeto vinculado de um <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>. Isto ignora a <xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>substituir.</xref:System.Workflow.ComponentModel.DependencyObject.GetValue*>"
  overload: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Efetua inicialização nas propriedades de dependência quando substituí-lo de uma classe derivada."
  remarks: "Chamado pelo motor de runtime de fluxo de trabalho durante a inicialização da atividade em tempo de execução."
  syntax:
    content: protected virtual void InitializeProperties ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  id: IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Indica se o valor de um <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> está definido como um enlace. Consulte <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>"
  syntax:
    content: public bool IsBindingSet (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> para testar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se definido como um enlace; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  id: MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Determina se o <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;> </xref> deste <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> é igual ao <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;> </xref> do parametrizada <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  remarks: "Esta opção utiliza o `==` operador conforme definido para o tipo de membro privado `metaproperties`, que é <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary>"
  syntax:
    content: public bool MetaEquals (System.Workflow.ComponentModel.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Workflow.ComponentModel.DependencyObject
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> a comparar com para igualdade."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;> </xref> são igual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  id: ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o principal <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> no <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> gráfico."
  syntax:
    content: protected System.Workflow.ComponentModel.DependencyObject ParentDependencyObject { get; }
    return:
      type: System.Workflow.ComponentModel.DependencyObject
      description: "O elemento principal <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> no <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> gráfico."
  overload: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Remove um <xref:System.EventHandler>de um associados <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>.</xref:System.EventHandler>"
  remarks: "Fornecido como um método prático direto para remover um delegado de evento.       Quando cria um delegado, identifique o método que irá processar o evento. Para associar o evento com o processador de eventos, adicione uma instância do delegado para o evento. A menos que remove o delegado, o processador de eventos é chamado sempre que o evento ocorre. Para obter mais informações sobre o delegado de processador de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  example:
  - "Handlers are added and removed using the following code. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void RemoveHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>que representa o valor desta propriedade.</xref:System.Object> Neste caso, um <xref:System.Delegate>tipo.</xref:System.Delegate>"
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Qualquer um dos argumentos é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> dependencyEvent </code> não é um evento."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "O <code> value </code> é um <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> e esta instância não está a ser <xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>.</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  id: RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> from the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: public bool RemoveProperty (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> a serem removidos."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação foi concluída com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O argumento é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  id: SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Define o <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> para especificado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>."
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>Define o valor diretamente para o <xref:System.Workflow.ComponentModel.DependencyProperty>.</xref:System.Workflow.ComponentModel.DependencyProperty></xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> Da mesma forma, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>adiciona um processador diretamente às propriedades de evento de tipo.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>       Estes métodos são exclusivos quando são denominados para a mesma propriedade. Se é chamado SetBinding, em seguida, os valores definidos anteriormente utilizando <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> em eventos) serão ignorados.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> O mesmo se aplica o inverso: <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>(<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) repõe o enlace com SetBinding.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A>permission for this type.  \n  \n In addition, the use of the SetBinding method is illustrated.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#215](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#215)]\n [!code-vb[WF_Samples#215](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#215)]"
  syntax:
    content: public void SetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, System.Workflow.ComponentModel.ActivityBind bind);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref> para."
  overload: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Qualquer um dos argumentos é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref href=&quot;System.Workflow.ComponentModel.PropertyMetadata&quot;> </xref> associados a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> não é que podem ser ligadas."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Esta instância não está a ser <xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>.</xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  id: SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Define o valor do destino <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>."
  syntax:
    content: protected virtual void SetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, object value);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para definir o destino do <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;> </xref>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bind</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Define o valor de um <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>, que é só de leitura."
  syntax:
    content: protected void SetReadOnlyPropertyValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>que representa o valor.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> dependencyProperty </code> é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Define o valor da <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> para o objeto."
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>Define um enlace para a propriedade de dependência.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>       SetValue define um valor diretamente para o <xref:System.Workflow.ComponentModel.DependencyProperty>(da mesma forma, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>adiciona um processador diretamente às propriedades de evento de tipo).</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyProperty>       Estes métodos são exclusivos quando são denominados para a mesma propriedade. Se <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>denomina-se, em seguida, os valores definidos anteriormente utilizando SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> em eventos) serão ignorados.</xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> </xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> O mesmo se aplica o inverso: SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) repõe o enlace com <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.</xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> </xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>"
  example:
  - "The following code shows how a dependency property is set within a dependency object using SetValue.  \n  \n [!code-cs[WF_Samples#166](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#166)]\n [!code-vb[WF_Samples#166](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#166)]"
  syntax:
    content: public void SetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> ser definida."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para definir o valor.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Define o valor da <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> o especificado <xref:System.Object>ignorando <xref:System.Workflow.ComponentModel.DependencyObject.SetValue*>.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue*> </xref:System.Object>"
  remarks: "Este método é útil dentro de <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>implementação de substituição.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> Normalmente, o <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>substituição código efetue algumas lógica personalizada antes de chamar o método SetValueBase.</xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>       Definição de um <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>substituir, <xref:System.Workflow.ComponentModel.PropertyMetadata>podem ser utilizados em <xref:System.Workflow.ComponentModel.DependencyProperty>, <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>, ou <xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>chamadas.</xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> </xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> </xref:System.Workflow.ComponentModel.DependencyProperty> </xref:System.Workflow.ComponentModel.PropertyMetadata> </xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>"
  syntax:
    content: public void SetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> ser definida como <xref:System.Object>.</xref:System.Object>"
    - id: value
      type: System.Object
      description: "O <xref:System.Object>que torna-se o valor da <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  id: Site
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém ou define uma referência para o componente do Site do <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "O componente do Site do <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  id: UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém um <xref:System.Collections.IDictionary>dados personalizados que associa esta instância de classe.</xref:System.Collections.IDictionary>"
  remarks: "Esta propriedade é um `metaproperty`, que significa é imutável durante a execução. `Metaproperties`Não altere depois de uma instância de propriedade é criada no momento de execução para a propriedade tem de ser definida para um valor literal no momento da concepção.       Esta propriedade não é utilizada a predefinição <xref:System.Workflow.ComponentModel.Activity>implementações de declaração fornecidas pelo Windows Workflow Foundation.</xref:System.Workflow.ComponentModel.Activity> Esta coleção não está a ser serializada; dados que contém a coleção não são continuados a partir do momento da conceção para o tempo de execução."
  syntax:
    content: public System.Collections.IDictionary UserData { get; }
    return:
      type: System.Collections.IDictionary
      description: "Um dicionário que age como um hook de extensibilidade para programadores manipular <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> declarações para um design de ferramenta e associar dados personalizados declarações de atividade individual."
  overload: System.Workflow.ComponentModel.DependencyObject.UserData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
- uid: System.Workflow.ComponentModel.ActivityBind
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityBind
  nameWithType: ActivityBind
  fullName: System.Workflow.ComponentModel.ActivityBind
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
- uid: T[]
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
- uid: System.Workflow.ComponentModel.DependencyObject
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler
  nameWithType: DependencyObject.AddHandler
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose
  nameWithType: DependencyObject.Dispose
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize
  nameWithType: DependencyObject.Finalize
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding
  nameWithType: DependencyObject.GetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue
  nameWithType: DependencyObject.GetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList<T>
  nameWithType: DependencyObject.GetInvocationList<T>
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue
  nameWithType: DependencyObject.GetValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase
  nameWithType: DependencyObject.GetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties
  nameWithType: DependencyObject.InitializeProperties
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet
  nameWithType: DependencyObject.IsBindingSet
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals
  nameWithType: DependencyObject.MetaEquals
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler
  nameWithType: DependencyObject.RemoveHandler
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty
  nameWithType: DependencyObject.RemoveProperty
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding
  nameWithType: DependencyObject.SetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue
  nameWithType: DependencyObject.SetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue
  nameWithType: DependencyObject.SetReadOnlyPropertyValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue
  nameWithType: DependencyObject.SetValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase
  nameWithType: DependencyObject.SetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.Site*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
- uid: System.Workflow.ComponentModel.DependencyObject.UserData*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
