### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.DependencyObject
  id: DependencyObject
  children:
  - System.Workflow.ComponentModel.DependencyObject.#ctor
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.Finalize
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  langs:
  - csharp
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
  type: Class
  summary: "The base class for all objects that have dependency properties. This class must be inherited."
  remarks: >-
    > [!NOTE]

    >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class DependencyObject : IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "When implemented in a derived class, initializes a new instance of the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> class."
  syntax:
    content: protected DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Adds a handler for an event of a <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  remarks: 'When you create a delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the delegate to the event. Unless you remove the delegate, the event handler is called whenever the event occurs. Multiple delegates can be added to handle an event. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  example:
  - "Handlers are added and removed using the following code. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void AddHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> that represents the value of this property. In this case, a <xref:System.Delegate> type."
  overload: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either of the arguments is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>dependencyEvent</code> represents a non-event <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  id: DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets the value that indicates whether this instance is in design or run-time mode."
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this instance is in design mode; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  id: Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Releases all the resources used by the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Releases the unmanaged resources and optionally releases the managed resources used by <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Workflow.ComponentModel.DependencyObject.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  id: Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Provided as an override to &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; to clean up any unmanaged resources deterministically."
  remarks: "Typically, this is required only when unmanaged resources such as raw HWNDS, Win32 files handlers, and others are released."
  syntax:
    content: ~DependencyObject ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  id: GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Provides access to the <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref> associated with the specific <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  syntax:
    content: public System.Workflow.ComponentModel.ActivityBind GetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref> associated with the specific <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  id: GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Retrieves the <xref:System.Object> that is the subject of an <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
  remarks: "The <xref:System.Object> that is the subject of an <xref:System.Workflow.ComponentModel.ActivityBind>. When overridden in a derived class, this method can be used to customize the way in which a specified binding is resolved."
  syntax:
    content: protected virtual object GetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, Type targetType);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: targetType
      type: System.Type
      description: "The <xref:System.Type> of the target of the <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    return:
      type: System.Object
      description: "The <xref:System.Object> that is the subject of an <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  id: GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: protected T[] GetInvocationList<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
    return:
      type: T[]
      description: "To be added."
  overload: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Provides access to the value of the designated <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  remarks: "This member is typically used in property gets to furnish the value of the named dependency value."
  example:
  - "The following code shows how to use GetValue to return the value represented by a named dependency property in the context of get and set. This code example is part of the Send E-mail SDK sample and is from the SendMailActivity.cs file. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#231](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#231)]\n [!code-vb[WF_Samples#231](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#231)]"
  syntax:
    content: public object GetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    return:
      type: System.Object
      description: "The object that represents the value of the designated <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  id: GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Provides access to the bound object of a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> and bypasses the <xref:System.Workflow.ComponentModel.DependencyObject.GetValue*> override."
  remarks: "This method is useful inside the <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> override implementation. Typically, the <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> override code invokes the GetValueBase, and then adds additional code.       For implementing the <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> override, <xref:System.Workflow.ComponentModel.PropertyMetadata> can be used in <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>/<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> calls."
  syntax:
    content: public object GetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> to get the value of."
    return:
      type: System.Object
      description: "The bound object of a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>. This bypasses the <xref:System.Workflow.ComponentModel.DependencyObject.GetValue*> override."
  overload: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Performs initialization on dependency properties when overridden in a derived class."
  remarks: "Called by the workflow runtime engine during the initialization of the activity at run time."
  syntax:
    content: protected virtual void InitializeProperties ();
    parameters: []
  overload: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  id: IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Indicates whether the value of a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> is set as a binding. See <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding*>."
  syntax:
    content: public bool IsBindingSet (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> to test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if set as a binding; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  id: MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Determines whether the <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref> of this <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> equals the <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref> of the parameterized <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  remarks: "This uses the `==` operator as defined for the type of private member `metaproperties`, which is <xref:System.Collections.IDictionary>."
  syntax:
    content: public bool MetaEquals (System.Workflow.ComponentModel.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Workflow.ComponentModel.DependencyObject
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> to compare with for equality."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref uid=&quot;langword_csharp_metaproperties&quot; name=&quot;metaproperties&quot; href=&quot;&quot;></xref> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  id: ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets the parent <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> in the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> graph."
  syntax:
    content: protected System.Workflow.ComponentModel.DependencyObject ParentDependencyObject { get; }
    return:
      type: System.Workflow.ComponentModel.DependencyObject
      description: "The parent <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> in the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> graph."
  overload: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes an <xref:System.EventHandler> from an associated <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  remarks: "Provided as a convenient direct method for removing an event delegate.       When you create a delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. Unless you remove the delegate, the event handler is called whenever the event occurs. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  example:
  - "Handlers are added and removed using the following code. For more information, see [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n [!code-cs[WF_Samples#232](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#232)]\n [!code-vb[WF_Samples#232](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#232)]"
  syntax:
    content: public void RemoveHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> that represents the value of this property. In this case, a <xref:System.Delegate> type."
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either of the arguments is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>dependencyEvent</code> is not an event."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "The <code>value</code> is a <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref> and this instance is not in <xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  id: RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Removes a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> from the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: public bool RemoveProperty (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> to be removed."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if operation was successful; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The argument is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  id: SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Sets the <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref> for the specified <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> sets the value directly to the <xref:System.Workflow.ComponentModel.DependencyProperty>. Similarly, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> adds a handler directly to properties of type event.       These methods are exclusive when they are called for the same property. If SetBinding is called, then the values previously set using <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> in events) are disregarded. The same is true the other way around: <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) resets the binding assigned with SetBinding."
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A>permission for this type.  \n  \n In addition, the use of the SetBinding method is illustrated.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#215](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#215)]\n [!code-vb[WF_Samples#215](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#215)]"
  syntax:
    content: public void SetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, System.Workflow.ComponentModel.ActivityBind bind);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref> to set to."
  overload: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either of the arguments is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Workflow.ComponentModel.PropertyMetadata&quot;></xref> associated with the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> is not bindable."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This instance is not in <xref:System.Workflow.ComponentModel.DependencyObject.DesignMode*>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  id: SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Sets the value of the target <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
  syntax:
    content: protected virtual void SetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, object value);
    parameters:
    - id: bind
      type: System.Workflow.ComponentModel.ActivityBind
      description: "The <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to set the target of the <xref href=&quot;System.Workflow.ComponentModel.ActivityBind&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bind</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Sets the value of a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>, which is read-only."
  syntax:
    content: protected void SetReadOnlyPropertyValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> that represents the value."
  overload: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencyProperty</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Sets the value of the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> to the object."
  remarks: "<xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> sets a binding for the dependency property.       SetValue sets a value directly to the <xref:System.Workflow.ComponentModel.DependencyProperty> (similarly, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> adds a handler directly to properties of type event).       These methods are exclusive when they are called for the same property. If <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> is called, then the values previously set using SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> in events) are disregarded. The same is true the other way around: SetValue (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) resets the binding assigned with <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>."
  example:
  - "The following code shows how a dependency property is set within a dependency object using SetValue.  \n  \n [!code-cs[WF_Samples#166](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#166)]\n [!code-vb[WF_Samples#166](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#166)]"
  syntax:
    content: public void SetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> to be set."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to set the value to."
  overload: System.Workflow.ComponentModel.DependencyObject.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  id: SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Sets the value of the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> to the specified <xref:System.Object>, bypassing the <xref:System.Workflow.ComponentModel.DependencyObject.SetValue*>."
  remarks: "This method is useful inside the <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> override implementation. Typically, the <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> override code would do some custom logic before calling the SetValueBase method.       For setting a <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> override, <xref:System.Workflow.ComponentModel.PropertyMetadata> can be used in <xref:System.Workflow.ComponentModel.DependencyProperty>, <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>, or <xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> calls."
  syntax:
    content: public void SetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);
    parameters:
    - id: dependencyProperty
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "The <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> to be set to the <xref:System.Object>."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> that becomes the value of the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyProperty</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  id: Site
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets or sets a reference to the Site component of the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "The Site component of the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref>."
  overload: System.Workflow.ComponentModel.DependencyObject.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  id: UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  langs:
  - csharp
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gets an <xref:System.Collections.IDictionary> that associates custom data with this class instance."
  remarks: "This property is a `metaproperty`, which means it is immutable at run time. `Metaproperties` do not change after a property instance is created at run time, so the property must be set to a literal value at design time.       This property is not used in the default <xref:System.Workflow.ComponentModel.Activity> declaration implementations provided by Windows Workflow Foundation. This collection is not serialized; data that the collection contains is not persisted from design time to run time."
  syntax:
    content: public System.Collections.IDictionary UserData { get; }
    return:
      type: System.Collections.IDictionary
      description: "A dictionary that acts as an extensibility hook for developers to manipulate <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> declarations for a design tool and associate custom data with individual activity declarations."
  overload: System.Workflow.ComponentModel.DependencyObject.UserData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject()
  nameWithType: DependencyObject.DependencyObject()
  fullName: System.Workflow.ComponentModel.DependencyObject.DependencyObject()
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.AddHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.AddHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
  fullName: System.Workflow.ComponentModel.DependencyObject.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose()
  nameWithType: DependencyObject.Dispose()
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose()
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DependencyObject.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.DependencyObject.Dispose(Boolean)
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize()
  nameWithType: DependencyObject.Finalize()
  fullName: System.Workflow.ComponentModel.DependencyObject.Finalize()
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding(DependencyProperty)
  nameWithType: DependencyObject.GetBinding(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBinding(DependencyProperty)
- uid: System.Workflow.ComponentModel.ActivityBind
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityBind
  nameWithType: ActivityBind
  fullName: System.Workflow.ComponentModel.ActivityBind
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue(ActivityBind,Type)
  nameWithType: DependencyObject.GetBoundValue(ActivityBind,Type)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(ActivityBind,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList(DependencyProperty)
  nameWithType: DependencyObject.GetInvocationList(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetInvocationList(DependencyProperty)
- uid: T[]
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValue(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase(DependencyProperty)
  nameWithType: DependencyObject.GetValueBase(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.GetValueBase(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties()
  nameWithType: DependencyObject.InitializeProperties()
  fullName: System.Workflow.ComponentModel.DependencyObject.InitializeProperties()
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet(DependencyProperty)
  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals(DependencyObject)
  nameWithType: DependencyObject.MetaEquals(DependencyObject)
  fullName: System.Workflow.ComponentModel.DependencyObject.MetaEquals(DependencyObject)
- uid: System.Workflow.ComponentModel.DependencyObject
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
  fullName: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler(DependencyProperty,Object)
  nameWithType: DependencyObject.RemoveHandler(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty(DependencyProperty)
  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)
  fullName: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(DependencyProperty)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding(DependencyProperty,ActivityBind)
  nameWithType: DependencyObject.SetBinding(DependencyProperty,ActivityBind)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBinding(DependencyProperty,ActivityBind)
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue(ActivityBind,Object)
  nameWithType: DependencyObject.SetBoundValue(ActivityBind,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(ActivityBind,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValue(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase(DependencyProperty,Object)
  nameWithType: DependencyObject.SetValueBase(DependencyProperty,Object)
  fullName: System.Workflow.ComponentModel.DependencyObject.SetValueBase(DependencyProperty,Object)
- uid: System.Workflow.ComponentModel.DependencyObject.Site
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
  fullName: System.Workflow.ComponentModel.DependencyObject.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Workflow.ComponentModel.DependencyObject.UserData
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
  fullName: System.Workflow.ComponentModel.DependencyObject.UserData
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Workflow.ComponentModel.DependencyObject.#ctor*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject.DependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: AddHandler
  nameWithType: DependencyObject.AddHandler
- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: DesignMode
  nameWithType: DependencyObject.DesignMode
- uid: System.Workflow.ComponentModel.DependencyObject.Dispose*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Dispose
  nameWithType: DependencyObject.Dispose
- uid: System.Workflow.ComponentModel.DependencyObject.Finalize*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Finalize
  nameWithType: DependencyObject.Finalize
- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBinding
  nameWithType: DependencyObject.GetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetBoundValue
  nameWithType: DependencyObject.GetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList<T>*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetInvocationList<T>
  nameWithType: DependencyObject.GetInvocationList<T>
- uid: System.Workflow.ComponentModel.DependencyObject.GetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValue
  nameWithType: DependencyObject.GetValue
- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: GetValueBase
  nameWithType: DependencyObject.GetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: InitializeProperties
  nameWithType: DependencyObject.InitializeProperties
- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: IsBindingSet
  nameWithType: DependencyObject.IsBindingSet
- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: MetaEquals
  nameWithType: DependencyObject.MetaEquals
- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: ParentDependencyObject
  nameWithType: DependencyObject.ParentDependencyObject
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveHandler
  nameWithType: DependencyObject.RemoveHandler
- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: RemoveProperty
  nameWithType: DependencyObject.RemoveProperty
- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBinding
  nameWithType: DependencyObject.SetBinding
- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetBoundValue
  nameWithType: DependencyObject.SetBoundValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetReadOnlyPropertyValue
  nameWithType: DependencyObject.SetReadOnlyPropertyValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValue*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValue
  nameWithType: DependencyObject.SetValue
- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: SetValueBase
  nameWithType: DependencyObject.SetValueBase
- uid: System.Workflow.ComponentModel.DependencyObject.Site*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: Site
  nameWithType: DependencyObject.Site
- uid: System.Workflow.ComponentModel.DependencyObject.UserData*
  parent: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: UserData
  nameWithType: DependencyObject.UserData
