### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  id: SecurityTokenHandlerElementCollection
  children:
  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor
  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement
  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init
  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name
  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties
  - System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
  langs:
  - csharp
  name: SecurityTokenHandlerElementCollection
  nameWithType: SecurityTokenHandlerElementCollection
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  type: Class
  summary: "Represents a <xref uid=&quot;langword_csharp_&lt;securityTokenHandlers&gt;&quot; name=&quot;&lt;securityTokenHandlers&gt;&quot; href=&quot;&quot;></xref> element in a configuration file. This class cannot be inherited."
  remarks: "The `<securityTokenHandlers>` element contains the set of security token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) that are registered with the endpoint. By default, the collection is populated with <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>, and <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>.  \n  \n In the configuration file, each token handler can have custom configuration as a child element to its `<add>` element. <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>, <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>, <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler> and <xref:System.IdentityModel.Tokens.MembershipUserNameSecurityTokenHandler> have a pre-defined custom configuration section.  \n  \n Security token handler collections can also be named; to be used in certain circumstances. The only names that the framework handles are \"ActAs\" and \"OnBehalfOf\". If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens; for example `<securityTokenHandlers name=\"ActAs\">`. The `name` attribute is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name%2A> property.  \n  \n The `<securityTokenHandlerConfiguration>` child element defines default settings for the handlers in the collection (which can be overridden by the settings defined by individual handlers in the \\<add> element). The `<securityTokenHandlerElement>` is represented by the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class and is accessed through the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration> property."
  syntax:
    content: >-
      [System.Configuration.ConfigurationCollection(typeof(System.IdentityModel.Configuration.CustomTypeElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]

      public sealed class SecurityTokenHandlerElementCollection : System.Configuration.ConfigurationElementCollection
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationElementCollection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CollectionType
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.ElementName
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  langs:
  - csharp
  name: SecurityTokenHandlerElementCollection()
  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection&quot;></xref> class."
  syntax:
    content: public SecurityTokenHandlerElementCollection ();
    parameters: []
  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement
  id: CreateNewElement
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  langs:
  - csharp
  name: CreateNewElement()
  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement()
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationElement
      description: "To be added."
  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  syntax:
    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "To be added."
    return:
      type: System.Object
      description: "To be added."
  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init
  id: Init
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  langs:
  - csharp
  name: Init()
  nameWithType: SecurityTokenHandlerElementCollection.Init()
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  syntax:
    content: protected override void Init ();
    parameters: []
  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name
  id: Name
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  langs:
  - csharp
  name: Name
  nameWithType: SecurityTokenHandlerElementCollection.Name
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  summary: "Gets or sets the name of the collection."
  remarks: "Represents the `name` attribute of the `<securityTokenHandlers>` element.       The only names that the framework handles are &quot;ActAs&quot; and &quot;OnBehalfOf&quot;. If handlers exist in these collections, they will be used instead of the default handlers for processing ActAs and OnBehalfOf tokens."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the collection."
  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties
  id: Properties
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  langs:
  - csharp
  name: Properties
  nameWithType: SecurityTokenHandlerElementCollection.Properties
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
  id: SecurityTokenHandlerConfiguration
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  langs:
  - csharp
  name: SecurityTokenHandlerConfiguration
  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  summary: "Gets or sets the default settings for the handlers in the collection."
  remarks: "Represents the `<securityTokenHandlerConfiguration>` child element of the `<securityTokenHandlers>` element."
  syntax:
    content: public System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement SecurityTokenHandlerConfiguration { get; set; }
    return:
      type: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement
      description: "The default settings for the handlers in the collection."
  overload: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Configuration.ConfigurationElementCollection
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: SecurityTokenHandlerElementCollection()
  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection()
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: CreateNewElement()
  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement()
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement()
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey(ConfigurationElement)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: Init()
  nameWithType: SecurityTokenHandlerElementCollection.Init()
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init()
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: Name
  nameWithType: SecurityTokenHandlerElementCollection.Name
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenHandlerElementCollection.Properties
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: SecurityTokenHandlerConfiguration
  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement
  parent: System.IdentityModel.Configuration
  isExternal: false
  name: SecurityTokenHandlerConfigurationElement
  nameWithType: SecurityTokenHandlerConfigurationElement
  fullName: System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.#ctor*
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: SecurityTokenHandlerElementCollection
  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerElementCollection
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.CreateNewElement*
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: CreateNewElement
  nameWithType: SecurityTokenHandlerElementCollection.CreateNewElement
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.GetElementKey*
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: GetElementKey
  nameWithType: SecurityTokenHandlerElementCollection.GetElementKey
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Init*
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: Init
  nameWithType: SecurityTokenHandlerElementCollection.Init
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Name*
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: Name
  nameWithType: SecurityTokenHandlerElementCollection.Name
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.Properties*
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenHandlerElementCollection.Properties
- uid: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration*
  parent: System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection
  isExternal: false
  name: SecurityTokenHandlerConfiguration
  nameWithType: SecurityTokenHandlerElementCollection.SecurityTokenHandlerConfiguration
