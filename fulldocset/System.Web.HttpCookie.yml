### YamlMime:ManagedReference
items:
- uid: System.Web.HttpCookie
  id: HttpCookie
  children:
  - System.Web.HttpCookie.#ctor(System.String)
  - System.Web.HttpCookie.#ctor(System.String,System.String)
  - System.Web.HttpCookie.Domain
  - System.Web.HttpCookie.Expires
  - System.Web.HttpCookie.HasKeys
  - System.Web.HttpCookie.HttpOnly
  - System.Web.HttpCookie.Item(System.String)
  - System.Web.HttpCookie.Name
  - System.Web.HttpCookie.Path
  - System.Web.HttpCookie.Secure
  - System.Web.HttpCookie.Shareable
  - System.Web.HttpCookie.Value
  - System.Web.HttpCookie.Values
  langs:
  - csharp
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
  type: Class
  summary: "Fornece uma forma de tipo seguro para criar e manipular individuais cookies HTTP."
  remarks: "A classe de HttpCookie obtém e define as propriedades de cookies individuais. O <xref:System.Web.HttpCookieCollection>classe fornece métodos para armazenar, obter e gerir vários cookies.</xref:System.Web.HttpCookieCollection>       ASP.NET inclui duas coleções de cookie intrínseca. A coleção acedida através de <xref:System.Web.HttpRequest.Cookies%2A>coleção do <xref:System.Web.HttpRequest>objeto contém os cookies transmitidos pelo cliente para o servidor no `Cookie` cabeçalho.</xref:System.Web.HttpRequest> </xref:System.Web.HttpRequest.Cookies%2A> A coleção acedida através do <xref:System.Web.HttpResponse.Cookies%2A>coleção do <xref:System.Web.HttpResponse>objeto contém os novos cookies criada no servidor e transmitidos para o cliente a `Set-Cookie` cabeçalho de resposta HTTP.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.Cookies%2A>"
  example:
  - "The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object. If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object. The cookie is set to expire in 10 minutes.  \n  \n [!code-vb[System.Web.HttpCookie#1](~/add/codesnippet/visualbasic/t-system.web.httpcookie_1.aspx)]\n [!code-cs[System.Web.HttpCookie#1](~/add/codesnippet/csharp/t-system.web.httpcookie_1.aspx)]"
  syntax:
    content: public sealed class HttpCookie
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpCookie.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HttpCookie(String)
  nameWithType: HttpCookie.HttpCookie(String)
  fullName: System.Web.HttpCookie.HttpCookie(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cria e atribui um novo cookie."
  remarks: ''
  example:
  - "The following code example creates and names a new cookie.  \n  \n [!code-cs[Classic HttpCookie.HttpCookie Example#1](~/add/codesnippet/csharp/m-system.web.httpcookie._0_1.cs)]\n [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httpcookie._0_1.vb)]"
  syntax:
    content: public HttpCookie (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do cookie novo."
  overload: System.Web.HttpCookie.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HttpCookie(String,String)
  nameWithType: HttpCookie.HttpCookie(String,String)
  fullName: System.Web.HttpCookie.HttpCookie(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cria, nomes e atribui um valor para um novo cookie."
  remarks: ''
  example:
  - "The following code example creates, names, and sets the value of a new cookie.  \n  \n [!code-cs[Classic HttpCookie.HttpCookie1 Example#1](~/add/codesnippet/csharp/m-system.web.httpcookie._1_1.cs)]\n [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpcookie._1_1.vb)]"
  syntax:
    content: public HttpCookie (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do cookie novo."
    - id: value
      type: System.String
      description: "O valor do cookie novo."
  overload: System.Web.HttpCookie.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Domain
  id: Domain
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Domain
  nameWithType: HttpCookie.Domain
  fullName: System.Web.HttpCookie.Domain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o domínio a associar o cookie de com."
  remarks: "Definir o `Domain` atributo limites de transmissão do cookie para os clientes que solicitam um recurso a partir desse domínio."
  example:
  - "The following code example sets the cookie's domain.  \n  \n [!code-cs[Classic HttpCookie.Domain Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._3_1.cs)]\n [!code-vb[Classic HttpCookie.Domain Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._3_1.vb)]"
  syntax:
    content: public string Domain { get; set; }
    return:
      type: System.String
      description: "O nome do domínio a associar o cookie de com. O valor predefinido é o domínio atual."
  overload: System.Web.HttpCookie.Domain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Expires
  id: Expires
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Expires
  nameWithType: HttpCookie.Expires
  fullName: System.Web.HttpCookie.Expires
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define a data de expiração e hora para o cookie."
  remarks: ''
  example:
  - "The following code example sets the expiration time of the cookie to 10 minutes from the current time.  \n  \n [!code-cs[Classic HttpCookie.Expires Example#2](~/add/codesnippet/csharp/p-system.web.httpcookie._1_1.aspx)]\n [!code-vb[Classic HttpCookie.Expires Example#2](~/add/codesnippet/visualbasic/p-system.web.httpcookie._1_1.aspx)]"
  syntax:
    content: public DateTime Expires { get; set; }
    return:
      type: System.DateTime
      description: "A hora do dia (no cliente) em que o cookie expira."
  overload: System.Web.HttpCookie.Expires*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.HasKeys
  id: HasKeys
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HasKeys
  nameWithType: HttpCookie.HasKeys
  fullName: System.Web.HttpCookie.HasKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se um cookie tem subchaves."
  remarks: ''
  example:
  - "The following code example examines each member of a cookie collection for multiple values. If a cookie's HasKeys property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array. For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.  \n  \n [!code-cs[Classic HttpCookie.HasKeys Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._8_1.cs)]\n [!code-vb[Classic HttpCookie.HasKeys Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._8_1.vb)]"
  syntax:
    content: public bool HasKeys { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cookie tem subchaves, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpCookie.HasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.HttpOnly
  id: HttpOnly
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HttpOnly
  nameWithType: HttpCookie.HttpOnly
  fullName: System.Web.HttpCookie.HttpOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que especifica se um cookie é acessível pelo script do lado do cliente."
  remarks: "Microsoft Internet Explorer versão 6 Service Pack 1 e posterior suporta uma propriedade de cookie, HttpOnly, que pode ajudar a mitigar ameaças de scripts entre sites que resultam em cookies roubados. Cookies roubados podem conter informações confidenciais, identificar o utilizador para o site, tais como o ASP.NET sessão formulários ou um ID de permissão de autenticação e podem ser reproduzidos, o atacante para representação como o utilizador ou obter informações confidenciais. Quando um `HttpOnly` cookie é recebido pelo browser em conformidade, não está acessível para o script do lado do cliente.      > [!CAUTION] > Definir a propriedade HttpOnly como `true` não impede que um atacante com acesso para o canal de rede aceder diretamente ao cookie. Considere a utilização de Secure Sockets Layer (SSL) para ajudar a proteger contra isto. Segurança de estação de trabalho também é importante, como um utilizador mal intencionado pode utilizar uma janela do browser abrir ou um computador que contém os cookies persistentes para obter acesso a um Web site com a identidade de um utilizador legítimo.       Para obter mais informações sobre possíveis ataques e como esta propriedade pode ajudá-lo a mitigá-los, consulte [secção mitigação em vários sites Scripting com Cookies apenas de HTTP](http://go.microsoft.com/fwlink/?LinkId=41580)."
  example:
  - "The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.  \n  \n [!code-cs[HttpOnlyCookie#1](~/add/codesnippet/csharp/p-system.web.httpcookie._2_1.aspx)]\n [!code-vb[HttpOnlyCookie#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._2_1.aspx)]"
  syntax:
    content: public bool HttpOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tiver o cookie de <xref uid=&quot;langword_csharp_HttpOnly&quot; name=&quot;HttpOnly&quot; href=&quot;&quot;> </xref> atributo e não podem ser acedidos através de um script do lado do cliente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpCookie.HttpOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Item(System.String)
  id: Item(System.String)
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpCookie.Item(String)
  fullName: System.Web.HttpCookie.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um atalho para o &lt;xref:System.Web.HttpCookie.Values%2A?displayProperty=fullName&gt; propriedade. Esta propriedade é fornecida para compatibilidade com versões anteriores do Active Server Pages (ASP)."
  syntax:
    content: public string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "A chave (índice) do valor do cookie."
    return:
      type: System.String
      description: "O valor do cookie."
  overload: System.Web.HttpCookie.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Name
  id: Name
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Name
  nameWithType: HttpCookie.Name
  fullName: System.Web.HttpCookie.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o nome do cookie."
  remarks: ''
  example:
  - "The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.  \n  \n [!code-cs[Classic HttpCookie.Name Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._0_1.cs)]\n [!code-vb[Classic HttpCookie.Name Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._0_1.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O valor predefinido é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic), a menos que o construtor especifique o contrário."
  overload: System.Web.HttpCookie.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Path
  id: Path
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Path
  nameWithType: HttpCookie.Path
  fullName: System.Web.HttpCookie.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o caminho virtual para transmitir com o cookie atual."
  remarks: "A propriedade Path expande o <xref:System.Web.HttpCookie.Domain%2A>propriedade completamente descrever o URL específico aos quais se aplica o cookie.</xref:System.Web.HttpCookie.Domain%2A> Por exemplo, o www.microsoft.com/asp http:/ URL, o domínio é www.microsoft.com e o caminho é /asp."
  example:
  - "The following code example sets the Path property of a new cookie.  \n  \n [!code-cs[Classic HttpCookie.Path Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._4_1.cs)]\n [!code-vb[Classic HttpCookie.Path Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._4_1.vb)]"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "O caminho virtual para transmitir com o cookie. A predefinição é <xref uid=&quot;langword_csharp_/&quot; name=&quot;/&quot; href=&quot;&quot;> </xref>, que é a raiz de servidor."
  overload: System.Web.HttpCookie.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Secure
  id: Secure
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Secure
  nameWithType: HttpCookie.Secure
  fullName: System.Web.HttpCookie.Secure
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que indica se a transmitir ao cookie através de Secure Sockets Layer (SSL) - ou seja, através de HTTPS apenas."
  remarks: "Para definir a transmissão de cookies através de SSL para uma aplicação completa, ativá-la no ficheiro de configuração da aplicação, Web. config, que reside no diretório de raiz da aplicação. Para obter mais informações, consulte [httpCookies elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/74790718-bfa3-4935-bc9a-59c88797e08f). Valores definidos através de programação utilizando a propriedade segura substituam o conjunto de valores no ficheiro Web. config.       Ao lidar com informações confidenciais, é vivamente recomendado que utilize o protocolo HTTPS com encriptação SSL. SSL protege contra dados a ser alterados (integridade dos dados), protege a identidade de um utilizador (confidencialidade) e garante que os dados têm origem do cliente esperado (autenticação). Para obter mais informações sobre as vantagens de encriptação, consulte [serviços criptográficos](~/add/includes/ajax-current-ext-md.md). Para obter mais informações sobre como configurar o SSL num servidor Web de serviços de informação Internet (IIS), consulte [configurar SSL num servidor Web ou um Web Site](http://go.microsoft.com/fwlink/?LinkId=38553)."
  example:
  - "The following code example takes action if the cookie is set to transmit using SSL.  \n  \n [!code-vb[Classic HttpCookie.Secure Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._5_1.vb)]\n [!code-cs[Classic HttpCookie.Secure Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._5_1.cs)]"
  syntax:
    content: public bool Secure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para transmitir o cookie através de uma ligação SSL (HTTPS); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpCookie.Secure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Shareable
  id: Shareable
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Shareable
  nameWithType: HttpCookie.Shareable
  fullName: System.Web.HttpCookie.Shareable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Determina se o cookie é permitido para participar na cache de saída."
  remarks: "Se um determinado <xref:System.Web.HttpResponse>contém um ou mais saídos cookies com Shareable estiver definido como `false` (o valor predefinido), a colocação em cache irão ser suprimida para a resposta de saída.</xref:System.Web.HttpResponse> Isto impede que os cookies que contêm as informações potencialmente confidenciais sejam colocados em cache na resposta e enviados para vários clientes.  Para permitir uma resposta que contém os cookies para ser colocadas em cache, configurar a colocação em cache, normalmente, a resposta, tais como utilizar o `OutputCache` diretiva ou do MVC [OutputCache] atributo e definir todos os cookies de saída ter Shareable definido como `true`."
  syntax:
    content: public bool Shareable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para especificar que cache de saída não irão ser suprimido para um determinado <xref href=&quot;System.Web.HttpResponse&quot;> </xref> que contém um ou mais saídos cookies; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpCookie.Shareable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Value
  id: Value
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Value
  nameWithType: HttpCookie.Value
  fullName: System.Web.HttpCookie.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor de cookie individuais."
  remarks: ''
  example:
  - "The following code example sets the value of an existing cookie to \"abc123\".  \n  \n [!code-cs[Classic HttpCookie.Value Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._7_1.cs)]\n [!code-vb[Classic HttpCookie.Value Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._7_1.vb)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "O valor do cookie. O valor predefinido é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  overload: System.Web.HttpCookie.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Values
  id: Values
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Values
  nameWithType: HttpCookie.Values
  fullName: System.Web.HttpCookie.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma coleção de pares chave/valor que estão contidas dentro de um objeto de cookie único."
  remarks: ''
  example:
  - "The following code example creates a new cookie and adds several values to it. For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.  \n  \n [!code-vb[Classic HttpCookie.Values Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._6_1.vb)]\n [!code-cs[Classic HttpCookie.Values Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._6_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Values { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Uma coleção de valores de cookie."
  overload: System.Web.HttpCookie.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpCookie.#ctor(System.String)
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpCookie(String)
  nameWithType: HttpCookie.HttpCookie(String)
  fullName: System.Web.HttpCookie.HttpCookie(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpCookie.#ctor(System.String,System.String)
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpCookie(String,String)
  nameWithType: HttpCookie.HttpCookie(String,String)
  fullName: System.Web.HttpCookie.HttpCookie(String,String)
- uid: System.Web.HttpCookie.Domain
  parent: System.Web.HttpCookie
  isExternal: false
  name: Domain
  nameWithType: HttpCookie.Domain
  fullName: System.Web.HttpCookie.Domain
- uid: System.Web.HttpCookie.Expires
  parent: System.Web.HttpCookie
  isExternal: false
  name: Expires
  nameWithType: HttpCookie.Expires
  fullName: System.Web.HttpCookie.Expires
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpCookie.HasKeys
  parent: System.Web.HttpCookie
  isExternal: false
  name: HasKeys
  nameWithType: HttpCookie.HasKeys
  fullName: System.Web.HttpCookie.HasKeys
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpCookie.HttpOnly
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpOnly
  nameWithType: HttpCookie.HttpOnly
  fullName: System.Web.HttpCookie.HttpOnly
- uid: System.Web.HttpCookie.Item(System.String)
  parent: System.Web.HttpCookie
  isExternal: false
  name: Item(String)
  nameWithType: HttpCookie.Item(String)
  fullName: System.Web.HttpCookie.Item(String)
- uid: System.Web.HttpCookie.Name
  parent: System.Web.HttpCookie
  isExternal: false
  name: Name
  nameWithType: HttpCookie.Name
  fullName: System.Web.HttpCookie.Name
- uid: System.Web.HttpCookie.Path
  parent: System.Web.HttpCookie
  isExternal: false
  name: Path
  nameWithType: HttpCookie.Path
  fullName: System.Web.HttpCookie.Path
- uid: System.Web.HttpCookie.Secure
  parent: System.Web.HttpCookie
  isExternal: false
  name: Secure
  nameWithType: HttpCookie.Secure
  fullName: System.Web.HttpCookie.Secure
- uid: System.Web.HttpCookie.Shareable
  parent: System.Web.HttpCookie
  isExternal: false
  name: Shareable
  nameWithType: HttpCookie.Shareable
  fullName: System.Web.HttpCookie.Shareable
- uid: System.Web.HttpCookie.Value
  parent: System.Web.HttpCookie
  isExternal: false
  name: Value
  nameWithType: HttpCookie.Value
  fullName: System.Web.HttpCookie.Value
- uid: System.Web.HttpCookie.Values
  parent: System.Web.HttpCookie
  isExternal: false
  name: Values
  nameWithType: HttpCookie.Values
  fullName: System.Web.HttpCookie.Values
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpCookie.#ctor*
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie.HttpCookie
- uid: System.Web.HttpCookie.Domain*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Domain
  nameWithType: HttpCookie.Domain
- uid: System.Web.HttpCookie.Expires*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Expires
  nameWithType: HttpCookie.Expires
- uid: System.Web.HttpCookie.HasKeys*
  parent: System.Web.HttpCookie
  isExternal: false
  name: HasKeys
  nameWithType: HttpCookie.HasKeys
- uid: System.Web.HttpCookie.HttpOnly*
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpOnly
  nameWithType: HttpCookie.HttpOnly
- uid: System.Web.HttpCookie.Item*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Item
  nameWithType: HttpCookie.Item
- uid: System.Web.HttpCookie.Name*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Name
  nameWithType: HttpCookie.Name
- uid: System.Web.HttpCookie.Path*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Path
  nameWithType: HttpCookie.Path
- uid: System.Web.HttpCookie.Secure*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Secure
  nameWithType: HttpCookie.Secure
- uid: System.Web.HttpCookie.Shareable*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Shareable
  nameWithType: HttpCookie.Shareable
- uid: System.Web.HttpCookie.Value*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Value
  nameWithType: HttpCookie.Value
- uid: System.Web.HttpCookie.Values*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Values
  nameWithType: HttpCookie.Values
