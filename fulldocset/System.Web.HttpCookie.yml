### YamlMime:ManagedReference
items:
- uid: System.Web.HttpCookie
  id: HttpCookie
  children:
  - System.Web.HttpCookie.#ctor(System.String)
  - System.Web.HttpCookie.#ctor(System.String,System.String)
  - System.Web.HttpCookie.Domain
  - System.Web.HttpCookie.Expires
  - System.Web.HttpCookie.HasKeys
  - System.Web.HttpCookie.HttpOnly
  - System.Web.HttpCookie.Item(System.String)
  - System.Web.HttpCookie.Name
  - System.Web.HttpCookie.Path
  - System.Web.HttpCookie.Secure
  - System.Web.HttpCookie.Shareable
  - System.Web.HttpCookie.Value
  - System.Web.HttpCookie.Values
  langs:
  - csharp
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
  type: Class
  summary: "Provides a type-safe way to create and manipulate individual HTTP cookies."
  remarks: "The HttpCookie class gets and sets properties of individual cookies. The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.       ASP.NET includes two intrinsic cookie collections. The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header. The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header."
  example:
  - "The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object. If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object. The cookie is set to expire in 10 minutes.  \n  \n [!code-vb[System.Web.HttpCookie#1](~/add/codesnippet/visualbasic/t-system.web.httpcookie_1.aspx)]\n [!code-cs[System.Web.HttpCookie#1](~/add/codesnippet/csharp/t-system.web.httpcookie_1.aspx)]"
  syntax:
    content: public sealed class HttpCookie
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpCookie.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HttpCookie(String)
  nameWithType: HttpCookie.HttpCookie(String)
  fullName: System.Web.HttpCookie.HttpCookie(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Creates and names a new cookie."
  remarks: ''
  example:
  - "The following code example creates and names a new cookie.  \n  \n [!code-cs[Classic HttpCookie.HttpCookie Example#1](~/add/codesnippet/csharp/m-system.web.httpcookie._0_1.cs)]\n [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httpcookie._0_1.vb)]"
  syntax:
    content: public HttpCookie (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the new cookie."
  overload: System.Web.HttpCookie.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HttpCookie(String,String)
  nameWithType: HttpCookie.HttpCookie(String,String)
  fullName: System.Web.HttpCookie.HttpCookie(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Creates, names, and assigns a value to a new cookie."
  remarks: ''
  example:
  - "The following code example creates, names, and sets the value of a new cookie.  \n  \n [!code-cs[Classic HttpCookie.HttpCookie1 Example#1](~/add/codesnippet/csharp/m-system.web.httpcookie._1_1.cs)]\n [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpcookie._1_1.vb)]"
  syntax:
    content: public HttpCookie (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the new cookie."
    - id: value
      type: System.String
      description: "The value of the new cookie."
  overload: System.Web.HttpCookie.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Domain
  id: Domain
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Domain
  nameWithType: HttpCookie.Domain
  fullName: System.Web.HttpCookie.Domain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets the domain to associate the cookie with."
  remarks: "Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain."
  example:
  - "The following code example sets the cookie's domain.  \n  \n [!code-cs[Classic HttpCookie.Domain Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._3_1.cs)]\n [!code-vb[Classic HttpCookie.Domain Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._3_1.vb)]"
  syntax:
    content: public string Domain { get; set; }
    return:
      type: System.String
      description: "The name of the domain to associate the cookie with. The default value is the current domain."
  overload: System.Web.HttpCookie.Domain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Expires
  id: Expires
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Expires
  nameWithType: HttpCookie.Expires
  fullName: System.Web.HttpCookie.Expires
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets the expiration date and time for the cookie."
  remarks: ''
  example:
  - "The following code example sets the expiration time of the cookie to 10 minutes from the current time.  \n  \n [!code-cs[Classic HttpCookie.Expires Example#2](~/add/codesnippet/csharp/p-system.web.httpcookie._1_1.aspx)]\n [!code-vb[Classic HttpCookie.Expires Example#2](~/add/codesnippet/visualbasic/p-system.web.httpcookie._1_1.aspx)]"
  syntax:
    content: public DateTime Expires { get; set; }
    return:
      type: System.DateTime
      description: "The time of day (on the client) at which the cookie expires."
  overload: System.Web.HttpCookie.Expires*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.HasKeys
  id: HasKeys
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HasKeys
  nameWithType: HttpCookie.HasKeys
  fullName: System.Web.HttpCookie.HasKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a value indicating whether a cookie has subkeys."
  remarks: ''
  example:
  - "The following code example examines each member of a cookie collection for multiple values. If a cookie's HasKeys property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array. For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.  \n  \n [!code-cs[Classic HttpCookie.HasKeys Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._8_1.cs)]\n [!code-vb[Classic HttpCookie.HasKeys Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._8_1.vb)]"
  syntax:
    content: public bool HasKeys { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cookie has subkeys, otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpCookie.HasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.HttpOnly
  id: HttpOnly
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: HttpOnly
  nameWithType: HttpCookie.HttpOnly
  fullName: System.Web.HttpCookie.HttpOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets a value that specifies whether a cookie is accessible by client-side script."
  remarks: "Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, HttpOnly, that can help mitigate cross-site scripting threats that result in stolen cookies. Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information. When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.      > [!CAUTION] >  Setting the HttpOnly property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly. Consider using Secure Sockets Layer (SSL) to help protect against this. Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user&quot;s identity.       For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](http://go.microsoft.com/fwlink/?LinkId=41580)."
  example:
  - "The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.  \n  \n [!code-cs[HttpOnlyCookie#1](~/add/codesnippet/csharp/p-system.web.httpcookie._2_1.aspx)]\n [!code-vb[HttpOnlyCookie#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._2_1.aspx)]"
  syntax:
    content: public bool HttpOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cookie has the <xref uid=&quot;langword_csharp_HttpOnly&quot; name=&quot;HttpOnly&quot; href=&quot;&quot;></xref> attribute and cannot be accessed through a client-side script; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpCookie.HttpOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Item(System.String)
  id: Item(System.String)
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpCookie.Item(String)
  fullName: System.Web.HttpCookie.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a shortcut to the &lt;xref:System.Web.HttpCookie.Values%2A?displayProperty=fullName&gt; property. This property is provided for compatibility with previous versions of Active Server Pages (ASP)."
  syntax:
    content: public string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "The key (index) of the cookie value."
    return:
      type: System.String
      description: "The cookie value."
  overload: System.Web.HttpCookie.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Name
  id: Name
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Name
  nameWithType: HttpCookie.Name
  fullName: System.Web.HttpCookie.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets the name of a cookie."
  remarks: ''
  example:
  - "The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.  \n  \n [!code-cs[Classic HttpCookie.Name Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._0_1.cs)]\n [!code-vb[Classic HttpCookie.Name Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._0_1.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The default value is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic) unless the constructor specifies otherwise."
  overload: System.Web.HttpCookie.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Path
  id: Path
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Path
  nameWithType: HttpCookie.Path
  fullName: System.Web.HttpCookie.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets the virtual path to transmit with the current cookie."
  remarks: "The Path property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies. For example, in the URL http:/www.microsoft.com/asp, the domain is www.microsoft.com and the path is /asp."
  example:
  - "The following code example sets the Path property of a new cookie.  \n  \n [!code-cs[Classic HttpCookie.Path Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._4_1.cs)]\n [!code-vb[Classic HttpCookie.Path Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._4_1.vb)]"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "The virtual path to transmit with the cookie. The default is <xref uid=&quot;langword_csharp_/&quot; name=&quot;/&quot; href=&quot;&quot;></xref>, which is the server root."
  overload: System.Web.HttpCookie.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Secure
  id: Secure
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Secure
  nameWithType: HttpCookie.Secure
  fullName: System.Web.HttpCookie.Secure
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only."
  remarks: "To set the transmission of cookies using SSL for an entire application, enable it in the application&quot;s configuration file, Web.config, which resides in the root directory of the application. For more information, see [httpCookies Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/74790718-bfa3-4935-bc9a-59c88797e08f). Values set programmatically using the Secure property override values set in the Web.config file.       When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption. SSL protects against data being altered (data integrity), protects a user&quot;s identity (confidentiality), and assures that data originates from the expected client (authentication). For more information on the benefits of encryption, see [Cryptographic Services](~/add/includes/ajax-current-ext-md.md). For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](http://go.microsoft.com/fwlink/?LinkId=38553)."
  example:
  - "The following code example takes action if the cookie is set to transmit using SSL.  \n  \n [!code-vb[Classic HttpCookie.Secure Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._5_1.vb)]\n [!code-cs[Classic HttpCookie.Secure Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._5_1.cs)]"
  syntax:
    content: public bool Secure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to transmit the cookie over an SSL connection (HTTPS); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpCookie.Secure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Shareable
  id: Shareable
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Shareable
  nameWithType: HttpCookie.Shareable
  fullName: System.Web.HttpCookie.Shareable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Determines whether the cookie is allowed to participate in output caching."
  remarks: "If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with Shareable is set to `false` (the default value), output caching will be suppressed for the response. This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.  To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC&quot;s [OutputCache] attribute, and set all outbound cookies to have Shareable set to `true`."
  syntax:
    content: public bool Shareable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to specify that output caching will not be suppressed for a give <xref href=&quot;System.Web.HttpResponse&quot;></xref> containing one or more outbound cookies; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.HttpCookie.Shareable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Value
  id: Value
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Value
  nameWithType: HttpCookie.Value
  fullName: System.Web.HttpCookie.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets or sets an individual cookie value."
  remarks: ''
  example:
  - "The following code example sets the value of an existing cookie to \"abc123\".  \n  \n [!code-cs[Classic HttpCookie.Value Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._7_1.cs)]\n [!code-vb[Classic HttpCookie.Value Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._7_1.vb)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "The value of the cookie. The default value is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  overload: System.Web.HttpCookie.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpCookie.Values
  id: Values
  parent: System.Web.HttpCookie
  langs:
  - csharp
  name: Values
  nameWithType: HttpCookie.Values
  fullName: System.Web.HttpCookie.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a collection of key/value pairs that are contained within a single cookie object."
  remarks: ''
  example:
  - "The following code example creates a new cookie and adds several values to it. For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.  \n  \n [!code-vb[Classic HttpCookie.Values Example#1](~/add/codesnippet/visualbasic/p-system.web.httpcookie._6_1.vb)]\n [!code-cs[Classic HttpCookie.Values Example#1](~/add/codesnippet/csharp/p-system.web.httpcookie._6_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Values { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A collection of cookie values."
  overload: System.Web.HttpCookie.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpCookie.#ctor(System.String)
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpCookie(String)
  nameWithType: HttpCookie.HttpCookie(String)
  fullName: System.Web.HttpCookie.HttpCookie(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpCookie.#ctor(System.String,System.String)
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpCookie(String,String)
  nameWithType: HttpCookie.HttpCookie(String,String)
  fullName: System.Web.HttpCookie.HttpCookie(String,String)
- uid: System.Web.HttpCookie.Domain
  parent: System.Web.HttpCookie
  isExternal: false
  name: Domain
  nameWithType: HttpCookie.Domain
  fullName: System.Web.HttpCookie.Domain
- uid: System.Web.HttpCookie.Expires
  parent: System.Web.HttpCookie
  isExternal: false
  name: Expires
  nameWithType: HttpCookie.Expires
  fullName: System.Web.HttpCookie.Expires
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpCookie.HasKeys
  parent: System.Web.HttpCookie
  isExternal: false
  name: HasKeys
  nameWithType: HttpCookie.HasKeys
  fullName: System.Web.HttpCookie.HasKeys
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpCookie.HttpOnly
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpOnly
  nameWithType: HttpCookie.HttpOnly
  fullName: System.Web.HttpCookie.HttpOnly
- uid: System.Web.HttpCookie.Item(System.String)
  parent: System.Web.HttpCookie
  isExternal: false
  name: Item(String)
  nameWithType: HttpCookie.Item(String)
  fullName: System.Web.HttpCookie.Item(String)
- uid: System.Web.HttpCookie.Name
  parent: System.Web.HttpCookie
  isExternal: false
  name: Name
  nameWithType: HttpCookie.Name
  fullName: System.Web.HttpCookie.Name
- uid: System.Web.HttpCookie.Path
  parent: System.Web.HttpCookie
  isExternal: false
  name: Path
  nameWithType: HttpCookie.Path
  fullName: System.Web.HttpCookie.Path
- uid: System.Web.HttpCookie.Secure
  parent: System.Web.HttpCookie
  isExternal: false
  name: Secure
  nameWithType: HttpCookie.Secure
  fullName: System.Web.HttpCookie.Secure
- uid: System.Web.HttpCookie.Shareable
  parent: System.Web.HttpCookie
  isExternal: false
  name: Shareable
  nameWithType: HttpCookie.Shareable
  fullName: System.Web.HttpCookie.Shareable
- uid: System.Web.HttpCookie.Value
  parent: System.Web.HttpCookie
  isExternal: false
  name: Value
  nameWithType: HttpCookie.Value
  fullName: System.Web.HttpCookie.Value
- uid: System.Web.HttpCookie.Values
  parent: System.Web.HttpCookie
  isExternal: false
  name: Values
  nameWithType: HttpCookie.Values
  fullName: System.Web.HttpCookie.Values
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpCookie.#ctor*
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie.HttpCookie
- uid: System.Web.HttpCookie.Domain*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Domain
  nameWithType: HttpCookie.Domain
- uid: System.Web.HttpCookie.Expires*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Expires
  nameWithType: HttpCookie.Expires
- uid: System.Web.HttpCookie.HasKeys*
  parent: System.Web.HttpCookie
  isExternal: false
  name: HasKeys
  nameWithType: HttpCookie.HasKeys
- uid: System.Web.HttpCookie.HttpOnly*
  parent: System.Web.HttpCookie
  isExternal: false
  name: HttpOnly
  nameWithType: HttpCookie.HttpOnly
- uid: System.Web.HttpCookie.Item*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Item
  nameWithType: HttpCookie.Item
- uid: System.Web.HttpCookie.Name*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Name
  nameWithType: HttpCookie.Name
- uid: System.Web.HttpCookie.Path*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Path
  nameWithType: HttpCookie.Path
- uid: System.Web.HttpCookie.Secure*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Secure
  nameWithType: HttpCookie.Secure
- uid: System.Web.HttpCookie.Shareable*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Shareable
  nameWithType: HttpCookie.Shareable
- uid: System.Web.HttpCookie.Value*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Value
  nameWithType: HttpCookie.Value
- uid: System.Web.HttpCookie.Values*
  parent: System.Web.HttpCookie
  isExternal: false
  name: Values
  nameWithType: HttpCookie.Values
