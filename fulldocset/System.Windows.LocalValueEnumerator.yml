### YamlMime:ManagedReference
items:
- uid: System.Windows.LocalValueEnumerator
  id: LocalValueEnumerator
  children:
  - System.Windows.LocalValueEnumerator.Count
  - System.Windows.LocalValueEnumerator.Current
  - System.Windows.LocalValueEnumerator.Equals(System.Object)
  - System.Windows.LocalValueEnumerator.GetHashCode
  - System.Windows.LocalValueEnumerator.MoveNext
  - System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  - System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  - System.Windows.LocalValueEnumerator.Reset
  - System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: LocalValueEnumerator
  nameWithType: LocalValueEnumerator
  fullName: System.Windows.LocalValueEnumerator
  type: Struct
  summary: "Provides enumeration support for the local values of any dependency properties that exist on a <xref href=&quot;System.Windows.DependencyObject&quot;></xref>."
  remarks: "A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally. Examples of other property system determinants that are not local values are values set through styles, or dependency property default values. For details, see [Dependency Property Value Precedence](~/add/includes/ajax-current-ext-md.md).       A LocalValueEnumerator is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface. A public LocalValueEnumerator constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.       Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values. If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations. Also, the enumerator view is a snapshot. A change to the collection is not guaranteed to be thread safe, and no lock is enforced. Other threads still have free access to the local values from a context other than the enumerator.       Use this type if you have operations in your class where it is important to know whether a property&quot;s value came from a local value. For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties."
  syntax:
    content: 'public struct LocalValueEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.ValueType
  implements:
  - System.Collections.IEnumerator
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Count
  id: Count
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Count
  nameWithType: LocalValueEnumerator.Count
  fullName: System.Windows.LocalValueEnumerator.Count
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets the number of items that are represented in the collection."
  remarks: "This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of items in the collection."
  overload: System.Windows.LocalValueEnumerator.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Current
  id: Current
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: LocalValueEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.Current
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets the current element in the collection."
  remarks: "This generally accessible version of the property relies on a snapshot of the collection that is taken at creation."
  syntax:
    content: public System.Windows.LocalValueEntry Current { get; }
    return:
      type: System.Windows.LocalValueEntry
      description: "The current <xref href=&quot;System.Windows.LocalValueEntry&quot;></xref> in the collection."
  overload: System.Windows.LocalValueEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LocalValueEnumerator.Equals(Object)
  fullName: System.Windows.LocalValueEnumerator.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether the provided <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> is equivalent to this <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>."
  remarks: "This implementation supports reference equality only."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> to compare with the current <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> is equal to the current <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.LocalValueEnumerator.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.GetHashCode
  id: GetHashCode
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LocalValueEnumerator.GetHashCode()
  fullName: System.Windows.LocalValueEnumerator.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returns a hash code for the current <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A 32-bit integer hash code."
  overload: System.Windows.LocalValueEnumerator.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.MoveNext
  id: MoveNext
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: LocalValueEnumerator.MoveNext()
  fullName: System.Windows.LocalValueEnumerator.MoveNext()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Advances the enumerator to the next element of the collection."
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the enumerator was successfully advanced to the next element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the enumerator has passed the end of the collection."
  overload: System.Windows.LocalValueEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  id: op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares whether two specified <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> objects are the same."
  remarks: "This implementation supports reference equality only."
  syntax:
    content: public static bool op_Equality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEnumerator
      description: "The first object to compare."
    - id: obj2
      type: System.Windows.LocalValueEnumerator
      description: "The second object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>obj1</code><xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> is equal to the <code>obj2</code><xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.LocalValueEnumerator.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  id: op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares two specified <xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> objects to determine whether they are not the same."
  remarks: "This implementation supports reference equality only."
  syntax:
    content: public static bool op_Inequality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEnumerator
      description: "The first object to compare."
    - id: obj2
      type: System.Windows.LocalValueEnumerator
      description: "The second object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the instances are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.LocalValueEnumerator.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Reset
  id: Reset
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: LocalValueEnumerator.Reset()
  fullName: System.Windows.LocalValueEnumerator.Reset()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Sets the enumerator to its initial position, which is before the first element in the collection."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Windows.LocalValueEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "For a description of this members, see <xref:System.Collections.IEnumerator.Current*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface."
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "The current element in the collection."
  overload: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.LocalValueEnumerator.Count
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Count
  nameWithType: LocalValueEnumerator.Count
  fullName: System.Windows.LocalValueEnumerator.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.LocalValueEnumerator.Current
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Current
  nameWithType: LocalValueEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.Current
- uid: System.Windows.LocalValueEntry
  parent: System.Windows
  isExternal: false
  name: LocalValueEntry
  nameWithType: LocalValueEntry
  fullName: System.Windows.LocalValueEntry
- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Equals(Object)
  nameWithType: LocalValueEnumerator.Equals(Object)
  fullName: System.Windows.LocalValueEnumerator.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.LocalValueEnumerator.GetHashCode
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: GetHashCode()
  nameWithType: LocalValueEnumerator.GetHashCode()
  fullName: System.Windows.LocalValueEnumerator.GetHashCode()
- uid: System.Windows.LocalValueEnumerator.MoveNext
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: LocalValueEnumerator.MoveNext()
  fullName: System.Windows.LocalValueEnumerator.MoveNext()
- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
- uid: System.Windows.LocalValueEnumerator
  parent: System.Windows
  isExternal: false
  name: LocalValueEnumerator
  nameWithType: LocalValueEnumerator
  fullName: System.Windows.LocalValueEnumerator
- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
- uid: System.Windows.LocalValueEnumerator.Reset
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Reset()
  nameWithType: LocalValueEnumerator.Reset()
  fullName: System.Windows.LocalValueEnumerator.Reset()
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current
- uid: System.Windows.LocalValueEnumerator.Count*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Count
  nameWithType: LocalValueEnumerator.Count
- uid: System.Windows.LocalValueEnumerator.Current*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Current
  nameWithType: LocalValueEnumerator.Current
- uid: System.Windows.LocalValueEnumerator.Equals*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Equals
  nameWithType: LocalValueEnumerator.Equals
- uid: System.Windows.LocalValueEnumerator.GetHashCode*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: GetHashCode
  nameWithType: LocalValueEnumerator.GetHashCode
- uid: System.Windows.LocalValueEnumerator.MoveNext*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: LocalValueEnumerator.MoveNext
- uid: System.Windows.LocalValueEnumerator.op_Equality*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Equality
  nameWithType: LocalValueEnumerator.op_Equality
- uid: System.Windows.LocalValueEnumerator.op_Inequality*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Inequality
  nameWithType: LocalValueEnumerator.op_Inequality
- uid: System.Windows.LocalValueEnumerator.Reset*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Reset
  nameWithType: LocalValueEnumerator.Reset
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
