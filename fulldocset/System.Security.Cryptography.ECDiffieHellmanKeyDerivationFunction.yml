### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  id: ECDiffieHellmanKeyDerivationFunction
  children:
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  langs:
  - csharp
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  type: Enum
  summary: "Specifies the key derivation function that the <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;></xref> class will use to convert secret agreements into key material."
  remarks: "The ECDiffieHellmanKeyDerivationFunction enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other partyâ€™s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.       The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class."
  syntax:
    content: public enum ECDiffieHellmanKeyDerivationFunction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  id: Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A hash algorithm is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> property specifies the name of the algorithm to use. If the algorithm name is not specified, <xref href=&quot;System.Security.Cryptography.SHA256&quot;></xref> is used as the default algorithm."
  remarks: "You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.       The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm."
  syntax:
    content: Hash
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  id: Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*> property specifies the key to use. Either this property must be set or the <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*> property must be set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, a <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref> is thrown when you use Hmac. If both properties are set, the secret agreement is used as the HMAC key."
  remarks: "You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.       The amount of key material that is generated is equivalent to the size of the HMAC value."
  syntax:
    content: Hmac
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  id: Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "The Transport Layer Security (TLS) protocol is used to generate key material. The <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.Label*> properties must be set; otherwise, a <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;></xref> is thrown when you use Tls."
  remarks: "This value generates 160 bits of key material."
  syntax:
    content: Tls
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
