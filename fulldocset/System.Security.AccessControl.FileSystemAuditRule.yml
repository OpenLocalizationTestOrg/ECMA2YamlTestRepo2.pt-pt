### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAuditRule
  id: FileSystemAuditRule
  children:
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
  type: Class
  summary: "Represents an abstraction of an access control entry (ACE) that defines an audit rule for a file or directory. This class cannot be inherited."
  remarks: "The FileSystemAuditRule class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing.  This class can also specify how audit rules are inherited from and propagated to objects.       To permit file and directory auditing on Windows NT or later, you must enable Audit Access Security policy on your machine.  By default, this policy is set to No Auditing.       To enable the Audit Access Security policy, perform the following steps:      1.  Open the **Local Security Settings** Microsoft Management Console (MMC) snap-in, located in the Administrative Tools folder.      2.  Expand the Local Policies folder and left-click the Audit Policy folder.      3.  Double-click the **Audit object access** entry on the right pane of the MMC snap-in, or right-click and choose Properties to display the **Audit object access properties** dialog box.      4.  Select the **Success** or **Failure** check boxes to log successes or failures.       Note that an audit rule for a user account requires a corresponding access rule for the same user account.       Use the FileSystemAuditRule class to create a new audit rule.  You can persist this rule using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class."
  example:
  - "The following code example uses the FileSystemAuditRule class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/t-system.security.access_9_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/t-system.security.access_9_1.cs)]"
  syntax:
    content: 'public sealed class FileSystemAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref> class using a reference to a user account, a value that specifies the type of operation associated with the audit rule, and a value that specifies when to perform auditing."
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged."
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "An <xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref> object that encapsulates a reference to a user account."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "One of the <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref> values that specifies the type of operation associated with the audit rule."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref> values that specifies when to perform auditing."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>identity</code> parameter is not an <xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "An incorrect enumeration was passed to the <code>flags</code> parameter.       -or-       The <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref> value was passed to the <code>flags</code> parameter."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref> class using a user account name, a value that specifies the type of operation associated with the audit rule, and a value that specifies when to perform auditing."
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemAuditRule> class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/0cfd6a33-c1ca-4126-9899-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/0cfd6a33-c1ca-4126-9899-_1.cs)]"
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "The name of a user account."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "One of the <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref> values that specifies the type of operation associated with the audit rule."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref> values that specifies when to perform auditing."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "An incorrect enumeration was passed to the <code>flags</code> parameter.       -or-       The <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref> value was passed to the <code>flags</code> parameter."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref> class using the name of a reference to a user account, a value that specifies the type of operation associated with the audit rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies when to perform auditing."
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged."
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "An <xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref> object that encapsulates a reference to a user account."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "One of the <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref> values that specifies the type of operation associated with the audit rule."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref> values that specifies how access masks are propagated to child objects."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref> values that specifies when to perform auditing."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>identity</code> parameter is not an <xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "An incorrect enumeration was passed to the <code>flags</code> parameter.       -or-       The <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref> value was passed to the <code>flags</code> parameter."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref> class using the name of a user account, a value that specifies the type of operation associated with the audit rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies when to perform auditing."
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "The name of a user account."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "One of the <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref> values that specifies the type of operation associated with the audit rule."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref> values that specifies how access masks are propagated to child objects."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "One of the <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;></xref> values that specifies when to perform auditing."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref> flags associated with the current <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref> object."
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "The <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;></xref> flags associated with the current <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;></xref> object."
  overload: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
