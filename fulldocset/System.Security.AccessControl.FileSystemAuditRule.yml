### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAuditRule
  id: FileSystemAuditRule
  children:
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
  type: Class
  summary: "Representa uma abstração de uma entrada de controlo de acesso (ACE) que define uma regra de auditoria para um ficheiro ou diretório. Esta classe não pode ser herdada."
  remarks: "A classe de FileSystemAuditRule representa uma abstração de uma subjacente controlo entrada de acesso (ACE) que especifica uma conta de utilizador, o tipo de acesso para fornecer (leitura, escrita e assim sucessivamente), e se pretende efetuar a auditoria.  Esta classe também pode especificar como as regras de auditoria são herdadas do e propagadas aos objetos.       Para permitir o ficheiro e a auditoria de diretório no Windows NT ou posterior, tem de ativar a política de segurança de acesso de auditoria no seu computador.  Por predefinição, esta política está definida para nenhum auditoria.       Para ativar a política de segurança de acesso de auditoria, execute os seguintes passos: 1.  Abra o **as definições de segurança Local** snap-in Consola de gestão da Microsoft (MMC), localizado na pasta Ferramentas administrativas.      2.  Expanda a pasta de políticas locais e left-click a pasta de política de auditoria.      3.  Faça duplo clique o **auditar o acesso de objeto** entrada no painel da direita do MMC snap-in, ou clique com botão direito e selecione propriedades para apresentar o **propriedades do objeto de acesso de auditoria** caixa de diálogo.      4.  Selecione o **êxito** ou **falha** caixas de verificação para iniciar sessão êxitos ou falhas.       Tenha em atenção que uma regra de auditoria para uma conta de utilizador necessita de uma regra de acesso correspondente para a mesma conta de utilizador.       Utilize a classe de FileSystemAuditRule para criar uma nova regra de auditoria.  Pode manter esta regra utilizando o <xref:System.Security.AccessControl.FileSecurity>ou <xref:System.Security.AccessControl.DirectorySecurity>classe.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the FileSystemAuditRule class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/t-system.security.access_9_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/t-system.security.access_9_1.cs)]"
  syntax:
    content: 'public sealed class FileSystemAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> utilizando uma referência a uma conta de utilizador, um valor que especifica o tipo de operação associada a regra de auditoria e um valor que especifica para efetuar a auditoria de classe."
  remarks: "Utilize este construtor para criar uma regra de auditoria que pode manter a utilizar o <xref:System.Security.AccessControl.FileSecurity>ou <xref:System.Security.AccessControl.DirectorySecurity>classe.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Regras de auditoria determinam quando e como as ações efetuadas nos objetos de sistema, tais como ficheiros e pastas, tem sessão iniciada."
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objecto que encapsula uma referência a uma conta de utilizador."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Um do <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> valores que especifica o tipo de operação associada a regra de auditoria."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores que especifica para efetuar a auditoria."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> identity </code> parâmetro não é um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Foi transmitida uma enumeração incorreta para o <code> flags </code> parâmetro.       - ou - <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> foi passado um valor para o <code> flags </code> parâmetro."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> utilizando um nome de conta de utilizador, um valor que especifica o tipo de operação associada a regra de auditoria e um valor que especifica para efetuar a auditoria de classe."
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemAuditRule> class to add and then remove an audit rule from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/0cfd6a33-c1ca-4126-9899-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/0cfd6a33-c1ca-4126-9899-_1.cs)]"
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "O nome de uma conta de utilizador."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Um do <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> valores que especifica o tipo de operação associada a regra de auditoria."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores que especifica para efetuar a auditoria."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Foi transmitida uma enumeração incorreta para o <code> flags </code> parâmetro.       - ou - <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> foi passado um valor para o <code> flags </code> parâmetro."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> utilizando o nome de uma referência a uma conta de utilizador, um valor que especifica o tipo de operação associada a regra de auditoria, um valor que determina a forma como são herdados direitos, um valor que determina a forma como os direitos são propagados e um valor que especifica para efetuar a auditoria de classe."
  remarks: "Utilize este construtor para criar uma regra de auditoria que pode manter a utilizar o <xref:System.Security.AccessControl.FileSecurity>ou <xref:System.Security.AccessControl.DirectorySecurity>classe.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Regras de auditoria determinam quando e como as ações efetuadas nos objetos de sistema, tais como ficheiros e pastas, tem sessão iniciada."
  syntax:
    content: public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objecto que encapsula uma referência a uma conta de utilizador."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Um do <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> valores que especifica o tipo de operação associada a regra de auditoria."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valores que especifica a forma como as máscaras de acesso sejam propagadas aos objetos subordinados."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valores que especifica a forma como as entradas de controlo de acesso (ACEs) sejam propagadas aos objetos subordinados."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores que especifica para efetuar a auditoria."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> identity </code> parâmetro não é um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Foi transmitida uma enumeração incorreta para o <code> flags </code> parâmetro.       - ou - <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> foi passado um valor para o <code> flags </code> parâmetro."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> utilizando o nome de uma conta de utilizador, um valor que especifica o tipo de operação associada a regra de auditoria, um valor que determina a forma como são herdados direitos, um valor que determina a forma como os direitos são propagados e um valor que especifica para efetuar a auditoria de classe."
  remarks: "Use this constructor to create an audit rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Audit rules determine when and how actions performed on system objects, such as files and folders, are logged.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "O nome de uma conta de utilizador."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "Um do <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> valores que especifica o tipo de operação associada a regra de auditoria."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valores que especifica a forma como as máscaras de acesso sejam propagadas aos objetos subordinados."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valores que especifica a forma como as entradas de controlo de acesso (ACEs) sejam propagadas aos objetos subordinados."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores que especifica para efetuar a auditoria."
  overload: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém o <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> sinalizadores associados atual <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto."
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "O <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> sinalizadores associados atual <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto."
  overload: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemAuditRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAuditRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemAuditRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAuditRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAuditRule.FileSystemRights
