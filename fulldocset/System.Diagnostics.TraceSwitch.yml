### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSwitch
  id: TraceSwitch
  children:
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.TraceSwitch.Level
  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  - System.Diagnostics.TraceSwitch.OnValueChanged
  - System.Diagnostics.TraceSwitch.TraceError
  - System.Diagnostics.TraceSwitch.TraceInfo
  - System.Diagnostics.TraceSwitch.TraceVerbose
  - System.Diagnostics.TraceSwitch.TraceWarning
  langs:
  - csharp
  name: TraceSwitch
  nameWithType: TraceSwitch
  fullName: System.Diagnostics.TraceSwitch
  type: Class
  summary: "Fornece um comutador de vários níveis de rastreio de controlo e de saída de depuração sem recompilar o seu código."
  remarks: "Pode utilizar um comutador de rastreio para filtrar as mensagens com base na respetiva importância. A classe de TraceSwitch fornece o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades para testar o nível do comutador.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> A <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade obtém ou define o comutador <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>       Pode definir o nível de um TraceSwitch através do ficheiro de configuração da aplicação e, em seguida, utilizar o nível de TraceSwitch configurado na sua aplicação. Em alternativa, pode criar um TraceSwitch no seu código e definir o nível de diretamente para instrumentar uma secção específica de código.       Para configurar um TraceSwitch, edite o para a sua aplicação. Neste ficheiro, pode adicionar ou remover um comutador, defina o valor de um comutador ou limpar todos os comutadores anteriormente definidos pela aplicação. O ficheiro de configuração deve ser formatado semelhante ao seguinte exemplo: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` esta secção de configuração define um TraceSwitch, com o <xref:System.Diagnostics.Switch.DisplayName%2A>definido como `mySwitch`e <xref:System.Diagnostics.TraceSwitch.Level%2A>definido como 1, que corresponde ao valor de enumeração <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.Switch.DisplayName%2A>      > [!NOTE] > No .NET Framework versão 2.0, pode utilizar o texto para especificar o valor para um comutador. Por exemplo, `true` para um <xref:System.Diagnostics.BooleanSwitch>ou o texto que representa um valor de enumeração, tal como `Error` para um TraceSwitch.</xref:System.Diagnostics.BooleanSwitch> A linha `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` é equivalente ao `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       Na sua aplicação, pode utilizar o nível do comutador configurada criando um TraceSwitch, com o mesmo nome, conforme mostrado no exemplo seguinte: [!code-vb [clássico TraceSwitch.TraceError exemplo&3;](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)][!code-cpp[clássico TraceSwitch.TraceError exemplo&3;](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)][!code-cs[clássico TraceSwitch.TraceError exemplo&3;](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs) ] por predefinição, o comutador <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade está definida com o valor especificado no ficheiro de configuração.</xref:System.Diagnostics.TraceSwitch.Level%2A>     Se o <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>Construtor não é possível localizar as definições de comutador inicial no ficheiro de configuração, <xref:System.Diagnostics.TraceSwitch.Level%2A>de novas predefinições de comutador para <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       Tem de ativar o rastreio ou depuração para utilizar um comutador. A seguinte sintaxe é específico do compilador. Se utilizar em compiladores que não sejam c# ou Visual Basic, consulte a documentação para o compilador.      -Para ativar a depuração em c#, adicione o `/d:DEBUG` sinalizador para a linha de comandos do compilador ao compilar o código ou adicionar `#define DEBUG` na parte superior do seu ficheiro. No Visual Basic, adicione o `/d:DEBUG=True` sinalizador para a linha de comandos do compilador.      -Para ativar o rastreio em c#, adicione o `/d:TRACE` sinalizador para a linha de comandos do compilador ao compilar o código ou adicionar `#define TRACE` na parte superior do seu ficheiro. No Visual Basic, adicione o `/d:TRACE=True` sinalizador para a linha de comandos do compilador.      > [!NOTE] > Estes de depuração e rastreio compilador comutadores não são necessárias quando utilizar a classe de TraceSwitch de forma isolada. Só são necessários em conjunto com <xref:System.Diagnostics.Trace>ou <xref:System.Diagnostics.Debug>métodos compilados condicionalmente.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       Para obter mais informações sobre instrumentar a sua aplicação, consulte <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> Para obter mais informações sobre como configurar e utilizar os comutadores de rastreio, consulte [comutadores de rastreio](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Para melhorar o desempenho, pode tornar membros TraceSwitch `static` na sua classe."
  example:
  - "The following code example creates a new TraceSwitch and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_2.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))]

      public class TraceSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> classe, utilizando o nome a apresentar especificado e a descrição."
  remarks: "Para definir o nível da sua <xref:System.Diagnostics.TraceSwitch>, edite o ficheiro de configuração que corresponda ao nome da sua aplicação.</xref:System.Diagnostics.TraceSwitch> Neste ficheiro, pode adicionar um comutador e defina o respetivo valor, remova um comutador ou limpar todos os comutadores anteriormente definidos pela aplicação. O ficheiro de configuração deve ser formatado semelhante ao seguinte exemplo: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] > no .NET Framework versão 2.0, pode utilizar o texto para especificar o valor para um comutador. Por exemplo, `true` para um <xref:System.Diagnostics.BooleanSwitch>ou o texto que representa um valor de enumeração, tal como `Error` para <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> A linha `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` é equivalente ao `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       Na sua aplicação, pode utilizar o nível do comutador configurada através da criação de um <xref:System.Diagnostics.TraceSwitch>com o mesmo nome, como mostrado no exemplo seguinte: [!code-vb [clássico TraceSwitch.TraceError exemplo&3;](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)][!code-cpp[clássico TraceSwitch.TraceError exemplo&3;](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)][!code-cs[clássico TraceSwitch.TraceError exemplo&3;](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs) ] quando o <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>Construtor não é possível localizar as definições de comutador inicial no ficheiro de configuração, a <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade do novo comutador está definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>     </xref:System.Diagnostics.TraceSwitch>       O <xref:System.Diagnostics.TraceSwitch>classe fornece o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades para testar o <xref:System.Diagnostics.TraceSwitch.Level%2A>do comutador.</xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> </xref:System.Diagnostics.TraceSwitch> A <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade obtém ou define o comutador <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>      > [!NOTE] > Para melhorar o desempenho, pode efetuar <xref:System.Diagnostics.TraceSwitch>Membros `static` na sua classe</xref:System.Diagnostics.TraceSwitch>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_2.vb)]"
  syntax:
    content: public TraceSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome a apresentar numa interface de utilizador."
    - id: description
      type: System.String
      description: "A descrição do comutador."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> classe, utilizando o nome a apresentar especificado, a descrição e o valor predefinido para o comutador."
  remarks: "O `displayName` parâmetro é utilizado para definir o valor da <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade, o `description` parâmetro está a utilizar para definir o valor da <xref:System.Diagnostics.Switch.Description%2A>propriedade e o `defaultSwitchValue` parâmetro é guardado como um campo e utilizado para inicializar o <xref:System.Diagnostics.Switch.Value%2A>propriedade na primeira referência.</xref:System.Diagnostics.Switch.Value%2A> </xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> Consulte o <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>construtor para obter mais informações e um exemplo de código.</xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public TraceSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome a apresentar numa interface de utilizador."
    - id: description
      type: System.String
      description: "A descrição do comutador."
    - id: defaultSwitchValue
      type: System.String
      description: "O valor predefinido do comutador."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.Level
  id: Level
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o nível de rastreio que determina as mensagens permite que o comutador."
  remarks: "Para definir o nível da sua <xref:System.Diagnostics.TraceSwitch>, edite o ficheiro de configuração que corresponda ao nome da sua aplicação.</xref:System.Diagnostics.TraceSwitch> Neste ficheiro, pode adicionar um comutador e defina o respetivo valor, remova um comutador ou limpar todos os comutadores anteriormente definidos pela aplicação. O ficheiro de configuração deve ser formatado semelhante ao seguinte exemplo: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;0&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;3&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] > no .NET Framework versão 2.0, pode utilizar o texto para especificar o valor para um comutador. Por exemplo, `true` para um <xref:System.Diagnostics.BooleanSwitch>ou o texto que representa um valor de enumeração, tal como `Error` para <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> A linha `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` é equivalente ao `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       Quando o <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>Construtor não é possível localizar as definições de comutador inicial no ficheiro de configuração, o nível do novo comutador for definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       Esta propriedade de atualizações de definição de <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades para refletir o novo valor.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the Level property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the Level is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceSwitch.Level Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_1_1.cpp)]\n [!code-cs[Classic TraceSwitch.Level Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic TraceSwitch.Level Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_1_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceLevel Level { get; set; }
    return:
      type: System.Diagnostics.TraceLevel
      description: "Um do <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> valores que especifica o nível de mensagens que são permitidos pelo comutador."
  overload: System.Diagnostics.TraceSwitch.Level*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nível está definido como um valor que não é um do <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Atualizações e corrige o nível para este comutador."
  remarks: "O método OnSwitchSettingChanged é utilizado pelo .NET framework para validar e corrija o valor de um comutador inicializado através de um ficheiro de configuração. Uma mensagem é escrita para todos os serviços de escuta de rastreio, se o valor do parâmetro especificado no ficheiro de configuração não está definido pelo <xref:System.Diagnostics.TraceLevel>enumeração e o comutador está definido como um valor definido.</xref:System.Diagnostics.TraceLevel>       Se tentar no seu código para definir o <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade para um valor que não está definido pelo <xref:System.Diagnostics.TraceLevel>enumeração, um <xref:System.ArgumentException>exceção é emitida.</xref:System.ArgumentException> </xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  syntax:
    content: protected override void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Define o <> </> *> propriedade para o equivalente de número inteiro do <> </> *> propriedade."
  remarks: "Este método é denominado internamente quando o <xref:System.Diagnostics.Switch.Value%2A>propriedade as alterações de comutador.</xref:System.Diagnostics.Switch.Value%2A> O método garante que as propriedades relacionadas com o valor do comutador refletem o novo valor."
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceError
  id: TraceError
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se o comutador permite mensagens de processamento de erros."
  remarks: "Pode utilizar o TraceError <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes para emitir todas as mensagens com uma importância especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade está definida como a importância mais alta, <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel>, apenas as mensagens de processamento de erros que são emitidas.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_5_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_5_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_5_1.vb)]"
  syntax:
    content: public bool TraceError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  id: TraceInfo
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se o comutador permite mensagens informativas."
  remarks: "Pode utilizar o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes para emitir todas as mensagens com uma importância especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade está definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, mensagens informativas, avisos e mensagens de processamento de erros que são emitidas.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_8_1.vb)]\n [!code-cs[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_8_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_8_1.cpp)]"
  syntax:
    content: public bool TraceInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Diagnostics.TraceSwitch.Level*>propriedade está definida como <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> ou <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  id: TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se o comutador permite todas as mensagens."
  remarks: "Pode utilizar o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>e as propriedades de TraceVerbose em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes para emitir todas as mensagens com uma importância especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade está definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, todos os depuração e rastreio mensagens são transmitidas.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes both error messages when the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_4_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_4_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_4_1.vb)]"
  syntax:
    content: public bool TraceVerbose { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Diagnostics.TraceSwitch.Level*>propriedade está definida como <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceVerbose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  id: TraceWarning
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se o comutador permite mensagens de aviso."
  remarks: "Pode utilizar o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes para emitir todas as mensagens com uma importância especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade está definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, mensagens de processamento de erros e avisos são emitidas.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message when the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_3_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_3_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public bool TraceWarning { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceWarning*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
- uid: System.Diagnostics.TraceSwitch.Level
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
- uid: System.Diagnostics.TraceLevel
  parent: System.Diagnostics
  isExternal: false
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
- uid: System.Diagnostics.TraceSwitch.TraceError
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
- uid: System.Diagnostics.TraceSwitch.#ctor*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch
  nameWithType: TraceSwitch.TraceSwitch
- uid: System.Diagnostics.TraceSwitch.Level*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: TraceSwitch.OnSwitchSettingChanged
- uid: System.Diagnostics.TraceSwitch.OnValueChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: TraceSwitch.OnValueChanged
- uid: System.Diagnostics.TraceSwitch.TraceError*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
- uid: System.Diagnostics.TraceSwitch.TraceInfo*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
