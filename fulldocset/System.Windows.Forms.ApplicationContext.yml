### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ApplicationContext
  id: ApplicationContext
  children:
  - System.Windows.Forms.ApplicationContext.#ctor
  - System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  - System.Windows.Forms.ApplicationContext.Dispose
  - System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  - System.Windows.Forms.ApplicationContext.ExitThread
  - System.Windows.Forms.ApplicationContext.ExitThreadCore
  - System.Windows.Forms.ApplicationContext.Finalize
  - System.Windows.Forms.ApplicationContext.MainForm
  - System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  - System.Windows.Forms.ApplicationContext.Tag
  - System.Windows.Forms.ApplicationContext.ThreadExit
  langs:
  - csharp
  name: ApplicationContext
  nameWithType: ApplicationContext
  fullName: System.Windows.Forms.ApplicationContext
  type: Class
  summary: "Specifies the contextual information about an application thread."
  remarks: "You can use the ApplicationContext class to redefine the circumstances that cause a message loop to exit. By default, the ApplicationContext listens to the <xref:System.Windows.Forms.Form.Closed> event on the application&quot;s main <xref:System.Windows.Forms.Form>, then exits the thread&quot;s message loop."
  example:
  - "The following code example displays two forms and exits the application when both forms are closed. When the application starts and exits, the position of each form is remembered. This example demonstrates how to use an ApplicationContext, along with the `Application.Run(context)` method, to display multiple forms when the application starts.  \n  \n The class `MyApplicationContext` inherits from ApplicationContext and keeps track when each form is closed, and exits the current thread when they both are. The class stores the positions of each form for the user. The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.  \n  \n The `Main` method calls `Application.Run(context)` to start the application, given the ApplicationContext.  \n  \n [!code-vb[Application#1](~/add/codesnippet/visualbasic/t-system.windows.forms.a_3_1.vb)]\n [!code-cpp[Application#1](~/add/codesnippet/cpp/t-system.windows.forms.a_3_1.cpp)]\n [!code-cs[Application#1](~/add/codesnippet/csharp/t-system.windows.forms.a_3_1.cs)]"
  syntax:
    content: 'public class ApplicationContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ApplicationContext()
  nameWithType: ApplicationContext.ApplicationContext()
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref> class with no context."
  syntax:
    content: public ApplicationContext ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  id: '#ctor(System.Windows.Forms.Form)'
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ApplicationContext(Form)
  nameWithType: ApplicationContext.ApplicationContext(Form)
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext(Form)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref> class with the specified <xref href=&quot;System.Windows.Forms.Form&quot;></xref>."
  remarks: "If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed."
  syntax:
    content: public ApplicationContext (System.Windows.Forms.Form mainForm);
    parameters:
    - id: mainForm
      type: System.Windows.Forms.Form
      description: "The main <xref href=&quot;System.Windows.Forms.Form&quot;></xref> of the application to use for context."
  overload: System.Windows.Forms.ApplicationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Dispose
  id: Dispose
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: ApplicationContext.Dispose()
  fullName: System.Windows.Forms.ApplicationContext.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Releases all resources used by the <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref>."
  remarks: "Call Dispose when you are finished using the <xref:System.Windows.Forms.ApplicationContext>. The Dispose method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object&quot;s `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ApplicationContext.Dispose(Boolean)
  fullName: System.Windows.Forms.ApplicationContext.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;></xref> and optionally releases the managed resources."
  remarks: "This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected Dispose method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Windows.Forms.ApplicationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ExitThread
  id: ExitThread
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ExitThread()
  nameWithType: ApplicationContext.ExitThread()
  fullName: System.Windows.Forms.ApplicationContext.ExitThread()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Terminates the message loop of the thread."
  remarks: "This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.      > [!NOTE] >  ExitThread and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate. These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens. The <xref:System.Windows.Forms.Application> object then terminates the thread."
  example:
  - "The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview. This example keeps track of open forms and exits the current thread when all forms are closed. The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event. When the number of open forms is equal to 0, then current thread is exited by calling the ExitThread method. The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.  \n  \n Some code is not shown for the purpose of brevity. See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.  \n  \n [!code-vb[Application#3](~/add/codesnippet/visualbasic/m-system.windows.forms.a_8_1.vb)]\n [!code-cpp[Application#3](~/add/codesnippet/cpp/m-system.windows.forms.a_8_1.cpp)]\n [!code-cs[Application#3](~/add/codesnippet/csharp/m-system.windows.forms.a_8_1.cs)]"
  syntax:
    content: public void ExitThread ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.ExitThread*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore
  id: ExitThreadCore
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ExitThreadCore()
  nameWithType: ApplicationContext.ExitThreadCore()
  fullName: System.Windows.Forms.ApplicationContext.ExitThreadCore()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Terminates the message loop of the thread."
  remarks: "This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.      > [!NOTE] >  <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and ExitThreadCore do not actually cause the thread to terminate. These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens. The <xref:System.Windows.Forms.Application> object then terminates the thread."
  syntax:
    content: protected virtual void ExitThreadCore ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.ExitThreadCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Finalize
  id: Finalize
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: ApplicationContext.Finalize()
  fullName: System.Windows.Forms.ApplicationContext.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection."
  remarks: "This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName> and cleans up resources by calling `Dispose(false)`. Override `Dispose(Boolean)` to customize the cleanup.       Application code should not call this method; an object&quot;s `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~ApplicationContext ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.MainForm
  id: MainForm
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: MainForm
  nameWithType: ApplicationContext.MainForm
  fullName: System.Windows.Forms.ApplicationContext.MainForm
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the <xref href=&quot;System.Windows.Forms.Form&quot;></xref> to use as context."
  remarks: "This property determines the main <xref:System.Windows.Forms.Form> for this context. This property can change at any time. If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes."
  syntax:
    content: public System.Windows.Forms.Form MainForm { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "The <xref href=&quot;System.Windows.Forms.Form&quot;></xref> to use as context."
  overload: System.Windows.Forms.ApplicationContext.MainForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  id: OnMainFormClosed(System.Object,System.EventArgs)
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: OnMainFormClosed(Object,EventArgs)
  nameWithType: ApplicationContext.OnMainFormClosed(Object,EventArgs)
  fullName: System.Windows.Forms.ApplicationContext.OnMainFormClosed(Object,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore*>, which raises the <xref href=&quot;System.Windows.Forms.ApplicationContext.ThreadExit&quot;></xref> event."
  remarks: "The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>."
  syntax:
    content: protected virtual void OnMainFormClosed (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "The object that raised the event."
    - id: e
      type: System.EventArgs
      description: "The <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ApplicationContext.OnMainFormClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Tag
  id: Tag
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Tag
  nameWithType: ApplicationContext.Tag
  fullName: System.Windows.Forms.ApplicationContext.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets an object that contains data about the control."
  remarks: "Any type derived from the <xref:System.Object> class can be assigned to this property. If the Tag property is set through the Windows Forms designer, only text can be assigned.       A common use for the Tag property is to store data that is closely associated with the control. For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer&quot;s order history in that control&quot;s Tag property so the data can be accessed quickly."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains data about the control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ApplicationContext.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ThreadExit
  id: ThreadExit
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ThreadExit
  nameWithType: ApplicationContext.ThreadExit
  fullName: System.Windows.Forms.ApplicationContext.ThreadExit
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the message loop of the thread should be terminated, by calling <xref:System.Windows.Forms.ApplicationContext.ExitThread*>."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ThreadExit event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`. Then ensure that the event handler is associated with the ThreadExit event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#75](~/add/codesnippet/csharp/e-system.windows.forms.a_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#75](~/add/codesnippet/visualbasic/e-system.windows.forms.a_5_1.vb)]"
  syntax:
    content: public event EventHandler ThreadExit;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.ApplicationContext.#ctor
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext()
  nameWithType: ApplicationContext.ApplicationContext()
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext()
- uid: System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext(Form)
  nameWithType: ApplicationContext.ApplicationContext(Form)
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext(Form)
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.ApplicationContext.Dispose
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose()
  nameWithType: ApplicationContext.Dispose()
  fullName: System.Windows.Forms.ApplicationContext.Dispose()
- uid: System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ApplicationContext.Dispose(Boolean)
  fullName: System.Windows.Forms.ApplicationContext.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ApplicationContext.ExitThread
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThread()
  nameWithType: ApplicationContext.ExitThread()
  fullName: System.Windows.Forms.ApplicationContext.ExitThread()
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThreadCore()
  nameWithType: ApplicationContext.ExitThreadCore()
  fullName: System.Windows.Forms.ApplicationContext.ExitThreadCore()
- uid: System.Windows.Forms.ApplicationContext.Finalize
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Finalize()
  nameWithType: ApplicationContext.Finalize()
  fullName: System.Windows.Forms.ApplicationContext.Finalize()
- uid: System.Windows.Forms.ApplicationContext.MainForm
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: MainForm
  nameWithType: ApplicationContext.MainForm
  fullName: System.Windows.Forms.ApplicationContext.MainForm
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: OnMainFormClosed(Object,EventArgs)
  nameWithType: ApplicationContext.OnMainFormClosed(Object,EventArgs)
  fullName: System.Windows.Forms.ApplicationContext.OnMainFormClosed(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ApplicationContext.Tag
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Tag
  nameWithType: ApplicationContext.Tag
  fullName: System.Windows.Forms.ApplicationContext.Tag
- uid: System.Windows.Forms.ApplicationContext.ThreadExit
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ThreadExit
  nameWithType: ApplicationContext.ThreadExit
  fullName: System.Windows.Forms.ApplicationContext.ThreadExit
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ApplicationContext.#ctor*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext
  nameWithType: ApplicationContext.ApplicationContext
- uid: System.Windows.Forms.ApplicationContext.Dispose*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose
  nameWithType: ApplicationContext.Dispose
- uid: System.Windows.Forms.ApplicationContext.ExitThread*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThread
  nameWithType: ApplicationContext.ExitThread
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThreadCore
  nameWithType: ApplicationContext.ExitThreadCore
- uid: System.Windows.Forms.ApplicationContext.Finalize*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Finalize
  nameWithType: ApplicationContext.Finalize
- uid: System.Windows.Forms.ApplicationContext.MainForm*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: MainForm
  nameWithType: ApplicationContext.MainForm
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: OnMainFormClosed
  nameWithType: ApplicationContext.OnMainFormClosed
- uid: System.Windows.Forms.ApplicationContext.Tag*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Tag
  nameWithType: ApplicationContext.Tag
