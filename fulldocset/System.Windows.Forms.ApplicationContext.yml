### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ApplicationContext
  id: ApplicationContext
  children:
  - System.Windows.Forms.ApplicationContext.#ctor
  - System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  - System.Windows.Forms.ApplicationContext.Dispose
  - System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  - System.Windows.Forms.ApplicationContext.ExitThread
  - System.Windows.Forms.ApplicationContext.ExitThreadCore
  - System.Windows.Forms.ApplicationContext.Finalize
  - System.Windows.Forms.ApplicationContext.MainForm
  - System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  - System.Windows.Forms.ApplicationContext.Tag
  - System.Windows.Forms.ApplicationContext.ThreadExit
  langs:
  - csharp
  name: ApplicationContext
  nameWithType: ApplicationContext
  fullName: System.Windows.Forms.ApplicationContext
  type: Class
  summary: "Especifica a nível contextual das informações sobre um thread de aplicação."
  remarks: "Pode utilizar a classe de ApplicationContext a redefinir as circunstâncias causam um ciclo de mensagem sair. Por predefinição, o ApplicationContext escuta para o <xref:System.Windows.Forms.Form.Closed>eventos da aplicação do principal <xref:System.Windows.Forms.Form>, em seguida, sai ciclo de mensagens do thread.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Closed>"
  example:
  - "The following code example displays two forms and exits the application when both forms are closed. When the application starts and exits, the position of each form is remembered. This example demonstrates how to use an ApplicationContext, along with the `Application.Run(context)` method, to display multiple forms when the application starts.  \n  \n The class `MyApplicationContext` inherits from ApplicationContext and keeps track when each form is closed, and exits the current thread when they both are. The class stores the positions of each form for the user. The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.  \n  \n The `Main` method calls `Application.Run(context)` to start the application, given the ApplicationContext.  \n  \n [!code-vb[Application#1](~/add/codesnippet/visualbasic/t-system.windows.forms.a_3_1.vb)]\n [!code-cpp[Application#1](~/add/codesnippet/cpp/t-system.windows.forms.a_3_1.cpp)]\n [!code-cs[Application#1](~/add/codesnippet/csharp/t-system.windows.forms.a_3_1.cs)]"
  syntax:
    content: 'public class ApplicationContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ApplicationContext()
  nameWithType: ApplicationContext.ApplicationContext()
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> classe com nenhum contexto."
  syntax:
    content: public ApplicationContext ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  id: '#ctor(System.Windows.Forms.Form)'
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ApplicationContext(Form)
  nameWithType: ApplicationContext.ApplicationContext(Form)
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext(Form)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> classe com especificado <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>."
  remarks: "Se <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>é substituído não, o ciclo de mensagens do thread termina quando <xref:System.Windows.Forms.ApplicationContext.MainForm%2A>está fechado.</xref:System.Windows.Forms.ApplicationContext.MainForm%2A> </xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>"
  syntax:
    content: public ApplicationContext (System.Windows.Forms.Form mainForm);
    parameters:
    - id: mainForm
      type: System.Windows.Forms.Form
      description: "O principal <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> da aplicação a utilizar para o contexto."
  overload: System.Windows.Forms.ApplicationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Dispose
  id: Dispose
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: ApplicationContext.Dispose()
  fullName: System.Windows.Forms.ApplicationContext.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref>."
  remarks: "É possível chamar Dispose quando tiver terminado de utilizando <xref:System.Windows.Forms.ApplicationContext>.</xref:System.Windows.Forms.ApplicationContext> O método de Dispose deixa o <xref:System.Windows.Forms.ApplicationContext>num Estado não utilizável.</xref:System.Windows.Forms.ApplicationContext> Depois de chamar Dispose, tem de libertar todas as referências para o <xref:System.Windows.Forms.ApplicationContext>para que o recoletor de lixo pode reclame a memória que a <xref:System.Windows.Forms.ApplicationContext>foi occupying.</xref:System.Windows.Forms.ApplicationContext> </xref:System.Windows.Forms.ApplicationContext> Para obter mais informações, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md) e [implementar um método eliminar](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada eliminar antes de libertar a última referência <xref:System.Windows.Forms.ApplicationContext>.</xref:System.Windows.Forms.ApplicationContext> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.Windows.Forms.ApplicationContext>do objeto `Finalize` método.</xref:System.Windows.Forms.ApplicationContext>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ApplicationContext.Dispose(Boolean)
  fullName: System.Windows.Forms.ApplicationContext.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.Windows.Forms.ApplicationContext&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: "Este método é denominado pelo público `Dispose()` método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`Invoca o método de Dispose protegido com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.Windows.Forms.ApplicationContext>referências.</xref:System.Windows.Forms.ApplicationContext> Este método invoca o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Windows.Forms.ApplicationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ExitThread
  id: ExitThread
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ExitThread()
  nameWithType: ApplicationContext.ExitThread()
  fullName: System.Windows.Forms.ApplicationContext.ExitThread()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Termina o ciclo de mensagens do thread."
  remarks: "Este método chama <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>      > [!NOTE] > ExitThread e <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>fazer chegam causa terminar o thread.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> Estes métodos elevar o <xref:System.Windows.Forms.Application.ThreadExit>eventos para o qual o <xref:System.Windows.Forms.Application>escuta de objeto.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.ThreadExit> O <xref:System.Windows.Forms.Application>objeto, em seguida, termina o thread.</xref:System.Windows.Forms.Application>"
  example:
  - "The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview. This example keeps track of open forms and exits the current thread when all forms are closed. The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event. When the number of open forms is equal to 0, then current thread is exited by calling the ExitThread method. The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.  \n  \n Some code is not shown for the purpose of brevity. See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.  \n  \n [!code-vb[Application#3](~/add/codesnippet/visualbasic/m-system.windows.forms.a_8_1.vb)]\n [!code-cpp[Application#3](~/add/codesnippet/cpp/m-system.windows.forms.a_8_1.cpp)]\n [!code-cs[Application#3](~/add/codesnippet/csharp/m-system.windows.forms.a_8_1.cs)]"
  syntax:
    content: public void ExitThread ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.ExitThread*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore
  id: ExitThreadCore
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ExitThreadCore()
  nameWithType: ApplicationContext.ExitThreadCore()
  fullName: System.Windows.Forms.ApplicationContext.ExitThreadCore()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Termina o ciclo de mensagens do thread."
  remarks: "Este método é denominado de <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>      > [!NOTE] > <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>e ExitThreadCore não causam efetivamente o thread terminar.</xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> Estes métodos elevar o <xref:System.Windows.Forms.Application.ThreadExit>eventos para o qual o <xref:System.Windows.Forms.Application>escuta de objeto.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.ThreadExit> O <xref:System.Windows.Forms.Application>objeto, em seguida, termina o thread.</xref:System.Windows.Forms.Application>"
  syntax:
    content: protected virtual void ExitThreadCore ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.ExitThreadCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Finalize
  id: Finalize
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: ApplicationContext.Finalize()
  fullName: System.Windows.Forms.ApplicationContext.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tentar libertar recursos e efetuar outras operações de limpeza antes do contexto de aplicação é recuperado através da recolha de lixo."
  remarks: "Este método substitui <xref:System.Object.Finalize%2A?displayProperty=fullName>e limpa os recursos ao chamar `Dispose(false)`.</xref:System.Object.Finalize%2A?displayProperty=fullName> Substituir `Dispose(Boolean)` para personalizar a limpeza.       Código da aplicação não deve chamar este método; um objeto `Finalize` método é invocado automaticamente durante a recolha de lixo, a menos que Finalização pelo garbage collector foi desativada por uma chamada para o <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>método.</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>       Para obter mais informações, consulte [finalizar métodos e os processos de destruição](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md), e [a substituir o método Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~ApplicationContext ();
    parameters: []
  overload: System.Windows.Forms.ApplicationContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.MainForm
  id: MainForm
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: MainForm
  nameWithType: ApplicationContext.MainForm
  fullName: System.Windows.Forms.ApplicationContext.MainForm
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> para utilizar como contexto."
  remarks: "Esta propriedade determina principal <xref:System.Windows.Forms.Form>neste contexto.</xref:System.Windows.Forms.Form> Pode alterar esta propriedade em qualquer altura. Se <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>é substituído não, o ciclo de mensagens do thread termina quando o `mainForm` parâmetro fecha.</xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>"
  syntax:
    content: public System.Windows.Forms.Form MainForm { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "O <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> para utilizar como contexto."
  overload: System.Windows.Forms.ApplicationContext.MainForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  id: OnMainFormClosed(System.Object,System.EventArgs)
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: OnMainFormClosed(Object,EventArgs)
  nameWithType: ApplicationContext.OnMainFormClosed(Object,EventArgs)
  fullName: System.Windows.Forms.ApplicationContext.OnMainFormClosed(Object,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Chamadas <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore*>, que gera o <xref href=&quot;System.Windows.Forms.ApplicationContext.ThreadExit&quot;> </xref> eventos.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore*>"
  remarks: "A implementação predefinida deste chamadas de método <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>"
  syntax:
    content: protected virtual void OnMainFormClosed (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Objeto que gerou o evento."
    - id: e
      type: System.EventArgs
      description: "O <xref:System.EventArgs>que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ApplicationContext.OnMainFormClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.Tag
  id: Tag
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: Tag
  nameWithType: ApplicationContext.Tag
  fullName: System.Windows.Forms.ApplicationContext.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um objeto que contém dados sobre o controlo."
  remarks: "Qualquer tipo derivado de <xref:System.Object>classe pode ser atribuída a esta propriedade.</xref:System.Object> Se a propriedade da etiqueta é definida através do estruturador de Windows Forms, texto só pode ser atribuído.       É uma utilização comum para a propriedade de Tag armazenar dados que estão estreitamente associados com o controlo. Por exemplo, se tiver um controlo que apresenta informações sobre um cliente, pode armazenar um <xref:System.Data.DataSet>que contém o histórico de encomendas do cliente na propriedade de Tag do controlo que para os dados possam ser acedidos rapidamente.</xref:System.Data.DataSet>"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém dados sobre o controlo.</xref:System.Object> A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.ApplicationContext.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ApplicationContext.ThreadExit
  id: ThreadExit
  parent: System.Windows.Forms.ApplicationContext
  langs:
  - csharp
  name: ThreadExit
  nameWithType: ApplicationContext.ThreadExit
  fullName: System.Windows.Forms.ApplicationContext.ThreadExit
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o ciclo de mensagens do thread deve ser terminado, chamando <xref:System.Windows.Forms.ApplicationContext.ExitThread*>.</xref:System.Windows.Forms.ApplicationContext.ExitThread*>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ThreadExit event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`. Then ensure that the event handler is associated with the ThreadExit event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#75](~/add/codesnippet/csharp/e-system.windows.forms.a_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#75](~/add/codesnippet/visualbasic/e-system.windows.forms.a_5_1.vb)]"
  syntax:
    content: public event EventHandler ThreadExit;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.ApplicationContext.#ctor
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext()
  nameWithType: ApplicationContext.ApplicationContext()
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext()
- uid: System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext(Form)
  nameWithType: ApplicationContext.ApplicationContext(Form)
  fullName: System.Windows.Forms.ApplicationContext.ApplicationContext(Form)
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.ApplicationContext.Dispose
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose()
  nameWithType: ApplicationContext.Dispose()
  fullName: System.Windows.Forms.ApplicationContext.Dispose()
- uid: System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ApplicationContext.Dispose(Boolean)
  fullName: System.Windows.Forms.ApplicationContext.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ApplicationContext.ExitThread
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThread()
  nameWithType: ApplicationContext.ExitThread()
  fullName: System.Windows.Forms.ApplicationContext.ExitThread()
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThreadCore()
  nameWithType: ApplicationContext.ExitThreadCore()
  fullName: System.Windows.Forms.ApplicationContext.ExitThreadCore()
- uid: System.Windows.Forms.ApplicationContext.Finalize
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Finalize()
  nameWithType: ApplicationContext.Finalize()
  fullName: System.Windows.Forms.ApplicationContext.Finalize()
- uid: System.Windows.Forms.ApplicationContext.MainForm
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: MainForm
  nameWithType: ApplicationContext.MainForm
  fullName: System.Windows.Forms.ApplicationContext.MainForm
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: OnMainFormClosed(Object,EventArgs)
  nameWithType: ApplicationContext.OnMainFormClosed(Object,EventArgs)
  fullName: System.Windows.Forms.ApplicationContext.OnMainFormClosed(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ApplicationContext.Tag
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Tag
  nameWithType: ApplicationContext.Tag
  fullName: System.Windows.Forms.ApplicationContext.Tag
- uid: System.Windows.Forms.ApplicationContext.ThreadExit
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ThreadExit
  nameWithType: ApplicationContext.ThreadExit
  fullName: System.Windows.Forms.ApplicationContext.ThreadExit
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ApplicationContext.#ctor*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ApplicationContext
  nameWithType: ApplicationContext.ApplicationContext
- uid: System.Windows.Forms.ApplicationContext.Dispose*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Dispose
  nameWithType: ApplicationContext.Dispose
- uid: System.Windows.Forms.ApplicationContext.ExitThread*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThread
  nameWithType: ApplicationContext.ExitThread
- uid: System.Windows.Forms.ApplicationContext.ExitThreadCore*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: ExitThreadCore
  nameWithType: ApplicationContext.ExitThreadCore
- uid: System.Windows.Forms.ApplicationContext.Finalize*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Finalize
  nameWithType: ApplicationContext.Finalize
- uid: System.Windows.Forms.ApplicationContext.MainForm*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: MainForm
  nameWithType: ApplicationContext.MainForm
- uid: System.Windows.Forms.ApplicationContext.OnMainFormClosed*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: OnMainFormClosed
  nameWithType: ApplicationContext.OnMainFormClosed
- uid: System.Windows.Forms.ApplicationContext.Tag*
  parent: System.Windows.Forms.ApplicationContext
  isExternal: false
  name: Tag
  nameWithType: ApplicationContext.Tag
