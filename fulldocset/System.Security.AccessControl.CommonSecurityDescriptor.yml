### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  id: CommonSecurityDescriptor
  children:
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  - System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  - System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  - System.Security.AccessControl.CommonSecurityDescriptor.Group
  - System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  - System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  - System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  - System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  - System.Security.AccessControl.CommonSecurityDescriptor.Owner
  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  langs:
  - csharp
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
  type: Class
  summary: "Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL)."
  syntax:
    content: 'public sealed class CommonSecurityDescriptor : System.Security.AccessControl.GenericSecurityDescriptor'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericSecurityDescriptor
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  - System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  - System.Security.AccessControl.GenericSecurityDescriptor.Revision
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> class from the specified <xref href=&quot;System.Security.AccessControl.RawSecurityDescriptor&quot;></xref> object."
  remarks: "If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.RawSecurityDescriptor rawSecurityDescriptor);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a container object."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a directory object."
    - id: rawSecurityDescriptor
      type: System.Security.AccessControl.RawSecurityDescriptor
      description: "The <xref href=&quot;System.Security.AccessControl.RawSecurityDescriptor&quot;></xref> object from which to create the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.Boolean,System.String)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,String)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> class from the specified Security Descriptor Definition Language (SDDL) string."
  remarks: "If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, string sddlForm);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a container object."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a directory object."
    - id: sddlForm
      type: System.String
      description: "The SDDL string from which to create the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> class from the specified array of byte values."
  remarks: "If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, byte[] binaryForm, int offset);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a container object."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a directory object."
    - id: binaryForm
      type: System.Byte[]
      description: "The array of byte values from which to create the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
    - id: offset
      type: System.Int32
      description: "The offset in the `binaryForm` array at which to begin copying."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> class from the specified information."
  remarks: "If the underlying security descriptor from which the new <xref:System.Security.AccessControl.RawSecurityDescriptor> object is created contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.ControlFlags flags, System.Security.Principal.SecurityIdentifier owner, System.Security.Principal.SecurityIdentifier group, System.Security.AccessControl.SystemAcl systemAcl, System.Security.AccessControl.DiscretionaryAcl discretionaryAcl);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a container object."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new security descriptor is associated with a directory object."
    - id: flags
      type: System.Security.AccessControl.ControlFlags
      description: "Flags that specify behavior of the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
    - id: owner
      type: System.Security.Principal.SecurityIdentifier
      description: "The owner for the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
    - id: group
      type: System.Security.Principal.SecurityIdentifier
      description: "The primary group for the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
    - id: systemAcl
      type: System.Security.AccessControl.SystemAcl
      description: "The System Access Control List (SACL) for the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
    - id: discretionaryAcl
      type: System.Security.AccessControl.DiscretionaryAcl
      description: "The Discretionary Access Control List (DACL) for the new <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  id: AddDiscretionaryAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: AddDiscretionaryAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets the <xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*> property for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> instance and sets the <xref href=&quot;System.Security.AccessControl.ControlFlags&quot;></xref> flag."
  remarks: "The constructor for the <xref:System.Security.AccessControl.DiscretionaryAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>."
  syntax:
    content: public void AddDiscretionaryAcl (byte revision, int trusted);
    parameters:
    - id: revision
      type: System.Byte
      description: "The revision level of the new <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;></xref> object."
    - id: trusted
      type: System.Int32
      description: "The number of Access Control Entries (ACEs) this <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;></xref> object can contain. This number is to be used only as a hint."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  id: AddSystemAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: AddSystemAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets the <xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*> property for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> instance and sets the <xref href=&quot;System.Security.AccessControl.ControlFlags&quot;></xref> flag."
  remarks: "The constructor for the <xref:System.Security.AccessControl.SystemAcl> uses the <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> and <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> properties for this <xref:System.Security.AccessControl.CommonSecurityDescriptor>."
  syntax:
    content: public void AddSystemAcl (byte revision, int trusted);
    parameters:
    - id: revision
      type: System.Byte
      description: "The revision level of the new <xref href=&quot;System.Security.AccessControl.SystemAcl&quot;></xref> object."
    - id: trusted
      type: System.Int32
      description: "To be added."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  id: ControlFlags
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets values that specify behavior of the <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  syntax:
    content: public override System.Security.AccessControl.ControlFlags ControlFlags { get; }
    return:
      type: System.Security.AccessControl.ControlFlags
      description: "One or more values of the <xref href=&quot;System.Security.AccessControl.ControlFlags&quot;></xref> enumeration combined with a logical OR operation."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  id: DiscretionaryAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the discretionary access control list (DACL) for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object. The DACL contains access rules."
  remarks: "If this property is set to `null`, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.       This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor."
  syntax:
    content: public System.Security.AccessControl.DiscretionaryAcl DiscretionaryAcl { get; set; }
    return:
      type: System.Security.AccessControl.DiscretionaryAcl
      description: "The DACL for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group
  id: Group
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the primary group for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  syntax:
    content: public override System.Security.Principal.SecurityIdentifier Group { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "The primary group for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.Group*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets a Boolean value that specifies whether the object associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is a container object."
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the object associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is a container object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  id: IsDiscretionaryAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is in canonical order."
  syntax:
    content: public bool IsDiscretionaryAclCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the DACL associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is in canonical order; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets a Boolean value that specifies whether the object associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is a directory object."
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the object associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is a directory object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  id: IsSystemAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is in canonical order."
  syntax:
    content: public bool IsSystemAclCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the SACL associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object is in canonical order; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  id: Owner
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the owner of the object associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  syntax:
    content: public override System.Security.Principal.SecurityIdentifier Owner { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "The owner of the object associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  id: PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: PurgeAccessControl(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  remarks: "To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL."
  syntax:
    content: public void PurgeAccessControl (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The security identifier for which to remove access rules."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  id: PurgeAudit(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: PurgeAudit(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  syntax:
    content: public void PurgeAudit (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The security identifier for which to remove audit rules."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  id: SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SetDiscretionaryAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object. DACLs that are protected do not inherit access rules from parent containers."
  syntax:
    content: public void SetDiscretionaryAclProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to protect the DACL from inheritance."
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to keep inherited access rules in the DACL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to remove inherited access rules from the DACL."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  id: SetSystemAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SetSystemAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets the inheritance protection for the System Access Control List (SACL) associated with this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object. SACLs that are protected do not inherit audit rules from parent containers."
  syntax:
    content: public void SetSystemAclProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to protect the SACL from inheritance."
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to keep inherited audit rules in the SACL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to remove inherited audit rules from the SACL."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  id: SystemAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the System Access Control List (SACL) for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object. The SACL contains audit rules."
  syntax:
    content: public System.Security.AccessControl.SystemAcl SystemAcl { get; set; }
    return:
      type: System.Security.AccessControl.SystemAcl
      description: "The SACL for this <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;></xref> object."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: System.Security.AccessControl.GenericSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.RawSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: RawSecurityDescriptor
  nameWithType: RawSecurityDescriptor
  fullName: System.Security.AccessControl.RawSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,String)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
- uid: System.Security.AccessControl.ControlFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ControlFlags
  nameWithType: ControlFlags
  fullName: System.Security.AccessControl.ControlFlags
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.SystemAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: SystemAcl
  nameWithType: SystemAcl
  fullName: System.Security.AccessControl.SystemAcl
- uid: System.Security.AccessControl.DiscretionaryAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: DiscretionaryAcl
  fullName: System.Security.AccessControl.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddDiscretionaryAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddSystemAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAccessControl(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAudit(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetDiscretionaryAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetSystemAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddDiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddSystemAcl
  nameWithType: CommonSecurityDescriptor.AddSystemAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAccessControl
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAudit
  nameWithType: CommonSecurityDescriptor.PurgeAudit
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetDiscretionaryAclProtection
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetSystemAclProtection
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
