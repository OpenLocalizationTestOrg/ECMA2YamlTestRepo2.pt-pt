### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpHandler
  id: IHttpHandler
  children:
  - System.Web.IHttpHandler.IsReusable
  - System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
  type: Interface
  summary: "Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers."
  remarks: "You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language. Executable code defined in the `HttpHandler` classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests. HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.       If your handler will access session state values, it must implement the <xref:System.Web.SessionState.IRequiresSessionState> interface (a marker interface with no methods)."
  syntax:
    content: public interface IHttpHandler
  implements: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a value indicating whether another request can use the <xref href=&quot;System.Web.IHttpHandler&quot;></xref> instance."
  remarks: "You explicitly set the IsReusable property to `true` or `false` by code you provide that overrides the IsReusable property accessor (getter)."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/p-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/p-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.IHttpHandler&quot;></xref> instance is reusable; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.IHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Enables processing of HTTP Web requests by a custom <xref uid=&quot;langword_csharp_HttpHandler&quot; name=&quot;HttpHandler&quot; href=&quot;&quot;></xref> that implements the <xref href=&quot;System.Web.IHttpHandler&quot;></xref> interface."
  remarks: "Place your custom `HttpHandler` code in the ProcessRequest virtual method, as shown in the following example."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/m-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/m-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "An <xref href=&quot;System.Web.HttpContext&quot;></xref> object that provides references to the intrinsic server objects (for example, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>) used to service HTTP requests."
  overload: System.Web.IHttpHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpHandler.IsReusable
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.IHttpHandler.IsReusable*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
- uid: System.Web.IHttpHandler.ProcessRequest*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: IHttpHandler.ProcessRequest
