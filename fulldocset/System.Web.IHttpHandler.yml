### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpHandler
  id: IHttpHandler
  children:
  - System.Web.IHttpHandler.IsReusable
  - System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
  type: Interface
  summary: "Define o contrato que implementa o ASP.NET em sincronia processar pedidos de HTTP Web utilizando processadores HTTP personalizados."
  remarks: "Pode escrever processadores HTTP personalizados para processar tipos específicos, predefinidos de pedidos HTTP em qualquer idioma compatível com a especificação de idioma comum (CLS). Código executável definido no `HttpHandler` classes, em vez de páginas Web de ASP.NET ou ASP convencionais, responder a estes pedidos específicos. Processadores HTTP dão-lhe um meio de interagir com os serviços de resposta do servidor Web do IIS e o pedido de baixo nível e fornecem funcionalidades muito como extensões ISAPI, mas com um modelo de programação mais simples.       Se o processador irão aceder aos valores de estado de sessão, deve implementar o <xref:System.Web.SessionState.IRequiresSessionState>interface (uma interface de marcador com nenhuma métodos).</xref:System.Web.SessionState.IRequiresSessionState>"
  syntax:
    content: public interface IHttpHandler
  implements: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se o outro pedido pode utilizar o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância."
  remarks: "Definir explicitamente a propriedade IsReusable como `true` ou `false` por código fornecer que substitui o acessor de propriedade IsReusable (getter)."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/p-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/p-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância é reutilizáveis; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.IHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Permite o processamento de pedidos de HTTP Web por personalizadas <xref uid=&quot;langword_csharp_HttpHandler&quot; name=&quot;HttpHandler&quot; href=&quot;&quot;> </xref> que implementa o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface."
  remarks: "Coloque a personalizada `HttpHandler` código no método virtual ProcessRequest, conforme mostrado no exemplo seguinte."
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/m-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/m-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto fornece referências aos objetos intrínsecos do servidor (por exemplo, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) utilizado para pedidos HTTP de serviço."
  overload: System.Web.IHttpHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpHandler.IsReusable
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.IHttpHandler.IsReusable*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
- uid: System.Web.IHttpHandler.ProcessRequest*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: IHttpHandler.ProcessRequest
