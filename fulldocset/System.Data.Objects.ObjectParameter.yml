### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectParameter
  id: ObjectParameter
  children:
  - System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)
  - System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)
  - System.Data.Objects.ObjectParameter.Name
  - System.Data.Objects.ObjectParameter.ParameterType
  - System.Data.Objects.ObjectParameter.Value
  langs:
  - csharp
  name: ObjectParameter
  nameWithType: ObjectParameter
  fullName: System.Data.Objects.ObjectParameter
  type: Class
  summary: "Represents a query parameter that is passed to an object query."
  remarks: "Represents a query parameter that is passed to an <xref:System.Data.Objects.ObjectQuery%601> or a query builder method. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).       Object parameters consist of a name, a type, and a value.       This class cannot be inherited. For more information, see <xref:System.Data.Objects.ObjectParameterCollection>."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection. It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public sealed class ObjectParameter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.Objects.ObjectParameter
  langs:
  - csharp
  name: ObjectParameter(String,Object)
  nameWithType: ObjectParameter.ObjectParameter(String,Object)
  fullName: System.Data.Objects.ObjectParameter.ObjectParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Objects.ObjectParameter&quot;></xref> class with the specified name and value."
  remarks: "This constructor creates a parameter from the specified name and value. The type of the parameter is inferred from the value.       When added to the <xref:System.Data.Objects.ObjectParameterCollection>, the parameter name cannot be changed. The parameter value can be changed through the <xref:System.Data.Objects.ObjectParameter.Value%2A> property. After the query has been compiled, the value cannot be changed. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection. It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, the type and the value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public ObjectParameter (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "The parameter name. This name should not include the &quot;@&quot; parameter marker that is used in [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] statements, only the actual name. The first character of the expression must be a letter. Any successive characters in the expression must be either letters, numbers, or an underscore (_) character."
    - id: value
      type: System.Object
      description: "The initial value (and inherently, the type) of the parameter."
  overload: System.Data.Objects.ObjectParameter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If the value of either argument is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "If the value of the name argument is not valid. Parameter names must start with a letter and can only contain letters, numbers, and underscores."
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Data.Objects.ObjectParameter
  langs:
  - csharp
  name: ObjectParameter(String,Type)
  nameWithType: ObjectParameter.ObjectParameter(String,Type)
  fullName: System.Data.Objects.ObjectParameter.ObjectParameter(String,Type)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Objects.ObjectParameter&quot;></xref> class with the specified name and type."
  remarks: "When instantiated, the parameter name cannot be changed. The parameter value can be set or changed through the <xref:System.Data.Objects.ObjectParameter.Value%2A> property. After the query has been compiled, the value cannot be changed. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."
  syntax:
    content: public ObjectParameter (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "The parameter name. This name should not include the &quot;@&quot; parameter marker that is used in the [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] statements, only the actual name. The first character of the expression must be a letter. Any successive characters in the expression must be either letters, numbers, or an underscore (_) character."
    - id: type
      type: System.Type
      description: "The common language runtime (CLR) type of the parameter."
  overload: System.Data.Objects.ObjectParameter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If the value of either argument is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "If the value of the name argument is invalid. Parameter names must start with a letter and can only contain letters, numbers, and underscores."
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameter.Name
  id: Name
  parent: System.Data.Objects.ObjectParameter
  langs:
  - csharp
  name: Name
  nameWithType: ObjectParameter.Name
  fullName: System.Data.Objects.ObjectParameter.Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets the parameter name, which can only be set through a constructor."
  remarks: "When instantiated, the parameter name cannot be changed. The parameter value can be set or changed through the <xref:System.Data.Objects.ObjectParameter.Value%2A> property. After the query has been compiled, the value cannot be changed. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection. It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The parameter name, which can only be set through a constructor."
  overload: System.Data.Objects.ObjectParameter.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameter.ParameterType
  id: ParameterType
  parent: System.Data.Objects.ObjectParameter
  langs:
  - csharp
  name: ParameterType
  nameWithType: ObjectParameter.ParameterType
  fullName: System.Data.Objects.ObjectParameter.ParameterType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets the parameter type."
  remarks: "The parameter type can only be set through a constructor."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection. It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public Type ParameterType { get; }
    return:
      type: System.Type
      description: "The <xref:System.Type> of the parameter."
  overload: System.Data.Objects.ObjectParameter.ParameterType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectParameter.Value
  id: Value
  parent: System.Data.Objects.ObjectParameter
  langs:
  - csharp
  name: Value
  nameWithType: ObjectParameter.Value
  fullName: System.Data.Objects.ObjectParameter.Value
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Gets or sets the parameter value."
  remarks: "After the query has been compiled, the value cannot be changed. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).       If the new value is incompatible with the type declared in the constructor, it might cause a run-time exception. The provider must determine whether the value is compatible with the declared type. For example, if the initial type is <xref:System.Int32> and the new value is <xref:System.Guid>, you might receive an exception."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection. It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, the type and the value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "The parameter value."
  overload: System.Data.Objects.ObjectParameter.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: ObjectParameter(String,Object)
  nameWithType: ObjectParameter.ObjectParameter(String,Object)
  fullName: System.Data.Objects.ObjectParameter.ObjectParameter(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: ObjectParameter(String,Type)
  nameWithType: ObjectParameter.ObjectParameter(String,Type)
  fullName: System.Data.Objects.ObjectParameter.ObjectParameter(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Objects.ObjectParameter.Name
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: Name
  nameWithType: ObjectParameter.Name
  fullName: System.Data.Objects.ObjectParameter.Name
- uid: System.Data.Objects.ObjectParameter.ParameterType
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: ParameterType
  nameWithType: ObjectParameter.ParameterType
  fullName: System.Data.Objects.ObjectParameter.ParameterType
- uid: System.Data.Objects.ObjectParameter.Value
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: Value
  nameWithType: ObjectParameter.Value
  fullName: System.Data.Objects.ObjectParameter.Value
- uid: System.Data.Objects.ObjectParameter.#ctor*
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: ObjectParameter
  nameWithType: ObjectParameter.ObjectParameter
- uid: System.Data.Objects.ObjectParameter.Name*
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: Name
  nameWithType: ObjectParameter.Name
- uid: System.Data.Objects.ObjectParameter.ParameterType*
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: ParameterType
  nameWithType: ObjectParameter.ParameterType
- uid: System.Data.Objects.ObjectParameter.Value*
  parent: System.Data.Objects.ObjectParameter
  isExternal: false
  name: Value
  nameWithType: ObjectParameter.Value
