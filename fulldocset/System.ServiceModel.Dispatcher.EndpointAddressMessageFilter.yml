### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  id: EndpointAddressMessageFilter
  children:
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: EndpointAddressMessageFilter
  nameWithType: EndpointAddressMessageFilter
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  type: Class
  summary: "Represents a query that tests whether a message satisfies the requirements of a specified endpoint address."
  remarks: "This filter tests whether a message satisfies a particular endpoint address. An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized in order to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.       IIS and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com."
  syntax:
    content: 'public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.MessageFilter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: EndpointAddressMessageFilter(EndpointAddress)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;></xref> class with a specified address against which to test a message."
  syntax:
    content: public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "The <xref:System.ServiceModel.EndpointAddress> against which messages are tested."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Boolean)'
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: EndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;></xref> class."
  remarks: "If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:      -   http://localhost/foo.svc      -   http://192.168.1.100/foo.svc      -   http://[my-machine-name]/foo.svc      -   http://[my-machine-name].[my-company].com/foo.svc.       If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint."
  syntax:
    content: public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "The <xref:System.ServiceModel.EndpointAddress> against which messages are tested."
    - id: includeHostNameInComparison
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the host name is included in the endpoint address comparison; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  id: Address
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: Address
  nameWithType: EndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Gets the address that the <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;></xref> tests messages against."
  syntax:
    content: public System.ServiceModel.EndpointAddress Address { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "The <xref:System.ServiceModel.EndpointAddress> that the <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;></xref> tests messages against."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: EndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected override System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  id: IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: IncludeHostNameInComparison
  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Gets a value that indicates whether the host name is included in the endpoint address comparison."
  remarks: "If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:      -   http://localhost/foo.svc      -   http://192.168.1.100/foo.svc      -   http://[my-machine-name]/foo.svc      -   http://[my-machine-name].[my-company].com/foo.svc.       The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property."
  syntax:
    content: public bool IncludeHostNameInComparison { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the host name is included in the endpoint address comparison; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: EndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Tests whether a message satisfies the specified endpoint address."
  remarks: "The two overloads of this method are equivalent because they both examine only message headers."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The <xref:System.ServiceModel.Channels.Message> object to test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.ServiceModel.Channels.Message> object satisfies the endpoint address specified in the filter; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: EndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Tests whether a buffered message satisfies the specified endpoint address."
  remarks: "The two overloads of this method are equivalent because they both examine only message headers. The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "The <xref:System.ServiceModel.Channels.MessageBuffer> object to test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.ServiceModel.Channels.MessageBuffer> object satisfies the endpoint address; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>messageBuffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: System.ServiceModel.Dispatcher.MessageFilter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: EndpointAddressMessageFilter(EndpointAddress)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: EndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: EndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: EndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: EndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: EndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: EndpointAddressMessageFilter
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: EndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: EndpointAddressMessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Match
  nameWithType: EndpointAddressMessageFilter.Match
