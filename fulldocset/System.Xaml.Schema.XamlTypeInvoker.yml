### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeInvoker
  id: XamlTypeInvoker
  children:
  - System.Xaml.Schema.XamlTypeInvoker.#ctor
  - System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  - System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  - System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  - System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  - System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  langs:
  - csharp
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
  type: Class
  summary: "Fornece um ponto de extensão que pode construir instâncias de um tipo XAML através de técnicas que não sejam reflexão e construtores."
  remarks: "O objetivo XamlTypeInvoker consiste em ativar um sistema de tipo XAML extensível, de esquema e de um trabalho tempo que não dependem de como totalmente CLR funcionalidades, tais como atributos CLR, informações de reflexão através de execução <xref:System.Type>e <xref:System.Reflection.MemberInfo>, e assim sucessivamente.</xref:System.Reflection.MemberInfo> </xref:System.Type> As subclasses de XamlTypeInvoker são utilizadas como parâmetros de entrada para os construtores de classes de esquema XAML, tais como <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> alternativos A subclasse <xref:System.Xaml.XamlType>e passar o XamlTypeInvoker através do construtor de base.</xref:System.Xaml.XamlType> Juntamente com a definir um XamlTypeInvoker para o construtor, terá também de fornecer as substituições, pelo menos, algumas do `Lookup` métodos de <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType>       XamlTypeInvoker tem uma implementação predefinida. A implementação predefinida segue um modelo semelhante para a implementação predefinida do tipos de esquema XAML <xref:System.Xaml.XamlType>e <xref:System.Xaml.XamlMember>: o sistema de tipo CLR é utilizado para instanciação, valores e pesquisas, incluindo a utilização de atributos CLR, <xref:System.Type>e <xref:System.Reflection.MemberInfo>, e assim sucessivamente.</xref:System.Reflection.MemberInfo> </xref:System.Type> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>       XamlTypeInvoker fornece métodos para instanciação básico (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) e métodos que são relevantes para tipos de onde o <xref:System.Xaml.XamlType>representa uma coleção, dicionário ou matriz (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A></xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A></xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A></xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A></xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A></xref:System.Xaml.XamlType></xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>"
  syntax:
    content: public class XamlTypeInvoker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> classe."
  remarks: "A implementação predefinida está vazia.       Este construtor é invocado internamente para fornecer um valor para <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A> Para um <xref:System.Xaml.Schema.XamlTypeInvoker>subclasse, é esperado que pode utiliza o <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>assinatura para construção ou forneça uma substituição que chama <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>como base.</xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> </xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> </xref:System.Xaml.Schema.XamlTypeInvoker> Fornecer o <xref:System.Xaml.XamlType>implementa uma predefinição padrão onde <xref:System.Xaml.Schema.XamlTypeInvoker>é imutável.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType>"
  syntax:
    content: protected XamlTypeInvoker ();
    parameters: []
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker(XamlType)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> classe, com base num fornecido <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Este construtor chama internamente com base no <xref:System.Xaml.XamlType>onde o <xref:System.Xaml.Schema.XamlTypeInvoker>é utilizado para construção.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> O `type` fornecido aqui é relevante para todos os outro método chamadas para <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public XamlTypeInvoker (System.Xaml.XamlType type);
    parameters:
    - id: type
      type: System.Xaml.XamlType
      description: "O <xref href=&quot;System.Xaml.XamlType&quot;> </xref> valor para o tipo específico de XAML relevante a este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  id: AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToCollection(Object,Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Adiciona o item fornecido para uma instância do tipo que é relevante para este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  remarks: "Só deve chamar este método num <xref:System.Xaml.XamlType>que representa uma coleção.</xref:System.Xaml.XamlType>"
  syntax:
    content: public virtual void AddToCollection (object instance, object item);
    parameters:
    - id: instance
      type: System.Object
      description: "Uma instância do tipo especificado pelo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> utilizado para construir este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
    - id: item
      type: System.Object
      description: "O item para adicionar."
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Invocar este método num <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> que baseia-se num desconhecido <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.       **- ou -** invocar este método num <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> onde o tipo relevante não é uma coleção."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: '&lt;xref:System.XAML.Schema.XamlTypeInvoker.GetAddMethod%2a?displayProperty=fullName&gt; para este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.'
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  id: AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToDictionary(Object,Object,Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Adiciona o valor de chave e o item fornecido para uma instância do tipo que é relevante para este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  remarks: "Só deve chamar este método num <xref:System.Xaml.XamlType>que representa um dicionário.</xref:System.Xaml.XamlType>"
  syntax:
    content: public virtual void AddToDictionary (object instance, object key, object item);
    parameters:
    - id: instance
      type: System.Object
      description: "Uma instância do tipo especificado pelo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> utilizado para construir este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
    - id: key
      type: System.Object
      description: "Chave de dicionário para o item Adicionar."
    - id: item
      type: System.Object
      description: "O valor do item para adicionar."
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Invocar este método num <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> que baseia-se num desconhecido <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.       **- ou -** invocar este método num <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> onde o tipo relevante não é um dicionário."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: '&lt;xref:System.XAML.Schema.XamlTypeInvoker.GetAddMethod%2a?displayProperty=fullName&gt; para este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.'
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(Object[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Cria uma instância de objeto com base no iniciadas por construção <xref href=&quot;System.Xaml.XamlType&quot;> </xref> para este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  syntax:
    content: public virtual object CreateInstance (object[] arguments);
    parameters:
    - id: arguments
      type: System.Object[]
      description: "Uma matriz de objetos que fornecem o <xref uid=&quot;langword_csharp_x:ConstructorArgs&quot; name=&quot;x:ConstructorArgs&quot; href=&quot;&quot;> </xref> para a instância. Poderá ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para tipos que não necessitam ou utilizam <xref uid=&quot;langword_csharp_x:ConstructorArgs&quot; name=&quot;x:ConstructorArgs&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "A instância criada com base no iniciadas por construção <xref href=&quot;System.Xaml.XamlType&quot;> </xref> para este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  exceptions:
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "Não foi possível resolver um construtor."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  id: GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Devolve o relevante <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> método para um <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> que é relevante para uma coleção ou um dicionário."
  remarks: "Este método deverá devolver `null` nos casos em que o <xref:System.Xaml.XamlType>para este <xref:System.Xaml.Schema.XamlTypeInvoker>não é uma coleção gravável ou um dicionário.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> Mais concretamente, deve devolver `null` nos casos em que <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>devolve `None`.</xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>      > [!IMPORTANT] > Se não estão a aceder a um sistema de tipo XAML totalmente fidedigno, este método tem o potencial de Falso relatório <xref:System.Reflection.MethodInfo>informações para os chamadores.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);
    parameters:
    - id: contentType
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;></xref>para o tipo de item que é utilizado pelo <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> método."
    return:
      type: System.Reflection.MethodInfo
      description: "CLR <xref:System.Reflection.MethodInfo>informações para o <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> método ou nulo.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  id: GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Devolve um objeto que representa um método que pode enumerar através de itens."
  remarks: "Deverá devolver `null` nos casos em que <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>devolve `None`.</xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>      > [!IMPORTANT] > Se não estão a aceder a um sistema de tipo XAML totalmente fidedigno, este método tem o potencial de Falso relatório <xref:System.Reflection.MethodInfo>informações para os chamadores.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>para um método de enumerador ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  id: GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Devolve um <xref:System.Collections.IEnumerator>objeto que representa o conjunto de itens.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public virtual System.Collections.IEnumerator GetItems (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Uma instância do tipo especificado pelo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> utilizado para construir este <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> object, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Invocar este método num <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> que baseia-se num desconhecido <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.       **- ou -** invocar este método num <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> onde o tipo relevante não é uma coleção ou um dicionário."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  id: SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Obtém o processador para utilizar quando um <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> chamadas para um <xref:System.Windows.Markup.MarkupExtension>.</xref:System.Windows.Markup.MarkupExtension> implementado"
  remarks: "O processador de eventos é baseado no <xref:System.EventHandler%601>restrita com <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>dados de eventos.</xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> </xref:System.EventHandler%601>       O valor devolvido invoca o <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A>comportamento do <xref:System.Xaml.XamlType>que o <xref:System.Xaml.Schema.XamlTypeInvoker>baseiam.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A>       O valor de retorno é `null` para um <xref:System.Xaml.Schema.XamlTypeInvoker>que se baseia num desconhecido <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> SetMarkupExtensionHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "Uma implementação de processador processa neste caso."
  overload: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  id: SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Obtém o processador para utilizar quando um <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> chamadas para uma implementação de CLR <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>."
  remarks: "O processador de eventos é baseado no <xref:System.EventHandler%601>restrita com <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>dados de eventos.</xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> </xref:System.EventHandler%601>       O valor devolvido invoca o <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A>comportamento do <xref:System.Xaml.XamlType>que o <xref:System.Xaml.Schema.XamlTypeInvoker>baseiam.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A>       O valor de retorno é `null` para um <xref:System.Xaml.Schema.XamlTypeInvoker>que se baseia num desconhecido <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> SetTypeConverterHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "Uma implementação de processador processa neste caso."
  overload: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Fornece um valor estático que representa um desconhecido, não totalmente implementado <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  remarks: "Fornecer este valor para um <xref:System.Xaml.Schema.XamlTypeInvoker>parâmetro de System.Xaml definido API fará com que, normalmente, o código chamado para acionar as exceções.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Um valor estático que representa um desconhecido, não totalmente implementado <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Xaml.XamlSchemaException
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaException
  nameWithType: XamlSchemaException
  fullName: System.Xaml.XamlSchemaException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker()
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection(Object,Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(Object,Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary(Object,Object,Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(Object,Object,Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(XamlType)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod()
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems(Object)
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection
  nameWithType: XamlTypeInvoker.AddToCollection
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary
  nameWithType: XamlTypeInvoker.AddToDictionary
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance
  nameWithType: XamlTypeInvoker.CreateInstance
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod
  nameWithType: XamlTypeInvoker.GetAddMethod
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems
  nameWithType: XamlTypeInvoker.GetItems
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
