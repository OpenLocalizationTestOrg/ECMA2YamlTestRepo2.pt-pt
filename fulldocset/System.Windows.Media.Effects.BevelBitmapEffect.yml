### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BevelBitmapEffect
  id: BevelBitmapEffect
  children:
  - System.Windows.Media.Effects.BevelBitmapEffect.#ctor
  - System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  - System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.Clone
  - System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore
  - System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  - System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  - System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.Relief
  - System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  - System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  - System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BevelBitmapEffect
  nameWithType: BevelBitmapEffect
  fullName: System.Windows.Media.Effects.BevelBitmapEffect
  type: Class
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Cria um bevel que desencadeia a superfície da imagem de acordo com uma curva especificado.'
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]os efeitos de mapa de bits são composto de software. Qualquer objeto que aplica-se um efeito também será composto no software. Não devem ser aplicados mapa de bits efeitos visuais grandes ou animações como este pode degradar o desempenho.       O tipo de bevel (bevel curva) é determinado pelo <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A>propriedade.</xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A>       BevelBitmapEffect é uma das várias efeitos que são fornecidos com o SDK. Incluem outros efeitos:- <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>- <xref:System.Windows.Media.Effects.BlurBitmapEffect>- <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>- <xref:System.Windows.Media.Effects.EmbossBitmapEffect>a ilustração seguinte mostra um BevelBitmapEffect aplicado a um objecto visual (neste caso é aplicado a um <xref:System.Windows.Controls.Button>).</xref:System.Windows.Controls.Button> </xref:System.Windows.Media.Effects.EmbossBitmapEffect> </xref:System.Windows.Media.Effects.DropShadowBitmapEffect> </xref:System.Windows.Media.Effects.BlurBitmapEffect> </xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>       ![Captura de ecrã: Comparar botões normais e bevelled](~/add/media/effects-bevelsimple1.png &quot;captura de ecrã: comparar botões normais e bevelled&quot;) as ilustrações seguintes mostram o efeito de várias propriedades básicas dos BevelBitmapEffect.       A propriedade <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A>Especifica como wide o bevel: ![captura de ecrã: BevelWidth comparar valores](~/add/media/effects-bevelbevelwidth.png &quot;captura de ecrã: BevelWidth comparar valores&quot;) a propriedade <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A>Especifica a curva do bevel: ![captura de ecrã: comparar valores de EdgeProfile](~/add/media/effects-beveledgeprofile.png &quot;captura de ecrã: comparar valores de EdgeProfile&quot;) a propriedade <xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A>Especifica relief do bevel: ![captura de ecrã: comparar propriedades relief](~/add/media/effects-bevelrelief.png &quot;captura de ecrã: comparar propriedades relief&quot;) a propriedade <xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A>Especifica são de sombras do bevel como uniforme : ![Captura de ecrã: valores de propriedade de comparar Smoothness](~/add/media/effects-bevelsmoothness.png &quot;captura de ecrã: valores de propriedade de comparar Smoothness&quot;) o <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A>propriedade especifica a partir do qual direção &quot;claro virtual&quot; for proveniente de que cria sombras do bevel: ![captura de ecrã: ângulos leves comparar](~/add/media/effects-bevellightangle.png &quot;captura de ecrã: ângulos leves comparar&quot;) </xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle%2A> </xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness%2A> </xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief%2A> </xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile%2A> </xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth%2A>"
  syntax:
    content: 'public sealed class BevelBitmapEffect : System.Windows.Media.Effects.BitmapEffect'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.BitmapEffect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: BevelBitmapEffect()
  nameWithType: BevelBitmapEffect.BevelBitmapEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelBitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Effects.BevelBitmapEffect&quot;> </xref> classe.'
  syntax:
    content: public BevelBitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.BevelBitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  id: BevelWidth
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: BevelWidth
  nameWithType: BevelBitmapEffect.BevelWidth
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Obtém ou define a largura do bevel.'
  remarks: "A ilustração seguinte demonstra o efeito desta propriedade: ![captura de ecrã: BevelWidth comparar valores](~/add/media/effects-bevelbevelwidth.png &quot;captura de ecrã: BevelWidth comparar valores&quot;) <a name=&quot;dependencyPropertyInfo_BevelWidth&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty>      "
  syntax:
    content: public double BevelWidth { get; set; }
    return:
      type: System.Double
      description: "A largura do bevel. O valor predefinido é `5`."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  id: BevelWidthProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: BevelWidthProperty
  nameWithType: BevelBitmapEffect.BevelWidthProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Identifica o <xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*>propriedade de dependência.</xref:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty BevelWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: BevelBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.BevelBitmapEffect"></xref>, making deep copies of this object''s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.'
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BevelBitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BevelBitmapEffect
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.BevelBitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BevelBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.BevelBitmapEffect"></xref> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are'
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BevelBitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BevelBitmapEffect
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BevelBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "A adicionar."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "A adicionar."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  id: EdgeProfile
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: EdgeProfile
  nameWithType: BevelBitmapEffect.EdgeProfile
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Obtém ou define a curva do bevel.'
  remarks: "A ilustração seguinte demonstra o efeito desta propriedade: ![captura de ecrã: comparar valores de EdgeProfile](~/add/media/effects-beveledgeprofile.png &quot;captura de ecrã: comparar valores de EdgeProfile&quot;) <a name=&quot;dependencyPropertyInfo_EdgeProfile&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty>      "
  syntax:
    content: public System.Windows.Media.Effects.EdgeProfile EdgeProfile { get; set; }
    return:
      type: System.Windows.Media.Effects.EdgeProfile
      description: "A curva do bevel. O valor predefinido é <xref href=&quot;System.Windows.Media.Effects.EdgeProfile&quot;> </xref>."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  id: EdgeProfileProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: EdgeProfileProperty
  nameWithType: BevelBitmapEffect.EdgeProfileProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Identifica o <xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*>propriedade de dependência.</xref:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty EdgeProfileProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  id: LightAngle
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: LightAngle
  nameWithType: BevelBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Obtém ou define a direção &quot;claro virtual&quot; for proveniente de que cria sombras do bevel.'
  remarks: "O diagrama seguinte mostra que direção leve provém de para um determinado valor desta propriedade. Sombras do bevel são convertidas no lado oposto do ângulo leve.       ![Diagrama: Direção DropShadow](~/add/media/effects-dropshadowdirection2.png &quot;diagrama: DropShadow direção&quot;) a ilustração seguinte demonstra o efeito desta propriedade: ![captura de ecrã: ângulos leves comparar](~/add/media/effects-bevellightangle.png &quot;captura de ecrã: ângulos leves comparar&quot;) <a name=&quot;dependencyPropertyInfo_LightAngle&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty>      "
  syntax:
    content: public double LightAngle { get; set; }
    return:
      type: System.Double
      description: "A direção da origem de leve virtual. O intervalo válido é de 0-360 (graus) com 0 especificando o lado direito do objeto e os valores sucessivos mover counter-no sentido horário em todo o objeto. Sombras do bevel são no lado oposto da onde claro é convertido. O valor predefinido é `135`."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  id: LightAngleProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: LightAngleProperty
  nameWithType: BevelBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Identifica o <xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*>propriedade de dependência.</xref:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty LightAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief
  id: Relief
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: Relief
  nameWithType: BevelBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Relief
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Obtém ou define a altura de relief do bevel.'
  remarks: "A ilustração seguinte demonstra o efeito desta propriedade: ![captura de ecrã: comparar propriedades relief](~/add/media/effects-bevelrelief.png &quot;captura de ecrã: comparar propriedades relief&quot;) <a name=&quot;dependencyPropertyInfo_Relief&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty>      "
  syntax:
    content: public double Relief { get; set; }
    return:
      type: System.Double
      description: "A altura da relief do bevel. O intervalo válido é entre `0` e `1` com `1` ter mais relief (sombras darkest). O valor predefinido é `0.3`."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.Relief*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  id: ReliefProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: ReliefProperty
  nameWithType: BevelBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Identifica o <xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief*>propriedade de dependência.</xref:System.Windows.Media.Effects.BevelBitmapEffect.Relief*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty ReliefProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  id: Smoothness
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: Smoothness
  nameWithType: BevelBitmapEffect.Smoothness
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Obtém ou define a são de sombras do bevel como uniforme.'
  remarks: "A ilustração seguinte demonstra o efeito desta propriedade: ![captura de ecrã: valores de propriedade de comparar Smoothness](~/add/media/effects-bevelsmoothness.png &quot;captura de ecrã: valores de propriedade de comparar Smoothness&quot;) <a name=&quot;dependencyPropertyInfo_Smoothness&quot;> </a> # # informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty>      "
  syntax:
    content: public double Smoothness { get; set; }
    return:
      type: System.Double
      description: "Valor que indica que forma uniforme as bevel sombras. O intervalo válido é entre `0` e `1` com `1` a ser o smoothest. O valor predefinido é `0.2`."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  id: SmoothnessProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: SmoothnessProperty
  nameWithType: BevelBitmapEffect.SmoothnessProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>. Identifica o <xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*>propriedade de dependência.</xref:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty SmoothnessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "A adicionar."
  overload: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelBitmapEffect()
  nameWithType: BevelBitmapEffect.BevelBitmapEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelBitmapEffect()
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelWidth
  nameWithType: BevelBitmapEffect.BevelWidth
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelWidthProperty
  nameWithType: BevelBitmapEffect.BevelWidthProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: BevelBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Clone()
- uid: System.Windows.Media.Effects.BevelBitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BevelBitmapEffect
  nameWithType: BevelBitmapEffect
  fullName: System.Windows.Media.Effects.BevelBitmapEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BevelBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BevelBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: EdgeProfile
  nameWithType: BevelBitmapEffect.EdgeProfile
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile
- uid: System.Windows.Media.Effects.EdgeProfile
  parent: System.Windows.Media.Effects
  isExternal: false
  name: EdgeProfile
  nameWithType: EdgeProfile
  fullName: System.Windows.Media.Effects.EdgeProfile
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: EdgeProfileProperty
  nameWithType: BevelBitmapEffect.EdgeProfileProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: BevelBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: LightAngleProperty
  nameWithType: BevelBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: BevelBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Relief
- uid: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: ReliefProperty
  nameWithType: BevelBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Smoothness
  nameWithType: BevelBitmapEffect.Smoothness
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness
- uid: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: SmoothnessProperty
  nameWithType: BevelBitmapEffect.SmoothnessProperty
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty
- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BevelBitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelBitmapEffect
  nameWithType: BevelBitmapEffect.BevelBitmapEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: BevelWidth
  nameWithType: BevelBitmapEffect.BevelWidth
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Clone*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Clone
  nameWithType: BevelBitmapEffect.Clone
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BevelBitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BevelBitmapEffect.CreateInstanceCore
- uid: System.Windows.Media.Effects.BevelBitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BevelBitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: EdgeProfile
  nameWithType: BevelBitmapEffect.EdgeProfile
- uid: System.Windows.Media.Effects.BevelBitmapEffect.LightAngle*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: BevelBitmapEffect.LightAngle
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Relief*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: BevelBitmapEffect.Relief
- uid: System.Windows.Media.Effects.BevelBitmapEffect.Smoothness*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: Smoothness
  nameWithType: BevelBitmapEffect.Smoothness
- uid: System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BevelBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BevelBitmapEffect.UpdateUnmanagedPropertyState
