### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementKeyAttribute
  id: ManagementKeyAttribute
  children:
  - System.Management.Instrumentation.ManagementKeyAttribute.#ctor
  langs:
  - csharp
  name: ManagementKeyAttribute
  nameWithType: ManagementKeyAttribute
  fullName: System.Management.Instrumentation.ManagementKeyAttribute
  type: Class
  summary: "The ManagementKey attribute identifies the key properties of a WMI class.       Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."
  remarks: "Unless a WMI class is a singleton, it can have multiple corresponding instances. Clients of the class must be able to uniquely identify the specific instance they are interested in. So, as a provider writer, you must choose a property or set of properties that uniquely identify an instance of each of your WMI classes. You use the ManagementKeyAttribute attribute to identify those key properties. Properties identified as keys have the same runtime behavior as read-only properties indicated by the <xref:System.Management.Instrumentation.ManagementProbeAttribute> attribute."
  example:
  - "The following example shows how to use the ManagementKeyAttribute to mark a field as a key property of a WMI class.  \n  \n```  \n[ManagementKey]  \npublic int id;  \n```  \n  \n The next example shows how to use the ManagementKeyAttribute attribute to mark a key property of a WMI class.  \n  \n [C#]  \n  \n```  \n// Use the ManagementKey attribute to specify that this property   \n// is used as the key identifier of this class and for the WMI  \n// instances of this class.  This property must be unique for each  \n// class instance.  \n[ManagementKey]  \npublic int Id  \n{  \n    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]

      public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute
  inheritance:
  - System.Attribute
  - System.Management.Instrumentation.ManagementMemberAttribute
  implements: []
  inheritedMembers:
  - System.Management.Instrumentation.ManagementMemberAttribute.Name
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementKeyAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementKeyAttribute
  langs:
  - csharp
  name: ManagementKeyAttribute()
  nameWithType: ManagementKeyAttribute.ManagementKeyAttribute()
  fullName: System.Management.Instrumentation.ManagementKeyAttribute.ManagementKeyAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Initializes a new instance of the <xref:System.Management.ManagementKeyAttribute> class. This is the default constructor."
  syntax:
    content: public ManagementKeyAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementKeyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Management.Instrumentation.ManagementMemberAttribute
  isExternal: false
  name: System.Management.Instrumentation.ManagementMemberAttribute
- uid: System.Management.Instrumentation.ManagementKeyAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementKeyAttribute
  isExternal: false
  name: ManagementKeyAttribute()
  nameWithType: ManagementKeyAttribute.ManagementKeyAttribute()
  fullName: System.Management.Instrumentation.ManagementKeyAttribute.ManagementKeyAttribute()
- uid: System.Management.Instrumentation.ManagementKeyAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementKeyAttribute
  isExternal: false
  name: ManagementKeyAttribute
  nameWithType: ManagementKeyAttribute.ManagementKeyAttribute
