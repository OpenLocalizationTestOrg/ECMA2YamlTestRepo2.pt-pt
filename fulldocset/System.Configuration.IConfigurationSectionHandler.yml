### YamlMime:ManagedReference
items:
- uid: System.Configuration.IConfigurationSectionHandler
  id: IConfigurationSectionHandler
  children:
  - System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  langs:
  - csharp
  name: IConfigurationSectionHandler
  nameWithType: IConfigurationSectionHandler
  fullName: System.Configuration.IConfigurationSectionHandler
  type: Interface
  summary: "Processa o acesso a determinados secções de configuração."
  remarks: "**Importante** IConfigurationSectionHandler foi preterido no .NET Framework 2.0 e superior. No entanto, porque é utilizado internamente, foi mantido. Pode encontrar um exemplo em [como: criar personalizada configuração secções utilizando IConfigurationSectionHandler](~/add/includes/ajax-current-ext-md.md). Se utilizar o exemplo anterior,. compilá-lo com a versão 1.0 ou 1.1 do .NET Framework.       Na versão 2.0 do .NET Framework e superior, em vez disso, tem de derivar do <xref:System.Configuration.ConfigurationSection>classe para implementar o processador da secção de configuração relacionados.</xref:System.Configuration.ConfigurationSection> Pode encontrar um exemplo em [como: criar personalizada configuração secções utilizando ConfigurationSection](~/add/includes/ajax-current-ext-md.md).       As instâncias da classe IConfigurationSectionHandler tem de ser thread sem monitorização de estado e seguro. O <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>método tem de ser possível chamar EndRead a partir de vários threads em simultâneo.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A>       Além disso, o objeto de configuração gerado pelo <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>método tem de ser thread imutável e seguro.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A> Uma vez que os objetos de configuração são colocadas em cache pelo sistema de configuração, é importante para não modificar o argumento de principal para o <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>método.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A> Por exemplo, se o valor de retorno de <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>é apenas uma pequena modificação de principal, as modificações reais têm de ser efetuadas num clone de principal, não o original.</xref:System.Configuration.IConfigurationSectionHandler.Create%2A>"
  syntax:
    content: public interface IConfigurationSectionHandler
  implements: []
  platform:
  - net462
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  id: Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  langs:
  - csharp
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Cria um processador da secção de configuração."
  remarks: "Instâncias do <xref:System.Configuration.IConfigurationSectionHandler>classe tem de ser thread sem monitorização de estado e seguro.</xref:System.Configuration.IConfigurationSectionHandler> O método de criação tem de ser possível chamar EndRead a partir de vários threads em simultâneo.       Além disso, o objeto de configuração gerado pelo método de criação tem de ser thread imutável e seguro. Uma vez que os objetos de configuração são colocadas em cache pelo sistema de configuração, é importante para não modificar o argumento de principal para criar. Por exemplo, se o valor de retorno de Create for apenas uma pequena modificação de principal, as modificações reais têm de ser efetuadas num clone de principal, não o original."
  syntax:
    content: public object Create (object parent, object configContext, System.Xml.XmlNode section);
    parameters:
    - id: parent
      type: System.Object
      description: "Objeto principal."
    - id: configContext
      type: System.Object
      description: "Objeto de contexto de configuração."
    - id: section
      type: System.Xml.XmlNode
      description: "Nó XML de secção."
    return:
      type: System.Object
      description: "O objeto de processador da secção criada."
  overload: System.Configuration.IConfigurationSectionHandler.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.IConfigurationSectionHandler.Create*
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create
  nameWithType: IConfigurationSectionHandler.Create
