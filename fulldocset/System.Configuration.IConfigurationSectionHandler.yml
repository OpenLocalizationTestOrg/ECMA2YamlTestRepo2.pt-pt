### YamlMime:ManagedReference
items:
- uid: System.Configuration.IConfigurationSectionHandler
  id: IConfigurationSectionHandler
  children:
  - System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  langs:
  - csharp
  name: IConfigurationSectionHandler
  nameWithType: IConfigurationSectionHandler
  fullName: System.Configuration.IConfigurationSectionHandler
  type: Interface
  summary: "Handles the access to certain configuration sections."
  remarks: "**Important** IConfigurationSectionHandler is deprecated in .NET Framework 2.0 and above. But, because it is used internally, it has been kept. You can find an example at [How to: Create Custom Configuration Sections Using IConfigurationSectionHandler](~/add/includes/ajax-current-ext-md.md). If you use the previous example, please build it with the .NET Framework version 1.0 or 1.1.       In .NET Framework version 2.0 and above, you must instead derive from the <xref:System.Configuration.ConfigurationSection> class to implement the related configuration section handler. You can find an example at [How to: Create Custom Configuration Sections Using ConfigurationSection](~/add/includes/ajax-current-ext-md.md).       Instances of the IConfigurationSectionHandler class must be thread safe and stateless. The <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> method must be callable from multiple threads simultaneously.       Furthermore, the configuration object generated by the <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> method must be thread safe and immutable. Because the configuration objects are cached by the configuration system, it is important not to modify the parent argument to the <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> method. For example, if the return value of <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> is only a small modification of the parent, actual modifications must be made on a clone of the parent, not the original."
  syntax:
    content: public interface IConfigurationSectionHandler
  implements: []
  platform:
  - net462
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  id: Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  langs:
  - csharp
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Creates a configuration section handler."
  remarks: "Instances of the <xref:System.Configuration.IConfigurationSectionHandler> class must be thread safe and stateless. The Create method must be callable from multiple threads simultaneously.       Furthermore, the configuration object generated by the Create method must be thread safe and immutable. Because the configuration objects are cached by the configuration system, it is important not to modify the parent argument to Create. For example, if the return value of Create is only a small modification of the parent, actual modifications must be made on a clone of the parent, not the original."
  syntax:
    content: public object Create (object parent, object configContext, System.Xml.XmlNode section);
    parameters:
    - id: parent
      type: System.Object
      description: "Parent object."
    - id: configContext
      type: System.Object
      description: "Configuration context object."
    - id: section
      type: System.Xml.XmlNode
      description: "Section XML node."
    return:
      type: System.Object
      description: "The created section handler object."
  overload: System.Configuration.IConfigurationSectionHandler.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create(Object,Object,XmlNode)
  nameWithType: IConfigurationSectionHandler.Create(Object,Object,XmlNode)
  fullName: System.Configuration.IConfigurationSectionHandler.Create(Object,Object,XmlNode)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.IConfigurationSectionHandler.Create*
  parent: System.Configuration.IConfigurationSectionHandler
  isExternal: false
  name: Create
  nameWithType: IConfigurationSectionHandler.Create
