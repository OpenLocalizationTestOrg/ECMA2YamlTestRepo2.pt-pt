### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1
  id: HttpHeaderValueCollection`1
  children:
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Count
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)
  langs:
  - csharp
  name: HttpHeaderValueCollection<T>
  nameWithType: HttpHeaderValueCollection<T>
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>
  type: Class
  syntax:
    content: 'public sealed class HttpHeaderValueCollection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T> where T : class'
    typeParameters:
    - id: T
      description: "To be added."
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<T>
  - System.Collections.Generic.IEnumerable<T>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)
  id: Add(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: Add(T)
  nameWithType: HttpHeaderValueCollection<T>.Add(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Add(T)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public void Add (T item);
    parameters:
    - id: item
      type: T
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear
  id: Clear
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpHeaderValueCollection<T>.Clear()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Clear()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: Contains(T)
  nameWithType: HttpHeaderValueCollection<T>.Contains(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Contains(T)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: CopyTo(T[],Int32)
  nameWithType: HttpHeaderValueCollection<T>.CopyTo(T[],Int32)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.CopyTo(T[],Int32)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex);
    parameters:
    - id: array
      type: T[]
      description: "To be added."
    - id: arrayIndex
      type: System.Int32
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count
  id: Count
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: Count
  nameWithType: HttpHeaderValueCollection<T>.Count
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Count
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpHeaderValueCollection<T>.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{T}
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpHeaderValueCollection<T>.IsReadOnly
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.IsReadOnly
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)
  id: ParseAdd(System.String)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: ParseAdd(String)
  nameWithType: HttpHeaderValueCollection<T>.ParseAdd(String)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ParseAdd(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public void ParseAdd (string input);
    parameters:
    - id: input
      type: System.String
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: Remove(T)
  nameWithType: HttpHeaderValueCollection<T>.Remove(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Remove(T)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString
  id: ToString
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: ToString()
  nameWithType: HttpHeaderValueCollection<T>.ToString()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)
  id: TryParseAdd(System.String)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  name: TryParseAdd(String)
  nameWithType: HttpHeaderValueCollection<T>.TryParseAdd(String)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.TryParseAdd(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool TryParseAdd (string input);
    parameters:
    - id: input
      type: System.String
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Add(T)
  nameWithType: HttpHeaderValueCollection<T>.Add(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Add(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Clear()
  nameWithType: HttpHeaderValueCollection<T>.Clear()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Clear()
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Contains(T)
  nameWithType: HttpHeaderValueCollection<T>.Contains(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Contains(T)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: CopyTo(T[],Int32)
  nameWithType: HttpHeaderValueCollection<T>.CopyTo(T[],Int32)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.CopyTo(T[],Int32)
- uid: T[]
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Count
  nameWithType: HttpHeaderValueCollection<T>.Count
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Count
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpHeaderValueCollection<T>.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpHeaderValueCollection<T>.IsReadOnly
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.IsReadOnly
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: ParseAdd(String)
  nameWithType: HttpHeaderValueCollection<T>.ParseAdd(String)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ParseAdd(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Remove(T)
  nameWithType: HttpHeaderValueCollection<T>.Remove(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Remove(T)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: ToString()
  nameWithType: HttpHeaderValueCollection<T>.ToString()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ToString()
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: TryParseAdd(String)
  nameWithType: HttpHeaderValueCollection<T>.TryParseAdd(String)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.TryParseAdd(String)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Add
  nameWithType: HttpHeaderValueCollection<T>.Add
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Clear
  nameWithType: HttpHeaderValueCollection<T>.Clear
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Contains
  nameWithType: HttpHeaderValueCollection<T>.Contains
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: CopyTo
  nameWithType: HttpHeaderValueCollection<T>.CopyTo
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Count
  nameWithType: HttpHeaderValueCollection<T>.Count
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpHeaderValueCollection<T>.GetEnumerator
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpHeaderValueCollection<T>.IsReadOnly
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: ParseAdd
  nameWithType: HttpHeaderValueCollection<T>.ParseAdd
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: Remove
  nameWithType: HttpHeaderValueCollection<T>.Remove
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: ToString
  nameWithType: HttpHeaderValueCollection<T>.ToString
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd*
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  isExternal: false
  name: TryParseAdd
  nameWithType: HttpHeaderValueCollection<T>.TryParseAdd
