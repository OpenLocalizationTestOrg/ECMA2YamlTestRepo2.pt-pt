### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DataAdapter
  id: DataAdapter
  children:
  - System.Data.Common.DataAdapter.#ctor
  - System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.GetFillParameters
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
  type: Class
  summary: "Representa um conjunto de comandos do SQL Server e uma ligação de base de dados que são utilizados para preencher o <xref href=&quot;System.Data.DataSet&quot;> </xref> e atualizar a origem de dados."
  remarks: "O DataAdapter funciona como uma ponte entre um <xref:System.Data.DataSet>e uma origem de dados para obter e os dados.</xref:System.Data.DataSet> O DataAdapter fornece este bridge ao mapeamento <xref:System.Data.Common.DataAdapter.Fill%2A>, que altera os dados <xref:System.Data.DataSet>para fazer corresponder dados na origem de dados e <xref:System.Data.IDataAdapter.Update%2A>, de que altera os dados da origem de dados para fazer corresponder dados no <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.IDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DataAdapter.Fill%2A>       Se estiver a ligar a uma base de dados do SQL Server, pode aumentar o desempenho global ao utilizar o <xref:System.Data.SqlClient.SqlDataAdapter>juntamente com associado <xref:System.Data.SqlClient.SqlCommand>e <xref:System.Data.SqlClient.SqlConnection>objetos.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter> Para origens de dados OLE DB suportados pelo serviço, utilize o DataAdapter com associado <xref:System.Data.OleDb.OleDbCommand>e <xref:System.Data.OleDb.OleDbConnection>objetos.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand> Para origens de dados suportados de ODBC, utilize o DataAdapter com associado <xref:System.Data.Odbc.OdbcCommand>e <xref:System.Data.Odbc.OdbcConnection>objetos.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand> Para bases de dados Oracle, utilize o DataAdapter com associado <xref:System.Data.OracleClient.OracleCommand>e <xref:System.Data.OracleClient.OracleConnection>objetos.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand>       Quando é criada uma instância de DataAdapter, as propriedades de leitura/escrita são definidas para valores iniciais. Para obter uma lista destes valores, consulte o construtor de DataAdapter."
  syntax:
    content: 'public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDataAdapter
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> classe."
  remarks: "Quando uma instância de <xref:System.Data.Common.DataAdapter>é criada, as seguintes propriedades forem definidas para os seguintes valores iniciais de leitura/escrita.</xref:System.Data.Common.DataAdapter>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|   | <xref:System.Data.Common.DataAdapter.TableMappings%2A>| Uma matriz de objetos de <xref:System.Data.Common.DataAdapter.TableMappings%2A>. |       Pode alterar o valor de qualquer uma destas propriedades através de uma chamada para a propriedade separada.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  syntax:
    content: protected DataAdapter ();
    parameters: []
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  id: '#ctor(System.Data.Common.DataAdapter)'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> classe a partir de um objeto existente do mesmo tipo."
  remarks: "Esta sobrecarga do <xref:System.Data.Common.DataAdapter>construtor foi concebido para utilização por um fornecedor de dados .NET Framework quando implementa um construtor semelhante para utilização numa implementação de clone.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected DataAdapter (System.Data.Common.DataAdapter from);
    parameters:
    - id: from
      type: System.Data.Common.DataAdapter
      description: "A <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> objecto utilizado para criar a nova <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  id: AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define um valor que indica se <> </> *> é chamado um <xref href=&quot;System.Data.DataRow&quot;> </xref> depois de ser adicionada para o <xref href=&quot;System.Data.DataTable&quot;> </xref> durante a qualquer um do * *preencher** operações."
  remarks: "Se `false`, <xref:System.Data.DataRow.AcceptChanges%2A>não for chamado e as linhas recém-adicionado são tratadas como linhas inseridas.</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public bool AcceptChangesDuringFill { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Data.DataRow.AcceptChanges*>é chamado para o <xref href=&quot;System.Data.DataRow&quot;> </xref>; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataRow.AcceptChanges*> A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  id: AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define se <> </> *> é chamado durante um <> </> *>."
  remarks: "Durante uma chamada para o `Update` método de um `DataAdapter`, a base de dados pode enviar dados para a aplicação do ADO.NET, como os parâmetros de saída ou como o primeiro registo devolvido de um conjunto de resultados. ADO.NET podem obter estes valores e atualizar as colunas correspondentes no <xref:System.Data.DataRow>a ser atualizado.</xref:System.Data.DataRow> Por predefinição, ADO.NET chama o `AcceptChanges` método o `DataRow` após a atualização. No entanto, se pretender uniu a linha atualizada novamente para o outro <xref:System.Data.DataTable>, poderá querer preserver o valor original de uma coluna de chave primária.</xref:System.Data.DataTable> Por exemplo, uma coluna de chave primária correspondente a uma coluna automaticamente incrementada na base de dados, tais como uma coluna de identidade, pode conter os novos valores que são atribuídos a base de dados que não correspondam a valores originais atribuídos no `DataRow`. Por predefinição, `AcceptChanges` denomina implicitamente após uma atualização e os valores originais na linha, que pode ter sido <xref:System.Data.DataColumn.AutoIncrement%2A>valores atribuídos por ADO.NET, serão perdidas.</xref:System.Data.DataColumn.AutoIncrement%2A> Pode manter os valores originais no `DataRow` , evitando que `ADO.NET` de chamar `AcceptChanges` depois efetua uma atualização de uma linha, definindo a propriedade AcceptChangesDuringUpdate `false`, que ela vai preservando os valores originais.      > [!NOTE] > Definição o `AcceptChangesDuringUpdate` propriedade `false` aplica-se a todas as modificações de dados, não apenas insere. Se pretender editar ou eliminar linhas a mesma atualização e, se pretende suprimir a chamada para `AcceptChanges` apenas inserções, em seguida, em vez de definição `AccceptChangesDuringUpdate` para `false`, utilize um processador de eventos para o `RowUpdated` eventos do `DataAdapter`. De eventos processador pode verificar o <xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A>para determinar se a modificação de dados é uma inserção e `true`, defina a <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>propriedade de <xref:System.Data.Common.RowUpdatedEventArgs>para <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> </xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> Para obter mais informações e um exemplo, consulte [a obter a identidade ou valores de Autonumber](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example demonstrates extracting changed rows from a `DataTable` and using a <xref:System.Data.SqlClient.SqlDataAdapter> to update the data source and retrieve a new identity column value. By setting the `AcceptChangesDuringUpdate` property of the <xref:System.Data.SqlClient.SqlDataAdapter> to `false` to preserve the original auto increment value, the new data can then be merged into the original <xref:System.Data.DataTable>, even if the new identity value does not match the original auto increment value in the `DataTable`.  \n  \n [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_7_1.vb)]\n [!code-cs[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/csharp/p-system.data.common.dat_7_1.cs)]"
  syntax:
    content: public bool AcceptChangesDuringUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <> </> *> é chamado durante um <> </> *>; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CloneInternals
  id: CloneInternals
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Cria uma cópia desta instância de <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  remarks: "Este método foi preterido. O <xref:System.Data.Common.DataAdapter.%23ctor%2A>construtor deve ser utilizado em vez deste método.</xref:System.Data.Common.DataAdapter.%23ctor%2A>       Os comandos de <xref:System.Data.Common.DataAdapter.TableMappings%2A>, a <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>e o <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>são Clonadas.</xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> No entanto, as ligações para os comandos não são copiou, mas partilhadas. Assim, o clonado <xref:System.Data.Common.DataAdapter>pode ser utilizado contra a mesma ligação que o original.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected virtual System.Data.Common.DataAdapter CloneInternals ();
    parameters: []
    return:
      type: System.Data.Common.DataAdapter
      description: "A instância do clonado <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.CloneInternals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  id: ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define um valor que especifica se gere uma exceção quando um erro for detetado durante uma atualização de linha."
  remarks: "Se `ContinueUpdateOnError` está definido como `true`, sem exceção é acionada quando ocorre um erro durante a atualização de uma linha. A atualização da linha é ignorada e as informações de erro são colocadas no <xref:System.Data.DataRow.RowError%2A>propriedade da linha no registo de erros.</xref:System.Data.DataRow.RowError%2A> O <xref:System.Data.Common.DataAdapter>continua a atualizar linhas subsequentes.</xref:System.Data.Common.DataAdapter>       Se `ContinueUpdateOnError` está definido como `false`, é emitida uma exceção quando ocorre um erro durante a atualização de uma linha."
  syntax:
    content: public bool ContinueUpdateOnError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para continuar a atualização sem gerar uma exceção; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  id: CreateTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Cria uma nova <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();
    parameters: []
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Uma nova coleção de mapeamento de tabela."
  overload: System.Data.Common.DataAdapter.CreateTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: "Este método é denominado pelo público <xref:System.IDisposable.Dispose%2A>método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.IDisposable.Dispose%2A> `Dispose`invoca protegida `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.Data.Common.DataAdapter>referências.</xref:System.Data.Common.DataAdapter> Este método invoca o `Dispose` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Data.Common.DataAdapter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  id: Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza as linhas a <xref href=&quot;System.Data.DataSet&quot;> </xref> para corresponderem na origem de dados."
  remarks: "O método de preenchimento obtém linhas da origem de dados utilizando a instrução SELECT especificada por uma associado <xref:System.Data.IDbDataAdapter.SelectCommand%2A>propriedade.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> O objeto de ligação associado a instrução SELECT tem de ser válido, mas não precisa de estar aberta. Se a ligação está fechada antes de é chamado preenchimento, é aberto para obter dados, em seguida, fechado. Se a ligação está aberta antes de é chamado preenchimento, este irá permanecer aberta.       A operação de preenchimento, em seguida, adiciona as linhas para o destino <xref:System.Data.DataTable>objetos no <xref:System.Data.DataSet>, criar o <xref:System.Data.DataTable>objetos se estes ainda não existir.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> Ao criar <xref:System.Data.DataTable>objetos, a operação de preenchimento cria normalmente apenas metadados de nome de coluna.</xref:System.Data.DataTable> No entanto, se o <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>propriedade está definida como `AddWithKey`, as chaves primárias adequadas e restrições também são criadas.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Se o `SelectCommand` devolve os resultados de uma associação externa, o `DataAdapter` não define um <xref:System.Data.DataTable.PrimaryKey%2A>valor para o <xref:System.Data.DataTable>.</xref:System.Data.DataTable> resultante</xref:System.Data.DataTable.PrimaryKey%2A> Tem de definir explicitamente a chave primária para se certificar que linhas duplicadas são resolvidas corretamente. Para obter mais informações, consulte [definir chaves primárias](~/add/includes/ajax-current-ext-md.md).       Se o adaptador de dados encontra colunas duplicadas ao preencher um <xref:System.Data.DataTable>, gera os nomes das colunas subsequentes, utilizando o padrão &quot;columnname1&quot;, &quot;columnname2&quot;, &quot;columnname3&quot; e assim sucessivamente.</xref:System.Data.DataTable> Se os dados de entrada contém colunas sem nome, estes são colocados no <xref:System.Data.DataSet>, de acordo com o padrão &quot;Coluna1&quot;, &quot;Coluna2&quot; e assim sucessivamente.</xref:System.Data.DataSet> Quando vários conjuntos de resultados são adicionados para o <xref:System.Data.DataSet>cada conjunto de resultados é colocado numa tabela separada.</xref:System.Data.DataSet> Conjuntos de resultados adicionais são denominados acrescentando valores integrais para o nome da tabela especificado (por exemplo, &quot;Tabela&quot;, &quot;Table1&quot;, &quot;Tabela2&quot; e assim sucessivamente). As aplicações utilizando nomes de coluna e a tabela devem certificar-se de que não ocorrem conflitos com estes padrões de nomenclatura.       Quando a instrução SELECT utilizada para preencher o <xref:System.Data.DataSet>devolve resultados vários, tais como um instruções de SQL do batch, se um dos resultados contém um erro, todos os resultados subsequentes são ignorados e não adicionados à <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet>       Pode utilizar o método de preenchimento várias vezes no mesmo <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Se existir uma chave primária, linhas de entrada são intercaladas com linhas correspondentes que já existem. Não se existir nenhuma chave primária, linhas de entrada são acrescentadas <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Quando o processamento de instruções de SQL de batch que devolvem resultados vários, a implementação de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>para o .NET Framework Data Provider para OLE DB obtém as informações de esquema para apenas o resultado primeiro.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Para obter informações de esquema para vários resultados, utilize <xref:System.Data.Common.DbDataAdapter.Fill%2A>com o <xref:System.Data.MissingSchemaAction>definido como `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual int Fill (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> para preencher com os registos e, se necessário, esquema."
    return:
      type: System.Int32
      description: "O número de linhas sejam adicionados ou atualizados com êxito o <xref href=&quot;System.Data.DataSet&quot;> </xref>. Não inclui as linhas afetadas pelas declarações não devolveu linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  id: Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza as linhas no <xref href=&quot;System.Data.DataTable&quot;> </xref> para corresponderem na origem de dados utilizando o <xref href=&quot;System.Data.DataTable&quot;> </xref> nome e especificado <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  remarks: "Consulte as observações para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obter informações adicionais."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> para preencher com registos."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Uma instância de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas sejam adicionados ou atualizados com êxito o <xref href=&quot;System.Data.DataTable&quot;> </xref>. Não inclui as linhas afetadas pelas declarações não devolveu linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza as linhas do intervalo especificado na coleção de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos para corresponderem na origem de dados."
  remarks: "Consulte as observações para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obter informações adicionais."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "Uma coleção de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos para preencher com registos."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Uma instância de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "O índice baseado em zero do registo de partida."
    - id: maxRecords
      type: System.Int32
      description: "Um número inteiro que indica o número máximo de registos."
    return:
      type: System.Int32
      description: "O número de linhas sejam adicionados ou atualizados com êxito o <xref href=&quot;System.Data.DataTable&quot;> </xref>. Não inclui as linhas afetadas pelas declarações não devolveu linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza as linhas do intervalo especificado no <xref href=&quot;System.Data.DataSet&quot;> </xref> para corresponderem na origem de dados utilizando o <xref href=&quot;System.Data.DataSet&quot;> </xref> e <xref href=&quot;System.Data.DataTable&quot;> </xref> nomes."
  remarks: "Consulte as observações para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obter informações adicionais."
  syntax:
    content: protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> para preencher com registos."
    - id: srcTable
      type: System.String
      description: "Uma cadeia que indica o nome da tabela de origem."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Uma instância de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "O índice baseado em zero do registo de partida."
    - id: maxRecords
      type: System.Int32
      description: "Um número inteiro que indica o número máximo de registos."
    return:
      type: System.Int32
      description: "O número de linhas sejam adicionados ou atualizados com êxito o <xref href=&quot;System.Data.DataSet&quot;> </xref>. Não inclui as linhas afetadas pelas declarações não devolveu linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillError
  id: FillError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Devolvido quando ocorre um erro durante uma operação de preenchimento."
  remarks: "O **FillError** eventos permite ao utilizador determinar se é ou não a preenchimento deve continuar a operação depois de ocorre o erro. Exemplos de quando o **FillError** podem ocorrer eventos são: - os dados a ser adicionados a um `DataSet` não pode ser convertido para um tipo de tempo de execução de idioma comum sem perda de precisão.      -A linha a serem adicionada contém dados que viola uma restrição que tem de ser forçada num `DataColumn` no `DataSet`."
  syntax:
    content: public event System.Data.FillErrorEventHandler FillError;
    return:
      type: System.Data.FillErrorEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillLoadOption
  id: FillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define o <xref href=&quot;System.Data.LoadOption&quot;> </xref> que determina a forma como o adaptador preenche a <xref href=&quot;System.Data.DataTable&quot;> </xref> do <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public System.Data.LoadOption FillLoadOption { get; set; }
    return:
      type: System.Data.LoadOption
      description: "A <xref href=&quot;System.Data.LoadOption&quot;></xref> value."
  overload: System.Data.Common.DataAdapter.FillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona um <xref href=&quot;System.Data.DataTable&quot;> </xref> para especificado <xref href=&quot;System.Data.DataSet&quot;> </xref> e configura o esquema para que corresponda ao que, na origem de dados, com base no especificado <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "O método FillSchema obtém o esquema da origem de dados utilizando o <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> O objeto de ligação associado a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>tem de ser válido, mas não têm de estar aberta.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Se a ligação está fechada antes de é chamado FillSchema, é aberto para obter dados e, em seguida, fechado. Se a ligação está aberta antes de é chamado FillSchema, este irá permanecer aberta.       Uma operação FillSchema adiciona uma <xref:System.Data.DataTable>para o destino <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Em seguida, adiciona as colunas para o <xref:System.Data.DataColumnCollection>do <xref:System.Data.DataTable>e configura o seguinte <xref:System.Data.DataColumn>Propriedades caso existam na origem de dados:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Tem de definir <xref:System.Data.DataColumn.AutoIncrementStep%2A>e <xref:System.Data.DataColumn.AutoIncrementSeed%2A>separadamente.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A>FillSchema também configura a <xref:System.Data.DataTable.PrimaryKey%2A>e <xref:System.Data.DataTable.Constraints%2A>Propriedades, de acordo com as seguintes regras: - se uma ou mais colunas de chaves primárias são devolvidas pela <xref:System.Data.IDbDataAdapter.SelectCommand%2A>são utilizados como as colunas de chave primárias para <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Se nenhuma coluna chave primária é devolvida, mas são exclusivas colunas, as colunas exclusivas são utilizadas como a chave primária se, e apenas se, todas as colunas exclusivas nonnullable. Se qualquer uma das colunas são nula, um <xref:System.Data.UniqueConstraint>é adicionado ao <xref:System.Data.ConstraintCollection>, mas o <xref:System.Data.DataTable.PrimaryKey%2A>propriedade não está definida.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      -Se as colunas de chave primárias e colunas exclusivas são devolvidas, as colunas de chave primárias são utilizadas como as colunas de chave primárias <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > O arquivo de dados subjacente pode permitir que os atributos de coluna que não são suportados num <xref:System.Data.DataColumn>, que faz com que alguns atributos de coluna para não convertidos corretamente.</xref:System.Data.DataColumn> Por exemplo, [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] permite uma coluna de identidade com um tipo de dados de tinyint enquanto um <xref:System.Data.DataColumn>só permite Int16, Int32 e Int64 ter o <xref:System.Data.DataColumn.AutoIncrement%2A>propriedade definida.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn> `FillSchema`ignora silenciosamente casos onde a <xref:System.Data.DataColumn>com precisão não é possível espelhar a origem de dados e emite sem exceção.</xref:System.Data.DataColumn>       Tenha em atenção que as chaves primárias e restrições exclusivas são adicionadas para o <xref:System.Data.ConstraintCollection>, de acordo com as regras anteriores, mas outra restrição de tipos não foram adicionados.</xref:System.Data.ConstraintCollection>       Se um único cluster índice é definido uma coluna ou colunas existentes numa tabela de SQL Server e a restrição de chave primária está definida num conjunto separado de colunas, em seguida, os nomes das colunas no índice em cluster vai ser devolvidos. Para devolver o nome ou nomes das colunas de chaves primárias, utilize uma sugestão de consulta com a instrução SELECT que especifica o nome do índice de chave primária. Para obter mais informações sobre como especificar sugestões de consulta, consulte [sugestão de consulta (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Se o <xref:System.Data.Common.DataAdapter>encontros duplicado colunas ao preencher um <xref:System.Data.DataTable>, gera os nomes das colunas subsequentes, utilizando o padrão &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, etc.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter> Se os dados de entrada contém colunas sem nome, estes são colocados no <xref:System.Data.DataSet>, de acordo com o padrão &quot;Coluna1&quot;, &quot;Coluna2&quot; e assim sucessivamente.</xref:System.Data.DataSet> Quando vários conjuntos de resultados são adicionados para o <xref:System.Data.DataSet>cada conjunto de resultados é colocado numa tabela separada.</xref:System.Data.DataSet> Conjuntos de resultados adicionais são denominados acrescentando valores integrais para o nome da tabela especificado (por exemplo, &quot;Tabela&quot;, &quot;Table1&quot;, &quot;Tabela2&quot; e assim sucessivamente). As aplicações utilizando nomes de coluna e a tabela devem certificar-se de que não ocorrem conflitos com estes padrões de nomenclatura.       FillSchema não devolver quaisquer linhas. Utilize o <xref:System.Data.Common.DataAdapter.Fill%2A>método para adicionar as linhas a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter.Fill%2A>      > [!NOTE] > Quando o processamento de instruções de SQL de batch que devolvem resultados vários, a implementação de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>para o .NET Framework Data Provider para OLE DB obtém as informações de esquema para apenas o resultado primeiro.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Para obter informações de esquema para vários resultados, utilize <xref:System.Data.Common.DbDataAdapter.Fill%2A>com o <xref:System.Data.MissingSchemaAction>definido como `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "O <xref href=&quot;System.Data.DataSet&quot;> </xref> para ser preenchidos com o esquema da origem de dados."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Um do <xref href=&quot;System.Data.SchemaType&quot;> </xref> valores."
    return:
      type: System.Data.DataTable[]
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> devolveu o objeto que contém as informações de esquema da origem de dados."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona um <xref href=&quot;System.Data.DataTable&quot;> </xref> para especificado <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "O <xref href=&quot;System.Data.DataTable&quot;> </xref> preenchimento do <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Um do <xref href=&quot;System.Data.SchemaType&quot;> </xref> valores."
    - id: dataReader
      type: System.Data.IDataReader
      description: "O <xref href=&quot;System.Data.IDataReader&quot;> </xref> a ser utilizado como origem de dados quando ao preencher a <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> devolveu o objeto que contém as informações de esquema da origem de dados."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona um <xref href=&quot;System.Data.DataTable&quot;> </xref> para especificado <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "O <xref href=&quot;System.Data.DataTable&quot;> </xref> preenchimento do <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Um do <xref href=&quot;System.Data.SchemaType&quot;> </xref> valores."
    - id: srcTable
      type: System.String
      description: "O nome da tabela de origem a utilizar para mapeamento de tabela."
    - id: dataReader
      type: System.Data.IDataReader
      description: "O <xref href=&quot;System.Data.IDataReader&quot;> </xref> a ser utilizado como origem de dados quando ao preencher a <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable[]
      description: "Uma referência a uma coleção de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos que foram adicionados para o <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.GetFillParameters
  id: GetFillParameters
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém os parâmetros definidos pelo utilizador ao executar uma instrução SQL SELECT."
  syntax:
    content: public virtual System.Data.IDataParameter[] GetFillParameters ();
    parameters: []
    return:
      type: System.Data.IDataParameter[]
      description: "Uma matriz de <xref href=&quot;System.Data.IDataParameter&quot;> </xref> objetos que contém os parâmetros definido pelo utilizador."
  overload: System.Data.Common.DataAdapter.GetFillParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.HasTableMappings
  id: HasTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Indica se um <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> foi criado."
  syntax:
    content: protected bool HasTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> tiver sido criado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.HasTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  id: MissingMappingAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina a ação a tomar quando os dados recebidos não tem uma tabela ou coluna correspondente."
  remarks: "A <xref:System.Data.Common.DataAdapter.TableMappings%2A>propriedade fornece o mapeamento entre os registos devolvidos e <xref:System.Data.DataSet>.</xref:System.Data.DataSet> principal</xref:System.Data.Common.DataAdapter.TableMappings%2A>"
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_4_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_4_1.cs)]"
  syntax:
    content: public System.Data.MissingMappingAction MissingMappingAction { get; set; }
    return:
      type: System.Data.MissingMappingAction
      description: "Um do <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> valores. A predefinição é <xref uid=&quot;langword_csharp_Passthrough&quot; name=&quot;Passthrough&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingMappingAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O conjunto de valor não é um do <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  id: MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina a ação a tomar quando existente <xref href=&quot;System.Data.DataSet&quot;> </xref> esquema não correspondem aos dados de entrada."
  remarks: ''
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_9_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_9_1.cs)]"
  syntax:
    content: public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }
    return:
      type: System.Data.MissingSchemaAction
      description: "Um do <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> valores. A predefinição é <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingSchemaAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O conjunto de valor não é um do <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  id: OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Invocada quando ocorre um erro durante uma <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: protected virtual void OnFillError (System.Data.FillErrorEventArgs value);
    parameters:
    - id: value
      type: System.Data.FillErrorEventArgs
      description: "A <xref href=&quot;System.Data.FillErrorEventArgs&quot;></xref> object."
  overload: System.Data.Common.DataAdapter.OnFillError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  id: ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Repõe <> </> *> para o estado predefinido e causas &lt;xref:System.Data.Common.DataAdapter.Fill%2A?displayProperty=fullName&gt; que respeite <> </> *>."
  syntax:
    content: public void ResetFillLoadOption ();
    parameters: []
  overload: System.Data.Common.DataAdapter.ResetFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  id: ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define se a <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> método deverá devolver valores específicos do fornecedor ou valores em conformidade com CLS comuns."
  remarks: "O valor predefinido é `false`."
  syntax:
    content: public virtual bool ReturnProviderSpecificTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> método deverá devolver valores específicos do fornecedor; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para devolver valores em conformidade com CLS comuns."
  overload: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  id: ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se o <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>propriedade deve ser persistente.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  syntax:
    content: public virtual bool ShouldSerializeAcceptChangesDuringFill ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>propriedade é persistente; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  id: ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se o <xref:System.Data.Common.DataAdapter.FillLoadOption*>propriedade deve ser persistente.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  syntax:
    content: public virtual bool ShouldSerializeFillLoadOption ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Data.Common.DataAdapter.FillLoadOption*>propriedade é persistente; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  id: ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se um ou mais <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objetos existem e devem ser persistente."
  syntax:
    content: protected virtual bool ShouldSerializeTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um ou mais <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objetos existem; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  id: System#Data#IDataAdapter#TableMappings
  isEii: true
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Indica como uma tabela de origem está mapeada para uma tabela de conjunto de dados."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.Common.DataAdapter>instância é convertida para um <xref:System.Data.IDataAdapter>interface.</xref:System.Data.IDataAdapter> </xref:System.Data.Common.DataAdapter>       Fore obter mais informações, consulte <xref:System.Data.IDataAdapter.TableMappings%2A>.</xref:System.Data.IDataAdapter.TableMappings%2A>"
  syntax:
    content: System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }
    return:
      type: System.Data.ITableMappingCollection
      description: "Uma coleção que fornece o mapeamento entre os registos devolvidos principal e o <xref href=&quot;System.Data.DataSet&quot;> </xref>. O valor predefinido é uma coleção vazia."
  overload: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.TableMappings
  id: TableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém uma coleção que fornece o mapeamento entre uma tabela de origem principal e um <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Quando reconciliar as alterações, <xref:System.Data.Common.DataAdapter>utiliza a <xref:System.Data.Common.DataTableMappingCollection>coleção para associar os nomes de colunas utilizados pela origem de dados com os nomes de coluna utilizados pelo <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Common.DataTableMappingCollection> </xref:System.Data.Common.DataAdapter>"
  example:
  - "The following example uses a derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to add <xref:System.Data.Common.DataTableMapping> objects to its TableMappings collection and display a list of those mapped source tables. This example assumes that an <xref:System.Data.OleDb.OleDbDataAdapter> has already been created.  \n  \n [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_14_1.vb)]\n [!code-cs[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_14_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMappingCollection TableMappings { get; }
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Uma coleção que fornece o mapeamento entre os registos devolvidos principal e o <xref href=&quot;System.Data.DataSet&quot;> </xref>. O valor predefinido é uma coleção vazia."
  overload: System.Data.Common.DataAdapter.TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  id: Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Chama as respetivas instruções INSERT, UPDATE ou DELETE para cada inserir, atualizar ou eliminar linha especificado na <xref href=&quot;System.Data.DataSet&quot;> </xref> de um <xref href=&quot;System.Data.DataTable&quot;> </xref> com o nome &quot;Tabela&quot;."
  remarks: "A atualização é executada numa base por linha. Para cada linha inserida, modificação e eliminada, o método de atualização determina o tipo de alteração que efetuou na mesma (inserir, atualizar ou eliminar). Dependendo do tipo de alteração, o `Insert`, `Update,` ou `Delete` modelo comando executa para propagar a linha modificada para a origem de dados. Quando uma aplicação chama o método de atualização, o <xref:System.Data.Common.DataAdapter>examina o <xref:System.Data.DataRow.RowState%2A>propriedade e executa as instruções INSERT, UPDATE ou DELETE necessárias iteratively para cada linha, com base na ordem dos índices configurados no <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DataAdapter> Por exemplo, a atualização poderá executar uma instrução DELETE, seguida de uma instrução INSERT e, em seguida, outra instrução DELETE, devido a ordenação de linhas na <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Deve ser salientado que estas instruções não são executadas como um processo em lote; cada linha é atualizada individualmente. Uma aplicação pode chamar o <xref:System.Data.DataSet.GetChanges%2A>método em situações onde tem de controlar a sequência de tipos de instrução (por exemplo, INSIRA antes da ATUALIZAÇÃO).</xref:System.Data.DataSet.GetChanges%2A> Para obter mais informações, consulte [atualizar as origens de dados com DataAdapters](~/add/includes/ajax-current-ext-md.md).       Se as instruções INSERT, UPDATE ou DELETE não foram especificadas, o método de atualização gera uma exceção. No entanto, pode criar um <xref:System.Data.SqlClient.SqlCommandBuilder>ou <xref:System.Data.OleDb.OleDbCommandBuilder>objeto para gerar automaticamente as instruções SQL para atualizações de tabela única se definir o `SelectCommand` propriedade de um fornecedor de dados .NET Framework.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Em seguida, quaisquer instruções SQL adicionais que não definidas foram geradas pelo **CommandBuilder**. Esta lógica geração necessita de informações de coluna chave estar presente no <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Para obter mais informações consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md).       O método de atualização obtém linhas da tabela listada no mapeamento primeiro antes de efetuar uma atualização. A atualização, em seguida, atualiza a linha com o valor da <xref:System.Data.IDbCommand.UpdatedRowSource%2A>propriedade.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> As linhas adicionais devolvidas são ignoradas.       Após o carregamento de dados novamente para o <xref:System.Data.DataSet>, a <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>o evento é gerado, permitindo que o utilizador inspecionar os reconciliado <xref:System.Data.DataSet>linha e quaisquer parâmetros devolvidos pelo comando de saída.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Depois de uma linha de atualizações com êxito, as alterações para essa linha são aceites.       Quando utilizar a atualização, a ordem de execução é o seguinte: 1.  Os valores existentes no <xref:System.Data.DataRow>são movidas para os valores de parâmetros.</xref:System.Data.DataRow>      2.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>o evento é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Executa o comando.      4.  Se o comando está definido como `FirstReturnedRecord`, em seguida, o primeiro devolveu o resultado é colocado na <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Se existirem parâmetros de saída, estes são colocados em <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>o evento é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName>é chamado.</xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName> Isto irá elevar ambas as <xref:System.Data.DataTable.RowChanging?displayProperty=fullName>e os <xref:System.Data.DataTable.RowChanged?displayProperty=fullName>eventos de <xref:System.Data.DataRow>.</xref:System.Data.DataRow> atualizado</xref:System.Data.DataTable.RowChanged?displayProperty=fullName> </xref:System.Data.DataTable.RowChanging?displayProperty=fullName>       Cada comando associado <xref:System.Data.Common.DataAdapter>normalmente tem uma coleção de parâmetros associada.</xref:System.Data.Common.DataAdapter> Os parâmetros são mapeados para a linha atual através de `SourceColumn` e `SourceVersion` propriedades do fornecedor de dados a a.NET `Parameter` classe. `SourceColumn`refere-se a um <xref:System.Data.DataTable>coluna que o <xref:System.Data.Common.DataAdapter>referências para obter os valores de parâmetros para a linha atual.</xref:System.Data.Common.DataAdapter> </xref:System.Data.DataTable>       `SourceColumn`refere-se o nome da coluna não mapeados antes de quaisquer mapeamentos de tabela tem sido aplicados. Se `SourceColumn` refere-se a uma coluna não existente, a ação tomada depende de um dos seguintes <xref:System.Data.MissingMappingAction>valores.</xref:System.Data.MissingMappingAction>      | Valor de enumeração | Ação tomada |   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| Utilize os nomes de coluna de origem e os nomes das tabelas de <xref:System.Data.DataSet>esteja presente nenhum mapeamento. |   | `MissingMappingAction.Ignore`| A <xref:System.SystemException>é gerado.</xref:System.SystemException> </xref:System.Data.DataSet> Quando os mapeamentos são explicitamente definido, um mapeamento em falta para um parâmetro de entrada é normalmente o resultado de um erro. |   | `MissingMappingAction.Error`| É gerado um <xref:System.SystemException>. |       O `SourceColumn` propriedade também é utilizada para mapear o valor de saída ou parâmetros de entrada/saída de volta para o `DataSet`.</xref:System.SystemException> Uma exceção é gerada se refere a uma coluna não existente.       O `SourceVersion` propriedade de um fornecedor de dados de .NET `Parameter` classe determina se deve utilizar a versão Original, Current ou Proposed do valor de coluna. Esta capacidade é frequentemente utilizada para incluir valores originais na cláusula WHERE de uma instrução UPDATE para procurar as violações de simultaneidade otimista.       Chamar o <xref:System.Data.DataSet.AcceptChanges%2A>método ou <xref:System.Data.DataTable.AcceptChanges%2A>método irá consolidar todas as alterações na <xref:System.Data.DataSet>ou <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> Se um dos seguintes métodos é denominado antes do <xref:System.Data.Common.DbDataAdapter.Update%2A>método é denominado, sem alterações serão confirmadas quando o <xref:System.Data.Common.DbDataAdapter.Update%2A>método é denominado, a menos que foram feitas alterações adicionais desde <xref:System.Data.DataSet.AcceptChanges%2A>ou <xref:System.Data.DataTable.AcceptChanges%2A>foi chamado.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>      > [!NOTE] > Se ocorrer um erro ao atualizar uma linha, é emitida uma exceção e a execução da atualização foi descontinuada. Para continuar a operação de atualização sem gerar exceções quando é encontrado um erro, defina o <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>propriedade `true` antes de chamar <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Também pode responder erros numa base por linha dentro de `RowUpdated` eventos de um DataAdapter. Para continuar a operação de atualização sem gerar uma exceção no `RowUpdated` evento, defina a <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>propriedade de <xref:System.Data.Common.RowUpdatedEventArgs>para <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>   >> Para cada coluna propagadas para o onUpdate da origem de dados, deve ser adicionado um parâmetro para o `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`. O `SourceColumn` propriedade do parâmetro deve ser definida para o nome da coluna. Esta definição indica que o valor do parâmetro não está definido manualmente, mas é obtido a partir da coluna específica na linha atualmente processada."
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to Update the data source.  \n  \n [!code-cs[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_26_1.cs)]\n [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_26_1.vb)]"
  syntax:
    content: public virtual int Update (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "O <xref href=&quot;System.Data.DataSet&quot;> </xref> utilizado para atualizar a origem de dados."
    return:
      type: System.Int32
      description: "O número de linhas atualizadas com êxito a partir de <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A tabela de origem é inválida."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou numa zero registos afetados."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.DBConcurrencyException
  parent: System.Data
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
- uid: System.Data.Common.DataAdapter.#ctor
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
- uid: System.Data.Common.DataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
- uid: System.Data.Common.DataTableMappingCollection
  parent: System.Data.Common
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DataAdapter.FillError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.Common.DataAdapter.FillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
- uid: System.Data.SchemaType
  parent: System.Data
  isExternal: false
  name: SchemaType
  nameWithType: SchemaType
  fullName: System.Data.SchemaType
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
- uid: System.Data.Common.DataAdapter.GetFillParameters
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
- uid: System.Data.IDataParameter[]
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter[]
  spec.csharp:
  - uid: System.Data.IDataParameter
    name: IDataParameter
    nameWithType: IDataParameter
    fullName: IDataParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.HasTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
- uid: System.Data.MissingMappingAction
  parent: System.Data
  isExternal: false
  name: MissingMappingAction
  nameWithType: MissingMappingAction
  fullName: System.Data.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
- uid: System.Data.MissingSchemaAction
  parent: System.Data
  isExternal: false
  name: MissingSchemaAction
  nameWithType: MissingSchemaAction
  fullName: System.Data.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
- uid: System.Data.FillErrorEventArgs
  parent: System.Data
  isExternal: false
  name: FillErrorEventArgs
  nameWithType: FillErrorEventArgs
  fullName: System.Data.FillErrorEventArgs
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.ITableMappingCollection
  parent: System.Data
  isExternal: false
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
- uid: System.Data.Common.DataAdapter.TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
- uid: System.Data.Common.DataAdapter.#ctor*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals
  nameWithType: DataAdapter.CloneInternals
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings
  nameWithType: DataAdapter.CreateTableMappings
- uid: System.Data.Common.DataAdapter.Dispose*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose
  nameWithType: DataAdapter.Dispose
- uid: System.Data.Common.DataAdapter.Fill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill
  nameWithType: DataAdapter.Fill
- uid: System.Data.Common.DataAdapter.FillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
- uid: System.Data.Common.DataAdapter.FillSchema*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema
  nameWithType: DataAdapter.FillSchema
- uid: System.Data.Common.DataAdapter.GetFillParameters*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters
  nameWithType: DataAdapter.GetFillParameters
- uid: System.Data.Common.DataAdapter.HasTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings
  nameWithType: DataAdapter.HasTableMappings
- uid: System.Data.Common.DataAdapter.MissingMappingAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError
  nameWithType: DataAdapter.OnFillError
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption
  nameWithType: DataAdapter.ResetFillLoadOption
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings
  nameWithType: DataAdapter.ShouldSerializeTableMappings
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update
  nameWithType: DataAdapter.Update
