### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.ITable
  id: ITable
  children:
  - System.Data.Linq.ITable.Attach(System.Object)
  - System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  - System.Data.Linq.ITable.Attach(System.Object,System.Object)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  - System.Data.Linq.ITable.Context
  - System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  - System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  - System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  - System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  - System.Data.Linq.ITable.IsReadOnly
  langs:
  - csharp
  name: ITable
  nameWithType: ITable
  fullName: System.Data.Linq.ITable
  type: Interface
  summary: "Utilizado para cenários de consulta weakly escrito."
  remarks: "Para obter mais informações sobre os métodos, consulte <xref:System.Data.Linq.Table%601>.</xref:System.Data.Linq.Table%601>"
  syntax:
    content: 'public interface ITable : System.Collections.IEnumerable, System.Linq.IQueryable'
  implements:
  - System.Collections.IEnumerable
  - System.Linq.IQueryable
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object)
  id: Attach(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Anexa uma entidade a <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> num estado inalterado."
  remarks: "Para obter mais informações sobre como utilizar este método, consulte [obtenção de dados e operações de CUD em aplicações de camada de N (do LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "A entidade ligado."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  id: Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Anexa todas as entidades de uma coleção para o <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> um Estado modificado ou inalterado."
  remarks: "Para obter mais informações sobre como utilizar este método, consulte [obtenção de dados e operações de CUD em aplicações de camada de N (do LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity, bool asModified);
    parameters:
    - id: entity
      type: System.Object
      description: "A coleção de entidades."
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para anexar as entidades como modificada."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  id: Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Anexa uma entidade a <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> um Estado modificado ou inalterado especificando a entidade e o estado original."
  remarks: "Para obter mais informações sobre como utilizar este método, consulte [obtenção de dados e operações de CUD em aplicações de camada de N (do LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Attach (object entity, object original);
    parameters:
    - id: entity
      type: System.Object
      description: "A entidade ligado."
    - id: original
      type: System.Object
      description: "Uma instância do mesmo tipo de entidade com membros de dados que contêm os valores originais."
  overload: System.Data.Linq.ITable.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  id: AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Anexa todas as entidades de uma coleção para o <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> um Estado modificado ou inalterado."
  remarks: "Para obter mais informações sobre como utilizar este método, consulte [obtenção de dados e operações de CUD em aplicações de camada de N (do LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "A coleção de entidades."
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  id: AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Anexa todas as entidades de uma coleção para o <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> um Estado modificado ou inalterado."
  remarks: "Para obter mais informações sobre como utilizar este método, consulte [obtenção de dados e operações de CUD em aplicações de camada de N (do LINQ to SQL)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AttachAll (System.Collections.IEnumerable entities, bool asModified);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "A coleção de entidades."
    - id: asModified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para anexar as entidades como modificada."
  overload: System.Data.Linq.ITable.AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.Context
  id: Context
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Obtém o <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> que foi utilizado para obter esta <xref href=&quot;System.Data.Linq.ITable&quot;> </xref>."
  syntax:
    content: public System.Data.Linq.DataContext Context { get; }
    return:
      type: System.Data.Linq.DataContext
      description: "O <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> utilizado para obter o <xref href=&quot;System.Data.Linq.ITable&quot;> </xref>."
  overload: System.Data.Linq.ITable.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  id: DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Coloca todas as entidades da coleção para um <xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;> </xref> estado."
  remarks: "Chamar <xref:System.Data.Linq.DataContext.SubmitChanges%2A>para efetuar a eliminação real na base de dados.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "A coleção de que todos os itens são removidos."
  overload: System.Data.Linq.ITable.DeleteAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  id: DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Coloca uma entidade desta tabela para um <xref uid=&quot;langword_csharp_pending delete&quot; name=&quot;pending delete&quot; href=&quot;&quot;> </xref> estado."
  remarks: "Devem estar anexadas a entidades desligadas antes que podem ser eliminados. Chamar <xref:System.Data.Linq.DataContext.SubmitChanges%2A>para efetuar a eliminação real na base de dados.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void DeleteOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "A entidade seja removida."
  overload: System.Data.Linq.ITable.DeleteOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  id: GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Devolve uma matriz de membros modificados que contêm os respetivos valores atuais e originais."
  syntax:
    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "A entidade a partir da qual pode obter a matriz."
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: "Devolve uma matriz de membros modificados que contêm os respetivos valores atuais e originais."
  overload: System.Data.Linq.ITable.GetModifiedMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  id: GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Obtém os valores originais."
  remarks: "Tenha em atenção o seguinte:-o argumento de entidade tem de ser não nulo. Caso contrário, é emitida uma exceção de argumento nulo.      -Na case de tipo seguro (`TEntity`) método, o tipo tem de ser mapeado e tem de ser um tipo de entidade. Ou seja, tem de ter as informações de ID de objeto no respetivo mapeamento. Caso contrário, é emitida uma exceção de tipo errado."
  syntax:
    content: public object GetOriginalEntityState (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "A entidade cujo valor original é possível obter."
    return:
      type: System.Object
      description: "Uma cópia da entidade original. O valor é nulo se a entidade transmitida não é controlada. Entidades desligadas enviadas Retroceder por um cliente devem ser ligadas antes do <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> pode começar a monitorizar o respetivo estado. O &quot;estado original&quot; de uma entidade anexado recentemente, é estabelecido com base nos valores fornecidos pelo cliente. O contexto de dados não controlar o estado de desligado entidades."
  overload: System.Data.Linq.ITable.GetOriginalEntityState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  id: InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Adiciona todas as entidades de uma coleção para o <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> num <xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;> </xref> estado."
  remarks: "Chamar <xref:System.Data.Linq.DataContext.SubmitChanges%2A>para efetuar a inserção real na base de dados.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "As entidades para adicionar."
  overload: System.Data.Linq.ITable.InsertAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  id: InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Adiciona uma entidade num <xref uid=&quot;langword_csharp_pending insert&quot; name=&quot;pending insert&quot; href=&quot;&quot;> </xref> estado para esta tabela."
  remarks: "Chamar <xref:System.Data.Linq.DataContext.SubmitChanges%2A>para efetuar a inserção real na base de dados.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  syntax:
    content: public void InsertOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "A entidade seja adicionado."
  overload: System.Data.Linq.ITable.InsertOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.ITable.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Linq.ITable
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: "Indica se o tipo das entidades contidos neste <xref href=&quot;System.Data.Linq.ITable&quot;> </xref> instância tem uma chave primária."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o tipo de entidade não tem uma chave primária; caso contrário, FALSO."
  overload: System.Data.Linq.ITable.IsReadOnly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.ITable.Attach(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object)
  nameWithType: ITable.Attach(Object)
  fullName: System.Data.Linq.ITable.Attach(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Boolean)
  nameWithType: ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.ITable.Attach(Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ITable.Attach(System.Object,System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach(Object,Object)
  nameWithType: ITable.Attach(Object,Object)
  fullName: System.Data.Linq.ITable.Attach(Object,Object)
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable)
  nameWithType: ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll(IEnumerable,Boolean)
  nameWithType: ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
- uid: System.Data.Linq.ITable.Context
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
  fullName: System.Data.Linq.ITable.Context
- uid: System.Data.Linq.DataContext
  parent: System.Data.Linq
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: System.Data.Linq.DataContext
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit(IEnumerable)
  nameWithType: ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit(Object)
  nameWithType: ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.ITable.DeleteOnSubmit(Object)
- uid: System.Data.Linq.ITable.GetModifiedMembers(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers(Object)
  nameWithType: ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.ITable.GetModifiedMembers(Object)
- uid: System.Data.Linq.ModifiedMemberInfo[]
  parent: System.Data.Linq
  isExternal: false
  name: ModifiedMemberInfo
  nameWithType: ModifiedMemberInfo
  fullName: System.Data.Linq.ModifiedMemberInfo[]
  spec.csharp:
  - uid: System.Data.Linq.ModifiedMemberInfo
    name: ModifiedMemberInfo
    nameWithType: ModifiedMemberInfo
    fullName: ModifiedMemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Linq.ITable.GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState(Object)
  nameWithType: ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.ITable.GetOriginalEntityState(Object)
- uid: System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit(IEnumerable)
  nameWithType: ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.ITable.InsertOnSubmit(System.Object)
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit(Object)
  nameWithType: ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.ITable.InsertOnSubmit(Object)
- uid: System.Data.Linq.ITable.IsReadOnly
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
  fullName: System.Data.Linq.ITable.IsReadOnly
- uid: System.Data.Linq.ITable.Attach*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Attach
  nameWithType: ITable.Attach
- uid: System.Data.Linq.ITable.AttachAll*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: AttachAll
  nameWithType: ITable.AttachAll
- uid: System.Data.Linq.ITable.Context*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: Context
  nameWithType: ITable.Context
- uid: System.Data.Linq.ITable.DeleteAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteAllOnSubmit
  nameWithType: ITable.DeleteAllOnSubmit
- uid: System.Data.Linq.ITable.DeleteOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: DeleteOnSubmit
  nameWithType: ITable.DeleteOnSubmit
- uid: System.Data.Linq.ITable.GetModifiedMembers*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetModifiedMembers
  nameWithType: ITable.GetModifiedMembers
- uid: System.Data.Linq.ITable.GetOriginalEntityState*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: GetOriginalEntityState
  nameWithType: ITable.GetOriginalEntityState
- uid: System.Data.Linq.ITable.InsertAllOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertAllOnSubmit
  nameWithType: ITable.InsertAllOnSubmit
- uid: System.Data.Linq.ITable.InsertOnSubmit*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: InsertOnSubmit
  nameWithType: ITable.InsertOnSubmit
- uid: System.Data.Linq.ITable.IsReadOnly*
  parent: System.Data.Linq.ITable
  isExternal: false
  name: IsReadOnly
  nameWithType: ITable.IsReadOnly
