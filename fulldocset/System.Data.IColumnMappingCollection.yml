### YamlMime:ManagedReference
items:
- uid: System.Data.IColumnMappingCollection
  id: IColumnMappingCollection
  children:
  - System.Data.IColumnMappingCollection.Add(System.String,System.String)
  - System.Data.IColumnMappingCollection.Contains(System.String)
  - System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)
  - System.Data.IColumnMappingCollection.IndexOf(System.String)
  - System.Data.IColumnMappingCollection.Item(System.String)
  - System.Data.IColumnMappingCollection.RemoveAt(System.String)
  langs:
  - csharp
  name: IColumnMappingCollection
  nameWithType: IColumnMappingCollection
  fullName: System.Data.IColumnMappingCollection
  type: Interface
  summary: "Contém uma coleção de objetos de DataColumnMapping e é implementado pelo <xref href=&quot;System.Data.Common.DataColumnMappingCollection&quot;> </xref>, que é utilizado em comum pelos fornecedores de dados .NET Framework."
  remarks: "A interface IColumnMappingCollection permite uma classe inheriting implementar uma coleção de ColumnMapping. Para obter mais informações, consulte [DataAdapter DataTable e mapeamentos DataColumn](~/add/includes/ajax-current-ext-md.md).       Uma aplicação não cria uma instância da IColumnMappingCollection interface diretamente, mas cria uma instância de uma classe que herda IColumnMappingCollection.       As classes que herdam IColumnMappingCollection tem de implementar membros herdados todas as e definir normalmente membros adicionais para adicionar a funcionalidade específica do fornecedor. Por exemplo, a interface IColumnMappingCollection define o <xref:System.Data.IColumnMappingCollection.RemoveAt%2A>método.</xref:System.Data.IColumnMappingCollection.RemoveAt%2A> Por sua vez, a <xref:System.Data.Common.DataTableMappingCollection>classe herda este método e define duas sobrecargas adicionais de <xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A>.</xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A> </xref:System.Data.Common.DataTableMappingCollection>"
  example:
  - "The following example uses an instance of the derived class, <xref:System.Data.Common.DataTableMapping>, to <xref:System.Data.Common.DataColumnMappingCollection.Add%2A> several <xref:System.Data.Common.DataColumnMapping> objects to its <xref:System.Data.Common.DataTableMapping.ColumnMappings%2A> collection, and then displays a list of those mapped source tables. This example assumes that a <xref:System.Data.Common.DataTableMapping> has already been created.  \n  \n [!code-vb[Classic WebData DataColumnMappingCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.icolumnmap_1_1.vb)]\n [!code-cs[Classic WebData DataColumnMappingCollection Example#1](~/add/codesnippet/csharp/t-system.data.icolumnmap_1_1.cs)]"
  syntax:
    content: 'public interface IColumnMappingCollection : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: IColumnMappingCollection.Add(String,String)
  fullName: System.Data.IColumnMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adiciona um objeto de ColumnMapping a coleção de ColumnMapping utilizando a coluna de origem e <xref href=&quot;System.Data.DataSet&quot;> </xref> nomes de colunas."
  syntax:
    content: public System.Data.IColumnMapping Add (string sourceColumnName, string dataSetColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "O nome de maiúsculas e minúsculas da coluna de origem."
    - id: dataSetColumnName
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.DataSet&quot;> </xref> coluna."
    return:
      type: System.Data.IColumnMapping
      description: "O objeto de ColumnMapping que foi adicionado à coleção."
  overload: System.Data.IColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: IColumnMappingCollection.Contains(String)
  fullName: System.Data.IColumnMappingCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.Common.DataColumnMappingCollection&quot;> </xref> contém um <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> objeto com o nome de coluna de origem especificada."
  syntax:
    content: public bool Contains (string sourceColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "O nome de maiúsculas e minúsculas da coluna de origem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> objeto com o nome de coluna de origem especificada existe, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IColumnMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)
  id: GetByDataSetColumn(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: GetByDataSetColumn(String)
  nameWithType: IColumnMappingCollection.GetByDataSetColumn(String)
  fullName: System.Data.IColumnMappingCollection.GetByDataSetColumn(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o objeto de ColumnMapping com especificado <xref href=&quot;System.Data.DataSet&quot;> </xref> nome da coluna."
  syntax:
    content: public System.Data.IColumnMapping GetByDataSetColumn (string dataSetColumnName);
    parameters:
    - id: dataSetColumnName
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.DataSet&quot;> </xref> coluna dentro da coleção."
    return:
      type: System.Data.IColumnMapping
      description: "O objeto de ColumnMapping com especificado <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> nome da coluna."
  overload: System.Data.IColumnMappingCollection.GetByDataSetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: IColumnMappingCollection.IndexOf(String)
  fullName: System.Data.IColumnMappingCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém a localização do <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> objeto com o nome de coluna de origem especificada. O nome é maiúsculas e minúsculas."
  remarks: ''
  example:
  - "The following example searches for an instance of the derived class, <xref:System.Data.Common.DataColumnMapping>, with the given source column name within a <xref:System.Data.Common.DataColumnMappingCollection> collection. If the <xref:System.Data.Common.DataColumnMapping> exists, the example displays the name and the index of the mapping. If the mapping does not exist, the example displays an error. This example assumes that a <xref:System.Data.Common.DataColumnMappingCollection> collection has been created.  \n  \n [!code-cs[Classic WebData DataColumnMappingCollection.this1 Example#1](~/add/codesnippet/csharp/m-system.data.icolumnmap_1_1.cs)]\n [!code-vb[Classic WebData DataColumnMappingCollection.this1 Example#1](~/add/codesnippet/visualbasic/m-system.data.icolumnmap_1_1.vb)]"
  syntax:
    content: public int IndexOf (string sourceColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "O nome de maiúsculas e minúsculas da coluna de origem."
    return:
      type: System.Int32
      description: "A localização com base em zero do <xref uid=&quot;langword_csharp_DataColumnMapping&quot; name=&quot;DataColumnMapping&quot; href=&quot;&quot;> </xref> objeto com o nome de coluna de origem especificada."
  overload: System.Data.IColumnMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: IColumnMappingCollection.Item(String)
  fullName: System.Data.IColumnMappingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém ou define o <xref href=&quot;System.Data.IColumnMapping&quot;> </xref> objeto especificado com <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> nome."
  syntax:
    content: public object this[string index] { get; set; }
    parameters:
    - id: index
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> nome do <xref uid=&quot;langword_csharp_IColumnMapping&quot; name=&quot;IColumnMapping&quot; href=&quot;&quot;> </xref> objeto localizar."
    return:
      type: System.Object
      description: "O <xref uid=&quot;langword_csharp_IColumnMapping&quot; name=&quot;IColumnMapping&quot; href=&quot;&quot;> </xref> objeto especificado com <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> nome."
  overload: System.Data.IColumnMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: RemoveAt(String)
  nameWithType: IColumnMappingCollection.RemoveAt(String)
  fullName: System.Data.IColumnMappingCollection.RemoveAt(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o <xref href=&quot;System.Data.IColumnMapping&quot;> </xref> objeto especificado com <xref:System.Data.IColumnMapping.SourceColumn*>nome da coleção.</xref:System.Data.IColumnMapping.SourceColumn*>"
  remarks: ''
  example:
  - "The following example searches for an instance of the derived class, <xref:System.Data.Common.DataColumnMapping>, with the given `SourceColumn` name within a <xref:System.Data.Common.DataColumnMappingCollection> collection. If the <xref:System.Data.Common.DataColumnMapping> exists, the mapping is removed. This example assumes that a <xref:System.Data.Common.DataColumnMappingCollection> collection has been created.  \n  \n [!code-cs[Classic WebData DataColumnMappingCollection.RemoveAt1 Example#1](~/add/codesnippet/csharp/m-system.data.icolumnmap_0_1.cs)]\n [!code-vb[Classic WebData DataColumnMappingCollection.RemoveAt1 Example#1](~/add/codesnippet/visualbasic/m-system.data.icolumnmap_0_1.vb)]"
  syntax:
    content: public void RemoveAt (string sourceColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "As maiúsculas e minúsculas <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> nome."
  overload: System.Data.IColumnMappingCollection.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> não existe nenhum objecto com especificado <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> nome."
  platform:
  - net462
references:
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.IColumnMappingCollection.Add(System.String,System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: IColumnMappingCollection.Add(String,String)
  fullName: System.Data.IColumnMappingCollection.Add(String,String)
- uid: System.Data.IColumnMapping
  parent: System.Data
  isExternal: false
  name: IColumnMapping
  nameWithType: IColumnMapping
  fullName: System.Data.IColumnMapping
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IColumnMappingCollection.Contains(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Contains(String)
  nameWithType: IColumnMappingCollection.Contains(String)
  fullName: System.Data.IColumnMappingCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: GetByDataSetColumn(String)
  nameWithType: IColumnMappingCollection.GetByDataSetColumn(String)
  fullName: System.Data.IColumnMappingCollection.GetByDataSetColumn(String)
- uid: System.Data.IColumnMappingCollection.IndexOf(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: IColumnMappingCollection.IndexOf(String)
  fullName: System.Data.IColumnMappingCollection.IndexOf(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IColumnMappingCollection.Item(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Item(String)
  nameWithType: IColumnMappingCollection.Item(String)
  fullName: System.Data.IColumnMappingCollection.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IColumnMappingCollection.RemoveAt(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: RemoveAt(String)
  nameWithType: IColumnMappingCollection.RemoveAt(String)
  fullName: System.Data.IColumnMappingCollection.RemoveAt(String)
- uid: System.Data.IColumnMappingCollection.Add*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Add
  nameWithType: IColumnMappingCollection.Add
- uid: System.Data.IColumnMappingCollection.Contains*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Contains
  nameWithType: IColumnMappingCollection.Contains
- uid: System.Data.IColumnMappingCollection.GetByDataSetColumn*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: GetByDataSetColumn
  nameWithType: IColumnMappingCollection.GetByDataSetColumn
- uid: System.Data.IColumnMappingCollection.IndexOf*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: IColumnMappingCollection.IndexOf
- uid: System.Data.IColumnMappingCollection.Item*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Item
  nameWithType: IColumnMappingCollection.Item
- uid: System.Data.IColumnMappingCollection.RemoveAt*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: IColumnMappingCollection.RemoveAt
