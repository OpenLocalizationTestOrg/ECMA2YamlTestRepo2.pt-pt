### YamlMime:ManagedReference
items:
- uid: System.Configuration.LongValidator
  id: LongValidator
  children:
  - System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)
  - System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)
  - System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)
  - System.Configuration.LongValidator.CanValidate(System.Type)
  - System.Configuration.LongValidator.Validate(System.Object)
  langs:
  - csharp
  name: LongValidator
  nameWithType: LongValidator
  fullName: System.Configuration.LongValidator
  type: Class
  summary: "Provides validation of an <xref:System.Int64> value."
  remarks: "The LongValidator is used to ensure a `long` (a 64-bit signed integer) meets specific criteria. The criteria for validation is established when an instance of the LongValidator class is created. The <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%29> constructor ensures that the `long` value that is being validated adheres to both a minimum and a maximum length. The <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> constructor checks both the minimum and maximum <xref:System.Int64> values, as well as whether the validation range is exclusive. The <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%2CSystem.Int64%29> constructor checks the previous three parameters and also checks whether the <xref:System.Int64> value is equal to a specific resolution value.       The <xref:System.Configuration.LongValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.LongValidator.Validate%2A> method."
  example:
  - "The following code example demonstrates how to use the LongValidator type.  \n  \n [!code-vb[System.Configuration.LongValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.l_1_1.vb)]\n [!code-cs[System.Configuration.LongValidator#1](~/add/codesnippet/csharp/t-system.configuration.l_1_1.cs)]"
  syntax:
    content: 'public class LongValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64)'
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: LongValidator(Int64,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.LongValidator&quot;></xref> class."
  remarks: "The LongValidator constructor ensures that the long value being verified adheres to both a minimum and a maximum length."
  syntax:
    content: public LongValidator (long minValue, long maxValue);
    parameters:
    - id: minValue
      type: System.Int64
      description: "An <xref:System.Int64> value that specifies the minimum length of the <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref> value."
    - id: maxValue
      type: System.Int64
      description: "An <xref:System.Int64> value that specifies the maximum length of the <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref> value."
  overload: System.Configuration.LongValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)
  id: '#ctor(System.Int64,System.Int64,System.Boolean)'
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: LongValidator(Int64,Int64,Boolean)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.LongValidator&quot;></xref> class."
  remarks: "When the LongValidator constructor is used, it checks both the minimum and maximum <xref:System.Int64> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int64> value must not be between `minValue` and `maxValue`."
  example:
  - "The following code example demonstrates how to use the LongValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.LongValidator> class.  \n  \n [!code-vb[System.Configuration.LongValidator#2](~/add/codesnippet/visualbasic/2847484f-ec91-486e-9c9a-_1.vb)]\n [!code-cs[System.Configuration.LongValidator#2](~/add/codesnippet/csharp/2847484f-ec91-486e-9c9a-_1.cs)]"
  syntax:
    content: public LongValidator (long minValue, long maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int64
      description: "An <xref:System.Int64> value that specifies the minimum length of the <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref> value."
    - id: maxValue
      type: System.Int64
      description: "An <xref:System.Int64> value that specifies the maximum length of the <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref> value."
    - id: rangeIsExclusive
      type: System.Boolean
      description: "A <xref:System.Boolean> value that specifies whether the validation range is exclusive."
  overload: System.Configuration.LongValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)'
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: LongValidator(Int64,Int64,Boolean,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.LongValidator&quot;></xref> class."
  remarks: "When you specify the `resolution`, the <xref:System.Int64> value being validated must be equal to that value in order to pass validation."
  syntax:
    content: public LongValidator (long minValue, long maxValue, bool rangeIsExclusive, long resolution);
    parameters:
    - id: minValue
      type: System.Int64
      description: "An <xref:System.Int64> value that specifies the minimum length of the <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref> value."
    - id: maxValue
      type: System.Int64
      description: "An <xref:System.Int64> value that specifies the maximum length of the <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;></xref> value."
    - id: rangeIsExclusive
      type: System.Boolean
      description: "A <xref:System.Boolean> value that specifies whether the validation range is exclusive."
    - id: resolution
      type: System.Int64
      description: "An <xref:System.Int64> value that specifies a specific value that must be matched."
  overload: System.Configuration.LongValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is equal to or less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>maxValue</code> is less than <code>minValue</code>."
  platform:
  - net462
- uid: System.Configuration.LongValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: LongValidator.CanValidate(Type)
  fullName: System.Configuration.LongValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determines whether the type of the object can be validated."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.LongValidator> class.  \n  \n [!code-vb[System.Configuration.LongValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.l_0_1.vb)]\n [!code-cs[System.Configuration.LongValidator#3](~/add/codesnippet/csharp/m-system.configuration.l_0_1.cs)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type of object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>type</code> parameter matches an <xref:System.Int64> value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.LongValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LongValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.LongValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: LongValidator.Validate(Object)
  fullName: System.Configuration.LongValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determines whether the value of an object is valid."
  remarks: "The <xref:System.Configuration.LongValidator> class contains the rules necessary to validate an <xref:System.Int64> object. The rules are established when an instance of the <xref:System.Configuration.LongValidator> class is created. The object to validate is passed as a parameter of the Validate method."
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.LongValidator> class.  \n  \n [!code-vb[System.Configuration.LongValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.l_1_1.vb)]\n [!code-cs[System.Configuration.LongValidator#4](~/add/codesnippet/csharp/m-system.configuration.l_1_1.cs)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The value of an object."
  overload: System.Configuration.LongValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator(Int64,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator(Int64,Int64,Boolean)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator(Int64,Int64,Boolean,Int64)
  nameWithType: LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
  fullName: System.Configuration.LongValidator.LongValidator(Int64,Int64,Boolean,Int64)
- uid: System.Configuration.LongValidator.CanValidate(System.Type)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: LongValidator.CanValidate(Type)
  fullName: System.Configuration.LongValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.LongValidator.Validate(System.Object)
  parent: System.Configuration.LongValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: LongValidator.Validate(Object)
  fullName: System.Configuration.LongValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.LongValidator.#ctor*
  parent: System.Configuration.LongValidator
  isExternal: false
  name: LongValidator
  nameWithType: LongValidator.LongValidator
- uid: System.Configuration.LongValidator.CanValidate*
  parent: System.Configuration.LongValidator
  isExternal: false
  name: CanValidate
  nameWithType: LongValidator.CanValidate
- uid: System.Configuration.LongValidator.Validate*
  parent: System.Configuration.LongValidator
  isExternal: false
  name: Validate
  nameWithType: LongValidator.Validate
