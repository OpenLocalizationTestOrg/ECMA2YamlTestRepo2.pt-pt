### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.IPendingWork
  id: IPendingWork
  children:
  - System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  langs:
  - csharp
  name: IPendingWork
  nameWithType: IPendingWork
  fullName: System.Workflow.Runtime.IPendingWork
  type: Interface
  summary: "Fornece métodos para participar num lote de trabalho."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]A interface IPendingWork é fornecida para serviços que pretende participar no motor de runtime de fluxo de trabalho mecanismo de criação de batches. O mecanismo de lotes é especialmente útil para serviços que utilizam um arquivo de durável. Muitas vezes, é importante nestes casos, para manter a consistência entre o arquivo de durável utilizado pelo serviço de e o estado interno do motor de runtime do fluxo de trabalho.       Se pretender que o seu serviço para participar no fluxo de trabalho transação de criação de batches fornecida pelo <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, tem de implementar os métodos definidos pela IPendingWork interface.</xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> O motor de execução do fluxo de trabalho irá chamar o <xref:System.Workflow.Runtime.IPendingWork.Commit%2A>método no seu serviço para consolidar o lote.</xref:System.Workflow.Runtime.IPendingWork.Commit%2A>       O <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>classe implementa a interface de IPendingWork.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IPendingWork
  implements: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  id: Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Consolida a lista de itens de trabalho utilizando especificado <xref href=&quot;System.Transactions.Transaction&quot;> </xref> objeto."
  remarks: "O motor de execução do fluxo de trabalho chama o método de consolidação quando a semântica da sua organização ditarem que o trabalho pendentes no lote de trabalho deve ser consolidado. Quando chega a um ponto de consolidação, o motor de execução do fluxo de trabalho chama o método de consolidação em cada <xref:System.Workflow.Runtime.IPendingWork>objeto no respetivo batch de trabalho; o motor de execução do fluxo de trabalho passa o método de consolidação da coleção de itens associados que <xref:System.Workflow.Runtime.IPendingWork>objeto.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.IPendingWork> Todo o trabalho batch é concluída com êxito ou nenhum dos será efetuada com êxito. Deve acionar uma excepção se qualquer um dos itens de trabalho transmitidos para o método de consolidação na sua implementação não pode ser consolidada. Dependendo da sua implementação, poderá querer efetuar algumas reversão no seu método de consolidação se este não é possível consolidar os seus itens de trabalho. Se o motor de execução do fluxo de trabalho consolida todo o trabalho no lote de trabalho com êxito, aquele invoca <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>com o `succeeded` parâmetro definido como `true`; caso contrário, aquele invoca <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>com `succeeded` definido como `false`.</xref:System.Workflow.Runtime.IPendingWork.Complete%2A> </xref:System.Workflow.Runtime.IPendingWork.Complete%2A>"
  syntax:
    content: public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "O <xref href=&quot;System.Transactions.Transaction&quot;> </xref> associadas com o trabalho pendentes."
    - id: items
      type: System.Collections.ICollection
      description: "Os itens de trabalho ser consolidada."
  overload: System.Workflow.Runtime.IPendingWork.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  id: Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Chamado quando a transação foi concluída."
  remarks: "Se `succeeded` é `true`, a transação foi concluída com êxito e quaisquer recursos utilizados pelo lote de trabalho podem ser libertados. Se `succeeded` é `false`, a transação falhou. Dependendo da sua implementação, pode efetuar qualquer agregação adequada novamente no trabalho no lote de trabalho quando a transação falhar."
  syntax:
    content: public void Complete (bool succeeded, System.Collections.ICollection items);
    parameters:
    - id: succeeded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a transação foi bem sucedida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: items
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>dos itens de trabalho.</xref:System.Collections.ICollection>"
  overload: System.Workflow.Runtime.IPendingWork.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  id: MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Permite que os itens no lote de trabalho para assert se estes devem consolidar imediatamente."
  remarks: "Se devolver MustCommit `false`, o trabalho pode ser adiado para um ponto de consolidação futuras. Se qualquer um dos itens tem de ser consolidada, em seguida, regresse `true` e todos os itens serão confirmados o momento de consolidação atual. Para ver um debate sobre os pontos de consolidação possíveis, consulte a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>classe.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: public bool MustCommit (System.Collections.ICollection items);
    parameters:
    - id: items
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>dos itens de trabalho.</xref:System.Collections.ICollection>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se qualquer item na coleção tem de ser consolidada imediatamente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.IPendingWork.MustCommit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
- uid: System.Workflow.Runtime.IPendingWork.Commit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit
  nameWithType: IPendingWork.Commit
- uid: System.Workflow.Runtime.IPendingWork.Complete*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete
  nameWithType: IPendingWork.Complete
- uid: System.Workflow.Runtime.IPendingWork.MustCommit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit
  nameWithType: IPendingWork.MustCommit
