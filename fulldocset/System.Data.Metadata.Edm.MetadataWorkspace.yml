### YamlMime:ManagedReference
items:
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  id: MetadataWorkspace
  children:
  - System.Data.Metadata.Edm.MetadataWorkspace.#ctor
  - System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  - System.Data.Metadata.Edm.MetadataWorkspace.ClearCache
  - System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser
  - System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  - System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)
  - System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  - System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  - System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  - System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  langs:
  - csharp
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
  type: Class
  summary: "Representa o [!INCLUDE[vstecado](~/add/includes/vstecado-md.md)] metadados runtime componente do serviço que fornece suporte para obter metadados a partir de várias origens."
  remarks: "O <xref:System.Data.Metadata.Edm.MetadataWorkSpace>classe fornece um componente de serviço de tempo de execução central que pode utilizar para interagir com os metadados do modelo concetual no contexto de uma determinada aplicação.</xref:System.Data.Metadata.Edm.MetadataWorkSpace> Para obter mais informações, consulte [área de trabalho de metadados](http://msdn.microsoft.com/en-us/601aee56-3eda-4caa-9082-a01df76c5e84)."
  syntax:
    content: public sealed class MetadataWorkspace
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor
  id: '#ctor'
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: MetadataWorkspace()
  nameWithType: MetadataWorkspace.MetadataWorkspace()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> classe."
  syntax:
    content: public MetadataWorkspace ();
    parameters: []
  overload: System.Data.Metadata.Edm.MetadataWorkspace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})'
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  nameWithType: MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> utilizando os caminhos especificados e as assemblagens de classe."
  syntax:
    content: public MetadataWorkspace (System.Collections.Generic.IEnumerable<string> paths, System.Collections.Generic.IEnumerable<System.Reflection.Assembly> assembliesToConsider);
    parameters:
    - id: paths
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Os caminhos aos metadados de área de trabalho."
    - id: assembliesToConsider
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "Os nomes das assemblagens utilizados para construir a área de trabalho."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache
  id: ClearCache
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: ClearCache()
  nameWithType: MetadataWorkspace.ClearCache()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Limpa todas as entradas de cache de metadados."
  syntax:
    content: public static void ClearCache ();
    parameters: []
  overload: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser
  id: CreateEntitySqlParser
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: CreateEntitySqlParser()
  nameWithType: MetadataWorkspace.CreateEntitySqlParser()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Cria um <xref href=&quot;System.Data.Common.EntitySql.EntitySqlParser&quot;> </xref> configurado para utilizar o <xref href=&quot;System.Data.Metadata.Edm.DataSpace&quot;> </xref> espaço de dados."
  syntax:
    content: public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();
    parameters: []
    return:
      type: System.Data.Common.EntitySql.EntitySqlParser
      description: "O objeto criado parser."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  id: CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: CreateQueryCommandTree(DbExpression)
  nameWithType: MetadataWorkspace.CreateQueryCommandTree(DbExpression)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Cria uma nova <xref href=&quot;System.Data.Common.CommandTrees.DbQueryCommandTree&quot;> </xref> vinculado a esta área de trabalho de metadados baseada numa expressão de consulta especificada."
  syntax:
    content: public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);
    parameters:
    - id: query
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> que define a consulta."
    return:
      type: System.Data.Common.CommandTrees.DbQueryCommandTree
      description: "Um novo <xref href=&quot;System.Data.Common.CommandTrees.DbQueryCommandTree&quot;> </xref> com a expressão especificada porque esta está <xref:System.Data.Common.CommandTrees.DbQueryCommandTree.Query*>propriedade.</xref:System.Data.Common.CommandTrees.DbQueryCommandTree.Query*>"
  overload: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>query</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>query</code>
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  id: GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEdmSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> que corresponde ao tipo fornecido pelo parâmetro <code> objectSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "A <xref:System.Data.Metadata.Edm.EnumlType>que fornece o tipo de espaço de objeto.</xref:System.Data.Metadata.Edm.EnumlType>"
    return:
      type: System.Data.Metadata.Edm.EnumType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Se não houver nenhum tipo correspondente, este método devolve um valor nulo."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  id: GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEdmSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> que corresponde ao tipo fornecido pelo parâmetro <code> objectSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> que fornece o tipo de espaço de objeto."
    return:
      type: System.Data.Metadata.Edm.StructuralType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Se não houver nenhum tipo correspondente, este método devolve um valor nulo."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEntityContainer(String,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto com o nome do contentor de entidade especificado e o modelo de dados."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o contentor de entidades é procurado."
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Se não houver nenhum contentor de entidades, este método devolve um valor nulo; caso contrário, devolve o primeiro contentor de entidade."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  id: GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetEntityContainer(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto com o nome do contentor de entidade especificado e o modelo de dados."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o contentor de entidades é procurado."
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Se não houver nenhum contentor de entidades, este método devolve um valor nulo; caso contrário, devolve o primeiro contentor de entidade."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetFunctions(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve todas as sobrecargas das funções utilizando o nome especificado, o nome do espaço de nomes e o modelo de dados."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "O nome da função."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes da função."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual na qual são procuradas as funções."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Uma colecção do tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; que contém todas as funções que corresponde ao nome especificado no espaço de nomes especificado e um modelo de dados."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  id: GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetFunctions(String,String,DataSpace,Boolean)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve todas as sobrecargas das funções utilizando o nome especificado, o nome do espaço de nomes e o modelo de dados."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "O nome da função."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes da função."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual na qual são procuradas as funções."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Uma colecção do tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; que contém todas as funções que corresponde ao nome especificado no espaço de nomes especificado e um modelo de dados."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItem(String,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public T GetItem<T> (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  id: GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItem(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,Boolean,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public T GetItem<T> (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    - id: ignoreCase
      type: System.Boolean
      description: "A adicionar."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "A adicionar."
    return:
      type: T
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  id: GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItemCollection(DataSpace)
  nameWithType: MetadataWorkspace.GetItemCollection(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Obtém <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> itens."
  syntax:
    content: public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O <xref href=&quot;System.Data.Metadata.Edm.DataSpace&quot;> </xref> partir do qual obter itens."
    return:
      type: System.Data.Metadata.Edm.ItemCollection
      description: "O <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> itens."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)
  id: GetItems(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Obtém todos os itens no modelo de dados especificado."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.GlobalItem> GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual para os quais é necessária a lista de itens."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem}
      description: "Uma colecção do tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; que contém todos os itens no modelo de dados especificado."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItems*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)
  id: GetItems``1(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public System.Collections.ObjectModel.ReadOnlyCollection<T> GetItems<T> (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "A adicionar."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetItems<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  id: GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetObjectSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o tipo de espaço do objeto que corresponde ao tipo fornecido pelo parâmetro <code> edmSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    return:
      type: System.Data.Metadata.Edm.EnumType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o tipo de espaço do objeto. Se não houver nenhum tipo correspondente, este método devolve um valor nulo."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  id: GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetObjectSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o tipo de espaço do objeto que corresponde ao tipo fornecido pelo parâmetro <code> edmSpaceType </code>."
  syntax:
    content: public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    return:
      type: System.Data.Metadata.Edm.StructuralType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o tipo de espaço do objeto. Se não houver nenhum tipo correspondente, este método devolve um valor nulo."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  id: GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetPrimitiveTypes(DataSpace)
  nameWithType: MetadataWorkspace.GetPrimitiveTypes(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve a lista de tipos primitivos no modelo de dados especificado."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo de dados para o qual terá da lista de tipos primitivos."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
      description: "Uma colecção do tipo &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; que contém todos os tipos primitivos no modelo de dados especificado."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  id: GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  nameWithType: MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve os membros de um determinado <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref> / <xref href=&quot;System.Data.Metadata.Edm.EntityType&quot;> </xref> para os valores originais são necessários quando modificar uma entidade."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmMember> GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: "Um <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref> pertencendo ao espaço de C."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityTypeBase
      description: "Um <xref href=&quot;System.Data.Metadata.Edm.EntityType&quot;> </xref> que participa no determinado <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref>."
    - id: partialUpdateSupported
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se entidades podem ser atualizadas parcialmente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmMember}
      description: "O <xref href=&quot;System.Data.Metadata.Edm.EdmMember&quot;> </xref>s para o qual é necessário o valor original."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  id: GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  nameWithType: MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Obtém os membros de valor original a partir de um conjunto de entidades e o tipo de entidade."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Metadata.Edm.EdmMember> GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: "A entidade definido a partir do qual obter os valores originais."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityTypeBase
      description: "O tipo de entidade do qual obter os valores originais."
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember}
      description: "Os membros de valor original de um conjunto de entidades e a entidade de tipo."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  id: GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetType(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado, o nome de espaço de nomes e o modelo de dados."
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o tipo é procurado."
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: "Um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto que representa o tipo que corresponde ao nome de tipo especificado e o nome de espaço de nomes no modelo de dados especificado. Se não houver nenhum tipo correspondente, este método devolve um valor nulo."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  id: GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: GetType(String,String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado, o nome de espaço de nomes e o modelo de dados."
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o tipo é procurado."
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: "Um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)
  id: LoadFromAssembly(System.Reflection.Assembly)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: LoadFromAssembly(Assembly)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Carrega os metadados da assemblagem em questão."
  syntax:
    content: public void LoadFromAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "A assemblagem a partir da qual os metadados serão carregados."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  id: LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: LoadFromAssembly(Assembly,Action<String>)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Carrega os metadados da assemblagem em questão."
  syntax:
    content: public void LoadFromAssembly (System.Reflection.Assembly assembly, Action<string> logLoadMessage);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "A assemblagem a partir da qual os metadados serão carregados."
    - id: logLoadMessage
      type: System.Action{System.String}
      description: "O delegado para registo de mensagens de carga."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  id: MaximumEdmVersionSupported
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: MaximumEdmVersionSupported
  nameWithType: MetadataWorkspace.MaximumEdmVersionSupported
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Representa a versão máxima do modelo de dados de entidade (EDM) suportada pelo runtime do Entity Framework."
  syntax:
    content: public static readonly double MaximumEdmVersionSupported;
    return:
      type: System.Double
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  id: RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: RegisterItemCollection(ItemCollection)
  nameWithType: MetadataWorkspace.RegisterItemCollection(ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(ItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Regista a coleção de itens com cada modelo de dados associado."
  syntax:
    content: public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);
    parameters:
    - id: collection
      type: System.Data.Metadata.Edm.ItemCollection
      description: "A coleção de parâmetros de saída tem de ser preenchidos cópias de segurança."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  id: TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEdmSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> objeto através do parâmetro fora <code> edmSpaceType </code> que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> que corresponde ao tipo fornecido pelo parâmetro <code> objectSpaceType </code>."
  syntax:
    content: public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> objeto que representa o tipo de espaço do objeto."
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>com êxito, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> em caso de falha."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  id: TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEdmSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto através do parâmetro fora <code> edmSpaceType </code> que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> que corresponde ao tipo fornecido pelo parâmetro <code> objectSpaceType </code>."
  syntax:
    content: public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);
    parameters:
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o tipo de espaço do objeto."
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEntityContainer(String,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto com o nome do contentor de entidade especificado e o modelo de dados."
  syntax:
    content: public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o contentor de entidades é procurado."
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto. Se não houver nenhum contentor de entidades, este parâmetro de saída contém nulo; caso contrário, devolve o primeiro contentor de entidade. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um contentor de entidade que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto com o nome do contentor de entidade especificado e o modelo de dados."
  syntax:
    content: public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: "O nome do contentor de entidades."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o contentor de entidades é procurado."
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> objeto. Se não houver nenhum contentor de entidades, este parâmetro de saída contém nulo; caso contrário, devolve o primeiro contentor de entidade. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um contentor de entidade que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  id: TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetItem(String,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,DataSpace,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public bool TryGetItem<T> (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    - id: space
      type: System.Data.Metadata.Edm.DataSpace
      description: "A adicionar."
    - id: item
      type: T
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  id: TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetItem(String,Boolean,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  syntax:
    content: 'public bool TryGetItem<T> (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: "A adicionar."
    - id: ignoreCase
      type: System.Boolean
      description: "A adicionar."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "A adicionar."
    - id: item
      type: T
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  id: TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetItemCollection(DataSpace,ItemCollection)
  nameWithType: MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Testa a obtenção do <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>."
  syntax:
    content: public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);
    parameters:
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O <xref href=&quot;System.Data.Metadata.Edm.DataSpace&quot;> </xref> partir da qual a tentativa de obtenção de <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>."
    - id: collection
      type: System.Data.Metadata.Edm.ItemCollection
      description: "Quando este método devolve, contém a coleção de itens. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a obtenção foi bem sucedida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  id: TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetObjectSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> objeto através do parâmetro fora <code> objectSpaceType </code> que representa o tipo que corresponda a <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> fornecida pelo parâmetro <code> edmSpaceType </code>."
  syntax:
    content: public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.EnumType
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EnumType&quot;> </xref> objeto que representa o tipo de espaço do objeto. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  id: TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetObjectSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto através do parâmetro fora <code> objectSpaceType </code> que representa o tipo que corresponda a <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> fornecida pelo parâmetro <code> edmSpaceType </code>."
  syntax:
    content: public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);
    parameters:
    - id: edmSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "A <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref>."
    - id: objectSpaceType
      type: System.Data.Metadata.Edm.StructuralType
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.StructuralType&quot;> </xref> objeto que representa o tipo de espaço do objeto. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetType(String,String,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado, o nome de espaço de nomes e o modelo de dados."
  syntax:
    content: public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o tipo é procurado."
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  langs:
  - csharp
  name: TryGetType(String,String,Boolean,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: "Devolve um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto utilizando o nome de tipo especificado, o nome de espaço de nomes e o modelo de dados."
  syntax:
    content: public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: "O nome do tipo."
    - id: namespaceName
      type: System.String
      description: "O espaço de nomes do tipo."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a pesquisa sensível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: dataSpace
      type: System.Data.Metadata.Edm.DataSpace
      description: "O modelo concetual no qual o tipo é procurado."
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: "Quando este método devolve, contém um <xref href=&quot;System.Data.Metadata.Edm.EdmType&quot;> </xref> objeto. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se não houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MetadataWorkspace()
  nameWithType: MetadataWorkspace.MetadataWorkspace()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace()
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  nameWithType: MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MetadataWorkspace(IEnumerable<String>,IEnumerable<Assembly>)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: ClearCache()
  nameWithType: MetadataWorkspace.ClearCache()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache()
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateEntitySqlParser()
  nameWithType: MetadataWorkspace.CreateEntitySqlParser()
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser()
- uid: System.Data.Common.EntitySql.EntitySqlParser
  parent: System.Data.Common.EntitySql
  isExternal: false
  name: EntitySqlParser
  nameWithType: EntitySqlParser
  fullName: System.Data.Common.EntitySql.EntitySqlParser
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateQueryCommandTree(DbExpression)
  nameWithType: MetadataWorkspace.CreateQueryCommandTree(DbExpression)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(DbExpression)
- uid: System.Data.Common.CommandTrees.DbQueryCommandTree
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQueryCommandTree
  nameWithType: DbQueryCommandTree
  fullName: System.Data.Common.CommandTrees.DbQueryCommandTree
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEdmSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(EnumType)
- uid: System.Data.Metadata.Edm.EnumType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EnumType
  nameWithType: EnumType
  fullName: System.Data.Metadata.Edm.EnumType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEdmSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetEdmSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(StructuralType)
- uid: System.Data.Metadata.Edm.StructuralType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: StructuralType
  nameWithType: StructuralType
  fullName: System.Data.Metadata.Edm.StructuralType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEntityContainer(String,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,DataSpace)
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.DataSpace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: DataSpace
  nameWithType: DataSpace
  fullName: System.Data.Metadata.Edm.DataSpace
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEntityContainer(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(String,Boolean,DataSpace)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetFunctions(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetFunctions(String,String,DataSpace,Boolean)
  nameWithType: MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(String,String,DataSpace,Boolean)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItem(String,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,DataSpace)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItem(String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetItem(String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItem(String,Boolean,DataSpace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItemCollection(DataSpace)
  nameWithType: MetadataWorkspace.GetItemCollection(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(DataSpace)
- uid: System.Data.Metadata.Edm.ItemCollection
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: ItemCollection
  nameWithType: ItemCollection
  fullName: System.Data.Metadata.Edm.ItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.GlobalItem}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<GlobalItem>
  nameWithType: ReadOnlyCollection<GlobalItem>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.GlobalItem>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.GlobalItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.GlobalItem
    name: GlobalItem
    nameWithType: GlobalItem
    fullName: GlobalItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems(DataSpace)
  nameWithType: MetadataWorkspace.GetItems(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetItems(DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetObjectSpaceType(EnumType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(EnumType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetObjectSpaceType(StructuralType)
  nameWithType: MetadataWorkspace.GetObjectSpaceType(StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(StructuralType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetPrimitiveTypes(DataSpace)
  nameWithType: MetadataWorkspace.GetPrimitiveTypes(DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(DataSpace)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PrimitiveType>
  nameWithType: ReadOnlyCollection<PrimitiveType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  nameWithType: MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase,EntityTypeBase,Boolean)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmMember}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmMember>
  nameWithType: ReadOnlyCollection<EdmMember>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmMember>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmMember
    name: EdmMember
    nameWithType: EdmMember
    fullName: EdmMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.EntitySetBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySetBase
  nameWithType: EntitySetBase
  fullName: System.Data.Metadata.Edm.EntitySetBase
- uid: System.Data.Metadata.Edm.EntityTypeBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityTypeBase
  nameWithType: EntityTypeBase
  fullName: System.Data.Metadata.Edm.EntityTypeBase
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  nameWithType: MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(EntitySetBase,EntityTypeBase)
- uid: System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<EdmMember>
  nameWithType: IEnumerable<EdmMember>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Metadata.Edm.EdmMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Metadata.Edm.EdmMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmMember
    name: EdmMember
    nameWithType: EdmMember
    fullName: EdmMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetType(String,String,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,DataSpace)
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetType(String,String,Boolean,DataSpace)
  nameWithType: MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.GetType(String,String,Boolean,DataSpace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: LoadFromAssembly(Assembly)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: LoadFromAssembly(Assembly,Action<String>)
  nameWithType: MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(Assembly,Action<String>)
- uid: System.Action{System.String}
  parent: System
  isExternal: true
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MaximumEdmVersionSupported
  nameWithType: MetadataWorkspace.MaximumEdmVersionSupported
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: RegisterItemCollection(ItemCollection)
  nameWithType: MetadataWorkspace.RegisterItemCollection(ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(ItemCollection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEdmSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(EnumType,EnumType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEdmSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(StructuralType,StructuralType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEntityContainer(String,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,DataSpace,EntityContainer)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  nameWithType: MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(String,Boolean,DataSpace,EntityContainer)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItem(String,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,DataSpace,T)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItem(String,Boolean,DataSpace,T)
  nameWithType: MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem(String,Boolean,DataSpace,T)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItemCollection(DataSpace,ItemCollection)
  nameWithType: MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(DataSpace,ItemCollection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetObjectSpaceType(EnumType,EnumType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(EnumType,EnumType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetObjectSpaceType(StructuralType,StructuralType)
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(StructuralType,StructuralType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetType(String,String,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,DataSpace,EdmType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetType(String,String,Boolean,DataSpace,EdmType)
  nameWithType: MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
  fullName: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(String,String,Boolean,DataSpace,EdmType)
- uid: System.Data.Metadata.Edm.MetadataWorkspace.#ctor*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace.MetadataWorkspace
- uid: System.Data.Metadata.Edm.MetadataWorkspace.ClearCache*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: ClearCache
  nameWithType: MetadataWorkspace.ClearCache
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateEntitySqlParser
  nameWithType: MetadataWorkspace.CreateEntitySqlParser
- uid: System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: CreateQueryCommandTree
  nameWithType: MetadataWorkspace.CreateQueryCommandTree
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEdmSpaceType
  nameWithType: MetadataWorkspace.GetEdmSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetEntityContainer
  nameWithType: MetadataWorkspace.GetEntityContainer
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetFunctions
  nameWithType: MetadataWorkspace.GetFunctions
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItem<T>*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItem<T>
  nameWithType: MetadataWorkspace.GetItem<T>
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItemCollection
  nameWithType: MetadataWorkspace.GetItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems
  nameWithType: MetadataWorkspace.GetItems
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetItems<T>*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetItems<T>
  nameWithType: MetadataWorkspace.GetItems<T>
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetObjectSpaceType
  nameWithType: MetadataWorkspace.GetObjectSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetPrimitiveTypes
  nameWithType: MetadataWorkspace.GetPrimitiveTypes
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRelevantMembersForUpdate
  nameWithType: MetadataWorkspace.GetRelevantMembersForUpdate
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetRequiredOriginalValueMembers
  nameWithType: MetadataWorkspace.GetRequiredOriginalValueMembers
- uid: System.Data.Metadata.Edm.MetadataWorkspace.GetType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: GetType
  nameWithType: MetadataWorkspace.GetType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: LoadFromAssembly
  nameWithType: MetadataWorkspace.LoadFromAssembly
- uid: System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: RegisterItemCollection
  nameWithType: MetadataWorkspace.RegisterItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEdmSpaceType
  nameWithType: MetadataWorkspace.TryGetEdmSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetEntityContainer
  nameWithType: MetadataWorkspace.TryGetEntityContainer
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem<T>*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItem<T>
  nameWithType: MetadataWorkspace.TryGetItem<T>
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetItemCollection
  nameWithType: MetadataWorkspace.TryGetItemCollection
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetObjectSpaceType
  nameWithType: MetadataWorkspace.TryGetObjectSpaceType
- uid: System.Data.Metadata.Edm.MetadataWorkspace.TryGetType*
  parent: System.Data.Metadata.Edm.MetadataWorkspace
  isExternal: false
  name: TryGetType
  nameWithType: MetadataWorkspace.TryGetType
