### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.PagesSection
  id: PagesSection
  children:
  - System.Web.Configuration.PagesSection.#ctor
  - System.Web.Configuration.PagesSection.AsyncTimeout
  - System.Web.Configuration.PagesSection.AutoEventWireup
  - System.Web.Configuration.PagesSection.Buffer
  - System.Web.Configuration.PagesSection.ClientIDMode
  - System.Web.Configuration.PagesSection.CompilationMode
  - System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion
  - System.Web.Configuration.PagesSection.Controls
  - System.Web.Configuration.PagesSection.DeserializeSection(System.Xml.XmlReader)
  - System.Web.Configuration.PagesSection.EnableEventValidation
  - System.Web.Configuration.PagesSection.EnableSessionState
  - System.Web.Configuration.PagesSection.EnableViewState
  - System.Web.Configuration.PagesSection.EnableViewStateMac
  - System.Web.Configuration.PagesSection.IgnoreDeviceFilters
  - System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack
  - System.Web.Configuration.PagesSection.MasterPageFile
  - System.Web.Configuration.PagesSection.MaxPageStateFieldLength
  - System.Web.Configuration.PagesSection.Namespaces
  - System.Web.Configuration.PagesSection.PageBaseType
  - System.Web.Configuration.PagesSection.PageParserFilterType
  - System.Web.Configuration.PagesSection.Properties
  - System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm
  - System.Web.Configuration.PagesSection.SetReadOnly
  - System.Web.Configuration.PagesSection.SmartNavigation
  - System.Web.Configuration.PagesSection.StyleSheetTheme
  - System.Web.Configuration.PagesSection.TagMapping
  - System.Web.Configuration.PagesSection.Theme
  - System.Web.Configuration.PagesSection.UserControlBaseType
  - System.Web.Configuration.PagesSection.ValidateRequest
  - System.Web.Configuration.PagesSection.ViewStateEncryptionMode
  langs:
  - csharp
  name: PagesSection
  nameWithType: PagesSection
  fullName: System.Web.Configuration.PagesSection
  type: Class
  summary: "Provides programmatic access to the  section of the configuration file. This class cannot be inherited."
  remarks: "The PagesSection class provides a way to programmatically access and modify the content of the configuration file  section. This configuration section supports setting certain ASP.NET page and control directives globally for all pages and controls in the scope of the configuration file. This includes the `@ Page` directive, the `@ Import` directive through the <xref:System.Web.Configuration.PagesSection.Namespaces%2A> collection property, and the `@ Register` directive through the <xref:System.Web.Configuration.PagesSection.Controls%2A> collection property. It also provides support for mapping tag types to other tag types at run time through the <xref:System.Web.Configuration.PagesSection.TagMapping%2A> collection property.       Directives specify settings used by the page and user-control compilers when they process ASP.NET Web Forms page (.aspx) and user control (.ascx) files."
  example:
  - "This example demonstrates how to specify values declaratively for several attributes of the `pages` section, which can also be accessed as members of the PagesSection class.  \n  \n The following configuration file example shows how to specify values declaratively for the  section.  \n  \n```  \n<system.web>  \n  <pages buffer=\"true\"   \n    enableSessionState=\"true\"   \n    enableViewState=\"true\"  \n    enableViewStateMac=\"true\"   \n    autoEventWireup=\"true\"   \n    validateRequest=\"true\"  \n    asyncTimeout=\"45\"  \n    maintainScrollPositionOnPostBack = \"False\"  \n    viewStateEncryptionMode = \"Auto\">  \n    <namespaces>  \n      <add namespace=\"System\" />  \n      <add namespace=\"System.Collections\" />  \n      <add namespace=\"System.Collections.Specialized\" />  \n      <add namespace=\"System.ComponentModel\" />  \n      <add namespace=\"System.Configuration\" />  \n      <add namespace=\"System.Web\" />  \n    </namespaces>  \n    <controls>  \n      <clear />  \n      <remove tagPrefix=\"MyTags\" />  \n      <!â€”- Searches all linked assemblies for the namespace -->  \n      <add tagPrefix=\"MyTags1\" namespace=\" MyNameSpace \"/>  \n      <!-- Uses a specified assembly -->  \n      <add tagPrefix=\"MyTags2\" namespace=\"MyNameSpace\"   \n        assembly=\"MyAssembly\"/>  \n      <!-- Uses the specified source for the user control -->  \n      <add tagprefix=\"MyTags3\" tagname=\"MyCtrl\"       \n        src=\"MyControl.ascx\"/>  \n    </controls>  \n    <tagMapping>  \n      <clear />  \n      <add  \n        tagTypeName=  \n          \"System.Web.UI.WebControls.WebParts.WebPartManager\"  \n        mappedTagTypeName=  \n          \"Microsoft.Sharepoint.WebPartPartManager,   \n          MSPS.Web.dll, Version='2.0.0.0'\"   \n      />  \n      <remove tagTypeName=\"SomeOtherNS.Class, Assemblyname\" />  \n    </tagMapping>  \n  </pages>  \n</system.web>  \n```  \n  \n The following code example demonstrates how to use the PagesSection class.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#1](~/add/codesnippet/csharp/t-system.web.configurati_53_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_53_1.vb)]"
  syntax:
    content: 'public sealed class PagesSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: PagesSection()
  nameWithType: PagesSection.PagesSection()
  fullName: System.Web.Configuration.PagesSection.PagesSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Configuration.PagesSection&quot;></xref> class using default settings."
  remarks: "The PagesSection constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.PagesSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method."
  syntax:
    content: public PagesSection ();
    parameters: []
  overload: System.Web.Configuration.PagesSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.AsyncTimeout
  id: AsyncTimeout
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: AsyncTimeout
  nameWithType: PagesSection.AsyncTimeout
  fullName: System.Web.Configuration.PagesSection.AsyncTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value indicating the number of seconds to wait for an asynchronous handler to complete during asynchronous page processing."
  remarks: "The default value is 45 seconds."
  syntax:
    content: public TimeSpan AsyncTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value indicating the amount of time in seconds to wait for an asynchronous handler to complete during asynchronous page processing."
  overload: System.Web.Configuration.PagesSection.AsyncTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.AutoEventWireup
  id: AutoEventWireup
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: AutoEventWireup
  nameWithType: PagesSection.AutoEventWireup
  fullName: System.Web.Configuration.PagesSection.AutoEventWireup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value indicating whether events for ASP.NET pages are automatically connected to event-handling functions."
  remarks: "When AutoEventWireup is `true`, ASP.NET does not require that you explicitly bind event handlers to a page event such as <xref:System.Web.UI.Control.Load>.       When AutoEventWireup is `false`, you must explicitly bind the event to a method. For example, if you have a `Page_Load` method in the code for a page, the method will be called in response to the <xref:System.Web.UI.Control.Load> event only if you write code like that in the following example (notice the `Handles` statement in Visual Basic and the event handler code in C#):      ```vb#   Partial Class AutoEventWireupExample       Inherits System.Web.UI.Page       Protected Sub Page_Load(ByVal sender As Object, _               ByVal e As System.EventArgs) Handles Me.Load           Response.Write(&quot;Executing Page_Load&quot;)       End Sub   End Class   ```      ```c#   public partial class AutoEventWireupExample : System.Web.UI.Page   {        protected void Page_Load(object sender, System.EventArgs e)       {           Response.Write(&quot;Executing Page_Load&quot;);       }       override protected void OnInit(EventArgs e)       {           this.Load += new System.EventHandler(this.Page_Load);       }   }   ```       When AutoEventWireup is `true`, handlers are automatically bound to events at run time based on their name and signature. For each event, ASP.NET searches for a method that is named according to the pattern `Page_`*eventname*, such as `Page_Load` or `Page_Init`. ASP.NET checks first for an overload that has the typical event-handler signature (that is, it specifies <xref:System.Object> and <xref:System.EventArgs> parameters). If an event handler with this signature is not found, ASP.NET checks for an overload that has no parameters.       When AutoEventWireup is `false`, you must explicitly bind event handlers to events, as shown in the preceding example. In that case, the method names do not have to follow a pattern.       The default value is `true` if AutoEventWireup is not specified in the `@ Page` directive. Visual Studio automatically includes the attribute when it creates code-behind files. For ASP.NET pages written in C#, Visual Studio sets the value to `true`. For Visual Basic, Visual Studio sets the value to `false` because handlers are bound to events by using the  keyword, which is inserted automatically by Visual Studio when it generates an event handler. If you set AutoEventWireup to `true`, you can omit (or remove) the  keyword.       Do not set AutoEventWireup to `true` if performance is a key consideration. When automatic event wireup is enabled, ASP.NET must make between 15 and 30 tries to match events with methods.       Note the following about binding event handlers to events:      -   If you set AutoEventWireup to `true`, make sure that you do not also manually attach page event handlers to events. If you do, handlers might be called more than one time.      -   Automatic binding is performed only for page events, not for events for controls on the page.      -   As an alternative to binding events to handlers, you can override the `On`*eventname* methods of the page or of controls."
  example:
  - "The following code example shows how to set or read the AutoEventWireup property in code.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#9](~/add/codesnippet/csharp/p-system.web.configurati_230_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_230_1.vb)]  \n  \n The following example shows the two forms of method signatures that are automatically attached to page events when AutoEventWireup is `true`.  \n  \n [!code-vb[System.Web.Configuration.PagesSection#50](~/add/codesnippet/visualbasic/p-system.web.configurati_230_2.vb)]\n [!code-vb[System.Web.Configuration.PagesSection#50](~/add/codesnippet/visualbasic/p-system.web.configurati_230_2.aspx)]\n [!code-cs[System.Web.Configuration.PagesSection#50](~/add/codesnippet/csharp/p-system.web.configurati_230_2.aspx)]\n [!code-cs[System.Web.Configuration.PagesSection#50](~/add/codesnippet/csharp/p-system.web.configurati_230_2.cs)]  \n  \n The following example shows how to explicitly wire up events when AutoEventWireup is `false`.  \n  \n [!code-vb[System.Web.Configuration.PagesSection#51](~/add/codesnippet/visualbasic/p-system.web.configurati_230_3.vb)]\n [!code-cs[System.Web.Configuration.PagesSection#51](~/add/codesnippet/csharp/p-system.web.configurati_230_3.cs)]"
  syntax:
    content: public bool AutoEventWireup { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if events for ASP.NET pages are automatically connected to event-handling functions; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.AutoEventWireup*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.Buffer
  id: Buffer
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: Buffer
  nameWithType: PagesSection.Buffer
  fullName: System.Web.Configuration.PagesSection.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies whether .aspx pages and .ascx controls use response buffering."
  remarks: "When response buffering is turned on, the page or control output is buffered until after the entire page or control is processed. Do not set Buffer to `true` if performance is a key consideration."
  example:
  - "The following code example shows how to use the Buffer property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#16](~/add/codesnippet/csharp/p-system.web.configurati_263_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#16](~/add/codesnippet/visualbasic/p-system.web.configurati_263_1.vb)]"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if .aspx pages and .ascx controls use response buffering; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.ClientIDMode
  id: ClientIDMode
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: ClientIDMode
  nameWithType: PagesSection.ClientIDMode
  fullName: System.Web.Configuration.PagesSection.ClientIDMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the default algorithm that is used to generate a control&quot;s identifier."
  remarks: "You use the ClientIDMode property to set the default value for a whole Web site. You can override this value for an individual Web page or for individual controls."
  syntax:
    content: public System.Web.UI.ClientIDMode ClientIDMode { get; set; }
    return:
      type: System.Web.UI.ClientIDMode
      description: "A value that indicates how the value in the &lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt; property is generated. The default value is <xref href=&quot;System.Web.UI.ClientIDMode&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.ClientIDMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.CompilationMode
  id: CompilationMode
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: CompilationMode
  nameWithType: PagesSection.CompilationMode
  fullName: System.Web.Configuration.PagesSection.CompilationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that determines how .aspx pages and .ascx controls are compiled."
  remarks: "The default value is <xref:System.Web.UI.CompilationMode>."
  example:
  - "The following code example shows how to use the CompilationMode property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#6](~/add/codesnippet/csharp/p-system.web.configurati_363_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_363_1.vb)]"
  syntax:
    content: public System.Web.UI.CompilationMode CompilationMode { get; set; }
    return:
      type: System.Web.UI.CompilationMode
      description: "One of the values for the CompilationMode property, which specifies how .aspx pages and .ascx controls are compiled."
  overload: System.Web.Configuration.PagesSection.CompilationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion
  id: ControlRenderingCompatibilityVersion
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: ControlRenderingCompatibilityVersion
  nameWithType: PagesSection.ControlRenderingCompatibilityVersion
  fullName: System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies the ASP.NET version that any rendered HTML will be compatible with."
  remarks: "This value is set by the `controlRenderingCompatibilityVersion` attribute of the `pages` element in the Web.config file. The value of this property is the default value for the <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName> property. For information about how it is used, see the <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName> property."
  syntax:
    content: public Version ControlRenderingCompatibilityVersion { get; set; }
    return:
      type: System.Version
      description: "The ASP.NET version that any rendered HTML will be compatible with."
  overload: System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "An attempt was made to set this property to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.Controls
  id: Controls
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: Controls
  nameWithType: PagesSection.Controls
  fullName: System.Web.Configuration.PagesSection.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets a collection of <xref href=&quot;System.Web.Configuration.TagPrefixInfo&quot;></xref> objects."
  remarks: "The <xref:System.Web.Configuration.TagPrefixInfo> objects correspond to the `@ Register` directive on an ASP.NET page. The `@ Register` directive allows you to specify the tag prefix for a user control."
  example:
  - "The following code example shows how to use the Controls property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#12](~/add/codesnippet/csharp/p-system.web.configurati_194_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#12](~/add/codesnippet/visualbasic/p-system.web.configurati_194_1.vb)]"
  syntax:
    content: public System.Web.Configuration.TagPrefixCollection Controls { get; }
    return:
      type: System.Web.Configuration.TagPrefixCollection
      description: "A <xref href=&quot;System.Web.Configuration.TagPrefixCollection&quot;></xref> of <xref href=&quot;System.Web.Configuration.TagPrefixInfo&quot;></xref> objects."
  overload: System.Web.Configuration.PagesSection.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.DeserializeSection(System.Xml.XmlReader)
  id: DeserializeSection(System.Xml.XmlReader)
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: DeserializeSection(XmlReader)
  nameWithType: PagesSection.DeserializeSection(XmlReader)
  fullName: System.Web.Configuration.PagesSection.DeserializeSection(XmlReader)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void DeserializeSection (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "To be added."
  overload: System.Web.Configuration.PagesSection.DeserializeSection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.EnableEventValidation
  id: EnableEventValidation
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: EnableEventValidation
  nameWithType: PagesSection.EnableEventValidation
  fullName: System.Web.Configuration.PagesSection.EnableEventValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies whether event validation is enabled."
  remarks: "The EnableEventValidation attribute indicates whether event validation should be performed. The default value is `true`. A Web application can optionally disable event validation to revert to .NET Framework version 1.0 behavior.       The base control checks this attribute to determine whether it should validate events. A derived control does not inherit this base control attribute, and so it is exempt from event validation by default. You still instruct ASP.NET to perform event validation on the derived control by adding the EnableEventValidation attribute to the derived control itself and setting it to `true`.      > [!NOTE] >  Event validation reduces the risk of unauthorized postback requests and callbacks. It instructs ASP.NET to validate only those events that can be raised in the control during a postback request or callback. With this model, a control registers its events during rendering and then validates the events during the post-back or callback handling. All event-driven controls in ASP.NET use this feature by default."
  syntax:
    content: public bool EnableEventValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if event validation is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.EnableEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.EnableSessionState
  id: EnableSessionState
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: EnableSessionState
  nameWithType: PagesSection.EnableSessionState
  fullName: System.Web.Configuration.PagesSection.EnableSessionState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies whether the session state is enabled, disabled, or read-only."
  remarks: ''
  example:
  - "The following code example shows how to use the EnableSessionState property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#14](~/add/codesnippet/csharp/p-system.web.configurati_278_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#14](~/add/codesnippet/visualbasic/p-system.web.configurati_278_1.vb)]"
  syntax:
    content: public System.Web.Configuration.PagesEnableSessionState EnableSessionState { get; set; }
    return:
      type: System.Web.Configuration.PagesEnableSessionState
      description: "One of the values for the EnableSessionState property, which specifies whether the session state is enabled, disabled, or read-only. The default is <xref href=&quot;System.Web.Configuration.PagesEnableSessionState&quot;></xref>, which indicates that session state is enabled."
  overload: System.Web.Configuration.PagesSection.EnableSessionState*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The value is not a valid <xref href=&quot;System.Web.Configuration.PagesEnableSessionState&quot;></xref> enumeration value."
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.EnableViewState
  id: EnableViewState
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: EnableViewState
  nameWithType: PagesSection.EnableViewState
  fullName: System.Web.Configuration.PagesSection.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value indicating whether view state is enabled or disabled."
  remarks: ''
  example:
  - "The following code example shows how to use the EnableViewState property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#5](~/add/codesnippet/csharp/p-system.web.configurati_65_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_65_1.vb)]"
  syntax:
    content: public bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if view state is enabled; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if view state is disabled. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.EnableViewStateMac
  id: EnableViewStateMac
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: EnableViewStateMac
  nameWithType: PagesSection.EnableViewStateMac
  fullName: System.Web.Configuration.PagesSection.EnableViewStateMac
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies whether ASP.NET should run a message authentication code (MAC) on the page&quot;s view state when the page is posted back from the client."
  remarks: "A view-state MAC is an encrypted version of the hidden variable that a page&quot;s view state is persisted to when the page is sent to the browser. When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client.      > [!IMPORTANT] >  This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state. The view state MAC helps ensure the security of other ASP.NET functions in addition to the view state."
  example:
  - "The following code example shows how to use the EnableViewStateMac property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#8](~/add/codesnippet/csharp/p-system.web.configurati_54_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_54_1.vb)]"
  syntax:
    content: public bool EnableViewStateMac { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if ASP.NET should run a message authentication code (MAC) on the page&quot;s view state when the page is posted back from the client; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.EnableViewStateMac*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.IgnoreDeviceFilters
  id: IgnoreDeviceFilters
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: IgnoreDeviceFilters
  nameWithType: PagesSection.IgnoreDeviceFilters
  fullName: System.Web.Configuration.PagesSection.IgnoreDeviceFilters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets the collection of device tags that ASP.NET should ignore when it renders a page."
  remarks: "Device tags to ignore are specified as HTML namespace prefixes that should be passed as they are to the browser instead of being processed by ASP.NET. An example is the `sys` prefix that is used for Microsoft Ajax elements."
  syntax:
    content: public System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters { get; }
    return:
      type: System.Web.Configuration.IgnoreDeviceFilterElementCollection
      description: "The collection of device tags that ASP.NET should ignore."
  overload: System.Web.Configuration.PagesSection.IgnoreDeviceFilters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack
  id: MaintainScrollPositionOnPostBack
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: MaintainScrollPositionOnPostBack
  nameWithType: PagesSection.MaintainScrollPositionOnPostBack
  fullName: System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value indicating whether the page scroll position should be maintained upon returning from a postback from the server."
  syntax:
    content: public bool MaintainScrollPositionOnPostBack { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the page-scroll position should be maintained after postback; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.MasterPageFile
  id: MasterPageFile
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: PagesSection.MasterPageFile
  fullName: System.Web.Configuration.PagesSection.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a reference to the master page for the application."
  remarks: "The value of this property can be either a relative or an absolute path."
  example:
  - "The following code example shows how to use the MasterPageFile property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#15](~/add/codesnippet/csharp/p-system.web.configurati_68_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#15](~/add/codesnippet/visualbasic/p-system.web.configurati_68_1.vb)]"
  syntax:
    content: public string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "A reference to the master page for the application."
  overload: System.Web.Configuration.PagesSection.MasterPageFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.MaxPageStateFieldLength
  id: MaxPageStateFieldLength
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: MaxPageStateFieldLength
  nameWithType: PagesSection.MaxPageStateFieldLength
  fullName: System.Web.Configuration.PagesSection.MaxPageStateFieldLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the maximum number of characters that a single view-state field can contain."
  remarks: "Page and control view state is stored in hidden view-state fields when the page or control is rendered. If the length of the data stored exceeds the MaxPageStateFieldLength value, then the data is split between multiple view-state fields."
  example:
  - "The following code example shows how to use the MaxPageStateFieldLength property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#10](~/add/codesnippet/csharp/p-system.web.configurati_42_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_42_1.vb)]"
  syntax:
    content: public int MaxPageStateFieldLength { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of characters that a single view-state field can contain."
  overload: System.Web.Configuration.PagesSection.MaxPageStateFieldLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.Namespaces
  id: Namespaces
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: Namespaces
  nameWithType: PagesSection.Namespaces
  fullName: System.Web.Configuration.PagesSection.Namespaces
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets a collection of <xref href=&quot;System.Web.Configuration.NamespaceInfo&quot;></xref> objects."
  remarks: "The <xref:System.Web.Configuration.TagPrefixInfo> objects correspond to the `@ Import` directive on an ASP.NET page. The `Import` directive allows you to specify namespaces that are automatically imported into all the pages of an application."
  example:
  - "The following code example shows how to use the Namespaces property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#2](~/add/codesnippet/csharp/p-system.web.configurati_240_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_240_1.vb)]"
  syntax:
    content: public System.Web.Configuration.NamespaceCollection Namespaces { get; }
    return:
      type: System.Web.Configuration.NamespaceCollection
      description: "A <xref href=&quot;System.Web.Configuration.NamespaceCollection&quot;></xref> of <xref href=&quot;System.Web.Configuration.NamespaceInfo&quot;></xref> objects."
  overload: System.Web.Configuration.PagesSection.Namespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.PageBaseType
  id: PageBaseType
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: PageBaseType
  nameWithType: PagesSection.PageBaseType
  fullName: System.Web.Configuration.PagesSection.PageBaseType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies a code-behind class that .aspx pages inherit by default."
  remarks: ''
  example:
  - "The following code example shows how to use the PageBaseType property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#18](~/add/codesnippet/csharp/p-system.web.configurati_245_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#18](~/add/codesnippet/visualbasic/p-system.web.configurati_245_1.vb)]"
  syntax:
    content: public string PageBaseType { get; set; }
    return:
      type: System.String
      description: "A string that specifies a code-behind class that .aspx pages inherit by default."
  overload: System.Web.Configuration.PagesSection.PageBaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.PageParserFilterType
  id: PageParserFilterType
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: PageParserFilterType
  nameWithType: PagesSection.PageParserFilterType
  fullName: System.Web.Configuration.PagesSection.PageParserFilterType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies the parser filter type."
  remarks: "A parser filter, which is an instance of the <xref:System.Web.UI.PageParserFilter> class, is called by the page compilation process before the parsing step to allow for changes to the source code at run time."
  example:
  - "The following code example shows how to use the PageParserFilterType property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#3](~/add/codesnippet/csharp/p-system.web.configurati_170_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_170_1.vb)]"
  syntax:
    content: public string PageParserFilterType { get; set; }
    return:
      type: System.String
      description: "A string that specifies the parser filter type."
  overload: System.Web.Configuration.PagesSection.PageParserFilterType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.Properties
  id: Properties
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: Properties
  nameWithType: PagesSection.Properties
  fullName: System.Web.Configuration.PagesSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.Web.Configuration.PagesSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm
  id: RenderAllHiddenFieldsAtTopOfForm
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: RenderAllHiddenFieldsAtTopOfForm
  nameWithType: PagesSection.RenderAllHiddenFieldsAtTopOfForm
  fullName: System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether all system-generated hidden fields are rendered at the top of the form."
  remarks: "You can use the RenderAllHiddenFieldsAtTopOfForm property to specify that some system-generated hidden fields are rendered at the end of the form.       In versions of ASP.NET earlier than the .NET Framework 3.5 SP1, ASP.NET renders some hidden fields (for example, `__VIEWSTATE`) at the top of the form. Other hidden fields (for example, `__EVENTVALIDATION`) are rendered near the bottom of the form, just before the closing `</div>` tag. By default, in ASP.NET 3.5 SP1, all system-generated hidden fields are rendered at the top of the page. This makes sure that the information in these fields is sent to the server even if a postback is performed before the page has finished loading. If RenderAllHiddenFieldsAtTopOfForm is set to `false`, performing a postback before the page has finished loading can cause an &quot;Invalid postback or callback argument&quot; error.      > [!NOTE] >  Although the property name indicates &quot;all hidden fields,&quot; user-created hidden fields are not affected by settings for this property."
  syntax:
    content: public bool RenderAllHiddenFieldsAtTopOfForm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if system-generated hidden fields are rendered at the top of the form; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: PagesSection.SetReadOnly()
  fullName: System.Web.Configuration.PagesSection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Web.Configuration.PagesSection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.SmartNavigation
  id: SmartNavigation
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: SmartNavigation
  nameWithType: PagesSection.SmartNavigation
  fullName: System.Web.Configuration.PagesSection.SmartNavigation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether smart navigation is enabled."
  remarks: >-
    > [!NOTE]

    >  Smart navigation requires Microsoft Internet Explorer 5.5 or greater.
  example:
  - "The following code example shows how to use the SmartNavigation property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#19](~/add/codesnippet/csharp/p-system.web.configurati_31_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#19](~/add/codesnippet/visualbasic/p-system.web.configurati_31_1.vb)]"
  syntax:
    content: public bool SmartNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if smart navigation is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.SmartNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.StyleSheetTheme
  id: StyleSheetTheme
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: StyleSheetTheme
  nameWithType: PagesSection.StyleSheetTheme
  fullName: System.Web.Configuration.PagesSection.StyleSheetTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the name of an ASP.NET style sheet theme."
  remarks: ''
  example:
  - "The following code example shows how to use the StyleSheetTheme property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#13](~/add/codesnippet/csharp/p-system.web.configurati_404_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_404_1.vb)]"
  syntax:
    content: public string StyleSheetTheme { get; set; }
    return:
      type: System.String
      description: "The name of an ASP.NET style sheet theme."
  overload: System.Web.Configuration.PagesSection.StyleSheetTheme*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.TagMapping
  id: TagMapping
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: TagMapping
  nameWithType: PagesSection.TagMapping
  fullName: System.Web.Configuration.PagesSection.TagMapping
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets a collection of <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;></xref> objects."
  remarks: "The <xref:System.Web.Configuration.TagPrefixInfo> object has no corresponding directive on an ASP.NET page. The <xref:System.Web.Configuration.TagPrefixInfo> objects allow you to remap tag type names to other type names at compile time."
  example:
  - "The following code example shows how to use the TagMapping property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#17](~/add/codesnippet/csharp/p-system.web.configurati_59_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#17](~/add/codesnippet/visualbasic/p-system.web.configurati_59_1.vb)]"
  syntax:
    content: public System.Web.Configuration.TagMapCollection TagMapping { get; }
    return:
      type: System.Web.Configuration.TagMapCollection
      description: "A <xref href=&quot;System.Web.Configuration.TagMapCollection&quot;></xref> of <xref href=&quot;System.Web.Configuration.TagMapInfo&quot;></xref> objects."
  overload: System.Web.Configuration.PagesSection.TagMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.Theme
  id: Theme
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: Theme
  nameWithType: PagesSection.Theme
  fullName: System.Web.Configuration.PagesSection.Theme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the name of an ASP.NET page theme."
  remarks: ''
  example:
  - "The following code example shows how to use the Theme property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#4](~/add/codesnippet/csharp/p-system.web.configurati_186_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_186_1.vb)]"
  syntax:
    content: public string Theme { get; set; }
    return:
      type: System.String
      description: "The name of an ASP.NET page theme."
  overload: System.Web.Configuration.PagesSection.Theme*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.UserControlBaseType
  id: UserControlBaseType
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: UserControlBaseType
  nameWithType: PagesSection.UserControlBaseType
  fullName: System.Web.Configuration.PagesSection.UserControlBaseType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that specifies a code-behind class that user controls inherit by default."
  remarks: ''
  example:
  - "The following code example shows how to use the UserControlBaseType property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#11](~/add/codesnippet/csharp/p-system.web.configurati_359_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#11](~/add/codesnippet/visualbasic/p-system.web.configurati_359_1.vb)]"
  syntax:
    content: public string UserControlBaseType { get; set; }
    return:
      type: System.String
      description: "A string that specifies a code-behind file that user controls inherit by default."
  overload: System.Web.Configuration.PagesSection.UserControlBaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.ValidateRequest
  id: ValidateRequest
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: ValidateRequest
  nameWithType: PagesSection.ValidateRequest
  fullName: System.Web.Configuration.PagesSection.ValidateRequest
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that determines whether ASP.NET examines input from the browser for dangerous values. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Request validation is performed by comparing all input data to a list of potentially dangerous values. If a match occurs, ASP.NET raises an <xref:System.Web.HttpRequestValidationException>."
  example:
  - "The following code example shows how to use the ValidateRequest property.  \n  \n [!code-cs[System.Web.Configuration.PagesSection#7](~/add/codesnippet/csharp/p-system.web.configurati_13_1.cs)]\n [!code-vb[System.Web.Configuration.PagesSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_13_1.vb)]"
  syntax:
    content: public bool ValidateRequest { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if ASP.NET examines input from the browser for dangerous values; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.PagesSection.ValidateRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.PagesSection.ViewStateEncryptionMode
  id: ViewStateEncryptionMode
  parent: System.Web.Configuration.PagesSection
  langs:
  - csharp
  name: ViewStateEncryptionMode
  nameWithType: PagesSection.ViewStateEncryptionMode
  fullName: System.Web.Configuration.PagesSection.ViewStateEncryptionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the encryption mode that ASP.NET uses when maintaining <xref uid=&quot;langword_csharp_ViewState&quot; name=&quot;ViewState&quot; href=&quot;&quot;></xref> values."
  remarks: "The possible <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> enumeration values are `Always`, `Auto`, and `Never`. The default value is `Auto`. If <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property is set to `Auto`, `ViewState` will be encrypted when a control requests it."
  syntax:
    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }
    return:
      type: System.Web.UI.ViewStateEncryptionMode
      description: "A <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;></xref> enumeration value indicating when the <xref uid=&quot;langword_csharp_ViewState&quot; name=&quot;ViewState&quot; href=&quot;&quot;></xref> values are encrypted."
  overload: System.Web.Configuration.PagesSection.ViewStateEncryptionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.Configuration.PagesSection.#ctor
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: PagesSection()
  nameWithType: PagesSection.PagesSection()
  fullName: System.Web.Configuration.PagesSection.PagesSection()
- uid: System.Web.Configuration.PagesSection.AsyncTimeout
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: AsyncTimeout
  nameWithType: PagesSection.AsyncTimeout
  fullName: System.Web.Configuration.PagesSection.AsyncTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.PagesSection.AutoEventWireup
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: AutoEventWireup
  nameWithType: PagesSection.AutoEventWireup
  fullName: System.Web.Configuration.PagesSection.AutoEventWireup
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.PagesSection.Buffer
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Buffer
  nameWithType: PagesSection.Buffer
  fullName: System.Web.Configuration.PagesSection.Buffer
- uid: System.Web.Configuration.PagesSection.ClientIDMode
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ClientIDMode
  nameWithType: PagesSection.ClientIDMode
  fullName: System.Web.Configuration.PagesSection.ClientIDMode
- uid: System.Web.UI.ClientIDMode
  parent: System.Web.UI
  isExternal: false
  name: ClientIDMode
  nameWithType: ClientIDMode
  fullName: System.Web.UI.ClientIDMode
- uid: System.Web.Configuration.PagesSection.CompilationMode
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: CompilationMode
  nameWithType: PagesSection.CompilationMode
  fullName: System.Web.Configuration.PagesSection.CompilationMode
- uid: System.Web.UI.CompilationMode
  parent: System.Web.UI
  isExternal: false
  name: CompilationMode
  nameWithType: CompilationMode
  fullName: System.Web.UI.CompilationMode
- uid: System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ControlRenderingCompatibilityVersion
  nameWithType: PagesSection.ControlRenderingCompatibilityVersion
  fullName: System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.Configuration.PagesSection.Controls
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Controls
  nameWithType: PagesSection.Controls
  fullName: System.Web.Configuration.PagesSection.Controls
- uid: System.Web.Configuration.TagPrefixCollection
  parent: System.Web.Configuration
  isExternal: false
  name: TagPrefixCollection
  nameWithType: TagPrefixCollection
  fullName: System.Web.Configuration.TagPrefixCollection
- uid: System.Web.Configuration.PagesSection.DeserializeSection(System.Xml.XmlReader)
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: DeserializeSection(XmlReader)
  nameWithType: PagesSection.DeserializeSection(XmlReader)
  fullName: System.Web.Configuration.PagesSection.DeserializeSection(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.Configuration.PagesSection.EnableEventValidation
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableEventValidation
  nameWithType: PagesSection.EnableEventValidation
  fullName: System.Web.Configuration.PagesSection.EnableEventValidation
- uid: System.Web.Configuration.PagesSection.EnableSessionState
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableSessionState
  nameWithType: PagesSection.EnableSessionState
  fullName: System.Web.Configuration.PagesSection.EnableSessionState
- uid: System.Web.Configuration.PagesEnableSessionState
  parent: System.Web.Configuration
  isExternal: false
  name: PagesEnableSessionState
  nameWithType: PagesEnableSessionState
  fullName: System.Web.Configuration.PagesEnableSessionState
- uid: System.Web.Configuration.PagesSection.EnableViewState
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableViewState
  nameWithType: PagesSection.EnableViewState
  fullName: System.Web.Configuration.PagesSection.EnableViewState
- uid: System.Web.Configuration.PagesSection.EnableViewStateMac
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableViewStateMac
  nameWithType: PagesSection.EnableViewStateMac
  fullName: System.Web.Configuration.PagesSection.EnableViewStateMac
- uid: System.Web.Configuration.PagesSection.IgnoreDeviceFilters
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: IgnoreDeviceFilters
  nameWithType: PagesSection.IgnoreDeviceFilters
  fullName: System.Web.Configuration.PagesSection.IgnoreDeviceFilters
- uid: System.Web.Configuration.IgnoreDeviceFilterElementCollection
  parent: System.Web.Configuration
  isExternal: false
  name: IgnoreDeviceFilterElementCollection
  nameWithType: IgnoreDeviceFilterElementCollection
  fullName: System.Web.Configuration.IgnoreDeviceFilterElementCollection
- uid: System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: PagesSection.MaintainScrollPositionOnPostBack
  fullName: System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack
- uid: System.Web.Configuration.PagesSection.MasterPageFile
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: MasterPageFile
  nameWithType: PagesSection.MasterPageFile
  fullName: System.Web.Configuration.PagesSection.MasterPageFile
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.PagesSection.MaxPageStateFieldLength
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: PagesSection.MaxPageStateFieldLength
  fullName: System.Web.Configuration.PagesSection.MaxPageStateFieldLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.PagesSection.Namespaces
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Namespaces
  nameWithType: PagesSection.Namespaces
  fullName: System.Web.Configuration.PagesSection.Namespaces
- uid: System.Web.Configuration.NamespaceCollection
  parent: System.Web.Configuration
  isExternal: false
  name: NamespaceCollection
  nameWithType: NamespaceCollection
  fullName: System.Web.Configuration.NamespaceCollection
- uid: System.Web.Configuration.PagesSection.PageBaseType
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: PageBaseType
  nameWithType: PagesSection.PageBaseType
  fullName: System.Web.Configuration.PagesSection.PageBaseType
- uid: System.Web.Configuration.PagesSection.PageParserFilterType
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: PageParserFilterType
  nameWithType: PagesSection.PageParserFilterType
  fullName: System.Web.Configuration.PagesSection.PageParserFilterType
- uid: System.Web.Configuration.PagesSection.Properties
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Properties
  nameWithType: PagesSection.Properties
  fullName: System.Web.Configuration.PagesSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: RenderAllHiddenFieldsAtTopOfForm
  nameWithType: PagesSection.RenderAllHiddenFieldsAtTopOfForm
  fullName: System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm
- uid: System.Web.Configuration.PagesSection.SetReadOnly
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: SetReadOnly()
  nameWithType: PagesSection.SetReadOnly()
  fullName: System.Web.Configuration.PagesSection.SetReadOnly()
- uid: System.Web.Configuration.PagesSection.SmartNavigation
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: SmartNavigation
  nameWithType: PagesSection.SmartNavigation
  fullName: System.Web.Configuration.PagesSection.SmartNavigation
- uid: System.Web.Configuration.PagesSection.StyleSheetTheme
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: StyleSheetTheme
  nameWithType: PagesSection.StyleSheetTheme
  fullName: System.Web.Configuration.PagesSection.StyleSheetTheme
- uid: System.Web.Configuration.PagesSection.TagMapping
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: TagMapping
  nameWithType: PagesSection.TagMapping
  fullName: System.Web.Configuration.PagesSection.TagMapping
- uid: System.Web.Configuration.TagMapCollection
  parent: System.Web.Configuration
  isExternal: false
  name: TagMapCollection
  nameWithType: TagMapCollection
  fullName: System.Web.Configuration.TagMapCollection
- uid: System.Web.Configuration.PagesSection.Theme
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Theme
  nameWithType: PagesSection.Theme
  fullName: System.Web.Configuration.PagesSection.Theme
- uid: System.Web.Configuration.PagesSection.UserControlBaseType
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: UserControlBaseType
  nameWithType: PagesSection.UserControlBaseType
  fullName: System.Web.Configuration.PagesSection.UserControlBaseType
- uid: System.Web.Configuration.PagesSection.ValidateRequest
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ValidateRequest
  nameWithType: PagesSection.ValidateRequest
  fullName: System.Web.Configuration.PagesSection.ValidateRequest
- uid: System.Web.Configuration.PagesSection.ViewStateEncryptionMode
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: PagesSection.ViewStateEncryptionMode
  fullName: System.Web.Configuration.PagesSection.ViewStateEncryptionMode
- uid: System.Web.UI.ViewStateEncryptionMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: ViewStateEncryptionMode
  fullName: System.Web.UI.ViewStateEncryptionMode
- uid: System.Web.Configuration.PagesSection.#ctor*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: PagesSection
  nameWithType: PagesSection.PagesSection
- uid: System.Web.Configuration.PagesSection.AsyncTimeout*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: AsyncTimeout
  nameWithType: PagesSection.AsyncTimeout
- uid: System.Web.Configuration.PagesSection.AutoEventWireup*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: AutoEventWireup
  nameWithType: PagesSection.AutoEventWireup
- uid: System.Web.Configuration.PagesSection.Buffer*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Buffer
  nameWithType: PagesSection.Buffer
- uid: System.Web.Configuration.PagesSection.ClientIDMode*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ClientIDMode
  nameWithType: PagesSection.ClientIDMode
- uid: System.Web.Configuration.PagesSection.CompilationMode*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: CompilationMode
  nameWithType: PagesSection.CompilationMode
- uid: System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ControlRenderingCompatibilityVersion
  nameWithType: PagesSection.ControlRenderingCompatibilityVersion
- uid: System.Web.Configuration.PagesSection.Controls*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Controls
  nameWithType: PagesSection.Controls
- uid: System.Web.Configuration.PagesSection.DeserializeSection*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: DeserializeSection
  nameWithType: PagesSection.DeserializeSection
- uid: System.Web.Configuration.PagesSection.EnableEventValidation*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableEventValidation
  nameWithType: PagesSection.EnableEventValidation
- uid: System.Web.Configuration.PagesSection.EnableSessionState*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableSessionState
  nameWithType: PagesSection.EnableSessionState
- uid: System.Web.Configuration.PagesSection.EnableViewState*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableViewState
  nameWithType: PagesSection.EnableViewState
- uid: System.Web.Configuration.PagesSection.EnableViewStateMac*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: EnableViewStateMac
  nameWithType: PagesSection.EnableViewStateMac
- uid: System.Web.Configuration.PagesSection.IgnoreDeviceFilters*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: IgnoreDeviceFilters
  nameWithType: PagesSection.IgnoreDeviceFilters
- uid: System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: PagesSection.MaintainScrollPositionOnPostBack
- uid: System.Web.Configuration.PagesSection.MasterPageFile*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: MasterPageFile
  nameWithType: PagesSection.MasterPageFile
- uid: System.Web.Configuration.PagesSection.MaxPageStateFieldLength*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: PagesSection.MaxPageStateFieldLength
- uid: System.Web.Configuration.PagesSection.Namespaces*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Namespaces
  nameWithType: PagesSection.Namespaces
- uid: System.Web.Configuration.PagesSection.PageBaseType*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: PageBaseType
  nameWithType: PagesSection.PageBaseType
- uid: System.Web.Configuration.PagesSection.PageParserFilterType*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: PageParserFilterType
  nameWithType: PagesSection.PageParserFilterType
- uid: System.Web.Configuration.PagesSection.Properties*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Properties
  nameWithType: PagesSection.Properties
- uid: System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: RenderAllHiddenFieldsAtTopOfForm
  nameWithType: PagesSection.RenderAllHiddenFieldsAtTopOfForm
- uid: System.Web.Configuration.PagesSection.SetReadOnly*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: SetReadOnly
  nameWithType: PagesSection.SetReadOnly
- uid: System.Web.Configuration.PagesSection.SmartNavigation*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: SmartNavigation
  nameWithType: PagesSection.SmartNavigation
- uid: System.Web.Configuration.PagesSection.StyleSheetTheme*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: StyleSheetTheme
  nameWithType: PagesSection.StyleSheetTheme
- uid: System.Web.Configuration.PagesSection.TagMapping*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: TagMapping
  nameWithType: PagesSection.TagMapping
- uid: System.Web.Configuration.PagesSection.Theme*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: Theme
  nameWithType: PagesSection.Theme
- uid: System.Web.Configuration.PagesSection.UserControlBaseType*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: UserControlBaseType
  nameWithType: PagesSection.UserControlBaseType
- uid: System.Web.Configuration.PagesSection.ValidateRequest*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ValidateRequest
  nameWithType: PagesSection.ValidateRequest
- uid: System.Web.Configuration.PagesSection.ViewStateEncryptionMode*
  parent: System.Web.Configuration.PagesSection
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: PagesSection.ViewStateEncryptionMode
