### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ContextUtil
  id: ContextUtil
  children:
  - System.EnterpriseServices.ContextUtil.ActivityId
  - System.EnterpriseServices.ContextUtil.ApplicationId
  - System.EnterpriseServices.ContextUtil.ApplicationInstanceId
  - System.EnterpriseServices.ContextUtil.ContextId
  - System.EnterpriseServices.ContextUtil.DeactivateOnReturn
  - System.EnterpriseServices.ContextUtil.DisableCommit
  - System.EnterpriseServices.ContextUtil.EnableCommit
  - System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)
  - System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)
  - System.EnterpriseServices.ContextUtil.IsDefaultContext
  - System.EnterpriseServices.ContextUtil.IsInTransaction
  - System.EnterpriseServices.ContextUtil.IsSecurityEnabled
  - System.EnterpriseServices.ContextUtil.MyTransactionVote
  - System.EnterpriseServices.ContextUtil.PartitionId
  - System.EnterpriseServices.ContextUtil.SetAbort
  - System.EnterpriseServices.ContextUtil.SetComplete
  - System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)
  - System.EnterpriseServices.ContextUtil.SystemTransaction
  - System.EnterpriseServices.ContextUtil.Transaction
  - System.EnterpriseServices.ContextUtil.TransactionId
  langs:
  - csharp
  name: ContextUtil
  nameWithType: ContextUtil
  fullName: System.EnterpriseServices.ContextUtil
  type: Class
  summary: "Obtains information about the COM+ object context. This class cannot be inherited."
  remarks: "ContextUtil is the preferred class to use for obtaining COM+ context information. Because the members of this class are all `static` (`shared` in Visual Basic), it is not necessary to instantiate it before using them."
  example:
  - "The following code example demonstrates how to use ContextUtil to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.  \n  \n [!code-vb[EnterpriseServices_Transaction#1](~/add/codesnippet/visualbasic/t-system.enterpriseservi_17_1.vb)]\n [!code-cs[EnterpriseServices_Transaction#1](~/add/codesnippet/csharp/t-system.enterpriseservi_17_1.cs)]\n [!code-cpp[EnterpriseServices_Transaction#1](~/add/codesnippet/cpp/t-system.enterpriseservi_17_1.cpp)]"
  syntax:
    content: public sealed class ContextUtil
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.ActivityId
  id: ActivityId
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: ActivityId
  nameWithType: ContextUtil.ActivityId
  fullName: System.EnterpriseServices.ContextUtil.ActivityId
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a GUID representing the activity containing the component."
  remarks: ''
  example:
  - "The following code example gets the value of a ActivityId property.  \n  \n [!code-cpp[EnterpriseServicesContextUtil#1](~/add/codesnippet/cpp/p-system.enterpriseservi_4_1.cpp)]\n [!code-cs[EnterpriseServicesContextUtil#1](~/add/codesnippet/csharp/p-system.enterpriseservi_4_1.cs)]\n [!code-vb[EnterpriseServicesContextUtil#1](~/add/codesnippet/visualbasic/p-system.enterpriseservi_4_1.vb)]"
  syntax:
    content: public static Guid ActivityId { get; }
    return:
      type: System.Guid
      description: "The GUID for an activity if the current context is part of an activity; otherwise, <xref uid=&quot;langword_csharp_GUID_NULL&quot; name=&quot;GUID_NULL&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ContextUtil.ActivityId*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.ApplicationId
  id: ApplicationId
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: ApplicationId
  nameWithType: ContextUtil.ApplicationId
  fullName: System.EnterpriseServices.ContextUtil.ApplicationId
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a GUID for the current application."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this property.  \n  \n [!code-cpp[EnterpriseServices_Pooling#3](~/add/codesnippet/cpp/p-system.enterpriseservi_6_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#3](~/add/codesnippet/csharp/p-system.enterpriseservi_6_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_6_1.vb)]"
  syntax:
    content: public static Guid ApplicationId { get; }
    return:
      type: System.Guid
      description: "The GUID for the current application."
  overload: System.EnterpriseServices.ContextUtil.ApplicationId*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows XP or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.ApplicationInstanceId
  id: ApplicationInstanceId
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: ApplicationInstanceId
  nameWithType: ContextUtil.ApplicationInstanceId
  fullName: System.EnterpriseServices.ContextUtil.ApplicationInstanceId
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a GUID for the current application instance."
  remarks: ''
  example:
  - "The following code example gets the value of a ApplicationInstanceId property.  \n  \n [!code-cpp[EnterpriseServicesContextUtil#2](~/add/codesnippet/cpp/p-system.enterpriseservi_32_1.cpp)]\n [!code-cs[EnterpriseServicesContextUtil#2](~/add/codesnippet/csharp/p-system.enterpriseservi_32_1.cs)]\n [!code-vb[EnterpriseServicesContextUtil#2](~/add/codesnippet/visualbasic/p-system.enterpriseservi_32_1.vb)]"
  syntax:
    content: public static Guid ApplicationInstanceId { get; }
    return:
      type: System.Guid
      description: "The GUID for the current application instance."
  overload: System.EnterpriseServices.ContextUtil.ApplicationInstanceId*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows XP or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.ContextId
  id: ContextId
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: ContextId
  nameWithType: ContextUtil.ContextId
  fullName: System.EnterpriseServices.ContextUtil.ContextId
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a GUID for the current context."
  remarks: ''
  example:
  - "The following example code demonstrates the use of this attribute.  \n  \n [!code-cpp[EnterpriseServices_Pooling#3](~/add/codesnippet/cpp/p-system.enterpriseservi_16_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#3](~/add/codesnippet/csharp/p-system.enterpriseservi_16_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_16_1.vb)]"
  syntax:
    content: public static Guid ContextId { get; }
    return:
      type: System.Guid
      description: "The GUID for the current context."
  overload: System.EnterpriseServices.ContextUtil.ContextId*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.DeactivateOnReturn
  id: DeactivateOnReturn
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: DeactivateOnReturn
  nameWithType: ContextUtil.DeactivateOnReturn
  fullName: System.EnterpriseServices.ContextUtil.DeactivateOnReturn
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;></xref> bit in the COM+ context."
  remarks: "The COM+ `done` bit determines how long the object remains active after finishing its work and can affect the duration of a transaction. When a method call returns, COM+ inspects the `done` bit. If the `done` bit is `true`, COM+ deactivates the object. If the `done` bit is `false`, the object is not deactivated."
  example:
  - "The following code example demonstrates the use of the DeactivateOnReturn property to ensure that a <xref:System.EnterpriseServices.ServicedComponent> is deactivated after a method call.  \n  \n [!code-vb[EnterpriseServices_Transaction#1](~/add/codesnippet/visualbasic/p-system.enterpriseservi_11_1.vb)]\n [!code-cs[EnterpriseServices_Transaction#1](~/add/codesnippet/csharp/p-system.enterpriseservi_11_1.cs)]\n [!code-cpp[EnterpriseServices_Transaction#1](~/add/codesnippet/cpp/p-system.enterpriseservi_11_1.cpp)]"
  syntax:
    content: public static bool DeactivateOnReturn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the object is to be deactivated when the method returns; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ContextUtil.DeactivateOnReturn*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.DisableCommit
  id: DisableCommit
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: DisableCommit()
  nameWithType: ContextUtil.DisableCommit()
  fullName: System.EnterpriseServices.ContextUtil.DisableCommit()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Sets both the <xref uid=&quot;langword_csharp_consistent&quot; name=&quot;consistent&quot; href=&quot;&quot;></xref> bit and the <xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;></xref> bit to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in the COM+ context."
  remarks: "If asked, the COM+ context votes to abort the current transaction, but the object is not deactivated on method return."
  example:
  - "The following code example calls the DisableCommit method.  \n  \n [!code-cpp[EnterpriseServicesContextUtil#3](~/add/codesnippet/cpp/m-system.enterpriseservi_20_1.cpp)]\n [!code-cs[EnterpriseServicesContextUtil#3](~/add/codesnippet/csharp/m-system.enterpriseservi_20_1.cs)]\n [!code-vb[EnterpriseServicesContextUtil#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_20_1.vb)]"
  syntax:
    content: public static void DisableCommit ();
    parameters: []
  overload: System.EnterpriseServices.ContextUtil.DisableCommit*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "No COM+ context is available."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.EnableCommit
  id: EnableCommit
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: EnableCommit()
  nameWithType: ContextUtil.EnableCommit()
  fullName: System.EnterpriseServices.ContextUtil.EnableCommit()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Sets the <xref uid=&quot;langword_csharp_consistent&quot; name=&quot;consistent&quot; href=&quot;&quot;></xref> bit to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the <xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;></xref> bit to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in the COM+ context."
  remarks: "If asked, the COM+ context will commit the current transaction, but the object is not deactivated on method return."
  example:
  - "The following code example calls the EnableCommit method.  \n  \n [!code-cpp[EnterpriseServicesContextUtil#4](~/add/codesnippet/cpp/m-system.enterpriseservi_24_1.cpp)]\n [!code-cs[EnterpriseServicesContextUtil#4](~/add/codesnippet/csharp/m-system.enterpriseservi_24_1.cs)]\n [!code-vb[EnterpriseServicesContextUtil#4](~/add/codesnippet/visualbasic/m-system.enterpriseservi_24_1.vb)]"
  syntax:
    content: public static void EnableCommit ();
    parameters: []
  overload: System.EnterpriseServices.ContextUtil.EnableCommit*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "No COM+ context is available."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)
  id: GetNamedProperty(System.String)
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: GetNamedProperty(String)
  nameWithType: ContextUtil.GetNamedProperty(String)
  fullName: System.EnterpriseServices.ContextUtil.GetNamedProperty(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Returns a named property from the COM+ context."
  remarks: "This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP)."
  syntax:
    content: public static object GetNamedProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the requested property."
    return:
      type: System.Object
      description: "The named property for the context."
  overload: System.EnterpriseServices.ContextUtil.GetNamedProperty*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)
  id: IsCallerInRole(System.String)
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: IsCallerInRole(String)
  nameWithType: ContextUtil.IsCallerInRole(String)
  fullName: System.EnterpriseServices.ContextUtil.IsCallerInRole(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Determines whether the caller is in the specified role."
  syntax:
    content: public static bool IsCallerInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "The name of the role to check."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the caller is in the specified role; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ContextUtil.IsCallerInRole*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.IsDefaultContext
  id: IsDefaultContext
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: IsDefaultContext()
  nameWithType: ContextUtil.IsDefaultContext()
  fullName: System.EnterpriseServices.ContextUtil.IsDefaultContext()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Determines whether the serviced component is activated in the default context. Serviced components that do not have COM+ catalog information are activated in the default context."
  syntax:
    content: public static bool IsDefaultContext ();
    parameters: []
    return:
      type: System.Boolean
      description: '**true** if the serviced component is activated in the default context; otherwise, **false**.'
  overload: System.EnterpriseServices.ContextUtil.IsDefaultContext*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.IsInTransaction
  id: IsInTransaction
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: IsInTransaction
  nameWithType: ContextUtil.IsInTransaction
  fullName: System.EnterpriseServices.ContextUtil.IsInTransaction
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a value that indicates whether the current context is transactional."
  remarks: ''
  example:
  - "The following code example gets the value of a IsInTransaction property.  \n  \n [!code-cpp[EnterpriseServicesContextUtil#5](~/add/codesnippet/cpp/p-system.enterpriseservi_31_1.cpp)]\n [!code-cs[EnterpriseServicesContextUtil#5](~/add/codesnippet/csharp/p-system.enterpriseservi_31_1.cs)]\n [!code-vb[EnterpriseServicesContextUtil#5](~/add/codesnippet/visualbasic/p-system.enterpriseservi_31_1.vb)]"
  syntax:
    content: public static bool IsInTransaction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current context is transactional; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ContextUtil.IsInTransaction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.IsSecurityEnabled
  id: IsSecurityEnabled
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: IsSecurityEnabled
  nameWithType: ContextUtil.IsSecurityEnabled
  fullName: System.EnterpriseServices.ContextUtil.IsSecurityEnabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a value that indicates whether role-based security is active in the current context."
  remarks: ''
  example:
  - "The following code example gets the value of a IsSecurityEnabled property.  \n  \n [!code-cpp[EnterpriseServicesContextUtil#6](~/add/codesnippet/cpp/p-system.enterpriseservi_20_1.cpp)]\n [!code-cs[EnterpriseServicesContextUtil#6](~/add/codesnippet/csharp/p-system.enterpriseservi_20_1.cs)]\n [!code-vb[EnterpriseServicesContextUtil#6](~/add/codesnippet/visualbasic/p-system.enterpriseservi_20_1.vb)]"
  syntax:
    content: public static bool IsSecurityEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current context has security enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ContextUtil.IsSecurityEnabled*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.MyTransactionVote
  id: MyTransactionVote
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: MyTransactionVote
  nameWithType: ContextUtil.MyTransactionVote
  fullName: System.EnterpriseServices.ContextUtil.MyTransactionVote
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_consistent&quot; name=&quot;consistent&quot; href=&quot;&quot;></xref> bit in the COM+ context."
  remarks: "When MyTransactionVote is set to `Commit`, the COM+ `consistent` bit is set to `true` and the COM+ context votes to commit the transaction. If MyTransactionVote is set to `Abort`, the `consistent` bit is set to `false` and the COM+ context votes to abort the transaction. The default value of the `consistent` bit is `true`.       The `consistent` bit casts a vote to commit or abort the transaction in which it executes, and the `done` bit finalizes the vote. COM+ inspects the `consistent` bit when the `done` bit is set to `true` on a method call return or when the object deactivates. Although an object&quot;s `consistent` bit can change repeatedly within each method call, only the last change counts."
  example:
  - "The following code example demonstrates how to use MyTransactionVote property to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.  \n  \n [!code-vb[EnterpriseServices_Transaction#1](~/add/codesnippet/visualbasic/p-system.enterpriseservi_22_1.vb)]\n [!code-cs[EnterpriseServices_Transaction#1](~/add/codesnippet/csharp/p-system.enterpriseservi_22_1.cs)]\n [!code-cpp[EnterpriseServices_Transaction#1](~/add/codesnippet/cpp/p-system.enterpriseservi_22_1.cpp)]"
  syntax:
    content: public static System.EnterpriseServices.TransactionVote MyTransactionVote { get; set; }
    return:
      type: System.EnterpriseServices.TransactionVote
      description: "One of the <xref href=&quot;System.EnterpriseServices.TransactionVote&quot;></xref> values, either <xref uid=&quot;langword_csharp_Commit&quot; name=&quot;Commit&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Abort&quot; name=&quot;Abort&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ContextUtil.MyTransactionVote*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.PartitionId
  id: PartitionId
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: PartitionId
  nameWithType: ContextUtil.PartitionId
  fullName: System.EnterpriseServices.ContextUtil.PartitionId
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a GUID for the current partition."
  syntax:
    content: public static Guid PartitionId { get; }
    return:
      type: System.Guid
      description: "The GUID for the current partition."
  overload: System.EnterpriseServices.ContextUtil.PartitionId*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows XP or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.SetAbort
  id: SetAbort
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: SetAbort()
  nameWithType: ContextUtil.SetAbort()
  fullName: System.EnterpriseServices.ContextUtil.SetAbort()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Sets the <xref uid=&quot;langword_csharp_consistent&quot; name=&quot;consistent&quot; href=&quot;&quot;></xref> bit to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the <xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;></xref> bit to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> in the COM+ context."
  remarks: "If asked, the context votes to abort the current transaction, and the object is deactivated on method return."
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#13](~/add/codesnippet/visualbasic/m-system.enterpriseservi_18_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#13](~/add/codesnippet/cpp/m-system.enterpriseservi_18_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#13](~/add/codesnippet/csharp/m-system.enterpriseservi_18_1.cs)]"
  syntax:
    content: public static void SetAbort ();
    parameters: []
  overload: System.EnterpriseServices.ContextUtil.SetAbort*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.SetComplete
  id: SetComplete
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: SetComplete()
  nameWithType: ContextUtil.SetComplete()
  fullName: System.EnterpriseServices.ContextUtil.SetComplete()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Sets the <xref uid=&quot;langword_csharp_consistent&quot; name=&quot;consistent&quot; href=&quot;&quot;></xref> bit and the <xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;></xref> bit to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> in the COM+ context."
  remarks: "If asked, the COM+ context will commit the current transaction, and the object is deactivated on method return."
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#13](~/add/codesnippet/visualbasic/m-system.enterpriseservi_6_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#13](~/add/codesnippet/cpp/m-system.enterpriseservi_6_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#13](~/add/codesnippet/csharp/m-system.enterpriseservi_6_1.cs)]"
  syntax:
    content: public static void SetComplete ();
    parameters: []
  overload: System.EnterpriseServices.ContextUtil.SetComplete*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)
  id: SetNamedProperty(System.String,System.Object)
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: SetNamedProperty(String,Object)
  nameWithType: ContextUtil.SetNamedProperty(String,Object)
  fullName: System.EnterpriseServices.ContextUtil.SetNamedProperty(String,Object)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Sets the named property for the COM+ context."
  remarks: "This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP)."
  syntax:
    content: public static void SetNamedProperty (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the property to set."
    - id: value
      type: System.Object
      description: "Object that represents the property value to set."
  overload: System.EnterpriseServices.ContextUtil.SetNamedProperty*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.SystemTransaction
  id: SystemTransaction
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: SystemTransaction
  nameWithType: ContextUtil.SystemTransaction
  fullName: System.EnterpriseServices.ContextUtil.SystemTransaction
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets the current transaction context."
  remarks: "If no transaction context exists when this property is accessed, a new transaction context is created and returned."
  syntax:
    content: public static System.Transactions.Transaction SystemTransaction { get; }
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;></xref> that represents the current transaction context."
  overload: System.EnterpriseServices.ContextUtil.SystemTransaction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.Transaction
  id: Transaction
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: Transaction
  nameWithType: ContextUtil.Transaction
  fullName: System.EnterpriseServices.ContextUtil.Transaction
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets an object describing the current COM+ DTC transaction."
  remarks: "The returned object supports the <xref:System.EnterpriseServices.ITransaction> interface if the transaction is a COM+ DTC transaction."
  syntax:
    content: public static object Transaction { get; }
    return:
      type: System.Object
      description: "An object that represents the current transaction."
  overload: System.EnterpriseServices.ContextUtil.Transaction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
- uid: System.EnterpriseServices.ContextUtil.TransactionId
  id: TransactionId
  parent: System.EnterpriseServices.ContextUtil
  langs:
  - csharp
  name: TransactionId
  nameWithType: ContextUtil.TransactionId
  fullName: System.EnterpriseServices.ContextUtil.TransactionId
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets the GUID of the current COM+ DTC transaction."
  remarks: ''
  example:
  - "The following code example gets the value of a TransactionId property.  \n  \n [!code-cpp[EnterpriseServicesContextUtil#7](~/add/codesnippet/cpp/p-system.enterpriseservi_23_1.cpp)]\n [!code-cs[EnterpriseServicesContextUtil#7](~/add/codesnippet/csharp/p-system.enterpriseservi_23_1.cs)]\n [!code-vb[EnterpriseServicesContextUtil#7](~/add/codesnippet/visualbasic/p-system.enterpriseservi_23_1.vb)]"
  syntax:
    content: public static Guid TransactionId { get; }
    return:
      type: System.Guid
      description: "A GUID representing the current COM+ DTC transaction, if one exists."
  overload: System.EnterpriseServices.ContextUtil.TransactionId*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no COM+ context available."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The platform is not Windows 2000 or later."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ContextUtil.ActivityId
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ActivityId
  nameWithType: ContextUtil.ActivityId
  fullName: System.EnterpriseServices.ContextUtil.ActivityId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.EnterpriseServices.ContextUtil.ApplicationId
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ApplicationId
  nameWithType: ContextUtil.ApplicationId
  fullName: System.EnterpriseServices.ContextUtil.ApplicationId
- uid: System.EnterpriseServices.ContextUtil.ApplicationInstanceId
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ApplicationInstanceId
  nameWithType: ContextUtil.ApplicationInstanceId
  fullName: System.EnterpriseServices.ContextUtil.ApplicationInstanceId
- uid: System.EnterpriseServices.ContextUtil.ContextId
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ContextId
  nameWithType: ContextUtil.ContextId
  fullName: System.EnterpriseServices.ContextUtil.ContextId
- uid: System.EnterpriseServices.ContextUtil.DeactivateOnReturn
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: DeactivateOnReturn
  nameWithType: ContextUtil.DeactivateOnReturn
  fullName: System.EnterpriseServices.ContextUtil.DeactivateOnReturn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ContextUtil.DisableCommit
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: DisableCommit()
  nameWithType: ContextUtil.DisableCommit()
  fullName: System.EnterpriseServices.ContextUtil.DisableCommit()
- uid: System.EnterpriseServices.ContextUtil.EnableCommit
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: EnableCommit()
  nameWithType: ContextUtil.EnableCommit()
  fullName: System.EnterpriseServices.ContextUtil.EnableCommit()
- uid: System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: GetNamedProperty(String)
  nameWithType: ContextUtil.GetNamedProperty(String)
  fullName: System.EnterpriseServices.ContextUtil.GetNamedProperty(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsCallerInRole(String)
  nameWithType: ContextUtil.IsCallerInRole(String)
  fullName: System.EnterpriseServices.ContextUtil.IsCallerInRole(String)
- uid: System.EnterpriseServices.ContextUtil.IsDefaultContext
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsDefaultContext()
  nameWithType: ContextUtil.IsDefaultContext()
  fullName: System.EnterpriseServices.ContextUtil.IsDefaultContext()
- uid: System.EnterpriseServices.ContextUtil.IsInTransaction
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsInTransaction
  nameWithType: ContextUtil.IsInTransaction
  fullName: System.EnterpriseServices.ContextUtil.IsInTransaction
- uid: System.EnterpriseServices.ContextUtil.IsSecurityEnabled
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsSecurityEnabled
  nameWithType: ContextUtil.IsSecurityEnabled
  fullName: System.EnterpriseServices.ContextUtil.IsSecurityEnabled
- uid: System.EnterpriseServices.ContextUtil.MyTransactionVote
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: MyTransactionVote
  nameWithType: ContextUtil.MyTransactionVote
  fullName: System.EnterpriseServices.ContextUtil.MyTransactionVote
- uid: System.EnterpriseServices.TransactionVote
  parent: System.EnterpriseServices
  isExternal: false
  name: TransactionVote
  nameWithType: TransactionVote
  fullName: System.EnterpriseServices.TransactionVote
- uid: System.EnterpriseServices.ContextUtil.PartitionId
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: PartitionId
  nameWithType: ContextUtil.PartitionId
  fullName: System.EnterpriseServices.ContextUtil.PartitionId
- uid: System.EnterpriseServices.ContextUtil.SetAbort
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SetAbort()
  nameWithType: ContextUtil.SetAbort()
  fullName: System.EnterpriseServices.ContextUtil.SetAbort()
- uid: System.EnterpriseServices.ContextUtil.SetComplete
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SetComplete()
  nameWithType: ContextUtil.SetComplete()
  fullName: System.EnterpriseServices.ContextUtil.SetComplete()
- uid: System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SetNamedProperty(String,Object)
  nameWithType: ContextUtil.SetNamedProperty(String,Object)
  fullName: System.EnterpriseServices.ContextUtil.SetNamedProperty(String,Object)
- uid: System.EnterpriseServices.ContextUtil.SystemTransaction
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SystemTransaction
  nameWithType: ContextUtil.SystemTransaction
  fullName: System.EnterpriseServices.ContextUtil.SystemTransaction
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.EnterpriseServices.ContextUtil.Transaction
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: Transaction
  nameWithType: ContextUtil.Transaction
  fullName: System.EnterpriseServices.ContextUtil.Transaction
- uid: System.EnterpriseServices.ContextUtil.TransactionId
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: TransactionId
  nameWithType: ContextUtil.TransactionId
  fullName: System.EnterpriseServices.ContextUtil.TransactionId
- uid: System.EnterpriseServices.ContextUtil.ActivityId*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ActivityId
  nameWithType: ContextUtil.ActivityId
- uid: System.EnterpriseServices.ContextUtil.ApplicationId*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ApplicationId
  nameWithType: ContextUtil.ApplicationId
- uid: System.EnterpriseServices.ContextUtil.ApplicationInstanceId*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ApplicationInstanceId
  nameWithType: ContextUtil.ApplicationInstanceId
- uid: System.EnterpriseServices.ContextUtil.ContextId*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: ContextId
  nameWithType: ContextUtil.ContextId
- uid: System.EnterpriseServices.ContextUtil.DeactivateOnReturn*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: DeactivateOnReturn
  nameWithType: ContextUtil.DeactivateOnReturn
- uid: System.EnterpriseServices.ContextUtil.DisableCommit*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: DisableCommit
  nameWithType: ContextUtil.DisableCommit
- uid: System.EnterpriseServices.ContextUtil.EnableCommit*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: EnableCommit
  nameWithType: ContextUtil.EnableCommit
- uid: System.EnterpriseServices.ContextUtil.GetNamedProperty*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: GetNamedProperty
  nameWithType: ContextUtil.GetNamedProperty
- uid: System.EnterpriseServices.ContextUtil.IsCallerInRole*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsCallerInRole
  nameWithType: ContextUtil.IsCallerInRole
- uid: System.EnterpriseServices.ContextUtil.IsDefaultContext*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsDefaultContext
  nameWithType: ContextUtil.IsDefaultContext
- uid: System.EnterpriseServices.ContextUtil.IsInTransaction*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsInTransaction
  nameWithType: ContextUtil.IsInTransaction
- uid: System.EnterpriseServices.ContextUtil.IsSecurityEnabled*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: IsSecurityEnabled
  nameWithType: ContextUtil.IsSecurityEnabled
- uid: System.EnterpriseServices.ContextUtil.MyTransactionVote*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: MyTransactionVote
  nameWithType: ContextUtil.MyTransactionVote
- uid: System.EnterpriseServices.ContextUtil.PartitionId*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: PartitionId
  nameWithType: ContextUtil.PartitionId
- uid: System.EnterpriseServices.ContextUtil.SetAbort*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SetAbort
  nameWithType: ContextUtil.SetAbort
- uid: System.EnterpriseServices.ContextUtil.SetComplete*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SetComplete
  nameWithType: ContextUtil.SetComplete
- uid: System.EnterpriseServices.ContextUtil.SetNamedProperty*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SetNamedProperty
  nameWithType: ContextUtil.SetNamedProperty
- uid: System.EnterpriseServices.ContextUtil.SystemTransaction*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: SystemTransaction
  nameWithType: ContextUtil.SystemTransaction
- uid: System.EnterpriseServices.ContextUtil.Transaction*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: Transaction
  nameWithType: ContextUtil.Transaction
- uid: System.EnterpriseServices.ContextUtil.TransactionId*
  parent: System.EnterpriseServices.ContextUtil
  isExternal: false
  name: TransactionId
  nameWithType: ContextUtil.TransactionId
