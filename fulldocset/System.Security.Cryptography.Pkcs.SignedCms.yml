### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignedCms
  id: SignedCms
  children:
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.Certificates
  - System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  - System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  - System.Security.Cryptography.Pkcs.SignedCms.Detached
  - System.Security.Cryptography.Pkcs.SignedCms.Encode
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  - System.Security.Cryptography.Pkcs.SignedCms.Version
  langs:
  - csharp
  name: SignedCms
  nameWithType: SignedCms
  fullName: System.Security.Cryptography.Pkcs.SignedCms
  type: Class
  summary: 'A classe de SignedCms permite iniciar sessão e verificar mensagens CMS/PKCS #7.'
  remarks: "RFC de sintaxe de mensagens criptográficas Especifica os seguintes tipos MIME e extensões de nome de ficheiro para mensagens CMS/PKCS #7 com estes tipos de conteúdo.      | Tipo de conteúdo | Tipo de MIME | Extensão |   |------------------|---------------|---------------|   | envelopedData | aplicação/pkcs7-mime |. p7m |   | signedData | pkcs7/aplicação-assinatura |. p7s.p7c|"
  syntax:
    content: public sealed class SignedCms
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O construtor de SignedCms cria uma instância do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe."
  remarks: "O <xref:System.Security.Cryptography.Pkcs.SignedCms>classe tem os seguintes valores de propriedade predefinida.</xref:System.Security.Cryptography.Pkcs.SignedCms>      | Propriedade | Valor predefinido |   |--------------|-------------------|   | <xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>| 1.2.840.113549.1.7.1 (dados) comprimento: zero |   | <xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>| Estado de desligado: `false` o conteúdo que está assinado está incluído na mensagem CMS/PKCS #7 juntamente com as informações de assinatura. |       A predefinição <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType>para signers é SubjectIdentifierType.IssuerAndSerialNumber.</xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> </xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A> </xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>       Se o estado desligado for `false` (predefinição), o conteúdo assinado está incluído na mensagem CMS/PKCS #7 juntamente com as informações de assinatura. Se o estado desligado for `true`, os clientes que não é possível descodificar a mensagens de S/MIME ainda podem ver o conteúdo da mensagem se é enviado separadamente. Isto poderá ser útil para uma aplicação de arquivo que arquiva conteúdo da mensagem, se o remetente da mensagem pode ser verificado para autenticidade."
  syntax:
    content: public SignedCms ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O construtor de SignedCms cria uma instância do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizando as informações dos conteúdos especificadas como o conteúdo interno."
  remarks: "Para os valores de propriedade predefinidos utilizados com este construtor, consulte <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se o estado desligado for `false` (predefinição), o conteúdo que está assinado está incluído na mensagem CMS/PKCS #7 juntamente com as informações de assinatura. Se o estado desligado for `true`, os clientes que não é possível descodificar a mensagens de S/MIME ainda podem ver o conteúdo da mensagem se é enviado separadamente. Isto poderá ser útil para uma aplicação de arquivo que arquiva conteúdo da mensagem, se o remetente da mensagem pode ser verificado para autenticidade."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objeto que especifica as informações dos conteúdos como o conteúdo interno do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> mensagem."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O construtor de SignedCms cria uma instância do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizando o tipo de identificador do requerente especificado como o tipo de identificador de requerente predefinido para signers."
  remarks: "Para os valores de propriedade predefinidos utilizados com este construtor, consulte <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se o estado desligado for `false` (predefinição), o conteúdo que está assinado está incluído na mensagem CMS/PKCS #7 juntamente com as informações de assinatura. Se o estado desligado for `true`, os clientes que não é possível descodificar a mensagens de S/MIME ainda podem ver o conteúdo da mensagem se é enviado separadamente. Isto poderá ser útil para uma aplicação de arquivo que arquiva conteúdo da mensagem, se o remetente da mensagem pode ser verificado para autenticidade."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> membro que especifica o tipo de identificador de requerente predefinido para signers."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O construtor de SignedCms cria uma instância do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizando as informações dos conteúdos especificadas como o conteúdo interna e utilizando o estado de exposição anulada."
  remarks: "Para os valores de propriedade predefinidos utilizados com este construtor, consulte <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se o estado desligado for `false` (predefinição), o conteúdo que está assinado está incluído na mensagem CMS/PKCS #7 juntamente com as informações de assinatura. Se o estado desligado for `true`, os clientes que não é possível descodificar a mensagens de S/MIME ainda podem ver o conteúdo da mensagem se é enviado separadamente. Isto poderá ser útil para uma aplicação de arquivo que arquiva conteúdo da mensagem, se o remetente da mensagem pode ser verificado para autenticidade."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objeto que especifica as informações dos conteúdos como o conteúdo interno do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> mensagem."
    - id: detached
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se o <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> objeto destina-se uma assinatura desligada.</xref:System.Boolean> Se `detached` é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a assinatura está desligada. Se `detached` é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a assinatura não é desligada."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O construtor de SignedCms cria uma instância do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizando o tipo de identificador do requerente especificado como o tipo de identificador de requerente predefinido para signers e informações de conteúdo como o conteúdo interna."
  remarks: "Para os valores de propriedade predefinidos utilizados com este construtor, consulte <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se o estado desligado for `false` (predefinição), o conteúdo que está assinado está incluído na mensagem CMS/PKCS #7 juntamente com as informações de assinatura. Se o estado desligado for `true`, os clientes que não é possível descodificar a mensagens de S/MIME ainda podem ver o conteúdo da mensagem se é enviado separadamente. Isto poderá ser útil para uma aplicação de arquivo que arquiva conteúdo da mensagem, se o remetente da mensagem pode ser verificado para autenticidade."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> membro que especifica o tipo de identificador de requerente predefinido para signers."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objeto que especifica as informações dos conteúdos como o conteúdo interno do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> mensagem."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O construtor de SignedCms cria uma instância do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizando o tipo de identificador do requerente especificado como o tipo de identificador de requerente predefinido para signers, as informações dos conteúdos como o conteúdo interna e através da utilização de estado de exposição anulada."
  remarks: 'Se o estado desligado for `false` (predefinição), o conteúdo que está assinado está incluído na mensagem CMS/PKCS #7 juntamente com as informações de assinatura. Se o estado desligado for `true`, os clientes que não é possível descodificar a mensagens de S/MIME ainda podem ver o conteúdo da mensagem se é enviado separadamente. Isto poderá ser útil para uma aplicação de arquivo que arquiva conteúdo da mensagem ou não pode ser verificado o remetente da mensagem para autenticidade.'
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> membro que especifica o tipo de identificador de requerente predefinido para signers."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objeto que especifica as informações dos conteúdos como o conteúdo interno do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> mensagem."
    - id: detached
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se o <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> objeto destina-se uma assinatura desligada.</xref:System.Boolean> Se `detached` é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a assinatura está desligada. Se desligado é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a assinatura não é desligada."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  id: Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'A propriedade de certificados obtém os certificados associados com a mensagem CMS/PKCS #7 codificada.'
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: 'Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> coleção que representa o conjunto de certificados para a mensagem CMS/PKCS #7 codificado.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'O método CheckHash verifica a integridade dos dados da mensagem CMS/PKCS #7. CheckHash é um método especializado utilizado em aplicações de infraestrutura de segurança específicos que apenas pretendem verificar o hash da mensagem CMS, em vez de efetuar uma verificação de assinatura digital completa. CheckHash autenticar o autor nem o remetente da mensagem porque este método envolve a verificar uma assinatura digital. Para verificar para fins gerais da integridade e a autenticidade da mensagem CMS/PKCS #7, utilize o &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; ou &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt; métodos.'
  remarks: 'Este método não fornecer autenticação da mensagem CMS/PKCS #7.'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada de método era inválida para o estado do objeto atual."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers'' certificates.'
  remarks: "Este método verifica todas as assinaturas, incluindo countersignatures, a mensagem CMS/PKCS #7. Se existirem assinados atributos incluídos com a mensagem, estes atributos também são verificados. Se for escolhida a opção para validar os certificados, a parte incluída completa da cadeia de certificados está validada.       Este método emite uma exceção se a verificação de uma assinatura digital falha ou não são cumpridos os requisitos de validação."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached. The message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_31_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_31_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_31_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_31_2.cs)]"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se apenas as assinaturas digitais são verificadas sem os certificados dos signers a ser validados.</xref:System.Boolean>       Se `verifySignatureOnly` é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, apenas as assinaturas digitais são verificadas. Se for <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, verificar as assinaturas digitais, os certificados dos signers são validados e efeitos os certificados são validados. O objetivo de um certificado é considerado válido, se o certificado não tem chave utilização ou se a utilização de chave suporta assinaturas digitais ou não rejeição."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada de método era inválida para o estado do objeto atual."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers'' certificates.'
  remarks: "Este método verifica todas as assinaturas, incluindo countersignatures, a mensagem CMS/PKCS #7. Se existirem assinados atributos incluídos com a mensagem, estes atributos também são verificados. Se for escolhida a opção para validar os certificados, a parte incluída completa da cadeia de certificados está validada.       Este método emite uma exceção se a verificação de uma assinatura digital falha ou não são cumpridos os requisitos de validação."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_2.cs)]"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> objetos que podem ser utilizados para validar a cadeia de certificados. Se não existem certificados adicionais estão a ser utilizado para validar a cadeia de certificados, utilize &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; em vez de CheckSignature."
    - id: verifySignatureOnly
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se apenas as assinaturas digitais são verificadas sem os certificados dos signers a ser validados.</xref:System.Boolean>       Se `verifySignatureOnly` é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, apenas as assinaturas digitais são verificadas. Se for <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, verificar as assinaturas digitais, os certificados dos signers são validados e efeitos os certificados são validados. O objetivo de um certificado é considerado válido, se o certificado não tem chave utilização ou se a utilização de chave suporta assinaturas digitais ou não rejeição."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada de método era inválida para o estado do objeto atual."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'O método ComputeSignature pede ao utilizador para selecionar um certificado de assinatura, cria uma assinatura e adiciona a assinatura para a mensagem CMS/PKCS #7.'
  remarks: "Este método apresenta uma interface de utilizador na qual escolher signers para esta mensagem. Isto requer que o processo atual está em execução *modo de utilizador interativa*, o que significa que o <xref:System.Environment.UserInteractive%2A?displayProperty=fullName>propriedade está definida como `true`.</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> Um processo é normalmente no modo de utilizador interativa, a menos que é um processo de serviço ou em execução no interior de uma aplicação Web.       Signers cujos certificados cumprem as condições seguintes serão apresentados na lista:-o certificado tem uma chave privada associada.      -O certificado está no seu período de validade.      -O certificado tem a utilização de chave ou uma utilização de chave que suporte assinaturas digitais ou não rejeição.       Certificados de signatário são escolhidos a partir do meu arquivo.      ## As seguintes permissões são necessárias para apresentar a interface de utilizador de segurança do .NET framework:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>as seguintes permissões são necessárias para aceder a chave de assinatura:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/m-system.security.crypto_77_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/m-system.security.crypto_77_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/m-system.security.crypto_77_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/m-system.security.crypto_77_2.cs)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'O método ComputeSignature cria uma assinatura utilizando o signatário especificado e adiciona a assinatura para a mensagem CMS/PKCS #7.'
  remarks: "## As seguintes permissões são necessárias para a chave de assinatura de acesso de segurança do .NET framework:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_2.cs)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> objeto que representa o signatário."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Cria uma assinatura utilizando o signatário especificado e adiciona a assinatura para a mensagem CMS/PKCS #7. Se o valor do parâmetro automática for <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e o <xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>propriedade o <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> o objeto especificado pelo parâmetro signatário não está definido como um certificado válido, este método pede ao utilizador para selecionar um certificado de assinatura.</xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>'
  remarks: "## As seguintes permissões são necessárias para apresentar a interface de utilizador de segurança do .NET framework:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>as seguintes permissões são necessárias para aceder a chave de assinatura:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> objeto que representa o signatário."
    - id: silent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>pedir ao utilizador para selecionar um certificado de assinatura."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O valor da <code> silent </code> parâmetro é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e não for especificado um certificado de assinatura."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  id: ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'A propriedade de encontrar obtém o conteúdo da mensagem CMS/PKCS #7 codificado interno.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }
    return:
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: 'A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> objeto que representa o conteúdo da mensagem CMS/PKCS #7 codificado.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O método Decode descodifica um codificado <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> mensagem. Após descodificar com êxito, é podem obter as informações de descodificados partir das propriedades do <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> objeto."
  remarks: "Este método repõe todas as variáveis de membros de objeto utilizando as informações obtidas do descodificar com êxito."
  example:
  - "The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_48_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_48_1.cs)]  \n  \n The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_48_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_48_2.cs)]"
  syntax:
    content: public void Decode (byte[] encodedMessage);
    parameters:
    - id: encodedMessage
      type: System.Byte[]
      description: 'Matriz de valores de bytes que representa a mensagem CMS/PKCS #7 codificada para possível descodificar.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  id: Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Obtém a propriedade desligado se a <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> objeto destina-se uma assinatura desligada."
  syntax:
    content: public bool Detached { get; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se o <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> objeto destina-se uma assinatura desligada.</xref:System.Boolean> Se esta propriedade é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a assinatura está desligada. Se esta propriedade é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a assinatura não é desligada."
  overload: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  id: Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'O método de codificar codifica as informações no objeto para uma mensagem CMS/PKCS #7.'
  syntax:
    content: public byte[] Encode ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de valores de bytes que representa a mensagem codificada. Pode possível descodificar a mensagem codificada pelo <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>método.</xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>"
  overload: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada de método era inválida para o estado do objeto atual."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  id: RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Remove a assinatura no índice especificado do <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>coleção.</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>"
  syntax:
    content: public void RemoveSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero da assinatura para remover."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Uma mensagem CMS/PKCS #7 não está assinada, e <code> index </code> é inválido.'
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que zero.       - ou - <code>index</code> é superior ao número de assinatura menos 1."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível remover a assinatura.       - ou - Ocorreu um erro interno de criptografia."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "O método RemoveSignature remove a assinatura especificada para <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> objeto."
  syntax:
    content: public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);
    parameters:
    - id: signerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> objeto que representa o contra-assinatura a ser removido."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma referência null foi transmitida para um método que não a aceite como um argumento válido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor de um argumento estava fora do intervalo permitido de valores, conforme definido pelo método chamado."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não foi possível concluir uma operação criptográfica."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  id: SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Obtém de propriedade SignerInfos o <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> coleção associada a mensagem CMS/PKCS #7.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: 'A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> objeto que representa as informações de signatário para a mensagem CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'A propriedade de versão obtém a versão da mensagem CMS/PKCS #7.'
  remarks: 'A versão determina se a mensagem é uma mensagem de sintaxe de mensagens criptográficas (CMS) ou uma mensagem de PKCS #7. CMS é um superconjunto mais recente de PKCS #7.'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: 'Um valor int que representa a versão de mensagem CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
- uid: System.Security.Cryptography.Pkcs.ContentInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: ContentInfo
  nameWithType: ContentInfo
  fullName: System.Security.Cryptography.Pkcs.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifierType
  nameWithType: SubjectIdentifierType
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms
  nameWithType: SignedCms.SignedCms
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash
  nameWithType: SignedCms.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature
  nameWithType: SignedCms.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedCms.ComputeSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode
  nameWithType: SignedCms.Decode
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode
  nameWithType: SignedCms.Encode
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature
  nameWithType: SignedCms.RemoveSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
