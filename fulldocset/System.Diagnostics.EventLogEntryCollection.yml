### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogEntryCollection
  id: EventLogEntryCollection
  children:
  - System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  - System.Diagnostics.EventLogEntryCollection.Count
  - System.Diagnostics.EventLogEntryCollection.GetEnumerator
  - System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: EventLogEntryCollection
  nameWithType: EventLogEntryCollection
  fullName: System.Diagnostics.EventLogEntryCollection
  type: Class
  summary: "Defines size and enumerators for a collection of <xref href=&quot;System.Diagnostics.EventLogEntry&quot;></xref> instances."
  remarks: "Use the EventLogEntryCollection class when reading the entries associated with an <xref:System.Diagnostics.EventLog> instance. The <xref:System.Diagnostics.EventLog.Entries%2A> property of the <xref:System.Diagnostics.EventLog> class is a collection of all the entries in the event log.       Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the EventLogEntryCollection. However, after you view the entire list, it is not updated with new entries."
  example:
  - "The following example demonstrates how to obtain event log information from an EventLogEntryCollection object.  \n  \n [!code-cs[EventLogEntry_CopyTo#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_8_1.cs)]\n [!code-cpp[EventLogEntry_CopyTo#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_8_1.cpp)]\n [!code-vb[EventLogEntry_CopyTo#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_8_1.vb)]"
  syntax:
    content: 'public class EventLogEntryCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  id: CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: CopyTo(EventLogEntry[],Int32)
  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copies the elements of the <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;></xref> to an array of <xref href=&quot;System.Diagnostics.EventLogEntry&quot;></xref> instances, starting at a particular array index."
  remarks: "Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>. An array of <xref:System.Diagnostics.EventLogEntry> instances is fixed at the time it is instantiated. Therefore, you cannot read new entries by using the array that is returned by the CopyTo method."
  example:
  - "The following example creates an <xref:System.Diagnostics.EventLogEntry> array and uses the CopyTo method to copy the contents of an <xref:System.Diagnostics.EventLogEntryCollection> into it.  \n  \n [!code-cs[EventLogEntry_CopyTo#2](~/add/codesnippet/csharp/c20f2fb2-3d8d-4b5e-8328-_1.cs)]\n [!code-vb[EventLogEntry_CopyTo#2](~/add/codesnippet/visualbasic/c20f2fb2-3d8d-4b5e-8328-_1.vb)]"
  syntax:
    content: public void CopyTo (System.Diagnostics.EventLogEntry[] entries, int index);
    parameters:
    - id: entries
      type: System.Diagnostics.EventLogEntry[]
      description: "The one-dimensional array of <xref href=&quot;System.Diagnostics.EventLogEntry&quot;></xref> instances that is the destination of the elements copied from the collection. The array must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in the array at which copying begins."
  overload: System.Diagnostics.EventLogEntryCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.Count
  id: Count
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: Count
  nameWithType: EventLogEntryCollection.Count
  fullName: System.Diagnostics.EventLogEntryCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets the number of entries in the event log (that is, the number of elements in the <xref href=&quot;System.Diagnostics.EventLogEntry&quot;></xref> collection)."
  remarks: "An <xref:System.Diagnostics.EventLogEntryCollection> represents a dynamic list of all the entries in a log. Therefore, the Count property can change during the lifetime of the <xref:System.Diagnostics.EventLogEntryCollection> instance that you create. It is usually best to work with the Count property directly instead of assigning its value to a variable."
  example:
  - "The following example demonstrates how to use the Count property to iterate through an <xref:System.Diagnostics.EventLogEntryCollection> object.  \n  \n [!code-cs[EventLogEntry_Item#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_25_1.cs)]\n [!code-cpp[EventLogEntry_Item#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_25_1.cpp)]\n [!code-vb[EventLogEntry_Item#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_25_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of entries currently in the event log."
  overload: System.Diagnostics.EventLogEntryCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EventLogEntryCollection.GetEnumerator()
  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Supports a simple iteration over the <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;></xref> object."
  remarks: "The object that is returned by the GetEnumerator method is a wrapper for the <xref:System.Diagnostics.EventLogEntryCollection> class that implements the <xref:System.Collections.IEnumerator> enumerator.      > [!NOTE] >  If the collection is changed during the iteration, the iteration is terminated. To avoid this possibility, see the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> property for an alternative technique for iterating through a collection."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An object that can be used to iterate over the collection."
  overload: System.Diagnostics.EventLogEntryCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EventLogEntryCollection.Item(Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets an entry in the event log, based on an index that starts at 0 (zero)."
  remarks: "<xref:System.Diagnostics.EventLogEntry> objects are indexed by the event log system according to the chronological order in which they arrived in the event log. Use the Item property to select a specific event log entry whose index in the collection is known.       Iterating through the <xref:System.Diagnostics.EventLogEntryCollection> instance steps through each <xref:System.Diagnostics.EventLogEntry> object sequentially. The collection is dynamic and the number of entries may not be immutable when you enter the loop. Therefore, you should use a `for each...next` loop instead of a `for(int i=0; i<count, i++)` loop to step through entries that are associated with the <xref:System.Diagnostics.EventLogEntryCollection> instance to examine the entire set of entries.       Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>."
  example:
  - "The following example demonstrates how to display information for the items in an <xref:System.Diagnostics.EventLogEntryCollection> object.  \n  \n [!code-cs[EventLogEntry_Item#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_8_1.cs)]\n [!code-cpp[EventLogEntry_Item#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_8_1.cpp)]\n [!code-vb[EventLogEntry_Item#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_8_1.vb)]"
  syntax:
    content: public virtual System.Diagnostics.EventLogEntry this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index that is associated with the event log entry."
    return:
      type: System.Diagnostics.EventLogEntry
      description: "The event log entry at the location that is specified by the <code>index</code> parameter."
  overload: System.Diagnostics.EventLogEntryCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copies the elements of the collection to an <xref:System.Array>, starting at a particular <xref:System.Array> index."
  remarks: "Use the <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> method of the <xref:System.Diagnostics.EventLogEntryCollection> class to copy all or part of the collection to an <xref:System.Diagnostics.EventLogEntry> array."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The one-dimensional <xref:System.Array> that is the destination of the elements that are copied from the collection. The <xref:System.Array> must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets a value that indicates whether access to the <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;></xref> is synchronized (thread-safe)."
  remarks: "For the <xref:System.Diagnostics.EventLogEntryCollection> class, the ICollection.IsSynchronized method always returns `false`."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if access to the collection is not synchronized (thread-safe)."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets an object that can be used to synchronize access to the <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;></xref> object."
  remarks: "For the <xref:System.Diagnostics.EventLogEntryCollection> class, the ICollection.SyncRoot property always returns the current <xref:System.Diagnostics.EventLogEntryCollection>."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the collection."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: CopyTo(EventLogEntry[],Int32)
  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
- uid: System.Diagnostics.EventLogEntry[]
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry[]
  spec.csharp:
  - uid: System.Diagnostics.EventLogEntry
    name: EventLogEntry
    nameWithType: EventLogEntry
    fullName: EventLogEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLogEntryCollection.Count
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Count
  nameWithType: EventLogEntryCollection.Count
  fullName: System.Diagnostics.EventLogEntryCollection.Count
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: EventLogEntryCollection.GetEnumerator()
  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: EventLogEntryCollection.Item(Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)
- uid: System.Diagnostics.EventLogEntry
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: CopyTo
  nameWithType: EventLogEntryCollection.CopyTo
- uid: System.Diagnostics.EventLogEntryCollection.Count*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Count
  nameWithType: EventLogEntryCollection.Count
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: EventLogEntryCollection.GetEnumerator
- uid: System.Diagnostics.EventLogEntryCollection.Item*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Item
  nameWithType: EventLogEntryCollection.Item
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
