### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogEntryCollection
  id: EventLogEntryCollection
  children:
  - System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  - System.Diagnostics.EventLogEntryCollection.Count
  - System.Diagnostics.EventLogEntryCollection.GetEnumerator
  - System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: EventLogEntryCollection
  nameWithType: EventLogEntryCollection
  fullName: System.Diagnostics.EventLogEntryCollection
  type: Class
  summary: "Define o tamanho e enumeradores para uma coleção de <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> instâncias."
  remarks: "Utilizar a classe de EventLogEntryCollection ao ler as entradas associadas a um <xref:System.Diagnostics.EventLog>instância.</xref:System.Diagnostics.EventLog> A <xref:System.Diagnostics.EventLog.Entries%2A>propriedade de <xref:System.Diagnostics.EventLog>classe é uma coleção de todas as entradas no registo de eventos.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Entries%2A>       Porque novas entradas são acrescentadas à lista de existente, avance através da coleção permite-lhe aceder a entradas que foram criadas depois de criado o EventLogEntryCollection originalmente. No entanto, depois de ver a lista completa, este não é atualizado com novas entradas."
  example:
  - "The following example demonstrates how to obtain event log information from an EventLogEntryCollection object.  \n  \n [!code-cs[EventLogEntry_CopyTo#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_8_1.cs)]\n [!code-cpp[EventLogEntry_CopyTo#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_8_1.cpp)]\n [!code-vb[EventLogEntry_CopyTo#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_8_1.vb)]"
  syntax:
    content: 'public class EventLogEntryCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  id: CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: CopyTo(EventLogEntry[],Int32)
  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copia os elementos do <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> para uma matriz de <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> instâncias, começando num índice de matriz específico."
  remarks: "Porque novas entradas são acrescentadas à lista de existente, avance através da coleção permite-lhe aceder a entradas que foram criadas depois de criado originalmente <xref:System.Diagnostics.EventLogEntryCollection>.</xref:System.Diagnostics.EventLogEntryCollection> Uma matriz de <xref:System.Diagnostics.EventLogEntry>instâncias é fixo no momento ser instanciado.</xref:System.Diagnostics.EventLogEntry> Por conseguinte, não é possível ler as novas entradas utilizando a matriz é devolvida pelo método CopyTo."
  example:
  - "The following example creates an <xref:System.Diagnostics.EventLogEntry> array and uses the CopyTo method to copy the contents of an <xref:System.Diagnostics.EventLogEntryCollection> into it.  \n  \n [!code-cs[EventLogEntry_CopyTo#2](~/add/codesnippet/csharp/c20f2fb2-3d8d-4b5e-8328-_1.cs)]\n [!code-vb[EventLogEntry_CopyTo#2](~/add/codesnippet/visualbasic/c20f2fb2-3d8d-4b5e-8328-_1.vb)]"
  syntax:
    content: public void CopyTo (System.Diagnostics.EventLogEntry[] entries, int index);
    parameters:
    - id: entries
      type: System.Diagnostics.EventLogEntry[]
      description: "A matriz unidimensional de <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> copiados de instâncias que é o destino dos elementos da coleção. A matriz tem de ter a indexação com base em zero."
    - id: index
      type: System.Int32
      description: "O índice baseado em zero na matriz em que copiar começa."
  overload: System.Diagnostics.EventLogEntryCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.Count
  id: Count
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: Count
  nameWithType: EventLogEntryCollection.Count
  fullName: System.Diagnostics.EventLogEntryCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o número de entradas no registo de eventos (ou seja, o número de elementos a <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> coleção)."
  remarks: "Um, <xref:System.Diagnostics.EventLogEntryCollection>representa uma lista dinâmica de todas as entradas no registo de um.</xref:System.Diagnostics.EventLogEntryCollection> Por conseguinte, a propriedade contagem pode alterar durante a duração do <xref:System.Diagnostics.EventLogEntryCollection>instância que criar.</xref:System.Diagnostics.EventLogEntryCollection> -Normalmente, é melhor trabalhar com a propriedade contagem diretamente em vez de atribuir o valor a uma variável."
  example:
  - "The following example demonstrates how to use the Count property to iterate through an <xref:System.Diagnostics.EventLogEntryCollection> object.  \n  \n [!code-cs[EventLogEntry_Item#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_25_1.cs)]\n [!code-cpp[EventLogEntry_Item#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_25_1.cpp)]\n [!code-vb[EventLogEntry_Item#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_25_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de entradas atualmente no registo de eventos."
  overload: System.Diagnostics.EventLogEntryCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EventLogEntryCollection.GetEnumerator()
  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Suporta uma iteração simple através do <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> objeto."
  remarks: "O objeto devolvido pelo método GetEnumerator é um wrapper para o <xref:System.Diagnostics.EventLogEntryCollection>classe que implementa o <xref:System.Collections.IEnumerator>enumerador.</xref:System.Collections.IEnumerator> </xref:System.Diagnostics.EventLogEntryCollection>      > [!NOTE] > Se a coleção foi alterada durante a iteração, a iteração é terminada. Para evitar esta possibilidade, consulte o <xref:System.Diagnostics.EventLogEntryCollection.Item%2A>propriedade para uma técnica alternativa para repetir uma coleção.</xref:System.Diagnostics.EventLogEntryCollection.Item%2A>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um objeto que pode ser utilizado para iterar na coleção."
  overload: System.Diagnostics.EventLogEntryCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EventLogEntryCollection.Item(Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém uma entrada no registo de eventos, com base num índice que começa em 0 (zero)."
  remarks: "<xref:System.Diagnostics.EventLogEntry>objetos são indexados pelo sistema de registo de eventos, de acordo com a ordem cronológica em que chegaram no registo de eventos.</xref:System.Diagnostics.EventLogEntry> Utilize a propriedade do Item para selecionar uma entrada de registo de eventos específico, cujo índice na coleção é conhecido.       Repetir o <xref:System.Diagnostics.EventLogEntryCollection>instância passos através de cada <xref:System.Diagnostics.EventLogEntry>objeto sequencialmente.</xref:System.Diagnostics.EventLogEntry> </xref:System.Diagnostics.EventLogEntryCollection> A coleção é dinâmica e o número de entradas não pode ser imutável quando introduzir o ciclo. Por conseguinte, deve utilizar um `for each...next` cíclicas em vez de um `for(int i=0; i<count, i++)` ciclo para seguir entradas que estão associadas a <xref:System.Diagnostics.EventLogEntryCollection>instância para examinar o conjunto completo de entradas.</xref:System.Diagnostics.EventLogEntryCollection>       Porque novas entradas são acrescentadas à lista de existente, avance através da coleção permite-lhe aceder a entradas que foram criadas depois de criado originalmente <xref:System.Diagnostics.EventLogEntryCollection>.</xref:System.Diagnostics.EventLogEntryCollection>"
  example:
  - "The following example demonstrates how to display information for the items in an <xref:System.Diagnostics.EventLogEntryCollection> object.  \n  \n [!code-cs[EventLogEntry_Item#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_8_1.cs)]\n [!code-cpp[EventLogEntry_Item#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_8_1.cpp)]\n [!code-vb[EventLogEntry_Item#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_8_1.vb)]"
  syntax:
    content: public virtual System.Diagnostics.EventLogEntry this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero associado a entrada de registo de eventos."
    return:
      type: System.Diagnostics.EventLogEntry
      description: "A entrada de registo de eventos na localização especificada pelo <code> index </code> parâmetro."
  overload: System.Diagnostics.EventLogEntryCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copia os elementos da coleção para um <xref:System.Array>, começando num determinado <xref:System.Array>índice.</xref:System.Array> </xref:System.Array>"
  remarks: "Utilize o <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A>método o <xref:System.Diagnostics.EventLogEntryCollection>classe para copiar a totalidade ou parte da coleção para um <xref:System.Diagnostics.EventLogEntry>matriz.</xref:System.Diagnostics.EventLogEntry> </xref:System.Diagnostics.EventLogEntryCollection> </xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O unidimensional <xref:System.Array>que é o destino dos elementos que são copiados da coleção.</xref:System.Array> O <xref:System.Array>tem de ter a indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice baseado em zero `array` em que copiar começa."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se o acesso à <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> está sincronizada (seguro para thread)."
  remarks: "Para o <xref:System.Diagnostics.EventLogEntryCollection>classe, o método de ICollection.IsSynchronized sempre devolve `false`.</xref:System.Diagnostics.EventLogEntryCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se o acesso à coleção não está sincronizado (seguro para thread)."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Diagnostics.EventLogEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um objeto que pode ser utilizado para sincronizar acesso para o <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> objeto."
  remarks: "Para a <xref:System.Diagnostics.EventLogEntryCollection>classe, a propriedade ICollection.SyncRoot sempre devolve <xref:System.Diagnostics.EventLogEntryCollection>.</xref:System.Diagnostics.EventLogEntryCollection> atual</xref:System.Diagnostics.EventLogEntryCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser utilizado para sincronizar o acesso à coleção."
  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: CopyTo(EventLogEntry[],Int32)
  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)
- uid: System.Diagnostics.EventLogEntry[]
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry[]
  spec.csharp:
  - uid: System.Diagnostics.EventLogEntry
    name: EventLogEntry
    nameWithType: EventLogEntry
    fullName: EventLogEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLogEntryCollection.Count
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Count
  nameWithType: EventLogEntryCollection.Count
  fullName: System.Diagnostics.EventLogEntryCollection.Count
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: EventLogEntryCollection.GetEnumerator()
  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: EventLogEntryCollection.Item(Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)
- uid: System.Diagnostics.EventLogEntry
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.EventLogEntryCollection.CopyTo*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: CopyTo
  nameWithType: EventLogEntryCollection.CopyTo
- uid: System.Diagnostics.EventLogEntryCollection.Count*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Count
  nameWithType: EventLogEntryCollection.Count
- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: EventLogEntryCollection.GetEnumerator
- uid: System.Diagnostics.EventLogEntryCollection.Item*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: Item
  nameWithType: EventLogEntryCollection.Item
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Diagnostics.EventLogEntryCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot
