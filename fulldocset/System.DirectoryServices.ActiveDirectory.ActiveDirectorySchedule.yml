### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  id: ActiveDirectorySchedule
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  langs:
  - csharp
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  type: Class
  summary: "A classe de ActiveDirectorySchedule representa a agenda semanal de uma replicação de serviços de domínio do Active Directory."
  syntax:
    content: public class ActiveDirectorySchedule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ActiveDirectorySchedule()
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> classe."
  syntax:
    content: public ActiveDirectorySchedule ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)'
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ActiveDirectorySchedule(ActiveDirectorySchedule)
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> classe, utilizando especificado <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> objeto."
  syntax:
    content: public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);
    parameters:
    - id: schedule
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule&quot;> </xref> objeto que é copiado para este objeto."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schedule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  id: RawSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém ou define o tridimensional que indica que momento durante a semana em que a origem está disponível para replicação."
  syntax:
    content: public bool[,,] RawSchedule { get; set; }
    return:
      type: System.Boolean[,,]
      description: "Tridimensional de <xref:System.Boolean>elementos em que o elemento seja <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a origem está disponível para replicação durante esse intervalo específico de 15 minutos.</xref:System.Boolean> O elemento é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se a origem não está disponível para replicação.       A matriz é o formato RawSchedule [&lt;dia da semana&gt;, &lt;hora&gt;, &lt;intervalo de&15; minutos&gt;]. Todos estes valores são baseado em zero e a semana começa no 00:00 no Domingo manhã, Hora Universal Coordenada.       Seguem-se os valores válidos para a dia da semana.       <table><thead><tr><th> Valor de dia da semana       </th><th> Indicados dia da semana.       </th></tr></thead><tbody><tr><td> 0       </td><td> Domingo       </td></tr><tr><td> 1       </td><td> Segunda-feira       </td></tr><tr><td> 2       </td><td> Terça-feira       </td></tr><tr><td> 3       </td><td> Quarta-feira       </td></tr><tr><td> 4       </td><td> Quinta-feira       </td></tr><tr><td> 5       </td><td> Sexta-feira       </td></tr><tr><td> 6       </td><td> Sábado       </td></tr></tbody></table>       A hora é baseado em zero e especificada no formato de 24 horas. Por exemplo, 13h00 e 14h00 de teria de ser especificado como 14. Os valores válidos são 0-23.       O intervalo de 15 minutos Especifica o bloco de 15 minutos, dentro da hora em que a origem está disponível para replicação. A tabela seguinte identifica os valores possíveis para o intervalo de 15 minutos.       <table><thead><tr><th> intervalo de&15; minutos       </th><th> Descrição       </th></tr></thead><tbody><tr><td> 0       </td><td> A origem está disponível para a replicação de 0 a 14 minutos após a hora.       </td></tr><tr><td> 1       </td><td> A origem está disponível para a replicação de 15 minutos 29 após a hora.       </td></tr><tr><td> 2       </td><td> A origem está disponível para a replicação de 30 minutos 44 após a hora.       </td></tr><tr><td> 3       </td><td> A origem está disponível para a replicação do 45 para 59 minutos após a hora.       </td></tr></tbody></table>       O exemplo do c# seguinte mostra como utilizar esta propriedade para determinar se a origem está disponível para replicação às 15:50 Hora Universal Coordenada Terça-feira.      ```c#   Boolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];   ```O exemplo do c# seguinte mostra como utilizar esta propriedade para calcular o intervalo de 15 minutos durante a execução, dividindo os minutos por 15.      ```c#   Boolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];   ```"
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  id: ResetSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: ResetSchedule()
  nameWithType: ActiveDirectorySchedule.ResetSchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Repõe a agenda completa indisponível."
  syntax:
    content: public void ResetSchedule ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Adiciona um intervalo de vezes para todos os dias da semana para a agenda."
  remarks: "Todos os parâmetros deste método são inclusive.       Este método é cumulativo e não remove as informações de agenda existente. Se existir sobreposição de uma agenda existente e a agenda de novo, o resultado continuarão a estar cumulativo. Para limpar a agenda, utilize o <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>método.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membros que especifica a primeira hora que a origem estará disponível para replicação."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membros que especifica o primeiro intervalo de 15 minutos que a origem estará disponível para replicação."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membros que especifica a hora final que a origem estará disponível para replicação."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membros que especifica o intervalo final de 15 minutos que a origem estará disponível para replicação."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Adiciona um intervalo de vezes para um único dia ao agendamento."
  remarks: "Todos os parâmetros deste método são inclusive.       Este método é cumulativo e não remove as informações de agenda existente. Se existir sobreposição de uma agenda existente e a agenda de novo, o resultado continuarão a estar cumulativo. Para limpar a agenda, utilize o <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>método.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: day
      type: System.DayOfWeek
      description: "Um do <xref:System.DayOfWeek>Membros que especifica o dia da semana em que a origem estará disponível para replicação.</xref:System.DayOfWeek>"
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membros que especifica a primeira hora que a origem estará disponível para replicação."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membros que especifica o primeiro intervalo de 15 minutos que a origem estará disponível para replicação."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membros que especifica a hora final que a origem estará disponível para replicação."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membros que especifica o intervalo final de 15 minutos que a origem estará disponível para replicação."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A hora de início é posterior à hora de fim."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Um ou mais parâmetros não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>days</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  id: SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  langs:
  - csharp
  name: SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Adiciona um intervalo dos tempos de vários dias para a agenda."
  remarks: "Todos os parâmetros deste método são inclusive.       Este método é cumulativo e não remove as informações de agenda existente. Se existir sobreposição de uma agenda existente e a agenda de novo, o resultado continuarão a estar cumulativo. Para limpar a agenda, utilize o <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>método.</xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A>"
  syntax:
    content: public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);
    parameters:
    - id: days
      type: System.DayOfWeek[]
      description: "Um do <xref:System.DayOfWeek>Membros que especifica o dia da semana em que a origem estará disponível para replicação.</xref:System.DayOfWeek>"
    - id: fromHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membros que especifica a primeira hora que a origem estará disponível para replicação."
    - id: fromMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membros que especifica o primeiro intervalo de 15 minutos que a origem estará disponível para replicação."
    - id: toHour
      type: System.DirectoryServices.ActiveDirectory.HourOfDay
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.HourOfDay&quot;> </xref> membros que especifica a hora final que a origem estará disponível para replicação."
    - id: toMinute
      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.MinuteOfHour&quot;> </xref> membros que especifica o intervalo final de 15 minutos que a origem estará disponível para replicação."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A hora de início é posterior à hora de fim."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Um ou mais parâmetros não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>days</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule()
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule(ActiveDirectorySchedule)
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[,,]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[,,]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ResetSchedule()
  nameWithType: ActiveDirectorySchedule.ResetSchedule()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DirectoryServices.ActiveDirectory.HourOfDay
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: HourOfDay
  nameWithType: HourOfDay
  fullName: System.DirectoryServices.ActiveDirectory.HourOfDay
- uid: System.DirectoryServices.ActiveDirectory.MinuteOfHour
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: MinuteOfHour
  nameWithType: MinuteOfHour
  fullName: System.DirectoryServices.ActiveDirectory.MinuteOfHour
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek,HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(DayOfWeek[],HourOfDay,MinuteOfHour,HourOfDay,MinuteOfHour)
- uid: System.DayOfWeek[]
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek[]
  spec.csharp:
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: DayOfWeek[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ActiveDirectorySchedule
  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: RawSchedule
  nameWithType: ActiveDirectorySchedule.RawSchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: ResetSchedule
  nameWithType: ActiveDirectorySchedule.ResetSchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetDailySchedule
  nameWithType: ActiveDirectorySchedule.SetDailySchedule
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule
  isExternal: false
  name: SetSchedule
  nameWithType: ActiveDirectorySchedule.SetSchedule
