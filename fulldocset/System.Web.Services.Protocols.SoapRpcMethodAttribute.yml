### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute
  id: SoapRpcMethodAttribute
  children:
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  - System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  langs:
  - csharp
  name: SoapRpcMethodAttribute
  nameWithType: SoapRpcMethodAttribute
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute
  type: Class
  summary: "Especifica que as mensagens SOAP enviados de e para a utilização de método <xref uid=&quot;langword_csharp_RPC&quot; name=&quot;RPC&quot; href=&quot;&quot;> </xref> formatação."
  remarks: "Web Services Description Language (WSDL) defines two styles for how an XML Web service method, or operation, can be formatted in a SOAP message: `RPC` and `Document`. `RPC` formatting refers to formatting the operation according to the SOAP specification for using SOAP for RPC; otherwise known as Section 7 of the SOAP specification. `RPC` formatting states that all parameters are encapsulated within a single XML element named after the XML Web service method and that each XML element within that XML element represents a parameter named after the parameter it is representing.  \n  \n SOAP messages formatted in both the `RPC` and `Document` styles can be used to communicate with an XML Web service in a Remote Procedure Call (RPC) manner; however the `Document` style can also easily be used to communicate in a loosely coupled manner. Therefore, `Document` style XML Web services is recommended. For more details, see the `Customizing SOAP Messages` topic.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952).  \n  \n This attribute can be applied to an XML Web service method on the server and a proxy class on the client. XML Web service methods that have the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> property set to `true` do not have access to their <xref:System.Web.HttpContext>. As such, accessing any of the properties of the <xref:System.Web.Services.WebService> class return `null`."
  example:
  - "The following code example sets the message style to `Rpc` for the `GetUserName` XML Web service method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class SoapRpcMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: SoapRpcMethodAttribute()
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.SoapRpcMethodAttribute&quot;> </xref> classe, a definição de todas as propriedades para os respetivos valores predefinidos."
  syntax:
    content: public SoapRpcMethodAttribute ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: SoapRpcMethodAttribute(String)
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.SoapRpcMethodAttribute&quot;> </xref> classe, definir o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>propriedade para o valor da <code> action </code> parâmetro.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>"
  syntax:
    content: public SoapRpcMethodAttribute (string action);
    parameters:
    - id: action
      type: System.String
      description: "O objetivo do pedido SOAP. Define o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>propriedade.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*>"
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  id: Action
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: Action
  nameWithType: SoapRpcMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o <xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> campo de cabeçalho HTTP do pedido SOAP."
  remarks: "Normalmente, a propriedade de ação é um URI que indica a intenção do pedido SOAP. No entanto, a especificação de SOAP coloca sem restrições no formato e se o URI se refere a um documento existente. A presença e conteúdo da propriedade de ação podem ser utilizados por servidores Web, tais como firewalls para adequadamente filtrar mensagens de pedido SOAP de HTTP.       Por predefinição, o .NET Framework versão 1.1 publica a propriedade de ação no `soapAction` atributo o `soap:operation` elemento para cada suportado enlace SOAP documentos WSDL gerado para um serviço XML Web service. O enlace SOAP suportado é SOAP 1.1.       Para obter mais informações sobre a especificação de SOAP, consulte o site W3C Web (http://www.w3.org/TR/SOAP)."
  example:
  - "The following code example sets the Action property to `http://www.contoso.com/Sample`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> campo de cabeçalho HTTP do pedido SOAP. A predefinição é http://tempuri.org/MethodName onde MethodName é o nome do método de serviço Web de XML."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  id: Binding
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: Binding
  nameWithType: SoapRpcMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o enlace que um método do serviço XML Web implementa uma operação para."
  remarks: "Um enlace, conforme definido por Web Services Description Language (WSDL), é semelhante a uma interface que define um conjunto concreto de operações. No que respeita à ASP.NET, cada método do serviço XML Web é uma operação dentro de um enlace. Os métodos do serviço XML Web são membros do enlace predefinido para um serviço XML Web service ou um enlace especificado dentro de um <xref:System.Web.Services.WebServiceBindingAttribute>aplicado a um serviço XML Web service.</xref:System.Web.Services.WebServiceBindingAttribute> Um serviço XML Web service pode implementar vários enlaces, se vários <xref:System.Web.Services.WebServiceBindingAttribute>atributos são aplicados a um serviço XML Web service.</xref:System.Web.Services.WebServiceBindingAttribute>       Um ou mais uma vez <xref:System.Web.Services.WebServiceBindingAttribute>atributos são aplicados a um serviço XML Web service, uma <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>pode ser aplicado a métodos do serviço XML Web individuais para indicar a operação de enlace implementada por um método do serviço XML Web específico.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.WebServiceBindingAttribute> Defina a <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A>propriedade de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>que para especificar o enlace um método do serviço XML Web implementa uma operação for.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A> Apenas um <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>podem ser aplicadas a um método do serviço Web de XML.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> Por conseguinte, um método do serviço XML Web só pode implementar uma operação para um enlace."
  example:
  - "The following code example demonstrates how to implement multiple bindings within an XML Web service.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Binding { get; set; }
    return:
      type: System.String
      description: "O enlace de que um método do serviço XML Web implementa uma operação para. A predefinição é o nome do serviço XML Web com &quot;Soap&quot; anexado."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  id: OneWay
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: OneWay
  nameWithType: SoapRpcMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define se um cliente do serviço XML Web aguarda que o servidor Web concluir o processamento de um método do serviço Web de XML."
  remarks: "Quando um método do serviço XML Web tem a propriedade OneWay definida como `true`, o cliente do serviço XML Web tem de aguardar para o servidor Web concluir o processamento do método do serviço Web de XML. Assim que o servidor Web tem anular a serialização de <xref:System.Web.Services.Protocols.SoapServerMessage>, mas antes de ele invoca o método do serviço XML Web, o servidor devolve um código de estado de HTTP 202.</xref:System.Web.Services.Protocols.SoapServerMessage> Um código de estado de HTTP 202 indica ao cliente que o servidor Web começou a processar a mensagem. Por conseguinte, um cliente do serviço XML Web recebe sem que o servidor Web processou com êxito a mensagem de confirmação.       Os métodos OneWay não podem ter um valor de retorno ou qualquer `out` parâmetros.       Se estiver a utilizar os métodos de serviço de XML Web do .NET Framework versão 1.0, de ter o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>atributo aplicado aos mesmos com o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>propriedade definida como `true`, não permitir o acesso aos respetivos <xref:System.Web.HttpContext>utilizando a estática <xref:System.Web.HttpContext.Current%2A>propriedade.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> Para o acesso a <xref:System.Web.HttpContext>, deriva da classe de implementar o método do serviço XML Web de <xref:System.Web.Services.WebService>e aceder a <xref:System.Web.Services.WebService.Context%2A>propriedade.</xref:System.Web.Services.WebService.Context%2A> </xref:System.Web.Services.WebService> </xref:System.Web.HttpContext>"
  example:
  - "The following code example sets the OneWay property to `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool OneWay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cliente do serviço XML Web não aguarda para o servidor Web processar completamente um método do serviço Web de XML; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  id: RequestElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: RequestElementName
  nameWithType: SoapRpcMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o elemento XML associado ao pedido SOAP para um método do serviço Web de XML."
  remarks: "Esta propriedade está obsoleta. Não afeta quaisquer comportamento."
  example:
  - "The following code example sets the RequestElementName property to `MyCustomRequestElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestElementName { get; set; }
    return:
      type: System.String
      description: "O elemento XML associado ao pedido SOAP para um método do serviço Web de XML. O valor predefinido é o nome do método de serviço Web de XML."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  id: RequestNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: RequestNamespace
  nameWithType: SoapRpcMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o espaço de nomes XML associado ao pedido SOAP para um método do serviço Web de XML."
  remarks: ''
  example:
  - "The following code example sets the RequestNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestNamespace { get; set; }
    return:
      type: System.String
      description: "O espaço de nomes XML, associado ao pedido SOAP para um método do serviço Web de XML. A predefinição é http://tempuri.org/."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  id: ResponseElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: ResponseElementName
  nameWithType: SoapRpcMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o elemento XML associado com a resposta SOAP para um método do serviço Web de XML."
  remarks: "A propriedade ResponseElementName define o elemento XML utilizado para os parâmetros dentro de encapsular a `Body` elemento da resposta SOAP."
  example:
  - "The following code example sets the ResponseElementName property to `MyCustomResponseElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseElementName { get; set; }
    return:
      type: System.String
      description: "O elemento XML associado ao pedido SOAP para um método do serviço Web de XML. O valor predefinido é `WebServiceNameResult`, onde `WebServiceName` é o nome do método de serviço Web de XML."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  id: ResponseNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: ResponseNamespace
  nameWithType: SoapRpcMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o espaço de nomes XML associado com a resposta SOAP para um método do serviço Web de XML."
  remarks: "A propriedade ResponseNamespace é utilizada no esquema XSD para o método do serviço XML Web na respetiva descrição do serviço."
  example:
  - "The following code example sets the ResponseNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseNamespace { get; set; }
    return:
      type: System.String
      description: "O espaço de nomes XML associado com a resposta SOAP para um método do serviço Web de XML. A predefinição é http://tempuri.org/."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  id: Use
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  langs:
  - csharp
  name: Use
  nameWithType: SoapRpcMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o enlace utilizado ao invocar o método."
  remarks: "O valor predefinido desta propriedade é <xref:System.Web.Services.Description.SoapBindingUse>.</xref:System.Web.Services.Description.SoapBindingUse>"
  syntax:
    content: public System.Web.Services.Description.SoapBindingUse Use { get; set; }
    return:
      type: System.Web.Services.Description.SoapBindingUse
      description: "Um membro do <xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;> </xref> especificando o enlace utilizado ao invocar o método de enumeração."
  overload: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: SoapRpcMethodAttribute()
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute()
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: SoapRpcMethodAttribute(String)
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.SoapRpcMethodAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapRpcMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapRpcMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapRpcMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapRpcMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapRpcMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapRpcMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapRpcMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapRpcMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use
- uid: System.Web.Services.Description.SoapBindingUse
  parent: System.Web.Services.Description
  isExternal: false
  name: SoapBindingUse
  nameWithType: SoapBindingUse
  fullName: System.Web.Services.Description.SoapBindingUse
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: SoapRpcMethodAttribute
  nameWithType: SoapRpcMethodAttribute.SoapRpcMethodAttribute
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Action*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapRpcMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapRpcMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapRpcMethodAttribute.OneWay
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapRpcMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapRpcMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapRpcMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapRpcMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapRpcMethodAttribute.Use*
  parent: System.Web.Services.Protocols.SoapRpcMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapRpcMethodAttribute.Use
