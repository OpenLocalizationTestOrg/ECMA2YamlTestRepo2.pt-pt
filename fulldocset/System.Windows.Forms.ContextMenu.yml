### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ContextMenu
  id: ContextMenu
  children:
  - System.Windows.Forms.ContextMenu.#ctor
  - System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.ContextMenu.Collapse
  - System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)
  - System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)
  - System.Windows.Forms.ContextMenu.Popup
  - System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)
  - System.Windows.Forms.ContextMenu.RightToLeft
  - System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)
  - System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.ContextMenu.SourceControl
  langs:
  - csharp
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: System.Windows.Forms.ContextMenu
  type: Class
  summary: "Represents a shortcut menu. Although <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;></xref> replaces and adds functionality to the ContextMenu control of previous versions, ContextMenu is retained for both backward compatibility and future use if you choose."
  remarks: "The ContextMenu class represents shortcut menus that can be displayed when the user clicks the right mouse button over a control or area of the form. Shortcut menus are typically used to combine different menu items from a <xref:System.Windows.Forms.MainMenu> of a form that are useful for the user given the context of the application. For example, you can use a shortcut menu assigned to a <xref:System.Windows.Forms.TextBox> control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text. You can also display new <xref:System.Windows.Forms.MenuItem> objects in a shortcut menu that are not located within a <xref:System.Windows.Forms.MainMenu> to provide situation specific commands that are not appropriate for the <xref:System.Windows.Forms.MainMenu> to display.       Typically, a shortcut menu is displayed when a user clicks the right mouse button over a control or the form itself. Visible controls and <xref:System.Windows.Forms.Form> have a <xref:System.Windows.Forms.Control.ContextMenu%2A> property that binds the ContextMenu class to the control that displays the shortcut menu. More than one control can use a ContextMenu. You can use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which control last displayed the shortcut menu in order to perform tasks specific to the control or to modify the shortcut menu displayed for the control.       You might want to know when the shortcut menu is being displayed in order to set check marks, disable items, and perform other menu tasks before the menu is displayed to the user. You can handle the <xref:System.Windows.Forms.ContextMenu.Popup> event to determine when the shortcut menu is being displayed.      > [!NOTE] >  In order to reuse <xref:System.Windows.Forms.MenuItem> objects that are displayed in a <xref:System.Windows.Forms.MainMenu> for use in a ContextMenu, you must create a copy of the menu using the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class. You can also merge menu items and their submenu items into a single <xref:System.Windows.Forms.MenuItem> object using the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method of the <xref:System.Windows.Forms.MenuItem> class."
  example:
  - "The following code example creates an event handler for the <xref:System.Windows.Forms.ContextMenu.Popup> event of the ContextMenu. The code in the event handler determines which of two controls a <xref:System.Windows.Forms.PictureBox> named `pictureBox1` and a <xref:System.Windows.Forms.TextBox> named `textBox1` is the control displaying the shortcut menu. Depending on which control caused the ContextMenu to display its shortcut menu, the control adds the appropriate <xref:System.Windows.Forms.MenuItem> objects to the ContextMenu. This example requires that you have an instance of the ContextMenu class, named `contextMenu1`, defined within the form. This example also requires that you have a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.PictureBox> added to a form and that the <xref:System.Windows.Forms.Control.ContextMenu%2A> property of these controls is set to `contextMenu1`.  \n  \n [!code-cs[Classic ContextMenu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_16_1.cs)]\n [!code-cpp[Classic ContextMenu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_16_1.cpp)]\n [!code-vb[Classic ContextMenu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_16_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Popup")]

      public class ContextMenu : System.Windows.Forms.Menu
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Menu
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.CreateMenuHandle
  - System.Windows.Forms.Menu.Dispose(System.Boolean)
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.IsParent
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  - System.Windows.Forms.Menu.ToString
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: ContextMenu()
  nameWithType: ContextMenu.ContextMenu()
  fullName: System.Windows.Forms.ContextMenu.ContextMenu()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ContextMenu&quot;></xref> class with no menu items specified."
  remarks: "Once you have used this version of the constructor, you can add menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property."
  syntax:
    content: public ContextMenu ();
    parameters: []
  overload: System.Windows.Forms.ContextMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: ContextMenu(MenuItem[])
  nameWithType: ContextMenu.ContextMenu(MenuItem[])
  fullName: System.Windows.Forms.ContextMenu.ContextMenu(MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ContextMenu&quot;></xref> class with a specified set of <xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref> objects."
  remarks: "You can use this version of the constructor to create a <xref:System.Windows.Forms.ContextMenu> that has its menu items specified at the time it is created. Once you have used this version of the constructor, you can add additional menu items to the <xref:System.Windows.Forms.ContextMenu> by using the <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> method of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class. You can access the <xref:System.Windows.Forms.Menu.MenuItemCollection> through the <xref:System.Windows.Forms.Menu.MenuItems%2A> property."
  example:
  - "The following code example demonstrates constructing a shortcut menu and using the <xref:System.Windows.Forms.ContextMenu.Show%2A> method. To run the example, paste the following code in a form containing a button named Button1. Ensure all events are associated with their event-handling methods.  \n  \n [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.c_19_1.cpp)]\n [!code-cs[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.c_19_1.cs)]\n [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_19_1.vb)]"
  syntax:
    content: public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);
    parameters:
    - id: menuItems
      type: System.Windows.Forms.MenuItem[]
      description: "An array of <xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref> objects that represent the menu items to add to the shortcut menu."
  overload: System.Windows.Forms.ContextMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.Collapse
  id: Collapse
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: Collapse
  nameWithType: ContextMenu.Collapse
  fullName: System.Windows.Forms.ContextMenu.Collapse
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the shortcut menu collapses."
  remarks: "For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Collapse event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ContextMenu> named `ContextMenu1`. Then ensure that the event handler is associated with the Collapse event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#170](~/add/codesnippet/csharp/e-system.windows.forms.c_84_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#170](~/add/codesnippet/visualbasic/e-system.windows.forms.c_84_1.vb)]"
  syntax:
    content: public event EventHandler Collapse;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)
  id: OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: OnCollapse(EventArgs)
  nameWithType: ContextMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.ContextMenu.OnCollapse(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ContextMenu.Collapse&quot;></xref> event."
  syntax:
    content: protected virtual void OnCollapse (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ContextMenu.OnCollapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)
  id: OnPopup(System.EventArgs)
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: OnPopup(EventArgs)
  nameWithType: ContextMenu.OnPopup(EventArgs)
  fullName: System.Windows.Forms.ContextMenu.OnPopup(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ContextMenu.Popup&quot;></xref> event"
  syntax:
    content: protected virtual void OnPopup (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ContextMenu.OnPopup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.Popup
  id: Popup
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: Popup
  nameWithType: ContextMenu.Popup
  fullName: System.Windows.Forms.ContextMenu.Popup
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs before the shortcut menu is displayed."
  remarks: "You can use this event to initialize the <xref:System.Windows.Forms.MenuItem> objects before they are displayed. For example, if you use a <xref:System.Windows.Forms.ContextMenu> for three <xref:System.Windows.Forms.TextBox> controls and you want to disable certain menu items in the <xref:System.Windows.Forms.ContextMenu> depending on which <xref:System.Windows.Forms.TextBox> is displaying the shortcut menu, you can create an event handler for this event. You could use the <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> property to determine which <xref:System.Windows.Forms.TextBox> is about to display the <xref:System.Windows.Forms.ContextMenu> and disable the appropriate <xref:System.Windows.Forms.MenuItem> objects.       For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates an event handler for the Popup event of the <xref:System.Windows.Forms.ContextMenu>. The code in the event handler determines which of two controls a <xref:System.Windows.Forms.PictureBox> named `pictureBox1` and a <xref:System.Windows.Forms.TextBox> named `textBox1` is the control displaying the shortcut menu. Depending on which control caused the <xref:System.Windows.Forms.ContextMenu> to display its shortcut menu, the control adds the appropriate <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.ContextMenu>. This example requires that you have an instance of the <xref:System.Windows.Forms.ContextMenu> class, named `contextMenu1`, defined within the form. This example also requires that you have a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.PictureBox> added to a form and that the <xref:System.Windows.Forms.Control.ContextMenu%2A> property of these controls is set to `contextMenu1`.  \n  \n [!code-cs[Classic ContextMenu Example#1](~/add/codesnippet/csharp/e-system.windows.forms.c_28_1.cs)]\n [!code-cpp[Classic ContextMenu Example#1](~/add/codesnippet/cpp/e-system.windows.forms.c_28_1.cpp)]\n [!code-vb[Classic ContextMenu Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_28_1.vb)]"
  syntax:
    content: public event EventHandler Popup;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys,Control)
  nameWithType: ContextMenu.ProcessCmdKey(Message,Keys,Control)
  fullName: System.Windows.Forms.ContextMenu.ProcessCmdKey(Message,Keys,Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes a command key."
  remarks: "This method is called during message preprocessing to handle command keys. Command keys are keys that always take precedence over regular input keys. Examples of command keys include accelerators and menu shortcuts. The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key. This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.       The ProcessCmdKey method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key. If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent&quot;s ProcessCmdKey method. The net effect is that command keys are &quot;bubbled&quot; up the control hierarchy. In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key. Modifier keys include the SHIFT, CTRL, and ALT keys."
  syntax:
    content: protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;></xref>, passed by reference, that represents the window message to process."
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "One of the <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key to process."
    - id: control
      type: System.Windows.Forms.Control
      description: "The control to which the command key applies."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the character was processed by the control; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ContextMenu.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: RightToLeft
  nameWithType: ContextMenu.RightToLeft
  fullName: System.Windows.Forms.ContextMenu.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether text displayed by the control is displayed from right to left."
  remarks: "This property enables your menus to support languages that are written from right to left. When this property is set to `RightToLeft.Yes`, the menu item text is displayed from right to left instead of the default left to right method.      > [!NOTE] >  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A> property."
  syntax:
    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "One of the <xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref> values."
  overload: System.Windows.Forms.ContextMenu.RightToLeft*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The value assigned to the property is not a valid member of the <xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref> enumeration."
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)
  id: Show(System.Windows.Forms.Control,System.Drawing.Point)
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: Show(Control,Point)
  nameWithType: ContextMenu.Show(Control,Point)
  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Displays the shortcut menu at the specified position."
  remarks: "Typically, a <xref:System.Windows.Forms.ContextMenu> is displayed when the user clicks the right mouse button on a control or area of the form that the <xref:System.Windows.Forms.ContextMenu> is bound to. You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control. This method does not return until the menu is dismissed."
  example:
  - "The following code example demonstrates constructing a shortcut menu and using the Show method. To run the example, paste the following code in a form containing a button named Button1. Ensure all events are associated with their event-handling methods.  \n  \n [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/cpp/c62c0647-656a-4f19-b841-_1.cpp)]\n [!code-cs[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/csharp/c62c0647-656a-4f19-b841-_1.cs)]\n [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/add/codesnippet/visualbasic/c62c0647-656a-4f19-b841-_1.vb)]"
  syntax:
    content: public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);
    parameters:
    - id: control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref> that specifies the control with which this shortcut menu is associated."
    - id: pos
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;></xref> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter."
  overload: System.Windows.Forms.ContextMenu.Show*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>control</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The handle of the control does not exist or the control is not visible."
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)
  id: Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: Show(Control,Point,LeftRightAlignment)
  nameWithType: ContextMenu.Show(Control,Point,LeftRightAlignment)
  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point,LeftRightAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Displays the shortcut menu at the specified position and with the specified alignment."
  syntax:
    content: public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);
    parameters:
    - id: control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref> that specifies the control with which this shortcut menu is associated."
    - id: pos
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;></xref> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the `control` parameter."
    - id: alignment
      type: System.Windows.Forms.LeftRightAlignment
      description: "A <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;></xref> that specifies the alignment of the control relative to the `pos` parameter."
  overload: System.Windows.Forms.ContextMenu.Show*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ContextMenu.SourceControl
  id: SourceControl
  parent: System.Windows.Forms.ContextMenu
  langs:
  - csharp
  name: SourceControl
  nameWithType: ContextMenu.SourceControl
  fullName: System.Windows.Forms.ContextMenu.SourceControl
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the control that is displaying the shortcut menu."
  remarks: "This property enables you to determine which control currently displays the shortcut menu defined in the <xref:System.Windows.Forms.ContextMenu>. If the shortcut menu is not currently displayed, you can use this property to determine which control last displayed the shortcut menu. You can use this property in the <xref:System.Windows.Forms.ContextMenu.Popup> event to ensure that the control displays the proper menu items. You can also use this property to pass a reference to the control to a method that performs the tasks associated with a menu command displayed in the shortcut menu. Since the <xref:System.Windows.Forms.Form> class inherits from <xref:System.Windows.Forms.Control>, you can also use this property if the <xref:System.Windows.Forms.ContextMenu> is associated with a form."
  example:
  - "The following code example creates an event handler for the <xref:System.Windows.Forms.ContextMenu.Popup> event of the <xref:System.Windows.Forms.ContextMenu>. The code in the event handler determines which of two controls a <xref:System.Windows.Forms.PictureBox> named `pictureBox1` and a <xref:System.Windows.Forms.TextBox> named `textBox1` is the control displaying the shortcut menu. Depending on which control caused the <xref:System.Windows.Forms.ContextMenu> to display its shortcut menu, the control adds the appropriate <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.ContextMenu>. This example requires that you have an instance of the <xref:System.Windows.Forms.ContextMenu> class, named `contextMenu1`, defined within the form. This example also requires that you have a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.PictureBox> added to a form and that the <xref:System.Windows.Forms.Control.ContextMenu%2A> property of these controls is set to `contextMenu1`.  \n  \n [!code-cs[Classic ContextMenu Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_3_1.cs)]\n [!code-cpp[Classic ContextMenu Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_3_1.cpp)]\n [!code-vb[Classic ContextMenu Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_3_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Control SourceControl { get; }
    return:
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;></xref> that represents the control that is displaying the shortcut menu. If no control has displayed the shortcut menu, the property returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ContextMenu.SourceControl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Menu
  isExternal: false
  name: System.Windows.Forms.Menu
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.ContextMenu.#ctor
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: ContextMenu()
  nameWithType: ContextMenu.ContextMenu()
  fullName: System.Windows.Forms.ContextMenu.ContextMenu()
- uid: System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: ContextMenu(MenuItem[])
  nameWithType: ContextMenu.ContextMenu(MenuItem[])
  fullName: System.Windows.Forms.ContextMenu.ContextMenu(MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.ContextMenu.Collapse
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: Collapse
  nameWithType: ContextMenu.Collapse
  fullName: System.Windows.Forms.ContextMenu.Collapse
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: OnCollapse(EventArgs)
  nameWithType: ContextMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.ContextMenu.OnCollapse(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: OnPopup(EventArgs)
  nameWithType: ContextMenu.OnPopup(EventArgs)
  fullName: System.Windows.Forms.ContextMenu.OnPopup(EventArgs)
- uid: System.Windows.Forms.ContextMenu.Popup
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: Popup
  nameWithType: ContextMenu.Popup
  fullName: System.Windows.Forms.ContextMenu.Popup
- uid: System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: ProcessCmdKey(Message,Keys,Control)
  nameWithType: ContextMenu.ProcessCmdKey(Message,Keys,Control)
  fullName: System.Windows.Forms.ContextMenu.ProcessCmdKey(Message,Keys,Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.ContextMenu.RightToLeft
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: RightToLeft
  nameWithType: ContextMenu.RightToLeft
  fullName: System.Windows.Forms.ContextMenu.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: Show(Control,Point)
  nameWithType: ContextMenu.Show(Control,Point)
  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: Show(Control,Point,LeftRightAlignment)
  nameWithType: ContextMenu.Show(Control,Point,LeftRightAlignment)
  fullName: System.Windows.Forms.ContextMenu.Show(Control,Point,LeftRightAlignment)
- uid: System.Windows.Forms.LeftRightAlignment
  parent: System.Windows.Forms
  isExternal: false
  name: LeftRightAlignment
  nameWithType: LeftRightAlignment
  fullName: System.Windows.Forms.LeftRightAlignment
- uid: System.Windows.Forms.ContextMenu.SourceControl
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: SourceControl
  nameWithType: ContextMenu.SourceControl
  fullName: System.Windows.Forms.ContextMenu.SourceControl
- uid: System.Windows.Forms.ContextMenu.#ctor*
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: ContextMenu
  nameWithType: ContextMenu.ContextMenu
- uid: System.Windows.Forms.ContextMenu.OnCollapse*
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: OnCollapse
  nameWithType: ContextMenu.OnCollapse
- uid: System.Windows.Forms.ContextMenu.OnPopup*
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: OnPopup
  nameWithType: ContextMenu.OnPopup
- uid: System.Windows.Forms.ContextMenu.ProcessCmdKey*
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: ProcessCmdKey
  nameWithType: ContextMenu.ProcessCmdKey
- uid: System.Windows.Forms.ContextMenu.RightToLeft*
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: RightToLeft
  nameWithType: ContextMenu.RightToLeft
- uid: System.Windows.Forms.ContextMenu.Show*
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: Show
  nameWithType: ContextMenu.Show
- uid: System.Windows.Forms.ContextMenu.SourceControl*
  parent: System.Windows.Forms.ContextMenu
  isExternal: false
  name: SourceControl
  nameWithType: ContextMenu.SourceControl
