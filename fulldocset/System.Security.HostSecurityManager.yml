### YamlMime:ManagedReference
items:
- uid: System.Security.HostSecurityManager
  id: HostSecurityManager
  children:
  - System.Security.HostSecurityManager.#ctor
  - System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  - System.Security.HostSecurityManager.DomainPolicy
  - System.Security.HostSecurityManager.Flags
  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: HostSecurityManager
  nameWithType: HostSecurityManager
  fullName: System.Security.HostSecurityManager
  type: Class
  summary: "Permite o controlo e personalização do comportamento de segurança para os domínios de aplicação."
  remarks: "Quando cria um novo <xref:System.AppDomain>o tempo de execução de idioma comum consulta <xref:System.AppDomainManager>quanto à presença de um HostSecurityManager, que participa nas decisões de segurança para <xref:System.AppDomain>.</xref:System.AppDomain> </xref:System.AppDomainManager> </xref:System.AppDomain>  Fornecedores de anfitrião devem implementar um Gestor de segurança do anfitrião que herda da classe de HostSecurityManager."
  example:
  - "The following example shows a very simple implementation of a HostSecurityManager.  \n  \n [!code-cs[System.Security.HostSecurityManager#1](~/add/codesnippet/csharp/t-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#1](~/add/codesnippet/visualbasic/t-system.security.hostse_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class HostSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.#ctor
  id: '#ctor'
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.HostSecurityManager&quot;> </xref> classe."
  syntax:
    content: public HostSecurityManager ();
    parameters: []
  overload: System.Security.HostSecurityManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina se uma aplicação deve ser executada."
  remarks: "Este método pode ser substituído por uma classe derivada. A implementação base activa o Gestor de segurança da aplicação para determinar se a aplicação deve ser executada.       A implementação base não utiliza provas o ativador. No entanto, uma implementação substituída poderia utilizar a provas de ativador para determinar a provas de segurança para o domínio de aplicação tentar ativar a aplicação."
  example:
  - "The following example shows how to override the DetermineApplicationTrust method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#3](~/add/codesnippet/csharp/c64c31c7-d035-4489-84b0-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#3](~/add/codesnippet/visualbasic/c64c31c7-d035-4489-84b0-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: applicationEvidence
      type: System.Security.Policy.Evidence
      description: "A prova da aplicação para ser ativado."
    - id: activatorEvidence
      type: System.Security.Policy.Evidence
      description: "Opcionalmente, a provas para o domínio a ativação da aplicação."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "O contexto de confiança."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Um objeto que contém informações de confiança acerca da aplicação."
  overload: System.Security.HostSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationEvidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> não foi possível encontrar o objeto na prova da aplicação.       - ou - <xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>é propriedade de argumentos de activação <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> conceder o conjunto não contém o pedido mínimo definido especificado pelo <xref href=&quot;System.ActivationContext&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DomainPolicy
  id: DomainPolicy
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Quando substituí-lo de uma classe derivada, obtém a política de segurança para o domínio de aplicação atual."
  remarks: "Esta propriedade pode ser substituída numa classe derivada. Devolve a implementação base sempre `null`.       Esta propriedade é chamada no <xref:System.AppDomain>hora de criação.</xref:System.AppDomain> Permite que um anfitrião fornecer uma política para o atual <xref:System.AppDomain>.</xref:System.AppDomain>  Um nível de política inclui os seguintes:-um conjunto de grupos de código é organizado por uma árvore de Root único.      -Um conjunto de conjuntos de permissões designado que são referenciados por grupos de código para especificar permissões para ser concedido ao código que pertencem ao grupo de código.      -A lista de assemblagens totalmente fidedignas.      > [!IMPORTANT] > Consulte as notas para os herdeiros para o <xref:System.Security.HostSecurityManager>classe para obter informações de implementação crítico.</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }
    return:
      type: System.Security.Policy.PolicyLevel
      description: "A política de segurança para o domínio de aplicação atual. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.HostSecurityManager.DomainPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Este método utiliza a política acesso a código (CAS) de segurança, que é obsoleta no [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Para ativar a política CAS para compatibilidade com versões anteriores do .NET Framework, utilize o [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.HostSecurityManager.Flags
  id: Flags
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Obtém o sinalizador que representa os componentes de política de segurança de preocupação para o anfitrião."
  remarks: "Esta propriedade pode ser substituída numa classe derivada. A implementação base sempre devolve <xref:System.Security.HostSecurityManagerOptions>.</xref:System.Security.HostSecurityManagerOptions>       O anfitrião derivado pode alterar o valor desta propriedade quando apenas um subconjunto do <xref:System.Security.HostSecurityManagerOptions>é de interesse.</xref:System.Security.HostSecurityManagerOptions>  Os subconjuntos possíveis incluem none, o conjunto negado, o nível de política e prova de assemblagem."
  example:
  - "The following example shows how to override the Flags property for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#2](~/add/codesnippet/csharp/p-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#2](~/add/codesnippet/visualbasic/p-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.HostSecurityManagerOptions Flags { get; }
    return:
      type: System.Security.HostSecurityManagerOptions
      description: "Um dos valores da enumeração que especifica os componentes da política de segurança. A predefinição é <xref href=&quot;System.Security.HostSecurityManagerOptions&quot;> </xref>."
  overload: System.Security.HostSecurityManager.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  id: GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Pedidos de um tipo de prova específico para o domínio de aplicação."
  remarks: "Este método pode ser substituído por uma classe derivada. Devolve a implementação base `null`.       O language runtime chama este método quando é necessária uma prova do tipo especificado para o atual <xref:System.AppDomain>.</xref:System.AppDomain> O valor devolvido é utilizado como provas fornecido pelo anfitrião e está armazenado no <xref:System.AppDomain.Evidence%2A>coleção do <xref:System.AppDomain.CurrentDomain%2A>propriedade.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.Evidence%2A> Pode utilizar o <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>método para obter a gerado provas da coleção.</xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       Para obter uma chamada de retorno para este método, anfitriões tem de especificar o <xref:System.Security.HostSecurityManagerOptions>mostram o <xref:System.Security.HostSecurityManager.Flags%2A>propriedade.</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       Este método de gerar provas permite que os anfitriões atrasar a geração de provas para um <xref:System.AppDomain>até a provas é necessária.</xref:System.AppDomain> Na versão do .NET Framework 3.5 e versões anteriores, era necessário fornecer <xref:System.AppDomain>provas no momento de carga através da substituição de <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>método.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> Recomendamos que utilize GenerateAppDomainEvidence para fornecer provas em vez de substituir <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>       O método GenerateAppDomainEvidence denomina-se novamente para apenas para tipos de provas de que o anfitrião tem especificada na substituição do <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>método.</xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>       Um valor de retorno da `null` indica que o anfitrião não é possível gerar provas deste tipo específico."
  example:
  - "The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#6](~/add/codesnippet/csharp/m-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#6](~/add/codesnippet/visualbasic/m-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "O tipo de prova."
    return:
      type: System.Security.Policy.EvidenceBase
      description: "A prova de domínio da aplicação pedida."
  overload: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Pedidos de um tipo de prova específico para a assemblagem."
  remarks: "Este método pode ser substituído por uma classe derivada. Devolve a implementação base `null`.       O language runtime chama este método quando é necessária uma prova do tipo especificado para a assemblagem atual. O valor devolvido é utilizado como provas fornecido pelo anfitrião e está armazenado no <xref:System.Reflection.Assembly.Evidence%2A>propriedade.</xref:System.Reflection.Assembly.Evidence%2A> Pode utilizar o <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>método para obter a provas gerada do <xref:System.Reflection.Assembly.Evidence%2A>propriedade.</xref:System.Reflection.Assembly.Evidence%2A> </xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       Para obter uma chamada de retorno para este método, anfitriões tem de especificar o <xref:System.Security.HostSecurityManagerOptions>mostram o <xref:System.Security.HostSecurityManager.Flags%2A>propriedade.</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       Este método de gerar provas permite que os anfitriões atrasar a geração de provas para um <xref:System.AppDomain>até a provas é necessária.</xref:System.AppDomain> No .NET Framework 3.5 e versões anteriores, era necessário fornecer <xref:System.AppDomain>provas no momento de carga através da substituição de <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>método.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> Recomendamos que utilize GenerateAssemblyEvidence para fornecer provas em vez de substituir <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>       O método GenerateAssemblyEvidence denomina-se novamente para apenas para tipos de provas de que o anfitrião tem especificada na substituição do <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>método.</xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>       Um valor de retorno da `null` indica que o anfitrião não é possível gerar provas deste tipo específico."
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "O tipo de prova."
    - id: assembly
      type: System.Reflection.Assembly
      description: "A assemblagem de destino."
    return:
      type: System.Security.Policy.EvidenceBase
      description: "A prova de assemblagem pedida."
  overload: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  id: GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina que tipos de provas anfitrião pode fornecer para o domínio de aplicação, caso pedido."
  remarks: "Este método pode ser substituído por uma classe derivada. Devolve a implementação base `null`.       Determinam os tipos de devolvido por este método se as <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>método é denominado de volta para.</xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> A presença de um tipo nesta lista não significa que o anfitrião tem de ser capaz de gerar este tipo de prova, mas que poderá ser possível. Por esse motivo, é melhor excessiva especifique, em vez de em-especificar os tipos nesta lista."
  syntax:
    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Uma matriz de tipos de prova."
  overload: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina os tipos de provas de anfitrião pode fornecer para a assemblagem, se for pedida."
  remarks: "Este método pode ser substituído por uma classe derivada. Devolve a implementação base `null`.       Determinam os tipos de devolvido por este método se as <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>método é denominado de volta para.</xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> A presença de um tipo nesta lista não significa que o anfitrião tem de ser capaz de gerar este tipo de prova, mas que poderá ser possível. Por esse motivo, é melhor excessiva especifique, em vez de em-especificar os tipos nesta lista."
  syntax:
    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "A assemblagem de destino."
    return:
      type: System.Type[]
      description: "Uma matriz de tipos de prova."
  overload: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Fornece a prova de domínio da aplicação para uma assemblagem que está a ser carregada."
  remarks: "Este método pode ser substituído numa classe derivada.       Este método é denominado sempre que um <xref:System.AppDomain>objeto é criado.</xref:System.AppDomain> O `inputEvidence` parâmetro é a calculada provas de tempo de execução de idioma comum. A implementação do anfitrião pode optar por expandir ou reduzir a provas. O valor de retorno é provas a ser utilizado para o domínio de aplicação.  A implementação base sempre devolve o objeto de provas transmitido como o `inputEvidence` parâmetro.      > [!IMPORTANT] > Consulte as notas para os herdeiros para o <xref:System.Security.HostSecurityManager>classe para obter informações de implementação crítico.</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "Prova adicional para adicionar o <xref href=&quot;System.AppDomain&quot;> </xref> provas."
    return:
      type: System.Security.Policy.Evidence
      description: "A prova a ser utilizada para o <xref href=&quot;System.AppDomain&quot;> </xref>."
  overload: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Fornece a prova de assemblagem para uma assemblagem que está a ser carregada."
  remarks: "Este método pode ser substituído numa classe derivada.       Este método é denominado sempre que uma assemblagem é carregada, implícita ou explicitamente. Os parâmetros transmitidos são a assemblagem que está a ser carregado e a calculada provas de tempo de execução de idioma comum. A implementação do anfitrião pode optar por expandir ou reduzir a provas. O valor de retorno é provas a ser utilizada para a assemblagem.  A implementação base sempre devolve o objeto de provas transmitido como o `inputEvidence` parâmetro.      > [!IMPORTANT] > Consulte as notas para os herdeiros para o <xref:System.Security.HostSecurityManager>classe para obter informações de implementação crítico.</xref:System.Security.HostSecurityManager>"
  example:
  - "The following example shows how to override the ProvideAssemblyEvidence method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#5](~/add/codesnippet/csharp/b37483ba-2dfe-4c5d-87e6-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#5](~/add/codesnippet/visualbasic/b37483ba-2dfe-4c5d-87e6-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: loadedAssembly
      type: System.Reflection.Assembly
      description: "A assemblagem carregada."
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "Prova adicional para adicionar a prova de assemblagem."
    return:
      type: System.Security.Policy.Evidence
      description: "Provas a ser utilizada para a assemblagem."
  overload: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina o que permissões para conceder ao código com base na provas especificada."
  remarks: "Este método invoca o motor de política de segurança, fornecendo-lo com a provas especificada. O resultado é determinado pela política de segurança."
  syntax:
    content: public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A prova definir utilizada para avaliar a política."
    return:
      type: System.Security.PermissionSet
      description: "O conjunto de permissões que pode ser concedido pelo sistema de segurança."
  overload: System.Security.HostSecurityManager.ResolvePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.HostSecurityManager.#ctor
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.HostSecurityManager.DomainPolicy
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.HostSecurityManager.Flags
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
- uid: System.Security.HostSecurityManagerOptions
  parent: System.Security
  isExternal: false
  name: HostSecurityManagerOptions
  nameWithType: HostSecurityManagerOptions
  fullName: System.Security.HostSecurityManagerOptions
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.HostSecurityManager.#ctor*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager
  nameWithType: HostSecurityManager.HostSecurityManager
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: HostSecurityManager.DetermineApplicationTrust
- uid: System.Security.HostSecurityManager.DomainPolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
- uid: System.Security.HostSecurityManager.Flags*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence
- uid: System.Security.HostSecurityManager.ResolvePolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: HostSecurityManager.ResolvePolicy
