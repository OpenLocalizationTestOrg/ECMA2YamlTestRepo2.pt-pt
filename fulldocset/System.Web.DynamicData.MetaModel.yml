### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaModel
  id: MetaModel
  children:
  - System.Web.DynamicData.MetaModel.#ctor
  - System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  - System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  - System.Web.DynamicData.MetaModel.Default
  - System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  - System.Web.DynamicData.MetaModel.EntityTemplateFactory
  - System.Web.DynamicData.MetaModel.FieldTemplateFactory
  - System.Web.DynamicData.MetaModel.FilterFactory
  - System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  - System.Web.DynamicData.MetaModel.GetModel(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String)
  - System.Web.DynamicData.MetaModel.GetTable(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.ResetRegistrationException
  - System.Web.DynamicData.MetaModel.Tables
  - System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.VisibleTables
  langs:
  - csharp
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
  type: Class
  summary: "Representa uma ou várias bases de dados que são utilizados pelos dados dinâmicos do ASP.NET."
  remarks: "O tipo de MetaModel permite-lhe registar um ou vários contextos de dados para uma aplicação Web de dados dinâmico.       Um contexto de dados é um objecto que representa uma ligação de base de dados. Um contexto de dados tem acesso ao modelo de dados de um que representa uma base de dados que está disponível através dessa ligação. Um modelo de dados é um objecto que representa as entidades de dados de uma base de dados como tipos de CLR. Dados dinâmicos suporta modelos de dados com base no LINQ to SQL Server e o ADO.NET Entity Framework.       No [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], pode gerar tipos de modelo de dados utilizando o **LINQ to SQL Classes** modelo ou o **ADO.NET Entity Data Model** modelo. Estes modelos de utilizarem o estruturador de relacional de objeto (ão/R Designer) para LINQ para o modelo SQL ou ADO.NET Entity Data Model Designer (entidade Designer) para o modelo do Entity Framework."
  example:
  - "The following example shows how to use MetaModel type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:  \n  \n-   Get the data model for the default data context.  \n  \n-   Get the data model for a specified data context.  \n  \n-   Evaluate the routing path (determine the URL) for a specified table.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.cs)]\n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx#1)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PlaceHolder.vb#1)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#2)]  \n  \n To compile the example, you need the following:  \n  \n-   [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] or [!INCLUDE[vwd_exp_dev10_long](~/add/includes/vwd-exp-dev10-long-md.md)].  \n  \n-   A Dynamic Data Web site. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](~/add/includes/ajax-current-ext-md.md).  \n  \n See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)."
  syntax:
    content: public class MetaModel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Cria uma instância de uma nova instância do <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> classe."
  remarks: "Normalmente, chamar o construtor MetaModel `Application_Start` método do ficheiro global. asax."
  example:
  - "The following example shows how to use the MetaModel constructor to perform the following tasks:  \n  \n-   Instantiate the <xref:System.Web.DynamicData.MetaModel> class.  \n  \n-   Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/m-system.web.dynamicdata_4_1.cs)]"
  syntax:
    content: public MetaModel ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Cria uma instância de uma nova instância do <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> classe."
  remarks: "Este construtor determina se o modelo de dados está registado globalmente para que possa ser obtido utilizando o <xref:System.Web.DynamicData.MetaModel.GetModel%2A>método.</xref:System.Web.DynamicData.MetaModel.GetModel%2A> Permite-lhe criar vários modelos e utilizar os mesmos tipos de entidade enquanto evita conflitos de tipo.       Normalmente, chamar o construtor MetaModel `Application_Start` método do ficheiro global. asax."
  syntax:
    content: public MetaModel (bool registerGlobally);
    parameters:
    - id: registerGlobally
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que o modelo está registado global; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  id: CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Para instanciar um <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> objeto."
  remarks: "O método CreateTable pode ser substituído ao instanciar um tipo derivado."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);
    parameters:
    - id: provider
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "O fornecedor para a tabela."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Uma nova instância da tabela."
  overload: System.Web.DynamicData.MetaModel.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Default
  id: Default
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém a primeira instância de um modelo de dados que é criado pela aplicação."
  remarks: "Esta propriedade fornece uma forma simples para fazer referência a instância de modelo de dados predefinida. Se a aplicação utiliza vários modelos, tem de fornecer a suas próprias forma de armazenar as referências para os modelos de dados adicionais. Para localizar um modelo de dados específicas, chame o <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>método.</xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the Default property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/p-system.web.dynamicdata_5_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel Default { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "A instância do modelo de dados."
  overload: System.Web.DynamicData.MetaModel.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  id: DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o caminho virtual da pasta DynamicData no Web site."
  remarks: "Esta propriedade permite-lhe alterar o caminho virtual da pasta DynamicData. O valor predefinido é &quot;~/DynamicData&quot;."
  syntax:
    content: public string DynamicDataFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "O caminho virtual da pasta DynamicData."
  overload: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  id: EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o <xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;> </xref> objetos que estão associados com o modelo."
  syntax:
    content: public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.EntityTemplateFactory
      description: "Uma instância do <xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;> </xref> objetos que estão associados com o modelo."
  overload: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  id: FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define um personalizado <xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;> </xref> interface."
  remarks: "O <xref:System.Web.DynamicData.IFieldTemplateFactory>interface permite-lhe especificar os modelos de campo são criados para as colunas da tabela.</xref:System.Web.DynamicData.IFieldTemplateFactory>"
  syntax:
    content: public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.IFieldTemplateFactory
      description: "O <xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;> </xref> interface."
  overload: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  id: FilterFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> objetos que estão associados com o modelo."
  syntax:
    content: public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }
    return:
      type: System.Web.DynamicData.FilterFactory
      description: "Uma instância do <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> objetos que estão associados com o modelo."
  overload: System.Web.DynamicData.MetaModel.FilterFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  id: GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Devolve o caminho de ação que está associado uma tabela específica."
  remarks: "A rota é determinada pela combinação de nome de tabela e a ação.       [Executar](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) um exemplo desta funcionalidade online."
  example:
  - "The following example shows how to use the GetActionPath method to evaluate the routing path (determine the URL) for a specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel>.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/csharp/ccd53684-51b1-498b-9a9e-_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#23)]"
  syntax:
    content: public string GetActionPath (string tableName, string action, object row);
    parameters:
    - id: tableName
      type: System.String
      description: "O nome da tabela que se aplica a ação."
    - id: action
      type: System.String
      description: "A ação a aplicar à tabela."
    - id: row
      type: System.Object
      description: "Um objeto que representa uma única linha de dados numa tabela. `row`é utilizado para fornecer valores para parâmetros de cadeia de consulta."
    return:
      type: System.String
      description: "O URL que está associado a rota."
  overload: System.Web.DynamicData.MetaModel.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  id: GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Devolve a instância do modelo de dados para o contexto especificado."
  remarks: ''
  example:
  - "The following example shows how to use the GetModel method to perform the following tasks:  \n  \n-   Getting the default data model.  \n  \n-   Getting the data model specified by the passed context type.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/m-system.web.dynamicdata_1_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel GetModel (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "O tipo de contexto de dados, tal como definido no modelo de dados."
    return:
      type: System.Web.DynamicData.MetaModel
      description: "O modelo de dados que estão associado com o tipo de contexto especificado."
  overload: System.Web.DynamicData.MetaModel.GetModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  id: GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Devolve os metadados que está associado a tabela especificada."
  remarks: "O nome exclusivamente identifica uma tabela no modelo de dados e é utilizado para gerar o URL relacionado para o encaminhamento."
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#42)]\n [!code-cs[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/csharp/m-system.web.dynamicdata_2_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "O nome que identifica a tabela no modelo de dados."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Os metadados que descreve a tabela especificada."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome não foi encontrado no modelo de dados."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  id: GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Devolve os metadados que descreve a tabela especificada."
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#41)]\n [!code-cs[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/csharp/m-system.web.dynamicdata_5_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "O tipo que identifica a tabela no modelo de dados."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Os metadados que descreve a tabela especificada."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O tipo não foi encontrado no modelo de dados."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  id: GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Devolve os metadados que descreve a tabela especificada."
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#43)]\n [!code-cs[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/csharp/m-system.web.dynamicdata_3_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);
    parameters:
    - id: tableName
      type: System.String
      description: "O nome da tabela."
    - id: contextType
      type: System.Type
      description: "O contexto de dados para procurar a tabela."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Os metadados que descreve a tabela especificada."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tablename</code>or <code>contextType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O contexto não está registado ou a tabela não existe no contexto de dados."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  id: RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regista o contexto de dados que é especificado por uma fábrica de contexto."
  remarks: "Este método utiliza as informações de contexto predefinido que são definidas pela <xref:System.Web.DynamicData.ContextConfiguration>classe.</xref:System.Web.DynamicData.ContextConfiguration> Permite-lhe instanciar o contexto de dados utilizando o suas próprias construtor."
  syntax:
    content: public void RegisterContext (Func<object> contextFactory);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "A fábrica para instanciar o contexto de dados."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  id: RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regista uma instância de contexto de dados."
  remarks: "Este método utiliza as informações de contexto predefinido, tal como definido pela <xref:System.Web.DynamicData.ContextConfiguration>classe.</xref:System.Web.DynamicData.ContextConfiguration>"
  syntax:
    content: public void RegisterContext (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "O tipo de contexto de dados, tal como definido no modelo de dados."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regista uma instância de contexto de dados utilizando um fornecedor de modelo de dados"
  syntax:
    content: public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "Um fornecedor para o modelo de dados."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regista uma instância de contexto de dados utilizando a configuração de contexto especificado e Ativando um construtor personalizado."
  remarks: "A fábrica de contexto deste método permite-lhe ao instanciar um contexto de modelo de dados através da utilização de um construtor personalizado."
  syntax:
    content: public void RegisterContext (Func<object> contextFactory, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "Um delegado que é utilizado para instanciar o contexto de modelo de dados."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "As informações de contexto, tal como definido pelo <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> classe."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextFactory</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> contextType </code> que ser instanciado por <code> contextFactory </code> não é válido."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regista uma instância de contexto de dados utilizando a configuração de contexto especificado."
  remarks: ''
  example:
  - "The following example shows how to use the RegisterContext method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/d01c18e1-b759-4ac9-a729-_1.cs)]"
  syntax:
    content: public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextType
      type: System.Type
      description: "O tipo de contexto de dados, tal como definido no modelo de dados."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "As informações de configuração para o contexto, tal como definido pelo <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> classe."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regista uma instância de contexto de dados utilizando a configuração de contexto especificado e Ativando a um fornecedor de modelo de dados."
  syntax:
    content: public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "Um fornecedor para o modelo de dados."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "As informações de contexto, tal como definido pelo <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> classe."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataModelProvider</code>or <code>configuration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>contextType</code>já está registado."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  id: ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Repõe qualquer erro de registo de contexto anteriores que possam ter ocorrido."
  remarks: "Quando ocorre um erro durante o registo de contexto de dados, a exceção é colocado em cache e emitida todas as operações subsequentes. Por exemplo, se ocorrer um erro no início da aplicação, é emitida em cada pedido. Chame este método para limpar o erro de e para ativar um novo registo de contexto ser executada."
  syntax:
    content: public static void ResetRegistrationException ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Tables
  id: Tables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém uma coleção de todas as tabelas que fazem parte do modelo de dados."
  remarks: "A coleção contém todas as tabelas no modelo de dados, que inclui as tabelas que não estão visíveis (não fazem parte do andaime de dados dinâmicos).       [Executar](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) um exemplo desta funcionalidade online."
  example:
  - "The following example shows how to use the Tables and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:  \n  \n-   Get a collection of all the tables in a data model and show them in a `GridView` control.  \n  \n-   Get a collection of the visible tables in a data model and show them in a `GridView` control.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx#5)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#6)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable> Tables { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
      description: "Uma coleção que contém as tabelas que pertencem ao modelo de dados."
  overload: System.Web.DynamicData.MetaModel.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "A tentar obter os metadados que está associado a tabela especificada."
  remarks: "Este método obtém os metadados que está associado a tabela especificada. Se a tabela não for encontrada, este método devolve `false`. Este padrão difere do <xref:System.Web.DynamicData.MetaModel.GetTable%2A>método, o que emite uma exceção se a tabela não foi encontrada.</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "O nome que identifica de forma a tabela."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Quando este método devolve e não foi encontrada a tabela de pedido, contém os metadados para essa tabela. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os metadados de tabela for localizado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uniqueTableName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "A tentar obter os metadados que está associado a tabela especificada."
  remarks: "Este método obtém os metadados que está associado a tabela especificada. Se a tabela não for encontrada, este método devolve `false`. Este padrão difere do <xref:System.Web.DynamicData.MetaModel.GetTable%2A>método, o que emite uma exceção se a tabela não foi encontrada.</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: entityType
      type: System.Type
      description: "O tipo de tabela."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Quando este método devolve, e se a tabela pedida foi encontrada, contém os metadados da tabela especificada. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os metadados de tabela for localizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entityType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  id: VisibleTables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém uma coleção de tabelas visíveis no modelo de dados."
  remarks: ''
  example:
  - "The following example shows how to use the VisibleTables property to get a collection of the visible tables in the data model. For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/csharp/p-system.web.dynamicdata_0_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#62)]"
  syntax:
    content: public System.Collections.Generic.List<System.Web.DynamicData.MetaTable> VisibleTables { get; }
    return:
      type: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
      description: "Uma tabela visível se refere a uma tabela com andaime ativada. Isto significa que se trata de uma tabela para o qual exista uma página List.aspx."
  overload: System.Web.DynamicData.MetaModel.VisibleTables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.MetaModel.#ctor
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
- uid: System.Web.DynamicData.MetaModel.Default
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.EntityTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: EntityTemplateFactory
  fullName: System.Web.DynamicData.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.IFieldTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
- uid: System.Web.DynamicData.FilterFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
- uid: System.Func{System.Object}
  parent: System
  isExternal: true
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
- uid: System.Web.DynamicData.ModelProviders.DataModelProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: DataModelProvider
  nameWithType: DataModelProvider
  fullName: System.Web.DynamicData.ModelProviders.DataModelProvider
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
- uid: System.Web.DynamicData.ContextConfiguration
  parent: System.Web.DynamicData
  isExternal: false
  name: ContextConfiguration
  nameWithType: ContextConfiguration
  fullName: System.Web.DynamicData.ContextConfiguration
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
- uid: System.Web.DynamicData.MetaModel.Tables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaTable>
  nameWithType: ReadOnlyCollection<MetaTable>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
- uid: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
  parent: System.Collections.Generic
  isExternal: true
  name: List<MetaTable>
  nameWithType: List<MetaTable>
  fullName: System.Collections.Generic.List<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.#ctor*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel.MetaModel
- uid: System.Web.DynamicData.MetaModel.CreateTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable
  nameWithType: MetaModel.CreateTable
- uid: System.Web.DynamicData.MetaModel.Default*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath
  nameWithType: MetaModel.GetActionPath
- uid: System.Web.DynamicData.MetaModel.GetModel*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel
  nameWithType: MetaModel.GetModel
- uid: System.Web.DynamicData.MetaModel.GetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable
  nameWithType: MetaModel.GetTable
- uid: System.Web.DynamicData.MetaModel.RegisterContext*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext
  nameWithType: MetaModel.RegisterContext
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException
  nameWithType: MetaModel.ResetRegistrationException
- uid: System.Web.DynamicData.MetaModel.Tables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
- uid: System.Web.DynamicData.MetaModel.TryGetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable
  nameWithType: MetaModel.TryGetTable
- uid: System.Web.DynamicData.MetaModel.VisibleTables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
