### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemCollection
  id: MenuItemCollection
  children:
  - System.Web.UI.WebControls.MenuItemCollection.#ctor
  - System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.Clear
  - System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.Count
  - System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  - System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  - System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: MenuItemCollection
  nameWithType: MenuItemCollection
  fullName: System.Web.UI.WebControls.MenuItemCollection
  type: Class
  summary: "Represents a collection of menu items in a <xref href=&quot;System.Web.UI.WebControls.Menu&quot;></xref> control. This class cannot be inherited."
  remarks: "The MenuItemCollection class is used to store and manage a collection of <xref:System.Web.UI.WebControls.MenuItem> objects in the <xref:System.Web.UI.WebControls.Menu> control. The <xref:System.Web.UI.WebControls.Menu> control uses the MenuItemCollection class to store its root menu items in the <xref:System.Web.UI.WebControls.Menu.Items%2A> property. This collection is also used for the <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> property of a <xref:System.Web.UI.WebControls.MenuItem> object to store a menu item&quot;s submenu items (if any).       The MenuItemCollection class supports several ways to access the items in the collection:      -   Use the <xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A> indexer to directly retrieve a <xref:System.Web.UI.WebControls.MenuItem> object at a specific zero-based index.      -   Use the <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> method to create an enumerator that can be used to iterate through the collection.      -   Use the <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> method to copy the contents of the collection into an array.       You can programmatically manage a MenuItemCollection object by adding and removing <xref:System.Web.UI.WebControls.MenuItem> objects. To add menu items to the collection, use the <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> or the <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> method. To remove nodes from the collection, use the <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>, the <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>, or the <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> method.      > [!NOTE] >  When the <xref:System.Web.UI.WebControls.Menu> control is bound to a data source, the <xref:System.Web.UI.WebControls.Menu.Items%2A> and <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collections are automatically populated each time binding occurs. Any changes to the collections between bindings will be lost. To retain these changes, either update the data source or manually rebuild the collection each time you bind.       The MenuItemCollection class contains properties and methods that allow you to retrieve information about the collection itself. To find out how many items are in the collection, use the <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> property. If you want to determine whether the collection contains a certain <xref:System.Web.UI.WebControls.MenuItem> object, use the <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> method. To get the index of a <xref:System.Web.UI.WebControls.MenuItem> object in the collection, use the <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> method."
  example:
  - "The following code example demonstrates how to populate the <xref:System.Web.UI.WebControls.Menu.Items%2A> and <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collections using declarative syntax.  \n  \n [!code-cs[MenuDeclarative#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_381_1.aspx)]\n [!code-vb[MenuDeclarative#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_381_1.aspx)]  \n  \n The following code example demonstrates how to programmatically add a <xref:System.Web.UI.WebControls.MenuItem> object to the <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collection of a root menu item.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_381_2.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_381_2.aspx)]"
  syntax:
    content: 'public sealed class MenuItemCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: MenuItemCollection()
  nameWithType: MenuItemCollection.MenuItemCollection()
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> class using the default values."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.MenuItemCollection> class using the default values. This constructor is commonly used when creating a collection of root menu items where a parent menu (or owner) is not required.      > [!NOTE] >  When creating a collection of child menu items, you should use the overloaded constructor that takes the `owner` parameter, instead of this constructor, to specify the parent menu item.       This constructor is used primarily by control developers when extending the <xref:System.Web.UI.WebControls.Menu> control to initialize the <xref:System.Web.UI.WebControls.Menu.Items%2A> property."
  syntax:
    content: public MenuItemCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  id: '#ctor(System.Web.UI.WebControls.MenuItem)'
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: MenuItemCollection(MenuItem)
  nameWithType: MenuItemCollection.MenuItemCollection(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection(MenuItem)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> class using the specified parent menu item (or owner)."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.MenuItemCollection> class using the specified parent menu item (or owner). This constructor is commonly used when creating a collection of child menu items where you need to specify the parent menu item.      > [!NOTE] >  When creating a collection of root menu items, consider using the default constructor because root menu items do not have a parent menu item.       This constructor is used primarily by control developers when extending the <xref:System.Web.UI.WebControls.MenuItem> class to initialize the <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> property."
  syntax:
    content: public MenuItemCollection (System.Web.UI.WebControls.MenuItem owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.MenuItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> that represents the parent menu item of the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  id: Add(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Add(MenuItem)
  nameWithType: MenuItemCollection.Add(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Add(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Appends the specified <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object to the end of the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "Use the Add method to append the specified <xref:System.Web.UI.WebControls.MenuItem> object to the end of the collection.      > [!NOTE] >  You can add null values and duplicate <xref:System.Web.UI.WebControls.MenuItem> objects to the collection.       As an alternative, you can insert a <xref:System.Web.UI.WebControls.MenuItem> object in the collection at a specific index by using the <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> method."
  example:
  - "The following code example demonstrates how to use the Add method to programmatically add a <xref:System.Web.UI.WebControls.MenuItem> object to a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/0df9c322-61ee-44a7-857e-_1.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/0df9c322-61ee-44a7-857e-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.MenuItem child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.MenuItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> to append to the end of the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  id: AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: AddAt(Int32,MenuItem)
  nameWithType: MenuItemCollection.AddAt(Int32,MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.AddAt(Int32,MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inserts the specified <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object in the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object at the specified index location."
  remarks: "Use the AddAt method to insert the specified <xref:System.Web.UI.WebControls.MenuItem> object in the collection at the specified index.      > [!NOTE] >  You can add null values and duplicate <xref:System.Web.UI.WebControls.MenuItem> objects to the collection.       As an alternative, you can simply append a <xref:System.Web.UI.WebControls.MenuItem> object to the end of the collection by using the <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> method."
  example:
  - "The following code example demonstrates how to use the AddAt method to programmatically insert a <xref:System.Web.UI.WebControls.MenuItem> object in a <xref:System.Web.UI.WebControls.MenuItemCollection> object at a specified index location.  \n  \n [!code-cs[MenuItemCollectionAddAt#1](~/add/codesnippet/csharp/4689054e-5746-4d49-8a86-_1.aspx)]\n [!code-vb[MenuItemCollectionAddAt#1](~/add/codesnippet/visualbasic/4689054e-5746-4d49-8a86-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.MenuItem child);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index location at which to insert the <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>."
    - id: child
      type: System.Web.UI.WebControls.MenuItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> to insert."
  overload: System.Web.UI.WebControls.MenuItemCollection.AddAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: MenuItemCollection.Clear()
  fullName: System.Web.UI.WebControls.MenuItemCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Removes all items from the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "Use the Clear method to remove every <xref:System.Web.UI.WebControls.MenuItem> object from the current <xref:System.Web.UI.WebControls.MenuItemCollection> object.      > [!NOTE] >  To remove an individual node from the collection, consider using the <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> or the <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> method."
  example:
  - "The following code example demonstrates how to use the Clear method to remove all items from the <xref:System.Web.UI.WebControls.Menu.Items%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCollectionClear#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_183_1.aspx)]\n [!code-vb[MenuItemCollectionClear#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_183_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  id: Contains(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Contains(MenuItem)
  nameWithType: MenuItemCollection.Contains(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Contains(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the specified <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object is in the collection."
  remarks: "Use the Contains method to determine whether a <xref:System.Web.UI.WebControls.MenuItem> object is contained in the current <xref:System.Web.UI.WebControls.MenuItemCollection> object. The <xref:System.Web.UI.WebControls.MenuItem> and its properties is compared with the passed in value. This method is commonly used to test for the existence of a <xref:System.Web.UI.WebControls.MenuItem> object before performing a task, such as adding or removing a menu item from the collection."
  example:
  - "The following code example demonstrates how to use the Contains method to determine whether a <xref:System.Web.UI.WebControls.MenuItem> object is contained within a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionContains#1](~/add/codesnippet/csharp/f4ddd916-8b0f-407b-a05b-_1.aspx)]\n [!code-vb[MenuItemCollectionContains#1](~/add/codesnippet/visualbasic/f4ddd916-8b0f-407b-a05b-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.MenuItem c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.MenuItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> to find."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object is contained in the collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: MenuItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies all the items from the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object to a compatible one-dimensional <xref:System.Array>, starting at the specified index in the target array."
  remarks: "Use the CopyTo method to copy the contents of the current <xref:System.Web.UI.WebControls.MenuItemCollection> object into the specified zero-based <xref:System.Array?displayProperty=fullName>. Items are copied starting at the specified index of the target array. With the <xref:System.Array?displayProperty=fullName>, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.MenuItemCollection> object.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A zero-based <xref:System.Array> that receives the copied items from the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The position in the target array at which to start receiving the copied content."
  overload: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is not an array of <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> objects."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: CopyTo(MenuItem[],Int32)
  nameWithType: MenuItemCollection.CopyTo(MenuItem[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(MenuItem[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies all the items from the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object to a compatible one-dimensional array of <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> objects, starting at the specified index in the target array."
  remarks: "Use the CopyTo method to copy the contents of the current <xref:System.Web.UI.WebControls.MenuItemCollection> object into the specified zero-based array. Items are copied starting at the specified index of the target array. With the array, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.MenuItemCollection> object.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection."
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the items in a <xref:System.Web.UI.WebControls.MenuItemCollection> object to an array of <xref:System.Web.UI.WebControls.MenuItem> objects.  \n  \n [!code-cs[MenuItemCollectionCopyTo#1](~/add/codesnippet/csharp/04268ea3-6298-4f73-81e4-_1.aspx)]\n [!code-vb[MenuItemCollectionCopyTo#1](~/add/codesnippet/visualbasic/04268ea3-6298-4f73-81e4-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.MenuItem[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.MenuItem[]
      description: "A zero-based array of <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> objects that receives the copied items from the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The position in the target array at which to start receiving the copied content."
  overload: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: MenuItemCollection.Count
  fullName: System.Web.UI.WebControls.MenuItemCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the number of menu items contained in the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "Use the Count property to determine the number of items in a <xref:System.Web.UI.WebControls.MenuItemCollection> object. This property is commonly used when iterating through a collection to determine the upper bound of the collection. The Count property is also commonly used to determine whether a collection is empty."
  example:
  - "The following code example demonstrates how to use the Count property to determine the number of menu items in a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[MenuItemCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_91_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of menu items contained in the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  overload: System.Web.UI.WebControls.MenuItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MenuItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns an enumerator that can be used to iterate through the items in the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "Use the GetEnumerator method to create an enumerator that can be easily iterated through to get each item in the current <xref:System.Web.UI.WebControls.MenuItemCollection> object. To get the item currently pointed to in the enumerator, use the <xref:System.Collections.IEnumerator.Current%2A> property. Use the <xref:System.Collections.IEnumerator.MoveNext%2A> method to move to the next item. If you need to move the enumerator back to the beginning of the collection, use the <xref:System.Collections.IEnumerator.Reset%2A> method.      > [!NOTE] >  After you create an enumerator or use the <xref:System.Collections.IEnumerator.Reset%2A> method, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method. Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> method to copy the items in the collection to an array. You can then use the array to access the items in the collection."
  example:
  - "The following code example demonstrates how to use the GetEnumerator method to create an enumerator that contains the submenu items of the `Music` menu item in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_25_1.aspx)]\n [!code-vb[MenuItemCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_25_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An enumerator that can be used to iterate through the items in the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  id: IndexOf(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: IndexOf(MenuItem)
  nameWithType: MenuItemCollection.IndexOf(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.IndexOf(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines the index of the specified <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object in the collection."
  remarks: "Use the IndexOf method to determine the index of the specified <xref:System.Web.UI.WebControls.MenuItem> object in the current <xref:System.Web.UI.WebControls.MenuItemCollection> object. If the menu item is not in the collection, the method returns -1.      > [!NOTE] >  If the specified menu item appears multiple times in the collection, the index of the first occurrence is returned."
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItem> object within a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionIndexOf#1](~/add/codesnippet/csharp/2022a36d-8d0a-4c79-82a2-_1.aspx)]\n [!code-vb[MenuItemCollectionIndexOf#1](~/add/codesnippet/visualbasic/2022a36d-8d0a-4c79-82a2-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.MenuItem value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> to locate."
    return:
      type: System.Int32
      description: "The zero-based index of the first occurrence of <code>value</code> within the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>, if found; otherwise, -1."
  overload: System.Web.UI.WebControls.MenuItemCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether access to the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object is synchronized (thread safe)."
  remarks: "The IsSynchronized property is used to indicate whether access to the <xref:System.Web.UI.WebControls.MenuItemCollection> object is synchronized (thread safe). This property is derived from the <xref:System.Collections.ICollection?displayProperty=fullName> class and is overridden to always return `false`.       For more information on the IsSynchronized property, see the <xref:System.Collections.ICollection.IsSynchronized%2A> property of the <xref:System.Collections.ICollection> interface."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MenuItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object at the specified index in the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "Use this indexer to access a <xref:System.Web.UI.WebControls.MenuItem> object from the current <xref:System.Web.UI.WebControls.MenuItemCollection> object at the specified index using array notation. The indexer allows you to access, modify, or replace a <xref:System.Web.UI.WebControls.MenuItem> object in the collection directly."
  example:
  - "The following code example demonstrates how to use the indexer to retrieve the root menu item from the <xref:System.Web.UI.WebControls.Menu.Items%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_785_1.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_785_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> to retrieve."
    return:
      type: System.Web.UI.WebControls.MenuItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> at the specified index in the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  id: Remove(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Remove(MenuItem)
  nameWithType: MenuItemCollection.Remove(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Remove(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Removes the specified <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object from the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "Use the Remove method to remove the specified menu item from the collection. All items that follow that menu item are then moved up to fill in the vacant position. The indexes of the moved items are also updated.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.MenuItemCollection> object can contain null values, as well as duplicate <xref:System.Web.UI.WebControls.MenuItem> objects.       As an alternative, you can remove a menu item from a specific index in the collection by using the <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> method. You can also remove all menu items from the collection by using the <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> method."
  example:
  - "The following code example demonstrates how to use the Remove method to programmatically remove a <xref:System.Web.UI.WebControls.MenuItem> object from a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-vb[MenuItemCollectionRemove#1](~/add/codesnippet/visualbasic/92b6cc10-641c-4936-b3a9-_1.aspx)]\n [!code-cs[MenuItemCollectionRemove#1](~/add/codesnippet/csharp/92b6cc10-641c-4936-b3a9-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.MenuItem value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object to remove."
  overload: System.Web.UI.WebControls.MenuItemCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MenuItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Removes the <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref> object at the specified index location from the current <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "Use the RemoveAt method to remove the <xref:System.Web.UI.WebControls.MenuItem> object at the specified index location from the collection. All items that follow that menu item are then moved up to fill in the vacant position. The indexes of the moved items are also updated.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.MenuItemCollection> object can contain null values, as well as duplicate <xref:System.Web.UI.WebControls.MenuItem> objects.       As an alternative, you can remove a specific <xref:System.Web.UI.WebControls.MenuItem> object by using the <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> method. You can also remove all menu items from the collection by using the <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> method."
  example:
  - "The following code example demonstrates how to use the RemoveAt method to programmatically remove a <xref:System.Web.UI.WebControls.MenuItem> object from a <xref:System.Web.UI.WebControls.MenuItemCollection> object at a specified index location.  \n  \n [!code-cs[MenuItemCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_163_1.aspx)]\n [!code-vb[MenuItemCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_163_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index location of the menu item to remove."
  overload: System.Web.UI.WebControls.MenuItemCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets an object that can be used to synchronize access to the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object."
  remarks: "The SyncRoot property provides a synchronized version of the <xref:System.Web.UI.WebControls.MenuItemCollection> object that can be used with synchronizing (threading) code.      > [!CAUTION] >  The <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A> property of this class always returns `false`, which indicates that the <xref:System.Web.UI.WebControls.MenuItemCollection> class is not synchronized (not thread safe).       Synchronizing code must perform operations on the SyncRoot object of the <xref:System.Web.UI.WebControls.MenuItemCollection> collection, not directly on the <xref:System.Web.UI.WebControls.MenuItemCollection> object itself. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Web.UI.WebControls.MenuItemCollection> object.      > [!NOTE] >  The object returned in this implementation is the <xref:System.Collections.ArrayList> object used to store the <xref:System.Web.UI.WebControls.MenuItem> objects in the collection.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, causing the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.       For more information on the SyncRoot property, see the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.ICollection> interface."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that can be used to synchronize access to the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value that indicates whether the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object is saving changes to its view state."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control is marked to save its state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Loads the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object&quot;s previously saved view state."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that contains the saved view state values."
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the changes to view state to an <xref:System.Object>."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "The <xref:System.Object> that contains the view state changes."
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Instructs the <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref> object to track changes to its view state."
  remarks: "After this method has been called on a server control, the <xref:System.Web.UI.Control.IsTrackingViewState%2A> property returns `true`."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection()
  nameWithType: MenuItemCollection.MenuItemCollection()
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection()
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection(MenuItem)
  nameWithType: MenuItemCollection.MenuItemCollection(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection(MenuItem)
- uid: System.Web.UI.WebControls.MenuItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem
- uid: System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Add(MenuItem)
  nameWithType: MenuItemCollection.Add(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Add(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: AddAt(Int32,MenuItem)
  nameWithType: MenuItemCollection.AddAt(Int32,MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.AddAt(Int32,MenuItem)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Clear()
  nameWithType: MenuItemCollection.Clear()
  fullName: System.Web.UI.WebControls.MenuItemCollection.Clear()
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Contains(MenuItem)
  nameWithType: MenuItemCollection.Contains(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Contains(MenuItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: MenuItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo(MenuItem[],Int32)
  nameWithType: MenuItemCollection.CopyTo(MenuItem[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(MenuItem[],Int32)
- uid: System.Web.UI.WebControls.MenuItem[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemCollection.Count
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Count
  nameWithType: MenuItemCollection.Count
  fullName: System.Web.UI.WebControls.MenuItemCollection.Count
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: MenuItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IndexOf(MenuItem)
  nameWithType: MenuItemCollection.IndexOf(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.IndexOf(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: MenuItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Item(Int32)
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Remove(MenuItem)
  nameWithType: MenuItemCollection.Remove(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Remove(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MenuItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection
  nameWithType: MenuItemCollection.MenuItemCollection
- uid: System.Web.UI.WebControls.MenuItemCollection.Add*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Add
  nameWithType: MenuItemCollection.Add
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: AddAt
  nameWithType: MenuItemCollection.AddAt
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Clear
  nameWithType: MenuItemCollection.Clear
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Contains
  nameWithType: MenuItemCollection.Contains
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: MenuItemCollection.CopyTo
- uid: System.Web.UI.WebControls.MenuItemCollection.Count*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Count
  nameWithType: MenuItemCollection.Count
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: MenuItemCollection.GetEnumerator
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IndexOf
  nameWithType: MenuItemCollection.IndexOf
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.MenuItemCollection.Item*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Item
  nameWithType: MenuItemCollection.Item
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Remove
  nameWithType: MenuItemCollection.Remove
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: RemoveAt
  nameWithType: MenuItemCollection.RemoveAt
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState
