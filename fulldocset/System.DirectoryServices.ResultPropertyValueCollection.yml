### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ResultPropertyValueCollection
  id: ResultPropertyValueCollection
  children:
  - System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  langs:
  - csharp
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection
  type: Class
  summary: "Contains the values of a <xref href=&quot;System.DirectoryServices.SearchResult&quot;></xref> property."
  remarks: "<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available."
  syntax:
    content: 'public class ResultPropertyValueCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "The Contains method determines whether a specified property value is in this collection."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The property value to find."
    return:
      type: System.Boolean
      description: "The return value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified property belongs to this collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "The CopyTo method copies the property values from this collection to an array, starting at a particular index of the array."
  syntax:
    content: public void CopyTo (object[] values, int index);
    parameters:
    - id: values
      type: System.Object[]
      description: "An array of type <xref:System.Object> that receives this collection&quot;s property values."
    - id: index
      type: System.Int32
      description: "The zero-based array index at which to begin copying the property values."
  overload: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "The IndexOf method retrieves the index of a specified property value in this collection."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The property value to find."
    return:
      type: System.Int32
      description: "The zero-based index of the specified property value. If the object is not found, the return value is -1."
  overload: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "The Item property gets the property value that is located at a specified index."
  remarks: "In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.       In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>."
  syntax:
    content: public object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the property value to retrieve."
    return:
      type: System.Object
      description: "The property value that is located at the specified index."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains
  nameWithType: ResultPropertyValueCollection.Contains
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: ResultPropertyValueCollection.CopyTo
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf
  nameWithType: ResultPropertyValueCollection.IndexOf
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item
  nameWithType: ResultPropertyValueCollection.Item
