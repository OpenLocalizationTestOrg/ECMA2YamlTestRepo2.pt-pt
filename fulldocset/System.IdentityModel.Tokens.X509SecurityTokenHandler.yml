### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler
  id: X509SecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  langs:
  - csharp
  name: X509SecurityTokenHandler
  nameWithType: X509SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler
  type: Class
  summary: "Represents a security token handler that processes tokens of type <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>. By default, the handler will perform chain-trust validation of the X.509 certificate."
  syntax:
    content: 'public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler()
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;></xref> class with default values."
  remarks: "The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator."
  syntax:
    content: public X509SecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(Boolean)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account."
  remarks: "The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator."
  syntax:
    content: public X509SecurityTokenHandler (bool mapToWindows);
    parameters:
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;></xref> class by using the specified certificate validator."
  remarks: "The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`."
  syntax:
    content: public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);
    parameters:
    - id: certificateValidator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator."
  syntax:
    content: public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);
    parameters:
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the certificate should be mapped to a Windows account; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*> property."
    - id: certificateValidator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "The certificate validator to use. Sets the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*> property."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns a value that indicates whether the specified reader is referring to an <xref uid=&quot;langword_csharp_&lt;ds:X509Data&gt;&quot; name=&quot;&lt;ds:X509Data&gt;&quot; href=&quot;&quot;></xref> element."
  syntax:
    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader positioned at the start element of the key identifier clause."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the reader is referring to an <xref uid=&quot;langword_csharp_&lt;ds:X509Data&gt;&quot; name=&quot;&lt;ds:X509Data&gt;&quot; href=&quot;&quot;></xref> element; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification."
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A reader pointing to the token XML."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the reader is pointing to an X.509 security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether this handler supports validation of tokens of type <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>."
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the handler supports validation of tokens of type <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns a value that indicates whether the specified key identifier clause can be serialized by this handler."
  remarks: "The supported key identifier clause types are:      1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>      3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"
  syntax:
    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "The key identifier clause to be serialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>securityKeyIdentifierClause</code> is supported and if the <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> property is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifierClause</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether this handler can write tokens of type <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>."
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the handler can write tokens of type <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that is used by the current instance."
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "The X.509 certificate validator that is used by the current instance."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the X.509 security token type defined in the WS-Security X.509 Token Profile."
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "The X.509 token type URI. By default, the value of the <xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*> property."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Loads custom configuration from XML."
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "The XML elements that contain the custom configuration."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The custom configuration specified is not valid."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  id: MapToWindows
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets a value that indicates whether the validating token should be mapped to a Windows account."
  syntax:
    content: public bool MapToWindows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the validating token should be mapped to a Windows account; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializes a key identifier clause referenced by the specified XML reader."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "The XML reader referencing the key identifier clause."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "The key identifier clause that was deserialized from the XML."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializes the X.509 security token referenced by the specified XML reader."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader that is pointing to an X.509 security token."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The security token deserialized from the XML. An instance of <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile. Or the encodingType specified is other than Base64 or HexBinary."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the <xref:System.Type> of the tokens that this handler processes."
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "By default, the type of the <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref> class."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Validates the specified X.509 security token."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The token to be validated."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "The identities contained in the token."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code> is not assignable from <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       There is no issuer name registry (<xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;></xref>) configured. (The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry*> property of the <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;></xref> referenced by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.)"
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "The current <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> was unable to validate the certificate in the token."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "The current <xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;></xref> returned <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when trying to resolve the issuer of the certificate in the token."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializes the specified key identifier clause to the XML writer."
  syntax:
    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The XML writer to which the key identifier clause should be serialized."
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "The key identifier clause to serialize."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifierClause</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializes the specified X.509 security token to the specified XML writer."
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The XML writer to which the token should be serialized."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The X.509 security token to serialize. An instance of <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code> is not assignable from <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  id: WriteXmlDSigDefinedClauseTypes
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred."
  remarks: "Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:      -   X509IssuerSerial      -   X509SKI      -   X509Certificate"
  syntax:
    content: public bool WriteXmlDSigDefinedClauseTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if XmlDsig-defined clause types are preferred; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  id: X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the <xref href=&quot;System.IdentityModel.Tokens.X509NTAuthChainTrustValidator&quot;></xref> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account."
  syntax:
    content: public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }
    return:
      type: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
      description: "An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler()
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(Boolean)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
- uid: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: X509SecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: X509SecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: X509SecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: X509SecurityTokenHandler.WriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
