### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeName
  id: XamlTypeName
  children:
  - System.Xaml.Schema.XamlTypeName.#ctor
  - System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  - System.Xaml.Schema.XamlTypeName.Name
  - System.Xaml.Schema.XamlTypeName.Namespace
  - System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ToString
  - System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  - System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  - System.Xaml.Schema.XamlTypeName.TypeArguments
  langs:
  - csharp
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
  type: Class
  summary: "Provides a means to specify a XAML type in terms of name and namespace."
  remarks: "<xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas XamlTypeName is more of a data structure that provides different ways of specifying that type. XamlTypeName also provides static helper methods for generating a XamlTypeName by resolving an existing type identifier in a XAML namespace."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{{{Namespace}}}{Name}{TypeArgStringForDebugger}")]

      public class XamlTypeName
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName()
  nameWithType: XamlTypeName.XamlTypeName()
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> class."
  syntax:
    content: public XamlTypeName ();
    parameters: []
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(XamlType)
  nameWithType: XamlTypeName.XamlTypeName(XamlType)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> class, based on an existing <xref href=&quot;System.Xaml.XamlType&quot;></xref>."
  syntax:
    content: public XamlTypeName (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "An existing <xref href=&quot;System.Xaml.XamlType&quot;></xref>."
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(String,String)
  nameWithType: XamlTypeName.XamlTypeName(String,String)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> class, based on name and namespace strings."
  syntax:
    content: public XamlTypeName (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "The XAML namespace that contains name."
    - id: name
      type: System.String
      description: "The name of the type to create a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> for."
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> class, based on name and namespace strings as well as an array of type arguments."
  remarks: "This is the signature to use if you are specifying a generic type and type arguments for that type."
  syntax:
    content: public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName> typeArguments);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "The XAML namespace that contains `name`."
    - id: name
      type: System.String
      description: "The name of the type to create a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> for."
    - id: typeArguments
      type: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
      description: "An array of type arguments, each of which must be a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>."
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Name
  id: Name
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Gets the name used to construct this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>."
  remarks: "If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of Name is <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the type."
  overload: System.Xaml.Schema.XamlTypeName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Namespace
  id: Namespace
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Gets the XAML namespace identifier used to construct this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>."
  remarks: "If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of Namespace is `xamlType.GetXamlNamespaces()[0]`."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "The XAML namespace identifier."
  overload: System.Xaml.Schema.XamlTypeName.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  id: Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Parse(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Provides a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> value based on a type name and an object that can resolve a markup prefix into a namespace."
  syntax:
    content: public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);
    parameters:
    - id: typeName
      type: System.String
      description: "The type name to create a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> value for."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "An object or service provider that implements <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;></xref>."
    return:
      type: System.Xaml.Schema.XamlTypeName
      description: "The created <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>."
  overload: System.Xaml.Schema.XamlTypeName.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeName</code> or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "String cannot be parsed."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  id: ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ParseList(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Provides a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace."
  remarks: "The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:      ```   NestedTypeName = Name | Name &quot;+&quot; NestedTypeName   TypeName = NestedTypeName | NestedTypeName ‘[]’   XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs   TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’   XamlTypeNameList = XamlTypeName XamlTypeNameList1   XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList   ```"
  syntax:
    content: public static System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);
    parameters:
    - id: typeNameList
      type: System.String
      description: "A string that contains multiple types. See Remarks."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "An object or service provider that implements <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;></xref>."
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "The created <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>."
  overload: System.Xaml.Schema.XamlTypeName.ParseList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeNameList</code> or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "String cannot be parsed."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString
  id: ToString
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlTypeName.ToString()
  fullName: System.Xaml.Schema.XamlTypeName.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Converts the value of this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> to its equivalent string representation."
  remarks: "This signature is equivalent to calling <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passing `null` for `prefixLookup`. s"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "The equivalent string representation of this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> ."
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString(INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Converts the value of this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type."
  syntax:
    content: public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);
    parameters:
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
      description: "A service reference for prefix lookup."
    return:
      type: System.String
      description: "A prefixed usage string."
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Xaml.Schema.XamlTypeName.Namespace*> for this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Xaml.Schema.XamlTypeName.Name*> is not valid.       -or-       Could not look up the prefix."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Converts the value of this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types."
  syntax:
    content: public static string ToString (System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);
    parameters:
    - id: typeNameList
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "A list of types."
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
      description: "A service reference for prefix lookup."
    return:
      type: System.String
      description: "A concatenated string of all type results."
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>prefixLookup</code> or <code>typeNameList</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  id: TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Provides a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> value based on a type name and an object that can resolve a markup prefix into a namespace."
  syntax:
    content: public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);
    parameters:
    - id: typeName
      type: System.String
      description: "The type name to create a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> value for."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "An object or service provider that implements <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;></xref>."
    - id: result
      type: System.Xaml.Schema.XamlTypeName
      description: "Out parameter that contains the created <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> if the return value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the parse was successful and <code>result</code> contains a useful value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.Schema.XamlTypeName.TryParse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeName</code> or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  id: TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Provides a <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace."
  syntax:
    content: public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> result);
    parameters:
    - id: typeNameList
      type: System.String
      description: "A string that contains multiple types. See Remarks."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "An object or service provider that implements <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;></xref>."
    - id: result
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "Out parameter that contains the created <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> if the return value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the parse was successful and <code>result</code> contains a useful value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.Schema.XamlTypeName.TryParseList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeNameList</code> or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments
  id: TypeArguments
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Gets the type arguments used to construct this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref>."
  remarks: "If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of TypeArguments is formed from <xref:System.Xaml.XamlType.TypeArguments%2A>."
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "The type arguments, if any. May be null."
  overload: System.Xaml.Schema.XamlTypeName.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xaml.Schema.XamlTypeName.#ctor
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName()
  nameWithType: XamlTypeName.XamlTypeName()
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(XamlType)
  nameWithType: XamlTypeName.XamlTypeName(XamlType)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(String,String)
  nameWithType: XamlTypeName.XamlTypeName(String,String)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
- uid: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlTypeName>
  nameWithType: IEnumerable<XamlTypeName>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.Schema.XamlTypeName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeName.Name
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
- uid: System.Xaml.Schema.XamlTypeName.Namespace
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Parse(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)
- uid: System.Xaml.Schema.XamlTypeName
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
- uid: System.Xaml.IXamlNamespaceResolver
  parent: System.Xaml
  isExternal: false
  name: IXamlNamespaceResolver
  nameWithType: IXamlNamespaceResolver
  fullName: System.Xaml.IXamlNamespaceResolver
- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ParseList(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)
- uid: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlTypeName>
  nameWithType: IList<XamlTypeName>
  fullName: System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.Schema.XamlTypeName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeName.ToString
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString()
  nameWithType: XamlTypeName.ToString()
  fullName: System.Xaml.Schema.XamlTypeName.ToString()
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString(INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)
- uid: System.Xaml.INamespacePrefixLookup
  parent: System.Xaml
  isExternal: false
  name: INamespacePrefixLookup
  nameWithType: INamespacePrefixLookup
  fullName: System.Xaml.INamespacePrefixLookup
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
- uid: System.Xaml.Schema.XamlTypeName.#ctor*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName.XamlTypeName
- uid: System.Xaml.Schema.XamlTypeName.Name*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Name
  nameWithType: XamlTypeName.Name
- uid: System.Xaml.Schema.XamlTypeName.Namespace*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Namespace
  nameWithType: XamlTypeName.Namespace
- uid: System.Xaml.Schema.XamlTypeName.Parse*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Parse
  nameWithType: XamlTypeName.Parse
- uid: System.Xaml.Schema.XamlTypeName.ParseList*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ParseList
  nameWithType: XamlTypeName.ParseList
- uid: System.Xaml.Schema.XamlTypeName.ToString*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString
  nameWithType: XamlTypeName.ToString
- uid: System.Xaml.Schema.XamlTypeName.TryParse*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParse
  nameWithType: XamlTypeName.TryParse
- uid: System.Xaml.Schema.XamlTypeName.TryParseList*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParseList
  nameWithType: XamlTypeName.TryParseList
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
