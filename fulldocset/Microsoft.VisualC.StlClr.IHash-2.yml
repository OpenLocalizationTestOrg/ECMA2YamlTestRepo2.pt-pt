### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.IHash`2
  id: IHash`2
  children:
  - Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IHash`2.bucket_count
  - Microsoft.VisualC.StlClr.IHash`2.clear
  - Microsoft.VisualC.StlClr.IHash`2.count(`0)
  - Microsoft.VisualC.StlClr.IHash`2.empty
  - Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  - Microsoft.VisualC.StlClr.IHash`2.erase(`0)
  - Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  - Microsoft.VisualC.StlClr.IHash`2.hash_delegate
  - Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)
  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  - Microsoft.VisualC.StlClr.IHash`2.key_comp
  - Microsoft.VisualC.StlClr.IHash`2.load_factor
  - Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  - Microsoft.VisualC.StlClr.IHash`2.max_load_factor
  - Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)
  - Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)
  - Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IHash`2.size
  - Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)
  - Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  - Microsoft.VisualC.StlClr.IHash`2.value_comp
  langs:
  - csharp
  name: IHash<TKey,TValue>
  nameWithType: IHash<TKey,TValue>
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>
  type: Interface
  syntax:
    content: >-
      [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")]

      public interface IHash<TKey,TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection
    typeParameters:
    - id: TKey
      description: "To be added."
    - id: TValue
      description: "To be added."
  implements:
  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>
  - System.Collections.ICollection
  - System.ICloneable
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: begin(ContainerBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.begin*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count
  id: bucket_count
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: bucket_count()
  nameWithType: IHash<TKey,TValue>.bucket_count()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.bucket_count()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int bucket_count ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.bucket_count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.clear
  id: clear
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: clear()
  nameWithType: IHash<TKey,TValue>.clear()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.clear()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void clear ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.IHash`2.clear*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.count(`0)
  id: count(`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: count(TKey)
  nameWithType: IHash<TKey,TValue>.count(TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.count(TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int count (TKey _Keyval);
    parameters:
    - id: _Keyval
      type: TKey
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.empty
  id: empty
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: empty()
  nameWithType: IHash<TKey,TValue>.empty()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.empty()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public bool empty ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.empty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: end(ContainerBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.end*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  id: equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)
  nameWithType: IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) equal_range (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}
      description: "To be added."
    - id: _Keyval
      type: TKey
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.equal_range*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.erase(`0)
  id: erase(`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: erase(TKey)
  nameWithType: IHash<TKey,TValue>.erase(TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int erase (TKey _Keyval);
    parameters:
    - id: _Keyval
      type: TKey
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.erase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)
  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.erase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    - id: _First_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: "To be added."
    - id: _Last_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.erase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  id: find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: find(ContainerBidirectionalIterator<TValue>,TKey)
  nameWithType: IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    - id: _Keyval
      type: TKey
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.find*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate
  id: hash_delegate
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: hash_delegate()
  nameWithType: IHash<TKey,TValue>.hash_delegate()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.hash_delegate()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Microsoft.VisualC.StlClr.UnaryDelegate<TKey,int> hash_delegate ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.UnaryDelegate{TKey,System.Int32}
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.hash_delegate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)
  id: insert(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: insert(IEnumerable)
  nameWithType: IHash<TKey,TValue>.insert(IEnumerable)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (System.Collections.IEnumerable _Right);
    parameters:
    - id: _Right
      type: System.Collections.IEnumerable
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.insert*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  id: insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: insert(IInputIterator<TValue>,IInputIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: "To be added."
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.insert*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  id: insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)
  nameWithType: IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,bool> , TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}
      description: "To be added."
    - id: _Val
      type: TValue
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.insert*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)
  nameWithType: IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: "To be added."
    - id: _Val
      type: TValue
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.insert*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp
  id: key_comp
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: key_comp()
  nameWithType: IHash<TKey,TValue>.key_comp()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.key_comp()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,bool> key_comp ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.key_comp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor
  id: load_factor
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: load_factor()
  nameWithType: IHash<TKey,TValue>.load_factor()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.load_factor()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public float load_factor ();
    parameters: []
    return:
      type: System.Single
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.load_factor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  id: lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: lower_bound(ContainerBidirectionalIterator<TValue>,TKey)
  nameWithType: IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    - id: _Keyval
      type: TKey
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.lower_bound*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor
  id: max_load_factor
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: max_load_factor()
  nameWithType: IHash<TKey,TValue>.max_load_factor()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public float max_load_factor ();
    parameters: []
    return:
      type: System.Single
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)
  id: max_load_factor(System.Single)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: max_load_factor(Single)
  nameWithType: IHash<TKey,TValue>.max_load_factor(Single)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor(Single)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void max_load_factor (float _Newmax);
    parameters:
    - id: _Newmax
      type: System.Single
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: rbegin(ReverseBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.rbegin*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)
  id: rehash(System.Int32)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: rehash(Int32)
  nameWithType: IHash<TKey,TValue>.rehash(Int32)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rehash(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void rehash (int _Buckets);
    parameters:
    - id: _Buckets
      type: System.Int32
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.rehash*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: rend(ReverseBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.rend*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.size
  id: size
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: size()
  nameWithType: IHash<TKey,TValue>.size()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.size()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int size ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.size*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)
  id: swap(Microsoft.VisualC.StlClr.IHash`2)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: swap(IHash<TKey,TValue>)
  nameWithType: IHash<TKey,TValue>.swap(IHash<TKey,TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.swap(IHash<TKey,TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void swap (Microsoft.VisualC.StlClr.IHash<TKey,TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.IHash`2
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.swap*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  id: upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: upper_bound(ContainerBidirectionalIterator<TValue>,TKey)
  nameWithType: IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
      description: "To be added."
    - id: _Keyval
      type: TKey
      description: "To be added."
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.upper_bound*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp
  id: value_comp
  parent: Microsoft.VisualC.StlClr.IHash`2
  langs:
  - csharp
  name: value_comp()
  nameWithType: IHash<TKey,TValue>.value_comp()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.value_comp()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> value_comp ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: "To be added."
  overload: Microsoft.VisualC.StlClr.IHash`2.value_comp*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: begin(ContainerBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: bucket_count()
  nameWithType: IHash<TKey,TValue>.bucket_count()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.bucket_count()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.IHash`2.clear
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: clear()
  nameWithType: IHash<TKey,TValue>.clear()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.clear()
- uid: Microsoft.VisualC.StlClr.IHash`2.count(`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: count(TKey)
  nameWithType: IHash<TKey,TValue>.count(TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.count(TKey)
- uid: TKey
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: Microsoft.VisualC.StlClr.IHash`2.empty
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: empty()
  nameWithType: IHash<TKey,TValue>.empty()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.empty()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: end(ContainerBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)
  nameWithType: IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)
- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>
  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>
  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.GenericPair`2
    name: GenericPair
    nameWithType: GenericPair
    fullName: GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
    name: ContainerBidirectionalIterator
    nameWithType: ContainerBidirectionalIterator
    fullName: ContainerBidirectionalIterator<TValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
    name: ContainerBidirectionalIterator
    nameWithType: ContainerBidirectionalIterator
    fullName: ContainerBidirectionalIterator<TValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.IHash`2.erase(`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: erase(TKey)
  nameWithType: IHash<TKey,TValue>.erase(TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(TKey)
- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)
  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: true
  name: ContainerBidirectionalIterator
  nameWithType: ContainerBidirectionalIterator
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: find(ContainerBidirectionalIterator<TValue>,TKey)
  nameWithType: IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)
- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: hash_delegate()
  nameWithType: IHash<TKey,TValue>.hash_delegate()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.hash_delegate()
- uid: Microsoft.VisualC.StlClr.UnaryDelegate{TKey,System.Int32}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: UnaryDelegate<TKey,Int32>
  nameWithType: UnaryDelegate<TKey,Int32>
  fullName: Microsoft.VisualC.StlClr.UnaryDelegate<TKey,System.Int32>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.UnaryDelegate`2
    name: UnaryDelegate
    nameWithType: UnaryDelegate
    fullName: UnaryDelegate<TKey,System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: insert(IEnumerable)
  nameWithType: IHash<TKey,TValue>.insert(IEnumerable)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: insert(IInputIterator<TValue>,IInputIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)
  nameWithType: IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)
- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>
  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>
  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,System.Boolean>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.GenericPair`2
    name: GenericPair
    nameWithType: GenericPair
    fullName: GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
    name: ContainerBidirectionalIterator
    nameWithType: ContainerBidirectionalIterator
    fullName: ContainerBidirectionalIterator<TValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)
  nameWithType: IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)
- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: key_comp()
  nameWithType: IHash<TKey,TValue>.key_comp()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.key_comp()
- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: BinaryDelegate<TKey,TKey,Boolean>
  nameWithType: BinaryDelegate<TKey,TKey,Boolean>
  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,System.Boolean>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3
    name: BinaryDelegate
    nameWithType: BinaryDelegate
    fullName: BinaryDelegate<TKey,TKey,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: load_factor()
  nameWithType: IHash<TKey,TValue>.load_factor()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.load_factor()
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: lower_bound(ContainerBidirectionalIterator<TValue>,TKey)
  nameWithType: IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)
- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: max_load_factor()
  nameWithType: IHash<TKey,TValue>.max_load_factor()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor()
- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: max_load_factor(Single)
  nameWithType: IHash<TKey,TValue>.max_load_factor(Single)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor(Single)
- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: rbegin(ReverseBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: rehash(Int32)
  nameWithType: IHash<TKey,TValue>.rehash(Int32)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rehash(Int32)
- uid: Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: rend(ReverseBidirectionalIterator<TValue>)
  nameWithType: IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.IHash`2.size
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: size()
  nameWithType: IHash<TKey,TValue>.size()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.size()
- uid: Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: swap(IHash<TKey,TValue>)
  nameWithType: IHash<TKey,TValue>.swap(IHash<TKey,TValue>)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.swap(IHash<TKey,TValue>)
- uid: Microsoft.VisualC.StlClr.IHash`2
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IHash<TKey,TValue>
  nameWithType: IHash<TKey,TValue>
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>
- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: upper_bound(ContainerBidirectionalIterator<TValue>,TKey)
  nameWithType: IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)
- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: value_comp()
  nameWithType: IHash<TKey,TValue>.value_comp()
  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.value_comp()
- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: BinaryDelegate<TValue,TValue,Boolean>
  nameWithType: BinaryDelegate<TValue,TValue,Boolean>
  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>
  spec.csharp:
  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3
    name: BinaryDelegate
    nameWithType: BinaryDelegate
    fullName: BinaryDelegate<TValue,TValue,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.IHash`2.begin*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: begin
  nameWithType: IHash<TKey,TValue>.begin
- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: bucket_count
  nameWithType: IHash<TKey,TValue>.bucket_count
- uid: Microsoft.VisualC.StlClr.IHash`2.clear*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: clear
  nameWithType: IHash<TKey,TValue>.clear
- uid: Microsoft.VisualC.StlClr.IHash`2.count*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: count
  nameWithType: IHash<TKey,TValue>.count
- uid: Microsoft.VisualC.StlClr.IHash`2.empty*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: empty
  nameWithType: IHash<TKey,TValue>.empty
- uid: Microsoft.VisualC.StlClr.IHash`2.end*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: end
  nameWithType: IHash<TKey,TValue>.end
- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: equal_range
  nameWithType: IHash<TKey,TValue>.equal_range
- uid: Microsoft.VisualC.StlClr.IHash`2.erase*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: erase
  nameWithType: IHash<TKey,TValue>.erase
- uid: Microsoft.VisualC.StlClr.IHash`2.find*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: find
  nameWithType: IHash<TKey,TValue>.find
- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: hash_delegate
  nameWithType: IHash<TKey,TValue>.hash_delegate
- uid: Microsoft.VisualC.StlClr.IHash`2.insert*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: insert
  nameWithType: IHash<TKey,TValue>.insert
- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: key_comp
  nameWithType: IHash<TKey,TValue>.key_comp
- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: load_factor
  nameWithType: IHash<TKey,TValue>.load_factor
- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: lower_bound
  nameWithType: IHash<TKey,TValue>.lower_bound
- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: max_load_factor
  nameWithType: IHash<TKey,TValue>.max_load_factor
- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: rbegin
  nameWithType: IHash<TKey,TValue>.rbegin
- uid: Microsoft.VisualC.StlClr.IHash`2.rehash*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: rehash
  nameWithType: IHash<TKey,TValue>.rehash
- uid: Microsoft.VisualC.StlClr.IHash`2.rend*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: rend
  nameWithType: IHash<TKey,TValue>.rend
- uid: Microsoft.VisualC.StlClr.IHash`2.size*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: size
  nameWithType: IHash<TKey,TValue>.size
- uid: Microsoft.VisualC.StlClr.IHash`2.swap*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: swap
  nameWithType: IHash<TKey,TValue>.swap
- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: upper_bound
  nameWithType: IHash<TKey,TValue>.upper_bound
- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp*
  parent: Microsoft.VisualC.StlClr.IHash`2
  isExternal: false
  name: value_comp
  nameWithType: IHash<TKey,TValue>.value_comp
