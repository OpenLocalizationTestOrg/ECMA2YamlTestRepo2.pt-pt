### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings
  id: LocalServiceSecuritySettings
  children:
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  - System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  langs:
  - csharp
  name: LocalServiceSecuritySettings
  nameWithType: LocalServiceSecuritySettings
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings
  type: Class
  summary: "Provides local service security properties that can be set."
  remarks: "This class contains the local security settings used by the <xref:System.ServiceModel.Channels.SecurityBindingElement> to build the security channel. These settings are local to the service and are not represented in the service&quot;s security policy."
  example:
  - "This example shows how to use the LocalServiceSecuritySettings class to change the <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> setting.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#17](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#17)]\n [!code-cs[S_UELocalServiceSecuritySettings#17](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#17)]"
  syntax:
    content: public sealed class LocalServiceSecuritySettings
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: LocalServiceSecuritySettings()
  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.LocalServiceSecuritySettings()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Channels.LocalServiceSecuritySettings&quot;></xref> class."
  remarks: ''
  example:
  - "This example shows how to use the default constructor.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#1](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#1)]\n [!code-cs[S_UELocalServiceSecuritySettings#1](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#1)]"
  syntax:
    content: public LocalServiceSecuritySettings ();
    parameters: []
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone
  id: Clone
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: Clone()
  nameWithType: LocalServiceSecuritySettings.Clone()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Creates a new instance of this class from the current instance."
  remarks: ''
  example:
  - "This example shows how to create a new instance of this class from the current instance.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#16](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#16)]\n [!code-cs[S_UELocalServiceSecuritySettings#16](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#16)]"
  syntax:
    content: public System.ServiceModel.Channels.LocalServiceSecuritySettings Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.LocalServiceSecuritySettings
      description: "A new instance of <xref href=&quot;System.ServiceModel.Channels.LocalServiceSecuritySettings&quot;></xref>."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  id: DetectReplays
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: DetectReplays
  nameWithType: LocalServiceSecuritySettings.DetectReplays
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets a value that indicates whether replay detection is enabled on the service."
  remarks: ''
  example:
  - "This example shows how get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#2](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#2)]\n [!code-cs[S_UELocalServiceSecuritySettings#2](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#2)]"
  syntax:
    content: public bool DetectReplays { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if replay detection is enabled on the service; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: LocalServiceSecuritySettings.InactivityTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the duration to wait before the channel is closed due to inactivity."
  remarks: "In a secure conversation session, note that both this property and the `ReceiveTimeout` property on the binding affect session timeout. The shorter of the two determines when timeouts occur.  \n  \n Session settings such as this one are applicable under any of the following conditions:  \n  \n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \n  \n Session settings such as this one are not applicable under any of the following conditions:  \n  \n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`."
  example:
  - "This example shows how get the `InactivityTimeout` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#3](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#3)]\n [!code-cs[S_UELocalServiceSecuritySettings#3](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#3)]"
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the duration to wait before the security session with the client is closed due to inactivity. The default is 2 minutes."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  id: IssuedCookieLifetime
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: IssuedCookieLifetime
  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the lifetime for the <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;></xref> that the service issues for the client."
  remarks: "When the service issues secure conversation cookie tokens to the client, their validity period is determined by the value of this property."
  example:
  - "This example shows how to get the `IssuedCookieLifetime` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#4](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#4)]\n [!code-cs[S_UELocalServiceSecuritySettings#4](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#4)]"
  syntax:
    content: public TimeSpan IssuedCookieLifetime { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the lifetime for new security cookies. The default is 10 hours."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  id: MaxCachedCookies
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxCachedCookies
  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the maximum number of <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;></xref>s that the service allows to cache at once."
  remarks: ''
  example:
  - "This example shows how to get the `MaxCachedCookies` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#5](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#5)]\n [!code-cs[S_UELocalServiceSecuritySettings#5](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#5)]"
  syntax:
    content: public int MaxCachedCookies { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of secure conversation cookies that can be cached by the service. When this limit is reached the service removes the oldest cached secure conversation cookies to make room for new secure conversation cookies. The default is 1000."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  id: MaxClockSkew
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxClockSkew
  nameWithType: LocalServiceSecuritySettings.MaxClockSkew
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating."
  remarks: "The default value for this property is 5 minutes.       Messages that do not pass the send-time test are rejected.       This property is used in conjunction with the message timestamp verification and the <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A> property."
  example:
  - "This example shows how to get the `MaxClockSkew` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#6](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#6)]\n [!code-cs[S_UELocalServiceSecuritySettings#6](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#6)]"
  syntax:
    content: public TimeSpan MaxClockSkew { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating. The default is 5 minutes."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  id: MaxPendingSessions
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxPendingSessions
  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the maximum number of concurrent security sessions that are established with the server for which it has issued a session token but for which no application messages are sent."
  remarks: ''
  example:
  - "This example shows how to get the `MaxPendingSessions` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#7](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#7)]\n [!code-cs[S_UELocalServiceSecuritySettings#7](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#7)]"
  syntax:
    content: public int MaxPendingSessions { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of concurrent security sessions. The default is 128."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  id: MaxStatefulNegotiations
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: MaxStatefulNegotiations
  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the maximum number of concurrent security negotiations with clients that the service can participate in."
  remarks: "Negotiation sessions in excess of this limit are rejected and a SOAP fault is sent back to the client. The client typically must retry later, which allows some time for existing negotiations on the service to complete."
  example:
  - "This example shows how set the `MaxStatefulNegotiations` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#8](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#8)]\n [!code-cs[S_UELocalServiceSecuritySettings#8](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#8)]"
  syntax:
    content: public int MaxStatefulNegotiations { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of concurrent security negotiations with clients that the service can participate in. The default is 128."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  id: NegotiationTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: NegotiationTimeout
  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the maximum duration of the security negotiation phase between client and service."
  remarks: "If this limit is exceeded, an exception is thrown."
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#9](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#9)]\n [!code-cs[S_UELocalServiceSecuritySettings#9](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#9)]"
  syntax:
    content: public TimeSpan NegotiationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the maximum duration of the security negotiation phase between client and service. Any negotiation with the service (for example during message level SPNego or SSL authentication) must complete within this time. The default is 1 minute."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  id: NonceCache
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: NonceCache
  nameWithType: LocalServiceSecuritySettings.NonceCache
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the cache for the local service security settings."
  syntax:
    content: public System.ServiceModel.Security.NonceCache NonceCache { get; set; }
    return:
      type: System.ServiceModel.Security.NonceCache
      description: "The cache for the local service security settings."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  id: ReconnectTransportOnFailure
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: ReconnectTransportOnFailure
  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets a value that indicates whether security sessions attempt to reconnect after transport failures."
  remarks: "If this flag is set to `true`, the service allows the client to send messages that correspond to a single security session over multiple transport connections. This is useful in the case of secure WS-ReliableMessaging because the client requires the session to tolerate transient transport failures."
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#10](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#10)]\n [!code-cs[S_UELocalServiceSecuritySettings#10](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#10)]"
  syntax:
    content: public bool ReconnectTransportOnFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if security sessions attempt to reconnect after transport failures; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  id: ReplayCacheSize
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: ReplayCacheSize
  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the size of the nonce cache used for replay detection."
  remarks: "A nonce is a &quot;number used once&quot;.       If the nonce count is exceeded, the incoming message is rejected and a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown. Old nonces are removed in a timely manner."
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#11](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#11)]\n [!code-cs[S_UELocalServiceSecuritySettings#11](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#11)]"
  syntax:
    content: public int ReplayCacheSize { get; set; }
    return:
      type: System.Int32
      description: "The size of the nonce cache used for replay detection. The default is 900,000."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  id: ReplayWindow
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: ReplayWindow
  nameWithType: LocalServiceSecuritySettings.ReplayWindow
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the maximum amount of time within which the service can accept a message."
  remarks: "A nonce is a &quot;number used once&quot;.       The service rejects all messages that are sent more than the ReplayWindow duration in the past. Messages that arrive within the `ReplayWindow` have their nonce checked for uniqueness."
  example:
  - "This example shows how to get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#12](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#12)]\n [!code-cs[S_UELocalServiceSecuritySettings#12](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#12)]"
  syntax:
    content: public TimeSpan ReplayWindow { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the maximum amount of time within which the service can accept a message. The default is 5 minutes."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  id: SessionKeyRenewalInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: SessionKeyRenewalInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the lifetime of a key used in a security session. When this interval expires the key is automatically renewed."
  remarks: "Session settings such as this one are applicable under any of the following conditions:  \n  \n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \n  \n Session settings such as this one are not applicable under any of the following conditions:  \n  \n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`."
  example:
  - "This example shows how get the value of this property.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#13](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#13)]\n [!code-cs[S_UELocalServiceSecuritySettings#13](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#13)]"
  syntax:
    content: public TimeSpan SessionKeyRenewalInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "The time span after which the service requires that the initiator renew the key used for the security session. If the initiator does not renew the key within this time the service sends back a fault to the initiator. The default is 15 hours."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  id: SessionKeyRolloverInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: SessionKeyRolloverInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the time interval after key renewal for which the previous session key is valid on incoming messages during a key renewal."
  remarks: "After key renewal, the client and server should always send messages using the most current available key. Both parties can accept incoming messages secured with the previous session key until the rollover time expires.  \n  \n Session settings such as this one are applicable under any of the following conditions:  \n  \n-   All client credential types for <xref:System.ServiceModel.WSDualHttpBinding> and <xref:System.ServiceModel.NetTcpBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is enabled.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.UserName%2A> = `true` or  <xref:System.ServiceModel.Description.ClientCredentials.windows%2A> = `true`.  \n  \n Session settings such as this one are not applicable under any of the following conditions:  \n  \n-   For <xref:System.ServiceModel.BasicHttpBinding>.  \n  \n-   For <xref:System.ServiceModel.NetNamedPipeBinding>.  \n  \n-   If [\\<reliableSession> element](http://msdn.microsoft.com/en-us/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b) is not enabled, on <xref:System.ServiceModel.WSHttpBinding> with <xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A> = `true` or with none of the <xref:System.ServiceModel.Description.ClientCredentials> properties set to `true`."
  example:
  - "This example shows how get the `SessionKeyRolloverInterval` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#14](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#14)]\n [!code-cs[S_UELocalServiceSecuritySettings#14](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#14)]"
  syntax:
    content: public TimeSpan SessionKeyRolloverInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "The time interval after key renewal for which the previous session key is valid on incoming messages after a key renewal. The default is 5 minutes."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  id: TimestampValidityDuration
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  langs:
  - csharp
  name: TimestampValidityDuration
  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the maximum duration of time that messages are valid when sent by the service. If the client receives the service&quot;s message after this duration, it discards the message."
  remarks: ''
  example:
  - "This example shows how to get the `TimestampValidityDuration` value.  \n  \n [!code-vb[S_UELocalServiceSecuritySettings#15](~/add/codesnippet/visualbasic/s_uelocalservicesecuritysettings.cs/program.vb#15)]\n [!code-cs[S_UELocalServiceSecuritySettings#15](~/add/codesnippet/csharp/s_uelocalservicesecuritysettings.cs/program.cs#15)]"
  syntax:
    content: public TimeSpan TimestampValidityDuration { get; set; }
    return:
      type: System.TimeSpan
      description: "The maximum duration of time that messages are valid when sent by the service. The default is 5 minutes."
  overload: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property is set to a value less than 0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: LocalServiceSecuritySettings()
  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.LocalServiceSecuritySettings()
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: Clone()
  nameWithType: LocalServiceSecuritySettings.Clone()
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone()
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings
  parent: System.ServiceModel.Channels
  isExternal: false
  name: LocalServiceSecuritySettings
  nameWithType: LocalServiceSecuritySettings
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: DetectReplays
  nameWithType: LocalServiceSecuritySettings.DetectReplays
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: InactivityTimeout
  nameWithType: LocalServiceSecuritySettings.InactivityTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: IssuedCookieLifetime
  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxCachedCookies
  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxClockSkew
  nameWithType: LocalServiceSecuritySettings.MaxClockSkew
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxPendingSessions
  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxStatefulNegotiations
  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NegotiationTimeout
  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NonceCache
  nameWithType: LocalServiceSecuritySettings.NonceCache
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache
- uid: System.ServiceModel.Security.NonceCache
  parent: System.ServiceModel.Security
  isExternal: false
  name: NonceCache
  nameWithType: NonceCache
  fullName: System.ServiceModel.Security.NonceCache
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReconnectTransportOnFailure
  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayCacheSize
  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayWindow
  nameWithType: LocalServiceSecuritySettings.ReplayWindow
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRenewalInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRolloverInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: TimestampValidityDuration
  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration
  fullName: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: LocalServiceSecuritySettings
  nameWithType: LocalServiceSecuritySettings.LocalServiceSecuritySettings
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: Clone
  nameWithType: LocalServiceSecuritySettings.Clone
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: DetectReplays
  nameWithType: LocalServiceSecuritySettings.DetectReplays
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: InactivityTimeout
  nameWithType: LocalServiceSecuritySettings.InactivityTimeout
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: IssuedCookieLifetime
  nameWithType: LocalServiceSecuritySettings.IssuedCookieLifetime
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxCachedCookies
  nameWithType: LocalServiceSecuritySettings.MaxCachedCookies
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxClockSkew
  nameWithType: LocalServiceSecuritySettings.MaxClockSkew
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxPendingSessions
  nameWithType: LocalServiceSecuritySettings.MaxPendingSessions
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: MaxStatefulNegotiations
  nameWithType: LocalServiceSecuritySettings.MaxStatefulNegotiations
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NegotiationTimeout
  nameWithType: LocalServiceSecuritySettings.NegotiationTimeout
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: NonceCache
  nameWithType: LocalServiceSecuritySettings.NonceCache
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReconnectTransportOnFailure
  nameWithType: LocalServiceSecuritySettings.ReconnectTransportOnFailure
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayCacheSize
  nameWithType: LocalServiceSecuritySettings.ReplayCacheSize
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: ReplayWindow
  nameWithType: LocalServiceSecuritySettings.ReplayWindow
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRenewalInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRenewalInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: SessionKeyRolloverInterval
  nameWithType: LocalServiceSecuritySettings.SessionKeyRolloverInterval
- uid: System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration*
  parent: System.ServiceModel.Channels.LocalServiceSecuritySettings
  isExternal: false
  name: TimestampValidityDuration
  nameWithType: LocalServiceSecuritySettings.TimestampValidityDuration
