### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  id: SqlBulkCopyColumnMappingCollection
  children:
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: SqlBulkCopyColumnMappingCollection
  nameWithType: SqlBulkCopyColumnMappingCollection
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  type: Class
  summary: "Collection of <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> objects that inherits from <xref href=&quot;System.Collections.CollectionBase&quot;></xref>."
  remarks: "Column mappings define the mapping between data source and the target table.       If mappings are not defined—that is, the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is empty—the columns are mapped implicitly based on ordinal position. For this to work, source and target schemas must match. If they do not, an <xref:System.InvalidOperationException> is thrown.       If the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is not empty, not every column present in the data source has to be specified. Those not mapped by the collection are ignored.       You can refer to source and target columns by either name or ordinal. You can mix by-name and by-ordinal column references in the same mappings collection."
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> are added to the SqlBulkCopyColumnMappingCollection for the <xref:System.Data.SqlClient.SqlBulkCopy> object to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/csharp/t-system.data.sqlclient._16_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._16_1.vb)]"
  syntax:
    content: 'public sealed class SqlBulkCopyColumnMappingCollection : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Adds the specified mapping to the <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;></xref>."
  remarks: ''
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/add/codesnippet/visualbasic/c6b72204-08c1-4b6a-883f-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMapping#1](~/add/codesnippet/csharp/c6b72204-08c1-4b6a-883f-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (System.Data.SqlClient.SqlBulkCopyColumnMapping bulkCopyColumnMapping);
    parameters:
    - id: bulkCopyColumnMapping
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "The <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object that describes the mapping to be added to the collection."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)
  id: Add(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(Int32,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates a new <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> and adds it to the collection, using ordinals to specify both source and destination columns."
  remarks: 'Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy using the ordinal position of the source and destination columns.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal#1](~/add/codesnippet/visualbasic/57914c2f-2bf9-43fe-9e88-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal#1](~/add/codesnippet/csharp/57914c2f-2bf9-43fe-9e88-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, int destinationColumnIndex);
    parameters:
    - id: sourceColumnIndex
      type: System.Int32
      description: "The ordinal position of the source column within the data source."
    - id: destinationColumnIndex
      type: System.Int32
      description: "The ordinal position of the destination column within the destination table."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A column mapping."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)
  id: Add(System.Int32,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(Int32,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates a new <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> and adds it to the collection, using an ordinal for the source column and a string for the destination column."
  remarks: 'Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingIndexColName#1](~/add/codesnippet/visualbasic/624e3b12-cb57-41a7-81b7-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingIndexColName#1](~/add/codesnippet/csharp/624e3b12-cb57-41a7-81b7-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, string destinationColumn);
    parameters:
    - id: sourceColumnIndex
      type: System.Int32
      description: "The ordinal position of the source column within the data source."
    - id: destinationColumn
      type: System.String
      description: "The name of the destination column within the destination table."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A column mapping."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)
  id: Add(System.String,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(String,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates a new <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> and adds it to the collection, using a column name to describe the source column and an ordinal to specify the destination column."
  remarks: 'Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingColNameIndex#1](~/add/codesnippet/csharp/cd5c991c-ee05-4daf-bff5-_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingColNameIndex#1](~/add/codesnippet/visualbasic/cd5c991c-ee05-4daf-bff5-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, int destinationColumnIndex);
    parameters:
    - id: sourceColumn
      type: System.String
      description: "The name of the source column within the data source."
    - id: destinationColumnIndex
      type: System.Int32
      description: "The ordinal position of the destination column within the destination table."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A column mapping."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Creates a new <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> and adds it to the collection, using column names to specify both source and destination columns."
  remarks: 'Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. The code creates a <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> object by specifying the column names.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/csharp/3c1a773a-29ff-4775-932b-_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/visualbasic/3c1a773a-29ff-4775-932b-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, string destinationColumn);
    parameters:
    - id: sourceColumn
      type: System.String
      description: "The name of the source column within the data source."
    - id: destinationColumn
      type: System.String
      description: "The name of the destination column within the destination table."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A column mapping."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear
  id: Clear
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: SqlBulkCopyColumnMappingCollection.Clear()
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Clears the contents of the collection."
  remarks: "The Clear method is most commonly used when you use a single <xref:System.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation. If you create column mappings for one bulk copy operation, you must clear the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection> after the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method and before processing the next bulk copy.       Performing several bulk copies using the same <xref:System.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:System.Data.SqlClient.SqlBulkCopy> for each operation."
  example:
  - "The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation. The Clear method must be used after the first bulk copy is performed and before the next bulk copy's column mappings are defined.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._19_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails#1](~/add/codesnippet/csharp/m-system.data.sqlclient._19_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Contains(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets a value indicating whether a specified <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object exists in the collection."
  syntax:
    content: public bool Contains (System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A valid <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified mapping exists in the collection; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  id: CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: CopyTo(SqlBulkCopyColumnMapping[],Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Copies the elements of the <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;></xref> to an array of <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> items, starting at a particular index."
  syntax:
    content: public void CopyTo (System.Data.SqlClient.SqlBulkCopyColumnMapping[] array, int index);
    parameters:
    - id: array
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping[]
      description: "The one-dimensional <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> array that is the destination of the elements copied from <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;></xref>. The array must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: IndexOf(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the index of the specified <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object."
  syntax:
    content: public int IndexOf (System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "The <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object for which to search."
    return:
      type: System.Int32
      description: "The zero-based index of the column mapping, or -1 if the column mapping is not found in the collection."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Insert(Int32,SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Insert a new <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> at the index specified."
  syntax:
    content: public void Insert (int index, System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: index
      type: System.Int32
      description: "Integer value of the location within the <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;></xref> at which to insert the new <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref>."
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "<xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object to be inserted in the collection."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Item(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object at the specified index."
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> to find."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Remove(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Removes the specified <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> element from the <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;></xref>."
  remarks: "The Remove method is most commonly used when you use a single <xref:System.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation. If you create column mappings for one bulk copy operation, you must remove mappings that no longer apply after the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called and before defining mapping for the next bulk copy. You can clear the entire collection by using the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method, or remove mappings individually using the Remove method or the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> method.       Performing several bulk copies using the same <xref:System.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:System.Data.SqlClient.SqlBulkCopy> for each operation."
  example:
  - "The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation. Both bulk copies include a mapping for the **SalesOrderID**, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the **SalesOrderID** mapping and then adds the appropriate mappings for the second bulk copy operation.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemove#1](~/add/codesnippet/visualbasic/8b01386c-32fb-4d89-92c6-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingRemove#1](~/add/codesnippet/csharp/8b01386c-32fb-4d89-92c6-_1.cs)]"
  syntax:
    content: public void Remove (System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "<xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object to be removed from the collection."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Removes the mapping at the specified index from the collection."
  remarks: "The RemoveAt method is most commonly used when you use a single <xref:System.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation. If you create column mappings for one bulk copy operation, you must remove mappings that no longer apply after the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called and before defining mapping for the next bulk copy. You can clear the entire collection by using the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method, or remove mappings individually using the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> method or the RemoveAt method.       Performing several bulk copies using the same <xref:System.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:System.Data.SqlClient.SqlBulkCopy> for each operation."
  example:
  - "The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation. Both bulk copies include a mapping for the **SalesOrderID**, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the **SalesOrderID** mapping and then adds the appropriate mappings for the second bulk copy operation.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemoveAt#1](~/add/codesnippet/visualbasic/69041426-a8e9-44a0-bd07-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingRemoveAt#1](~/add/codesnippet/csharp/69041426-a8e9-44a0-bd07-_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object to be removed from the collection."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMapping
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyColumnMapping
  nameWithType: SqlBulkCopyColumnMapping
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMapping
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(Int32,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(Int32,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(String,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,String)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Clear()
  nameWithType: SqlBulkCopyColumnMappingCollection.Clear()
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear()
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Contains(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: CopyTo(SqlBulkCopyColumnMapping[],Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMapping[]
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyColumnMapping
  nameWithType: SqlBulkCopyColumnMapping
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMapping[]
  spec.csharp:
  - uid: System.Data.SqlClient.SqlBulkCopyColumnMapping
    name: SqlBulkCopyColumnMapping
    nameWithType: SqlBulkCopyColumnMapping
    fullName: SqlBulkCopyColumnMapping[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: IndexOf(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Insert(Int32,SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Item(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Remove(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add
  nameWithType: SqlBulkCopyColumnMappingCollection.Add
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Clear
  nameWithType: SqlBulkCopyColumnMappingCollection.Clear
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Contains
  nameWithType: SqlBulkCopyColumnMappingCollection.Contains
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: CopyTo
  nameWithType: SqlBulkCopyColumnMappingCollection.CopyTo
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: SqlBulkCopyColumnMappingCollection.IndexOf
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Insert
  nameWithType: SqlBulkCopyColumnMappingCollection.Insert
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Item
  nameWithType: SqlBulkCopyColumnMappingCollection.Item
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Remove
  nameWithType: SqlBulkCopyColumnMappingCollection.Remove
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: SqlBulkCopyColumnMappingCollection.RemoveAt
